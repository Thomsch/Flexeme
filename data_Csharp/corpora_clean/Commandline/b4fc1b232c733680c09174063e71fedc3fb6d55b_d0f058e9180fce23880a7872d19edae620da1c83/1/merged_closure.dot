digraph  {
n93 [label="CommandLine.Error", span=""];
n94 [label="CommandLine.TokenError", span=""];
n95 [label="CommandLine.NamedError", span=""];
n96 [label="CommandLine.MutuallyExclusiveSetError", span=""];
n97 [label="CommandLine.HelpVerbRequestedError", span=""];
n0 [cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)", label="Entry CommandLine.Error.Error(CommandLine.ErrorType, bool)", span="79-79"];
n1 [cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)", label="this.tag = tag", span="81-81"];
n2 [cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)", label="this.stopsProcessing = stopsProcessing", span="82-82"];
n3 [cluster="CommandLine.Error.Error(CommandLine.ErrorType, bool)", label="Exit CommandLine.Error.Error(CommandLine.ErrorType, bool)", span="79-79"];
n4 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="Entry CommandLine.Error.Error(CommandLine.ErrorType)", span="89-89"];
n5 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="Exit CommandLine.Error.Error(CommandLine.ErrorType)", span="89-89"];
n6 [cluster="CommandLine.Error.Equals(object)", label="Entry CommandLine.Error.Equals(object)", span="112-112"];
n7 [cluster="CommandLine.Error.Equals(object)", label="var other = obj as Error", span="114-114"];
n10 [cluster="CommandLine.Error.Equals(object)", label="return base.Equals(obj);", span="120-120"];
n8 [cluster="CommandLine.Error.Equals(object)", label="other != null", span="115-115"];
n9 [cluster="CommandLine.Error.Equals(object)", label="return Equals(other);", span="117-117"];
n11 [cluster="CommandLine.Error.Equals(object)", label="Exit CommandLine.Error.Equals(object)", span="112-112"];
n12 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="Entry CommandLine.Error.Equals(CommandLine.Error)", span="137-137"];
n13 [cluster="object.Equals(object)", label="Entry object.Equals(object)", span="0-0"];
n14 [cluster="CommandLine.Error.GetHashCode()", label="Entry CommandLine.Error.GetHashCode()", span="127-127"];
n16 [cluster="CommandLine.Error.GetHashCode()", label="Exit CommandLine.Error.GetHashCode()", span="127-127"];
n17 [cluster="System.Enum.GetHashCode()", label="Entry System.Enum.GetHashCode()", span="0-0"];
n18 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="other == null", span="139-139"];
n20 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="return Tag.Equals(other.Tag);", span="144-144"];
n19 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="return false;", span="141-141"];
n21 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="Exit CommandLine.Error.Equals(CommandLine.Error)", span="137-137"];
n22 [cluster="System.Enum.Equals(object)", label="Entry System.Enum.Equals(object)", span="0-0"];
n23 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="Entry CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="155-155"];
n24 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="token == null", span="158-158"];
n26 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="this.token = token", span="160-160"];
n25 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="throw new ArgumentNullException(''token'');", span="158-158"];
n27 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="Exit CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="155-155"];
n28 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n29 [cluster="CommandLine.TokenError.Equals(object)", label="Entry CommandLine.TokenError.Equals(object)", span="176-176"];
n30 [cluster="CommandLine.TokenError.Equals(object)", label="var other = obj as TokenError", span="178-178"];
n33 [cluster="CommandLine.TokenError.Equals(object)", label="return base.Equals(obj);", span="184-184"];
n31 [cluster="CommandLine.TokenError.Equals(object)", label="other != null", span="179-179"];
n32 [cluster="CommandLine.TokenError.Equals(object)", label="return Equals(other);", span="181-181"];
n34 [cluster="CommandLine.TokenError.Equals(object)", label="Exit CommandLine.TokenError.Equals(object)", span="176-176"];
n35 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="Entry CommandLine.TokenError.Equals(CommandLine.TokenError)", span="201-201"];
n36 [cluster="CommandLine.TokenError.GetHashCode()", label="Entry CommandLine.TokenError.GetHashCode()", span="191-191"];
n38 [cluster="CommandLine.TokenError.GetHashCode()", label="Exit CommandLine.TokenError.GetHashCode()", span="191-191"];
n39 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n40 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="other == null", span="203-203"];
n42 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="return Tag.Equals(other.Tag) && Token.Equals(other.Token);", span="208-208"];
n41 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="return false;", span="205-205"];
n43 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="Exit CommandLine.TokenError.Equals(CommandLine.TokenError)", span="201-201"];
n44 [cluster="string.Equals(string)", label="Entry string.Equals(string)", span="0-0"];
n45 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="217-217"];
n46 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", label="Exit CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="217-217"];
n47 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="Entry CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="230-230"];
n48 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="this.nameInfo = nameInfo", span="233-233"];
n49 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="Exit CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="230-230"];
n50 [cluster="CommandLine.NamedError.Equals(object)", label="Entry CommandLine.NamedError.Equals(object)", span="249-249"];
n51 [cluster="CommandLine.NamedError.Equals(object)", label="var other = obj as NamedError", span="251-251"];
n54 [cluster="CommandLine.NamedError.Equals(object)", label="return base.Equals(obj);", span="257-257"];
n52 [cluster="CommandLine.NamedError.Equals(object)", label="other != null", span="252-252"];
n53 [cluster="CommandLine.NamedError.Equals(object)", label="return Equals(other);", span="254-254"];
n55 [cluster="CommandLine.NamedError.Equals(object)", label="Exit CommandLine.NamedError.Equals(object)", span="249-249"];
n56 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="Entry CommandLine.NamedError.Equals(CommandLine.NamedError)", span="274-274"];
n57 [cluster="CommandLine.NamedError.GetHashCode()", label="Entry CommandLine.NamedError.GetHashCode()", span="264-264"];
n58 [cluster="CommandLine.NamedError.GetHashCode()", label="return new {Tag, NameInfo}.GetHashCode();", span="266-266"];
n59 [cluster="CommandLine.NamedError.GetHashCode()", label="Exit CommandLine.NamedError.GetHashCode()", span="264-264"];
n60 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="other == null", span="276-276"];
n62 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="return Tag.Equals(other.Tag) && NameInfo.Equals(other.NameInfo);", span="281-281"];
n61 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="return false;", span="278-278"];
n63 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="Exit CommandLine.NamedError.Equals(CommandLine.NamedError)", span="274-274"];
n64 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
n65 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="290-290"];
n66 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", label="Exit CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="290-290"];
n67 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="301-301"];
n68 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", label="Exit CommandLine.UnknownOptionError.UnknownOptionError(string)", span="301-301"];
n69 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="312-312"];
n70 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", label="Exit CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="312-312"];
n71 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="325-325"];
n72 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", label="this.setName = setName", span="328-328"];
n73 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", label="Exit CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="325-325"];
n74 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="345-345"];
n75 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", label="Exit CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="345-345"];
n76 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="356-356"];
n77 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", label="Exit CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="356-356"];
n78 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="367-367"];
n79 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", label="Exit CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="367-367"];
n80 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="378-378"];
n81 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", label="Exit CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="378-378"];
n82 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="389-389"];
n83 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", label="Exit CommandLine.HelpRequestedError.HelpRequestedError()", span="389-389"];
n84 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="404-404"];
n85 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="this.verb = verb", span="407-407"];
n86 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="this.type = type", span="408-408"];
n87 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="this.matched = matched", span="409-409"];
n88 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", label="Exit CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="404-404"];
n89 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="442-442"];
n90 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", label="Exit CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="442-442"];
n91 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="453-453"];
n92 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", label="Exit CommandLine.VersionRequestedError.VersionRequestedError()", span="453-453"];
d15 [cluster="CommandLine.Error.GetHashCode()", color=green, community=0, label="return Tag.GetHashCode();", prediction=0, span="129-129"];
d37 [cluster="CommandLine.TokenError.GetHashCode()", color=green, community=0, label="return new {Tag, StopsProcessing, Token}.GetHashCode();", prediction=1, span="193-193"];
m0_0 [cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", file="HelpText.cs", label="Entry CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", span="45-45"];
m0_1 [cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", file="HelpText.cs", label="_option = option", span="47-47"];
m0_2 [cluster="CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", file="HelpText.cs", label="Exit CommandLine.Text.FormatOptionHelpTextEventArgs.FormatOptionHelpTextEventArgs(CommandLine.BaseOptionAttribute)", span="45-45"];
m0_3 [file="HelpText.cs", label="CommandLine.Text.FormatOptionHelpTextEventArgs", span=""];
n93 -> n9  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n93 -> n10  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n93 -> n20  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n93 -> d15  [color=green, key=1, label="CommandLine.Error", style=dashed];
n94 -> n32  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n94 -> n33  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n94 -> n42  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n94 -> d37  [color=green, key=1, label="CommandLine.TokenError", style=dashed];
n95 -> n53  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n95 -> n54  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n95 -> n58  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n95 -> n62  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
n6 -> n10  [color=darkseagreen4, key=1, label=object, style=dashed];
n7 -> n9  [color=darkseagreen4, key=1, label=other, style=dashed];
n12 -> n20  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
n29 -> n33  [color=darkseagreen4, key=1, label=object, style=dashed];
n30 -> n32  [color=darkseagreen4, key=1, label=other, style=dashed];
n35 -> n42  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
n50 -> n54  [color=darkseagreen4, key=1, label=object, style=dashed];
n51 -> n53  [color=darkseagreen4, key=1, label=other, style=dashed];
n56 -> n62  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
}
