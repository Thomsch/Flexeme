digraph  {
m0_31 [label="Entry CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="73-73", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_32 [label="return token.Tag == TokenType.Value;", span="75-75", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_33 [label="Exit CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="73-73", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_12 [label="other != null", span="42-42", cluster="CommandLine.Core.Token.Equals(object)", file="InstanceBuilderTests.cs"];
m0_15 [label="Exit CommandLine.Core.Token.Equals(object)", span="39-39", cluster="CommandLine.Core.Token.Equals(object)", color=green, community=0, file="InstanceBuilderTests.cs"];
m0_14 [label="return base.Equals(obj);", span="47-47", cluster="CommandLine.Core.Token.Equals(object)", file="InstanceBuilderTests.cs"];
m0_13 [label="return this.Equals(other);", span="44-44", cluster="CommandLine.Core.Token.Equals(object)", file="InstanceBuilderTests.cs"];
m0_16 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_17 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="InstanceBuilderTests.cs"];
m0_28 [label="Entry CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_29 [label="return token.Tag == TokenType.Name;", span="70-70", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_30 [label="Exit CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_23 [label="return false;", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_18 [label="Entry CommandLine.Core.Token.GetHashCode()", span="50-50", cluster="CommandLine.Core.Token.GetHashCode()", file="InstanceBuilderTests.cs"];
m0_19 [label="return new {this.Tag, this.Text}.GetHashCode();", span="52-52", cluster="CommandLine.Core.Token.GetHashCode()", file="InstanceBuilderTests.cs"];
m0_21 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="InstanceBuilderTests.cs"];
m0_0 [label="Entry CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="InstanceBuilderTests.cs"];
m0_1 [label="this.tag = tag", span="15-15", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="InstanceBuilderTests.cs"];
m0_2 [label="this.text = text", span="16-16", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="InstanceBuilderTests.cs"];
m0_3 [label="Exit CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="InstanceBuilderTests.cs"];
m0_20 [label="Exit CommandLine.Core.Token.GetHashCode()", span="50-50", cluster="CommandLine.Core.Token.GetHashCode()", file="InstanceBuilderTests.cs"];
m0_26 [label="Entry System.Enum.Equals(object)", span="0-0", cluster="System.Enum.Equals(object)", file="InstanceBuilderTests.cs"];
m0_27 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="InstanceBuilderTests.cs"];
m0_22 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InstanceBuilderTests.cs"];
m0_24 [label="return this.Tag.Equals(other.Tag) && this.Text.Equals(other.Text);", span="62-62", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_25 [label="Exit CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="InstanceBuilderTests.cs"];
m0_4 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="InstanceBuilderTests.cs"];
m0_5 [label="return new Token(TokenType.Name, text);", span="21-21", cluster="CommandLine.Core.Token.Name(string)", file="InstanceBuilderTests.cs"];
m0_6 [label="Exit CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="InstanceBuilderTests.cs"];
m0_7 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="InstanceBuilderTests.cs"];
m0_8 [label="return new Token(TokenType.Value, text);", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="InstanceBuilderTests.cs"];
m0_9 [label="Exit CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="InstanceBuilderTests.cs"];
m0_10 [label="Entry CommandLine.Core.Token.Equals(object)", span="39-39", cluster="CommandLine.Core.Token.Equals(object)", file="InstanceBuilderTests.cs"];
m0_11 [label="var other = obj as Token", span="41-41", cluster="CommandLine.Core.Token.Equals(object)", file="InstanceBuilderTests.cs"];
m0_34 [label="CommandLine.Core.Token", span="", file="InstanceBuilderTests.cs"];
m1_38 [label="Entry System.Type.GetVerbSpecification()", span="27-27", cluster="System.Type.GetVerbSpecification()", file="Parser.cs"];
m1_46 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="Parser.cs"];
m1_124 [label="Entry Unk.doubQt", span="", cluster="Unk.doubQt", file="Parser.cs"];
m1_149 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="Parser.cs"];
m1_4 [label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61", cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="Parser.cs"];
m1_5 [label="return new UnParserSettings { UseEqualToken = true };", span="63-63", cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="Parser.cs"];
m1_6 [label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61", cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="Parser.cs"];
m1_126 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="Parser.cs"];
m1_127 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="196-197", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", color=red, community=0, file="Parser.cs"];
m1_128 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="Parser.cs"];
m1_88 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_89 [label="var builder = new StringBuilder()", span="164-164", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_90 [label="spec.TargetType", span="165-165", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_92 [label="builder.Append(FormatWithQuotesIfString(value))", span="168-168", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_94 [label="var sep = spec.SeperatorOrSpace()", span="171-171", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_96 [label="var e = ((IEnumerable)value).GetEnumerator()", span="174-174", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_98 [label="builder.Append(format(e.Current)).Append(sep)", span="176-176", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_99 [label="builder.TrimEndIfMatch(' ')", span="177-177", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_100 [label="return builder.ToString();", span="180-180", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_91 [label="TargetType.Scalar", span="167-167", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_93 [label="TargetType.Sequence", span="170-170", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_95 [label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="172-173", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_97 [label="e.MoveNext()", span="175-175", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_101 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="Parser.cs"];
m1_35 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Parser.cs"];
m1_105 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="Parser.cs"];
m1_45 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Parser.cs"];
m1_41 [label="Entry object.IsEmpty()", span="233-233", cluster="object.IsEmpty()", file="Parser.cs"];
m1_107 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Parser.cs"];
m1_137 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs"];
m1_138 [label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="210-212", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs"];
m1_139 [label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken && optionSpec.ConversionType != typeof(bool), ''='', '' '')\r\n                    .ToString();", span="214-219", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs"];
m1_140 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="Parser.cs"];
m1_151 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_152 [label="value == null", span="235-235", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_154 [label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="236-236", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_156 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="237-237", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_158 [label="value is string && ((string)value).Length == 0", span="238-238", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_160 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="239-239", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_153 [label="return true;", span="235-235", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_155 [label="return true;", span="236-236", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_157 [label="return true;", span="237-237", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_159 [label="return true;", span="238-238", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_161 [label="return true;", span="239-239", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_162 [label="return false;", span="240-240", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_163 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="Parser.cs"];
m1_43 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Parser.cs"];
m1_142 [label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34", cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="Parser.cs"];
m1_52 [label="Entry Unk.TrimEndIfMatchWhen", span="", cluster="Unk.TrimEndIfMatchWhen", file="Parser.cs"];
m1_120 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="Parser.cs"];
m1_40 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="Parser.cs"];
m1_72 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="Parser.cs"];
m1_115 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="Parser.cs"];
m1_119 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="Parser.cs"];
m1_36 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="Parser.cs"];
m1_129 [label="Entry lambda expression", span="197-197", cluster="lambda expression", file="Parser.cs"];
m1_11 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="Parser.cs"];
m1_12 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="Parser.cs"];
m1_61 [label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="112-113", cluster="lambda expression", file="Parser.cs"];
m1_80 [label="builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')", span="148-151", cluster="lambda expression", file="Parser.cs"];
m1_57 [label="builder.Append(verb.Name).Append(' ')", span="107-107", cluster="lambda expression", file="Parser.cs"];
m1_56 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="Parser.cs"];
m1_60 [label="Entry lambda expression", span="112-113", cluster="lambda expression", file="Parser.cs"];
m1_66 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="Parser.cs"];
m1_70 [label="!shortSwitches.Contains(info)", span="132-132", cluster="lambda expression", file="Parser.cs"];
m1_69 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="Parser.cs"];
m1_73 [label="Entry lambda expression", span="135-135", cluster="lambda expression", file="Parser.cs"];
m1_76 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="Parser.cs"];
m1_85 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="156-156", cluster="lambda expression", file="Parser.cs"];
m1_79 [label="Entry lambda expression", span="147-151", cluster="lambda expression", file="Parser.cs"];
m1_84 [label="Entry lambda expression", span="156-156", cluster="lambda expression", file="Parser.cs"];
m1_58 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="Parser.cs"];
m1_62 [label="Exit lambda expression", span="112-113", cluster="lambda expression", file="Parser.cs"];
m1_67 [label="i.Specification.Tag == SpecificationType.Option", span="118-118", cluster="lambda expression", file="Parser.cs"];
m1_68 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="Parser.cs"];
m1_71 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="Parser.cs"];
m1_74 [label="i.Specification.Tag == SpecificationType.Value", span="135-135", cluster="lambda expression", file="Parser.cs"];
m1_75 [label="Exit lambda expression", span="135-135", cluster="lambda expression", file="Parser.cs"];
m1_77 [label="((OptionSpecification)info.Specification).ShortName", span="142-142", cluster="lambda expression", file="Parser.cs"];
m1_78 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="Parser.cs"];
m1_81 [label="Exit lambda expression", span="147-151", cluster="lambda expression", file="Parser.cs"];
m1_86 [label="Exit lambda expression", span="156-156", cluster="lambda expression", file="Parser.cs"];
m1_110 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="173-173", cluster="lambda expression", file="Parser.cs"];
m1_109 [label="Entry lambda expression", span="172-173", cluster="lambda expression", file="Parser.cs"];
m1_111 [label="Exit lambda expression", span="172-173", cluster="lambda expression", file="Parser.cs"];
m1_117 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="186-186", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m1_122 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="190-191", cluster="lambda expression", file="Parser.cs"];
m1_121 [label="Entry lambda expression", span="190-191", cluster="lambda expression", file="Parser.cs"];
m1_116 [label="Entry lambda expression", span="185-186", cluster="lambda expression", file="Parser.cs"];
m1_118 [label="Exit lambda expression", span="185-186", cluster="lambda expression", file="Parser.cs"];
m1_123 [label="Exit lambda expression", span="190-191", cluster="lambda expression", file="Parser.cs"];
m1_130 [label="o.Separator != '\0' ? o.Separator : ' '", span="197-197", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m1_131 [label="Exit lambda expression", span="197-197", cluster="lambda expression", file="Parser.cs"];
m1_136 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="Parser.cs"];
m1_55 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="Parser.cs"];
m1_108 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="Parser.cs"];
m1_148 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="Parser.cs"];
m1_51 [label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101", cluster="System.Text.StringBuilder.TrailingSpaces()", file="Parser.cs"];
m1_59 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="Parser.cs"];
m1_47 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Parser.cs"];
m1_164 [label="Entry System.Type.GetDefaultValue()", span="130-130", cluster="System.Type.GetDefaultValue()", file="Parser.cs"];
m1_87 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="Parser.cs"];
m1_42 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="Parser.cs"];
m1_83 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="Parser.cs"];
m1_44 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="Parser.cs"];
m1_150 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="Parser.cs"];
m1_125 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="Parser.cs"];
m1_65 [label="Entry object.NormalizeValue()", span="222-222", cluster="object.NormalizeValue()", file="Parser.cs"];
m1_39 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="Parser.cs"];
m1_54 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="Parser.cs"];
m1_104 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="194-194", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="Parser.cs"];
m1_50 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="Parser.cs"];
m1_135 [label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="208-208", cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="Parser.cs"];
m1_102 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="Parser.cs"];
m1_112 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="185-186", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", color=red, community=0, file="Parser.cs"];
m1_113 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="188-191", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", color=red, community=0, file="Parser.cs"];
m1_114 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="Parser.cs"];
m1_0 [label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52", cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="Parser.cs"];
m1_1 [label="return new UnParserSettings { GroupSwitches = true };", span="54-54", cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="Parser.cs"];
m1_2 [label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52", cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="Parser.cs"];
m1_53 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="Parser.cs"];
m1_103 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="Parser.cs"];
m1_49 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="Parser.cs"];
m1_10 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_141 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="Parser.cs"];
m1_37 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="Parser.cs"];
m1_3 [label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15", cluster="CommandLine.UnParserSettings.UnParserSettings()", file="Parser.cs"];
m1_165 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="Parser.cs"];
m1_106 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="Parser.cs"];
m1_82 [label="Entry System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", span="94-94", cluster="System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", file="Parser.cs"];
m1_13 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_14 [label="options == null", span="97-97", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_17 [label="configuration(settings)", span="100-100", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_19 [label="var type = options.GetType()", span="103-103", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_22 [label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="109-116", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_15 [label="throw new ArgumentNullException(''options'');", span="97-97", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_16 [label="var settings = new UnParserSettings()", span="99-99", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=red, community=0, file="Parser.cs"];
m1_18 [label="settings.Consumed = true", span="101-101", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_25 [label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="131-133", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_27 [label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="140-143", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_29 [label="optSpecs.ForEach(\r\n                opt =>\r\n                    builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')\r\n                )", span="146-152", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_20 [label="var builder = new StringBuilder()", span="104-104", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_21 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="106-107", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_23 [label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="118-122", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_26 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="135-138", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_24 [label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="124-129", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=red, community=0, file="Parser.cs"];
m1_28 [label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="144-145", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_30 [label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="153-154", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=red, community=0, file="Parser.cs"];
m1_31 [label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="155-156", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_32 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="158-159", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_33 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="Parser.cs"];
m1_48 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="Parser.cs"];
m1_132 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="Parser.cs"];
m1_133 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="202-205", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="Parser.cs"];
m1_134 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="Parser.cs"];
m1_63 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Parser.cs"];
m1_34 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs"];
m1_7 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="Parser.cs"];
m1_8 [label="return parser.FormatCommandLine(options, config => {});", span="83-83", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="Parser.cs"];
m1_9 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="Parser.cs"];
m1_64 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="Parser.cs"];
m1_143 [label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs"];
m1_144 [label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="224-226", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs"];
m1_145 [label="return FSharpOptionHelper.ValueOf(value);", span="228-228", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs"];
m1_146 [label="return value;", span="230-230", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs"];
m1_147 [label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="Parser.cs"];
m1_166 [label=builder, span="", file="Parser.cs"];
m1_167 [label=T, span="", file="Parser.cs"];
m1_168 [label=shortSwitches, span="", file="Parser.cs"];
m1_169 [label=settings, span="", file="Parser.cs"];
m1_170 [label=sep, span="", file="Parser.cs"];
m1_171 [label=doubQt, span="", file="Parser.cs"];
m2_35 [label="Entry CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="78-78", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs"];
m2_31 [label="Entry CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="73-73", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs"];
m2_32 [label="Entry CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="73-73", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m2_33 [label="return token.Tag == TokenType.Name;", span="75-75", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs", color=green, community=0];
m2_36 [label="return token.Tag == TokenType.Value;", span="80-80", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", color=green, community=0, file="Token.cs"];
m2_37 [label="Exit CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="78-78", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs"];
m2_28 [label="Entry CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m2_29 [label="return token.Tag == TokenType.Name;", span="70-70", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m2_30 [label="Exit CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="68-68", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m2_34 [label="CommandLine.Core.Token", span="", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m2_11 [label="var other = obj as Token", span="41-41", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", color=red, community=0];
m2_12 [label="other != null", span="42-42", cluster="CommandLine.Core.Token.Equals(object)", color=green, community=0, file="Token.cs"];
m2_13 [label="return Equals(other);", span="44-44", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m2_21 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="Token.cs"];
m2_0 [label="Entry CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m2_1 [label="this.tag = tag", span="15-15", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m2_2 [label="this.text = text", span="16-16", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m2_3 [label="Exit CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m2_17 [label="return Equals(other);", span="49-49", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", color=green, community=0];
m2_10 [label="Entry CommandLine.Core.Token.Equals(object)", span="39-39", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m2_26 [label="Entry System.Enum.Equals(object)", span="0-0", cluster="System.Enum.Equals(object)", file="Token.cs"];
m2_27 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="Token.cs"];
m2_20 [label="Exit CommandLine.Core.Token.GetHashCode()", span="50-50", cluster="CommandLine.Core.Token.GetHashCode()", file="Token.cs"];
m2_16 [label="other != null", span="47-47", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", color=green, community=0];
m2_22 [label="other == null", span="57-57", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m2_24 [label="return Tag.Equals(other.Tag) && Text.Equals(other.Text);", span="62-62", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m2_23 [label="return false;", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m2_25 [label="Exit CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m2_4 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Token.cs"];
m2_5 [label="return new Token(TokenType.Name, text);", span="21-21", cluster="CommandLine.Core.Token.Name(string)", color=green, community=0, file="Token.cs"];
m2_6 [label="Exit CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Token.cs"];
m2_18 [label="return base.Equals(obj);", span="52-52", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m2_19 [label="Exit CommandLine.Core.Token.Equals(object)", span="44-44", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m2_7 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="Token.cs"];
m2_8 [label="return new Value(text);", span="26-26", cluster="CommandLine.Core.Token.Value(string)", color=green, community=0, file="Token.cs"];
m2_9 [label="Exit CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="Token.cs"];
m2_14 [label="return base.Equals(obj);", span="47-47", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m2_15 [label="var other = obj as Token", span="46-46", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs", color=green, community=0];
m2_38 [label="CommandLine.Core.Token", span="", file="Token.cs"];
m0_31 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_33 -> m0_31  [key=0, style=bold, color=blue];
m0_12 -> m0_15  [key=1, style=dashed, color=green, label="CommandLine.Core.SpecificationProperty"];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m0_12 -> m0_14  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid, color=green];
m0_15 -> m0_19  [key=2, style=dotted, color=green];
m0_15 -> m0_20  [key=2, style=dotted, color=green];
m0_15 -> m0_21  [key=2, style=dotted, color=green];
m0_15 -> m0_22  [key=2, style=dotted, color=green];
m0_15 -> m0_23  [key=2, style=dotted, color=green];
m0_15 -> m0_10  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid, color=green];
m0_14 -> m0_17  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_16  [key=0, style=solid];
m0_13 -> m0_18  [key=2, style=dotted];
m0_13 -> m0_15  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_22  [key=0, style=solid];
m0_16 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m0_17 -> m0_12  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_23 -> m0_25  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [key=0, style=bold, color=blue];
m0_20 -> m0_18  [key=0, style=bold, color=blue];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_24 -> m0_27  [key=2, style=dotted];
m0_25 -> m0_16  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_0  [key=2, style=dotted];
m0_6 -> m0_4  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_0  [key=2, style=dotted];
m0_9 -> m0_7  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=other];
m0_34 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m0_34 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m0_34 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m0_34 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m0_34 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m0_34 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_126 -> m1_127  [key=0, style=solid, color=red];
m1_127 -> m1_128  [key=0, style=solid, color=red];
m1_127 -> m1_115  [key=2, style=dotted, color=red];
m1_127 -> m1_39  [key=2, style=dotted, color=red];
m1_127 -> m1_129  [key=1, style=dashed, color=red, label="lambda expression"];
m1_128 -> m1_126  [key=0, style=bold, color=blue];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_88 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_88 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_88 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_88 -> m1_132  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_37  [key=2, style=dotted];
m1_89 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_89 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_89 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_89 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_93  [key=0, style=solid];
m1_92 -> m1_100  [key=0, style=solid];
m1_92 -> m1_102  [key=2, style=dotted];
m1_92 -> m1_103  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_104  [key=2, style=dotted];
m1_94 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=sep];
m1_94 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=sep];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_105  [key=2, style=dotted];
m1_96 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=e];
m1_98 -> m1_97  [key=0, style=solid];
m1_98 -> m1_107  [key=2, style=dotted];
m1_98 -> m1_103  [key=2, style=dotted];
m1_98 -> m1_46  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_108  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_54  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_95 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=format];
m1_95 -> m1_95  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<object, object> format"];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_99  [key=0, style=solid];
m1_97 -> m1_106  [key=2, style=dotted];
m1_101 -> m1_88  [key=0, style=bold, color=blue];
m1_41 -> m1_152  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m1_41 -> m1_162  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsEmpty"];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_138 -> m1_139  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [key=2, style=dotted];
m1_139 -> m1_125  [key=2, style=dotted];
m1_139 -> m1_142  [key=2, style=dotted];
m1_139 -> m1_54  [key=2, style=dotted];
m1_140 -> m1_137  [key=0, style=bold, color=blue];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_151 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_151 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_151 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_154  [key=0, style=solid];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_156  [key=0, style=solid];
m1_154 -> m1_36  [key=2, style=dotted];
m1_154 -> m1_148  [key=2, style=dotted];
m1_154 -> m1_149  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_158  [key=0, style=solid];
m1_156 -> m1_36  [key=2, style=dotted];
m1_156 -> m1_164  [key=2, style=dotted];
m1_156 -> m1_165  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_160  [key=0, style=solid];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_162  [key=0, style=solid];
m1_160 -> m1_105  [key=2, style=dotted];
m1_160 -> m1_106  [key=2, style=dotted];
m1_153 -> m1_163  [key=0, style=solid];
m1_155 -> m1_163  [key=0, style=solid];
m1_157 -> m1_163  [key=0, style=solid];
m1_159 -> m1_163  [key=0, style=solid];
m1_161 -> m1_163  [key=0, style=solid];
m1_162 -> m1_163  [key=0, style=solid];
m1_163 -> m1_151  [key=0, style=bold, color=blue];
m1_129 -> m1_130  [key=0, style=solid, color=red];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_11  [key=0, style=bold, color=blue];
m1_12 -> m1_116  [key=0, style=bold, color=green];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_63  [key=2, style=dotted];
m1_61 -> m1_64  [key=2, style=dotted];
m1_61 -> m1_65  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_51  [key=2, style=dotted];
m1_80 -> m1_82  [key=2, style=dotted];
m1_80 -> m1_83  [key=2, style=dotted];
m1_80 -> m1_50  [key=2, style=dotted];
m1_80 -> m1_46  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [key=2, style=dotted];
m1_57 -> m1_46  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_66 -> m1_67  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_76 -> m1_77  [key=0, style=solid];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [key=2, style=dotted];
m1_85 -> m1_50  [key=2, style=dotted];
m1_85 -> m1_46  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_58 -> m1_56  [key=0, style=bold, color=blue];
m1_62 -> m1_60  [key=0, style=bold, color=blue];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_66  [key=0, style=bold, color=blue];
m1_71 -> m1_69  [key=0, style=bold, color=blue];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_73  [key=0, style=bold, color=blue];
m1_77 -> m1_78  [key=0, style=solid];
m1_78 -> m1_76  [key=0, style=bold, color=blue];
m1_81 -> m1_79  [key=0, style=bold, color=blue];
m1_86 -> m1_84  [key=0, style=bold, color=blue];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_102  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_111 -> m1_109  [key=0, style=bold, color=blue];
m1_117 -> m1_118  [key=0, style=solid, color=red];
m1_117 -> m1_119  [key=2, style=dotted, color=red];
m1_117 -> m1_120  [key=2, style=dotted, color=red];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_72  [key=2, style=dotted];
m1_122 -> m1_124  [key=2, style=dotted];
m1_122 -> m1_125  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid, color=red];
m1_118 -> m1_116  [key=0, style=bold, color=blue];
m1_123 -> m1_121  [key=0, style=bold, color=blue];
m1_130 -> m1_131  [key=0, style=solid, color=red];
m1_131 -> m1_129  [key=0, style=bold, color=blue];
m1_65 -> m1_65  [key=3, color=darkorchid, style=bold, label="method methodReturn object NormalizeValue"];
m1_135 -> m1_132  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.UnParserSettings settings"];
m1_102 -> m1_112  [key=0, style=solid, color=red];
m1_102 -> m1_113  [key=1, style=dashed, color=red, label=object];
m1_102 -> m1_88  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m1_102 -> m1_95  [key=3, color=darkorchid, style=bold, label="Parameter variable object value"];
m1_112 -> m1_113  [key=0, style=solid, color=red];
m1_112 -> m1_117  [key=1, style=dashed, color=red, label=string];
m1_112 -> m1_122  [key=1, style=dashed, color=red, label=doubQt];
m1_112 -> m1_112  [key=3, color=red, style=bold, label="Local variable System.Func<string, string> doubQt"];
m1_113 -> m1_114  [key=0, style=solid, color=red];
m1_113 -> m1_115  [key=2, style=dotted, color=red];
m1_113 -> m1_39  [key=2, style=dotted, color=red];
m1_113 -> m1_121  [key=1, style=dashed, color=red, label="lambda expression"];
m1_114 -> m1_102  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_10 -> m1_7  [key=3, color=darkorchid, style=bold, label="Parameter variable T options"];
m1_10 -> m1_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Action<CommandLine.UnParserSettings> configuration"];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.UnParserSettings>"];
m1_13 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=T];
m1_13 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=T];
m1_13 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=T];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [key=0, style=solid, color=red];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_35  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_36  [key=2, style=dotted];
m1_19 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_19 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_40  [key=2, style=dotted];
m1_22 -> m1_41  [key=2, style=dotted];
m1_22 -> m1_42  [key=2, style=dotted];
m1_22 -> m1_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_22 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=info];
m1_22 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=specs];
m1_15 -> m1_33  [key=0, style=solid];
m1_15 -> m1_34  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid, color=red];
m1_16 -> m1_3  [key=2, style=dotted, color=red];
m1_16 -> m1_18  [key=1, style=dashed, color=red, label=settings];
m1_16 -> m1_25  [key=1, style=dashed, color=red, label=settings];
m1_16 -> m1_27  [key=1, style=dashed, color=red, label=settings];
m1_16 -> m1_29  [key=1, style=dashed, color=red, label=settings];
m1_16 -> m1_80  [key=1, style=dashed, color=red, label=settings];
m1_18 -> m1_19  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_43  [key=2, style=dotted];
m1_25 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_25 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m1_25 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_45  [key=2, style=dotted];
m1_27 -> m1_46  [key=2, style=dotted];
m1_27 -> m1_47  [key=2, style=dotted];
m1_27 -> m1_48  [key=2, style=dotted];
m1_27 -> m1_49  [key=2, style=dotted];
m1_27 -> m1_50  [key=2, style=dotted];
m1_27 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_27 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_27 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_27 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_27 -> m1_30  [key=1, style=dashed, color=red, label=builder];
m1_27 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_27 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_27 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_29 -> m1_30  [key=0, style=solid, color=red];
m1_29 -> m1_53  [key=2, style=dotted];
m1_29 -> m1_79  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_37  [key=2, style=dotted];
m1_20 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_20 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_38  [key=2, style=dotted];
m1_21 -> m1_39  [key=2, style=dotted];
m1_21 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_23 -> m1_24  [key=0, style=solid, color=red];
m1_23 -> m1_43  [key=2, style=dotted];
m1_23 -> m1_44  [key=2, style=dotted];
m1_23 -> m1_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_23 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label=info];
m1_23 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=allOptSpecs];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_43  [key=2, style=dotted];
m1_26 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_26 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=info];
m1_26 -> m1_30  [key=1, style=dashed, color=red, label=valSpecs];
m1_26 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m1_24 -> m1_25  [key=0, style=solid, color=red];
m1_24 -> m1_44  [key=2, style=dotted, color=red];
m1_24 -> m1_24  [key=1, style=dashed, color=red, label=info];
m1_24 -> m1_70  [key=1, style=dashed, color=red, label=shortSwitches];
m1_24 -> m1_27  [key=1, style=dashed, color=red, label=shortSwitches];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_45  [key=2, style=dotted];
m1_28 -> m1_51  [key=2, style=dotted];
m1_28 -> m1_52  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid, color=red];
m1_30 -> m1_45  [key=2, style=dotted, color=red];
m1_30 -> m1_51  [key=2, style=dotted, color=red];
m1_30 -> m1_52  [key=2, style=dotted, color=red];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_53  [key=2, style=dotted];
m1_31 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_54  [key=2, style=dotted];
m1_32 -> m1_55  [key=2, style=dotted];
m1_33 -> m1_13  [key=0, style=bold, color=blue];
m1_132 -> m1_133  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_37  [key=2, style=dotted];
m1_133 -> m1_135  [key=2, style=dotted];
m1_133 -> m1_50  [key=2, style=dotted];
m1_133 -> m1_88  [key=2, style=dotted];
m1_133 -> m1_136  [key=2, style=dotted];
m1_133 -> m1_54  [key=2, style=dotted];
m1_134 -> m1_132  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_10  [key=3, color=darkorchid, style=bold, label="method methodReturn string FormatCommandLine"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=2, style=dotted];
m1_8 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_9 -> m1_7  [key=0, style=bold, color=blue];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_143 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label=object];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_146  [key=0, style=solid];
m1_144 -> m1_36  [key=2, style=dotted];
m1_144 -> m1_148  [key=2, style=dotted];
m1_144 -> m1_149  [key=2, style=dotted];
m1_145 -> m1_147  [key=0, style=solid];
m1_145 -> m1_150  [key=2, style=dotted];
m1_146 -> m1_147  [key=0, style=solid];
m1_147 -> m1_143  [key=0, style=bold, color=blue];
m1_166 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_166 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_166 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_167 -> m1_61  [key=1, style=dashed, color=darkseagreen4, label=T];
m1_168 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m1_169 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label=settings];
m1_170 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=sep];
m1_171 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m2_35 -> m2_36  [key=0, style=solid, color=green];
m2_31 -> m2_32  [key=0, style=solid];
m2_32 -> m2_33  [key=0, style=solid, color=green];
m2_33 -> m2_31  [key=0, style=bold, color=blue];
m2_33 -> m2_34  [key=0, style=solid, color=green];
m2_36 -> m2_37  [key=0, style=solid, color=green];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m2_34 -> m2_32  [key=0, style=bold, color=blue];
m2_34 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_34 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_34 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_34 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_34 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_34 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_11 -> m2_12  [key=0, style=solid, color=red];
m2_11 -> m2_13  [key=1, style=dashed, color=red, label=other];
m2_12 -> m2_13  [key=0, style=solid, color=green];
m2_12 -> m2_10  [key=2, style=dotted, color=green];
m2_12 -> m2_14  [key=0, style=solid];
m2_13 -> m2_11  [key=0, style=bold, color=blue];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> m2_16  [key=2, style=dotted];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1 -> m2_2  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_0  [key=0, style=bold, color=blue];
m2_17 -> m2_19  [key=0, style=solid, color=green];
m2_17 -> m2_20  [key=2, style=dotted, color=green];
m2_10 -> m2_11  [key=0, style=solid, color=red];
m2_10 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_10 -> m2_16  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m2_10 -> m2_15  [key=0, style=solid, color=green];
m2_10 -> m2_20  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m2_10 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label=object];
m2_20 -> m2_15  [key=3, color=green, style=bold, label="Parameter variable CommandLine.Core.Token other"];
m2_20 -> m2_22  [key=0, style=solid];
m2_20 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_20 -> m2_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_16 -> m2_22  [key=0, style=solid];
m2_16 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_16 -> m2_11  [key=3, color=red, style=bold, label="Parameter variable CommandLine.Core.Token other"];
m2_16 -> m2_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m2_16 -> m2_17  [key=0, style=solid, color=green];
m2_16 -> m2_18  [key=0, style=solid, color=green];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_24  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_24 -> m2_27  [key=2, style=dotted];
m2_23 -> m2_25  [key=0, style=solid];
m2_25 -> m2_16  [key=0, style=bold, color=blue];
m2_25 -> m2_20  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_5 -> m2_6  [key=0, style=solid, color=green];
m2_5 -> m2_0  [key=2, style=dotted, color=green];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_17  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_19 -> m2_10  [key=0, style=bold, color=blue];
m2_7 -> m2_8  [key=0, style=solid, color=green];
m2_8 -> m2_9  [key=0, style=solid, color=green];
m2_8 -> m2_0  [key=2, style=dotted, color=red];
m2_8 -> m2_10  [key=2, style=dotted, color=green];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_17  [key=2, style=dotted];
m2_15 -> m2_10  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid, color=green];
m2_15 -> m2_17  [key=1, style=dashed, color=green, label=other];
m2_38 -> m2_17  [key=1, style=dashed, color=green, label="CommandLine.Core.Token"];
m2_38 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_38 -> m2_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_38 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_38 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m2_38 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
}
