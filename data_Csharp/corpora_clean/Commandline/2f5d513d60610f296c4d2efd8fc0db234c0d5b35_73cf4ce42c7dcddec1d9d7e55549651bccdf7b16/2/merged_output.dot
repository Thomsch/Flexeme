digraph  {
n664 [label="CommandLine.HelpOptionAttribute", span=""];
n665 [label="CommandLine.OptionAttribute", span=""];
n666 [label="CommandLine.OptionListAttribute", span=""];
n667 [label="CommandLine.ValueListAttribute", span=""];
n668 [label="CommandLine.ArgumentParser", span=""];
n669 [label="CommandLine.BadOptionInfo", span=""];
n670 [label="CommandLine.LongOptionParser", span=""];
n671 [label="CommandLine.OneCharStringEnumerator", span=""];
n672 [label="CommandLine.OptionGroupParser", span=""];
n673 [label="CommandLine.OptionInfo", span=""];
n674 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n675 [label="CommandLine.OptionMap", span=""];
n676 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n677 [label="CommandLine.ParsingError", span=""];
n678 [label="CommandLine.PostParsingState", span=""];
n679 [label="CommandLine.StringArrayEnumerator", span=""];
n680 [label="CommandLine.TargetWrapper", span=""];
n681 [label="CommandLine.CommandLineOptionsBase", span=""];
n682 [label="CommandLine.CommandLineParserSettings", span=""];
n683 [label="CommandLine.CommandLineParser", span=""];
n0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="103-103"];
n1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="103-103"];
n2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
n3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, label="0: base.ShortName = shortName", span="116-116"];
n4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, label="1: base.LongName = longName", span="117-117"];
n5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
n6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
n7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="0: text = null", span="134-134"];
n8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="0: var method = pair.Left", span="136-136"];
n11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="1: text = (string)method.Invoke(target, null)", span="140-140"];
n9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="0: !CheckMethodSignature(method)", span="137-137"];
n10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="1: throw new MemberAccessException();", span="138-138"];
n13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
n12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
n15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n14 [cluster="System.MemberAccessException.MemberAccessException()", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
n16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, label="1: return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="145-145"];
n17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
n18 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n19 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="159-159"];
n20 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="159-159"];
n21 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
n22 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="0: !string.IsNullOrEmpty(shortName)", span="183-183"];
n23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="0: _uniqueName = shortName", span="184-184"];
n24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="0: !string.IsNullOrEmpty(longName)", span="185-185"];
n25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="0: _uniqueName = longName", span="186-186"];
n28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="0: base.ShortName = shortName", span="191-191"];
n29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="1: base.LongName = longName", span="192-192"];
n31 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="0: _uniqueName == null", span="188-188"];
n27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="1: throw new InvalidOperationException();", span="189-189"];
n30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
n32 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
n33 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="235-235"];
n34 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="235-235"];
n35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246"];
n36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=red, community=0, label="1: Separator = separator", span="249-249"];
n37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246"];
n38 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270"];
n39 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=red, community=0, label="1: MaximumElements = -1", span="272-272"];
n40 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270"];
n41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280"];
n42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="0: concreteType == null", span="283-283"];
n44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="0: !typeof(IList<string>).IsAssignableFrom(concreteType)", span="286-286"];
n46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="1: _concreteType = concreteType", span="289-289"];
n43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="1: throw new ArgumentNullException(''concreteType'');", span="284-284"];
n45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="1: throw new CommandLineParserException(''The types are incompatible.'');", span="287-287"];
n49 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280"];
n48 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n50 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469"];
n51 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="304-304"];
n52 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="0: Type concreteType", span="306-306"];
n53 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="0: var property = GetProperty(target, out concreteType)", span="307-307"];
n56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="1: property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="312-312"];
n57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="1: return (IList<string>)property.GetValue(target, null);", span="314-314"];
n54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="0: property == null || concreteType == null", span="309-309"];
n59 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331"];
n55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="1: return null;", span="310-310"];
n60 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n61 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="304-304"];
n62 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n63 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317"];
n64 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="0: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="319-319"];
n65 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="0: list == null || list.Count == 0", span="320-320"];
n72 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759"];
n67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="0: list.Count > 1", span="323-323"];
n69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="0: var pairZero = list[0]", span="326-326"];
n66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: return null;", span="321-321"];
n68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: throw new InvalidOperationException();", span="324-324"];
n70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: return pairZero.Right;", span="328-328"];
n71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317"];
n73 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="0: concreteType = null", span="333-333"];
n74 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="0: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="335-335"];
n75 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="0: list == null || list.Count == 0", span="336-336"];
n77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="0: list.Count > 1", span="339-339"];
n79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="0: var pairZero = list[0]", span="342-342"];
n76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: return null;", span="337-337"];
n78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: throw new InvalidOperationException();", span="340-340"];
n80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: concreteType = pairZero.Right.ConcreteType", span="343-343"];
n81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: return pairZero.Left;", span="345-345"];
n82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331"];
n83 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="361-361"];
n84 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=red, community=0, label="1: this.PostParsingState = new List<ParsingError>()", span="363-363"];
n85 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="361-361"];
n86 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n87 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366"];
n88 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366"];
n89 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370"];
n90 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=red, community=0, label="1: this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="374-374"];
n91 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370"];
n92 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1218-1218"];
n93 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n94 [cluster="CommandLine.ArgumentParser.Create(string)", label="Entry CommandLine.ArgumentParser.Create(string)", span="377-377"];
n95 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: argument.Equals(''-'', StringComparison.InvariantCulture)", span="379-379"];
n97 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: argument[0] == '-' && argument[1] == '-'", span="382-382"];
n99 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="0: argument[0] == '-'", span="385-385"];
n96 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="1: return null;", span="380-380"];
n103 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n98 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="1: return new LongOptionParser();", span="383-383"];
n100 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="1: return new OptionGroupParser();", span="386-386"];
n101 [cluster="CommandLine.ArgumentParser.Create(string)", color=red, community=0, label="1: return null;", span="388-388"];
n102 [cluster="CommandLine.ArgumentParser.Create(string)", label="Exit CommandLine.ArgumentParser.Create(string)", span="377-377"];
n105 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="690-690"];
n104 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="516-516"];
n106 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="391-391"];
n107 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="0: argument.Length > 0", span="393-393"];
n108 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="1: return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="394-394"];
n109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="1: return true;", span="396-396"];
n110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="391-391"];
n111 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406"];
n112 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: IList<string> list = new List<string>()", span="408-408"];
n113 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: ae.MoveNext()", span="410-410"];
n114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: IsInputValue(ae.Current)", span="412-412"];
n115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: list.Add(ae.Current)", span="413-413"];
n116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="0: !ae.MovePrevious()", span="417-417"];
n118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="1: return list;", span="420-420"];
n120 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="507-507"];
n121 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="1: throw new CommandLineParserException();", span="418-418"];
n122 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509"];
n119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406"];
n123 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464"];
n124 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423"];
n125 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=red, community=0, label="1: return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="425-425"];
n126 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423"];
n127 [cluster="string.Compare(string, string, bool)", label="Entry string.Compare(string, string, bool)", span="0-0"];
n128 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428"];
n129 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=red, community=0, label="1: return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="430-430"];
n130 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428"];
n131 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433"];
n132 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=red, community=0, label="1: return BooleanToParserState(value, false);", span="435-435"];
n133 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433"];
n134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438"];
n135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="0: value && !addMoveNextIfTrue", span="440-440"];
n137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="0: value && addMoveNextIfTrue", span="442-442"];
n136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="1: return ParserState.Success;", span="441-441"];
n138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="1: return ParserState.Success | ParserState.MoveOnNextElement;", span="443-443"];
n139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="1: return ParserState.Failure;", span="445-445"];
n140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438"];
n141 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448"];
n142 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, label="1: !option.IsAttributeArrayCompatible", span="450-450"];
n143 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, label="1: throw new CommandLineParserException();", span="451-451"];
n144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448"];
n145 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454"];
n146 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, label="1: !option.IsArray && option.IsAttributeArrayCompatible", span="456-456"];
n147 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, label="1: throw new CommandLineParserException();", span="457-457"];
n148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454"];
n149 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466"];
n150 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466"];
n151 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470"];
n152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, label="0: ShortName = shortName", span="472-472"];
n153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, label="1: LongName = longName", span="473-473"];
n154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470"];
n155 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502"];
n156 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502"];
n157 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="507-507"];
n158 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509"];
n159 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="516-516"];
n160 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521"];
n161 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="523-523"];
n162 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: var option = map[parts[0]]", span="524-524"];
n169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="536-536"];
n173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(parts[1], options)", span="543-543"];
n178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="553-553"];
n180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(items, options)", span="556-556"];
n185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="567-567"];
n190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="577-577"];
n191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(items, options)", span="579-579"];
n197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(true, options)", span="592-592"];
n202 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n203 [cluster="string.Split(char[], int)", label="Entry string.Split(char[], int)", span="0-0"];
n171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: parts.Length == 2", span="539-539"];
n179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: items.Insert(0, parts[1])", span="554-554"];
n195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: parts.Length == 2", span="589-589"];
n163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: var valueSetting = false", span="525-525"];
n164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: option == null", span="527-527"];
n166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: option.IsDefined = true", span="530-530"];
n167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="532-532"];
n168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !option.IsBoolean", span="534-534"];
n172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !option.IsArray", span="541-541"];
n175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="545-545"];
n177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="551-551"];
n182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="558-558"];
n184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !option.IsArray", span="565-565"];
n187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="569-569"];
n189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="575-575"];
n193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="581-581"];
n199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="594-594"];
n165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="528-528"];
n170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="537-537"];
n174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="544-544"];
n204 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="838-838"];
n176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="547-547"];
n205 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
n181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="557-557"];
n206 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849"];
n183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="560-560"];
n186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="568-568"];
n188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="571-571"];
n192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="580-580"];
n194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="583-583"];
n196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="590-590"];
n198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="593-593"];
n207 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="929-929"];
n200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="596-596"];
n201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521"];
n208 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607"];
n209 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, label="0: Assumes.NotNullOrEmpty(value, ''value'')", span="609-609"];
n210 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, label="0: _data = value", span="611-611"];
n213 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744"];
n211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, label="1: _index = -1", span="612-612"];
n212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607"];
n214 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="651-651"];
n215 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=red, community=0, label="1: _index = -1", span="653-653"];
n216 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="651-651"];
n217 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656"];
n218 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="0: _index < (_data.Length - 1)", span="658-658"];
n219 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="0: _index++", span="660-660"];
n222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="0: _index = _data.Length", span="664-664"];
n220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="0: _currentElement = _data.Substring(_index, 1)", span="661-661"];
n221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="1: return true;", span="662-662"];
n225 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="1: return false;", span="666-666"];
n224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656"];
n226 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669"];
n227 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="0: _index == -1", span="671-671"];
n228 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="1: throw new InvalidOperationException();", span="672-672"];
n229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="0: _index > _data.Length", span="674-674"];
n230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="1: throw new InvalidOperationException();", span="675-675"];
n231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="1: return _data.Substring(_index + 1);", span="677-677"];
n232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669"];
n233 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680"];
n234 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=red, community=0, label="1: throw new NotSupportedException();", span="682-682"];
n235 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680"];
n236 [cluster="System.NotSupportedException.NotSupportedException()", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
n237 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="685-685"];
n238 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="685-685"];
n239 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692"];
n240 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: var valueSetting = false", span="694-694"];
n241 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="696-696"];
n243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: var option = map[group.Current]", span="699-699"];
n249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: argumentEnumerator.IsLast && group.IsLast", span="709-709"];
n253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="716-716"];
n258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="726-726"];
n260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(items, options)", span="729-729"];
n264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="737-737"];
n267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="743-743"];
n272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="753-753"];
n273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: valueSetting = option.SetValue(items, options)", span="755-755"];
n277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !group.IsLast && map[group.Next] == null", span="765-765"];
n279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !option.SetValue(true, options)", span="768-768"];
n242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: group.MoveNext()", span="697-697"];
n251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !group.IsLast", span="712-712"];
n259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: items.Insert(0, group.GetRemainingFromNext())", span="727-727"];
n281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Success;", span="773-773"];
n244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: option == null", span="700-700"];
n246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: option.IsDefined = true", span="703-703"];
n247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="705-705"];
n248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !option.IsBoolean", span="707-707"];
n252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !option.IsArray", span="714-714"];
n255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="718-718"];
n257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="724-724"];
n262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="731-731"];
n266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !option.IsArray", span="741-741"];
n269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="745-745"];
n271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="751-751"];
n275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="757-757"];
n245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="701-701"];
n250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="710-710"];
n254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="717-717"];
n256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="720-720"];
n261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="730-730"];
n263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="733-733"];
n265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="738-738"];
n268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="744-744"];
n270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="747-747"];
n274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="0: !valueSetting", span="756-756"];
n276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="759-759"];
n278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="766-766"];
n280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="769-769"];
n282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692"];
n283 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789"];
n284 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: attribute != null", span="791-791"];
n285 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: _required = attribute.Required", span="793-793"];
n286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: _helpText = attribute.HelpText", span="794-794"];
n287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: _shortName = attribute.ShortName", span="795-795"];
n288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: _longName = attribute.LongName", span="796-796"];
n289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: _mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="797-797"];
n290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: _attribute = attribute", span="798-798"];
n292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="0: property != null", span="803-803"];
n293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _property = property", span="804-804"];
n291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="801-801"];
n294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="806-806"];
n295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789"];
n296 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
n297 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817"];
n298 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="819-819"];
n300 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: var map = new OptionMap(list.Count, settings)", span="822-822"];
n304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: map.RawOptions = target", span="830-830"];
n299 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: list != null", span="820-820"];
n301 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: list", span="824-824"];
n306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: return null;", span="835-835"];
n308 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042"];
n303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="827-827"];
n305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: return map;", span="832-832"];
n302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: pair != null && pair.Right != null", span="826-826"];
n307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817"];
n309 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="0: _attribute is OptionListAttribute", span="840-840"];
n310 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="1: return SetValueList(value, options);", span="841-841"];
n312 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="1: return SetNullableValue(value, options);", span="844-844"];
n313 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="1: return SetValueScalar(value, options);", span="846-846"];
n311 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="0: ReflectionUtil.IsNullableType(_property.PropertyType)", span="843-843"];
n316 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846"];
n314 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="838-838"];
n315 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="939-939"];
n317 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908"];
n318 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873"];
n319 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="0: Type elementType = _property.PropertyType.GetElementType()", span="851-851"];
n320 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="0: Array array = Array.CreateInstance(elementType, values.Count)", span="852-852"];
n324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", span="860-860"];
n325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: _property.SetValue(options, array, null)", span="861-861"];
n331 [cluster="System.Type.GetElementType()", label="Entry System.Type.GetElementType()", span="0-0"];
n321 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="0: int i = 0", span="854-854"];
n332 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n322 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="0: i < array.Length", span="854-854"];
n328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="0: i++", span="854-854"];
n323 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="0: _setValueLock", span="858-858"];
n329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: return true;", span="870-870"];
n333 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n334 [cluster="System.Array.SetValue(object, int)", label="Entry System.Array.SetValue(object, int)", span="0-0"];
n326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="0: FormatException", span="864-864"];
n327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: return false;", span="866-866"];
n330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849"];
n335 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: _property.PropertyType.IsEnum", span="877-877"];
n337 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: _property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="881-881"];
n339 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", span="888-888"];
n336 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: _setValueLock", span="879-879"];
n338 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: _setValueLock", span="886-886"];
n340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: InvalidCastException", span="892-892"];
n342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: FormatException", span="896-896"];
n344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="0: ArgumentException", span="900-900"];
n346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: return true;", span="905-905"];
n348 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: return false;", span="894-894"];
n343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: return false;", span="898-898"];
n345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: return false;", span="902-902"];
n347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873"];
n349 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="0: var nc = new NullableConverter(_property.PropertyType)", span="910-910"];
n351 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="0: _property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", span="916-916"];
n350 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="0: _setValueLock", span="914-914"];
n356 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
n352 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=1, label="0: Exception", span="921-921"];
n354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="1: return true;", span="926-926"];
n357 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
n353 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="1: return false;", span="923-923"];
n355 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908"];
n358 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, label="0: _setValueLock", span="931-931"];
n359 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, label="0: _property.SetValue(options, value, null)", span="933-933"];
n360 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, label="1: return true;", span="935-935"];
n361 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="929-929"];
n362 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: _setValueLock", span="941-941"];
n363 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="1: _property.SetValue(options, new List<string>(), null)", span="943-943"];
n364 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: var fieldRef = (IList<string>)_property.GetValue(options, null)", span="945-945"];
n365 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="946-946"];
n368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="1: fieldRef.Add(values[i])", span="950-950"];
n366 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: int i = 0", span="948-948"];
n372 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: i < values.Length", span="948-948"];
n369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: i++", span="948-948"];
n370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="1: return true;", span="953-953"];
n371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="939-939"];
n373 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022"];
n374 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=red, community=0, label="1: BadOption = option", span="1025-1025"];
n375 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022"];
n376 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031"];
n377 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=red, community=0, label="1: ++count", span="1031-1031"];
n378 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031"];
n379 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: _settings = settings", span="1044-1044"];
n384 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: _names = new Dictionary<string, string>(capacity, comparer)", span="1052-1052"];
n385 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: _map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1053-1053"];
n387 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: _mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1058-1058"];
n380 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: IEqualityComparer<string> comparer", span="1046-1046"];
n381 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: _settings.CaseSensitive", span="1047-1047"];
n382 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: comparer = StringComparer.Ordinal", span="1048-1048"];
n383 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: comparer = StringComparer.OrdinalIgnoreCase", span="1050-1050"];
n389 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
n386 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: _settings.MutuallyExclusive", span="1055-1055"];
n388 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042"];
n390 [cluster="CommandLine.OptionMap.EnforceRules()", label="Entry CommandLine.OptionMap.EnforceRules()", span="1093-1093"];
n391 [cluster="CommandLine.OptionMap.EnforceRules()", color=red, community=0, label="1: return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1095-1095"];
n392 [cluster="CommandLine.OptionMap.EnforceRules()", label="Exit CommandLine.OptionMap.EnforceRules()", span="1093-1093"];
n393 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111"];
n394 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098"];
n395 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="0: _map.Values", span="1100-1100"];
n396 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="0: option.Required && !option.IsDefined", span="1102-1102"];
n399 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="1: return true;", span="1108-1108"];
n397 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1104-1104"];
n398 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="1: return false;", span="1105-1105"];
n401 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150"];
n400 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098"];
n402 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="0: !_settings.MutuallyExclusive", span="1113-1113"];
n403 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="1: return true;", span="1114-1114"];
n404 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="0: _map.Values", span="1116-1116"];
n405 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="0: option.IsDefined && option.MutuallyExclusiveSet != null", span="1118-1118"];
n407 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=1, label="0: _mutuallyExclusiveSetMap.Values", span="1123-1123"];
n406 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="0: BuildMutuallyExclusiveMap(option)", span="1119-1119"];
n413 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136"];
n408 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="0: info.Occurrence > 1", span="1125-1125"];
n411 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="1: return true;", span="1133-1133"];
n409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1128-1128"];
n410 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="1: return false;", span="1129-1129"];
n412 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111"];
n414 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="0: var setName = option.MutuallyExclusiveSet", span="1138-1138"];
n416 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="1: _mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1143-1143"];
n415 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="0: !_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1140-1140"];
n417 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="1: _mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1147-1147"];
n419 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n420 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n418 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136"];
n421 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: options is CommandLineOptionsBase", span="1152-1152"];
n423 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: error.BadOption.ShortName = option.ShortName", span="1157-1157"];
n424 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: error.BadOption.LongName = option.LongName", span="1158-1158"];
n425 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: required != null", span="1160-1160"];
n426 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: error.ViolatesRequired = required.Value", span="1160-1160"];
n427 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: mutualExclusiveness != null", span="1161-1161"];
n428 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1161-1161"];
n429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="1: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1163-1163"];
n422 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="0: ParsingError error = new ParsingError()", span="1154-1154"];
n430 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150"];
n431 [cluster="CommandLine.ParsingError.ParsingError()", label="Entry CommandLine.ParsingError.ParsingError()", span="1213-1213"];
n432 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173"];
n433 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, label="0: _left = left", span="1175-1175"];
n434 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, label="1: _right = right", span="1176-1176"];
n435 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173"];
n436 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189"];
n437 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, label="0: int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1191-1191"];
n438 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, label="0: int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1192-1192"];
n441 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n439 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, label="1: return leftHash ^ rightHash;", span="1194-1194"];
n440 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189"];
n442 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197"];
n443 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="0: var other = obj as Pair<TLeft, TRight>", span="1199-1199"];
n444 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="0: other == null", span="1201-1201"];
n446 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="1: return Equals(_left, other._left) && Equals(_right, other._right);", span="1204-1204"];
n445 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="1: return false;", span="1202-1202"];
n447 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197"];
n448 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n449 [cluster="CommandLine.ParsingError.ParsingError()", color=red, community=0, label="1: this.BadOption = new BadOptionInfo()", span="1215-1215"];
n450 [cluster="CommandLine.ParsingError.ParsingError()", label="Exit CommandLine.ParsingError.ParsingError()", span="1213-1213"];
n451 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0, label="0: this.BadOption = new BadOptionInfo(shortName, longName)", span="1222-1222"];
n452 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0, label="1: this.ViolatesFormat = format", span="1224-1224"];
n453 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1218-1218"];
n454 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1266-1266"];
n455 [cluster="CommandLine.PostParsingState.PostParsingState()", color=red, community=0, label="1: Errors = new List<ParsingError>()", span="1268-1268"];
n456 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1266-1266"];
n457 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286"];
n458 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="0: Assumes.NotNull(value, ''value'')", span="1288-1288"];
n459 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="0: _data = value", span="1290-1290"];
n461 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="1: _endIndex = value.Length", span="1292-1292"];
n463 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737"];
n460 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="0: _index = -1", span="1291-1291"];
n462 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286"];
n464 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1336-1336"];
n465 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=red, community=0, label="1: _index = -1", span="1338-1338"];
n466 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1336-1336"];
n467 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341"];
n468 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="0: _index < _endIndex", span="1343-1343"];
n469 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="0: _index++", span="1345-1345"];
n471 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="1: return false;", span="1348-1348"];
n470 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="1: return _index < _endIndex;", span="1346-1346"];
n472 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341"];
n473 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351"];
n474 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=red, community=0, label="1: throw new NotSupportedException();", span="1353-1353"];
n475 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351"];
n476 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356"];
n477 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="0: _index <= 0", span="1358-1358"];
n478 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: throw new InvalidOperationException();", span="1360-1360"];
n479 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="0: _index <= _endIndex", span="1362-1362"];
n480 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="0: _index--", span="1364-1364"];
n482 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: return false;", span="1367-1367"];
n481 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: return _index <= _endIndex;", span="1365-1365"];
n483 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356"];
n484 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1370-1370"];
n485 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1370-1370"];
n486 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381"];
n487 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="0: _target = target", span="1383-1383"];
n488 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="0: _vla = ValueListAttribute.GetAttribute(_target)", span="1384-1384"];
n489 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="1: IsValueListDefined", span="1385-1385"];
n490 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="1: _valueList = ValueListAttribute.GetReference(_target)", span="1386-1386"];
n491 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381"];
n492 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391"];
n493 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="0: _vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1393-1393"];
n496 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="0: _valueList.Add(item)", span="1398-1398"];
n494 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="1: return false;", span="1394-1394"];
n495 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="0: this", span="1396-1396"];
n497 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="1: return true;", span="1401-1401"];
n498 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391"];
n499 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422"];
n500 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422"];
n501 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437"];
n502 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437"];
n503 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445"];
n504 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=red, community=0, label="1: LastPostParsingState = new PostParsingState()", span="1447-1447"];
n505 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445"];
n506 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464"];
n507 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469"];
n508 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1474-1474"];
n509 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1474-1474"];
n510 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1479-1479"];
n511 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1479-1479"];
n512 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495"];
n513 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495"];
n514 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505"];
n515 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=red, community=0, label="1: CaseSensitive = caseSensitive", span="1507-1507"];
n516 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505"];
n517 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516"];
n518 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=red, community=0, label="1: HelpWriter = helpWriter", span="1519-1519"];
n519 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516"];
n520 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529"];
n521 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, label="0: CaseSensitive = caseSensitive", span="1531-1531"];
n522 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, label="1: HelpWriter = helpWriter", span="1532-1532"];
n523 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529"];
n524 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541"];
n525 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, label="0: CaseSensitive = caseSensitive", span="1543-1543"];
n526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, label="1: MutuallyExclusive = mutuallyExclusive", span="1544-1544"];
n527 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541"];
n528 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555"];
n529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, label="0: CaseSensitive = caseSensitive", span="1557-1557"];
n530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, label="0: MutuallyExclusive = mutuallyExclusive", span="1558-1558"];
n531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, label="1: HelpWriter = helpWriter", span="1559-1559"];
n532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555"];
n533 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592"];
n534 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=red, community=0, label="1: _settings = new CommandLineParserSettings()", span="1594-1594"];
n535 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592"];
n536 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603"];
n537 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: Assumes.NotNull(settings, ''settings'')", span="1605-1605"];
n538 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: _settings = settings", span="1607-1607"];
n539 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603"];
n540 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620"];
n541 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=red, community=0, label="1: return ParseArguments(args, options, _settings.HelpWriter);", span="1622-1622"];
n542 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620"];
n543 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638"];
n544 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: Assumes.NotNull(args, ''args'')", span="1640-1640"];
n545 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: Assumes.NotNull(options, ''options'')", span="1641-1641"];
n546 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1643-1643"];
n547 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: pair != null && helpWriter != null", span="1645-1645"];
n548 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1647-1647"];
n550 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1650-1650"];
n551 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: helpWriter.Write(helpText)", span="1651-1651"];
n554 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: return DoParseArguments(args, options);", span="1657-1657"];
n556 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785"];
n549 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="0: string helpText", span="1649-1649"];
n553 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: return true;", span="1654-1654"];
n557 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703"];
n558 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660"];
n552 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: return false;", span="1652-1652"];
n559 [cluster="System.IO.TextWriter.Write(string)", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
n555 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638"];
n560 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: bool hadError = false", span="1662-1662"];
n561 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: var optionMap = OptionInfo.CreateMap(options, _settings)", span="1663-1663"];
n562 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: var target = new TargetWrapper(options)", span="1664-1664"];
n563 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1666-1666"];
n569 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: ParserState result = parser.Parse(arguments, optionMap, options)", span="1675-1675"];
n571 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1678-1678"];
n578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: hadError |= !optionMap.EnforceRules()", span="1698-1698"];
n575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: target.IsValueListDefined", span="1686-1686"];
n576 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: !target.AddValueItemIfAllowed(argument)", span="1688-1688"];
n564 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="1: arguments.MoveNext()", span="1667-1667"];
n565 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: string argument = arguments.Current", span="1669-1669"];
n574 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="1: arguments.MoveNext()", span="1684-1684"];
n566 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: argument != null && argument.Length > 0", span="1670-1670"];
n567 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: ArgumentParser parser = ArgumentParser.Create(argument)", span="1672-1672"];
n568 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: parser != null", span="1673-1673"];
n570 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: (result & ParserState.Failure) == ParserState.Failure", span="1676-1676"];
n573 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: (result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1683-1683"];
n572 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: hadError = true", span="1679-1679"];
n581 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726"];
n577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="0: hadError = true", span="1690-1690"];
n579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="1: return !hadError;", span="1700-1700"];
n580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660"];
n582 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="0: bool caseSensitive = _settings.CaseSensitive", span="1705-1705"];
n584 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="0: i < args.Length", span="1707-1707"];
n585 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: !string.IsNullOrEmpty(helpOption.ShortName)", span="1709-1709"];
n586 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="0: ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1711-1711"];
n588 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="0: !string.IsNullOrEmpty(helpOption.LongName)", span="1715-1715"];
n589 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1717-1717"];
n583 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="0: int i = 0", span="1707-1707"];
n591 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="0: i++", span="1707-1707"];
n592 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: return false;", span="1722-1722"];
n587 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: return true;", span="1712-1712"];
n590 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: return true;", span="1718-1718"];
n593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703"];
n594 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=red, community=0, label="1: options is CommandLineOptionsBase", span="1728-1728"];
n595 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=red, community=0, label="1: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1729-1729"];
n596 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726"];
n597 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n598 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, label="1: value == null", span="1740-1740"];
n599 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, label="1: throw new ArgumentNullException(paramName);", span="1741-1741"];
n600 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737"];
n601 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, label="1: string.IsNullOrEmpty(value)", span="1746-1746"];
n602 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, label="1: throw new ArgumentException(paramName);", span="1747-1747"];
n603 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744"];
n604 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n605 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750"];
n606 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, label="1: array.Length == 0", span="1752-1752"];
n607 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, label="1: throw new ArgumentOutOfRangeException(paramName);", span="1753-1753"];
n608 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750"];
n609 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n610 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1762-1762"];
n611 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: target != null", span="1763-1763"];
n612 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="1: var propertiesInfo = target.GetType().GetProperties()", span="1765-1765"];
n619 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="1: list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1776-1776"];
n620 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="1: return list;", span="1782-1782"];
n613 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: propertiesInfo", span="1767-1767"];
n622 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n623 [cluster="System.Type.GetProperties()", label="Entry System.Type.GetProperties()", span="0-0"];
n614 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: property != null && (property.CanRead && property.CanWrite)", span="1769-1769"];
n615 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: var setMethod = property.GetSetMethod()", span="1771-1771"];
n617 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1774-1774"];
n616 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: setMethod != null && !setMethod.IsStatic", span="1772-1772"];
n624 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
n618 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="0: attribute != null", span="1775-1775"];
n625 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
n621 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759"];
n626 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="1: var info = target.GetType().GetMethods()", span="1788-1788"];
n627 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="0: info", span="1790-1790"];
n634 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n628 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="0: !method.IsStatic", span="1792-1792"];
n632 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="1: return null;", span="1801-1801"];
n629 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=1, label="0: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1794-1795"];
n631 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="1: return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1797-1797"];
n630 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="0: attribute != null", span="1796-1796"];
n633 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785"];
n635 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804"];
n636 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="1: var info = target.GetType().GetMethods()", span="1807-1807"];
n637 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="0: info", span="1809-1809"];
n638 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="0: !method.IsStatic", span="1811-1811"];
n642 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="1: return null;", span="1820-1820"];
n639 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=1, label="0: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1813-1814"];
n640 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="0: attribute != null", span="1815-1815"];
n641 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="1: return (TAttribute)attribute;", span="1816-1816"];
n643 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804"];
n644 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823"];
n645 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: IList<TAttribute> list = new List<TAttribute>()", span="1826-1826"];
n646 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="1: var info = target.GetType().GetProperties()", span="1827-1827"];
n653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: list.Add((TAttribute)attribute)", span="1838-1838"];
n654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="1: return list;", span="1843-1843"];
n647 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: info", span="1829-1829"];
n648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: property != null && (property.CanRead && property.CanWrite)", span="1831-1831"];
n649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: var setMethod = property.GetSetMethod()", span="1833-1833"];
n651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1836-1836"];
n650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: setMethod != null && !setMethod.IsStatic", span="1834-1834"];
n652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="0: attribute != null", span="1837-1837"];
n655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823"];
n656 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=red, community=0, label="1: return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1848-1848"];
n657 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846"];
n658 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n659 [cluster="System.Type.Equals(System.Type)", label="Entry System.Type.Equals(System.Type)", span="0-0"];
n660 [cluster="CommandLine.StringUtil.Spaces(int)", label="Entry CommandLine.StringUtil.Spaces(int)", span="1876-1876"];
n661 [cluster="CommandLine.StringUtil.Spaces(int)", color=red, community=0, label="1: return new String(' ', count);", span="1878-1878"];
n662 [cluster="CommandLine.StringUtil.Spaces(int)", label="Exit CommandLine.StringUtil.Spaces(int)", span="1876-1876"];
n663 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="0: base.ShortName = shortName", span="116-116"];
d4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="1: base.LongName = longName", span="117-117"];
d7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="0: text = null", span="134-134"];
d8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="0: var method = pair.Left", span="136-136"];
d9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="0: !CheckMethodSignature(method)", span="137-137"];
d11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="1: text = (string)method.Invoke(target, null)", span="140-140"];
d10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="1: throw new MemberAccessException();", span="138-138"];
d16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, label="1: return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="145-145"];
d22 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="0: !string.IsNullOrEmpty(shortName)", span="183-183"];
d23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="0: _uniqueName = shortName", span="184-184"];
d24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="0: !string.IsNullOrEmpty(longName)", span="185-185"];
d26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="0: _uniqueName == null", span="188-188"];
d25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="0: _uniqueName = longName", span="186-186"];
d28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="0: base.ShortName = shortName", span="191-191"];
d29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="1: base.LongName = longName", span="192-192"];
d27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="1: throw new InvalidOperationException();", span="189-189"];
d36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0, label="1: Separator = separator", span="249-249"];
d39 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, label="1: MaximumElements = -1", span="272-272"];
d42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="0: concreteType == null", span="283-283"];
d43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="1: throw new ArgumentNullException(''concreteType'');", span="284-284"];
d44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="0: !typeof(IList<string>).IsAssignableFrom(concreteType)", span="286-286"];
d45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="1: throw new CommandLineParserException(''The types are incompatible.'');", span="287-287"];
d46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="1: _concreteType = concreteType", span="289-289"];
d52 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="0: Type concreteType", span="306-306"];
d53 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="0: var property = GetProperty(target, out concreteType)", span="307-307"];
d54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="0: property == null || concreteType == null", span="309-309"];
d56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="1: property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="312-312"];
d57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="1: return (IList<string>)property.GetValue(target, null);", span="314-314"];
d55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="1: return null;", span="310-310"];
d64 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="0: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="319-319"];
d65 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="0: list == null || list.Count == 0", span="320-320"];
d67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="0: list.Count > 1", span="323-323"];
d69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="0: var pairZero = list[0]", span="326-326"];
d66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: return null;", span="321-321"];
d68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: throw new InvalidOperationException();", span="324-324"];
d70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: return pairZero.Right;", span="328-328"];
d73 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="0: concreteType = null", span="333-333"];
d74 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="0: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="335-335"];
d75 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="0: list == null || list.Count == 0", span="336-336"];
d77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="0: list.Count > 1", span="339-339"];
d79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="0: var pairZero = list[0]", span="342-342"];
d76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: return null;", span="337-337"];
d78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: throw new InvalidOperationException();", span="340-340"];
d80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: concreteType = pairZero.Right.ConcreteType", span="343-343"];
d81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: return pairZero.Left;", span="345-345"];
d84 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0, label="1: this.PostParsingState = new List<ParsingError>()", span="363-363"];
d90 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0, label="1: this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="374-374"];
d95 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="0: argument.Equals(''-'', StringComparison.InvariantCulture)", span="379-379"];
d96 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="1: return null;", span="380-380"];
d97 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="0: argument[0] == '-' && argument[1] == '-'", span="382-382"];
d98 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="1: return new LongOptionParser();", span="383-383"];
d99 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="0: argument[0] == '-'", span="385-385"];
d100 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="1: return new OptionGroupParser();", span="386-386"];
d101 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="1: return null;", span="388-388"];
d107 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="0: argument.Length > 0", span="393-393"];
d108 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="1: return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="394-394"];
d109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="1: return true;", span="396-396"];
d112 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="0: IList<string> list = new List<string>()", span="408-408"];
d113 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="0: ae.MoveNext()", span="410-410"];
d115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="0: list.Add(ae.Current)", span="413-413"];
d118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="1: return list;", span="420-420"];
d114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="0: IsInputValue(ae.Current)", span="412-412"];
d116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="0: !ae.MovePrevious()", span="417-417"];
d117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="1: throw new CommandLineParserException();", span="418-418"];
d125 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0, label="1: return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="425-425"];
d129 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, label="1: return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="430-430"];
d132 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, label="1: return BooleanToParserState(value, false);", span="435-435"];
d135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="0: value && !addMoveNextIfTrue", span="440-440"];
d136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="1: return ParserState.Success;", span="441-441"];
d137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="0: value && addMoveNextIfTrue", span="442-442"];
d138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="1: return ParserState.Success | ParserState.MoveOnNextElement;", span="443-443"];
d139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="1: return ParserState.Failure;", span="445-445"];
d142 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="1: !option.IsAttributeArrayCompatible", span="450-450"];
d143 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="1: throw new CommandLineParserException();", span="451-451"];
d146 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="1: !option.IsArray && option.IsAttributeArrayCompatible", span="456-456"];
d147 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="1: throw new CommandLineParserException();", span="457-457"];
d152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="0: ShortName = shortName", span="472-472"];
d153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="1: LongName = longName", span="473-473"];
d161 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", span="523-523"];
d162 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: var option = map[parts[0]]", span="524-524"];
d169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="536-536"];
d171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: parts.Length == 2", span="539-539"];
d173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(parts[1], options)", span="543-543"];
d179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: items.Insert(0, parts[1])", span="554-554"];
d195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: parts.Length == 2", span="589-589"];
d163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: var valueSetting = false", span="525-525"];
d164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: option == null", span="527-527"];
d166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: option.IsDefined = true", span="530-530"];
d167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="532-532"];
d168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !option.IsBoolean", span="534-534"];
d172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !option.IsArray", span="541-541"];
d175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="545-545"];
d177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="551-551"];
d180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(items, options)", span="556-556"];
d182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="558-558"];
d184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !option.IsArray", span="565-565"];
d185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="567-567"];
d187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="569-569"];
d189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="575-575"];
d191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(items, options)", span="579-579"];
d193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="581-581"];
d197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(true, options)", span="592-592"];
d199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="594-594"];
d170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="537-537"];
d174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="544-544"];
d176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="547-547"];
d178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="553-553"];
d181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="557-557"];
d183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="560-560"];
d186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="568-568"];
d188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="571-571"];
d190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="577-577"];
d192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="580-580"];
d194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="583-583"];
d198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="593-593"];
d200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="596-596"];
d196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="590-590"];
d165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="528-528"];
d209 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="0: Assumes.NotNullOrEmpty(value, ''value'')", span="609-609"];
d210 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="0: _data = value", span="611-611"];
d211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="1: _index = -1", span="612-612"];
d215 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0, label="1: _index = -1", span="653-653"];
d218 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="0: _index < (_data.Length - 1)", span="658-658"];
d219 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="0: _index++", span="660-660"];
d222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="0: _index = _data.Length", span="664-664"];
d220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="0: _currentElement = _data.Substring(_index, 1)", span="661-661"];
d223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="1: return false;", span="666-666"];
d221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="1: return true;", span="662-662"];
d227 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="0: _index == -1", span="671-671"];
d228 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="1: throw new InvalidOperationException();", span="672-672"];
d229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="0: _index > _data.Length", span="674-674"];
d230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="1: throw new InvalidOperationException();", span="675-675"];
d231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="1: return _data.Substring(_index + 1);", span="677-677"];
d234 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0, label="1: throw new NotSupportedException();", span="682-682"];
d240 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: var valueSetting = false", span="694-694"];
d241 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="696-696"];
d242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: group.MoveNext()", span="697-697"];
d243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: var option = map[group.Current]", span="699-699"];
d249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: argumentEnumerator.IsLast && group.IsLast", span="709-709"];
d251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !group.IsLast", span="712-712"];
d253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="716-716"];
d259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: items.Insert(0, group.GetRemainingFromNext())", span="727-727"];
d277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !group.IsLast && map[group.Next] == null", span="765-765"];
d244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: option == null", span="700-700"];
d246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: option.IsDefined = true", span="703-703"];
d247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="705-705"];
d248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !option.IsBoolean", span="707-707"];
d252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !option.IsArray", span="714-714"];
d255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="718-718"];
d257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="724-724"];
d260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(items, options)", span="729-729"];
d262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="731-731"];
d266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !option.IsArray", span="741-741"];
d267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="743-743"];
d269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="745-745"];
d271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="751-751"];
d273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: valueSetting = option.SetValue(items, options)", span="755-755"];
d275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: this.DefineOptionThatViolatesFormat(option)", span="757-757"];
d279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !option.SetValue(true, options)", span="768-768"];
d250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="710-710"];
d254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="717-717"];
d256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="720-720"];
d258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="726-726"];
d261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="730-730"];
d263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="733-733"];
d264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="737-737"];
d265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="738-738"];
d268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="744-744"];
d270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="747-747"];
d272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="753-753"];
d274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="0: !valueSetting", span="756-756"];
d276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="759-759"];
d278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="766-766"];
d280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="769-769"];
d281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Success;", span="773-773"];
d245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="701-701"];
d284 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: attribute != null", span="791-791"];
d285 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: _required = attribute.Required", span="793-793"];
d291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="801-801"];
d286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: _helpText = attribute.HelpText", span="794-794"];
d287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: _shortName = attribute.ShortName", span="795-795"];
d288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: _longName = attribute.LongName", span="796-796"];
d289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: _mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="797-797"];
d290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: _attribute = attribute", span="798-798"];
d292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="0: property != null", span="803-803"];
d293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: _property = property", span="804-804"];
d294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="806-806"];
d298 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="819-819"];
d299 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: list != null", span="820-820"];
d300 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: var map = new OptionMap(list.Count, settings)", span="822-822"];
d301 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=1, label="0: list", span="824-824"];
d303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="827-827"];
d304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: map.RawOptions = target", span="830-830"];
d305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: return map;", span="832-832"];
d306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: return null;", span="835-835"];
d302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: pair != null && pair.Right != null", span="826-826"];
d309 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="0: _attribute is OptionListAttribute", span="840-840"];
d310 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="1: return SetValueList(value, options);", span="841-841"];
d311 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="0: ReflectionUtil.IsNullableType(_property.PropertyType)", span="843-843"];
d312 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="1: return SetNullableValue(value, options);", span="844-844"];
d313 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="1: return SetValueScalar(value, options);", span="846-846"];
d319 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="0: Type elementType = _property.PropertyType.GetElementType()", span="851-851"];
d320 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="0: Array array = Array.CreateInstance(elementType, values.Count)", span="852-852"];
d324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="1: array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", span="860-860"];
d321 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="0: int i = 0", span="854-854"];
d322 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="0: i < array.Length", span="854-854"];
d325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="1: _property.SetValue(options, array, null)", span="861-861"];
d323 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="0: _setValueLock", span="858-858"];
d326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="0: FormatException", span="864-864"];
d328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="0: i++", span="854-854"];
d366 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: int i = 0", span="948-948"];
d584 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: i < args.Length", span="1707-1707"];
d329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="1: return true;", span="870-870"];
d327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="1: return false;", span="866-866"];
d335 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: _property.PropertyType.IsEnum", span="877-877"];
d336 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: _setValueLock", span="879-879"];
d338 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: _setValueLock", span="886-886"];
d337 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: _property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="881-881"];
d340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: InvalidCastException", span="892-892"];
d342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: FormatException", span="896-896"];
d344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: ArgumentException", span="900-900"];
d346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return true;", span="905-905"];
d339 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="0: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", span="888-888"];
d341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return false;", span="894-894"];
d343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return false;", span="898-898"];
d345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return false;", span="902-902"];
d349 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="0: var nc = new NullableConverter(_property.PropertyType)", span="910-910"];
d350 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="0: _setValueLock", span="914-914"];
d351 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="0: _property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", span="916-916"];
d352 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=1, label="0: Exception", span="921-921"];
d354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="1: return true;", span="926-926"];
d353 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="1: return false;", span="923-923"];
d358 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="0: _setValueLock", span="931-931"];
d359 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="0: _property.SetValue(options, value, null)", span="933-933"];
d360 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="1: return true;", span="935-935"];
d362 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: _setValueLock", span="941-941"];
d363 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="1: _property.SetValue(options, new List<string>(), null)", span="943-943"];
d364 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: var fieldRef = (IList<string>)_property.GetValue(options, null)", span="945-945"];
d365 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="946-946"];
d368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="1: fieldRef.Add(values[i])", span="950-950"];
d367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: i < values.Length", span="948-948"];
d369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: i++", span="948-948"];
d370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="1: return true;", span="953-953"];
d374 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0, label="1: BadOption = option", span="1025-1025"];
d377 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, label="1: ++count", span="1031-1031"];
d379 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: _settings = settings", span="1044-1044"];
d380 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: IEqualityComparer<string> comparer", span="1046-1046"];
d384 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: _names = new Dictionary<string, string>(capacity, comparer)", span="1052-1052"];
d382 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: comparer = StringComparer.Ordinal", span="1048-1048"];
d383 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: comparer = StringComparer.OrdinalIgnoreCase", span="1050-1050"];
d385 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: _map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1053-1053"];
d386 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: _settings.MutuallyExclusive", span="1055-1055"];
d387 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: _mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1058-1058"];
d381 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: _settings.CaseSensitive", span="1047-1047"];
d391 [cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0, label="1: return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1095-1095"];
d395 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="0: _map.Values", span="1100-1100"];
d396 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="0: option.Required && !option.IsDefined", span="1102-1102"];
d399 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="1: return true;", span="1108-1108"];
d397 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1104-1104"];
d398 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="1: return false;", span="1105-1105"];
d402 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: !_settings.MutuallyExclusive", span="1113-1113"];
d403 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="1: return true;", span="1114-1114"];
d404 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: _map.Values", span="1116-1116"];
d405 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: option.IsDefined && option.MutuallyExclusiveSet != null", span="1118-1118"];
d406 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: BuildMutuallyExclusiveMap(option)", span="1119-1119"];
d407 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: _mutuallyExclusiveSetMap.Values", span="1123-1123"];
d408 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: info.Occurrence > 1", span="1125-1125"];
d411 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="1: return true;", span="1133-1133"];
d409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1128-1128"];
d410 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="1: return false;", span="1129-1129"];
d414 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="0: var setName = option.MutuallyExclusiveSet", span="1138-1138"];
d415 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="0: !_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1140-1140"];
d416 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="1: _mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1143-1143"];
d417 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="1: _mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1147-1147"];
d421 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: options is CommandLineOptionsBase", span="1152-1152"];
d422 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: ParsingError error = new ParsingError()", span="1154-1154"];
d423 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: error.BadOption.ShortName = option.ShortName", span="1157-1157"];
d424 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: error.BadOption.LongName = option.LongName", span="1158-1158"];
d425 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: required != null", span="1160-1160"];
d426 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: error.ViolatesRequired = required.Value", span="1160-1160"];
d427 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: mutualExclusiveness != null", span="1161-1161"];
d428 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="0: error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1161-1161"];
d429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="1: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", span="1163-1163"];
d433 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="0: _left = left", span="1175-1175"];
d434 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="1: _right = right", span="1176-1176"];
d437 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="0: int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1191-1191"];
d438 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="0: int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1192-1192"];
d439 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="1: return leftHash ^ rightHash;", span="1194-1194"];
d443 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="0: var other = obj as Pair<TLeft, TRight>", span="1199-1199"];
d444 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="0: other == null", span="1201-1201"];
d446 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="1: return Equals(_left, other._left) && Equals(_right, other._right);", span="1204-1204"];
d445 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="1: return false;", span="1202-1202"];
d449 [cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0, label="1: this.BadOption = new BadOptionInfo()", span="1215-1215"];
d451 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="0: this.BadOption = new BadOptionInfo(shortName, longName)", span="1222-1222"];
d452 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="1: this.ViolatesFormat = format", span="1224-1224"];
d455 [cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0, label="1: Errors = new List<ParsingError>()", span="1268-1268"];
d458 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="0: Assumes.NotNull(value, ''value'')", span="1288-1288"];
d459 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="0: _data = value", span="1290-1290"];
d460 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="0: _index = -1", span="1291-1291"];
d461 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="1: _endIndex = value.Length", span="1292-1292"];
d465 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0, label="1: _index = -1", span="1338-1338"];
d468 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="0: _index < _endIndex", span="1343-1343"];
d469 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="0: _index++", span="1345-1345"];
d471 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="1: return false;", span="1348-1348"];
d470 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="1: return _index < _endIndex;", span="1346-1346"];
d474 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, label="1: throw new NotSupportedException();", span="1353-1353"];
d477 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="0: _index <= 0", span="1358-1358"];
d478 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="1: throw new InvalidOperationException();", span="1360-1360"];
d479 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="0: _index <= _endIndex", span="1362-1362"];
d480 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="0: _index--", span="1364-1364"];
d482 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="1: return false;", span="1367-1367"];
d481 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="1: return _index <= _endIndex;", span="1365-1365"];
d487 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="0: _target = target", span="1383-1383"];
d488 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="0: _vla = ValueListAttribute.GetAttribute(_target)", span="1384-1384"];
d489 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="1: IsValueListDefined", span="1385-1385"];
d490 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="1: _valueList = ValueListAttribute.GetReference(_target)", span="1386-1386"];
d493 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="0: _vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1393-1393"];
d494 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="1: return false;", span="1394-1394"];
d495 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="0: this", span="1396-1396"];
d496 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="0: _valueList.Add(item)", span="1398-1398"];
d497 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="1: return true;", span="1401-1401"];
d504 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, label="1: LastPostParsingState = new PostParsingState()", span="1447-1447"];
d515 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0, label="1: CaseSensitive = caseSensitive", span="1507-1507"];
d518 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, label="1: HelpWriter = helpWriter", span="1519-1519"];
d521 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="0: CaseSensitive = caseSensitive", span="1531-1531"];
d522 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="1: HelpWriter = helpWriter", span="1532-1532"];
d525 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="0: CaseSensitive = caseSensitive", span="1543-1543"];
d526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="1: MutuallyExclusive = mutuallyExclusive", span="1544-1544"];
d529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="0: CaseSensitive = caseSensitive", span="1557-1557"];
d530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="0: MutuallyExclusive = mutuallyExclusive", span="1558-1558"];
d531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="1: HelpWriter = helpWriter", span="1559-1559"];
d534 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0, label="1: _settings = new CommandLineParserSettings()", span="1594-1594"];
d537 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: Assumes.NotNull(settings, ''settings'')", span="1605-1605"];
d538 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: _settings = settings", span="1607-1607"];
d541 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, label="1: return ParseArguments(args, options, _settings.HelpWriter);", span="1622-1622"];
d544 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: Assumes.NotNull(args, ''args'')", span="1640-1640"];
d545 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: Assumes.NotNull(options, ''options'')", span="1641-1641"];
d546 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1643-1643"];
d547 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: pair != null && helpWriter != null", span="1645-1645"];
d548 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1647-1647"];
d550 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1650-1650"];
d554 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: return DoParseArguments(args, options);", span="1657-1657"];
d549 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: string helpText", span="1649-1649"];
d553 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: return true;", span="1654-1654"];
d551 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="0: helpWriter.Write(helpText)", span="1651-1651"];
d552 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: return false;", span="1652-1652"];
d560 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: bool hadError = false", span="1662-1662"];
d561 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: var optionMap = OptionInfo.CreateMap(options, _settings)", span="1663-1663"];
d578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: hadError |= !optionMap.EnforceRules()", span="1698-1698"];
d562 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: var target = new TargetWrapper(options)", span="1664-1664"];
d569 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: ParserState result = parser.Parse(arguments, optionMap, options)", span="1675-1675"];
d563 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1666-1666"];
d575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: target.IsValueListDefined", span="1686-1686"];
d576 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: !target.AddValueItemIfAllowed(argument)", span="1688-1688"];
d564 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="1: arguments.MoveNext()", span="1667-1667"];
d565 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: string argument = arguments.Current", span="1669-1669"];
d574 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="1: arguments.MoveNext()", span="1684-1684"];
d567 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: ArgumentParser parser = ArgumentParser.Create(argument)", span="1672-1672"];
d568 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: parser != null", span="1673-1673"];
d570 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: (result & ParserState.Failure) == ParserState.Failure", span="1676-1676"];
d573 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: (result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1683-1683"];
d571 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1678-1678"];
d572 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: hadError = true", span="1679-1679"];
d577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: hadError = true", span="1690-1690"];
d579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="1: return !hadError;", span="1700-1700"];
d566 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="0: argument != null && argument.Length > 0", span="1670-1670"];
d582 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: bool caseSensitive = _settings.CaseSensitive", span="1705-1705"];
d583 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: int i = 0", span="1707-1707"];
d586 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1711-1711"];
d589 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1717-1717"];
d591 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: i++", span="1707-1707"];
d585 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: !string.IsNullOrEmpty(helpOption.ShortName)", span="1709-1709"];
d592 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: return false;", span="1722-1722"];
d588 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: !string.IsNullOrEmpty(helpOption.LongName)", span="1715-1715"];
d587 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: return true;", span="1712-1712"];
d590 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: return true;", span="1718-1718"];
d594 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, label="1: options is CommandLineOptionsBase", span="1728-1728"];
d595 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, label="1: ((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", span="1729-1729"];
d598 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="1: value == null", span="1740-1740"];
d599 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="1: throw new ArgumentNullException(paramName);", span="1741-1741"];
d601 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="1: string.IsNullOrEmpty(value)", span="1746-1746"];
d602 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="1: throw new ArgumentException(paramName);", span="1747-1747"];
d606 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="1: array.Length == 0", span="1752-1752"];
d607 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="1: throw new ArgumentOutOfRangeException(paramName);", span="1753-1753"];
d610 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1762-1762"];
d611 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: target != null", span="1763-1763"];
d619 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="1: list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1776-1776"];
d620 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="1: return list;", span="1782-1782"];
d612 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="1: var propertiesInfo = target.GetType().GetProperties()", span="1765-1765"];
d613 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: propertiesInfo", span="1767-1767"];
d617 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1774-1774"];
d618 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: attribute != null", span="1775-1775"];
d614 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: property != null && (property.CanRead && property.CanWrite)", span="1769-1769"];
d616 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: setMethod != null && !setMethod.IsStatic", span="1772-1772"];
d615 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="0: var setMethod = property.GetSetMethod()", span="1771-1771"];
d626 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="1: var info = target.GetType().GetMethods()", span="1788-1788"];
d627 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="0: info", span="1790-1790"];
d628 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="0: !method.IsStatic", span="1792-1792"];
d630 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="0: attribute != null", span="1796-1796"];
d632 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="1: return null;", span="1801-1801"];
d629 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="0: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1794-1795"];
d631 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="1: return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1797-1797"];
d636 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="1: var info = target.GetType().GetMethods()", span="1807-1807"];
d637 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="0: info", span="1809-1809"];
d638 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="0: !method.IsStatic", span="1811-1811"];
d640 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="0: attribute != null", span="1815-1815"];
d642 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="1: return null;", span="1820-1820"];
d639 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="0: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1813-1814"];
d641 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="1: return (TAttribute)attribute;", span="1816-1816"];
d645 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: IList<TAttribute> list = new List<TAttribute>()", span="1826-1826"];
d646 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="1: var info = target.GetType().GetProperties()", span="1827-1827"];
d653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: list.Add((TAttribute)attribute)", span="1838-1838"];
d654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="1: return list;", span="1843-1843"];
d647 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: info", span="1829-1829"];
d651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1836-1836"];
d652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: attribute != null", span="1837-1837"];
d648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: property != null && (property.CanRead && property.CanWrite)", span="1831-1831"];
d650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: setMethod != null && !setMethod.IsStatic", span="1834-1834"];
d649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="0: var setMethod = property.GetSetMethod()", span="1833-1833"];
d656 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, label="1: return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", span="1848-1848"];
d661 [cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0, label="1: return new String(' ', count);", span="1878-1878"];
n664 -> n3  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n664 -> n4  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n664 -> d3  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n664 -> d4  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n665 -> n23  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> n25  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> n26  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> n28  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> n29  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> d23  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> d25  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> d28  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> d29  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n665 -> d26  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n666 -> n36  [color=red, key=1, label="CommandLine.OptionListAttribute", style=dashed];
n666 -> d36  [color=green, key=1, label="CommandLine.OptionListAttribute", style=dashed];
n667 -> n39  [color=red, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n667 -> n46  [color=red, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n667 -> d39  [color=green, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n667 -> d46  [color=green, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n668 -> n84  [color=red, key=1, label="CommandLine.ArgumentParser", style=dashed];
n668 -> n90  [color=red, key=1, label="CommandLine.ArgumentParser", style=dashed];
n668 -> d84  [color=green, key=1, label="CommandLine.ArgumentParser", style=dashed];
n668 -> d90  [color=green, key=1, label="CommandLine.ArgumentParser", style=dashed];
n669 -> n152  [color=red, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n669 -> n153  [color=red, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n669 -> d152  [color=green, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n669 -> d153  [color=green, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n670 -> n175  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> n182  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> n187  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> n193  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> n199  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d175  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d182  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d187  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d193  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d199  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n671 -> n210  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n211  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n215  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n218  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n219  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n220  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n222  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n227  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n229  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> n231  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d210  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d211  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d215  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d218  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d219  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d222  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d220  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d227  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d229  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d231  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n672 -> n255  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> n262  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> n269  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> n275  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> d255  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> d262  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> d269  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> d275  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n673 -> n285  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n286  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n287  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n288  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n289  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n290  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n293  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n309  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n310  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n311  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n312  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n313  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n319  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n323  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n325  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n335  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n336  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n337  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n338  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n339  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n349  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n350  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n351  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n358  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n359  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n362  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n363  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n364  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> n365  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d285  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d286  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d287  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d288  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d289  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d290  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d293  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d309  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d310  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d312  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d313  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d311  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d319  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d325  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d323  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d335  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d337  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d339  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d336  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d338  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d349  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d351  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d350  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d358  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d359  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d362  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d363  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d364  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d365  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> n374  [color=red, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n674 -> n377  [color=red, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n674 -> d374  [color=green, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n674 -> d377  [color=green, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n675 -> n379  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n381  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n384  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n385  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n386  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n387  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n391  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n395  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n397  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n402  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n404  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n406  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n407  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n409  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n415  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n416  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> n417  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d379  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d384  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d385  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d387  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d381  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d386  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d391  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d395  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d397  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d402  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d404  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d407  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d406  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d409  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d416  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d415  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d417  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> n433  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> n434  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> n437  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> n438  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> n446  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> d433  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> d434  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> d437  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> d438  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n676 -> d446  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n677 -> n449  [color=red, key=1, label="CommandLine.ParsingError", style=dashed];
n677 -> n451  [color=red, key=1, label="CommandLine.ParsingError", style=dashed];
n677 -> n452  [color=red, key=1, label="CommandLine.ParsingError", style=dashed];
n677 -> d449  [color=green, key=1, label="CommandLine.ParsingError", style=dashed];
n677 -> d451  [color=green, key=1, label="CommandLine.ParsingError", style=dashed];
n677 -> d452  [color=green, key=1, label="CommandLine.ParsingError", style=dashed];
n678 -> n455  [color=red, key=1, label="CommandLine.PostParsingState", style=dashed];
n678 -> d455  [color=green, key=1, label="CommandLine.PostParsingState", style=dashed];
n679 -> n459  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n460  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n461  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n465  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n468  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n469  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n470  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n477  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n479  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n480  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> n481  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d459  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d461  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d460  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d465  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d468  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d469  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d470  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d477  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d479  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d480  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d481  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> n487  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> n488  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> n489  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> n490  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> n493  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> n495  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> n496  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d487  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d488  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d489  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d490  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d493  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d496  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d495  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n681 -> n504  [color=red, key=1, label="CommandLine.CommandLineOptionsBase", style=dashed];
n681 -> d504  [color=green, key=1, label="CommandLine.CommandLineOptionsBase", style=dashed];
n682 -> n515  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n518  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n521  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n522  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n525  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n526  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n529  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n530  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> n531  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d515  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d518  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d521  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d522  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d525  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d526  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d529  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d530  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n682 -> d531  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n683 -> n534  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> n538  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> n541  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> n548  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> n554  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> n561  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> n582  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d534  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d538  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d541  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d548  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d554  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d561  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d582  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n4  [color=red, key=1, label=string, style=dashed];
n2 -> d3  [color=green, key=0, style=solid];
n2 -> d4  [color=green, key=1, label=string, style=dashed];
n3 -> n4  [color=red, key=0, style=solid];
n4 -> n5  [color=red, key=0, style=solid];
n5 -> n2  [color=blue, key=0, style=bold];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n8  [color=red, key=1, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>", style=dashed];
n6 -> n11  [color=red, key=1, label=object, style=dashed];
n6 -> n543  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n6 -> d7  [color=green, key=0, style=solid];
n6 -> d8  [color=green, key=1, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>", style=dashed];
n6 -> d11  [color=green, key=1, label=object, style=dashed];
n7 -> n8  [color=red, key=0, style=solid];
n8 -> n9  [color=red, key=0, style=solid];
n8 -> n11  [color=red, key=1, label=method, style=dashed];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n15  [color=red, key=2, style=dotted];
n9 -> n10  [color=red, key=0, style=solid];
n9 -> n11  [color=red, key=0, style=solid];
n9 -> n13  [color=red, key=2, style=dotted];
n10 -> n12  [color=red, key=0, style=solid];
n10 -> n14  [color=red, key=2, style=dotted];
n13 -> n16  [color=red, key=0, style=solid];
n13 -> n8  [color=red, key=3, label="Parameter variable System.Reflection.MethodInfo value", style=bold];
n13 -> d8  [color=green, key=3, label="Parameter variable System.Reflection.MethodInfo value", style=bold];
n13 -> d16  [color=green, key=0, style=solid];
n12 -> n6  [color=blue, key=0, style=bold];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n18  [color=red, key=2, style=dotted];
n17 -> n13  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n20 -> n19  [color=blue, key=0, style=bold];
n21 -> n22  [color=red, key=0, style=solid];
n21 -> n23  [color=red, key=1, label=string, style=dashed];
n21 -> n24  [color=red, key=1, label=string, style=dashed];
n21 -> n25  [color=red, key=1, label=string, style=dashed];
n21 -> n28  [color=red, key=1, label=string, style=dashed];
n21 -> n29  [color=red, key=1, label=string, style=dashed];
n21 -> d22  [color=green, key=0, style=solid];
n21 -> d23  [color=green, key=1, label=string, style=dashed];
n21 -> d24  [color=green, key=1, label=string, style=dashed];
n21 -> d25  [color=green, key=1, label=string, style=dashed];
n21 -> d28  [color=green, key=1, label=string, style=dashed];
n21 -> d29  [color=green, key=1, label=string, style=dashed];
n22 -> n23  [color=red, key=0, style=solid];
n22 -> n24  [color=red, key=0, style=solid];
n22 -> n31  [color=red, key=2, style=dotted];
n23 -> n26  [color=red, key=0, style=solid];
n24 -> n25  [color=red, key=0, style=solid];
n24 -> n26  [color=red, key=0, style=solid];
n24 -> n31  [color=red, key=2, style=dotted];
n25 -> n26  [color=red, key=0, style=solid];
n28 -> n29  [color=red, key=0, style=solid];
n29 -> n30  [color=red, key=0, style=solid];
n26 -> n27  [color=red, key=0, style=solid];
n26 -> n28  [color=red, key=0, style=solid];
n27 -> n30  [color=red, key=0, style=solid];
n27 -> n32  [color=red, key=2, style=dotted];
n30 -> n21  [color=blue, key=0, style=bold];
n33 -> n34  [key=0, style=solid];
n34 -> n33  [color=blue, key=0, style=bold];
n35 -> n36  [color=red, key=0, style=solid];
n35 -> d36  [color=green, key=0, style=solid];
n36 -> n37  [color=red, key=0, style=solid];
n37 -> n35  [color=blue, key=0, style=bold];
n38 -> n39  [color=red, key=0, style=solid];
n38 -> d39  [color=green, key=0, style=solid];
n39 -> n40  [color=red, key=0, style=solid];
n40 -> n38  [color=blue, key=0, style=bold];
n41 -> n42  [color=red, key=0, style=solid];
n41 -> n44  [color=red, key=1, label="System.Type", style=dashed];
n41 -> n46  [color=red, key=1, label="System.Type", style=dashed];
n41 -> d42  [color=green, key=0, style=solid];
n41 -> d44  [color=green, key=1, label="System.Type", style=dashed];
n41 -> d46  [color=green, key=1, label="System.Type", style=dashed];
n42 -> n43  [color=red, key=0, style=solid];
n42 -> n44  [color=red, key=0, style=solid];
n44 -> n45  [color=red, key=0, style=solid];
n44 -> n46  [color=red, key=0, style=solid];
n44 -> n49  [color=red, key=2, style=dotted];
n46 -> n47  [color=red, key=0, style=solid];
n43 -> n47  [color=red, key=0, style=solid];
n43 -> n48  [color=red, key=2, style=dotted];
n45 -> n47  [color=red, key=0, style=solid];
n45 -> n50  [color=red, key=2, style=dotted];
n47 -> n41  [color=blue, key=0, style=bold];
n50 -> n507  [key=0, style=solid];
n51 -> n52  [color=red, key=0, style=solid];
n51 -> n53  [color=red, key=1, label=object, style=dashed];
n51 -> n56  [color=red, key=1, label=object, style=dashed];
n51 -> n57  [color=red, key=1, label=object, style=dashed];
n51 -> n55  [color=red, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
n51 -> d52  [color=green, key=0, style=solid];
n51 -> d53  [color=green, key=1, label=object, style=dashed];
n51 -> d56  [color=green, key=1, label=object, style=dashed];
n51 -> d57  [color=green, key=1, label=object, style=dashed];
n51 -> d55  [color=green, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
n52 -> n53  [color=red, key=0, style=solid];
n53 -> n54  [color=red, key=0, style=solid];
n53 -> n59  [color=red, key=2, style=dotted];
n53 -> n56  [color=red, key=1, label=concreteType, style=dashed];
n53 -> n57  [color=red, key=1, label=property, style=dashed];
n56 -> n57  [color=red, key=0, style=solid];
n56 -> n60  [color=red, key=2, style=dotted];
n56 -> n61  [color=red, key=2, style=dotted];
n57 -> n58  [color=red, key=0, style=solid];
n57 -> n62  [color=red, key=2, style=dotted];
n54 -> n55  [color=red, key=0, style=solid];
n54 -> n56  [color=red, key=0, style=solid];
n59 -> n73  [color=red, key=0, style=solid];
n59 -> n74  [color=red, key=1, label=object, style=dashed];
n59 -> n51  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n59 -> n52  [color=red, key=3, label="Parameter variable System.Type concreteType", style=bold];
n59 -> n55  [color=red, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
n59 -> d52  [color=green, key=3, label="Parameter variable System.Type concreteType", style=bold];
n59 -> d55  [color=green, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
n59 -> d73  [color=green, key=0, style=solid];
n59 -> d74  [color=green, key=1, label=object, style=dashed];
n55 -> n58  [color=red, key=0, style=solid];
n58 -> n51  [color=blue, key=0, style=bold];
n63 -> n64  [color=red, key=0, style=solid];
n63 -> n55  [color=red, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
n63 -> d55  [color=green, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
n63 -> d64  [color=green, key=0, style=solid];
n64 -> n65  [color=red, key=0, style=solid];
n64 -> n72  [color=red, key=2, style=dotted];
n64 -> n67  [color=red, key=1, label=list, style=dashed];
n64 -> n69  [color=red, key=1, label=list, style=dashed];
n65 -> n66  [color=red, key=0, style=solid];
n65 -> n67  [color=red, key=0, style=solid];
n72 -> n610  [color=red, key=0, style=solid];
n72 -> n611  [color=red, key=1, label=object, style=dashed];
n72 -> n612  [color=red, key=1, label=object, style=dashed];
n72 -> n63  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n72 -> n59  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n72 -> n297  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n72 -> d610  [color=green, key=0, style=solid];
n72 -> d611  [color=green, key=1, label=object, style=dashed];
n72 -> d612  [color=green, key=1, label=object, style=dashed];
n67 -> n68  [color=red, key=0, style=solid];
n67 -> n69  [color=red, key=0, style=solid];
n69 -> n70  [color=red, key=0, style=solid];
n66 -> n71  [color=red, key=0, style=solid];
n68 -> n71  [color=red, key=0, style=solid];
n68 -> n32  [color=red, key=2, style=dotted];
n70 -> n71  [color=red, key=0, style=solid];
n71 -> n63  [color=blue, key=0, style=bold];
n73 -> n74  [color=red, key=0, style=solid];
n74 -> n75  [color=red, key=0, style=solid];
n74 -> n72  [color=red, key=2, style=dotted];
n74 -> n77  [color=red, key=1, label=list, style=dashed];
n74 -> n79  [color=red, key=1, label=list, style=dashed];
n75 -> n76  [color=red, key=0, style=solid];
n75 -> n77  [color=red, key=0, style=solid];
n77 -> n78  [color=red, key=0, style=solid];
n77 -> n79  [color=red, key=0, style=solid];
n79 -> n80  [color=red, key=0, style=solid];
n79 -> n81  [color=red, key=1, label=pairZero, style=dashed];
n76 -> n82  [color=red, key=0, style=solid];
n78 -> n82  [color=red, key=0, style=solid];
n78 -> n32  [color=red, key=2, style=dotted];
n80 -> n81  [color=red, key=0, style=solid];
n80 -> n82  [color=red, key=1, label="out System.Type", style=dashed];
n81 -> n82  [color=red, key=0, style=solid];
n82 -> n59  [color=blue, key=0, style=bold];
n83 -> n84  [color=red, key=0, style=solid];
n83 -> d84  [color=green, key=0, style=solid];
n84 -> n85  [color=red, key=0, style=solid];
n84 -> n86  [color=red, key=2, style=dotted];
n85 -> n83  [color=blue, key=0, style=bold];
n87 -> n88  [key=0, style=solid];
n87 -> n160  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n87 -> n239  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n87 -> n563  [color=red, key=3, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator", style=bold];
n87 -> n561  [color=red, key=3, label="Parameter variable CommandLine.OptionMap map", style=bold];
n87 -> n558  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n87 -> d561  [color=green, key=3, label="Parameter variable CommandLine.OptionMap map", style=bold];
n87 -> d563  [color=green, key=3, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator", style=bold];
n88 -> n87  [color=blue, key=0, style=bold];
n89 -> n90  [color=red, key=0, style=solid];
n89 -> n162  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n89 -> n243  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n89 -> d90  [color=green, key=0, style=solid];
n89 -> d162  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n89 -> d243  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n90 -> n91  [color=red, key=0, style=solid];
n90 -> n92  [color=red, key=2, style=dotted];
n90 -> n93  [color=red, key=2, style=dotted];
n91 -> n89  [color=blue, key=0, style=bold];
n92 -> n451  [color=red, key=0, style=solid];
n92 -> n452  [color=red, key=1, label=bool, style=dashed];
n92 -> d451  [color=green, key=0, style=solid];
n92 -> d452  [color=green, key=1, label=bool, style=dashed];
n94 -> n95  [color=red, key=0, style=solid];
n94 -> n97  [color=red, key=1, label=string, style=dashed];
n94 -> n99  [color=red, key=1, label=string, style=dashed];
n94 -> n55  [color=red, key=3, label="method methodReturn CommandLine.ArgumentParser Create", style=bold];
n94 -> n565  [color=red, key=3, label="Parameter variable string argument", style=bold];
n94 -> d55  [color=green, key=3, label="method methodReturn CommandLine.ArgumentParser Create", style=bold];
n94 -> d95  [color=green, key=0, style=solid];
n94 -> d97  [color=green, key=1, label=string, style=dashed];
n94 -> d99  [color=green, key=1, label=string, style=dashed];
n94 -> d565  [color=green, key=3, label="Parameter variable string argument", style=bold];
n95 -> n96  [color=red, key=0, style=solid];
n95 -> n97  [color=red, key=0, style=solid];
n95 -> n103  [color=red, key=2, style=dotted];
n97 -> n98  [color=red, key=0, style=solid];
n97 -> n99  [color=red, key=0, style=solid];
n99 -> n100  [color=red, key=0, style=solid];
n99 -> n101  [color=red, key=0, style=solid];
n96 -> n102  [color=red, key=0, style=solid];
n98 -> n102  [color=red, key=0, style=solid];
n98 -> n104  [color=red, key=2, style=dotted];
n100 -> n102  [color=red, key=0, style=solid];
n100 -> n105  [color=red, key=2, style=dotted];
n101 -> n102  [color=red, key=0, style=solid];
n102 -> n94  [color=blue, key=0, style=bold];
n104 -> n159  [key=0, style=solid];
n106 -> n107  [color=red, key=0, style=solid];
n106 -> n108  [color=red, key=1, label=string, style=dashed];
n106 -> n109  [color=red, key=3, label="method methodReturn bool IsInputValue", style=bold];
n106 -> d107  [color=green, key=0, style=solid];
n106 -> d108  [color=green, key=1, label=string, style=dashed];
n106 -> d109  [color=green, key=3, label="method methodReturn bool IsInputValue", style=bold];
n107 -> n108  [color=red, key=0, style=solid];
n107 -> n109  [color=red, key=0, style=solid];
n108 -> n110  [color=red, key=0, style=solid];
n108 -> n103  [color=red, key=2, style=dotted];
n109 -> n110  [color=red, key=0, style=solid];
n110 -> n106  [color=blue, key=0, style=bold];
n111 -> n112  [color=red, key=0, style=solid];
n111 -> n113  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> n114  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> n115  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> n116  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> n160  [color=darkorchid, key=3, label="Parameter variable CommandLine.IArgumentEnumerator ae", style=bold];
n111 -> n239  [color=darkorchid, key=3, label="Parameter variable CommandLine.IArgumentEnumerator ae", style=bold];
n111 -> d112  [color=green, key=0, style=solid];
n111 -> d113  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> d114  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> d115  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> d116  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n112 -> n113  [color=red, key=0, style=solid];
n112 -> n86  [color=red, key=2, style=dotted];
n112 -> n115  [color=red, key=1, label=list, style=dashed];
n112 -> n118  [color=red, key=1, label=list, style=dashed];
n113 -> n114  [color=red, key=0, style=solid];
n113 -> n116  [color=red, key=0, style=solid];
n113 -> n120  [color=red, key=2, style=dotted];
n114 -> n115  [color=red, key=0, style=solid];
n114 -> n116  [color=red, key=0, style=solid];
n114 -> n106  [color=red, key=2, style=dotted];
n115 -> n113  [color=red, key=0, style=solid];
n115 -> n121  [color=red, key=2, style=dotted];
n116 -> n117  [color=red, key=0, style=solid];
n116 -> n118  [color=red, key=0, style=solid];
n116 -> n122  [color=red, key=2, style=dotted];
n118 -> n119  [color=red, key=0, style=solid];
n120 -> n157  [key=0, style=solid];
n120 -> n217  [color=darkorchid, key=3, label="method methodReturn bool MoveNext", style=bold];
n120 -> n467  [color=darkorchid, key=3, label="method methodReturn bool MoveNext", style=bold];
n117 -> n119  [color=red, key=0, style=solid];
n117 -> n123  [color=red, key=2, style=dotted];
n122 -> n158  [key=0, style=solid];
n122 -> n233  [color=darkorchid, key=3, label="method methodReturn bool MovePrevious", style=bold];
n122 -> n476  [color=darkorchid, key=3, label="method methodReturn bool MovePrevious", style=bold];
n119 -> n111  [color=blue, key=0, style=bold];
n123 -> n506  [key=0, style=solid];
n124 -> n125  [color=red, key=0, style=solid];
n124 -> n582  [color=red, key=3, label="Parameter variable bool caseSensitive", style=bold];
n124 -> d125  [color=green, key=0, style=solid];
n124 -> d582  [color=green, key=3, label="Parameter variable bool caseSensitive", style=bold];
n125 -> n126  [color=red, key=0, style=solid];
n125 -> n127  [color=red, key=2, style=dotted];
n126 -> n124  [color=blue, key=0, style=bold];
n128 -> n129  [color=red, key=0, style=solid];
n128 -> n582  [color=red, key=3, label="Parameter variable bool caseSensitive", style=bold];
n128 -> d129  [color=green, key=0, style=solid];
n128 -> d582  [color=green, key=3, label="Parameter variable bool caseSensitive", style=bold];
n129 -> n130  [color=red, key=0, style=solid];
n129 -> n127  [color=red, key=2, style=dotted];
n130 -> n128  [color=blue, key=0, style=bold];
n131 -> n132  [color=red, key=0, style=solid];
n131 -> n134  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n131 -> n163  [color=red, key=3, label="Parameter variable bool value", style=bold];
n131 -> n240  [color=red, key=3, label="Parameter variable bool value", style=bold];
n131 -> d132  [color=green, key=0, style=solid];
n131 -> d163  [color=green, key=3, label="Parameter variable bool value", style=bold];
n131 -> d240  [color=green, key=3, label="Parameter variable bool value", style=bold];
n132 -> n133  [color=red, key=0, style=solid];
n132 -> n134  [color=red, key=2, style=dotted];
n133 -> n131  [color=blue, key=0, style=bold];
n134 -> n135  [color=red, key=0, style=solid];
n134 -> n137  [color=red, key=1, label=bool, style=dashed];
n134 -> n131  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
n134 -> n163  [color=red, key=3, label="Parameter variable bool value", style=bold];
n134 -> n240  [color=red, key=3, label="Parameter variable bool value", style=bold];
n134 -> n109  [color=red, key=3, label="Parameter variable bool addMoveNextIfTrue", style=bold];
n134 -> n136  [color=red, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n134 -> n138  [color=red, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n134 -> n139  [color=red, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n134 -> d109  [color=green, key=3, label="Parameter variable bool addMoveNextIfTrue", style=bold];
n134 -> d135  [color=green, key=0, style=solid];
n134 -> d137  [color=green, key=1, label=bool, style=dashed];
n134 -> d136  [color=green, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n134 -> d138  [color=green, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n134 -> d139  [color=green, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n134 -> d163  [color=green, key=3, label="Parameter variable bool value", style=bold];
n134 -> d240  [color=green, key=3, label="Parameter variable bool value", style=bold];
n135 -> n136  [color=red, key=0, style=solid];
n135 -> n137  [color=red, key=0, style=solid];
n137 -> n138  [color=red, key=0, style=solid];
n137 -> n139  [color=red, key=0, style=solid];
n136 -> n140  [color=red, key=0, style=solid];
n138 -> n140  [color=red, key=0, style=solid];
n139 -> n140  [color=red, key=0, style=solid];
n140 -> n134  [color=blue, key=0, style=bold];
n141 -> n142  [color=red, key=0, style=solid];
n141 -> n162  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n141 -> n243  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n141 -> d142  [color=green, key=0, style=solid];
n141 -> d162  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n141 -> d243  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n142 -> n143  [color=red, key=0, style=solid];
n142 -> n144  [color=red, key=0, style=solid];
n143 -> n144  [color=red, key=0, style=solid];
n143 -> n123  [color=red, key=2, style=dotted];
n144 -> n141  [color=blue, key=0, style=bold];
n145 -> n146  [color=red, key=0, style=solid];
n145 -> n162  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n145 -> n243  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n145 -> d146  [color=green, key=0, style=solid];
n145 -> d162  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n145 -> d243  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n146 -> n147  [color=red, key=0, style=solid];
n146 -> n148  [color=red, key=0, style=solid];
n147 -> n148  [color=red, key=0, style=solid];
n147 -> n123  [color=red, key=2, style=dotted];
n148 -> n145  [color=blue, key=0, style=bold];
n149 -> n150  [key=0, style=solid];
n150 -> n149  [color=blue, key=0, style=bold];
n151 -> n152  [color=red, key=0, style=solid];
n151 -> n153  [color=red, key=1, label=string, style=dashed];
n151 -> d152  [color=green, key=0, style=solid];
n151 -> d153  [color=green, key=1, label=string, style=dashed];
n152 -> n153  [color=red, key=0, style=solid];
n153 -> n154  [color=red, key=0, style=solid];
n154 -> n151  [color=blue, key=0, style=bold];
n155 -> n156  [key=0, style=solid];
n155 -> n226  [color=darkorchid, key=3, label="method methodReturn string GetRemainingFromNext", style=bold];
n155 -> n473  [color=darkorchid, key=3, label="method methodReturn string GetRemainingFromNext", style=bold];
n156 -> n155  [color=blue, key=0, style=bold];
n157 -> n120  [color=blue, key=0, style=bold];
n158 -> n122  [color=blue, key=0, style=bold];
n159 -> n104  [color=blue, key=0, style=bold];
n160 -> n161  [color=red, key=0, style=solid];
n160 -> n162  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n160 -> n169  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> n173  [color=red, key=1, label=object, style=dashed];
n160 -> n178  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> n180  [color=red, key=1, label=object, style=dashed];
n160 -> n185  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> n190  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> n191  [color=red, key=1, label=object, style=dashed];
n160 -> n197  [color=red, key=1, label=object, style=dashed];
n160 -> n87  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n160 -> n139  [color=red, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n160 -> n131  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n160 -> n134  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n160 -> d139  [color=green, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n160 -> d161  [color=green, key=0, style=solid];
n160 -> d162  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n160 -> d169  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> d173  [color=green, key=1, label=object, style=dashed];
n160 -> d178  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> d180  [color=green, key=1, label=object, style=dashed];
n160 -> d185  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> d190  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n160 -> d191  [color=green, key=1, label=object, style=dashed];
n160 -> d197  [color=green, key=1, label=object, style=dashed];
n161 -> n162  [color=red, key=0, style=solid];
n161 -> n202  [color=red, key=2, style=dotted];
n161 -> n203  [color=red, key=2, style=dotted];
n161 -> n169  [color=red, key=1, label=parts, style=dashed];
n161 -> n171  [color=red, key=1, label=parts, style=dashed];
n161 -> n173  [color=red, key=1, label=parts, style=dashed];
n161 -> n179  [color=red, key=1, label=parts, style=dashed];
n161 -> n195  [color=red, key=1, label=parts, style=dashed];
n162 -> n163  [color=red, key=0, style=solid];
n162 -> n164  [color=red, key=1, label=option, style=dashed];
n162 -> n166  [color=red, key=1, label=option, style=dashed];
n162 -> n167  [color=red, key=1, label=option, style=dashed];
n162 -> n168  [color=red, key=1, label=option, style=dashed];
n162 -> n172  [color=red, key=1, label=option, style=dashed];
n162 -> n173  [color=red, key=1, label=option, style=dashed];
n162 -> n175  [color=red, key=1, label=option, style=dashed];
n162 -> n177  [color=red, key=1, label=option, style=dashed];
n162 -> n180  [color=red, key=1, label=option, style=dashed];
n162 -> n182  [color=red, key=1, label=option, style=dashed];
n162 -> n184  [color=red, key=1, label=option, style=dashed];
n162 -> n185  [color=red, key=1, label=option, style=dashed];
n162 -> n187  [color=red, key=1, label=option, style=dashed];
n162 -> n189  [color=red, key=1, label=option, style=dashed];
n162 -> n191  [color=red, key=1, label=option, style=dashed];
n162 -> n193  [color=red, key=1, label=option, style=dashed];
n162 -> n197  [color=red, key=1, label=option, style=dashed];
n162 -> n199  [color=red, key=1, label=option, style=dashed];
n169 -> n170  [color=red, key=0, style=solid];
n169 -> n171  [color=red, key=0, style=solid];
n169 -> n106  [color=red, key=2, style=dotted];
n173 -> n174  [color=red, key=0, style=solid];
n173 -> n204  [color=red, key=2, style=dotted];
n173 -> n176  [color=red, key=1, label=valueSetting, style=dashed];
n178 -> n179  [color=red, key=0, style=solid];
n178 -> n111  [color=red, key=2, style=dotted];
n178 -> n180  [color=red, key=1, label=items, style=dashed];
n180 -> n181  [color=red, key=0, style=solid];
n180 -> n206  [color=red, key=2, style=dotted];
n180 -> n183  [color=red, key=1, label=valueSetting, style=dashed];
n185 -> n186  [color=red, key=0, style=solid];
n185 -> n204  [color=red, key=2, style=dotted];
n185 -> n188  [color=red, key=1, label=valueSetting, style=dashed];
n190 -> n191  [color=red, key=0, style=solid];
n190 -> n111  [color=red, key=2, style=dotted];
n191 -> n192  [color=red, key=0, style=solid];
n191 -> n206  [color=red, key=2, style=dotted];
n191 -> n194  [color=red, key=1, label=valueSetting, style=dashed];
n197 -> n198  [color=red, key=0, style=solid];
n197 -> n207  [color=red, key=2, style=dotted];
n197 -> n200  [color=red, key=1, label=valueSetting, style=dashed];
n171 -> n172  [color=red, key=0, style=solid];
n171 -> n184  [color=red, key=0, style=solid];
n179 -> n180  [color=red, key=0, style=solid];
n179 -> n205  [color=red, key=2, style=dotted];
n195 -> n196  [color=red, key=0, style=solid];
n195 -> n197  [color=red, key=0, style=solid];
n163 -> n164  [color=red, key=0, style=solid];
n163 -> n204  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n163 -> n206  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n163 -> n207  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n164 -> n165  [color=red, key=0, style=solid];
n164 -> n166  [color=red, key=0, style=solid];
n166 -> n167  [color=red, key=0, style=solid];
n167 -> n168  [color=red, key=0, style=solid];
n167 -> n145  [color=red, key=2, style=dotted];
n168 -> n169  [color=red, key=0, style=solid];
n168 -> n195  [color=red, key=0, style=solid];
n172 -> n173  [color=red, key=0, style=solid];
n172 -> n177  [color=red, key=0, style=solid];
n175 -> n176  [color=red, key=0, style=solid];
n175 -> n89  [color=red, key=2, style=dotted];
n177 -> n178  [color=red, key=0, style=solid];
n177 -> n141  [color=red, key=2, style=dotted];
n182 -> n183  [color=red, key=0, style=solid];
n182 -> n89  [color=red, key=2, style=dotted];
n184 -> n185  [color=red, key=0, style=solid];
n184 -> n189  [color=red, key=0, style=solid];
n187 -> n188  [color=red, key=0, style=solid];
n187 -> n89  [color=red, key=2, style=dotted];
n189 -> n190  [color=red, key=0, style=solid];
n189 -> n141  [color=red, key=2, style=dotted];
n193 -> n194  [color=red, key=0, style=solid];
n193 -> n89  [color=red, key=2, style=dotted];
n199 -> n200  [color=red, key=0, style=solid];
n199 -> n89  [color=red, key=2, style=dotted];
n165 -> n201  [color=red, key=0, style=solid];
n170 -> n201  [color=red, key=0, style=solid];
n174 -> n175  [color=red, key=0, style=solid];
n174 -> n176  [color=red, key=0, style=solid];
n204 -> n309  [color=red, key=0, style=solid];
n204 -> n310  [color=red, key=1, label=string, style=dashed];
n204 -> n312  [color=red, key=1, label=string, style=dashed];
n204 -> n313  [color=red, key=1, label=string, style=dashed];
n204 -> n160  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n204 -> n239  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n204 -> n155  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n204 -> n315  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
n204 -> n317  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
n204 -> n318  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
n204 -> d309  [color=green, key=0, style=solid];
n204 -> d310  [color=green, key=1, label=string, style=dashed];
n204 -> d312  [color=green, key=1, label=string, style=dashed];
n204 -> d313  [color=green, key=1, label=string, style=dashed];
n176 -> n201  [color=red, key=0, style=solid];
n176 -> n131  [color=red, key=2, style=dotted];
n181 -> n182  [color=red, key=0, style=solid];
n181 -> n183  [color=red, key=0, style=solid];
n206 -> n319  [color=red, key=0, style=solid];
n206 -> n320  [color=red, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n206 -> n324  [color=red, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n206 -> n325  [color=red, key=1, label=object, style=dashed];
n206 -> n178  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> n190  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> n258  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> n272  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> n160  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n206 -> n239  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n206 -> n109  [color=red, key=3, label="method methodReturn bool SetValue", style=bold];
n206 -> d109  [color=green, key=3, label="method methodReturn bool SetValue", style=bold];
n206 -> d178  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> d190  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> d258  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> d272  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n206 -> d319  [color=green, key=0, style=solid];
n206 -> d320  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n206 -> d324  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n206 -> d325  [color=green, key=1, label=object, style=dashed];
n183 -> n201  [color=red, key=0, style=solid];
n183 -> n131  [color=red, key=2, style=dotted];
n186 -> n187  [color=red, key=0, style=solid];
n186 -> n188  [color=red, key=0, style=solid];
n188 -> n201  [color=red, key=0, style=solid];
n188 -> n134  [color=red, key=2, style=dotted];
n192 -> n193  [color=red, key=0, style=solid];
n192 -> n194  [color=red, key=0, style=solid];
n194 -> n201  [color=red, key=0, style=solid];
n194 -> n134  [color=red, key=2, style=dotted];
n196 -> n201  [color=red, key=0, style=solid];
n198 -> n199  [color=red, key=0, style=solid];
n198 -> n200  [color=red, key=0, style=solid];
n207 -> n358  [color=red, key=0, style=solid];
n207 -> n359  [color=red, key=1, label=bool, style=dashed];
n207 -> n109  [color=red, key=3, label="method methodReturn bool SetValue", style=bold];
n207 -> n160  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n207 -> n239  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n207 -> d109  [color=green, key=3, label="method methodReturn bool SetValue", style=bold];
n207 -> d358  [color=green, key=0, style=solid];
n207 -> d359  [color=green, key=1, label=bool, style=dashed];
n200 -> n201  [color=red, key=0, style=solid];
n200 -> n131  [color=red, key=2, style=dotted];
n201 -> n160  [color=blue, key=0, style=bold];
n208 -> n209  [color=red, key=0, style=solid];
n208 -> n210  [color=red, key=1, label=string, style=dashed];
n208 -> d209  [color=green, key=0, style=solid];
n208 -> d210  [color=green, key=1, label=string, style=dashed];
n209 -> n210  [color=red, key=0, style=solid];
n209 -> n213  [color=red, key=2, style=dotted];
n210 -> n211  [color=red, key=0, style=solid];
n213 -> n601  [color=red, key=0, style=solid];
n213 -> n602  [color=red, key=1, label=string, style=dashed];
n213 -> n208  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n213 -> n209  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n213 -> d209  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n213 -> d601  [color=green, key=0, style=solid];
n213 -> d602  [color=green, key=1, label=string, style=dashed];
n211 -> n212  [color=red, key=0, style=solid];
n212 -> n208  [color=blue, key=0, style=bold];
n214 -> n215  [color=red, key=0, style=solid];
n214 -> d215  [color=green, key=0, style=solid];
n215 -> n216  [color=red, key=0, style=solid];
n216 -> n214  [color=blue, key=0, style=bold];
n217 -> n218  [color=red, key=0, style=solid];
n217 -> n109  [color=red, key=3, label="method methodReturn bool MoveNext", style=bold];
n217 -> d109  [color=green, key=3, label="method methodReturn bool MoveNext", style=bold];
n217 -> d218  [color=green, key=0, style=solid];
n218 -> n219  [color=red, key=0, style=solid];
n218 -> n222  [color=red, key=0, style=solid];
n219 -> n220  [color=red, key=0, style=solid];
n222 -> n223  [color=red, key=0, style=solid];
n220 -> n221  [color=red, key=0, style=solid];
n220 -> n225  [color=red, key=2, style=dotted];
n221 -> n224  [color=red, key=0, style=solid];
n223 -> n224  [color=red, key=0, style=solid];
n224 -> n217  [color=blue, key=0, style=bold];
n226 -> n227  [color=red, key=0, style=solid];
n226 -> d227  [color=green, key=0, style=solid];
n227 -> n228  [color=red, key=0, style=solid];
n227 -> n229  [color=red, key=0, style=solid];
n228 -> n232  [color=red, key=0, style=solid];
n228 -> n32  [color=red, key=2, style=dotted];
n229 -> n230  [color=red, key=0, style=solid];
n229 -> n231  [color=red, key=0, style=solid];
n230 -> n232  [color=red, key=0, style=solid];
n230 -> n32  [color=red, key=2, style=dotted];
n231 -> n232  [color=red, key=0, style=solid];
n231 -> n202  [color=red, key=2, style=dotted];
n232 -> n226  [color=blue, key=0, style=bold];
n233 -> n234  [color=red, key=0, style=solid];
n233 -> d234  [color=green, key=0, style=solid];
n234 -> n235  [color=red, key=0, style=solid];
n234 -> n236  [color=red, key=2, style=dotted];
n235 -> n233  [color=blue, key=0, style=bold];
n237 -> n238  [key=0, style=solid];
n238 -> n237  [color=blue, key=0, style=bold];
n239 -> n240  [color=red, key=0, style=solid];
n239 -> n241  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> n243  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n239 -> n249  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> n253  [color=red, key=1, label=object, style=dashed];
n239 -> n258  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> n260  [color=red, key=1, label=object, style=dashed];
n239 -> n264  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> n267  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> n272  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> n273  [color=red, key=1, label=object, style=dashed];
n239 -> n277  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n239 -> n279  [color=red, key=1, label=object, style=dashed];
n239 -> n87  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n239 -> n139  [color=red, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n239 -> n131  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n239 -> n134  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n239 -> n136  [color=red, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n239 -> d136  [color=green, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n239 -> d139  [color=green, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n239 -> d240  [color=green, key=0, style=solid];
n239 -> d241  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d243  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n239 -> d249  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d253  [color=green, key=1, label=object, style=dashed];
n239 -> d258  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d260  [color=green, key=1, label=object, style=dashed];
n239 -> d264  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d267  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d272  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d273  [color=green, key=1, label=object, style=dashed];
n239 -> d277  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n239 -> d279  [color=green, key=1, label=object, style=dashed];
n240 -> n241  [color=red, key=0, style=solid];
n240 -> n204  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n240 -> n206  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n241 -> n242  [color=red, key=0, style=solid];
n241 -> n208  [color=red, key=2, style=dotted];
n241 -> n202  [color=red, key=2, style=dotted];
n241 -> n243  [color=red, key=1, label=group, style=dashed];
n241 -> n249  [color=red, key=1, label=group, style=dashed];
n241 -> n251  [color=red, key=1, label=group, style=dashed];
n241 -> n253  [color=red, key=1, label=group, style=dashed];
n241 -> n259  [color=red, key=1, label=group, style=dashed];
n241 -> n277  [color=red, key=1, label=group, style=dashed];
n243 -> n244  [color=red, key=0, style=solid];
n243 -> n246  [color=red, key=1, label=option, style=dashed];
n243 -> n247  [color=red, key=1, label=option, style=dashed];
n243 -> n248  [color=red, key=1, label=option, style=dashed];
n243 -> n252  [color=red, key=1, label=option, style=dashed];
n243 -> n253  [color=red, key=1, label=option, style=dashed];
n243 -> n255  [color=red, key=1, label=option, style=dashed];
n243 -> n257  [color=red, key=1, label=option, style=dashed];
n243 -> n260  [color=red, key=1, label=option, style=dashed];
n243 -> n262  [color=red, key=1, label=option, style=dashed];
n243 -> n266  [color=red, key=1, label=option, style=dashed];
n243 -> n267  [color=red, key=1, label=option, style=dashed];
n243 -> n269  [color=red, key=1, label=option, style=dashed];
n243 -> n271  [color=red, key=1, label=option, style=dashed];
n243 -> n273  [color=red, key=1, label=option, style=dashed];
n243 -> n275  [color=red, key=1, label=option, style=dashed];
n243 -> n279  [color=red, key=1, label=option, style=dashed];
n249 -> n250  [color=red, key=0, style=solid];
n249 -> n251  [color=red, key=0, style=solid];
n253 -> n254  [color=red, key=0, style=solid];
n253 -> n155  [color=red, key=2, style=dotted];
n253 -> n204  [color=red, key=2, style=dotted];
n253 -> n256  [color=red, key=1, label=valueSetting, style=dashed];
n258 -> n259  [color=red, key=0, style=solid];
n258 -> n111  [color=red, key=2, style=dotted];
n258 -> n260  [color=red, key=1, label=items, style=dashed];
n260 -> n261  [color=red, key=0, style=solid];
n260 -> n206  [color=red, key=2, style=dotted];
n260 -> n263  [color=red, key=1, label=valueSetting, style=dashed];
n264 -> n265  [color=red, key=0, style=solid];
n264 -> n266  [color=red, key=0, style=solid];
n264 -> n106  [color=red, key=2, style=dotted];
n267 -> n268  [color=red, key=0, style=solid];
n267 -> n204  [color=red, key=2, style=dotted];
n267 -> n270  [color=red, key=1, label=valueSetting, style=dashed];
n272 -> n273  [color=red, key=0, style=solid];
n272 -> n111  [color=red, key=2, style=dotted];
n273 -> n274  [color=red, key=0, style=solid];
n273 -> n206  [color=red, key=2, style=dotted];
n273 -> n276  [color=red, key=1, label=valueSetting, style=dashed];
n277 -> n278  [color=red, key=0, style=solid];
n277 -> n279  [color=red, key=0, style=solid];
n279 -> n280  [color=red, key=0, style=solid];
n279 -> n242  [color=red, key=0, style=solid];
n279 -> n207  [color=red, key=2, style=dotted];
n242 -> n243  [color=red, key=0, style=solid];
n242 -> n281  [color=red, key=0, style=solid];
n242 -> n120  [color=red, key=2, style=dotted];
n251 -> n252  [color=red, key=0, style=solid];
n251 -> n264  [color=red, key=0, style=solid];
n259 -> n260  [color=red, key=0, style=solid];
n259 -> n155  [color=red, key=2, style=dotted];
n259 -> n205  [color=red, key=2, style=dotted];
n281 -> n282  [color=red, key=0, style=solid];
n244 -> n245  [color=red, key=0, style=solid];
n244 -> n246  [color=red, key=0, style=solid];
n246 -> n247  [color=red, key=0, style=solid];
n247 -> n248  [color=red, key=0, style=solid];
n247 -> n145  [color=red, key=2, style=dotted];
n248 -> n249  [color=red, key=0, style=solid];
n248 -> n277  [color=red, key=0, style=solid];
n252 -> n253  [color=red, key=0, style=solid];
n252 -> n257  [color=red, key=0, style=solid];
n255 -> n256  [color=red, key=0, style=solid];
n255 -> n89  [color=red, key=2, style=dotted];
n257 -> n258  [color=red, key=0, style=solid];
n257 -> n141  [color=red, key=2, style=dotted];
n262 -> n263  [color=red, key=0, style=solid];
n262 -> n89  [color=red, key=2, style=dotted];
n266 -> n267  [color=red, key=0, style=solid];
n266 -> n271  [color=red, key=0, style=solid];
n269 -> n270  [color=red, key=0, style=solid];
n269 -> n89  [color=red, key=2, style=dotted];
n271 -> n272  [color=red, key=0, style=solid];
n271 -> n141  [color=red, key=2, style=dotted];
n275 -> n276  [color=red, key=0, style=solid];
n275 -> n89  [color=red, key=2, style=dotted];
n245 -> n282  [color=red, key=0, style=solid];
n250 -> n282  [color=red, key=0, style=solid];
n254 -> n255  [color=red, key=0, style=solid];
n254 -> n256  [color=red, key=0, style=solid];
n256 -> n282  [color=red, key=0, style=solid];
n256 -> n131  [color=red, key=2, style=dotted];
n261 -> n262  [color=red, key=0, style=solid];
n261 -> n263  [color=red, key=0, style=solid];
n263 -> n282  [color=red, key=0, style=solid];
n263 -> n134  [color=red, key=2, style=dotted];
n265 -> n282  [color=red, key=0, style=solid];
n268 -> n269  [color=red, key=0, style=solid];
n268 -> n270  [color=red, key=0, style=solid];
n270 -> n282  [color=red, key=0, style=solid];
n270 -> n134  [color=red, key=2, style=dotted];
n274 -> n275  [color=red, key=0, style=solid];
n274 -> n276  [color=red, key=0, style=solid];
n276 -> n282  [color=red, key=0, style=solid];
n276 -> n131  [color=red, key=2, style=dotted];
n278 -> n282  [color=red, key=0, style=solid];
n280 -> n282  [color=red, key=0, style=solid];
n282 -> n239  [color=blue, key=0, style=bold];
n283 -> n284  [color=red, key=0, style=solid];
n283 -> n285  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> n286  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> n287  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> n288  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> n289  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> n290  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> n292  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n283 -> n293  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n283 -> d284  [color=green, key=0, style=solid];
n283 -> d285  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> d286  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> d287  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> d288  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> d289  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> d290  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n283 -> d292  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n283 -> d293  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n284 -> n285  [color=red, key=0, style=solid];
n284 -> n291  [color=red, key=0, style=solid];
n285 -> n286  [color=red, key=0, style=solid];
n286 -> n287  [color=red, key=0, style=solid];
n287 -> n288  [color=red, key=0, style=solid];
n288 -> n289  [color=red, key=0, style=solid];
n289 -> n290  [color=red, key=0, style=solid];
n290 -> n292  [color=red, key=0, style=solid];
n292 -> n293  [color=red, key=0, style=solid];
n292 -> n294  [color=red, key=0, style=solid];
n293 -> n295  [color=red, key=0, style=solid];
n291 -> n295  [color=red, key=0, style=solid];
n291 -> n296  [color=red, key=2, style=dotted];
n294 -> n295  [color=red, key=0, style=solid];
n294 -> n296  [color=red, key=2, style=dotted];
n295 -> n283  [color=blue, key=0, style=bold];
n297 -> n298  [color=red, key=0, style=solid];
n297 -> n300  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n297 -> n304  [color=red, key=1, label=object, style=dashed];
n297 -> n55  [color=red, key=3, label="method methodReturn CommandLine.OptionMap CreateMap", style=bold];
n297 -> n558  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n297 -> d55  [color=green, key=3, label="method methodReturn CommandLine.OptionMap CreateMap", style=bold];
n297 -> d298  [color=green, key=0, style=solid];
n297 -> d300  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n297 -> d304  [color=green, key=1, label=object, style=dashed];
n298 -> n299  [color=red, key=0, style=solid];
n298 -> n72  [color=red, key=2, style=dotted];
n298 -> n300  [color=red, key=1, label=list, style=dashed];
n298 -> n301  [color=red, key=1, label=list, style=dashed];
n300 -> n301  [color=red, key=0, style=solid];
n300 -> n308  [color=red, key=2, style=dotted];
n300 -> n303  [color=red, key=1, label=map, style=dashed];
n300 -> n304  [color=red, key=1, label=map, style=dashed];
n300 -> n305  [color=red, key=1, label=map, style=dashed];
n304 -> n305  [color=red, key=0, style=solid];
n299 -> n300  [color=red, key=0, style=solid];
n299 -> n306  [color=red, key=0, style=solid];
n301 -> n302  [color=red, key=0, style=solid];
n301 -> n304  [color=red, key=0, style=solid];
n301 -> n303  [color=red, key=1, label=pair, style=dashed];
n306 -> n307  [color=red, key=0, style=solid];
n308 -> n379  [color=red, key=0, style=solid];
n308 -> n384  [color=red, key=1, label=int, style=dashed];
n308 -> n385  [color=red, key=1, label=int, style=dashed];
n308 -> n387  [color=red, key=1, label=int, style=dashed];
n308 -> d379  [color=green, key=0, style=solid];
n308 -> d384  [color=green, key=1, label=int, style=dashed];
n308 -> d385  [color=green, key=1, label=int, style=dashed];
n308 -> d387  [color=green, key=1, label=int, style=dashed];
n303 -> n301  [color=red, key=0, style=solid];
n303 -> n283  [color=red, key=2, style=dotted];
n305 -> n307  [color=red, key=0, style=solid];
n302 -> n303  [color=red, key=0, style=solid];
n302 -> n301  [color=red, key=0, style=solid];
n307 -> n297  [color=blue, key=0, style=bold];
n309 -> n310  [color=red, key=0, style=solid];
n309 -> n311  [color=red, key=0, style=solid];
n310 -> n314  [color=red, key=0, style=solid];
n310 -> n315  [color=red, key=2, style=dotted];
n312 -> n314  [color=red, key=0, style=solid];
n312 -> n317  [color=red, key=2, style=dotted];
n313 -> n314  [color=red, key=0, style=solid];
n313 -> n318  [color=red, key=2, style=dotted];
n311 -> n312  [color=red, key=0, style=solid];
n311 -> n313  [color=red, key=0, style=solid];
n311 -> n316  [color=red, key=2, style=dotted];
n316 -> n656  [color=red, key=0, style=solid];
n316 -> d656  [color=green, key=0, style=solid];
n314 -> n204  [color=blue, key=0, style=bold];
n315 -> n362  [color=red, key=0, style=solid];
n315 -> n363  [color=red, key=1, label=object, style=dashed];
n315 -> n364  [color=red, key=1, label=object, style=dashed];
n315 -> n365  [color=red, key=1, label=string, style=dashed];
n315 -> n204  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n315 -> n109  [color=red, key=3, label="method methodReturn bool SetValueList", style=bold];
n315 -> d109  [color=green, key=3, label="method methodReturn bool SetValueList", style=bold];
n315 -> d362  [color=green, key=0, style=solid];
n315 -> d363  [color=green, key=1, label=object, style=dashed];
n315 -> d364  [color=green, key=1, label=object, style=dashed];
n315 -> d365  [color=green, key=1, label=string, style=dashed];
n317 -> n349  [color=red, key=0, style=solid];
n317 -> n351  [color=red, key=1, label=string, style=dashed];
n317 -> n204  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n317 -> n109  [color=red, key=3, label="method methodReturn bool SetNullableValue", style=bold];
n317 -> d109  [color=green, key=3, label="method methodReturn bool SetNullableValue", style=bold];
n317 -> d349  [color=green, key=0, style=solid];
n317 -> d351  [color=green, key=1, label=string, style=dashed];
n318 -> n335  [color=red, key=0, style=solid];
n318 -> n337  [color=red, key=1, label=string, style=dashed];
n318 -> n339  [color=red, key=1, label=string, style=dashed];
n318 -> n204  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n318 -> n109  [color=red, key=3, label="method methodReturn bool SetValueScalar", style=bold];
n318 -> d109  [color=green, key=3, label="method methodReturn bool SetValueScalar", style=bold];
n318 -> d335  [color=green, key=0, style=solid];
n318 -> d337  [color=green, key=1, label=string, style=dashed];
n318 -> d339  [color=green, key=1, label=string, style=dashed];
n319 -> n320  [color=red, key=0, style=solid];
n319 -> n331  [color=red, key=2, style=dotted];
n319 -> n324  [color=red, key=1, label=elementType, style=dashed];
n320 -> n321  [color=red, key=0, style=solid];
n320 -> n332  [color=red, key=2, style=dotted];
n320 -> n322  [color=red, key=1, label=array, style=dashed];
n320 -> n324  [color=red, key=1, label=array, style=dashed];
n320 -> n325  [color=red, key=1, label=array, style=dashed];
n324 -> n325  [color=red, key=0, style=solid];
n324 -> n333  [color=red, key=2, style=dotted];
n324 -> n334  [color=red, key=2, style=dotted];
n325 -> n326  [color=red, key=0, style=solid];
n325 -> n328  [color=red, key=0, style=solid];
n325 -> n61  [color=red, key=2, style=dotted];
n321 -> n322  [color=red, key=0, style=solid];
n321 -> n324  [color=red, key=1, label=i, style=dashed];
n321 -> n328  [color=red, key=1, label=i, style=dashed];
n321 -> n321  [color=red, key=3, label="Local variable int i", style=bold];
n322 -> n323  [color=red, key=0, style=solid];
n322 -> n329  [color=red, key=0, style=solid];
n328 -> n322  [color=red, key=0, style=solid];
n328 -> n328  [color=red, key=1, label=i, style=dashed];
n323 -> n324  [color=red, key=0, style=solid];
n329 -> n330  [color=red, key=0, style=solid];
n326 -> n327  [color=red, key=0, style=solid];
n327 -> n330  [color=red, key=0, style=solid];
n330 -> n206  [color=blue, key=0, style=bold];
n335 -> n336  [color=red, key=0, style=solid];
n335 -> n338  [color=red, key=0, style=solid];
n337 -> n340  [color=red, key=0, style=solid];
n337 -> n342  [color=red, key=0, style=solid];
n337 -> n344  [color=red, key=0, style=solid];
n337 -> n346  [color=red, key=0, style=solid];
n337 -> n348  [color=red, key=2, style=dotted];
n337 -> n61  [color=red, key=2, style=dotted];
n339 -> n340  [color=red, key=0, style=solid];
n339 -> n342  [color=red, key=0, style=solid];
n339 -> n344  [color=red, key=0, style=solid];
n339 -> n346  [color=red, key=0, style=solid];
n339 -> n333  [color=red, key=2, style=dotted];
n339 -> n61  [color=red, key=2, style=dotted];
n336 -> n337  [color=red, key=0, style=solid];
n338 -> n339  [color=red, key=0, style=solid];
n340 -> n341  [color=red, key=0, style=solid];
n342 -> n343  [color=red, key=0, style=solid];
n344 -> n345  [color=red, key=0, style=solid];
n346 -> n347  [color=red, key=0, style=solid];
n341 -> n347  [color=red, key=0, style=solid];
n343 -> n347  [color=red, key=0, style=solid];
n345 -> n347  [color=red, key=0, style=solid];
n347 -> n318  [color=blue, key=0, style=bold];
n349 -> n350  [color=red, key=0, style=solid];
n349 -> n356  [color=red, key=2, style=dotted];
n349 -> n351  [color=red, key=1, label=nc, style=dashed];
n351 -> n352  [color=red, key=0, style=solid];
n351 -> n354  [color=red, key=0, style=solid];
n351 -> n357  [color=red, key=2, style=dotted];
n351 -> n61  [color=red, key=2, style=dotted];
n350 -> n351  [color=red, key=0, style=solid];
n352 -> n353  [color=red, key=0, style=solid];
n354 -> n355  [color=red, key=0, style=solid];
n353 -> n355  [color=red, key=0, style=solid];
n355 -> n317  [color=blue, key=0, style=bold];
n358 -> n359  [color=red, key=0, style=solid];
n359 -> n360  [color=red, key=0, style=solid];
n359 -> n61  [color=red, key=2, style=dotted];
n360 -> n361  [color=red, key=0, style=solid];
n361 -> n207  [color=blue, key=0, style=bold];
n362 -> n363  [color=red, key=0, style=solid];
n363 -> n364  [color=red, key=0, style=solid];
n363 -> n86  [color=red, key=2, style=dotted];
n363 -> n61  [color=red, key=2, style=dotted];
n364 -> n365  [color=red, key=0, style=solid];
n364 -> n62  [color=red, key=2, style=dotted];
n364 -> n368  [color=red, key=1, label=fieldRef, style=dashed];
n365 -> n366  [color=red, key=0, style=solid];
n365 -> n372  [color=red, key=2, style=dotted];
n365 -> n367  [color=red, key=1, label=values, style=dashed];
n365 -> n368  [color=red, key=1, label=values, style=dashed];
n368 -> n369  [color=red, key=0, style=solid];
n368 -> n121  [color=red, key=2, style=dotted];
n366 -> n367  [color=red, key=0, style=solid];
n366 -> n368  [color=red, key=1, label=i, style=dashed];
n366 -> n369  [color=red, key=1, label=i, style=dashed];
n366 -> n321  [color=red, key=3, label="Local variable int i", style=bold];
n367 -> n368  [color=red, key=0, style=solid];
n367 -> n370  [color=red, key=0, style=solid];
n369 -> n367  [color=red, key=0, style=solid];
n369 -> n369  [color=red, key=1, label=i, style=dashed];
n370 -> n371  [color=red, key=0, style=solid];
n371 -> n315  [color=blue, key=0, style=bold];
n373 -> n374  [color=red, key=0, style=solid];
n373 -> d374  [color=green, key=0, style=solid];
n374 -> n375  [color=red, key=0, style=solid];
n375 -> n373  [color=blue, key=0, style=bold];
n376 -> n377  [color=red, key=0, style=solid];
n376 -> d377  [color=green, key=0, style=solid];
n377 -> n378  [color=red, key=0, style=solid];
n378 -> n376  [color=blue, key=0, style=bold];
n379 -> n380  [color=red, key=0, style=solid];
n384 -> n385  [color=red, key=0, style=solid];
n384 -> n389  [color=red, key=2, style=dotted];
n385 -> n386  [color=red, key=0, style=solid];
n385 -> n389  [color=red, key=2, style=dotted];
n387 -> n388  [color=red, key=0, style=solid];
n387 -> n389  [color=red, key=2, style=dotted];
n380 -> n381  [color=red, key=0, style=solid];
n381 -> n382  [color=red, key=0, style=solid];
n381 -> n383  [color=red, key=0, style=solid];
n382 -> n384  [color=red, key=0, style=solid];
n382 -> n385  [color=red, key=1, label=comparer, style=dashed];
n383 -> n384  [color=red, key=0, style=solid];
n383 -> n385  [color=red, key=1, label=comparer, style=dashed];
n386 -> n387  [color=red, key=0, style=solid];
n386 -> n388  [color=red, key=0, style=solid];
n388 -> n308  [color=blue, key=0, style=bold];
n390 -> n391  [color=red, key=0, style=solid];
n390 -> d391  [color=green, key=0, style=solid];
n391 -> n392  [color=red, key=0, style=solid];
n391 -> n393  [color=red, key=2, style=dotted];
n391 -> n394  [color=red, key=2, style=dotted];
n392 -> n390  [color=blue, key=0, style=bold];
n393 -> n402  [color=red, key=0, style=solid];
n393 -> n109  [color=red, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
n393 -> d109  [color=green, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
n393 -> d402  [color=green, key=0, style=solid];
n394 -> n395  [color=red, key=0, style=solid];
n394 -> n109  [color=red, key=3, label="method methodReturn bool EnforceRequiredRule", style=bold];
n394 -> d109  [color=green, key=3, label="method methodReturn bool EnforceRequiredRule", style=bold];
n394 -> d395  [color=green, key=0, style=solid];
n395 -> n396  [color=red, key=0, style=solid];
n395 -> n399  [color=red, key=0, style=solid];
n395 -> n397  [color=red, key=1, label=option, style=dashed];
n396 -> n397  [color=red, key=0, style=solid];
n396 -> n395  [color=red, key=0, style=solid];
n399 -> n400  [color=red, key=0, style=solid];
n397 -> n398  [color=red, key=0, style=solid];
n397 -> n401  [color=red, key=2, style=dotted];
n398 -> n400  [color=red, key=0, style=solid];
n401 -> n421  [color=red, key=0, style=solid];
n401 -> n423  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n401 -> n424  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n401 -> n425  [color=red, key=1, label="bool?", style=dashed];
n401 -> n426  [color=red, key=1, label="bool?", style=dashed];
n401 -> n427  [color=red, key=1, label="bool?", style=dashed];
n401 -> n428  [color=red, key=1, label="bool?", style=dashed];
n401 -> n429  [color=red, key=1, label=object, style=dashed];
n401 -> n395  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n401 -> n109  [color=red, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n401 -> n55  [color=red, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n401 -> d55  [color=green, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n401 -> d109  [color=green, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n401 -> d395  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n401 -> d421  [color=green, key=0, style=solid];
n401 -> d423  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n401 -> d424  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n401 -> d425  [color=green, key=1, label="bool?", style=dashed];
n401 -> d426  [color=green, key=1, label="bool?", style=dashed];
n401 -> d427  [color=green, key=1, label="bool?", style=dashed];
n401 -> d428  [color=green, key=1, label="bool?", style=dashed];
n401 -> d429  [color=green, key=1, label=object, style=dashed];
n400 -> n394  [color=blue, key=0, style=bold];
n402 -> n403  [color=red, key=0, style=solid];
n402 -> n404  [color=red, key=0, style=solid];
n403 -> n412  [color=red, key=0, style=solid];
n404 -> n405  [color=red, key=0, style=solid];
n404 -> n407  [color=red, key=0, style=solid];
n404 -> n406  [color=red, key=1, label=option, style=dashed];
n405 -> n406  [color=red, key=0, style=solid];
n405 -> n404  [color=red, key=0, style=solid];
n407 -> n408  [color=red, key=0, style=solid];
n407 -> n411  [color=red, key=0, style=solid];
n407 -> n409  [color=red, key=1, label=info, style=dashed];
n406 -> n404  [color=red, key=0, style=solid];
n406 -> n413  [color=red, key=2, style=dotted];
n413 -> n414  [color=red, key=0, style=solid];
n413 -> n416  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n413 -> n404  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n413 -> d404  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n413 -> d414  [color=green, key=0, style=solid];
n413 -> d416  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n408 -> n409  [color=red, key=0, style=solid];
n408 -> n407  [color=red, key=0, style=solid];
n411 -> n412  [color=red, key=0, style=solid];
n409 -> n410  [color=red, key=0, style=solid];
n409 -> n401  [color=red, key=2, style=dotted];
n410 -> n412  [color=red, key=0, style=solid];
n412 -> n393  [color=blue, key=0, style=bold];
n414 -> n415  [color=red, key=0, style=solid];
n414 -> n416  [color=red, key=1, label=setName, style=dashed];
n414 -> n417  [color=red, key=1, label=setName, style=dashed];
n416 -> n417  [color=red, key=0, style=solid];
n416 -> n373  [color=red, key=2, style=dotted];
n416 -> n420  [color=red, key=2, style=dotted];
n415 -> n416  [color=red, key=0, style=solid];
n415 -> n417  [color=red, key=0, style=solid];
n415 -> n419  [color=red, key=2, style=dotted];
n417 -> n418  [color=red, key=0, style=solid];
n417 -> n376  [color=red, key=2, style=dotted];
n418 -> n413  [color=blue, key=0, style=bold];
n421 -> n422  [color=red, key=0, style=solid];
n421 -> n430  [color=red, key=0, style=solid];
n423 -> n424  [color=red, key=0, style=solid];
n424 -> n425  [color=red, key=0, style=solid];
n425 -> n426  [color=red, key=0, style=solid];
n425 -> n427  [color=red, key=0, style=solid];
n426 -> n427  [color=red, key=0, style=solid];
n427 -> n428  [color=red, key=0, style=solid];
n427 -> n429  [color=red, key=0, style=solid];
n428 -> n429  [color=red, key=0, style=solid];
n429 -> n430  [color=red, key=0, style=solid];
n429 -> n93  [color=red, key=2, style=dotted];
n422 -> n423  [color=red, key=0, style=solid];
n422 -> n431  [color=red, key=2, style=dotted];
n422 -> n424  [color=red, key=1, label=error, style=dashed];
n422 -> n426  [color=red, key=1, label=error, style=dashed];
n422 -> n428  [color=red, key=1, label=error, style=dashed];
n422 -> n429  [color=red, key=1, label=error, style=dashed];
n430 -> n401  [color=blue, key=0, style=bold];
n431 -> n449  [color=red, key=0, style=solid];
n431 -> d449  [color=green, key=0, style=solid];
n432 -> n433  [color=red, key=0, style=solid];
n432 -> n434  [color=red, key=1, label=TRight, style=dashed];
n432 -> d433  [color=green, key=0, style=solid];
n432 -> d434  [color=green, key=1, label=TRight, style=dashed];
n433 -> n434  [color=red, key=0, style=solid];
n434 -> n435  [color=red, key=0, style=solid];
n435 -> n432  [color=blue, key=0, style=bold];
n436 -> n437  [color=red, key=0, style=solid];
n436 -> d437  [color=green, key=0, style=solid];
n437 -> n438  [color=red, key=0, style=solid];
n437 -> n441  [color=red, key=2, style=dotted];
n437 -> n439  [color=red, key=1, label=leftHash, style=dashed];
n438 -> n439  [color=red, key=0, style=solid];
n438 -> n441  [color=red, key=2, style=dotted];
n439 -> n440  [color=red, key=0, style=solid];
n440 -> n436  [color=blue, key=0, style=bold];
n442 -> n443  [color=red, key=0, style=solid];
n442 -> d443  [color=green, key=0, style=solid];
n443 -> n444  [color=red, key=0, style=solid];
n443 -> n446  [color=red, key=1, label=other, style=dashed];
n444 -> n445  [color=red, key=0, style=solid];
n444 -> n446  [color=red, key=0, style=solid];
n446 -> n447  [color=red, key=0, style=solid];
n446 -> n448  [color=red, key=2, style=dotted];
n445 -> n447  [color=red, key=0, style=solid];
n447 -> n442  [color=blue, key=0, style=bold];
n449 -> n450  [color=red, key=0, style=solid];
n449 -> n149  [color=red, key=2, style=dotted];
n450 -> n431  [color=blue, key=0, style=bold];
n451 -> n452  [color=red, key=0, style=solid];
n451 -> n151  [color=red, key=2, style=dotted];
n452 -> n453  [color=red, key=0, style=solid];
n453 -> n92  [color=blue, key=0, style=bold];
n454 -> n455  [color=red, key=0, style=solid];
n454 -> d455  [color=green, key=0, style=solid];
n455 -> n456  [color=red, key=0, style=solid];
n455 -> n86  [color=red, key=2, style=dotted];
n456 -> n454  [color=blue, key=0, style=bold];
n457 -> n458  [color=red, key=0, style=solid];
n457 -> n459  [color=red, key=1, label="string[]", style=dashed];
n457 -> n461  [color=red, key=1, label="string[]", style=dashed];
n457 -> d458  [color=green, key=0, style=solid];
n457 -> d459  [color=green, key=1, label="string[]", style=dashed];
n457 -> d461  [color=green, key=1, label="string[]", style=dashed];
n458 -> n459  [color=red, key=0, style=solid];
n458 -> n463  [color=red, key=2, style=dotted];
n459 -> n460  [color=red, key=0, style=solid];
n461 -> n462  [color=red, key=0, style=solid];
n463 -> n598  [color=red, key=0, style=solid];
n463 -> n599  [color=red, key=1, label=string, style=dashed];
n463 -> n457  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
n463 -> n536  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
n463 -> n543  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
n463 -> n209  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n463 -> n537  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n463 -> n544  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n463 -> n545  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n463 -> d209  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n463 -> d537  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n463 -> d544  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n463 -> d545  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n463 -> d598  [color=green, key=0, style=solid];
n463 -> d599  [color=green, key=1, label=string, style=dashed];
n460 -> n461  [color=red, key=0, style=solid];
n462 -> n457  [color=blue, key=0, style=bold];
n464 -> n465  [color=red, key=0, style=solid];
n464 -> d465  [color=green, key=0, style=solid];
n465 -> n466  [color=red, key=0, style=solid];
n466 -> n464  [color=blue, key=0, style=bold];
n467 -> n468  [color=red, key=0, style=solid];
n467 -> d468  [color=green, key=0, style=solid];
n468 -> n469  [color=red, key=0, style=solid];
n468 -> n471  [color=red, key=0, style=solid];
n469 -> n470  [color=red, key=0, style=solid];
n471 -> n472  [color=red, key=0, style=solid];
n470 -> n472  [color=red, key=0, style=solid];
n472 -> n467  [color=blue, key=0, style=bold];
n473 -> n474  [color=red, key=0, style=solid];
n473 -> d474  [color=green, key=0, style=solid];
n474 -> n475  [color=red, key=0, style=solid];
n474 -> n236  [color=red, key=2, style=dotted];
n475 -> n473  [color=blue, key=0, style=bold];
n476 -> n477  [color=red, key=0, style=solid];
n476 -> d477  [color=green, key=0, style=solid];
n477 -> n478  [color=red, key=0, style=solid];
n477 -> n479  [color=red, key=0, style=solid];
n478 -> n483  [color=red, key=0, style=solid];
n478 -> n32  [color=red, key=2, style=dotted];
n479 -> n480  [color=red, key=0, style=solid];
n479 -> n482  [color=red, key=0, style=solid];
n480 -> n481  [color=red, key=0, style=solid];
n482 -> n483  [color=red, key=0, style=solid];
n481 -> n483  [color=red, key=0, style=solid];
n483 -> n476  [color=blue, key=0, style=bold];
n484 -> n485  [key=0, style=solid];
n485 -> n484  [color=blue, key=0, style=bold];
n486 -> n487  [color=red, key=0, style=solid];
n486 -> d487  [color=green, key=0, style=solid];
n487 -> n488  [color=red, key=0, style=solid];
n488 -> n489  [color=red, key=0, style=solid];
n488 -> n63  [color=red, key=2, style=dotted];
n489 -> n490  [color=red, key=0, style=solid];
n489 -> n491  [color=red, key=0, style=solid];
n490 -> n491  [color=red, key=0, style=solid];
n490 -> n51  [color=red, key=2, style=dotted];
n491 -> n486  [color=blue, key=0, style=bold];
n492 -> n493  [color=red, key=0, style=solid];
n492 -> n496  [color=red, key=1, label=string, style=dashed];
n492 -> n109  [color=red, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
n492 -> n565  [color=red, key=3, label="Parameter variable string item", style=bold];
n492 -> d109  [color=green, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
n492 -> d493  [color=green, key=0, style=solid];
n492 -> d496  [color=green, key=1, label=string, style=dashed];
n492 -> d565  [color=green, key=3, label="Parameter variable string item", style=bold];
n493 -> n494  [color=red, key=0, style=solid];
n493 -> n495  [color=red, key=0, style=solid];
n496 -> n497  [color=red, key=0, style=solid];
n496 -> n121  [color=red, key=2, style=dotted];
n494 -> n498  [color=red, key=0, style=solid];
n495 -> n496  [color=red, key=0, style=solid];
n497 -> n498  [color=red, key=0, style=solid];
n498 -> n492  [color=blue, key=0, style=bold];
n499 -> n500  [key=0, style=solid];
n499 -> n540  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n500 -> n499  [color=blue, key=0, style=bold];
n501 -> n502  [key=0, style=solid];
n501 -> n543  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n502 -> n501  [color=blue, key=0, style=bold];
n503 -> n504  [color=red, key=0, style=solid];
n503 -> d504  [color=green, key=0, style=solid];
n504 -> n505  [color=red, key=0, style=solid];
n504 -> n454  [color=red, key=2, style=dotted];
n505 -> n503  [color=blue, key=0, style=bold];
n506 -> n123  [color=blue, key=0, style=bold];
n507 -> n50  [color=blue, key=0, style=bold];
n508 -> n509  [key=0, style=solid];
n509 -> n508  [color=blue, key=0, style=bold];
n510 -> n511  [key=0, style=solid];
n511 -> n510  [color=blue, key=0, style=bold];
n512 -> n513  [key=0, style=solid];
n513 -> n512  [color=blue, key=0, style=bold];
n514 -> n515  [color=red, key=0, style=solid];
n514 -> d515  [color=green, key=0, style=solid];
n515 -> n516  [color=red, key=0, style=solid];
n516 -> n514  [color=blue, key=0, style=bold];
n517 -> n518  [color=red, key=0, style=solid];
n517 -> d518  [color=green, key=0, style=solid];
n518 -> n519  [color=red, key=0, style=solid];
n519 -> n517  [color=blue, key=0, style=bold];
n520 -> n521  [color=red, key=0, style=solid];
n520 -> n522  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n520 -> d521  [color=green, key=0, style=solid];
n520 -> d522  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n521 -> n522  [color=red, key=0, style=solid];
n522 -> n523  [color=red, key=0, style=solid];
n523 -> n520  [color=blue, key=0, style=bold];
n524 -> n525  [color=red, key=0, style=solid];
n524 -> n526  [color=red, key=1, label=bool, style=dashed];
n524 -> d525  [color=green, key=0, style=solid];
n524 -> d526  [color=green, key=1, label=bool, style=dashed];
n525 -> n526  [color=red, key=0, style=solid];
n526 -> n527  [color=red, key=0, style=solid];
n527 -> n524  [color=blue, key=0, style=bold];
n528 -> n529  [color=red, key=0, style=solid];
n528 -> n530  [color=red, key=1, label=bool, style=dashed];
n528 -> n531  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n528 -> d529  [color=green, key=0, style=solid];
n528 -> d530  [color=green, key=1, label=bool, style=dashed];
n528 -> d531  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n529 -> n530  [color=red, key=0, style=solid];
n530 -> n531  [color=red, key=0, style=solid];
n531 -> n532  [color=red, key=0, style=solid];
n532 -> n528  [color=blue, key=0, style=bold];
n533 -> n534  [color=red, key=0, style=solid];
n533 -> d534  [color=green, key=0, style=solid];
n534 -> n535  [color=red, key=0, style=solid];
n534 -> n512  [color=red, key=2, style=dotted];
n535 -> n533  [color=blue, key=0, style=bold];
n536 -> n537  [color=red, key=0, style=solid];
n536 -> n538  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n536 -> d537  [color=green, key=0, style=solid];
n536 -> d538  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n537 -> n538  [color=red, key=0, style=solid];
n537 -> n463  [color=red, key=2, style=dotted];
n538 -> n539  [color=red, key=0, style=solid];
n539 -> n536  [color=blue, key=0, style=bold];
n540 -> n541  [color=red, key=0, style=solid];
n540 -> n499  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n540 -> n543  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n540 -> d541  [color=green, key=0, style=solid];
n541 -> n542  [color=red, key=0, style=solid];
n541 -> n543  [color=red, key=2, style=dotted];
n542 -> n540  [color=blue, key=0, style=bold];
n543 -> n544  [color=red, key=0, style=solid];
n543 -> n545  [color=red, key=1, label=object, style=dashed];
n543 -> n546  [color=red, key=1, label=object, style=dashed];
n543 -> n547  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n543 -> n548  [color=red, key=1, label="string[]", style=dashed];
n543 -> n550  [color=red, key=1, label=object, style=dashed];
n543 -> n551  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n543 -> n554  [color=red, key=1, label="string[]", style=dashed];
n543 -> n501  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter helpWriter", style=bold];
n543 -> n540  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n543 -> n109  [color=red, key=3, label="method methodReturn bool ParseArguments", style=bold];
n543 -> n558  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n543 -> d109  [color=green, key=3, label="method methodReturn bool ParseArguments", style=bold];
n543 -> d544  [color=green, key=0, style=solid];
n543 -> d545  [color=green, key=1, label=object, style=dashed];
n543 -> d546  [color=green, key=1, label=object, style=dashed];
n543 -> d547  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n543 -> d548  [color=green, key=1, label="string[]", style=dashed];
n543 -> d550  [color=green, key=1, label=object, style=dashed];
n543 -> d551  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n543 -> d554  [color=green, key=1, label="string[]", style=dashed];
n544 -> n545  [color=red, key=0, style=solid];
n544 -> n463  [color=red, key=2, style=dotted];
n545 -> n546  [color=red, key=0, style=solid];
n545 -> n463  [color=red, key=2, style=dotted];
n546 -> n547  [color=red, key=0, style=solid];
n546 -> n556  [color=red, key=2, style=dotted];
n546 -> n548  [color=red, key=1, label=pair, style=dashed];
n546 -> n550  [color=red, key=1, label=pair, style=dashed];
n547 -> n548  [color=red, key=0, style=solid];
n547 -> n554  [color=red, key=0, style=solid];
n548 -> n549  [color=red, key=0, style=solid];
n548 -> n553  [color=red, key=0, style=solid];
n548 -> n557  [color=red, key=2, style=dotted];
n548 -> n558  [color=red, key=2, style=dotted];
n550 -> n551  [color=red, key=0, style=solid];
n550 -> n6  [color=red, key=2, style=dotted];
n551 -> n552  [color=red, key=0, style=solid];
n551 -> n559  [color=red, key=2, style=dotted];
n554 -> n555  [color=red, key=0, style=solid];
n554 -> n558  [color=red, key=2, style=dotted];
n556 -> n626  [color=red, key=0, style=solid];
n556 -> n543  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n556 -> n55  [color=red, key=3, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
n556 -> d55  [color=green, key=3, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
n556 -> d626  [color=green, key=0, style=solid];
n549 -> n550  [color=red, key=0, style=solid];
n553 -> n555  [color=red, key=0, style=solid];
n557 -> n582  [color=red, key=0, style=solid];
n557 -> n584  [color=red, key=1, label="string[]", style=dashed];
n557 -> n585  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n557 -> n586  [color=red, key=1, label="string[]", style=dashed];
n557 -> n588  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n557 -> n589  [color=red, key=1, label="string[]", style=dashed];
n557 -> n543  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
n557 -> n109  [color=red, key=3, label="method methodReturn bool ParseHelp", style=bold];
n557 -> d109  [color=green, key=3, label="method methodReturn bool ParseHelp", style=bold];
n557 -> d582  [color=green, key=0, style=solid];
n557 -> d584  [color=green, key=1, label="string[]", style=dashed];
n557 -> d585  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n557 -> d586  [color=green, key=1, label="string[]", style=dashed];
n557 -> d588  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n557 -> d589  [color=green, key=1, label="string[]", style=dashed];
n558 -> n560  [color=red, key=0, style=solid];
n558 -> n561  [color=red, key=1, label=object, style=dashed];
n558 -> n562  [color=red, key=1, label=object, style=dashed];
n558 -> n563  [color=red, key=1, label="string[]", style=dashed];
n558 -> n569  [color=red, key=1, label=object, style=dashed];
n558 -> n571  [color=red, key=1, label=object, style=dashed];
n558 -> n543  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n558 -> d560  [color=green, key=0, style=solid];
n558 -> d561  [color=green, key=1, label=object, style=dashed];
n558 -> d562  [color=green, key=1, label=object, style=dashed];
n558 -> d563  [color=green, key=1, label="string[]", style=dashed];
n558 -> d569  [color=green, key=1, label=object, style=dashed];
n558 -> d571  [color=green, key=1, label=object, style=dashed];
n552 -> n555  [color=red, key=0, style=solid];
n555 -> n543  [color=blue, key=0, style=bold];
n560 -> n561  [color=red, key=0, style=solid];
n560 -> n578  [color=red, key=1, label=hadError, style=dashed];
n561 -> n562  [color=red, key=0, style=solid];
n561 -> n297  [color=red, key=2, style=dotted];
n561 -> n569  [color=red, key=1, label=optionMap, style=dashed];
n561 -> n578  [color=red, key=1, label=optionMap, style=dashed];
n562 -> n563  [color=red, key=0, style=solid];
n562 -> n486  [color=red, key=2, style=dotted];
n562 -> n575  [color=red, key=1, label=target, style=dashed];
n562 -> n576  [color=red, key=1, label=target, style=dashed];
n563 -> n564  [color=red, key=0, style=solid];
n563 -> n457  [color=red, key=2, style=dotted];
n563 -> n565  [color=red, key=1, label=arguments, style=dashed];
n563 -> n569  [color=red, key=1, label=arguments, style=dashed];
n563 -> n574  [color=red, key=1, label=arguments, style=dashed];
n569 -> n570  [color=red, key=0, style=solid];
n569 -> n87  [color=red, key=2, style=dotted];
n569 -> n573  [color=red, key=1, label=result, style=dashed];
n571 -> n572  [color=red, key=0, style=solid];
n571 -> n581  [color=red, key=2, style=dotted];
n578 -> n579  [color=red, key=0, style=solid];
n578 -> n390  [color=red, key=2, style=dotted];
n578 -> n578  [color=red, key=1, label=hadError, style=dashed];
n575 -> n576  [color=red, key=0, style=solid];
n575 -> n564  [color=red, key=0, style=solid];
n576 -> n577  [color=red, key=0, style=solid];
n576 -> n564  [color=red, key=0, style=solid];
n576 -> n492  [color=red, key=2, style=dotted];
n564 -> n565  [color=red, key=0, style=solid];
n564 -> n578  [color=red, key=0, style=solid];
n564 -> n120  [color=red, key=2, style=dotted];
n565 -> n566  [color=red, key=0, style=solid];
n565 -> n567  [color=red, key=1, label=argument, style=dashed];
n565 -> n576  [color=red, key=1, label=argument, style=dashed];
n574 -> n564  [color=red, key=0, style=solid];
n574 -> n120  [color=red, key=2, style=dotted];
n566 -> n567  [color=red, key=0, style=solid];
n566 -> n564  [color=red, key=0, style=solid];
n567 -> n568  [color=red, key=0, style=solid];
n567 -> n94  [color=red, key=2, style=dotted];
n567 -> n569  [color=red, key=1, label=parser, style=dashed];
n567 -> n571  [color=red, key=1, label=parser, style=dashed];
n568 -> n569  [color=red, key=0, style=solid];
n568 -> n575  [color=red, key=0, style=solid];
n570 -> n571  [color=red, key=0, style=solid];
n570 -> n573  [color=red, key=0, style=solid];
n573 -> n574  [color=red, key=0, style=solid];
n573 -> n564  [color=red, key=0, style=solid];
n572 -> n564  [color=red, key=0, style=solid];
n572 -> n578  [color=red, key=1, label=hadError, style=dashed];
n581 -> n594  [color=red, key=0, style=solid];
n581 -> n595  [color=red, key=1, label=object, style=dashed];
n581 -> n558  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n581 -> d594  [color=green, key=0, style=solid];
n581 -> d595  [color=green, key=1, label=object, style=dashed];
n577 -> n564  [color=red, key=0, style=solid];
n577 -> n578  [color=red, key=1, label=hadError, style=dashed];
n579 -> n580  [color=red, key=0, style=solid];
n580 -> n558  [color=blue, key=0, style=bold];
n582 -> n583  [color=red, key=0, style=solid];
n582 -> n586  [color=red, key=1, label=caseSensitive, style=dashed];
n582 -> n589  [color=red, key=1, label=caseSensitive, style=dashed];
n584 -> n585  [color=red, key=0, style=solid];
n584 -> n592  [color=red, key=0, style=solid];
n584 -> n321  [color=red, key=3, label="Local variable int i", style=bold];
n585 -> n586  [color=red, key=0, style=solid];
n585 -> n588  [color=red, key=0, style=solid];
n585 -> n31  [color=red, key=2, style=dotted];
n586 -> n587  [color=red, key=0, style=solid];
n586 -> n588  [color=red, key=0, style=solid];
n586 -> n124  [color=red, key=2, style=dotted];
n588 -> n589  [color=red, key=0, style=solid];
n588 -> n591  [color=red, key=0, style=solid];
n588 -> n31  [color=red, key=2, style=dotted];
n589 -> n590  [color=red, key=0, style=solid];
n589 -> n591  [color=red, key=0, style=solid];
n589 -> n128  [color=red, key=2, style=dotted];
n583 -> n584  [color=red, key=0, style=solid];
n583 -> n586  [color=red, key=1, label=i, style=dashed];
n583 -> n589  [color=red, key=1, label=i, style=dashed];
n583 -> n591  [color=red, key=1, label=i, style=dashed];
n591 -> n584  [color=red, key=0, style=solid];
n591 -> n591  [color=red, key=1, label=i, style=dashed];
n592 -> n593  [color=red, key=0, style=solid];
n587 -> n593  [color=red, key=0, style=solid];
n590 -> n593  [color=red, key=0, style=solid];
n593 -> n557  [color=blue, key=0, style=bold];
n594 -> n595  [color=red, key=0, style=solid];
n594 -> n596  [color=red, key=0, style=solid];
n595 -> n596  [color=red, key=0, style=solid];
n595 -> n597  [color=red, key=2, style=dotted];
n596 -> n581  [color=blue, key=0, style=bold];
n598 -> n599  [color=red, key=0, style=solid];
n598 -> n600  [color=red, key=0, style=solid];
n599 -> n600  [color=red, key=0, style=solid];
n599 -> n48  [color=red, key=2, style=dotted];
n600 -> n463  [color=blue, key=0, style=bold];
n601 -> n602  [color=red, key=0, style=solid];
n601 -> n603  [color=red, key=0, style=solid];
n601 -> n31  [color=red, key=2, style=dotted];
n602 -> n603  [color=red, key=0, style=solid];
n602 -> n604  [color=red, key=2, style=dotted];
n603 -> n213  [color=blue, key=0, style=bold];
n605 -> n606  [color=red, key=0, style=solid];
n605 -> n607  [color=red, key=1, label=string, style=dashed];
n605 -> d606  [color=green, key=0, style=solid];
n605 -> d607  [color=green, key=1, label=string, style=dashed];
n606 -> n607  [color=red, key=0, style=solid];
n606 -> n608  [color=red, key=0, style=solid];
n607 -> n608  [color=red, key=0, style=solid];
n607 -> n609  [color=red, key=2, style=dotted];
n608 -> n605  [color=blue, key=0, style=bold];
n610 -> n611  [color=red, key=0, style=solid];
n610 -> n86  [color=red, key=2, style=dotted];
n610 -> n619  [color=red, key=1, label=list, style=dashed];
n610 -> n620  [color=red, key=1, label=list, style=dashed];
n611 -> n612  [color=red, key=0, style=solid];
n611 -> n620  [color=red, key=0, style=solid];
n612 -> n613  [color=red, key=0, style=solid];
n612 -> n622  [color=red, key=2, style=dotted];
n612 -> n623  [color=red, key=2, style=dotted];
n619 -> n613  [color=red, key=0, style=solid];
n619 -> n432  [color=red, key=2, style=dotted];
n619 -> n121  [color=red, key=2, style=dotted];
n620 -> n621  [color=red, key=0, style=solid];
n613 -> n614  [color=red, key=0, style=solid];
n613 -> n620  [color=red, key=0, style=solid];
n613 -> n615  [color=red, key=1, label=property, style=dashed];
n613 -> n617  [color=red, key=1, label=property, style=dashed];
n613 -> n619  [color=red, key=1, label=property, style=dashed];
n614 -> n615  [color=red, key=0, style=solid];
n614 -> n613  [color=red, key=0, style=solid];
n615 -> n616  [color=red, key=0, style=solid];
n615 -> n624  [color=red, key=2, style=dotted];
n617 -> n618  [color=red, key=0, style=solid];
n617 -> n625  [color=red, key=2, style=dotted];
n617 -> n619  [color=red, key=1, label=attribute, style=dashed];
n616 -> n617  [color=red, key=0, style=solid];
n616 -> n613  [color=red, key=0, style=solid];
n618 -> n619  [color=red, key=0, style=solid];
n618 -> n613  [color=red, key=0, style=solid];
n621 -> n72  [color=blue, key=0, style=bold];
n626 -> n627  [color=red, key=0, style=solid];
n626 -> n622  [color=red, key=2, style=dotted];
n626 -> n634  [color=red, key=2, style=dotted];
n627 -> n628  [color=red, key=0, style=solid];
n627 -> n632  [color=red, key=0, style=solid];
n627 -> n629  [color=red, key=1, label=method, style=dashed];
n627 -> n631  [color=red, key=1, label=method, style=dashed];
n628 -> n629  [color=red, key=0, style=solid];
n628 -> n627  [color=red, key=0, style=solid];
n632 -> n633  [color=red, key=0, style=solid];
n629 -> n630  [color=red, key=0, style=solid];
n629 -> n625  [color=red, key=2, style=dotted];
n629 -> n631  [color=red, key=1, label=attribute, style=dashed];
n631 -> n633  [color=red, key=0, style=solid];
n631 -> n432  [color=red, key=2, style=dotted];
n630 -> n631  [color=red, key=0, style=solid];
n630 -> n627  [color=red, key=0, style=solid];
n633 -> n556  [color=blue, key=0, style=bold];
n635 -> n636  [color=red, key=0, style=solid];
n635 -> n639  [color=red, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n635 -> n55  [color=red, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n635 -> d55  [color=green, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n635 -> d636  [color=green, key=0, style=solid];
n635 -> d639  [color=green, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n636 -> n637  [color=red, key=0, style=solid];
n636 -> n622  [color=red, key=2, style=dotted];
n636 -> n634  [color=red, key=2, style=dotted];
n637 -> n638  [color=red, key=0, style=solid];
n637 -> n642  [color=red, key=0, style=solid];
n637 -> n639  [color=red, key=1, label=method, style=dashed];
n638 -> n639  [color=red, key=0, style=solid];
n638 -> n637  [color=red, key=0, style=solid];
n642 -> n643  [color=red, key=0, style=solid];
n639 -> n640  [color=red, key=0, style=solid];
n639 -> n625  [color=red, key=2, style=dotted];
n639 -> n641  [color=red, key=1, label=attribute, style=dashed];
n640 -> n641  [color=red, key=0, style=solid];
n640 -> n637  [color=red, key=0, style=solid];
n641 -> n643  [color=red, key=0, style=solid];
n643 -> n635  [color=blue, key=0, style=bold];
n644 -> n645  [color=red, key=0, style=solid];
n644 -> n646  [color=red, key=1, label=object, style=dashed];
n644 -> d645  [color=green, key=0, style=solid];
n644 -> d646  [color=green, key=1, label=object, style=dashed];
n645 -> n646  [color=red, key=0, style=solid];
n645 -> n86  [color=red, key=2, style=dotted];
n645 -> n653  [color=red, key=1, label=list, style=dashed];
n645 -> n654  [color=red, key=1, label=list, style=dashed];
n646 -> n647  [color=red, key=0, style=solid];
n646 -> n622  [color=red, key=2, style=dotted];
n646 -> n623  [color=red, key=2, style=dotted];
n653 -> n647  [color=red, key=0, style=solid];
n653 -> n121  [color=red, key=2, style=dotted];
n654 -> n655  [color=red, key=0, style=solid];
n647 -> n648  [color=red, key=0, style=solid];
n647 -> n654  [color=red, key=0, style=solid];
n647 -> n649  [color=red, key=1, label=property, style=dashed];
n647 -> n651  [color=red, key=1, label=property, style=dashed];
n648 -> n649  [color=red, key=0, style=solid];
n648 -> n647  [color=red, key=0, style=solid];
n649 -> n650  [color=red, key=0, style=solid];
n649 -> n624  [color=red, key=2, style=dotted];
n651 -> n652  [color=red, key=0, style=solid];
n651 -> n625  [color=red, key=2, style=dotted];
n651 -> n653  [color=red, key=1, label=attribute, style=dashed];
n650 -> n651  [color=red, key=0, style=solid];
n650 -> n647  [color=red, key=0, style=solid];
n652 -> n653  [color=red, key=0, style=solid];
n652 -> n647  [color=red, key=0, style=solid];
n655 -> n644  [color=blue, key=0, style=bold];
n656 -> n657  [color=red, key=0, style=solid];
n656 -> n658  [color=red, key=2, style=dotted];
n656 -> n659  [color=red, key=2, style=dotted];
n657 -> n316  [color=blue, key=0, style=bold];
n660 -> n661  [color=red, key=0, style=solid];
n660 -> d661  [color=green, key=0, style=solid];
n661 -> n662  [color=red, key=0, style=solid];
n661 -> n663  [color=red, key=2, style=dotted];
n662 -> n660  [color=blue, key=0, style=bold];
d3 -> d4  [color=green, key=0, style=solid];
d4 -> n5  [color=green, key=0, style=solid];
d7 -> d8  [color=green, key=0, style=solid];
d8 -> d9  [color=green, key=0, style=solid];
d8 -> d11  [color=green, key=1, label=method, style=dashed];
d9 -> d11  [color=green, key=0, style=solid];
d9 -> d10  [color=green, key=0, style=solid];
d9 -> n13  [color=green, key=2, style=dotted];
d11 -> n12  [color=green, key=0, style=solid];
d11 -> n15  [color=green, key=2, style=dotted];
d10 -> n12  [color=green, key=0, style=solid];
d10 -> n14  [color=green, key=2, style=dotted];
d16 -> n17  [color=green, key=0, style=solid];
d16 -> n18  [color=green, key=2, style=dotted];
d22 -> d23  [color=green, key=0, style=solid];
d22 -> d24  [color=green, key=0, style=solid];
d22 -> n31  [color=green, key=2, style=dotted];
d23 -> d26  [color=green, key=0, style=solid];
d24 -> d25  [color=green, key=0, style=solid];
d24 -> d26  [color=green, key=0, style=solid];
d24 -> n31  [color=green, key=2, style=dotted];
d26 -> d28  [color=green, key=0, style=solid];
d26 -> d27  [color=green, key=0, style=solid];
d25 -> d26  [color=green, key=0, style=solid];
d28 -> d29  [color=green, key=0, style=solid];
d29 -> n30  [color=green, key=0, style=solid];
d27 -> n30  [color=green, key=0, style=solid];
d27 -> n32  [color=green, key=2, style=dotted];
d36 -> n37  [color=green, key=0, style=solid];
d39 -> n40  [color=green, key=0, style=solid];
d42 -> d43  [color=green, key=0, style=solid];
d42 -> d44  [color=green, key=0, style=solid];
d43 -> n47  [color=green, key=0, style=solid];
d43 -> n48  [color=green, key=2, style=dotted];
d44 -> d45  [color=green, key=0, style=solid];
d44 -> d46  [color=green, key=0, style=solid];
d44 -> n49  [color=green, key=2, style=dotted];
d45 -> n47  [color=green, key=0, style=solid];
d45 -> n50  [color=green, key=2, style=dotted];
d46 -> n47  [color=green, key=0, style=solid];
d52 -> d53  [color=green, key=0, style=solid];
d53 -> d54  [color=green, key=0, style=solid];
d53 -> n59  [color=green, key=2, style=dotted];
d53 -> d56  [color=green, key=1, label=concreteType, style=dashed];
d53 -> d57  [color=green, key=1, label=property, style=dashed];
d54 -> d56  [color=green, key=0, style=solid];
d54 -> d55  [color=green, key=0, style=solid];
d56 -> d57  [color=green, key=0, style=solid];
d56 -> n60  [color=green, key=2, style=dotted];
d56 -> n61  [color=green, key=2, style=dotted];
d57 -> n58  [color=green, key=0, style=solid];
d57 -> n62  [color=green, key=2, style=dotted];
d55 -> n58  [color=green, key=0, style=solid];
d64 -> d65  [color=green, key=0, style=solid];
d64 -> n72  [color=green, key=2, style=dotted];
d64 -> d67  [color=green, key=1, label=list, style=dashed];
d64 -> d69  [color=green, key=1, label=list, style=dashed];
d65 -> d66  [color=green, key=0, style=solid];
d65 -> d67  [color=green, key=0, style=solid];
d67 -> d68  [color=green, key=0, style=solid];
d67 -> d69  [color=green, key=0, style=solid];
d69 -> d70  [color=green, key=0, style=solid];
d66 -> n71  [color=green, key=0, style=solid];
d68 -> n71  [color=green, key=0, style=solid];
d68 -> n32  [color=green, key=2, style=dotted];
d70 -> n71  [color=green, key=0, style=solid];
d73 -> d74  [color=green, key=0, style=solid];
d74 -> d75  [color=green, key=0, style=solid];
d74 -> n72  [color=green, key=2, style=dotted];
d74 -> d77  [color=green, key=1, label=list, style=dashed];
d74 -> d79  [color=green, key=1, label=list, style=dashed];
d75 -> d76  [color=green, key=0, style=solid];
d75 -> d77  [color=green, key=0, style=solid];
d77 -> d78  [color=green, key=0, style=solid];
d77 -> d79  [color=green, key=0, style=solid];
d79 -> d80  [color=green, key=0, style=solid];
d79 -> d81  [color=green, key=1, label=pairZero, style=dashed];
d76 -> n82  [color=green, key=0, style=solid];
d78 -> n82  [color=green, key=0, style=solid];
d78 -> n32  [color=green, key=2, style=dotted];
d80 -> d81  [color=green, key=0, style=solid];
d80 -> n82  [color=green, key=1, label="out System.Type", style=dashed];
d81 -> n82  [color=green, key=0, style=solid];
d84 -> n85  [color=green, key=0, style=solid];
d84 -> n86  [color=green, key=2, style=dotted];
d90 -> n91  [color=green, key=0, style=solid];
d90 -> n92  [color=green, key=2, style=dotted];
d90 -> n93  [color=green, key=2, style=dotted];
d95 -> d96  [color=green, key=0, style=solid];
d95 -> d97  [color=green, key=0, style=solid];
d95 -> n103  [color=green, key=2, style=dotted];
d96 -> n102  [color=green, key=0, style=solid];
d97 -> d98  [color=green, key=0, style=solid];
d97 -> d99  [color=green, key=0, style=solid];
d98 -> n102  [color=green, key=0, style=solid];
d98 -> n104  [color=green, key=2, style=dotted];
d99 -> d100  [color=green, key=0, style=solid];
d99 -> d101  [color=green, key=0, style=solid];
d100 -> n102  [color=green, key=0, style=solid];
d100 -> n105  [color=green, key=2, style=dotted];
d101 -> n102  [color=green, key=0, style=solid];
d107 -> d108  [color=green, key=0, style=solid];
d107 -> d109  [color=green, key=0, style=solid];
d108 -> n110  [color=green, key=0, style=solid];
d108 -> n103  [color=green, key=2, style=dotted];
d109 -> n110  [color=green, key=0, style=solid];
d112 -> d113  [color=green, key=0, style=solid];
d112 -> n86  [color=green, key=2, style=dotted];
d112 -> d115  [color=green, key=1, label=list, style=dashed];
d112 -> d118  [color=green, key=1, label=list, style=dashed];
d113 -> d114  [color=green, key=0, style=solid];
d113 -> d116  [color=green, key=0, style=solid];
d113 -> n120  [color=green, key=2, style=dotted];
d115 -> d113  [color=green, key=0, style=solid];
d115 -> n121  [color=green, key=2, style=dotted];
d118 -> n119  [color=green, key=0, style=solid];
d114 -> d115  [color=green, key=0, style=solid];
d114 -> d116  [color=green, key=0, style=solid];
d114 -> n106  [color=green, key=2, style=dotted];
d116 -> d117  [color=green, key=0, style=solid];
d116 -> d118  [color=green, key=0, style=solid];
d116 -> n122  [color=green, key=2, style=dotted];
d117 -> n119  [color=green, key=0, style=solid];
d117 -> n123  [color=green, key=2, style=dotted];
d125 -> n126  [color=green, key=0, style=solid];
d125 -> n127  [color=green, key=2, style=dotted];
d129 -> n130  [color=green, key=0, style=solid];
d129 -> n127  [color=green, key=2, style=dotted];
d132 -> n133  [color=green, key=0, style=solid];
d132 -> n134  [color=green, key=2, style=dotted];
d135 -> d136  [color=green, key=0, style=solid];
d135 -> d137  [color=green, key=0, style=solid];
d136 -> n140  [color=green, key=0, style=solid];
d137 -> d138  [color=green, key=0, style=solid];
d137 -> d139  [color=green, key=0, style=solid];
d138 -> n140  [color=green, key=0, style=solid];
d139 -> n140  [color=green, key=0, style=solid];
d142 -> d143  [color=green, key=0, style=solid];
d142 -> n144  [color=green, key=0, style=solid];
d143 -> n144  [color=green, key=0, style=solid];
d143 -> n123  [color=green, key=2, style=dotted];
d146 -> d147  [color=green, key=0, style=solid];
d146 -> n148  [color=green, key=0, style=solid];
d147 -> n148  [color=green, key=0, style=solid];
d147 -> n123  [color=green, key=2, style=dotted];
d152 -> d153  [color=green, key=0, style=solid];
d153 -> n154  [color=green, key=0, style=solid];
d161 -> d162  [color=green, key=0, style=solid];
d161 -> n202  [color=green, key=2, style=dotted];
d161 -> n203  [color=green, key=2, style=dotted];
d161 -> d169  [color=green, key=1, label=parts, style=dashed];
d161 -> d171  [color=green, key=1, label=parts, style=dashed];
d161 -> d173  [color=green, key=1, label=parts, style=dashed];
d161 -> d179  [color=green, key=1, label=parts, style=dashed];
d161 -> d195  [color=green, key=1, label=parts, style=dashed];
d162 -> d163  [color=green, key=0, style=solid];
d162 -> d164  [color=green, key=1, label=option, style=dashed];
d162 -> d166  [color=green, key=1, label=option, style=dashed];
d162 -> d167  [color=green, key=1, label=option, style=dashed];
d162 -> d168  [color=green, key=1, label=option, style=dashed];
d162 -> d172  [color=green, key=1, label=option, style=dashed];
d162 -> d173  [color=green, key=1, label=option, style=dashed];
d162 -> d175  [color=green, key=1, label=option, style=dashed];
d162 -> d177  [color=green, key=1, label=option, style=dashed];
d162 -> d180  [color=green, key=1, label=option, style=dashed];
d162 -> d182  [color=green, key=1, label=option, style=dashed];
d162 -> d184  [color=green, key=1, label=option, style=dashed];
d162 -> d185  [color=green, key=1, label=option, style=dashed];
d162 -> d187  [color=green, key=1, label=option, style=dashed];
d162 -> d189  [color=green, key=1, label=option, style=dashed];
d162 -> d191  [color=green, key=1, label=option, style=dashed];
d162 -> d193  [color=green, key=1, label=option, style=dashed];
d162 -> d197  [color=green, key=1, label=option, style=dashed];
d162 -> d199  [color=green, key=1, label=option, style=dashed];
d169 -> d170  [color=green, key=0, style=solid];
d169 -> d171  [color=green, key=0, style=solid];
d169 -> n106  [color=green, key=2, style=dotted];
d171 -> d172  [color=green, key=0, style=solid];
d171 -> d184  [color=green, key=0, style=solid];
d173 -> d174  [color=green, key=0, style=solid];
d173 -> n204  [color=green, key=2, style=dotted];
d173 -> d176  [color=green, key=1, label=valueSetting, style=dashed];
d179 -> d180  [color=green, key=0, style=solid];
d179 -> n205  [color=green, key=2, style=dotted];
d195 -> d197  [color=green, key=0, style=solid];
d195 -> d196  [color=green, key=0, style=solid];
d163 -> d164  [color=green, key=0, style=solid];
d163 -> n204  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d163 -> n206  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d163 -> n207  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d164 -> d165  [color=green, key=0, style=solid];
d164 -> d166  [color=green, key=0, style=solid];
d166 -> d167  [color=green, key=0, style=solid];
d167 -> d168  [color=green, key=0, style=solid];
d167 -> n145  [color=green, key=2, style=dotted];
d168 -> d169  [color=green, key=0, style=solid];
d168 -> d195  [color=green, key=0, style=solid];
d172 -> d173  [color=green, key=0, style=solid];
d172 -> d177  [color=green, key=0, style=solid];
d175 -> d176  [color=green, key=0, style=solid];
d175 -> n89  [color=green, key=2, style=dotted];
d177 -> d178  [color=green, key=0, style=solid];
d177 -> n141  [color=green, key=2, style=dotted];
d180 -> d181  [color=green, key=0, style=solid];
d180 -> n206  [color=green, key=2, style=dotted];
d180 -> d183  [color=green, key=1, label=valueSetting, style=dashed];
d182 -> d183  [color=green, key=0, style=solid];
d182 -> n89  [color=green, key=2, style=dotted];
d184 -> d185  [color=green, key=0, style=solid];
d184 -> d189  [color=green, key=0, style=solid];
d185 -> d186  [color=green, key=0, style=solid];
d185 -> n204  [color=green, key=2, style=dotted];
d185 -> d188  [color=green, key=1, label=valueSetting, style=dashed];
d187 -> d188  [color=green, key=0, style=solid];
d187 -> n89  [color=green, key=2, style=dotted];
d189 -> d190  [color=green, key=0, style=solid];
d189 -> n141  [color=green, key=2, style=dotted];
d191 -> d192  [color=green, key=0, style=solid];
d191 -> n206  [color=green, key=2, style=dotted];
d191 -> d194  [color=green, key=1, label=valueSetting, style=dashed];
d193 -> d194  [color=green, key=0, style=solid];
d193 -> n89  [color=green, key=2, style=dotted];
d197 -> d198  [color=green, key=0, style=solid];
d197 -> n207  [color=green, key=2, style=dotted];
d197 -> d200  [color=green, key=1, label=valueSetting, style=dashed];
d199 -> d200  [color=green, key=0, style=solid];
d199 -> n89  [color=green, key=2, style=dotted];
d170 -> n201  [color=green, key=0, style=solid];
d174 -> d175  [color=green, key=0, style=solid];
d174 -> d176  [color=green, key=0, style=solid];
d176 -> n201  [color=green, key=0, style=solid];
d176 -> n131  [color=green, key=2, style=dotted];
d178 -> d179  [color=green, key=0, style=solid];
d178 -> n111  [color=green, key=2, style=dotted];
d178 -> d180  [color=green, key=1, label=items, style=dashed];
d181 -> d182  [color=green, key=0, style=solid];
d181 -> d183  [color=green, key=0, style=solid];
d183 -> n201  [color=green, key=0, style=solid];
d183 -> n131  [color=green, key=2, style=dotted];
d186 -> d187  [color=green, key=0, style=solid];
d186 -> d188  [color=green, key=0, style=solid];
d188 -> n201  [color=green, key=0, style=solid];
d188 -> n134  [color=green, key=2, style=dotted];
d190 -> d191  [color=green, key=0, style=solid];
d190 -> n111  [color=green, key=2, style=dotted];
d192 -> d193  [color=green, key=0, style=solid];
d192 -> d194  [color=green, key=0, style=solid];
d194 -> n201  [color=green, key=0, style=solid];
d194 -> n134  [color=green, key=2, style=dotted];
d198 -> d199  [color=green, key=0, style=solid];
d198 -> d200  [color=green, key=0, style=solid];
d200 -> n201  [color=green, key=0, style=solid];
d200 -> n131  [color=green, key=2, style=dotted];
d196 -> n201  [color=green, key=0, style=solid];
d165 -> n201  [color=green, key=0, style=solid];
d209 -> d210  [color=green, key=0, style=solid];
d209 -> n213  [color=green, key=2, style=dotted];
d210 -> d211  [color=green, key=0, style=solid];
d211 -> n212  [color=green, key=0, style=solid];
d215 -> n216  [color=green, key=0, style=solid];
d218 -> d219  [color=green, key=0, style=solid];
d218 -> d222  [color=green, key=0, style=solid];
d219 -> d220  [color=green, key=0, style=solid];
d222 -> d223  [color=green, key=0, style=solid];
d220 -> d221  [color=green, key=0, style=solid];
d220 -> n225  [color=green, key=2, style=dotted];
d223 -> n224  [color=green, key=0, style=solid];
d221 -> n224  [color=green, key=0, style=solid];
d227 -> d228  [color=green, key=0, style=solid];
d227 -> d229  [color=green, key=0, style=solid];
d228 -> n232  [color=green, key=0, style=solid];
d228 -> n32  [color=green, key=2, style=dotted];
d229 -> d230  [color=green, key=0, style=solid];
d229 -> d231  [color=green, key=0, style=solid];
d230 -> n232  [color=green, key=0, style=solid];
d230 -> n32  [color=green, key=2, style=dotted];
d231 -> n232  [color=green, key=0, style=solid];
d231 -> n202  [color=green, key=2, style=dotted];
d234 -> n235  [color=green, key=0, style=solid];
d234 -> n236  [color=green, key=2, style=dotted];
d240 -> d241  [color=green, key=0, style=solid];
d240 -> n204  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d240 -> n206  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d241 -> d242  [color=green, key=0, style=solid];
d241 -> n208  [color=green, key=2, style=dotted];
d241 -> n202  [color=green, key=2, style=dotted];
d241 -> d243  [color=green, key=1, label=group, style=dashed];
d241 -> d249  [color=green, key=1, label=group, style=dashed];
d241 -> d251  [color=green, key=1, label=group, style=dashed];
d241 -> d253  [color=green, key=1, label=group, style=dashed];
d241 -> d259  [color=green, key=1, label=group, style=dashed];
d241 -> d277  [color=green, key=1, label=group, style=dashed];
d242 -> d243  [color=green, key=0, style=solid];
d242 -> d281  [color=green, key=0, style=solid];
d242 -> n120  [color=green, key=2, style=dotted];
d243 -> d244  [color=green, key=0, style=solid];
d243 -> d246  [color=green, key=1, label=option, style=dashed];
d243 -> d247  [color=green, key=1, label=option, style=dashed];
d243 -> d248  [color=green, key=1, label=option, style=dashed];
d243 -> d252  [color=green, key=1, label=option, style=dashed];
d243 -> d253  [color=green, key=1, label=option, style=dashed];
d243 -> d255  [color=green, key=1, label=option, style=dashed];
d243 -> d257  [color=green, key=1, label=option, style=dashed];
d243 -> d260  [color=green, key=1, label=option, style=dashed];
d243 -> d262  [color=green, key=1, label=option, style=dashed];
d243 -> d266  [color=green, key=1, label=option, style=dashed];
d243 -> d267  [color=green, key=1, label=option, style=dashed];
d243 -> d269  [color=green, key=1, label=option, style=dashed];
d243 -> d271  [color=green, key=1, label=option, style=dashed];
d243 -> d273  [color=green, key=1, label=option, style=dashed];
d243 -> d275  [color=green, key=1, label=option, style=dashed];
d243 -> d279  [color=green, key=1, label=option, style=dashed];
d249 -> d250  [color=green, key=0, style=solid];
d249 -> d251  [color=green, key=0, style=solid];
d251 -> d264  [color=green, key=0, style=solid];
d251 -> d252  [color=green, key=0, style=solid];
d253 -> d254  [color=green, key=0, style=solid];
d253 -> n155  [color=green, key=2, style=dotted];
d253 -> n204  [color=green, key=2, style=dotted];
d253 -> d256  [color=green, key=1, label=valueSetting, style=dashed];
d259 -> d260  [color=green, key=0, style=solid];
d259 -> n155  [color=green, key=2, style=dotted];
d259 -> n205  [color=green, key=2, style=dotted];
d277 -> d278  [color=green, key=0, style=solid];
d277 -> d279  [color=green, key=0, style=solid];
d244 -> d245  [color=green, key=0, style=solid];
d244 -> d246  [color=green, key=0, style=solid];
d246 -> d247  [color=green, key=0, style=solid];
d247 -> d248  [color=green, key=0, style=solid];
d247 -> n145  [color=green, key=2, style=dotted];
d248 -> d249  [color=green, key=0, style=solid];
d248 -> d277  [color=green, key=0, style=solid];
d252 -> d253  [color=green, key=0, style=solid];
d252 -> d257  [color=green, key=0, style=solid];
d255 -> d256  [color=green, key=0, style=solid];
d255 -> n89  [color=green, key=2, style=dotted];
d257 -> d258  [color=green, key=0, style=solid];
d257 -> n141  [color=green, key=2, style=dotted];
d260 -> d261  [color=green, key=0, style=solid];
d260 -> n206  [color=green, key=2, style=dotted];
d260 -> d263  [color=green, key=1, label=valueSetting, style=dashed];
d262 -> d263  [color=green, key=0, style=solid];
d262 -> n89  [color=green, key=2, style=dotted];
d266 -> d267  [color=green, key=0, style=solid];
d266 -> d271  [color=green, key=0, style=solid];
d267 -> d268  [color=green, key=0, style=solid];
d267 -> n204  [color=green, key=2, style=dotted];
d267 -> d270  [color=green, key=1, label=valueSetting, style=dashed];
d269 -> d270  [color=green, key=0, style=solid];
d269 -> n89  [color=green, key=2, style=dotted];
d271 -> d272  [color=green, key=0, style=solid];
d271 -> n141  [color=green, key=2, style=dotted];
d273 -> d274  [color=green, key=0, style=solid];
d273 -> n206  [color=green, key=2, style=dotted];
d273 -> d276  [color=green, key=1, label=valueSetting, style=dashed];
d275 -> d276  [color=green, key=0, style=solid];
d275 -> n89  [color=green, key=2, style=dotted];
d279 -> d280  [color=green, key=0, style=solid];
d279 -> d242  [color=green, key=0, style=solid];
d279 -> n207  [color=green, key=2, style=dotted];
d250 -> n282  [color=green, key=0, style=solid];
d254 -> d255  [color=green, key=0, style=solid];
d254 -> d256  [color=green, key=0, style=solid];
d256 -> n282  [color=green, key=0, style=solid];
d256 -> n131  [color=green, key=2, style=dotted];
d258 -> d259  [color=green, key=0, style=solid];
d258 -> n111  [color=green, key=2, style=dotted];
d258 -> d260  [color=green, key=1, label=items, style=dashed];
d261 -> d262  [color=green, key=0, style=solid];
d261 -> d263  [color=green, key=0, style=solid];
d263 -> n282  [color=green, key=0, style=solid];
d263 -> n134  [color=green, key=2, style=dotted];
d264 -> d265  [color=green, key=0, style=solid];
d264 -> d266  [color=green, key=0, style=solid];
d264 -> n106  [color=green, key=2, style=dotted];
d265 -> n282  [color=green, key=0, style=solid];
d268 -> d269  [color=green, key=0, style=solid];
d268 -> d270  [color=green, key=0, style=solid];
d270 -> n282  [color=green, key=0, style=solid];
d270 -> n134  [color=green, key=2, style=dotted];
d272 -> d273  [color=green, key=0, style=solid];
d272 -> n111  [color=green, key=2, style=dotted];
d274 -> d275  [color=green, key=0, style=solid];
d274 -> d276  [color=green, key=0, style=solid];
d276 -> n282  [color=green, key=0, style=solid];
d276 -> n131  [color=green, key=2, style=dotted];
d278 -> n282  [color=green, key=0, style=solid];
d280 -> n282  [color=green, key=0, style=solid];
d281 -> n282  [color=green, key=0, style=solid];
d245 -> n282  [color=green, key=0, style=solid];
d284 -> d285  [color=green, key=0, style=solid];
d284 -> d291  [color=green, key=0, style=solid];
d285 -> d286  [color=green, key=0, style=solid];
d291 -> n295  [color=green, key=0, style=solid];
d291 -> n296  [color=green, key=2, style=dotted];
d286 -> d287  [color=green, key=0, style=solid];
d287 -> d288  [color=green, key=0, style=solid];
d288 -> d289  [color=green, key=0, style=solid];
d289 -> d290  [color=green, key=0, style=solid];
d290 -> d292  [color=green, key=0, style=solid];
d292 -> d293  [color=green, key=0, style=solid];
d292 -> d294  [color=green, key=0, style=solid];
d293 -> n295  [color=green, key=0, style=solid];
d294 -> n295  [color=green, key=0, style=solid];
d294 -> n296  [color=green, key=2, style=dotted];
d298 -> d299  [color=green, key=0, style=solid];
d298 -> n72  [color=green, key=2, style=dotted];
d298 -> d300  [color=green, key=1, label=list, style=dashed];
d298 -> d301  [color=green, key=1, label=list, style=dashed];
d299 -> d300  [color=green, key=0, style=solid];
d299 -> d306  [color=green, key=0, style=solid];
d300 -> d301  [color=green, key=0, style=solid];
d300 -> n308  [color=green, key=2, style=dotted];
d300 -> d303  [color=green, key=1, label=map, style=dashed];
d300 -> d304  [color=green, key=1, label=map, style=dashed];
d300 -> d305  [color=green, key=1, label=map, style=dashed];
d301 -> d304  [color=green, key=0, style=solid];
d301 -> d302  [color=green, key=0, style=solid];
d301 -> d303  [color=green, key=1, label=pair, style=dashed];
d303 -> d301  [color=green, key=0, style=solid];
d303 -> n283  [color=green, key=2, style=dotted];
d304 -> d305  [color=green, key=0, style=solid];
d305 -> n307  [color=green, key=0, style=solid];
d306 -> n307  [color=green, key=0, style=solid];
d302 -> d301  [color=green, key=0, style=solid];
d302 -> d303  [color=green, key=0, style=solid];
d309 -> d310  [color=green, key=0, style=solid];
d309 -> d311  [color=green, key=0, style=solid];
d310 -> n314  [color=green, key=0, style=solid];
d310 -> n315  [color=green, key=2, style=dotted];
d311 -> d312  [color=green, key=0, style=solid];
d311 -> d313  [color=green, key=0, style=solid];
d311 -> n316  [color=green, key=2, style=dotted];
d312 -> n314  [color=green, key=0, style=solid];
d312 -> n317  [color=green, key=2, style=dotted];
d313 -> n314  [color=green, key=0, style=solid];
d313 -> n318  [color=green, key=2, style=dotted];
d319 -> d320  [color=green, key=0, style=solid];
d319 -> n331  [color=green, key=2, style=dotted];
d319 -> d324  [color=green, key=1, label=elementType, style=dashed];
d320 -> d321  [color=green, key=0, style=solid];
d320 -> n332  [color=green, key=2, style=dotted];
d320 -> d322  [color=green, key=1, label=array, style=dashed];
d320 -> d324  [color=green, key=1, label=array, style=dashed];
d320 -> d325  [color=green, key=1, label=array, style=dashed];
d324 -> d325  [color=green, key=0, style=solid];
d324 -> n333  [color=green, key=2, style=dotted];
d324 -> n334  [color=green, key=2, style=dotted];
d321 -> d324  [color=green, key=1, label=i, style=dashed];
d321 -> d321  [color=green, key=3, label="Local variable int i", style=bold];
d321 -> d322  [color=green, key=0, style=solid];
d321 -> d328  [color=green, key=1, label=i, style=dashed];
d322 -> d323  [color=green, key=0, style=solid];
d322 -> d329  [color=green, key=0, style=solid];
d325 -> d326  [color=green, key=0, style=solid];
d325 -> d328  [color=green, key=0, style=solid];
d325 -> n61  [color=green, key=2, style=dotted];
d323 -> d324  [color=green, key=0, style=solid];
d326 -> d327  [color=green, key=0, style=solid];
d328 -> d322  [color=green, key=0, style=solid];
d328 -> d328  [color=green, key=1, label=i, style=dashed];
d366 -> d321  [color=green, key=3, label="Local variable int i", style=bold];
d366 -> d368  [color=green, key=1, label=i, style=dashed];
d366 -> d367  [color=green, key=0, style=solid];
d366 -> d369  [color=green, key=1, label=i, style=dashed];
d584 -> d321  [color=green, key=3, label="Local variable int i", style=bold];
d584 -> d585  [color=green, key=0, style=solid];
d584 -> d592  [color=green, key=0, style=solid];
d329 -> n330  [color=green, key=0, style=solid];
d327 -> n330  [color=green, key=0, style=solid];
d335 -> d336  [color=green, key=0, style=solid];
d335 -> d338  [color=green, key=0, style=solid];
d336 -> d337  [color=green, key=0, style=solid];
d338 -> d339  [color=green, key=0, style=solid];
d337 -> d340  [color=green, key=0, style=solid];
d337 -> d342  [color=green, key=0, style=solid];
d337 -> d344  [color=green, key=0, style=solid];
d337 -> d346  [color=green, key=0, style=solid];
d337 -> n348  [color=green, key=2, style=dotted];
d337 -> n61  [color=green, key=2, style=dotted];
d340 -> d341  [color=green, key=0, style=solid];
d342 -> d343  [color=green, key=0, style=solid];
d344 -> d345  [color=green, key=0, style=solid];
d346 -> n347  [color=green, key=0, style=solid];
d339 -> d340  [color=green, key=0, style=solid];
d339 -> d342  [color=green, key=0, style=solid];
d339 -> d344  [color=green, key=0, style=solid];
d339 -> d346  [color=green, key=0, style=solid];
d339 -> n333  [color=green, key=2, style=dotted];
d339 -> n61  [color=green, key=2, style=dotted];
d341 -> n347  [color=green, key=0, style=solid];
d343 -> n347  [color=green, key=0, style=solid];
d345 -> n347  [color=green, key=0, style=solid];
d349 -> d350  [color=green, key=0, style=solid];
d349 -> n356  [color=green, key=2, style=dotted];
d349 -> d351  [color=green, key=1, label=nc, style=dashed];
d350 -> d351  [color=green, key=0, style=solid];
d351 -> d352  [color=green, key=0, style=solid];
d351 -> d354  [color=green, key=0, style=solid];
d351 -> n357  [color=green, key=2, style=dotted];
d351 -> n61  [color=green, key=2, style=dotted];
d352 -> d353  [color=green, key=0, style=solid];
d354 -> n355  [color=green, key=0, style=solid];
d353 -> n355  [color=green, key=0, style=solid];
d358 -> d359  [color=green, key=0, style=solid];
d359 -> d360  [color=green, key=0, style=solid];
d359 -> n61  [color=green, key=2, style=dotted];
d360 -> n361  [color=green, key=0, style=solid];
d362 -> d363  [color=green, key=0, style=solid];
d363 -> d364  [color=green, key=0, style=solid];
d363 -> n86  [color=green, key=2, style=dotted];
d363 -> n61  [color=green, key=2, style=dotted];
d364 -> d365  [color=green, key=0, style=solid];
d364 -> n62  [color=green, key=2, style=dotted];
d364 -> d368  [color=green, key=1, label=fieldRef, style=dashed];
d365 -> d366  [color=green, key=0, style=solid];
d365 -> n372  [color=green, key=2, style=dotted];
d365 -> d367  [color=green, key=1, label=values, style=dashed];
d365 -> d368  [color=green, key=1, label=values, style=dashed];
d368 -> d369  [color=green, key=0, style=solid];
d368 -> n121  [color=green, key=2, style=dotted];
d367 -> d368  [color=green, key=0, style=solid];
d367 -> d370  [color=green, key=0, style=solid];
d369 -> d367  [color=green, key=0, style=solid];
d369 -> d369  [color=green, key=1, label=i, style=dashed];
d370 -> n371  [color=green, key=0, style=solid];
d374 -> n375  [color=green, key=0, style=solid];
d377 -> n378  [color=green, key=0, style=solid];
d379 -> d380  [color=green, key=0, style=solid];
d380 -> d381  [color=green, key=0, style=solid];
d384 -> d385  [color=green, key=0, style=solid];
d384 -> n389  [color=green, key=2, style=dotted];
d382 -> d384  [color=green, key=0, style=solid];
d382 -> d385  [color=green, key=1, label=comparer, style=dashed];
d383 -> d384  [color=green, key=0, style=solid];
d383 -> d385  [color=green, key=1, label=comparer, style=dashed];
d385 -> d386  [color=green, key=0, style=solid];
d385 -> n389  [color=green, key=2, style=dotted];
d386 -> d387  [color=green, key=0, style=solid];
d386 -> n388  [color=green, key=0, style=solid];
d387 -> n388  [color=green, key=0, style=solid];
d387 -> n389  [color=green, key=2, style=dotted];
d381 -> d382  [color=green, key=0, style=solid];
d381 -> d383  [color=green, key=0, style=solid];
d391 -> n392  [color=green, key=0, style=solid];
d391 -> n393  [color=green, key=2, style=dotted];
d391 -> n394  [color=green, key=2, style=dotted];
d395 -> d396  [color=green, key=0, style=solid];
d395 -> d399  [color=green, key=0, style=solid];
d395 -> d397  [color=green, key=1, label=option, style=dashed];
d396 -> d395  [color=green, key=0, style=solid];
d396 -> d397  [color=green, key=0, style=solid];
d399 -> n400  [color=green, key=0, style=solid];
d397 -> d398  [color=green, key=0, style=solid];
d397 -> n401  [color=green, key=2, style=dotted];
d398 -> n400  [color=green, key=0, style=solid];
d402 -> d403  [color=green, key=0, style=solid];
d402 -> d404  [color=green, key=0, style=solid];
d403 -> n412  [color=green, key=0, style=solid];
d404 -> d405  [color=green, key=0, style=solid];
d404 -> d407  [color=green, key=0, style=solid];
d404 -> d406  [color=green, key=1, label=option, style=dashed];
d405 -> d404  [color=green, key=0, style=solid];
d405 -> d406  [color=green, key=0, style=solid];
d406 -> d404  [color=green, key=0, style=solid];
d406 -> n413  [color=green, key=2, style=dotted];
d407 -> d408  [color=green, key=0, style=solid];
d407 -> d411  [color=green, key=0, style=solid];
d407 -> d409  [color=green, key=1, label=info, style=dashed];
d408 -> d407  [color=green, key=0, style=solid];
d408 -> d409  [color=green, key=0, style=solid];
d411 -> n412  [color=green, key=0, style=solid];
d409 -> d410  [color=green, key=0, style=solid];
d409 -> n401  [color=green, key=2, style=dotted];
d410 -> n412  [color=green, key=0, style=solid];
d414 -> d415  [color=green, key=0, style=solid];
d414 -> d416  [color=green, key=1, label=setName, style=dashed];
d414 -> d417  [color=green, key=1, label=setName, style=dashed];
d415 -> d416  [color=green, key=0, style=solid];
d415 -> d417  [color=green, key=0, style=solid];
d415 -> n419  [color=green, key=2, style=dotted];
d416 -> d417  [color=green, key=0, style=solid];
d416 -> n373  [color=green, key=2, style=dotted];
d416 -> n420  [color=green, key=2, style=dotted];
d417 -> n418  [color=green, key=0, style=solid];
d417 -> n376  [color=green, key=2, style=dotted];
d421 -> d422  [color=green, key=0, style=solid];
d421 -> n430  [color=green, key=0, style=solid];
d422 -> d423  [color=green, key=0, style=solid];
d422 -> d424  [color=green, key=1, label=error, style=dashed];
d422 -> d426  [color=green, key=1, label=error, style=dashed];
d422 -> d428  [color=green, key=1, label=error, style=dashed];
d422 -> d429  [color=green, key=1, label=error, style=dashed];
d422 -> n431  [color=green, key=2, style=dotted];
d423 -> d424  [color=green, key=0, style=solid];
d424 -> d425  [color=green, key=0, style=solid];
d425 -> d426  [color=green, key=0, style=solid];
d425 -> d427  [color=green, key=0, style=solid];
d426 -> d427  [color=green, key=0, style=solid];
d427 -> d428  [color=green, key=0, style=solid];
d427 -> d429  [color=green, key=0, style=solid];
d428 -> d429  [color=green, key=0, style=solid];
d429 -> n430  [color=green, key=0, style=solid];
d429 -> n93  [color=green, key=2, style=dotted];
d433 -> d434  [color=green, key=0, style=solid];
d434 -> n435  [color=green, key=0, style=solid];
d437 -> d438  [color=green, key=0, style=solid];
d437 -> n441  [color=green, key=2, style=dotted];
d437 -> d439  [color=green, key=1, label=leftHash, style=dashed];
d438 -> d439  [color=green, key=0, style=solid];
d438 -> n441  [color=green, key=2, style=dotted];
d439 -> n440  [color=green, key=0, style=solid];
d443 -> d444  [color=green, key=0, style=solid];
d443 -> d446  [color=green, key=1, label=other, style=dashed];
d444 -> d445  [color=green, key=0, style=solid];
d444 -> d446  [color=green, key=0, style=solid];
d446 -> n447  [color=green, key=0, style=solid];
d446 -> n448  [color=green, key=2, style=dotted];
d445 -> n447  [color=green, key=0, style=solid];
d449 -> n450  [color=green, key=0, style=solid];
d449 -> n149  [color=green, key=2, style=dotted];
d451 -> d452  [color=green, key=0, style=solid];
d451 -> n151  [color=green, key=2, style=dotted];
d452 -> n453  [color=green, key=0, style=solid];
d455 -> n456  [color=green, key=0, style=solid];
d455 -> n86  [color=green, key=2, style=dotted];
d458 -> d459  [color=green, key=0, style=solid];
d458 -> n463  [color=green, key=2, style=dotted];
d459 -> d460  [color=green, key=0, style=solid];
d460 -> d461  [color=green, key=0, style=solid];
d461 -> n462  [color=green, key=0, style=solid];
d465 -> n466  [color=green, key=0, style=solid];
d468 -> d469  [color=green, key=0, style=solid];
d468 -> d471  [color=green, key=0, style=solid];
d469 -> d470  [color=green, key=0, style=solid];
d471 -> n472  [color=green, key=0, style=solid];
d470 -> n472  [color=green, key=0, style=solid];
d474 -> n475  [color=green, key=0, style=solid];
d474 -> n236  [color=green, key=2, style=dotted];
d477 -> d478  [color=green, key=0, style=solid];
d477 -> d479  [color=green, key=0, style=solid];
d478 -> n483  [color=green, key=0, style=solid];
d478 -> n32  [color=green, key=2, style=dotted];
d479 -> d480  [color=green, key=0, style=solid];
d479 -> d482  [color=green, key=0, style=solid];
d480 -> d481  [color=green, key=0, style=solid];
d482 -> n483  [color=green, key=0, style=solid];
d481 -> n483  [color=green, key=0, style=solid];
d487 -> d488  [color=green, key=0, style=solid];
d488 -> d489  [color=green, key=0, style=solid];
d488 -> n63  [color=green, key=2, style=dotted];
d489 -> d490  [color=green, key=0, style=solid];
d489 -> n491  [color=green, key=0, style=solid];
d490 -> n491  [color=green, key=0, style=solid];
d490 -> n51  [color=green, key=2, style=dotted];
d493 -> d494  [color=green, key=0, style=solid];
d493 -> d495  [color=green, key=0, style=solid];
d494 -> n498  [color=green, key=0, style=solid];
d495 -> d496  [color=green, key=0, style=solid];
d496 -> d497  [color=green, key=0, style=solid];
d496 -> n121  [color=green, key=2, style=dotted];
d497 -> n498  [color=green, key=0, style=solid];
d504 -> n505  [color=green, key=0, style=solid];
d504 -> n454  [color=green, key=2, style=dotted];
d515 -> n516  [color=green, key=0, style=solid];
d518 -> n519  [color=green, key=0, style=solid];
d521 -> d522  [color=green, key=0, style=solid];
d522 -> n523  [color=green, key=0, style=solid];
d525 -> d526  [color=green, key=0, style=solid];
d526 -> n527  [color=green, key=0, style=solid];
d529 -> d530  [color=green, key=0, style=solid];
d530 -> d531  [color=green, key=0, style=solid];
d531 -> n532  [color=green, key=0, style=solid];
d534 -> n535  [color=green, key=0, style=solid];
d534 -> n512  [color=green, key=2, style=dotted];
d537 -> d538  [color=green, key=0, style=solid];
d537 -> n463  [color=green, key=2, style=dotted];
d538 -> n539  [color=green, key=0, style=solid];
d541 -> n542  [color=green, key=0, style=solid];
d541 -> n543  [color=green, key=2, style=dotted];
d544 -> d545  [color=green, key=0, style=solid];
d544 -> n463  [color=green, key=2, style=dotted];
d545 -> d546  [color=green, key=0, style=solid];
d545 -> n463  [color=green, key=2, style=dotted];
d546 -> d547  [color=green, key=0, style=solid];
d546 -> n556  [color=green, key=2, style=dotted];
d546 -> d548  [color=green, key=1, label=pair, style=dashed];
d546 -> d550  [color=green, key=1, label=pair, style=dashed];
d547 -> d548  [color=green, key=0, style=solid];
d547 -> d554  [color=green, key=0, style=solid];
d548 -> d549  [color=green, key=0, style=solid];
d548 -> d553  [color=green, key=0, style=solid];
d548 -> n557  [color=green, key=2, style=dotted];
d548 -> n558  [color=green, key=2, style=dotted];
d550 -> d551  [color=green, key=0, style=solid];
d550 -> n6  [color=green, key=2, style=dotted];
d554 -> n555  [color=green, key=0, style=solid];
d554 -> n558  [color=green, key=2, style=dotted];
d549 -> d550  [color=green, key=0, style=solid];
d553 -> n555  [color=green, key=0, style=solid];
d551 -> d552  [color=green, key=0, style=solid];
d551 -> n559  [color=green, key=2, style=dotted];
d552 -> n555  [color=green, key=0, style=solid];
d560 -> d561  [color=green, key=0, style=solid];
d560 -> d578  [color=green, key=1, label=hadError, style=dashed];
d561 -> d562  [color=green, key=0, style=solid];
d561 -> n297  [color=green, key=2, style=dotted];
d561 -> d569  [color=green, key=1, label=optionMap, style=dashed];
d561 -> d578  [color=green, key=1, label=optionMap, style=dashed];
d578 -> d578  [color=green, key=1, label=hadError, style=dashed];
d578 -> d579  [color=green, key=0, style=solid];
d578 -> n390  [color=green, key=2, style=dotted];
d562 -> d563  [color=green, key=0, style=solid];
d562 -> n486  [color=green, key=2, style=dotted];
d562 -> d575  [color=green, key=1, label=target, style=dashed];
d562 -> d576  [color=green, key=1, label=target, style=dashed];
d569 -> d570  [color=green, key=0, style=solid];
d569 -> n87  [color=green, key=2, style=dotted];
d569 -> d573  [color=green, key=1, label=result, style=dashed];
d563 -> d564  [color=green, key=0, style=solid];
d563 -> n457  [color=green, key=2, style=dotted];
d563 -> d565  [color=green, key=1, label=arguments, style=dashed];
d563 -> d569  [color=green, key=1, label=arguments, style=dashed];
d563 -> d574  [color=green, key=1, label=arguments, style=dashed];
d575 -> d576  [color=green, key=0, style=solid];
d575 -> d564  [color=green, key=0, style=solid];
d576 -> d577  [color=green, key=0, style=solid];
d576 -> d564  [color=green, key=0, style=solid];
d576 -> n492  [color=green, key=2, style=dotted];
d564 -> d578  [color=green, key=0, style=solid];
d564 -> d565  [color=green, key=0, style=solid];
d564 -> n120  [color=green, key=2, style=dotted];
d565 -> d576  [color=green, key=1, label=argument, style=dashed];
d565 -> d566  [color=green, key=0, style=solid];
d565 -> d567  [color=green, key=1, label=argument, style=dashed];
d574 -> d564  [color=green, key=0, style=solid];
d574 -> n120  [color=green, key=2, style=dotted];
d567 -> d569  [color=green, key=1, label=parser, style=dashed];
d567 -> d571  [color=green, key=1, label=parser, style=dashed];
d567 -> d568  [color=green, key=0, style=solid];
d567 -> n94  [color=green, key=2, style=dotted];
d568 -> d569  [color=green, key=0, style=solid];
d568 -> d575  [color=green, key=0, style=solid];
d570 -> d571  [color=green, key=0, style=solid];
d570 -> d573  [color=green, key=0, style=solid];
d573 -> d564  [color=green, key=0, style=solid];
d573 -> d574  [color=green, key=0, style=solid];
d571 -> d572  [color=green, key=0, style=solid];
d571 -> n581  [color=green, key=2, style=dotted];
d572 -> d578  [color=green, key=1, label=hadError, style=dashed];
d572 -> d564  [color=green, key=0, style=solid];
d577 -> d578  [color=green, key=1, label=hadError, style=dashed];
d577 -> d564  [color=green, key=0, style=solid];
d579 -> n580  [color=green, key=0, style=solid];
d566 -> d564  [color=green, key=0, style=solid];
d566 -> d567  [color=green, key=0, style=solid];
d582 -> d583  [color=green, key=0, style=solid];
d582 -> d586  [color=green, key=1, label=caseSensitive, style=dashed];
d582 -> d589  [color=green, key=1, label=caseSensitive, style=dashed];
d583 -> d584  [color=green, key=0, style=solid];
d583 -> d586  [color=green, key=1, label=i, style=dashed];
d583 -> d589  [color=green, key=1, label=i, style=dashed];
d583 -> d591  [color=green, key=1, label=i, style=dashed];
d586 -> d587  [color=green, key=0, style=solid];
d586 -> d588  [color=green, key=0, style=solid];
d586 -> n124  [color=green, key=2, style=dotted];
d589 -> d590  [color=green, key=0, style=solid];
d589 -> d591  [color=green, key=0, style=solid];
d589 -> n128  [color=green, key=2, style=dotted];
d591 -> d584  [color=green, key=0, style=solid];
d591 -> d591  [color=green, key=1, label=i, style=dashed];
d585 -> d586  [color=green, key=0, style=solid];
d585 -> d588  [color=green, key=0, style=solid];
d585 -> n31  [color=green, key=2, style=dotted];
d592 -> n593  [color=green, key=0, style=solid];
d588 -> d589  [color=green, key=0, style=solid];
d588 -> d591  [color=green, key=0, style=solid];
d588 -> n31  [color=green, key=2, style=dotted];
d587 -> n593  [color=green, key=0, style=solid];
d590 -> n593  [color=green, key=0, style=solid];
d594 -> d595  [color=green, key=0, style=solid];
d594 -> n596  [color=green, key=0, style=solid];
d595 -> n596  [color=green, key=0, style=solid];
d595 -> n597  [color=green, key=2, style=dotted];
d598 -> d599  [color=green, key=0, style=solid];
d598 -> n600  [color=green, key=0, style=solid];
d599 -> n600  [color=green, key=0, style=solid];
d599 -> n48  [color=green, key=2, style=dotted];
d601 -> d602  [color=green, key=0, style=solid];
d601 -> n603  [color=green, key=0, style=solid];
d601 -> n31  [color=green, key=2, style=dotted];
d602 -> n603  [color=green, key=0, style=solid];
d602 -> n604  [color=green, key=2, style=dotted];
d606 -> d607  [color=green, key=0, style=solid];
d606 -> n608  [color=green, key=0, style=solid];
d607 -> n608  [color=green, key=0, style=solid];
d607 -> n609  [color=green, key=2, style=dotted];
d610 -> d611  [color=green, key=0, style=solid];
d610 -> n86  [color=green, key=2, style=dotted];
d610 -> d619  [color=green, key=1, label=list, style=dashed];
d610 -> d620  [color=green, key=1, label=list, style=dashed];
d611 -> d612  [color=green, key=0, style=solid];
d611 -> d620  [color=green, key=0, style=solid];
d619 -> d613  [color=green, key=0, style=solid];
d619 -> n432  [color=green, key=2, style=dotted];
d619 -> n121  [color=green, key=2, style=dotted];
d620 -> n621  [color=green, key=0, style=solid];
d612 -> d613  [color=green, key=0, style=solid];
d612 -> n622  [color=green, key=2, style=dotted];
d612 -> n623  [color=green, key=2, style=dotted];
d613 -> d619  [color=green, key=1, label=property, style=dashed];
d613 -> d620  [color=green, key=0, style=solid];
d613 -> d614  [color=green, key=0, style=solid];
d613 -> d615  [color=green, key=1, label=property, style=dashed];
d613 -> d617  [color=green, key=1, label=property, style=dashed];
d617 -> d619  [color=green, key=1, label=attribute, style=dashed];
d617 -> d618  [color=green, key=0, style=solid];
d617 -> n625  [color=green, key=2, style=dotted];
d618 -> d619  [color=green, key=0, style=solid];
d618 -> d613  [color=green, key=0, style=solid];
d614 -> d613  [color=green, key=0, style=solid];
d614 -> d615  [color=green, key=0, style=solid];
d616 -> d613  [color=green, key=0, style=solid];
d616 -> d617  [color=green, key=0, style=solid];
d615 -> d616  [color=green, key=0, style=solid];
d615 -> n624  [color=green, key=2, style=dotted];
d626 -> d627  [color=green, key=0, style=solid];
d626 -> n622  [color=green, key=2, style=dotted];
d626 -> n634  [color=green, key=2, style=dotted];
d627 -> d628  [color=green, key=0, style=solid];
d627 -> d632  [color=green, key=0, style=solid];
d627 -> d629  [color=green, key=1, label=method, style=dashed];
d627 -> d631  [color=green, key=1, label=method, style=dashed];
d628 -> d627  [color=green, key=0, style=solid];
d628 -> d629  [color=green, key=0, style=solid];
d630 -> d627  [color=green, key=0, style=solid];
d630 -> d631  [color=green, key=0, style=solid];
d632 -> n633  [color=green, key=0, style=solid];
d629 -> d630  [color=green, key=0, style=solid];
d629 -> n625  [color=green, key=2, style=dotted];
d629 -> d631  [color=green, key=1, label=attribute, style=dashed];
d631 -> n633  [color=green, key=0, style=solid];
d631 -> n432  [color=green, key=2, style=dotted];
d636 -> d637  [color=green, key=0, style=solid];
d636 -> n622  [color=green, key=2, style=dotted];
d636 -> n634  [color=green, key=2, style=dotted];
d637 -> d638  [color=green, key=0, style=solid];
d637 -> d642  [color=green, key=0, style=solid];
d637 -> d639  [color=green, key=1, label=method, style=dashed];
d638 -> d637  [color=green, key=0, style=solid];
d638 -> d639  [color=green, key=0, style=solid];
d640 -> d637  [color=green, key=0, style=solid];
d640 -> d641  [color=green, key=0, style=solid];
d642 -> n643  [color=green, key=0, style=solid];
d639 -> d640  [color=green, key=0, style=solid];
d639 -> n625  [color=green, key=2, style=dotted];
d639 -> d641  [color=green, key=1, label=attribute, style=dashed];
d641 -> n643  [color=green, key=0, style=solid];
d645 -> d646  [color=green, key=0, style=solid];
d645 -> n86  [color=green, key=2, style=dotted];
d645 -> d653  [color=green, key=1, label=list, style=dashed];
d645 -> d654  [color=green, key=1, label=list, style=dashed];
d646 -> d647  [color=green, key=0, style=solid];
d646 -> n622  [color=green, key=2, style=dotted];
d646 -> n623  [color=green, key=2, style=dotted];
d653 -> d647  [color=green, key=0, style=solid];
d653 -> n121  [color=green, key=2, style=dotted];
d654 -> n655  [color=green, key=0, style=solid];
d647 -> d654  [color=green, key=0, style=solid];
d647 -> d648  [color=green, key=0, style=solid];
d647 -> d649  [color=green, key=1, label=property, style=dashed];
d647 -> d651  [color=green, key=1, label=property, style=dashed];
d651 -> d653  [color=green, key=1, label=attribute, style=dashed];
d651 -> d652  [color=green, key=0, style=solid];
d651 -> n625  [color=green, key=2, style=dotted];
d652 -> d653  [color=green, key=0, style=solid];
d652 -> d647  [color=green, key=0, style=solid];
d648 -> d647  [color=green, key=0, style=solid];
d648 -> d649  [color=green, key=0, style=solid];
d650 -> d647  [color=green, key=0, style=solid];
d650 -> d651  [color=green, key=0, style=solid];
d649 -> d650  [color=green, key=0, style=solid];
d649 -> n624  [color=green, key=2, style=dotted];
d656 -> n657  [color=green, key=0, style=solid];
d656 -> n658  [color=green, key=2, style=dotted];
d656 -> n659  [color=green, key=2, style=dotted];
d661 -> n662  [color=green, key=0, style=solid];
d661 -> n663  [color=green, key=2, style=dotted];
}
