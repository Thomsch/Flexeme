digraph  {
n664 [label="CommandLine.HelpOptionAttribute", span=""];
n665 [label="CommandLine.OptionAttribute", span=""];
n666 [label="CommandLine.OptionListAttribute", span=""];
n667 [label="CommandLine.ValueListAttribute", span=""];
n668 [label="CommandLine.ArgumentParser", span=""];
n669 [label="CommandLine.BadOptionInfo", span=""];
n670 [label="CommandLine.LongOptionParser", span=""];
n671 [label="CommandLine.OneCharStringEnumerator", span=""];
n672 [label="CommandLine.OptionGroupParser", span=""];
n673 [label="CommandLine.OptionInfo", span=""];
n674 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n675 [label="CommandLine.OptionMap", span=""];
n676 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n677 [label="CommandLine.ParsingError", span=""];
n678 [label="CommandLine.PostParsingState", span=""];
n679 [label="CommandLine.StringArrayEnumerator", span=""];
n680 [label="CommandLine.TargetWrapper", span=""];
n681 [label="CommandLine.CommandLineOptionsBase", span=""];
n682 [label="CommandLine.CommandLineParserSettings", span=""];
n683 [label="CommandLine.CommandLineParser", span=""];
n0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="103-103"];
n1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="103-103"];
n2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
n5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="114-114"];
n6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
n13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
n12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="131-131"];
n15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n14 [cluster="System.MemberAccessException.MemberAccessException()", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
n17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="143-143"];
n18 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n19 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="159-159"];
n20 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="159-159"];
n21 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
n31 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="181-181"];
n32 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
n33 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="235-235"];
n34 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="235-235"];
n35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246"];
n37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="246-246"];
n38 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270"];
n40 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="270-270"];
n41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280"];
n49 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="280-280"];
n48 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n50 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469"];
n51 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="304-304"];
n59 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331"];
n60 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n61 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="304-304"];
n62 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n63 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317"];
n72 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759"];
n71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="317-317"];
n82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="331-331"];
n83 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="361-361"];
n85 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="361-361"];
n86 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n87 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366"];
n88 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="366-366"];
n89 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370"];
n91 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="370-370"];
n92 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1218-1218"];
n93 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n94 [cluster="CommandLine.ArgumentParser.Create(string)", label="Entry CommandLine.ArgumentParser.Create(string)", span="377-377"];
n103 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n102 [cluster="CommandLine.ArgumentParser.Create(string)", label="Exit CommandLine.ArgumentParser.Create(string)", span="377-377"];
n105 [cluster="CommandLine.OptionGroupParser.OptionGroupParser()", label="Entry CommandLine.OptionGroupParser.OptionGroupParser()", span="690-690"];
n104 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Entry CommandLine.LongOptionParser.LongOptionParser()", span="516-516"];
n106 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="391-391"];
n110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="391-391"];
n111 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406"];
n120 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="507-507"];
n121 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n122 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509"];
n119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="406-406"];
n123 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464"];
n124 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423"];
n126 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="423-423"];
n127 [cluster="string.Compare(string, string, bool)", label="Entry string.Compare(string, string, bool)", span="0-0"];
n128 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428"];
n130 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="428-428"];
n131 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433"];
n133 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="433-433"];
n134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438"];
n140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="438-438"];
n141 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448"];
n144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="448-448"];
n145 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454"];
n148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="454-454"];
n149 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466"];
n150 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="466-466"];
n151 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470"];
n154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="470-470"];
n155 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502"];
n156 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="502-502"];
n157 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="507-507"];
n158 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="509-509"];
n159 [cluster="CommandLine.LongOptionParser.LongOptionParser()", label="Exit CommandLine.LongOptionParser.LongOptionParser()", span="516-516"];
n160 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521"];
n202 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n203 [cluster="string.Split(char[], int)", label="Entry string.Split(char[], int)", span="0-0"];
n204 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="838-838"];
n205 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
n206 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849"];
n207 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="929-929"];
n201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="521-521"];
n208 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607"];
n213 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744"];
n212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="607-607"];
n214 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="651-651"];
n216 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="651-651"];
n217 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656"];
n225 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="656-656"];
n226 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669"];
n232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="669-669"];
n233 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680"];
n235 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="680-680"];
n236 [cluster="System.NotSupportedException.NotSupportedException()", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
n237 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="685-685"];
n238 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="685-685"];
n239 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692"];
n282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="692-692"];
n283 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789"];
n295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="789-789"];
n296 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
n297 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817"];
n308 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042"];
n307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="817-817"];
n316 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846"];
n314 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="838-838"];
n315 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="939-939"];
n317 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908"];
n318 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873"];
n331 [cluster="System.Type.GetElementType()", label="Entry System.Type.GetElementType()", span="0-0"];
n332 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n333 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n334 [cluster="System.Array.SetValue(object, int)", label="Entry System.Array.SetValue(object, int)", span="0-0"];
n330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="849-849"];
n348 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="873-873"];
n356 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
n357 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
n355 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="908-908"];
n361 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="929-929"];
n372 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="939-939"];
n373 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022"];
n375 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1022-1022"];
n376 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031"];
n378 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1031-1031"];
n389 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
n388 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1042-1042"];
n390 [cluster="CommandLine.OptionMap.EnforceRules()", label="Entry CommandLine.OptionMap.EnforceRules()", span="1093-1093"];
n392 [cluster="CommandLine.OptionMap.EnforceRules()", label="Exit CommandLine.OptionMap.EnforceRules()", span="1093-1093"];
n393 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111"];
n394 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098"];
n401 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150"];
n400 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1098-1098"];
n413 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136"];
n412 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1111-1111"];
n419 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n420 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n418 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1136-1136"];
n430 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1150-1150"];
n431 [cluster="CommandLine.ParsingError.ParsingError()", label="Entry CommandLine.ParsingError.ParsingError()", span="1213-1213"];
n432 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173"];
n435 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1173-1173"];
n436 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189"];
n441 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n440 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1189-1189"];
n442 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197"];
n447 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1197-1197"];
n448 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n450 [cluster="CommandLine.ParsingError.ParsingError()", label="Exit CommandLine.ParsingError.ParsingError()", span="1213-1213"];
n453 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1218-1218"];
n454 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1266-1266"];
n456 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1266-1266"];
n457 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286"];
n463 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737"];
n462 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1286-1286"];
n464 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1336-1336"];
n466 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1336-1336"];
n467 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341"];
n472 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1341-1341"];
n473 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351"];
n475 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1351-1351"];
n476 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356"];
n483 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1356-1356"];
n484 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1370-1370"];
n485 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1370-1370"];
n486 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381"];
n491 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1381-1381"];
n492 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391"];
n498 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1391-1391"];
n499 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422"];
n500 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1422-1422"];
n501 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437"];
n502 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1437-1437"];
n503 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445"];
n505 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1445-1445"];
n506 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1464-1464"];
n507 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1469-1469"];
n508 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1474-1474"];
n509 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1474-1474"];
n510 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1479-1479"];
n511 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1479-1479"];
n512 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495"];
n513 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1495-1495"];
n514 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505"];
n516 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1505-1505"];
n517 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516"];
n519 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1516-1516"];
n520 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529"];
n523 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1529-1529"];
n524 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541"];
n527 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1541-1541"];
n528 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555"];
n532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1555-1555"];
n533 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592"];
n535 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1592-1592"];
n536 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603"];
n539 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1603-1603"];
n540 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620"];
n542 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1620-1620"];
n543 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638"];
n556 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785"];
n557 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703"];
n558 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660"];
n559 [cluster="System.IO.TextWriter.Write(string)", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
n555 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1638-1638"];
n581 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726"];
n580 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1660-1660"];
n593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1703-1703"];
n596 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", span="1726-1726"];
n597 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n600 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1737-1737"];
n603 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1744-1744"];
n604 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n605 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750"];
n608 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1750-1750"];
n609 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n622 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n623 [cluster="System.Type.GetProperties()", label="Entry System.Type.GetProperties()", span="0-0"];
n624 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
n625 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
n621 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1759-1759"];
n634 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n633 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1785-1785"];
n635 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804"];
n643 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1804-1804"];
n644 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823"];
n655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1823-1823"];
n657 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1846-1846"];
n658 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n659 [cluster="System.Type.Equals(System.Type)", label="Entry System.Type.Equals(System.Type)", span="0-0"];
n660 [cluster="CommandLine.StringUtil.Spaces(int)", label="Entry CommandLine.StringUtil.Spaces(int)", span="1876-1876"];
n662 [cluster="CommandLine.StringUtil.Spaces(int)", label="Exit CommandLine.StringUtil.Spaces(int)", span="1876-1876"];
n663 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="base.ShortName = shortName", prediction=0, span="116-116"];
d4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="base.LongName = longName", prediction=1, span="117-117"];
d7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="text = null", prediction=2, span="134-134"];
d8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="var method = pair.Left", prediction=3, span="136-136"];
d9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="!CheckMethodSignature(method)", prediction=4, span="137-137"];
d11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="text = (string)method.Invoke(target, null)", prediction=5, span="140-140"];
d10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="throw new MemberAccessException();", prediction=6, span="138-138"];
d16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", prediction=7, span="145-145"];
d22 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="!string.IsNullOrEmpty(shortName)", prediction=8, span="183-183"];
d23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="_uniqueName = shortName", prediction=9, span="184-184"];
d24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="!string.IsNullOrEmpty(longName)", prediction=10, span="185-185"];
d26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="_uniqueName == null", prediction=11, span="188-188"];
d25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="_uniqueName = longName", prediction=12, span="186-186"];
d28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="base.ShortName = shortName", prediction=13, span="191-191"];
d29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="base.LongName = longName", prediction=14, span="192-192"];
d27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="throw new InvalidOperationException();", prediction=15, span="189-189"];
d36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0, label="Separator = separator", prediction=16, span="249-249"];
d39 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, label="MaximumElements = -1", prediction=17, span="272-272"];
d42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="concreteType == null", prediction=18, span="283-283"];
d43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="throw new ArgumentNullException(''concreteType'');", prediction=19, span="284-284"];
d44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="!typeof(IList<string>).IsAssignableFrom(concreteType)", prediction=20, span="286-286"];
d45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="throw new CommandLineParserException(''The types are incompatible.'');", prediction=21, span="287-287"];
d46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="_concreteType = concreteType", prediction=22, span="289-289"];
d52 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="Type concreteType", prediction=23, span="306-306"];
d53 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="var property = GetProperty(target, out concreteType)", prediction=24, span="307-307"];
d54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="property == null || concreteType == null", prediction=25, span="309-309"];
d56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", prediction=24, span="312-312"];
d57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="return (IList<string>)property.GetValue(target, null);", prediction=24, span="314-314"];
d55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="return null;", prediction=28, span="310-310"];
d64 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", prediction=29, span="319-319"];
d65 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="list == null || list.Count == 0", prediction=30, span="320-320"];
d67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="list.Count > 1", prediction=29, span="323-323"];
d69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="var pairZero = list[0]", prediction=32, span="326-326"];
d66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="return null;", prediction=33, span="321-321"];
d68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="throw new InvalidOperationException();", prediction=34, span="324-324"];
d70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="return pairZero.Right;", prediction=35, span="328-328"];
d73 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="concreteType = null", prediction=36, span="333-333"];
d74 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", prediction=37, span="335-335"];
d75 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="list == null || list.Count == 0", prediction=38, span="336-336"];
d77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="list.Count > 1", prediction=37, span="339-339"];
d79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="var pairZero = list[0]", prediction=40, span="342-342"];
d76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="return null;", prediction=41, span="337-337"];
d78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="throw new InvalidOperationException();", prediction=42, span="340-340"];
d80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="concreteType = pairZero.Right.ConcreteType", prediction=43, span="343-343"];
d81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="return pairZero.Left;", prediction=40, span="345-345"];
d84 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0, label="this.PostParsingState = new List<ParsingError>()", prediction=45, span="363-363"];
d90 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0, label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", prediction=46, span="374-374"];
d95 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="argument.Equals(''-'', StringComparison.InvariantCulture)", prediction=47, span="379-379"];
d96 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return null;", prediction=48, span="380-380"];
d97 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="argument[0] == '-' && argument[1] == '-'", prediction=49, span="382-382"];
d98 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return new LongOptionParser();", prediction=50, span="383-383"];
d99 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="argument[0] == '-'", prediction=49, span="385-385"];
d100 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return new OptionGroupParser();", prediction=52, span="386-386"];
d101 [cluster="CommandLine.ArgumentParser.Create(string)", color=green, community=0, label="return null;", prediction=53, span="388-388"];
d107 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="argument.Length > 0", prediction=54, span="393-393"];
d108 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", prediction=55, span="394-394"];
d109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="return true;", prediction=56, span="396-396"];
d112 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="IList<string> list = new List<string>()", prediction=57, span="408-408"];
d113 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="ae.MoveNext()", prediction=57, span="410-410"];
d115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="list.Add(ae.Current)", prediction=57, span="413-413"];
d118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="return list;", prediction=57, span="420-420"];
d114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="IsInputValue(ae.Current)", prediction=57, span="412-412"];
d116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="!ae.MovePrevious()", prediction=57, span="417-417"];
d117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="throw new CommandLineParserException();", prediction=63, span="418-418"];
d125 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0, label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", prediction=64, span="425-425"];
d129 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", prediction=65, span="430-430"];
d132 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, label="return BooleanToParserState(value, false);", prediction=66, span="435-435"];
d135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="value && !addMoveNextIfTrue", prediction=67, span="440-440"];
d136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return ParserState.Success;", prediction=68, span="441-441"];
d137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="value && addMoveNextIfTrue", prediction=69, span="442-442"];
d138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return ParserState.Success | ParserState.MoveOnNextElement;", prediction=70, span="443-443"];
d139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return ParserState.Failure;", prediction=71, span="445-445"];
d142 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="!option.IsAttributeArrayCompatible", prediction=72, span="450-450"];
d143 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="throw new CommandLineParserException();", prediction=73, span="451-451"];
d146 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="!option.IsArray && option.IsAttributeArrayCompatible", prediction=74, span="456-456"];
d147 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="throw new CommandLineParserException();", prediction=75, span="457-457"];
d152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="ShortName = shortName", prediction=76, span="472-472"];
d153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="LongName = longName", prediction=77, span="473-473"];
d161 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var parts = argumentEnumerator.Current.Substring(2).Split(new char[] { '=' }, 2)", prediction=78, span="523-523"];
d162 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var option = map[parts[0]]", prediction=79, span="524-524"];
d169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", prediction=78, span="536-536"];
d171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="parts.Length == 2", prediction=78, span="539-539"];
d173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(parts[1], options)", prediction=82, span="543-543"];
d179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="items.Insert(0, parts[1])", prediction=78, span="554-554"];
d195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="parts.Length == 2", prediction=78, span="589-589"];
d163 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var valueSetting = false", prediction=85, span="525-525"];
d164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option == null", prediction=79, span="527-527"];
d166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option.IsDefined = true", prediction=87, span="530-530"];
d167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=79, span="532-532"];
d168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsBoolean", prediction=79, span="534-534"];
d172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=79, span="541-541"];
d175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=79, span="545-545"];
d177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=79, span="551-551"];
d180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=93, span="556-556"];
d182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=79, span="558-558"];
d184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=79, span="565-565"];
d185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=96, span="567-567"];
d187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=79, span="569-569"];
d189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=79, span="575-575"];
d191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=99, span="579-579"];
d193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=79, span="581-581"];
d197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(true, options)", prediction=101, span="592-592"];
d199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=79, span="594-594"];
d170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=103, span="537-537"];
d174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=104, span="544-544"];
d176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=82, span="547-547"];
d178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=106, span="553-553"];
d181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=107, span="557-557"];
d183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=93, span="560-560"];
d186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=109, span="568-568"];
d188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=96, span="571-571"];
d190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=111, span="577-577"];
d192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=112, span="580-580"];
d194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=99, span="583-583"];
d198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=114, span="593-593"];
d200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=101, span="596-596"];
d196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=116, span="590-590"];
d165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=117, span="528-528"];
d209 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="Assumes.NotNullOrEmpty(value, ''value'')", prediction=118, span="609-609"];
d210 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="_data = value", prediction=119, span="611-611"];
d211 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="_index = -1", prediction=120, span="612-612"];
d215 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0, label="_index = -1", prediction=121, span="653-653"];
d218 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_index < (_data.Length - 1)", prediction=122, span="658-658"];
d219 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_index++", prediction=122, span="660-660"];
d222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_index = _data.Length", prediction=124, span="664-664"];
d220 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="_currentElement = _data.Substring(_index, 1)", prediction=125, span="661-661"];
d223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="return false;", prediction=126, span="666-666"];
d221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="return true;", prediction=127, span="662-662"];
d227 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="_index == -1", prediction=122, span="671-671"];
d228 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="throw new InvalidOperationException();", prediction=129, span="672-672"];
d229 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="_index > _data.Length", prediction=122, span="674-674"];
d230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="throw new InvalidOperationException();", prediction=131, span="675-675"];
d231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="return _data.Substring(_index + 1);", prediction=122, span="677-677"];
d234 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0, label="throw new NotSupportedException();", prediction=133, span="682-682"];
d240 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var valueSetting = false", prediction=134, span="694-694"];
d241 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", prediction=135, span="696-696"];
d242 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="group.MoveNext()", prediction=136, span="697-697"];
d243 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var option = map[group.Current]", prediction=135, span="699-699"];
d249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="argumentEnumerator.IsLast && group.IsLast", prediction=135, span="709-709"];
d251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!group.IsLast", prediction=135, span="712-712"];
d253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", prediction=140, span="716-716"];
d259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="items.Insert(0, group.GetRemainingFromNext())", prediction=135, span="727-727"];
d277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!group.IsLast && map[group.Next] == null", prediction=135, span="765-765"];
d244 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option == null", prediction=143, span="700-700"];
d246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="option.IsDefined = true", prediction=144, span="703-703"];
d247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", prediction=135, span="705-705"];
d248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsBoolean", prediction=135, span="707-707"];
d252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=135, span="714-714"];
d255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=135, span="718-718"];
d257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=135, span="724-724"];
d260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=150, span="729-729"];
d262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=135, span="731-731"];
d266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.IsArray", prediction=135, span="741-741"];
d267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", prediction=153, span="743-743"];
d269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=135, span="745-745"];
d271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", prediction=135, span="751-751"];
d273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="valueSetting = option.SetValue(items, options)", prediction=156, span="755-755"];
d275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="this.DefineOptionThatViolatesFormat(option)", prediction=135, span="757-757"];
d279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!option.SetValue(true, options)", prediction=135, span="768-768"];
d250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=159, span="710-710"];
d254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=160, span="717-717"];
d256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=140, span="720-720"];
d258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=162, span="726-726"];
d261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=163, span="730-730"];
d263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=150, span="733-733"];
d264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", prediction=135, span="737-737"];
d265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=166, span="738-738"];
d268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=167, span="744-744"];
d270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting, true);", prediction=153, span="747-747"];
d272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", prediction=169, span="753-753"];
d274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="!valueSetting", prediction=170, span="756-756"];
d276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ArgumentParser.BooleanToParserState(valueSetting);", prediction=156, span="759-759"];
d278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=172, span="766-766"];
d280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=173, span="769-769"];
d281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Success;", prediction=174, span="773-773"];
d245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="return ParserState.Failure;", prediction=175, span="701-701"];
d284 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="attribute != null", prediction=176, span="791-791"];
d285 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_required = attribute.Required", prediction=177, span="793-793"];
d291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", prediction=178, span="801-801"];
d286 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_helpText = attribute.HelpText", prediction=179, span="794-794"];
d287 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_shortName = attribute.ShortName", prediction=180, span="795-795"];
d288 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_longName = attribute.LongName", prediction=181, span="796-796"];
d289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", prediction=182, span="797-797"];
d290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_attribute = attribute", prediction=183, span="798-798"];
d292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="property != null", prediction=184, span="803-803"];
d293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="_property = property", prediction=185, span="804-804"];
d294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", prediction=186, span="806-806"];
d298 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", prediction=187, span="819-819"];
d299 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="list != null", prediction=188, span="820-820"];
d300 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="var map = new OptionMap(list.Count, settings)", prediction=189, span="822-822"];
d301 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=1, label=list, prediction=187, span="824-824"];
d303 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", prediction=191, span="827-827"];
d304 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="map.RawOptions = target", prediction=192, span="830-830"];
d305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="return map;", prediction=189, span="832-832"];
d306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="return null;", prediction=194, span="835-835"];
d302 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="pair != null && pair.Right != null", prediction=195, span="826-826"];
d309 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="_attribute is OptionListAttribute", prediction=196, span="840-840"];
d310 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="return SetValueList(value, options);", prediction=196, span="841-841"];
d311 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="ReflectionUtil.IsNullableType(_property.PropertyType)", prediction=196, span="843-843"];
d312 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="return SetNullableValue(value, options);", prediction=196, span="844-844"];
d313 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="return SetValueScalar(value, options);", prediction=196, span="846-846"];
d319 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="Type elementType = _property.PropertyType.GetElementType()", prediction=196, span="851-851"];
d320 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="Array array = Array.CreateInstance(elementType, values.Count)", prediction=196, span="852-852"];
d324 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="array.SetValue(Convert.ChangeType(values[i], elementType, CultureInfo.InvariantCulture), i)", prediction=196, span="860-860"];
d321 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="int i = 0", prediction=196, span="854-854"];
d322 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="i < array.Length", prediction=196, span="854-854"];
d325 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="_property.SetValue(options, array, null)", prediction=196, span="861-861"];
d323 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label=_setValueLock, prediction=196, span="858-858"];
d326 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label=FormatException, prediction=208, span="864-864"];
d328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="i++", prediction=196, span="854-854"];
d366 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="int i = 0", prediction=210, span="948-948"];
d584 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="i < args.Length", prediction=211, span="1707-1707"];
d329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="return true;", prediction=212, span="870-870"];
d327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="return false;", prediction=213, span="866-866"];
d335 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="_property.PropertyType.IsEnum", prediction=196, span="877-877"];
d336 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=_setValueLock, prediction=196, span="879-879"];
d338 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=_setValueLock, prediction=196, span="886-886"];
d337 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", prediction=196, span="881-881"];
d340 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=InvalidCastException, prediction=218, span="892-892"];
d342 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=FormatException, prediction=219, span="896-896"];
d344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label=ArgumentException, prediction=220, span="900-900"];
d346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return true;", prediction=221, span="905-905"];
d339 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, CultureInfo.InvariantCulture), null)", prediction=196, span="888-888"];
d341 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return false;", prediction=223, span="894-894"];
d343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return false;", prediction=224, span="898-898"];
d345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="return false;", prediction=225, span="902-902"];
d349 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="var nc = new NullableConverter(_property.PropertyType)", prediction=196, span="910-910"];
d350 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label=_setValueLock, prediction=196, span="914-914"];
d351 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="_property.SetValue(options, nc.ConvertFromString(null, CultureInfo.InvariantCulture, value), null)", prediction=196, span="916-916"];
d352 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=1, label=Exception, prediction=229, span="921-921"];
d354 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="return true;", prediction=230, span="926-926"];
d353 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="return false;", prediction=231, span="923-923"];
d358 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label=_setValueLock, prediction=196, span="931-931"];
d359 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="_property.SetValue(options, value, null)", prediction=196, span="933-933"];
d360 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="return true;", prediction=234, span="935-935"];
d362 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label=_setValueLock, prediction=196, span="941-941"];
d363 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="_property.SetValue(options, new List<string>(), null)", prediction=196, span="943-943"];
d364 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="var fieldRef = (IList<string>)_property.GetValue(options, null)", prediction=210, span="945-945"];
d365 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", prediction=210, span="946-946"];
d368 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="fieldRef.Add(values[i])", prediction=210, span="950-950"];
d367 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="i < values.Length", prediction=210, span="948-948"];
d369 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="i++", prediction=210, span="948-948"];
d370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="return true;", prediction=242, span="953-953"];
d374 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0, label="BadOption = option", prediction=243, span="1025-1025"];
d377 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, label="++count", prediction=244, span="1031-1031"];
d379 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings = settings", prediction=245, span="1044-1044"];
d380 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="IEqualityComparer<string> comparer", prediction=246, span="1046-1046"];
d384 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_names = new Dictionary<string, string>(capacity, comparer)", prediction=247, span="1052-1052"];
d382 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="comparer = StringComparer.Ordinal", prediction=248, span="1048-1048"];
d383 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="comparer = StringComparer.OrdinalIgnoreCase", prediction=249, span="1050-1050"];
d385 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", prediction=250, span="1053-1053"];
d386 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings.MutuallyExclusive", prediction=251, span="1055-1055"];
d387 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", prediction=252, span="1058-1058"];
d381 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings.CaseSensitive", prediction=251, span="1047-1047"];
d391 [cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0, label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", prediction=251, span="1095-1095"];
d395 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="_map.Values", prediction=251, span="1100-1100"];
d396 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="option.Required && !option.IsDefined", prediction=256, span="1102-1102"];
d399 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="return true;", prediction=257, span="1108-1108"];
d397 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", prediction=251, span="1104-1104"];
d398 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="return false;", prediction=259, span="1105-1105"];
d402 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="!_settings.MutuallyExclusive", prediction=251, span="1113-1113"];
d403 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="return true;", prediction=261, span="1114-1114"];
d404 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="_map.Values", prediction=251, span="1116-1116"];
d405 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="option.IsDefined && option.MutuallyExclusiveSet != null", prediction=263, span="1118-1118"];
d406 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="BuildMutuallyExclusiveMap(option)", prediction=251, span="1119-1119"];
d407 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="_mutuallyExclusiveSetMap.Values", prediction=251, span="1123-1123"];
d408 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="info.Occurrence > 1", prediction=266, span="1125-1125"];
d411 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="return true;", prediction=267, span="1133-1133"];
d409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", prediction=251, span="1128-1128"];
d410 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="return false;", prediction=269, span="1129-1129"];
d414 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="var setName = option.MutuallyExclusiveSet", prediction=251, span="1138-1138"];
d415 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", prediction=251, span="1140-1140"];
d416 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", prediction=251, span="1143-1143"];
d417 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", prediction=251, span="1147-1147"];
d421 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="options is CommandLineOptionsBase", prediction=274, span="1152-1152"];
d422 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="ParsingError error = new ParsingError()", prediction=275, span="1154-1154"];
d423 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.BadOption.ShortName = option.ShortName", prediction=276, span="1157-1157"];
d424 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.BadOption.LongName = option.LongName", prediction=277, span="1158-1158"];
d425 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="required != null", prediction=275, span="1160-1160"];
d426 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.ViolatesRequired = required.Value", prediction=279, span="1160-1160"];
d427 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="mutualExclusiveness != null", prediction=275, span="1161-1161"];
d428 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", prediction=281, span="1161-1161"];
d429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.Add(error)", prediction=275, span="1163-1163"];
d433 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="_left = left", prediction=283, span="1175-1175"];
d434 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="_right = right", prediction=284, span="1176-1176"];
d437 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", prediction=285, span="1191-1191"];
d438 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", prediction=286, span="1192-1192"];
d439 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="return leftHash ^ rightHash;", prediction=285, span="1194-1194"];
d443 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="var other = obj as Pair<TLeft, TRight>", prediction=288, span="1199-1199"];
d444 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="other == null", prediction=289, span="1201-1201"];
d446 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="return Equals(_left, other._left) && Equals(_right, other._right);", prediction=288, span="1204-1204"];
d445 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="return false;", prediction=291, span="1202-1202"];
d449 [cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0, label="this.BadOption = new BadOptionInfo()", prediction=292, span="1215-1215"];
d451 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="this.BadOption = new BadOptionInfo(shortName, longName)", prediction=293, span="1222-1222"];
d452 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="this.ViolatesFormat = format", prediction=294, span="1224-1224"];
d455 [cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0, label="Errors = new List<ParsingError>()", prediction=295, span="1268-1268"];
d458 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="Assumes.NotNull(value, ''value'')", prediction=296, span="1288-1288"];
d459 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="_data = value", prediction=297, span="1290-1290"];
d460 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="_index = -1", prediction=298, span="1291-1291"];
d461 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="_endIndex = value.Length", prediction=299, span="1292-1292"];
d465 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0, label="_index = -1", prediction=300, span="1338-1338"];
d468 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="_index < _endIndex", prediction=301, span="1343-1343"];
d469 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="_index++", prediction=301, span="1345-1345"];
d471 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="return false;", prediction=303, span="1348-1348"];
d470 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="return _index < _endIndex;", prediction=301, span="1346-1346"];
d474 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, label="throw new NotSupportedException();", prediction=305, span="1353-1353"];
d477 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="_index <= 0", prediction=301, span="1358-1358"];
d478 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="throw new InvalidOperationException();", prediction=307, span="1360-1360"];
d479 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="_index <= _endIndex", prediction=301, span="1362-1362"];
d480 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="_index--", prediction=301, span="1364-1364"];
d482 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="return false;", prediction=310, span="1367-1367"];
d481 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="return _index <= _endIndex;", prediction=301, span="1365-1365"];
d487 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="_target = target", prediction=312, span="1383-1383"];
d488 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="_vla = ValueListAttribute.GetAttribute(_target)", prediction=313, span="1384-1384"];
d489 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label=IsValueListDefined, prediction=314, span="1385-1385"];
d490 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="_valueList = ValueListAttribute.GetReference(_target)", prediction=315, span="1386-1386"];
d493 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", prediction=314, span="1393-1393"];
d494 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="return false;", prediction=317, span="1394-1394"];
d495 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label=this, prediction=314, span="1396-1396"];
d496 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="_valueList.Add(item)", prediction=314, span="1398-1398"];
d497 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="return true;", prediction=320, span="1401-1401"];
d504 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, label="LastPostParsingState = new PostParsingState()", prediction=321, span="1447-1447"];
d515 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=322, span="1507-1507"];
d518 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, label="HelpWriter = helpWriter", prediction=323, span="1519-1519"];
d521 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=324, span="1531-1531"];
d522 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="HelpWriter = helpWriter", prediction=325, span="1532-1532"];
d525 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=326, span="1543-1543"];
d526 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="MutuallyExclusive = mutuallyExclusive", prediction=327, span="1544-1544"];
d529 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="CaseSensitive = caseSensitive", prediction=328, span="1557-1557"];
d530 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="MutuallyExclusive = mutuallyExclusive", prediction=329, span="1558-1558"];
d531 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="HelpWriter = helpWriter", prediction=330, span="1559-1559"];
d534 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0, label="_settings = new CommandLineParserSettings()", prediction=331, span="1594-1594"];
d537 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="Assumes.NotNull(settings, ''settings'')", prediction=332, span="1605-1605"];
d538 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="_settings = settings", prediction=333, span="1607-1607"];
d541 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, label="return ParseArguments(args, options, _settings.HelpWriter);", prediction=334, span="1622-1622"];
d544 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="Assumes.NotNull(args, ''args'')", prediction=335, span="1640-1640"];
d545 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="Assumes.NotNull(options, ''options'')", prediction=334, span="1641-1641"];
d546 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", prediction=334, span="1643-1643"];
d547 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="pair != null && helpWriter != null", prediction=334, span="1645-1645"];
d548 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", prediction=334, span="1647-1647"];
d550 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", prediction=334, span="1650-1650"];
d554 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="return DoParseArguments(args, options);", prediction=334, span="1657-1657"];
d549 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="string helpText", prediction=342, span="1649-1649"];
d553 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="return true;", prediction=343, span="1654-1654"];
d551 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="helpWriter.Write(helpText)", prediction=334, span="1651-1651"];
d552 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="return false;", prediction=345, span="1652-1652"];
d560 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="bool hadError = false", prediction=346, span="1662-1662"];
d561 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="var optionMap = OptionInfo.CreateMap(options, _settings)", prediction=347, span="1663-1663"];
d578 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="hadError |= !optionMap.EnforceRules()", prediction=348, span="1698-1698"];
d562 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="var target = new TargetWrapper(options)", prediction=349, span="1664-1664"];
d569 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="ParserState result = parser.Parse(arguments, optionMap, options)", prediction=350, span="1675-1675"];
d563 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", prediction=351, span="1666-1666"];
d575 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="target.IsValueListDefined", prediction=349, span="1686-1686"];
d576 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="!target.AddValueItemIfAllowed(argument)", prediction=349, span="1688-1688"];
d564 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="arguments.MoveNext()", prediction=354, span="1667-1667"];
d565 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="string argument = arguments.Current", prediction=349, span="1669-1669"];
d574 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="arguments.MoveNext()", prediction=351, span="1684-1684"];
d567 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="ArgumentParser parser = ArgumentParser.Create(argument)", prediction=357, span="1672-1672"];
d568 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="parser != null", prediction=358, span="1673-1673"];
d570 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="(result & ParserState.Failure) == ParserState.Failure", prediction=359, span="1676-1676"];
d573 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", prediction=350, span="1683-1683"];
d571 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", prediction=357, span="1678-1678"];
d572 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="hadError = true", prediction=362, span="1679-1679"];
d577 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="hadError = true", prediction=363, span="1690-1690"];
d579 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="return !hadError;", prediction=364, span="1700-1700"];
d566 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="argument != null && argument.Length > 0", prediction=365, span="1670-1670"];
d582 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="bool caseSensitive = _settings.CaseSensitive", prediction=211, span="1705-1705"];
d583 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="int i = 0", prediction=211, span="1707-1707"];
d586 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", prediction=211, span="1711-1711"];
d589 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", prediction=211, span="1717-1717"];
d591 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="i++", prediction=211, span="1707-1707"];
d585 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="!string.IsNullOrEmpty(helpOption.ShortName)", prediction=211, span="1709-1709"];
d592 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="return false;", prediction=372, span="1722-1722"];
d588 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="!string.IsNullOrEmpty(helpOption.LongName)", prediction=211, span="1715-1715"];
d587 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="return true;", prediction=374, span="1712-1712"];
d590 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="return true;", prediction=375, span="1718-1718"];
d594 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, label="options is CommandLineOptionsBase", prediction=376, span="1728-1728"];
d595 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.List<CommandLine.ParsingError>)", color=green, community=0, label="((CommandLineOptionsBase)options).InternalLastPostParsingState.Errors.AddRange(state)", prediction=377, span="1729-1729"];
d598 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="value == null", prediction=378, span="1740-1740"];
d599 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="throw new ArgumentNullException(paramName);", prediction=379, span="1741-1741"];
d601 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="string.IsNullOrEmpty(value)", prediction=380, span="1746-1746"];
d602 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="throw new ArgumentException(paramName);", prediction=381, span="1747-1747"];
d606 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="array.Length == 0", prediction=382, span="1752-1752"];
d607 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="throw new ArgumentOutOfRangeException(paramName);", prediction=383, span="1753-1753"];
d610 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", prediction=384, span="1762-1762"];
d611 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="target != null", prediction=385, span="1763-1763"];
d619 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", prediction=384, span="1776-1776"];
d620 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="return list;", prediction=384, span="1782-1782"];
d612 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="var propertiesInfo = target.GetType().GetProperties()", prediction=388, span="1765-1765"];
d613 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label=propertiesInfo, prediction=384, span="1767-1767"];
d617 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=384, span="1774-1774"];
d618 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="attribute != null", prediction=391, span="1775-1775"];
d614 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="property != null && (property.CanRead && property.CanWrite)", prediction=392, span="1769-1769"];
d616 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="setMethod != null && !setMethod.IsStatic", prediction=393, span="1772-1772"];
d615 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="var setMethod = property.GetSetMethod()", prediction=394, span="1771-1771"];
d626 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="var info = target.GetType().GetMethods()", prediction=395, span="1788-1788"];
d627 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label=info, prediction=396, span="1790-1790"];
d628 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="!method.IsStatic", prediction=397, span="1792-1792"];
d630 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="attribute != null", prediction=398, span="1796-1796"];
d632 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="return null;", prediction=399, span="1801-1801"];
d629 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=396, span="1794-1795"];
d631 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", prediction=396, span="1797-1797"];
d636 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="var info = target.GetType().GetMethods()", prediction=402, span="1807-1807"];
d637 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label=info, prediction=403, span="1809-1809"];
d638 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="!method.IsStatic", prediction=404, span="1811-1811"];
d640 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="attribute != null", prediction=405, span="1815-1815"];
d642 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="return null;", prediction=406, span="1820-1820"];
d639 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=403, span="1813-1814"];
d641 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="return (TAttribute)attribute;", prediction=403, span="1816-1816"];
d645 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="IList<TAttribute> list = new List<TAttribute>()", prediction=409, span="1826-1826"];
d646 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="var info = target.GetType().GetProperties()", prediction=410, span="1827-1827"];
d653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="list.Add((TAttribute)attribute)", prediction=409, span="1838-1838"];
d654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="return list;", prediction=409, span="1843-1843"];
d647 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label=info, prediction=413, span="1829-1829"];
d651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", prediction=409, span="1836-1836"];
d652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="attribute != null", prediction=415, span="1837-1837"];
d648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="property != null && (property.CanRead && property.CanWrite)", prediction=416, span="1831-1831"];
d650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="setMethod != null && !setMethod.IsStatic", prediction=417, span="1834-1834"];
d649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="var setMethod = property.GetSetMethod()", prediction=418, span="1833-1833"];
d656 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, label="return type.IsGenericType && type.GetGenericTypeDefinition().Equals(typeof(Nullable<>));", prediction=419, span="1848-1848"];
d661 [cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0, label="return new String(' ', count);", prediction=420, span="1878-1878"];
n665 -> d26  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n668 -> d90  [color=green, key=1, label="CommandLine.ArgumentParser", style=dashed];
n670 -> d175  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d182  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d187  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d193  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n670 -> d199  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n671 -> d218  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d219  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d227  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d229  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n671 -> d231  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n672 -> d255  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> d262  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> d269  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n672 -> d275  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n673 -> d309  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d310  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d312  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d313  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d311  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d325  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d323  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d335  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d337  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d339  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d336  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d338  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d351  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d350  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d358  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d359  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d362  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n673 -> d363  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n674 -> d377  [color=green, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n675 -> d381  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d386  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d391  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d395  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d397  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d402  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d404  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d407  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d406  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d409  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d416  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d415  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n675 -> d417  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n676 -> d446  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n679 -> d468  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d469  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d470  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d477  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d479  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d480  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n679 -> d481  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n680 -> d489  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d493  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d496  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n680 -> d495  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n683 -> d541  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d548  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n683 -> d554  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n21 -> d24  [color=green, key=1, label=string, style=dashed];
n41 -> d44  [color=green, key=1, label="System.Type", style=dashed];
n51 -> d56  [color=green, key=1, label=object, style=dashed];
n51 -> d57  [color=green, key=1, label=object, style=dashed];
n72 -> d611  [color=green, key=1, label=object, style=dashed];
n94 -> d97  [color=green, key=1, label=string, style=dashed];
n94 -> d99  [color=green, key=1, label=string, style=dashed];
n106 -> d108  [color=green, key=1, label=string, style=dashed];
n111 -> d113  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> d114  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> d115  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n111 -> d116  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n134 -> d137  [color=green, key=1, label=bool, style=dashed];
n160 -> d169  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n204 -> d310  [color=green, key=1, label=string, style=dashed];
n204 -> d312  [color=green, key=1, label=string, style=dashed];
n204 -> d313  [color=green, key=1, label=string, style=dashed];
n206 -> d324  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n206 -> d325  [color=green, key=1, label=object, style=dashed];
n207 -> d359  [color=green, key=1, label=bool, style=dashed];
n213 -> d602  [color=green, key=1, label=string, style=dashed];
n239 -> d249  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d264  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n239 -> d277  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n239 -> d279  [color=green, key=1, label=object, style=dashed];
n283 -> d292  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n315 -> d363  [color=green, key=1, label=object, style=dashed];
n317 -> d351  [color=green, key=1, label=string, style=dashed];
n318 -> d337  [color=green, key=1, label=string, style=dashed];
n318 -> d339  [color=green, key=1, label=string, style=dashed];
n401 -> d425  [color=green, key=1, label="bool?", style=dashed];
n401 -> d427  [color=green, key=1, label="bool?", style=dashed];
n401 -> d429  [color=green, key=1, label=object, style=dashed];
n413 -> d416  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n463 -> d599  [color=green, key=1, label=string, style=dashed];
n492 -> d496  [color=green, key=1, label=string, style=dashed];
n543 -> d545  [color=green, key=1, label=object, style=dashed];
n543 -> d547  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n543 -> d548  [color=green, key=1, label="string[]", style=dashed];
n543 -> d550  [color=green, key=1, label=object, style=dashed];
n543 -> d551  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n543 -> d554  [color=green, key=1, label="string[]", style=dashed];
n557 -> d584  [color=green, key=1, label="string[]", style=dashed];
n557 -> d585  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n557 -> d586  [color=green, key=1, label="string[]", style=dashed];
n557 -> d588  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n557 -> d589  [color=green, key=1, label="string[]", style=dashed];
n558 -> d571  [color=green, key=1, label=object, style=dashed];
n581 -> d595  [color=green, key=1, label=object, style=dashed];
n605 -> d607  [color=green, key=1, label=string, style=dashed];
d53 -> d56  [color=green, key=1, label=concreteType, style=dashed];
d53 -> d57  [color=green, key=1, label=property, style=dashed];
d64 -> d67  [color=green, key=1, label=list, style=dashed];
d74 -> d77  [color=green, key=1, label=list, style=dashed];
d79 -> d81  [color=green, key=1, label=pairZero, style=dashed];
d80 -> n82  [color=green, key=1, label="out System.Type", style=dashed];
d112 -> d115  [color=green, key=1, label=list, style=dashed];
d112 -> d118  [color=green, key=1, label=list, style=dashed];
d161 -> d169  [color=green, key=1, label=parts, style=dashed];
d161 -> d171  [color=green, key=1, label=parts, style=dashed];
d161 -> d179  [color=green, key=1, label=parts, style=dashed];
d161 -> d195  [color=green, key=1, label=parts, style=dashed];
d162 -> d164  [color=green, key=1, label=option, style=dashed];
d162 -> d167  [color=green, key=1, label=option, style=dashed];
d162 -> d168  [color=green, key=1, label=option, style=dashed];
d162 -> d172  [color=green, key=1, label=option, style=dashed];
d162 -> d175  [color=green, key=1, label=option, style=dashed];
d162 -> d177  [color=green, key=1, label=option, style=dashed];
d162 -> d182  [color=green, key=1, label=option, style=dashed];
d162 -> d184  [color=green, key=1, label=option, style=dashed];
d162 -> d187  [color=green, key=1, label=option, style=dashed];
d162 -> d189  [color=green, key=1, label=option, style=dashed];
d162 -> d193  [color=green, key=1, label=option, style=dashed];
d162 -> d199  [color=green, key=1, label=option, style=dashed];
d173 -> d176  [color=green, key=1, label=valueSetting, style=dashed];
d180 -> d183  [color=green, key=1, label=valueSetting, style=dashed];
d185 -> d188  [color=green, key=1, label=valueSetting, style=dashed];
d191 -> d194  [color=green, key=1, label=valueSetting, style=dashed];
d197 -> d200  [color=green, key=1, label=valueSetting, style=dashed];
d241 -> d249  [color=green, key=1, label=group, style=dashed];
d241 -> d251  [color=green, key=1, label=group, style=dashed];
d241 -> d259  [color=green, key=1, label=group, style=dashed];
d241 -> d277  [color=green, key=1, label=group, style=dashed];
d243 -> d247  [color=green, key=1, label=option, style=dashed];
d243 -> d248  [color=green, key=1, label=option, style=dashed];
d243 -> d252  [color=green, key=1, label=option, style=dashed];
d243 -> d255  [color=green, key=1, label=option, style=dashed];
d243 -> d257  [color=green, key=1, label=option, style=dashed];
d243 -> d262  [color=green, key=1, label=option, style=dashed];
d243 -> d266  [color=green, key=1, label=option, style=dashed];
d243 -> d269  [color=green, key=1, label=option, style=dashed];
d243 -> d271  [color=green, key=1, label=option, style=dashed];
d243 -> d275  [color=green, key=1, label=option, style=dashed];
d243 -> d279  [color=green, key=1, label=option, style=dashed];
d253 -> d256  [color=green, key=1, label=valueSetting, style=dashed];
d260 -> d263  [color=green, key=1, label=valueSetting, style=dashed];
d267 -> d270  [color=green, key=1, label=valueSetting, style=dashed];
d273 -> d276  [color=green, key=1, label=valueSetting, style=dashed];
d298 -> d301  [color=green, key=1, label=list, style=dashed];
d300 -> d305  [color=green, key=1, label=map, style=dashed];
d319 -> d324  [color=green, key=1, label=elementType, style=dashed];
d320 -> d322  [color=green, key=1, label=array, style=dashed];
d320 -> d324  [color=green, key=1, label=array, style=dashed];
d320 -> d325  [color=green, key=1, label=array, style=dashed];
d321 -> d324  [color=green, key=1, label=i, style=dashed];
d321 -> d328  [color=green, key=1, label=i, style=dashed];
d328 -> d328  [color=green, key=1, label=i, style=dashed];
d366 -> d368  [color=green, key=1, label=i, style=dashed];
d366 -> d369  [color=green, key=1, label=i, style=dashed];
d349 -> d351  [color=green, key=1, label=nc, style=dashed];
d364 -> d368  [color=green, key=1, label=fieldRef, style=dashed];
d365 -> d367  [color=green, key=1, label=values, style=dashed];
d365 -> d368  [color=green, key=1, label=values, style=dashed];
d369 -> d369  [color=green, key=1, label=i, style=dashed];
d395 -> d397  [color=green, key=1, label=option, style=dashed];
d404 -> d406  [color=green, key=1, label=option, style=dashed];
d407 -> d409  [color=green, key=1, label=info, style=dashed];
d414 -> d416  [color=green, key=1, label=setName, style=dashed];
d414 -> d417  [color=green, key=1, label=setName, style=dashed];
d422 -> d429  [color=green, key=1, label=error, style=dashed];
d437 -> d439  [color=green, key=1, label=leftHash, style=dashed];
d443 -> d446  [color=green, key=1, label=other, style=dashed];
d546 -> d548  [color=green, key=1, label=pair, style=dashed];
d546 -> d550  [color=green, key=1, label=pair, style=dashed];
d562 -> d575  [color=green, key=1, label=target, style=dashed];
d562 -> d576  [color=green, key=1, label=target, style=dashed];
d569 -> d573  [color=green, key=1, label=result, style=dashed];
d563 -> d574  [color=green, key=1, label=arguments, style=dashed];
d565 -> d576  [color=green, key=1, label=argument, style=dashed];
d567 -> d571  [color=green, key=1, label=parser, style=dashed];
d582 -> d586  [color=green, key=1, label=caseSensitive, style=dashed];
d582 -> d589  [color=green, key=1, label=caseSensitive, style=dashed];
d583 -> d586  [color=green, key=1, label=i, style=dashed];
d583 -> d589  [color=green, key=1, label=i, style=dashed];
d583 -> d591  [color=green, key=1, label=i, style=dashed];
d591 -> d591  [color=green, key=1, label=i, style=dashed];
d610 -> d619  [color=green, key=1, label=list, style=dashed];
d610 -> d620  [color=green, key=1, label=list, style=dashed];
d613 -> d619  [color=green, key=1, label=property, style=dashed];
d617 -> d619  [color=green, key=1, label=attribute, style=dashed];
d627 -> d629  [color=green, key=1, label=method, style=dashed];
d627 -> d631  [color=green, key=1, label=method, style=dashed];
d629 -> d631  [color=green, key=1, label=attribute, style=dashed];
d637 -> d639  [color=green, key=1, label=method, style=dashed];
d639 -> d641  [color=green, key=1, label=attribute, style=dashed];
d645 -> d653  [color=green, key=1, label=list, style=dashed];
d645 -> d654  [color=green, key=1, label=list, style=dashed];
d651 -> d653  [color=green, key=1, label=attribute, style=dashed];
}
