digraph  {
m0_50 [label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", span="104-104", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_51 [label="var options = new MockOptions()", span="106-106", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", color=green, community=0, file="HelpOptionAttributeFixture.cs"];
m0_52 [label="var writer = new StringWriter()", span="107-107", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_54 [label="var result = parser.ParseArguments(\r\n                    new string[] { ''--help'' }, options)", span="109-110", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_53 [label="var parser = new Parser(with => with.HelpWriter = writer)", span="108-108", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_56 [label="string helpText = writer.ToString()", span="114-114", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_55 [label="result.Should().BeFalse()", span="112-112", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_57 [label="(helpText.Length > 0).Should().BeTrue()", span="115-115", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_58 [label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", span="104-104", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", file="HelpOptionAttributeFixture.cs"];
m0_31 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="HelpOptionAttributeFixture.cs"];
m0_29 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="HelpOptionAttributeFixture.cs"];
m0_16 [label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", span="74-74", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_17 [label="var options = new MockOptions()", span="76-76", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", color=green, community=0, file="HelpOptionAttributeFixture.cs"];
m0_18 [label="var writer = new StringWriter()", span="77-77", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_20 [label="var result = parser.ParseArguments(\r\n                    new string[] { ''-imath.xml'', ''-oresult.xml'' }, options)", span="79-80", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_19 [label="var parser = new Parser(with => with.HelpWriter = writer)", span="78-78", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_22 [label="writer.ToString().Length.Should().Be(0)", span="83-83", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_21 [label="result.Should().BeTrue()", span="82-82", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_23 [label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", span="74-74", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_30 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="HelpOptionAttributeFixture.cs"];
m0_25 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="HelpOptionAttributeFixture.cs"];
m0_46 [label="Entry System.Console.Write(string)", span="0-0", cluster="System.Console.Write(string)", file="HelpOptionAttributeFixture.cs"];
m0_27 [label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="HelpOptionAttributeFixture.cs"];
m0_26 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="86-86", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="HelpOptionAttributeFixture.cs"];
m0_0 [label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="17-17", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="HelpOptionAttributeFixture.cs"];
m0_1 [label="this.index = index", span="19-19", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="HelpOptionAttributeFixture.cs"];
m0_2 [label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="17-17", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="HelpOptionAttributeFixture.cs"];
m0_45 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="HelpOptionAttributeFixture.cs"];
m0_24 [label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.MockOptions()", span="43-43", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.MockOptions()", file="HelpOptionAttributeFixture.cs"];
m0_35 [label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", span="87-87", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_36 [label="var options = new MockOptions()", span="89-89", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", color=green, community=0, file="HelpOptionAttributeFixture.cs"];
m0_37 [label="var writer = new StringWriter()", span="90-90", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_39 [label="var result = parser.ParseArguments(\r\n                    new string[] { ''math.xml'', ''-oresult.xml'' }, options)", span="92-93", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_38 [label="var parser = new Parser(with => with.HelpWriter = writer)", span="91-91", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_41 [label="string helpText = writer.ToString()", span="97-97", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_40 [label="result.Should().BeFalse()", span="95-95", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_43 [label="Console.Write(helpText)", span="100-100", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_42 [label="(helpText.Length > 0).Should().BeTrue()", span="98-98", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_44 [label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", span="87-87", cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", file="HelpOptionAttributeFixture.cs"];
m0_59 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_33 [label="with.HelpWriter = writer", span="78-78", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_48 [label="with.HelpWriter = writer", span="91-91", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_60 [label="with.HelpWriter = writer", span="108-108", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_32 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_34 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_47 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_49 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_61 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="HelpOptionAttributeFixture.cs"];
m0_28 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpOptionAttributeFixture.cs"];
m0_3 [label="CommandLine.ValueAttribute", span="", file="HelpOptionAttributeFixture.cs"];
m0_63 [label=writer, span="", file="HelpOptionAttributeFixture.cs"];
m0_64 [label=writer, span="", file="HelpOptionAttributeFixture.cs"];
m0_65 [label=writer, span="", file="HelpOptionAttributeFixture.cs"];
m1_240 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="IParser.cs"];
m1_94 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="279-279", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_110 [label="parserResult == null", span="281-281", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_112 [label="current == null", span="282-282", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_114 [label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="284-284", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_115 [label="return current;", span="285-285", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_116 [label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="287-290", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_118 [label="return current;", span="292-292", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_119 [label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="294-295", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_121 [label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="298-299", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_122 [label="return current;", span="301-301", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_111 [label="throw new ArgumentNullException(''parserResult'');", span="281-281", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_113 [label="throw new ArgumentNullException(''current'');", span="282-282", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_117 [label="string.IsNullOrEmpty(errors)", span="291-291", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_120 [label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="296-297", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_123 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="279-279", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="IParser.cs"];
m1_124 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="IParser.cs"];
m1_54 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="IParser.cs"];
m1_210 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)", file="IParser.cs"];
m1_0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="IParser.cs"];
m1_1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="IParser.cs"];
m1_365 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)", file="IParser.cs"];
m1_447 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()", file="IParser.cs"];
m1_310 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="IParser.cs"];
m1_57 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="353-353", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_159 [label="result == null", span="356-356", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_161 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="358-361", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_160 [label="throw new ArgumentNullException(''result'');", span="356-356", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_162 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="353-353", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_255 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()", file="IParser.cs"];
m1_254 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="IParser.cs"];
m1_84 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="IParser.cs"];
m1_82 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="IParser.cs"];
m1_389 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="IParser.cs"];
m1_197 [label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57", cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", file="IParser.cs"];
m1_136 [label="Entry CommandLine.Text.HelpText.ToString()", span="513-513", cluster="CommandLine.Text.HelpText.ToString()", file="IParser.cs"];
m1_249 [label="int ExtraLength = 10", span="515-515", cluster="CommandLine.Text.HelpText.ToString()", file="IParser.cs"];
m1_250 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="516-528", cluster="CommandLine.Text.HelpText.ToString()", file="IParser.cs"];
m1_251 [label="Exit CommandLine.Text.HelpText.ToString()", span="513-513", cluster="CommandLine.Text.HelpText.ToString()", file="IParser.cs"];
m1_252 [label="Entry string.SafeLength()", span="40-40", cluster="string.SafeLength()", file="IParser.cs"];
m1_140 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="329-329", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="IParser.cs"];
m1_141 [label="return AddLine(postOptionsHelp, value);", span="331-331", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="IParser.cs"];
m1_142 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="329-329", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="IParser.cs"];
m1_126 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="IParser.cs"];
m1_238 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()", file="IParser.cs"];
m1_413 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="778-778", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_416 [label="var specLength = 0", span="780-780", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_417 [label="var hasShort = spec.ShortName.Length > 0", span="782-782", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_418 [label="var hasLong = spec.LongName.Length > 0", span="783-783", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_420 [label="spec.MetaValue.Length > 0", span="786-786", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_421 [label="metaLength = spec.MetaValue.Length + 1", span="787-787", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_428 [label="specLength += spec.LongName.Length", span="800-800", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_423 [label="++specLength", span="791-791", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_433 [label="specLength += 2", span="808-808", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_434 [label="return specLength;", span="810-810", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_422 [label=hasShort, span="789-789", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_432 [label="hasShort && hasLong", span="807-807", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_419 [label="var metaLength = 0", span="785-785", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_427 [label=hasLong, span="798-798", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_426 [label="specLength += metaLength", span="795-795", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_431 [label="specLength += metaLength", span="804-804", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_424 [label=AddDashesToOption, span="792-792", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_425 [label="++specLength", span="793-793", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_429 [label=AddDashesToOption, span="801-801", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_430 [label="specLength += 2", span="802-802", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_435 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="778-778", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_241 [label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124", cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="IParser.cs"];
m1_311 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="603-610", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="IParser.cs"];
m1_172 [label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="601-601", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="IParser.cs"];
m1_312 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="601-601", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="IParser.cs"];
m1_368 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="IParser.cs"];
m1_253 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()", file="IParser.cs"];
m1_313 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="IParser.cs"];
m1_367 [label="Entry string.FormatInvariant(params object[])", span="20-20", cluster="string.FormatInvariant(params object[])", file="IParser.cs"];
m1_23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="IParser.cs"];
m1_285 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="IParser.cs"];
m1_125 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="420-420", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_185 [label="parserResult == null", span="426-426", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_187 [label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="428-429", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_191 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="434-442", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_192 [label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="444-447", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_186 [label="throw new ArgumentNullException(''parserResult'');", span="426-426", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_188 [label="meaningfulErrors.Empty()", span="430-430", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_189 [label="return string.Empty;", span="431-431", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_190 [label="var text = new StringBuilder()", span="433-433", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_193 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="420-420", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="IParser.cs"];
m1_45 [label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="531-531", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="IParser.cs"];
m1_256 [label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="533-533", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="IParser.cs"];
m1_257 [label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="531-531", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="IParser.cs"];
m1_301 [label="Entry System.Type.GetUsageData()", span="39-39", cluster="System.Type.GetUsageData()", file="IParser.cs"];
m1_388 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="IParser.cs"];
m1_55 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="IParser.cs"];
m1_239 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="IParser.cs"];
m1_48 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="IParser.cs"];
m1_326 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="658-658", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_334 [label="optionsHelp.Append(''  '')", span="660-660", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_335 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="661-665", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_336 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="667-669", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_337 [label="var optionHelpText = specification.HelpText", span="671-671", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_338 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="673-673", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_339 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="674-674", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_340 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="676-677", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_341 [label="specification.Required", span="679-679", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_342 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="680-680", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_348 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="690-690", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_351 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="694-694", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_354 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="700-700", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_355 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="702-702", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_356 [label="wordBuffer = widthOfHelpText", span="703-703", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_359 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="711-712", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_360 [label="optionHelpText.Length > widthOfHelpText", span="714-714", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_343 [label="!string.IsNullOrEmpty(optionHelpText)", span="682-682", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_345 [label="var words = optionHelpText.Split(' ')", span="687-687", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_358 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="710-710", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_361 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="717-720", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_344 [label="var wordBuffer = 0", span="686-686", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_350 [label="wordBuffer += words[i].Length", span="693-693", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_346 [label="var i = 0", span="688-688", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_347 [label="i < words.Length", span="688-688", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_349 [label="optionsHelp.Append(words[i])", span="692-692", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_357 [label="i++", span="688-688", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_353 [label="wordBuffer++", span="697-697", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_352 [label="optionsHelp.Append('' '')", span="696-696", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_362 [label="return this;", span="722-722", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_363 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="658-658", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="IParser.cs"];
m1_330 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="641-641", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="IParser.cs"];
m1_293 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="641-641", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="IParser.cs"];
m1_329 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="643-648", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="IParser.cs"];
m1_390 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="IParser.cs"];
m1_127 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="IParser.cs"];
m1_409 [label="Entry lambda expression", span="767-774", cluster="lambda expression", file="IParser.cs"];
m1_59 [label="license.AddToHelpText(auto, true)", span="220-220", cluster="lambda expression", file="IParser.cs"];
m1_63 [label="usage.AddToHelpText(auto, true)", span="223-223", cluster="lambda expression", file="IParser.cs"];
m1_58 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="IParser.cs"];
m1_62 [label="Entry lambda expression", span="223-223", cluster="lambda expression", file="IParser.cs"];
m1_65 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="IParser.cs"];
m1_60 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="IParser.cs"];
m1_64 [label="Exit lambda expression", span="223-223", cluster="lambda expression", file="IParser.cs"];
m1_66 [label="e.Tag == ErrorType.NoVerbSelectedError", span="233-233", cluster="lambda expression", file="IParser.cs"];
m1_67 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="IParser.cs"];
m1_92 [label="DefaultParsingErrorsHandler(parserResult, current)", span="265-265", cluster="lambda expression", file="IParser.cs"];
m1_105 [label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271", cluster="lambda expression", file="IParser.cs"];
m1_85 [label="Entry lambda expression", span="261-261", cluster="lambda expression", file="IParser.cs"];
m1_88 [label="Entry lambda expression", span="264-264", cluster="lambda expression", file="IParser.cs"];
m1_99 [label="DefaultParsingErrorsHandler(pr, current)", span="270-270", cluster="lambda expression", file="IParser.cs"];
m1_98 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="IParser.cs"];
m1_101 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="IParser.cs"];
m1_104 [label="Entry lambda expression", span="271-271", cluster="lambda expression", file="IParser.cs"];
m1_107 [label="Entry lambda expression", span="271-271", cluster="lambda expression", file="IParser.cs"];
m1_91 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="IParser.cs"];
m1_95 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="IParser.cs"];
m1_86 [label="e.Tag == ErrorType.VersionRequestedError", span="261-261", cluster="lambda expression", file="IParser.cs"];
m1_87 [label="Exit lambda expression", span="261-261", cluster="lambda expression", file="IParser.cs"];
m1_89 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="264-264", cluster="lambda expression", file="IParser.cs"];
m1_90 [label="Exit lambda expression", span="264-264", cluster="lambda expression", file="IParser.cs"];
m1_93 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="IParser.cs"];
m1_96 [label=e, span="265-265", cluster="lambda expression", file="IParser.cs"];
m1_97 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="IParser.cs"];
m1_100 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="IParser.cs"];
m1_102 [label=e, span="270-270", cluster="lambda expression", file="IParser.cs"];
m1_103 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="IParser.cs"];
m1_106 [label="Exit lambda expression", span="271-271", cluster="lambda expression", file="IParser.cs"];
m1_108 [label=e, span="271-271", cluster="lambda expression", file="IParser.cs"];
m1_109 [label="Exit lambda expression", span="271-271", cluster="lambda expression", file="IParser.cs"];
m1_131 [label="current.AddPreOptionsLine(line)", span="299-299", cluster="lambda expression", file="IParser.cs"];
m1_130 [label="Entry lambda expression", span="299-299", cluster="lambda expression", file="IParser.cs"];
m1_132 [label="Exit lambda expression", span="299-299", cluster="lambda expression", file="IParser.cs"];
m1_148 [label="Entry lambda expression", span="337-337", cluster="lambda expression", file="IParser.cs"];
m1_149 [label="AddPreOptionsLine(line)", span="337-337", cluster="lambda expression", file="IParser.cs"];
m1_150 [label="Exit lambda expression", span="337-337", cluster="lambda expression", file="IParser.cs"];
m1_156 [label="Entry lambda expression", span="344-344", cluster="lambda expression", file="IParser.cs"];
m1_157 [label="AddPostOptionsLine(line)", span="344-344", cluster="lambda expression", file="IParser.cs"];
m1_158 [label="Exit lambda expression", span="344-344", cluster="lambda expression", file="IParser.cs"];
m1_203 [label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="439-440", cluster="lambda expression", file="IParser.cs"];
m1_204 [label="text.AppendLine(line.ToString())", span="441-441", cluster="lambda expression", file="IParser.cs"];
m1_199 [label="Entry lambda expression", span="435-435", cluster="lambda expression", file="IParser.cs"];
m1_202 [label="Entry lambda expression", span="437-442", cluster="lambda expression", file="IParser.cs"];
m1_200 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="435-435", cluster="lambda expression", file="IParser.cs"];
m1_201 [label="Exit lambda expression", span="435-435", cluster="lambda expression", file="IParser.cs"];
m1_205 [label="Exit lambda expression", span="437-442", cluster="lambda expression", file="IParser.cs"];
m1_214 [label="Entry lambda expression", span="458-458", cluster="lambda expression", file="IParser.cs"];
m1_215 [label=example, span="458-458", cluster="lambda expression", file="IParser.cs"];
m1_216 [label="Exit lambda expression", span="458-458", cluster="lambda expression", file="IParser.cs"];
m1_245 [label="config.PreferShortName = s.PreferShortName", span="496-496", cluster="lambda expression", file="IParser.cs"];
m1_246 [label="config.GroupSwitches = s.GroupSwitches", span="497-497", cluster="lambda expression", file="IParser.cs"];
m1_247 [label="config.UseEqualToken = s.UseEqualToken", span="498-498", cluster="lambda expression", file="IParser.cs"];
m1_244 [label="Entry lambda expression", span="494-499", cluster="lambda expression", file="IParser.cs"];
m1_248 [label="Exit lambda expression", span="494-499", cluster="lambda expression", file="IParser.cs"];
m1_258 [label="Entry lambda expression", span="533-533", cluster="lambda expression", file="IParser.cs"];
m1_259 [label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="533-533", cluster="lambda expression", file="IParser.cs"];
m1_260 [label="Exit lambda expression", span="533-533", cluster="lambda expression", file="IParser.cs"];
m1_296 [label="Entry lambda expression", span="580-580", cluster="lambda expression", file="IParser.cs"];
m1_297 [label="v.Index", span="580-580", cluster="lambda expression", file="IParser.cs"];
m1_298 [label="Exit lambda expression", span="580-580", cluster="lambda expression", file="IParser.cs"];
m1_303 [label="Entry lambda expression", span="589-598", cluster="lambda expression", file="IParser.cs"];
m1_304 [label="var prop = tuple.Item1", span="591-591", cluster="lambda expression", file="IParser.cs"];
m1_305 [label="var attr = tuple.Item2", span="592-592", cluster="lambda expression", file="IParser.cs"];
m1_306 [label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="594-595", cluster="lambda expression", file="IParser.cs"];
m1_307 [label="return Tuple.Create(attr, examples);", span="597-597", cluster="lambda expression", file="IParser.cs"];
m1_308 [label="Exit lambda expression", span="589-598", cluster="lambda expression", file="IParser.cs"];
m1_324 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="626-626", cluster="lambda expression", file="IParser.cs"];
m1_323 [label="Entry lambda expression", span="625-626", cluster="lambda expression", file="IParser.cs"];
m1_325 [label="Exit lambda expression", span="625-626", cluster="lambda expression", file="IParser.cs"];
m1_371 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="664-664", cluster="lambda expression", file="IParser.cs"];
m1_375 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="665-665", cluster="lambda expression", file="IParser.cs"];
m1_370 [label="Entry lambda expression", span="664-664", cluster="lambda expression", file="IParser.cs"];
m1_374 [label="Entry lambda expression", span="665-665", cluster="lambda expression", file="IParser.cs"];
m1_378 [label="Entry lambda expression", span="677-677", cluster="lambda expression", file="IParser.cs"];
m1_379 [label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="677-677", cluster="lambda expression", file="IParser.cs"];
m1_372 [label="Exit lambda expression", span="664-664", cluster="lambda expression", file="IParser.cs"];
m1_376 [label="Exit lambda expression", span="665-665", cluster="lambda expression", file="IParser.cs"];
m1_380 [label="Exit lambda expression", span="677-677", cluster="lambda expression", file="IParser.cs"];
m1_386 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="731-735", cluster="lambda expression", file="IParser.cs"];
m1_392 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="738-741", cluster="lambda expression", file="IParser.cs"];
m1_385 [label="Entry lambda expression", span="731-735", cluster="lambda expression", file="IParser.cs"];
m1_391 [label="Entry lambda expression", span="738-741", cluster="lambda expression", file="IParser.cs"];
m1_387 [label="Exit lambda expression", span="731-735", cluster="lambda expression", file="IParser.cs"];
m1_393 [label="Exit lambda expression", span="738-741", cluster="lambda expression", file="IParser.cs"];
m1_397 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="750-750", cluster="lambda expression", file="IParser.cs"];
m1_401 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="751-751", cluster="lambda expression", file="IParser.cs"];
m1_396 [label="Entry lambda expression", span="750-750", cluster="lambda expression", file="IParser.cs"];
m1_400 [label="Entry lambda expression", span="751-751", cluster="lambda expression", file="IParser.cs"];
m1_398 [label="Exit lambda expression", span="750-750", cluster="lambda expression", file="IParser.cs"];
m1_402 [label="Exit lambda expression", span="751-751", cluster="lambda expression", file="IParser.cs"];
m1_410 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="769-771", cluster="lambda expression", file="IParser.cs"];
m1_411 [label="return Math.Max(length, specLength);", span="773-773", cluster="lambda expression", file="IParser.cs"];
m1_412 [label="Exit lambda expression", span="767-774", cluster="lambda expression", file="IParser.cs"];
m1_384 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="IParser.cs"];
m1_80 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="IParser.cs"];
m1_373 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="725-725", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_382 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="727-742", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_383 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="725-725", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="IParser.cs"];
m1_4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="IParser.cs"];
m1_5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="IParser.cs"];
m1_315 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="IParser.cs"];
m1_68 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="254-254", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_69 [label="parserResult.Tag != ParserResultType.NotParsed", span="256-256", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_71 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_75 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="265-265", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_78 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="269-271", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_70 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="257-257", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_72 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="261-261", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_74 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="264-264", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_76 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="267-267", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_73 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="262-262", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_77 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="268-268", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_79 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="254-254", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_207 [label="Entry int.Spaces()", span="30-30", cluster="int.Spaces()", file="IParser.cs"];
m1_61 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="IParser.cs"];
m1_198 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="IParser.cs"];
m1_237 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()", file="IParser.cs"];
m1_194 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="IParser.cs"];
m1_151 [label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="341-341", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="IParser.cs"];
m1_152 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="343-343", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="IParser.cs"];
m1_153 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="344-344", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="IParser.cs"];
m1_154 [label="return this;", span="345-345", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="IParser.cs"];
m1_155 [label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="341-341", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="IParser.cs"];
m1_56 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="370-370", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="IParser.cs"];
m1_165 [label="types == null", span="372-372", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="IParser.cs"];
m1_167 [label="types.Length == 0", span="373-373", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="IParser.cs"];
m1_169 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="375-378", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="IParser.cs"];
m1_166 [label="throw new ArgumentNullException(''types'');", span="372-372", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="IParser.cs"];
m1_168 [label="throw new ArgumentOutOfRangeException(''types'');", span="373-373", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="IParser.cs"];
m1_170 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="370-370", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="IParser.cs"];
m1_236 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="586-586", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="IParser.cs"];
m1_299 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="588-598", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="IParser.cs"];
m1_300 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="586-586", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="IParser.cs"];
m1_128 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="IParser.cs"];
m1_366 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="IParser.cs"];
m1_8 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="IParser.cs"];
m1_9 [label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="IParser.cs"];
m1_211 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="456-456", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_212 [label="return RenderUsageText(parserResult, example => example);", span="458-458", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_213 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="456-456", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_129 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="IParser.cs"];
m1_282 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="IParser.cs"];
m1_24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="IParser.cs"];
m1_314 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="IParser.cs"];
m1_25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_31 [label="auto = onError(auto)", span="216-216", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_34 [label="var usageText = HelpText.RenderUsageText(parserResult, onExample)", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_38 [label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="232-233", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_40 [label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="236-236", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_41 [label="auto.AddOptions(parserResult)", span="239-239", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_27 [label="var errors = Enumerable.Empty<Error>()", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_33 [label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="222-223", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_36 [label="auto.AddPreOptionsLine(auto.SentenceBuilder.UsageHeadingText())", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_37 [label="auto.AddPreOptionsText(usageText)", span="229-229", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_39 [label="auto.AddDashesToOption = false", span="235-235", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_42 [label="return auto;", span="241-241", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_30 [label="FilterMeaningfulErrors(errors).Any()", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_35 [label="usageText.Length > 0", span="226-226", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_43 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="IParser.cs"];
m1_47 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="IParser.cs"];
m1_44 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="IParser.cs"];
m1_195 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="IParser.cs"];
m1_83 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="IParser.cs"];
m1_369 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="IParser.cs"];
m1_284 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="IParser.cs"];
m1_295 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="IParser.cs"];
m1_399 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="IParser.cs"];
m1_164 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="613-613", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="IParser.cs"];
m1_316 [label="var maxLength = GetMaxLength(specifications)", span="618-618", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="IParser.cs"];
m1_318 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="622-622", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="IParser.cs"];
m1_319 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="624-626", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="IParser.cs"];
m1_317 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="620-620", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="IParser.cs"];
m1_320 [label="return this;", span="628-628", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="IParser.cs"];
m1_321 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="613-613", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="IParser.cs"];
m1_209 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="IParser.cs"];
m1_133 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="309-309", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="IParser.cs"];
m1_134 [label="return info.ToString();", span="311-311", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="IParser.cs"];
m1_135 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="309-309", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="IParser.cs"];
m1_139 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="651-651", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="IParser.cs"];
m1_331 [label="AddLine(preOptionsHelp, value, maximumLength)", span="653-653", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="IParser.cs"];
m1_332 [label="return this;", span="655-655", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="IParser.cs"];
m1_333 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="651-651", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="IParser.cs"];
m1_243 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="IParser.cs"];
m1_309 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="IParser.cs"];
m1_143 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="757-757", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="IParser.cs"];
m1_403 [label="AddLine(builder, value, MaximumDisplayWidth)", span="759-759", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="IParser.cs"];
m1_404 [label="return this;", span="761-761", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="IParser.cs"];
m1_405 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="757-757", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="IParser.cs"];
m1_2 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="IParser.cs"];
m1_3 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="IParser.cs"];
m1_287 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="575-577", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="IParser.cs"];
m1_163 [label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="572-572", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="IParser.cs"];
m1_286 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="574-574", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="IParser.cs"];
m1_288 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="578-580", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="IParser.cs"];
m1_289 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="581-583", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="IParser.cs"];
m1_290 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="572-572", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="IParser.cs"];
m1_261 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="536-536", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_262 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="538-538", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_264 [label="var words = value.Split(' ')", span="542-542", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_267 [label="words[i].Length < (maximumLength - wordBuffer)", span="545-545", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_268 [label="builder.Append(words[i])", span="547-547", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_270 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="549-549", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_271 [label="builder.Append('' '')", span="551-551", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_273 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="555-555", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_274 [label="builder.Append(words[i].Substring(0, maximumLength))", span="557-557", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_275 [label="wordBuffer = maximumLength", span="558-558", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_277 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="564-564", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_278 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="565-565", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_279 [label="value.Length > maximumLength", span="567-567", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_280 [label="builder.Append(value)", span="569-569", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_263 [label="var wordBuffer = 0", span="541-541", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_269 [label="wordBuffer += words[i].Length", span="548-548", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_265 [label="var i = 0", span="543-543", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_266 [label="i < words.Length", span="543-543", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_276 [label="i++", span="543-543", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_272 [label="wordBuffer++", span="552-552", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_281 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="536-536", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="IParser.cs"];
m1_10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_11 [label="sentenceBuilder == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="IParser.cs"];
m1_13 [label="heading == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_15 [label="copyright == null", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_19 [label="this.sentenceBuilder = sentenceBuilder", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_20 [label="this.heading = heading", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_21 [label="this.copyright = copyright", span="106-106", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0, file="IParser.cs"];
m1_14 [label="throw new ArgumentNullException(''heading'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_16 [label="throw new ArgumentNullException(''copyright'');", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="IParser.cs"];
m1_377 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="745-745", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_394 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="747-754", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_395 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="745-745", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_415 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="IParser.cs"];
m1_208 [label="Entry Unk.formatError", span="", cluster="Unk.formatError", file="IParser.cs"];
m1_322 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="764-764", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="IParser.cs"];
m1_406 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="766-774", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="IParser.cs"];
m1_407 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="764-764", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="IParser.cs"];
m1_364 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="IParser.cs"];
m1_171 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="IParser.cs"];
m1_328 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="631-631", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="IParser.cs"];
m1_292 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="631-631", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="IParser.cs"];
m1_327 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="633-638", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="IParser.cs"];
m1_283 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="IParser.cs"];
m1_381 [label="Entry string.FormatLocal(params object[])", span="25-25", cluster="string.FormatLocal(params object[])", file="IParser.cs"];
m1_173 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="387-387", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_174 [label="result == null", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_176 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="391-394", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_175 [label="throw new ArgumentNullException(''result'');", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_177 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="387-387", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="IParser.cs"];
m1_414 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="813-813", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_436 [label="var specLength = 0", span="815-815", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_437 [label="var hasMeta = spec.MetaName.Length > 0", span="817-817", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_439 [label="spec.MetaValue.Length > 0", span="820-820", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_440 [label="metaLength = spec.MetaValue.Length + 1", span="821-821", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_442 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="824-824", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_443 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="826-826", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_438 [label="var metaLength = 0", span="819-819", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_441 [label=hasMeta, span="823-823", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_444 [label="specLength += metaLength", span="828-828", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_445 [label="return specLength;", span="830-830", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_446 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="813-813", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="IParser.cs"];
m1_52 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="319-319", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="IParser.cs"];
m1_137 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="321-321", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="IParser.cs"];
m1_138 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="319-319", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="IParser.cs"];
m1_302 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="IParser.cs"];
m1_291 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="IParser.cs"];
m1_46 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="IParser.cs"];
m1_51 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="IParser.cs"];
m1_178 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="404-404", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="IParser.cs"];
m1_179 [label="types == null", span="406-406", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="IParser.cs"];
m1_181 [label="types.Length == 0", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="IParser.cs"];
m1_183 [label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="409-409", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="IParser.cs"];
m1_180 [label="throw new ArgumentNullException(''types'');", span="406-406", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="IParser.cs"];
m1_182 [label="throw new ArgumentOutOfRangeException(''types'');", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="IParser.cs"];
m1_184 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="404-404", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="IParser.cs"];
m1_49 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="IParser.cs"];
m1_53 [label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="334-334", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="IParser.cs"];
m1_144 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="336-336", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="IParser.cs"];
m1_145 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="337-337", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="IParser.cs"];
m1_146 [label="return this;", span="338-338", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="IParser.cs"];
m1_147 [label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="334-334", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="IParser.cs"];
m1_6 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="IParser.cs"];
m1_7 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="IParser.cs"];
m1_50 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="468-468", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_217 [label="parserResult == null", span="470-470", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_219 [label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="472-472", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_227 [label="var example = mapperFunc(e)", span="483-483", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_218 [label="throw new ArgumentNullException(''parserResult'');", span="470-470", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_220 [label="usage.MatchNothing()", span="473-473", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_222 [label="var usageTuple = usage.FromJust()", span="476-476", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_221 [label="return string.Empty;", span="474-474", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_223 [label="var examples = usageTuple.Item2", span="477-477", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_224 [label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="478-478", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_226 [label=examples, span="481-481", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_225 [label="var text = new StringBuilder(BuilderCapacity)", span="480-480", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_231 [label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                                {\r\n                                    config.PreferShortName = s.PreferShortName;\r\n                                    config.GroupSwitches = s.GroupSwitches;\r\n                                    config.UseEqualToken = s.UseEqualToken;\r\n                                }))\r\n                        .Append(Environment.NewLine)", span="490-500", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_233 [label="text.Append(exampleText)", span="503-503", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_234 [label="return text.ToString();", span="506-506", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_228 [label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')\r\n                    .Append(Environment.NewLine)", span="484-486", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_229 [label="var styles = example.GetFormatStylesOrDefault()", span="487-487", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_232 [label="exampleText.Append(commandLine)", span="501-501", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_230 [label=styles, span="488-488", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_235 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="468-468", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="IParser.cs"];
m1_196 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="IParser.cs"];
m1_408 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="IParser.cs"];
m1_242 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="IParser.cs"];
m1_206 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="IParser.cs"];
m1_81 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="IParser.cs"];
m1_294 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="IParser.cs"];
m1_448 [label="CommandLine.Text.HelpText", span="", file="IParser.cs"];
m1_449 [label=auto, span="", file="IParser.cs"];
m1_450 [label="CommandLine.ParserResult<T>", span="", file="IParser.cs"];
m1_451 [label=pr, span="", file="IParser.cs"];
m1_452 [label="CommandLine.Text.HelpText", span="", file="IParser.cs"];
m1_453 [label="System.Func<CommandLine.Error, string>", span="", file="IParser.cs"];
m1_454 [label=int, span="", file="IParser.cs"];
m1_455 [label=text, span="", file="IParser.cs"];
m1_456 [label=s, span="", file="IParser.cs"];
m1_457 [label=string, span="", file="IParser.cs"];
m1_458 [label=maxLength, span="", file="IParser.cs"];
m1_459 [label=remainingSpace, span="", file="IParser.cs"];
m1_460 [label=int, span="", file="IParser.cs"];
m1_461 [label="CommandLine.Core.Specification", span="", file="IParser.cs"];
m1_462 [label=optionHelpText, span="", file="IParser.cs"];
m1_463 [label="CommandLine.Core.OptionSpecification", span="", file="IParser.cs"];
m1_464 [label="CommandLine.Core.ValueSpecification", span="", file="IParser.cs"];
m2_13 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="MutuallyExclusiveParsingFixture.cs"];
m2_12 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="MutuallyExclusiveParsingFixture.cs"];
m2_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="MutuallyExclusiveParsingFixture.cs"];
m2_11 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="MutuallyExclusiveParsingFixture.cs"];
m2_15 [label="Entry Unk.NotNull", span="", cluster="Unk.NotNull", file="MutuallyExclusiveParsingFixture.cs"];
m2_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="MutuallyExclusiveParsingFixture.cs"];
m2_27 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="MutuallyExclusiveParsingFixture.cs"];
m2_0 [label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="MutuallyExclusiveParsingFixture.cs"];
m2_1 [label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="20-23", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="MutuallyExclusiveParsingFixture.cs"];
m2_2 [label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="24-30", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="MutuallyExclusiveParsingFixture.cs"];
m2_3 [label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="33-37", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs"];
m2_4 [label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Value.Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="40-43", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs"];
m2_5 [label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="17-17", cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="MutuallyExclusiveParsingFixture.cs"];
m2_28 [label="Entry lambda expression", span="41-43", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_16 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_20 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_24 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_17 [label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="28-28", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_18 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_21 [label="pt.Specification.IsOption()", span="34-34", cluster="lambda expression", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs"];
m2_22 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_25 [label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="36-36", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_26 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_29 [label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="41-43", cluster="lambda expression", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs"];
m2_30 [label="Exit lambda expression", span="41-43", cluster="lambda expression", file="MutuallyExclusiveParsingFixture.cs"];
m2_31 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="MutuallyExclusiveParsingFixture.cs"];
m2_8 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="MutuallyExclusiveParsingFixture.cs"];
m2_19 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="MutuallyExclusiveParsingFixture.cs"];
m2_23 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="MutuallyExclusiveParsingFixture.cs"];
m2_14 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="MutuallyExclusiveParsingFixture.cs"];
m2_10 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="MutuallyExclusiveParsingFixture.cs"];
m2_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="MutuallyExclusiveParsingFixture.cs"];
m7_25 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="ParserFixture.cs"];
m7_78 [label="Entry CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134", cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", file="ParserFixture.cs"];
m7_80 [label="var parser = new Parser()", span="137-137", cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", color=green, community=0, file="ParserFixture.cs"];
m7_79 [label="var options = new SimpleOptions()", span="136-136", cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", file="ParserFixture.cs"];
m7_81 [label="var result = parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138", cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", file="ParserFixture.cs"];
m7_83 [label="Console.WriteLine(options)", span="140-140", cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", file="ParserFixture.cs"];
m7_82 [label="result.Should().BeFalse()", span="139-139", cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", file="ParserFixture.cs"];
m7_84 [label="Exit CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134", cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", file="ParserFixture.cs"];
m7_125 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="32-32", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="ParserFixture.cs"];
m7_211 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", file="ParserFixture.cs"];
m7_213 [label="var parser = new Parser()", span="334-334", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_212 [label="var options = new NumberSetOptions()", span="333-333", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", file="ParserFixture.cs"];
m7_214 [label="var result = parser.ParseArguments(new string[] { ''--float'' }, options)", span="335-335", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", file="ParserFixture.cs"];
m7_215 [label="result.Should().BeFalse()", span="337-337", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", file="ParserFixture.cs"];
m7_216 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", file="ParserFixture.cs"];
m7_297 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_299 [label="var parser = new Parser()", span="471-471", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", color=green, community=0, file="ParserFixture.cs"];
m7_298 [label="var options = new NumberSetOptions()", span="470-470", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_300 [label="var result = parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="472-472", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_301 [label="result.Should().BeFalse()", span="474-474", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_302 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_8 [label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33", cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", file="ParserFixture.cs"];
m7_106 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_110 [label="var parser = new Parser()", span="178-178", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", color=green, community=0, file="ParserFixture.cs"];
m7_109 [label="var options = new NumberSetOptions()", span="177-177", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_111 [label="var result = parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="179-179", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_108 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="176-176", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_113 [label="options.NullableDoubleValue.Should().Be(12.32982D)", span="182-182", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_112 [label="result.Should().BeTrue()", span="181-181", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_107 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="175-175", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_114 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="184-184", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_115 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", file="ParserFixture.cs"];
m7_3 [label="Entry Unk.>", span="", cluster="Unk.>", file="ParserFixture.cs"];
m7_157 [label="Entry CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", file="ParserFixture.cs"];
m7_158 [label="var parser = new Parser()", span="247-247", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", color=green, community=0, file="ParserFixture.cs"];
m7_159 [label="var options = new MixedCaseOptions()", span="248-248", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", file="ParserFixture.cs"];
m7_160 [label="var result = parser.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="249-249", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", file="ParserFixture.cs"];
m7_162 [label="options.AlfaValue.Should().Be(''alfa'')", span="252-252", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", file="ParserFixture.cs"];
m7_163 [label="options.BetaValue.Should().Be(''beta'')", span="253-253", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", file="ParserFixture.cs"];
m7_161 [label="result.Should().BeTrue()", span="251-251", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", file="ParserFixture.cs"];
m7_164 [label="Exit CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245", cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", file="ParserFixture.cs"];
m7_105 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="ParserFixture.cs"];
m7_137 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", file="ParserFixture.cs"];
m7_139 [label="Assert.Throws<ParserException>(\r\n                () => new Parser().ParseArguments(new string[] {}, options))", span="217-218", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", color=green, community=0, file="ParserFixture.cs"];
m7_138 [label="var options = new SimpleOptionsWithBadDefaults()", span="216-216", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", file="ParserFixture.cs"];
m7_140 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", file="ParserFixture.cs"];
m7_103 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ParserFixture.cs"];
m7_145 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_147 [label="var parser = new Parser()", span="226-226", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", color=green, community=0, file="ParserFixture.cs"];
m7_146 [label="var options = new SimpleOptions()", span="225-225", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_148 [label="var result = parser.ParseArguments(new string[] { ''-x'' }, options)", span="227-227", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_149 [label="result.Should().BeFalse()", span="229-229", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_150 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_223 [label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", file="ParserFixture.cs"];
m7_225 [label="var parser = new Parser()", span="356-356", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", color=green, community=0, file="ParserFixture.cs"];
m7_224 [label="var options = new SimpleOptions()", span="355-355", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", file="ParserFixture.cs"];
m7_226 [label="var result = parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="357-357", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", file="ParserFixture.cs"];
m7_228 [label="options.StringValue.Should().Be(''-'')", span="360-360", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", file="ParserFixture.cs"];
m7_227 [label="result.Should().BeTrue()", span="359-359", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", file="ParserFixture.cs"];
m7_229 [label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", file="ParserFixture.cs"];
m7_283 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", file="ParserFixture.cs"];
m7_285 [label="var parser = new Parser()", span="447-447", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", color=green, community=0, file="ParserFixture.cs"];
m7_284 [label="var options = new NumberSetOptions()", span="446-446", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", file="ParserFixture.cs"];
m7_286 [label="var result = parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="448-448", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", file="ParserFixture.cs"];
m7_288 [label="options.DoubleValue.Should().Be(-4096.1024D)", span="451-451", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", file="ParserFixture.cs"];
m7_287 [label="result.Should().BeTrue()", span="450-450", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", file="ParserFixture.cs"];
m7_289 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", file="ParserFixture.cs"];
m7_311 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_313 [label="var parser = new Parser()", span="491-491", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", color=green, community=0, file="ParserFixture.cs"];
m7_312 [label="var options = new NumberSetOptions()", span="490-490", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_314 [label="var result = parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="492-492", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_315 [label="result.Should().BeFalse()", span="494-494", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_316 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_324 [label="Entry float.ToString(System.IFormatProvider)", span="0-0", cluster="float.ToString(System.IFormatProvider)", file="ParserFixture.cs"];
m7_10 [label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50", cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", file="ParserFixture.cs"];
m7_11 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new Parser().ParseArguments(new string[] {}, null))", span="52-53", cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", color=green, community=0, file="ParserFixture.cs"];
m7_12 [label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50", cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", file="ParserFixture.cs"];
m7_62 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_64 [label="var parser = new Parser()", span="117-117", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", color=green, community=0, file="ParserFixture.cs"];
m7_63 [label="var options = new SimpleOptionsWithOptionList()", span="116-116", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_65 [label="var result = parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_67 [label="options.SearchKeywords[0].Should().Be(''string1'')", span="122-122", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_68 [label="Console.WriteLine(options.SearchKeywords[0])", span="123-123", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_69 [label="options.SearchKeywords[1].Should().Be(''stringTwo'')", span="124-124", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_70 [label="Console.WriteLine(options.SearchKeywords[1])", span="125-125", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_71 [label="options.SearchKeywords[2].Should().Be(''stringIII'')", span="126-126", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_72 [label="Console.WriteLine(options.SearchKeywords[2])", span="127-127", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_73 [label="options.StringValue.Should().Be(''test-file.txt'')", span="128-128", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_74 [label="Console.WriteLine(options.StringValue)", span="129-129", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_66 [label="result.Should().BeTrue()", span="121-121", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_75 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", file="ParserFixture.cs"];
m7_104 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="43-43", cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserFixture.cs"];
m7_255 [label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="ParserFixture.cs"];
m7_257 [label="var parser = new Parser()", span="403-403", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="ParserFixture.cs"];
m7_256 [label="var options = new NumberSetOptions()", span="402-402", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="ParserFixture.cs"];
m7_258 [label="var result = parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="404-404", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="ParserFixture.cs"];
m7_260 [label="options.IntegerValue.Should().Be(-4096)", span="407-407", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="ParserFixture.cs"];
m7_259 [label="result.Should().BeTrue()", span="406-406", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="ParserFixture.cs"];
m7_261 [label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="ParserFixture.cs"];
m7_340 [label="Entry Unk.BeGreaterThan", span="", cluster="Unk.BeGreaterThan", file="ParserFixture.cs"];
m7_9 [label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141", cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ParserFixture.cs"];
m7_76 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="ParserFixture.cs"];
m7_193 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", file="ParserFixture.cs"];
m7_195 [label="var parser = new Parser()", span="304-304", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_194 [label="var options = new NumberSetOptions()", span="303-303", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", file="ParserFixture.cs"];
m7_196 [label="var result = parser.ParseArguments(new string[] { ''--short'' }, options)", span="305-305", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", file="ParserFixture.cs"];
m7_197 [label="result.Should().BeFalse()", span="307-307", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", file="ParserFixture.cs"];
m7_198 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", file="ParserFixture.cs"];
m7_50 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ParserFixture.cs"];
m7_7 [label="Entry CommandLine.Parser.Parser()", span="55-55", cluster="CommandLine.Parser.Parser()", file="ParserFixture.cs"];
m7_205 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", file="ParserFixture.cs"];
m7_207 [label="var parser = new Parser()", span="324-324", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_206 [label="var options = new NumberSetOptions()", span="323-323", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", file="ParserFixture.cs"];
m7_208 [label="var result = parser.ParseArguments(new string[] { ''--long'' }, options)", span="325-325", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", file="ParserFixture.cs"];
m7_209 [label="result.Should().BeFalse()", span="327-327", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", file="ParserFixture.cs"];
m7_210 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", file="ParserFixture.cs"];
m7_142 [label="Entry lambda expression", span="218-218", cluster="lambda expression", file="ParserFixture.cs"];
m7_4 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="ParserFixture.cs"];
m7_5 [label="new Parser().ParseArguments(null, new SimpleOptions())", span="46-46", cluster="lambda expression", color=green, community=0, file="ParserFixture.cs"];
m7_6 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="ParserFixture.cs"];
m7_13 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="ParserFixture.cs"];
m7_14 [label="new Parser().ParseArguments(new string[] {}, null)", span="53-53", cluster="lambda expression", color=green, community=0, file="ParserFixture.cs"];
m7_15 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="ParserFixture.cs"];
m7_143 [label="new Parser().ParseArguments(new string[] {}, options)", span="218-218", cluster="lambda expression", color=green, community=0, file="ParserFixture.cs"];
m7_144 [label="Exit lambda expression", span="218-218", cluster="lambda expression", file="ParserFixture.cs"];
m7_95 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", file="ParserFixture.cs"];
m7_97 [label="var parser = new Parser(new ParserSettings { ParsingCulture = new CultureInfo(''it-IT'') })", span="163-163", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", color=green, community=0, file="ParserFixture.cs"];
m7_96 [label="var options = new NumberSetOptions()", span="162-162", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", file="ParserFixture.cs"];
m7_98 [label="var result = parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="164-164", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", file="ParserFixture.cs"];
m7_100 [label="options.DoubleValue.Should().Be(10.986D)", span="167-167", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", file="ParserFixture.cs"];
m7_99 [label="result.Should().BeTrue()", span="166-166", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", file="ParserFixture.cs"];
m7_101 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", file="ParserFixture.cs"];
m7_38 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_40 [label="var parser = new Parser()", span="87-87", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", color=green, community=0, file="ParserFixture.cs"];
m7_39 [label="var options = new BooleanSetOptions()", span="86-86", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_41 [label="var result = parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="88-88", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_43 [label="options.BooleanThree.Should().BeTrue()", span="91-91", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_44 [label="options.BooleanOne.Should().BeTrue()", span="92-92", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_45 [label="options.BooleanTwo.Should().BeFalse()", span="93-93", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_46 [label="options.NonBooleanValue.Should().Be(65D)", span="94-94", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_47 [label="Console.WriteLine(options)", span="95-95", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_42 [label="result.Should().BeTrue()", span="90-90", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_48 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", file="ParserFixture.cs"];
m7_269 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", file="ParserFixture.cs"];
m7_271 [label="var parser = new Parser()", span="425-425", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", color=green, community=0, file="ParserFixture.cs"];
m7_270 [label="var options = new NumberSetOptions()", span="424-424", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", file="ParserFixture.cs"];
m7_272 [label="var result = parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="426-426", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", file="ParserFixture.cs"];
m7_274 [label="options.DoubleValue.Should().Be(-4096.1024D)", span="429-429", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", file="ParserFixture.cs"];
m7_273 [label="result.Should().BeTrue()", span="428-428", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", file="ParserFixture.cs"];
m7_275 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", file="ParserFixture.cs"];
m7_24 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ParserFixture.cs"];
m7_85 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_87 [label="var parser = new Parser()", span="148-148", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", color=green, community=0, file="ParserFixture.cs"];
m7_86 [label="var options = new SimpleOptionsWithEnum()", span="147-147", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_88 [label="var result = parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_90 [label="options.StringValue.Should().Be(''data.bin'')", span="152-152", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_91 [label="options.FileAccess.Should().Be(FileAccess.ReadWrite)", span="153-153", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_92 [label="Console.WriteLine(options)", span="154-154", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_89 [label="result.Should().BeTrue()", span="151-151", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_93 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", file="ParserFixture.cs"];
m7_199 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", file="ParserFixture.cs"];
m7_201 [label="var parser = new Parser()", span="314-314", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_200 [label="var options = new NumberSetOptions()", span="313-313", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", file="ParserFixture.cs"];
m7_202 [label="var result = parser.ParseArguments(new string[] { ''--int'' }, options)", span="315-315", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", file="ParserFixture.cs"];
m7_203 [label="result.Should().BeFalse()", span="317-317", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", file="ParserFixture.cs"];
m7_204 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", file="ParserFixture.cs"];
m7_318 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_320 [label="var parser = new Parser()", span="501-501", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", color=green, community=0, file="ParserFixture.cs"];
m7_319 [label="var options = new NumberSetOptions()", span="500-500", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_321 [label="var result = parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="502-502", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_322 [label="result.Should().BeFalse()", span="504-504", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_323 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_26 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ParserFixture.cs"];
m7_16 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", file="ParserFixture.cs"];
m7_18 [label="var parser = new Parser()", span="60-60", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", color=green, community=0, file="ParserFixture.cs"];
m7_17 [label="var options = new SimpleOptions()", span="59-59", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", file="ParserFixture.cs"];
m7_19 [label="var result = parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="61-61", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", file="ParserFixture.cs"];
m7_21 [label="options.StringValue.Should().Be(''something'')", span="64-64", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", file="ParserFixture.cs"];
m7_22 [label="Console.WriteLine(options)", span="65-65", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", file="ParserFixture.cs"];
m7_20 [label="result.Should().BeTrue()", span="63-63", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", file="ParserFixture.cs"];
m7_23 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", file="ParserFixture.cs"];
m7_126 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_128 [label="var parser = new Parser()", span="204-204", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", color=green, community=0, file="ParserFixture.cs"];
m7_127 [label="var options = new SimpleOptionsWithDefaultArray()", span="203-203", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_129 [label="var result = parser.ParseArguments(new [] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="205-205", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_131 [label="options.StringArrayValue.Should().Equal(new [] { ''a'', ''b'', ''c'' })", span="208-208", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_132 [label="options.IntegerArrayValue.Should().Equal(new [] { 4, 5, 6 })", span="209-209", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_133 [label="options.DoubleArrayValue.Should().Equal(new [] { 1.1, 2.2, 3.3 })", span="210-210", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_130 [label="result.Should().BeTrue()", span="207-207", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_134 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", file="ParserFixture.cs"];
m7_27 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="ParserFixture.cs"];
m7_172 [label="Entry CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", file="ParserFixture.cs"];
m7_173 [label="var parser = new Parser(new ParserSettings(false))", span="269-269", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", color=green, community=0, file="ParserFixture.cs"];
m7_174 [label="var options = new MixedCaseOptions()", span="270-270", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", file="ParserFixture.cs"];
m7_175 [label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="271-271", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", file="ParserFixture.cs"];
m7_177 [label="options.AlfaValue.Should().Be(''alfa'')", span="274-274", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", file="ParserFixture.cs"];
m7_178 [label="options.BetaValue.Should().Be(''beta'')", span="275-275", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", file="ParserFixture.cs"];
m7_176 [label="result.Should().BeTrue()", span="273-273", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", file="ParserFixture.cs"];
m7_179 [label="Exit CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267", cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", file="ParserFixture.cs"];
m7_151 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_153 [label="var parser = new Parser()", span="236-236", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", color=green, community=0, file="ParserFixture.cs"];
m7_152 [label="var options = new SimpleOptions()", span="235-235", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_154 [label="var result = parser.ParseArguments(new string[] { ''--extend'' }, options)", span="237-237", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_155 [label="result.Should().BeFalse()", span="239-239", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_156 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233", cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", file="ParserFixture.cs"];
m7_276 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", file="ParserFixture.cs"];
m7_278 [label="var parser = new Parser()", span="436-436", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", color=green, community=0, file="ParserFixture.cs"];
m7_277 [label="var options = new NumberSetOptions()", span="435-435", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", file="ParserFixture.cs"];
m7_279 [label="var result = parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="437-437", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", file="ParserFixture.cs"];
m7_281 [label="options.DoubleValue.Should().Be(-4096.1024D)", span="440-440", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", file="ParserFixture.cs"];
m7_280 [label="result.Should().BeTrue()", span="439-439", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", file="ParserFixture.cs"];
m7_282 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", file="ParserFixture.cs"];
m7_165 [label="Entry CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", span="31-31", cluster="CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", file="ParserFixture.cs"];
m7_49 [label="Entry CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", file="ParserFixture.cs"];
m7_187 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", file="ParserFixture.cs"];
m7_189 [label="var parser = new Parser()", span="294-294", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_188 [label="var options = new NumberSetOptions()", span="293-293", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", file="ParserFixture.cs"];
m7_190 [label="var result = parser.ParseArguments(new string[] { ''--byte'' }, options)", span="295-295", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", file="ParserFixture.cs"];
m7_191 [label="result.Should().BeFalse()", span="297-297", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", file="ParserFixture.cs"];
m7_192 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", file="ParserFixture.cs"];
m7_248 [label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="ParserFixture.cs"];
m7_250 [label="var parser = new Parser()", span="393-393", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="ParserFixture.cs"];
m7_249 [label="var options = new NumberSetOptions()", span="392-392", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="ParserFixture.cs"];
m7_251 [label="var result = parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="394-394", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="ParserFixture.cs"];
m7_253 [label="options.IntegerValue.Should().Be(-4096)", span="397-397", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="ParserFixture.cs"];
m7_252 [label="result.Should().BeTrue()", span="396-396", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="ParserFixture.cs"];
m7_254 [label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="ParserFixture.cs"];
m7_230 [label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_232 [label="var parser = new Parser()", span="367-367", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", color=green, community=0, file="ParserFixture.cs"];
m7_231 [label="var options = new SimpleOptionsWithValueList()", span="366-366", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_233 [label="var result = parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="368-368", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_235 [label="options.StringValue.Should().Be(''parser.xml'')", span="371-371", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_236 [label="options.BooleanValue.Should().BeTrue()", span="372-372", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_237 [label="options.Items.Count.Should().Be(1)", span="373-373", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_238 [label="options.Items[0].Should().Be(''-'')", span="374-374", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_234 [label="result.Should().BeTrue()", span="370-370", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_239 [label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364", cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", file="ParserFixture.cs"];
m7_262 [label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="ParserFixture.cs"];
m7_264 [label="var parser = new Parser()", span="413-413", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="ParserFixture.cs"];
m7_263 [label="var options = new NumberSetOptions()", span="412-412", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="ParserFixture.cs"];
m7_265 [label="var result = parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="414-414", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="ParserFixture.cs"];
m7_267 [label="options.IntegerValue.Should().Be(-4096)", span="417-417", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="ParserFixture.cs"];
m7_266 [label="result.Should().BeTrue()", span="416-416", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="ParserFixture.cs"];
m7_268 [label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410", cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="ParserFixture.cs"];
m7_94 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="ParserFixture.cs"];
m7_290 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", file="ParserFixture.cs"];
m7_292 [label="var parser = new Parser()", span="458-458", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", color=green, community=0, file="ParserFixture.cs"];
m7_291 [label="var options = new NumberSetOptions()", span="457-457", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", file="ParserFixture.cs"];
m7_293 [label="var result = parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="459-459", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", file="ParserFixture.cs"];
m7_295 [label="options.DoubleValue.Should().Be(-4096.1024D)", span="462-462", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", file="ParserFixture.cs"];
m7_294 [label="result.Should().BeTrue()", span="461-461", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", file="ParserFixture.cs"];
m7_296 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", file="ParserFixture.cs"];
m7_28 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_30 [label="var parser = new Parser()", span="72-72", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", color=green, community=0, file="ParserFixture.cs"];
m7_29 [label="var options = new SimpleOptions()", span="71-71", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_31 [label="var result = parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="73-74", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_33 [label="options.StringValue.Should().Be(''another string'')", span="77-77", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_34 [label="options.IntegerValue.Should().Be(100)", span="78-78", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_35 [label="options.BooleanValue.Should().BeTrue()", span="79-79", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_36 [label="Console.WriteLine(options)", span="80-80", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_32 [label="result.Should().BeTrue()", span="76-76", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_37 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", file="ParserFixture.cs"];
m7_135 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="ParserFixture.cs"];
m7_141 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="32-32", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="ParserFixture.cs"];
m7_77 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="ParserFixture.cs"];
m7_332 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523", cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", file="ParserFixture.cs"];
m7_334 [label="var parser = new Parser()", span="526-526", cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", color=green, community=0, file="ParserFixture.cs"];
m7_333 [label="var options = new ComplexOptions()", span="525-525", cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", file="ParserFixture.cs"];
m7_335 [label="var result = parser.ParseArguments(new[] { ''-i'', ''-o'' }, options)", span="527-527", cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", file="ParserFixture.cs"];
m7_337 [label="options.LastParserState.Errors.Count.Should().BeGreaterThan(0)", span="531-531", cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", file="ParserFixture.cs"];
m7_336 [label="result.Should().BeFalse()", span="529-529", cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", file="ParserFixture.cs"];
m7_338 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523", cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", file="ParserFixture.cs"];
m7_240 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ParserFixture.cs"];
m7_331 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="ParserFixture.cs"];
m7_217 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", file="ParserFixture.cs"];
m7_219 [label="var parser = new Parser()", span="344-344", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_218 [label="var options = new NumberSetOptions()", span="343-343", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", file="ParserFixture.cs"];
m7_220 [label="var result = parser.ParseArguments(new string[] { ''--double'' }, options)", span="345-345", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", file="ParserFixture.cs"];
m7_221 [label="result.Should().BeFalse()", span="347-347", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", file="ParserFixture.cs"];
m7_222 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", file="ParserFixture.cs"];
m7_303 [label="Entry short.ToString(System.IFormatProvider)", span="0-0", cluster="short.ToString(System.IFormatProvider)", file="ParserFixture.cs"];
m7_180 [label="Entry CommandLine.ParserSettings.ParserSettings(bool)", span="53-53", cluster="CommandLine.ParserSettings.ParserSettings(bool)", file="ParserFixture.cs"];
m7_181 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", file="ParserFixture.cs"];
m7_183 [label="var parser = new Parser()", span="284-284", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_182 [label="var options = new SimpleOptions()", span="283-283", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", file="ParserFixture.cs"];
m7_184 [label="var result = parser.ParseArguments(new string[] { ''--string'' }, options)", span="285-285", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", file="ParserFixture.cs"];
m7_185 [label="result.Should().BeFalse()", span="287-287", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", file="ParserFixture.cs"];
m7_186 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", file="ParserFixture.cs"];
m7_304 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_306 [label="var parser = new Parser()", span="481-481", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", color=green, community=0, file="ParserFixture.cs"];
m7_305 [label="var options = new NumberSetOptions()", span="480-480", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_307 [label="var result = parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="482-482", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_308 [label="result.Should().BeFalse()", span="484-484", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_309 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_102 [label="Entry CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", span="34-34", cluster="CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", file="ParserFixture.cs"];
m7_310 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="ParserFixture.cs"];
m7_116 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_118 [label="var parser = new Parser()", span="191-191", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", color=green, community=0, file="ParserFixture.cs"];
m7_117 [label="var options = new SimpleOptionsWithDefaults()", span="190-190", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_119 [label="var result = parser.ParseArguments(new string[] {}, options)", span="192-192", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_121 [label="options.StringValue.Should().Be(''str'')", span="195-195", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_122 [label="options.IntegerValue.Should().Be(9)", span="196-196", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_123 [label="options.BooleanValue.Should().BeTrue()", span="197-197", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_120 [label="result.Should().BeTrue()", span="194-194", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_124 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", file="ParserFixture.cs"];
m7_241 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", file="ParserFixture.cs"];
m7_243 [label="var parser = new Parser()", span="383-383", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", color=green, community=0, file="ParserFixture.cs"];
m7_242 [label="var options = new SimpleOptions()", span="382-382", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", file="ParserFixture.cs"];
m7_244 [label="var result = parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="384-384", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", file="ParserFixture.cs"];
m7_246 [label="options.IntegerValue.Should().Be(-4096)", span="387-387", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", file="ParserFixture.cs"];
m7_245 [label="result.Should().BeTrue()", span="386-386", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", file="ParserFixture.cs"];
m7_247 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", file="ParserFixture.cs"];
m7_325 [label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_327 [label="var parser = new Parser()", span="511-511", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", color=green, community=0, file="ParserFixture.cs"];
m7_326 [label="var options = new NumberSetOptions()", span="510-510", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_328 [label="var result = parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="512-512", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_329 [label="result.Should().BeFalse()", span="514-514", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_330 [label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508", cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", file="ParserFixture.cs"];
m7_317 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="ParserFixture.cs"];
m7_339 [label="Entry CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", span="37-37", cluster="CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", file="ParserFixture.cs"];
m7_136 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="ParserFixture.cs"];
m7_166 [label="Entry CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257", cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", file="ParserFixture.cs"];
m7_167 [label="var parser = new Parser()", span="259-259", cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", color=green, community=0, file="ParserFixture.cs"];
m7_168 [label="var options = new MixedCaseOptions()", span="260-260", cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", file="ParserFixture.cs"];
m7_169 [label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="261-261", cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", file="ParserFixture.cs"];
m7_170 [label="result.Should().BeFalse()", span="263-263", cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", file="ParserFixture.cs"];
m7_171 [label="Exit CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257", cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", file="ParserFixture.cs"];
m7_51 [label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_53 [label="var parser = new Parser()", span="102-102", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", color=green, community=0, file="ParserFixture.cs"];
m7_52 [label="var options = new BooleanSetOptions()", span="101-101", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_54 [label="var result = parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="103-103", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_56 [label="options.BooleanTwo.Should().BeTrue()", span="106-106", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_57 [label="options.BooleanOne.Should().BeFalse()", span="107-107", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_58 [label="options.BooleanThree.Should().BeFalse()", span="108-108", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_59 [label="options.NonBooleanValue.Should().Be(9D)", span="109-109", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_60 [label="Console.WriteLine(options)", span="110-110", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_55 [label="result.Should().BeTrue()", span="105-105", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_61 [label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99", cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", file="ParserFixture.cs"];
m7_0 [label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43", cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", file="ParserFixture.cs"];
m7_1 [label="Assert.Throws<ArgumentNullException>(\r\n                () => new Parser().ParseArguments(null, new SimpleOptions()))", span="45-46", cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", color=green, community=0, file="ParserFixture.cs"];
m7_2 [label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43", cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", file="ParserFixture.cs"];
m7_341 [label=options, span="", file="ParserFixture.cs"];
m9_16 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ParserSettingsFixture.cs"];
m9_27 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44", cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettingsFixture.cs"];
m9_15 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="ParserSettingsFixture.cs"];
m9_8 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="ParserSettingsFixture.cs"];
m9_12 [label="Entry CommandLine.IParser.ParseArguments(string[], object)", span="49-49", cluster="CommandLine.IParser.ParseArguments(string[], object)", file="ParserSettingsFixture.cs"];
m9_14 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ParserSettingsFixture.cs"];
m9_0 [label="Entry CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs"];
m9_1 [label="var writer = new StringWriter()", span="42-42", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs"];
m9_2 [label="IParser parser = new Parser(new ParserSettings(writer))", span="43-43", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", color=red, community=0, file="ParserSettingsFixture.cs"];
m9_6 [label="writer.ToString().Should().Be(''MockOptions::GetUsage()'')", span="49-49", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs"];
m9_3 [label="var options = new SimpleOptionsWithHelpOption()", span="44-44", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs"];
m9_4 [label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="46-46", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs"];
m9_5 [label="success.Should().BeFalse()", span="48-48", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs"];
m9_7 [label="Exit CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs"];
m9_10 [label="Entry CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", span="65-65", cluster="CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", file="ParserSettingsFixture.cs"];
m9_17 [label="Entry CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", span="53-53", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_18 [label="var writer = new StringWriter()", span="55-55", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_19 [label="var settings = new ParserSettings()", span="56-56", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_20 [label="settings.HelpWriter = writer", span="57-57", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_25 [label="writer.ToString().Should().Be(''MockOptions::GetUsage()'')", span="64-64", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_21 [label="IParser parser = new Parser(settings)", span="58-58", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", color=red, community=0, file="ParserSettingsFixture.cs"];
m9_22 [label="var options = new SimpleOptionsWithHelpOption()", span="59-59", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_23 [label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="61-61", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_24 [label="success.Should().BeFalse()", span="63-63", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_26 [label="Exit CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", span="53-53", cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs"];
m9_9 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ParserSettingsFixture.cs"];
m9_13 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ParserSettingsFixture.cs"];
m9_11 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="32-32", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="ParserSettingsFixture.cs"];
m10_18 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ReflectionUtilFixture.cs"];
m10_16 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="ReflectionUtilFixture.cs"];
m10_11 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_12 [label="name == null", span="22-22", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_14 [label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .Return(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="24-27", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_13 [label="throw new ArgumentNullException(''name'');", span="22-22", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_15 [label="Exit CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_0 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_1 [label="name == null", span="14-14", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_3 [label="return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="16-16", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_2 [label="throw new ArgumentNullException(''name'');", span="14-14", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_4 [label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_10 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="ReflectionUtilFixture.cs"];
m10_17 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="ReflectionUtilFixture.cs"];
m10_26 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="ReflectionUtilFixture.cs"];
m10_23 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_8 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="16-16", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_7 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_9 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_21 [label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="25-25", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_20 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_22 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_24 [label="Maybe.Just(spec.Separator)", span="27-27", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_25 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="ReflectionUtilFixture.cs"];
m10_19 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="ReflectionUtilFixture.cs"];
m10_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionUtilFixture.cs"];
m10_6 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ReflectionUtilFixture.cs"];
m10_27 [label=string, span="", file="ReflectionUtilFixture.cs"];
m10_28 [label="System.StringComparer", span="", file="ReflectionUtilFixture.cs"];
m10_29 [label=string, span="", file="ReflectionUtilFixture.cs"];
m10_30 [label="System.StringComparer", span="", file="ReflectionUtilFixture.cs"];
m12_13 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="SingletonFixture.cs"];
m12_12 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="SingletonFixture.cs"];
m12_21 [label="Entry CommandLine.Tests.Unit.SingletonFixture.Default_parsing_culture_is_invariant()", span="66-66", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_parsing_culture_is_invariant()", file="SingletonFixture.cs"];
m12_22 [label="Parser.Default.Settings.ParsingCulture.Should().Be(CultureInfo.InvariantCulture)", span="68-68", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_parsing_culture_is_invariant()", color=green, community=0, file="SingletonFixture.cs"];
m12_23 [label="Exit CommandLine.Tests.Unit.SingletonFixture.Default_parsing_culture_is_invariant()", span="66-66", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_parsing_culture_is_invariant()", file="SingletonFixture.cs"];
m12_14 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="SingletonFixture.cs"];
m12_10 [label="Entry CommandLine.IParser.ParseArguments(string[], object)", span="49-49", cluster="CommandLine.IParser.ParseArguments(string[], object)", file="SingletonFixture.cs"];
m12_20 [label="Entry CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="33-33", cluster="CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="SingletonFixture.cs"];
m12_15 [label="Entry CommandLine.Tests.Unit.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="56-56", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs"];
m12_16 [label="var options = new OptionsWithMultipleSet()", span="58-58", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs"];
m12_17 [label="bool result = Parser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="59-60", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", color=green, community=0, file="SingletonFixture.cs"];
m12_18 [label="result.Should().BeTrue()", span="62-62", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs"];
m12_19 [label="Exit CommandLine.Tests.Unit.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", span="56-56", cluster="CommandLine.Tests.Unit.SingletonFixture.Default_doesnt_support_mutually_exclusive_options()", file="SingletonFixture.cs"];
m12_9 [label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33", cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", file="SingletonFixture.cs"];
m12_0 [label="Entry CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", span="42-42", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_1 [label="var options = new SimpleOptions()", span="44-44", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_2 [label="bool result = Parser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="45-46", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", color=green, community=0, file="SingletonFixture.cs"];
m12_4 [label="options.StringValue.Should().Be(''another string'')", span="49-49", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_5 [label="options.IntegerValue.Should().Be(100)", span="50-50", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_6 [label="options.BooleanValue.Should().BeTrue()", span="51-51", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_7 [label="Console.WriteLine(options)", span="52-52", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_3 [label="result.Should().BeTrue()", span="48-48", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_8 [label="Exit CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", span="42-42", cluster="CommandLine.Tests.Unit.SingletonFixture.Parse_string_integer_bool_options()", file="SingletonFixture.cs"];
m12_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="SingletonFixture.cs"];
m15_38 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="UnknownArgumentsFixture.cs"];
m15_10 [label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="UnknownArgumentsFixture.cs"];
m15_11 [label=guardsLookup, span="40-40", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="UnknownArgumentsFixture.cs"];
m15_12 [label="specifications.Any(spec => guard.Item1(spec))", span="42-42", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="UnknownArgumentsFixture.cs"];
m15_14 [label="return specifications;", span="48-48", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="UnknownArgumentsFixture.cs"];
m15_13 [label="throw new ApplicationException(guard.Item2);", span="44-44", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="UnknownArgumentsFixture.cs"];
m15_15 [label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38", cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="UnknownArgumentsFixture.cs"];
m15_37 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="UnknownArgumentsFixture.cs"];
m15_36 [label="Entry System.Type.ToDescriptorKind()", span="22-22", cluster="System.Type.ToDescriptorKind()", file="UnknownArgumentsFixture.cs"];
m15_0 [label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_1 [label="return specification.Tag == SpecificationType.Option;", span="13-13", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_2 [label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_3 [label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_4 [label="return specification.Tag == SpecificationType.Value;", span="18-18", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_5 [label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="16-16", cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_18 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="UnknownArgumentsFixture.cs"];
m15_19 [label="guard.Item1(spec)", span="42-42", cluster="lambda expression", file="UnknownArgumentsFixture.cs"];
m15_20 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="UnknownArgumentsFixture.cs"];
m15_22 [label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_23 [label="specification == null", span="53-53", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_25 [label="specification.ConversionType.ToDescriptorKind()", span="55-55", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_29 [label="var min = specification.Min", span="60-60", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_30 [label="var max = specification.Max", span="61-61", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_24 [label="throw new ArgumentNullException(''specification'');", span="53-53", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_26 [label="TypeDescriptorKind.Scalar", span="57-57", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_28 [label="TypeDescriptorKind.Sequence", span="59-59", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_27 [label="return  Maybe.Just(1);", span="58-58", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_31 [label="min >= 0 && max >= 0", span="62-62", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_32 [label="return Maybe.Just(max);", span="64-64", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_33 [label="return Maybe.Nothing<int>();", span="69-69", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_34 [label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="51-51", cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_21 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="UnknownArgumentsFixture.cs"];
m15_39 [label="Entry CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_40 [label="return specification.Min == -1;", span="74-74", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_41 [label="Exit CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", span="72-72", cluster="CommandLine.Core.SpecificationExtensions.IsMinNotSpecified(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_9 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnknownArgumentsFixture.cs"];
m15_17 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="UnknownArgumentsFixture.cs"];
m15_45 [label="Entry CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82", cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_46 [label="return specification.IsOption()\r\n                ? ((OptionSpecification)specification).SetName\r\n                : string.Empty;", span="84-86", cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_47 [label="Exit CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", span="82-82", cluster="CommandLine.Core.SpecificationExtensions.GetSetName(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_16 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="UnknownArgumentsFixture.cs"];
m15_48 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="UnknownArgumentsFixture.cs"];
m15_35 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnknownArgumentsFixture.cs"];
m15_6 [label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="UnknownArgumentsFixture.cs"];
m15_7 [label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                enumValues);", span="23-35", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="UnknownArgumentsFixture.cs"];
m15_8 [label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", span="21-21", cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string, System.Collections.Generic.IEnumerable<string>)", file="UnknownArgumentsFixture.cs"];
m15_42 [label="Entry CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_43 [label="return specification.Max == -1;", span="79-79", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_44 [label="Exit CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", span="77-77", cluster="CommandLine.Core.SpecificationExtensions.IsMaxNotSpecified(CommandLine.Core.Specification)", file="UnknownArgumentsFixture.cs"];
m15_49 [label=guard, span="", file="UnknownArgumentsFixture.cs"];
m16_53 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", span="100-100", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="ValueListAttributeParsingFixture.cs"];
m16_16 [label="valueSetting = option.SetValue(parts[1], options)", span="71-71", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_19 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="76-76", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_21 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="81-81", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="ValueListAttributeParsingFixture.cs"];
m16_20 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="79-79", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs", color=red, community=0];
m16_22 [label="items.Insert(0, parts[1])", span="82-82", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_24 [label="!valueSetting", span="85-85", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_25 [label="DefineOptionThatViolatesFormat(option)", span="87-87", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_26 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="89-89", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_27 [label="!option.IsArray", span="93-93", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_28 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="95-95", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_29 [label="!valueSetting", span="96-96", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_23 [label="valueSetting = option.SetValue(items, options)", span="84-84", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_30 [label="DefineOptionThatViolatesFormat(option)", span="98-98", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_52 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="ValueListAttributeParsingFixture.cs"];
m16_48 [label="Entry CommandLine.Tests.Fakes.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36", cluster="CommandLine.Tests.Fakes.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs"];
m16_34 [label="valueSetting = option.SetValue(items, options)", span="107-107", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_36 [label="DefineOptionThatViolatesFormat(option)", span="110-110", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", color=green, community=0, file="ValueListAttributeParsingFixture.cs"];
m16_35 [label="!valueSetting", span="108-108", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_37 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="112-112", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_38 [label="parts.Length == 2", span="116-116", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_39 [label="return PresentParserState.Failure;", span="118-118", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_14 [label="parts.Length == 2", span="67-67", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_33 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="105-105", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_32 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="103-103", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs", color=red, community=0];
m16_13 [label="return PresentParserState.Failure;", span="65-65", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_54 [label="var options = new OptionsWithValueListMaximumZero()", span="102-102", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="ValueListAttributeParsingFixture.cs"];
m16_50 [label="Entry CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", span="53-53", cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", file="ValueListAttributeParsingFixture.cs"];
m16_51 [label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="116-116", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", file="ValueListAttributeParsingFixture.cs"];
m16_55 [label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="106-106", cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, file="ValueListAttributeParsingFixture.cs"];
m16_56 [label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="121-121", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", file="ValueListAttributeParsingFixture.cs"];
m16_57 [label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="162-162", cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="ValueListAttributeParsingFixture.cs"];
m16_58 [label="CommandLine.Internal.LongOptionParser", span="", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="ValueListAttributeParsingFixture.cs"];
m16_31 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="100-100", cluster="CommandLine.Internal.LongOptionParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="ValueListAttributeParsingFixture.cs"];
m16_3 [label="var result = parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="45-46", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_4 [label="result.Should().BeTrue()", span="48-48", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_5 [label="options.Items[0].Should().Be(''file1.ext'')", span="50-50", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_12 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs"];
m16_40 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", span="87-87", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs"];
m16_6 [label="options.Items[1].Should().Be(''file2.ext'')", span="51-51", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_7 [label="options.Items[2].Should().Be(''file3.ext'')", span="52-52", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_9 [label="options.BooleanValue.Should().BeTrue()", span="54-54", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_10 [label="Console.WriteLine(options)", span="55-55", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_11 [label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_15 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ValueListAttributeParsingFixture.cs"];
m16_18 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs"];
m16_42 [label="var parser = new Parser()", span="90-90", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs", color=green, community=0];
m16_8 [label="options.StringValue.Should().Be(''out.ext'')", span="53-53", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_17 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ValueListAttributeParsingFixture.cs"];
m16_41 [label="var options = new OptionsWithValueListMaximumZero()", span="89-89", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs"];
m16_43 [label="var result = parser.ParseArguments(new string[] { }, options)", span="91-91", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs"];
m16_44 [label="result.Should().BeTrue()", span="93-93", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs"];
m16_49 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="ValueListAttributeParsingFixture.cs"];
m16_46 [label="Console.WriteLine(options)", span="96-96", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs"];
m16_47 [label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", span="87-87", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs"];
m16_45 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="ValueListAttributeParsingFixture.cs"];
m16_0 [label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_1 [label="var options = new SimpleOptionsWithValueList()", span="43-43", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs"];
m16_2 [label="var parser = new Parser()", span="44-44", cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", color=green, community=0];
m17_11 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ValueOptionAttributeFixture.cs"];
m17_10 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ValueOptionAttributeFixture.cs"];
m17_13 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ValueOptionAttributeFixture.cs"];
m17_14 [label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="ValueOptionAttributeFixture.cs"];
m17_15 [label="var expected = new [] { Token.Name(''x'') }", span="30-30", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="ValueOptionAttributeFixture.cs"];
m17_16 [label="var result = Switch.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="32-41", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="ValueOptionAttributeFixture.cs"];
m17_17 [label="expected.ShouldAllBeEquivalentTo(result)", span="43-43", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="ValueOptionAttributeFixture.cs"];
m17_18 [label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="ValueOptionAttributeFixture.cs"];
m17_6 [label="Entry Unk.ShouldAllBeEquivalentTo", span="", cluster="Unk.ShouldAllBeEquivalentTo", file="ValueOptionAttributeFixture.cs"];
m17_21 [label="Entry lambda expression", span="38-41", cluster="lambda expression", file="ValueOptionAttributeFixture.cs"];
m17_7 [label="Entry lambda expression", span="19-22", cluster="lambda expression", file="ValueOptionAttributeFixture.cs"];
m17_8 [label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="20-22", cluster="lambda expression", file="ValueOptionAttributeFixture.cs"];
m17_9 [label="Exit lambda expression", span="19-22", cluster="lambda expression", file="ValueOptionAttributeFixture.cs"];
m17_22 [label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="39-41", cluster="lambda expression", file="ValueOptionAttributeFixture.cs"];
m17_23 [label="Exit lambda expression", span="38-41", cluster="lambda expression", file="ValueOptionAttributeFixture.cs"];
m17_12 [label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", span="36-36", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TypeDescriptorKind, CommandLine.Infrastructure.Maybe<int>)", file="ValueOptionAttributeFixture.cs"];
m17_19 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="ValueOptionAttributeFixture.cs"];
m17_5 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ValueOptionAttributeFixture.cs"];
m17_20 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="ValueOptionAttributeFixture.cs"];
m17_0 [label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="ValueOptionAttributeFixture.cs"];
m17_1 [label="var expected = new Token[] { }", span="15-15", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="ValueOptionAttributeFixture.cs"];
m17_2 [label="var result = Switch.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TypeDescriptorKind.Boolean, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="17-22", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="ValueOptionAttributeFixture.cs"];
m17_3 [label="expected.ShouldAllBeEquivalentTo(result)", span="24-24", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", color=red, community=0, file="ValueOptionAttributeFixture.cs"];
m17_4 [label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="ValueOptionAttributeFixture.cs"];
m18_15 [label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="62-62", cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="ValueOptionAttributeParsingFixture.cs"];
m18_35 [label="options.NullableInteger.Should().Be(-1234)", span="59-59", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs"];
m18_23 [label="options.StringItem.Should().BeNull()", span="43-43", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", file="ValueOptionAttributeParsingFixture.cs"];
m18_16 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="ValueOptionAttributeParsingFixture.cs"];
m18_17 [label="Entry CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", span="33-33", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_attribute_values_are_not_mandatory()", file="ValueOptionAttributeParsingFixture.cs"];
m18_39 [label="options.Items[2].Should().Be(''forvaluelist3'')", span="63-63", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs"];
m18_40 [label="Exit CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", span="49-49", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs"];
m18_41 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", span="35-35", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", file="ValueOptionAttributeParsingFixture.cs"];
m18_36 [label="options.UnsignedIntegerItem.Should().Be(4321U)", span="60-60", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs"];
m18_37 [label="options.Items[0].Should().Be(''forvaluelist1'')", span="61-61", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs"];
m18_38 [label="options.Items[1].Should().Be(''forvaluelist2'')", span="62-62", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_takes_precedence_on_value_list_regardless_declaration_order()", file="ValueOptionAttributeParsingFixture.cs"];
m18_7 [label="options.IntegerItem.Should().Be(1000)", span="27-27", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Value_option_attribute_isolates_non_option_values()", file="ValueOptionAttributeParsingFixture.cs"];
m18_0 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="26-26", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_2 [label="throw new ArgumentException(''programName'');", span="28-28", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs"];
m18_1 [label="string.IsNullOrWhiteSpace(''programName'')", span="28-28", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_3 [label="this.programName = programName", span="30-30", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_5 [label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="26-26", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_6 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_8 [label="Entry lambda expression", span="47-47", cluster="lambda expression", file="ValueOptionAttributeParsingFixture.cs"];
m18_9 [label="Path.GetFileNameWithoutExtension(titleAttribute.Title)", span="47-47", cluster="lambda expression", file="ValueOptionAttributeParsingFixture.cs"];
m18_4 [label="this.version = version", span="31-31", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_10 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="ValueOptionAttributeParsingFixture.cs"];
m18_11 [label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", span="35-35", cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", file="ValueOptionAttributeParsingFixture.cs"];
m18_19 [label="var isVersionNull = string.IsNullOrEmpty(version)", span="73-73", cluster="CommandLine.Text.HeadingInfo.ToString()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs"];
m18_18 [label="Entry CommandLine.Text.HeadingInfo.ToString()", span="71-71", cluster="CommandLine.Text.HeadingInfo.ToString()", file="ValueOptionAttributeParsingFixture.cs"];
m18_20 [label="return new StringBuilder(programName.Length +\r\n                    (!isVersionNull ? version.Length + 1 : 0))\r\n                .Append(programName)\r\n                .AppendWhen(!isVersionNull, '' '', version)\r\n                .ToString();", span="74-78", cluster="CommandLine.Text.HeadingInfo.ToString()", file="ValueOptionAttributeParsingFixture.cs"];
m18_22 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_24 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_25 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="ValueOptionAttributeParsingFixture.cs"];
m18_21 [label="Exit CommandLine.Text.HeadingInfo.ToString()", span="71-71", cluster="CommandLine.Text.HeadingInfo.ToString()", file="ValueOptionAttributeParsingFixture.cs"];
m18_26 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="ValueOptionAttributeParsingFixture.cs"];
m18_13 [label="versionAttribute.InformationalVersion", span="51-51", cluster="lambda expression", file="ValueOptionAttributeParsingFixture.cs"];
m18_48 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="ValueOptionAttributeParsingFixture.cs"];
m18_27 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="89-89", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueOptionAttributeParsingFixture.cs"];
m18_12 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="ValueOptionAttributeParsingFixture.cs"];
m18_14 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="ValueOptionAttributeParsingFixture.cs"];
m18_29 [label="throw new ArgumentException(''message'');", span="91-91", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueOptionAttributeParsingFixture.cs"];
m18_31 [label="throw new ArgumentNullException(''writer'');", span="92-92", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs"];
m18_30 [label="writer == null", span="92-92", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueOptionAttributeParsingFixture.cs"];
m18_32 [label="writer.WriteLine(\r\n                new StringBuilder(programName.Length + message.Length + 2)\r\n                    .Append(programName)\r\n                    .Append('': '')\r\n                    .Append(message)\r\n                    .ToString())", span="94-99", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueOptionAttributeParsingFixture.cs"];
m18_34 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueOptionAttributeParsingFixture.cs"];
m18_33 [label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="89-89", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueOptionAttributeParsingFixture.cs"];
m18_42 [label="CommandLine.Text.HeadingInfo", span="", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs"];
m18_44 [label="var parser = new Parser()", span="70-70", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs"];
m18_43 [label="var options = new SimpleOptionsWithValueOptionAndValueList()", span="69-69", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs"];
m18_45 [label="var result = parser.ParseArguments(\r\n                new string[] { ''4321'', ''ofvalueoption'', ''-1234'', ''forvaluelist1'', ''forvaluelist2'', ''forvaluelist3'' }, options)", span="71-72", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs"];
m18_46 [label="result.Should().BeFalse()", span="74-74", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs"];
m18_47 [label="Exit CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", span="67-67", cluster="CommandLine.Tests.Unit.ValueOptionAttributeParsingFixture.Between_value_options_order_matters()", file="ValueOptionAttributeParsingFixture.cs"];
m18_28 [label="string.IsNullOrWhiteSpace(''message'')", span="91-91", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="ValueOptionAttributeParsingFixture.cs"];
m19_20 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="VerbsFixture.cs"];
m19_64 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="80-80", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="VerbsFixture.cs"];
m19_15 [label="Entry CommandLine.Tests.Fakes.OptionsWithVerbs.OptionsWithVerbs()", span="79-79", cluster="CommandLine.Tests.Fakes.OptionsWithVerbs.OptionsWithVerbs()", file="VerbsFixture.cs"];
m19_22 [label="Entry Unk.>", span="", cluster="Unk.>", file="VerbsFixture.cs"];
m19_95 [label="Entry CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", span="201-201", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_96 [label="string invokedVerb = null", span="203-203", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_97 [label="object invokedVerbInstance = null", span="204-204", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_98 [label="var options = new OptionsWithVerbsNoHelp2()", span="206-206", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_99 [label="var parser = new Parser()", span="208-208", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", color=red, community=0, file="VerbsFixture.cs"];
m19_100 [label="var result = parser.ParseArguments(new[] {''with'', ''--must''}, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="209-214", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_101 [label="result.Should().BeFalse()", span="216-216", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_102 [label="invokedVerb.Should().Be(''with'')", span="218-218", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_103 [label="invokedVerbInstance.Should().BeNull()", span="219-219", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_104 [label="Exit CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", span="201-201", cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs"];
m19_63 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="VerbsFixture.cs"];
m19_65 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="VerbsFixture.cs"];
m19_18 [label="Entry CommandLine.Parser.Parser()", span="55-55", cluster="CommandLine.Parser.Parser()", file="VerbsFixture.cs"];
m19_29 [label="Entry CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", span="70-70", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_30 [label="string invokedVerb = null", span="72-72", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_31 [label="object invokedVerbInstance = null", span="73-73", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_32 [label="var proof = new Random().Next(int.MaxValue)", span="75-75", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_33 [label="var options = new OptionsWithVerbs()", span="76-76", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_35 [label="options.CommitVerb.CreationProof = proof", span="78-78", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_41 [label="options.CommitVerb.CreationProof.Should().Be(proof)", span="94-94", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_34 [label="options.CommitVerb.Should().NotBeNull()", span="77-77", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_37 [label="var result = parser.ParseArguments(new string[] { ''commit'', ''--amend'' }, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="81-86", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_42 [label="options.CommitVerb.Amend.Should().BeTrue()", span="95-95", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_36 [label="var parser = new Parser()", span="80-80", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", color=red, community=0, file="VerbsFixture.cs"];
m19_38 [label="result.Should().BeTrue()", span="88-88", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_39 [label="invokedVerb.Should().Be(''commit'')", span="90-90", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_40 [label="invokedVerbInstance.Should().BeOfType<CommitSubOptions>()", span="91-91", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_43 [label="Exit CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", span="70-70", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs"];
m19_106 [label="Entry lambda expression", span="210-214", cluster="lambda expression", file="VerbsFixture.cs"];
m19_25 [label="Entry lambda expression", span="51-55", cluster="lambda expression", file="VerbsFixture.cs"];
m19_26 [label="invokedVerb = verb", span="53-53", cluster="lambda expression", file="VerbsFixture.cs"];
m19_27 [label="invokedVerbInstance = subOptions", span="54-54", cluster="lambda expression", file="VerbsFixture.cs"];
m19_28 [label="Exit lambda expression", span="51-55", cluster="lambda expression", file="VerbsFixture.cs"];
m19_46 [label="Entry lambda expression", span="82-86", cluster="lambda expression", file="VerbsFixture.cs"];
m19_47 [label="invokedVerb = verb", span="84-84", cluster="lambda expression", file="VerbsFixture.cs"];
m19_48 [label="invokedVerbInstance = subOptions", span="85-85", cluster="lambda expression", file="VerbsFixture.cs"];
m19_49 [label="Exit lambda expression", span="82-86", cluster="lambda expression", file="VerbsFixture.cs"];
m19_69 [label="with.HelpWriter = testWriter", span="107-107", cluster="lambda expression", color=red, community=0, file="VerbsFixture.cs"];
m19_71 [label="Entry lambda expression", span="109-113", cluster="lambda expression", file="VerbsFixture.cs"];
m19_68 [label="Entry lambda expression", span="107-107", cluster="lambda expression", file="VerbsFixture.cs"];
m19_70 [label="Exit lambda expression", span="107-107", cluster="lambda expression", file="VerbsFixture.cs"];
m19_72 [label="invokedVerb = verb", span="111-111", cluster="lambda expression", file="VerbsFixture.cs"];
m19_73 [label="invokedVerbInstance = subOptions", span="112-112", cluster="lambda expression", file="VerbsFixture.cs"];
m19_74 [label="Exit lambda expression", span="109-113", cluster="lambda expression", file="VerbsFixture.cs"];
m19_89 [label="with.HelpWriter = testWriter", span="133-133", cluster="lambda expression", color=red, community=0, file="VerbsFixture.cs"];
m19_91 [label="Entry lambda expression", span="135-139", cluster="lambda expression", file="VerbsFixture.cs"];
m19_88 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="VerbsFixture.cs"];
m19_90 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="VerbsFixture.cs"];
m19_92 [label="invokedVerb = verb", span="137-137", cluster="lambda expression", file="VerbsFixture.cs"];
m19_93 [label="invokedVerbInstance = subOptions", span="138-138", cluster="lambda expression", file="VerbsFixture.cs"];
m19_94 [label="Exit lambda expression", span="135-139", cluster="lambda expression", file="VerbsFixture.cs"];
m19_107 [label="invokedVerb = verb", span="212-212", cluster="lambda expression", file="VerbsFixture.cs"];
m19_108 [label="invokedVerbInstance = subOptions", span="213-213", cluster="lambda expression", file="VerbsFixture.cs"];
m19_109 [label="Exit lambda expression", span="210-214", cluster="lambda expression", file="VerbsFixture.cs"];
m19_44 [label="Entry System.Random.Random()", span="0-0", cluster="System.Random.Random()", file="VerbsFixture.cs"];
m19_45 [label="Entry System.Random.Next(int)", span="0-0", cluster="System.Random.Next(int)", file="VerbsFixture.cs"];
m19_16 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="VerbsFixture.cs"];
m19_50 [label="Entry CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", span="99-99", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_51 [label="string invokedVerb = null", span="101-101", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_52 [label="object invokedVerbInstance = null", span="102-102", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_53 [label="var options = new OptionsWithVerbs()", span="104-104", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_54 [label="var testWriter = new StringWriter()", span="105-105", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_56 [label="var result = parser.ParseArguments(new string[] {}, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="108-113", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_55 [label="var parser = new Parser(with => with.HelpWriter = testWriter)", span="107-107", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", color=red, community=0, file="VerbsFixture.cs"];
m19_60 [label="var helpText = testWriter.ToString()", span="120-120", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_57 [label="result.Should().BeFalse()", span="115-115", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_58 [label="invokedVerb.Should().BeEmpty()", span="117-117", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_59 [label="invokedVerbInstance.Should().BeNull()", span="118-118", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_61 [label="helpText.Should().Be(''verbs help index'')", span="121-121", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_62 [label="Exit CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", span="99-99", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs"];
m19_21 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="VerbsFixture.cs"];
m19_67 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="VerbsFixture.cs"];
m19_0 [label="Entry CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", span="41-41", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_1 [label="string invokedVerb = null", span="43-43", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_2 [label="object invokedVerbInstance = null", span="44-44", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_3 [label="var options = new OptionsWithVerbs()", span="46-46", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_4 [label="options.AddVerb.Should().BeNull()", span="47-47", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_6 [label="var result = parser.ParseArguments(new string[] {''add'', ''-p'', ''untracked.bin''} , options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="50-55", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_10 [label="options.AddVerb.Should().NotBeNull()", span="63-63", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_11 [label="options.AddVerb.CreationProof.Should().NotHaveValue()", span="64-64", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_12 [label="options.AddVerb.Patch.Should().BeTrue()", span="65-65", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_13 [label="options.AddVerb.FileName[0].Should().Be(''untracked.bin'')", span="66-66", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_5 [label="var parser = new Parser()", span="49-49", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", color=red, community=0, file="VerbsFixture.cs"];
m19_7 [label="result.Should().BeTrue()", span="57-57", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_8 [label="invokedVerb.Should().Be(''add'')", span="59-59", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_9 [label="invokedVerbInstance.Should().BeOfType<AddSubOptions>()", span="60-60", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_14 [label="Exit CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", span="41-41", cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs"];
m19_19 [label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="155-155", cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="VerbsFixture.cs"];
m19_66 [label="Entry Unk.BeEmpty", span="", cluster="Unk.BeEmpty", file="VerbsFixture.cs"];
m19_24 [label="Entry Unk.NotHaveValue", span="", cluster="Unk.NotHaveValue", file="VerbsFixture.cs"];
m19_105 [label="Entry CommandLine.Tests.Fakes.OptionsWithVerbsNoHelp2.OptionsWithVerbsNoHelp2()", span="129-129", cluster="CommandLine.Tests.Fakes.OptionsWithVerbsNoHelp2.OptionsWithVerbsNoHelp2()", file="VerbsFixture.cs"];
m19_75 [label="Entry CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="125-125", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_76 [label="string invokedVerb = null", span="127-127", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_77 [label="object invokedVerbInstance = null", span="128-128", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_78 [label="var options = new OptionsWithVerbs()", span="130-130", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_79 [label="var testWriter = new StringWriter()", span="131-131", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_81 [label="var result = parser.ParseArguments(new string[] {''clone'', ''--no_hardlinks''}, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="134-139", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_80 [label="var parser = new Parser(with => with.HelpWriter = testWriter)", span="133-133", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=red, community=0, file="VerbsFixture.cs"];
m19_85 [label="var helpText = testWriter.ToString()", span="146-146", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_82 [label="result.Should().BeFalse()", span="141-141", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_83 [label="invokedVerb.Should().Be(''clone'')", span="143-143", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_84 [label="invokedVerbInstance.Should().BeNull()", span="144-144", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_86 [label="helpText.Should().Be(''help for: clone'')", span="147-147", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_87 [label="Exit CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="125-125", cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs"];
m19_17 [label="Entry Unk.BeNull", span="", cluster="Unk.BeNull", file="VerbsFixture.cs"];
m19_23 [label="Entry Unk.NotBeNull", span="", cluster="Unk.NotBeNull", file="VerbsFixture.cs"];
m19_110 [label=testWriter, span="", file="VerbsFixture.cs"];
m19_111 [label=testWriter, span="", file="VerbsFixture.cs"];
m20_0 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="VerbsHelpTextFixture.cs"];
m20_3 [label="sut.ParseArguments<FakeOptionWithRequired>(new string[] { })", span="22-22", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="VerbsHelpTextFixture.cs"];
m20_2 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="19-19", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="VerbsHelpTextFixture.cs"];
m20_4 [label="var text = writer.ToString()", span="25-25", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="VerbsHelpTextFixture.cs"];
m20_1 [label="var writer = new StringWriter()", span="18-18", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="VerbsHelpTextFixture.cs"];
m20_5 [label="Assert.True(text.Length > 0)", span="26-26", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="VerbsHelpTextFixture.cs"];
m20_6 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="15-15", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", file="VerbsHelpTextFixture.cs"];
m20_100 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_102 [label="var sut = new Parser()", span="188-188", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_103 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="191-191", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_101 [label="var expectedError = new HelpRequestedError()", span="187-187", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_104 [label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="194-194", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_105 [label="((NotParsed<FakeImmutableOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="195-195", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_106 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="184-184", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_162 [label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_170 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="265-265", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_171 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="266-266", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_172 [label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="267-267", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_173 [label="lines[4].ShouldBeEquivalentTo(''add       Add file contents to the index.'')", span="268-268", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_174 [label="lines[5].ShouldBeEquivalentTo(''commit    Record changes to the repository.'')", span="269-269", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_175 [label="lines[6].ShouldBeEquivalentTo(''clone     Clone a repository into a new directory.'')", span="270-270", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_176 [label="lines[7].ShouldBeEquivalentTo(''help      Display more information on a specific command.'')", span="271-271", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_168 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="263-263", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_169 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="264-264", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_165 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string [] { })", span="258-258", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_166 [label="var result = help.ToString()", span="259-259", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_167 [label="result.Length.Should().BeGreaterThan(0)", span="262-262", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_164 [label="var sut = new Parser(config => config.HelpWriter = help)", span="255-255", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_163 [label="var help = new StringWriter()", span="254-254", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_177 [label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="251-251", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="VerbsHelpTextFixture.cs"];
m20_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="VerbsHelpTextFixture.cs"];
m20_79 [label="Entry CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", span="33-33", cluster="CommandLine.Tests.Fakes.CloneOptions.CloneOptions()", file="VerbsHelpTextFixture.cs"];
m20_118 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="VerbsHelpTextFixture.cs"];
m20_121 [label="sut.ParseArguments<FakeImmutableOptions>(new[] { ''--help'' })", span="207-207", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="VerbsHelpTextFixture.cs"];
m20_120 [label="var sut = new Parser(config => config.HelpWriter = help)", span="204-204", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="VerbsHelpTextFixture.cs"];
m20_122 [label="var result = help.ToString()", span="208-208", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="VerbsHelpTextFixture.cs"];
m20_119 [label="var help = new StringWriter()", span="203-203", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="VerbsHelpTextFixture.cs"];
m20_123 [label="result.Length.Should().BeGreaterThan(0)", span="211-211", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="VerbsHelpTextFixture.cs"];
m20_124 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="200-200", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="VerbsHelpTextFixture.cs"];
m20_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="VerbsHelpTextFixture.cs"];
m20_46 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="VerbsHelpTextFixture.cs"];
m20_49 [label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="94-95", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="VerbsHelpTextFixture.cs"];
m20_50 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="98-98", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="VerbsHelpTextFixture.cs"];
m20_48 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="91-91", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="VerbsHelpTextFixture.cs"];
m20_47 [label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="84-90", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="VerbsHelpTextFixture.cs"];
m20_51 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="81-81", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="VerbsHelpTextFixture.cs"];
m20_110 [label="Entry Unk.ContainSingle", span="", cluster="Unk.ContainSingle", file="VerbsHelpTextFixture.cs"];
m20_64 [label="Entry Unk.>", span="", cluster="Unk.>", file="VerbsHelpTextFixture.cs"];
m20_22 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="VerbsHelpTextFixture.cs"];
m20_33 [label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46", cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="VerbsHelpTextFixture.cs"];
m20_83 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_85 [label="var sut = new Parser()", span="155-155", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_84 [label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="150-154", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_86 [label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="158-159", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_88 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="163-163", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_87 [label="Assert.IsType<CloneOptions>(result.Value)", span="162-162", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_89 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="147-147", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_154 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="VerbsHelpTextFixture.cs"];
m20_56 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_61 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_57 [label="var expectedOptions = new AddOptions\r\n                {\r\n                    Patch = true,\r\n                    FileName = ''--strange-fn''\r\n                }", span="106-110", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_59 [label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_60 [label="Assert.IsType<AddOptions>(result.Value)", span="119-119", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_58 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="111-111", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_62 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_7 [label="Entry System.IO.StringWriter.StringWriter()", span="0-0", cluster="System.IO.StringWriter.StringWriter()", file="VerbsHelpTextFixture.cs"];
m20_125 [label="Entry Unk.BeGreaterThan", span="", cluster="Unk.BeGreaterThan", file="VerbsHelpTextFixture.cs"];
m20_129 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_131 [label="var sut = new Parser()", span="220-220", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_132 [label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="223-223", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_130 [label="var expectedError = new VersionRequestedError()", span="219-219", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_133 [label="((NotParsed<FakeOptions>)result).Errors.Should().HaveCount(x => x == 1)", span="226-226", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_134 [label="((NotParsed<FakeOptions>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="227-227", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_135 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="216-216", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="VerbsHelpTextFixture.cs"];
m20_71 [label="Entry Unk.RespectingRuntimeTypes", span="", cluster="Unk.RespectingRuntimeTypes", file="VerbsHelpTextFixture.cs"];
m20_136 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="VerbsHelpTextFixture.cs"];
m20_44 [label="Entry CommandLine.Parser.Parser()", span="25-25", cluster="CommandLine.Parser.Parser()", file="VerbsHelpTextFixture.cs"];
m20_181 [label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="276-276", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_189 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="290-290", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_190 [label="lines[2].ShouldBeEquivalentTo(''add       Add file contents to the index.'')", span="291-291", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_191 [label="lines[3].ShouldBeEquivalentTo(''commit    Record changes to the repository.'')", span="292-292", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_192 [label="lines[4].ShouldBeEquivalentTo(''clone     Clone a repository into a new directory.'')", span="293-293", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_193 [label="lines[5].ShouldBeEquivalentTo(''help      Display more information on a specific command.'')", span="294-294", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_187 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="288-288", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_188 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="289-289", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_184 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new [] { ''--help'' })", span="283-283", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_185 [label="var result = help.ToString()", span="284-284", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_186 [label="result.Length.Should().BeGreaterThan(0)", span="287-287", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_183 [label="var sut = new Parser(config => config.HelpWriter = help)", span="280-280", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_182 [label="var help = new StringWriter()", span="279-279", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_194 [label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="276-276", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_208 [label="Entry lambda expression", span="305-305", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_115 [label="e.Equals(expectedError)", span="195-195", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_141 [label="e.Equals(expectedError)", span="227-227", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_68 [label="Entry lambda expression", span="120-120", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_80 [label="Entry lambda expression", span="142-142", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_90 [label="Entry lambda expression", span="163-163", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_13 [label="with.HelpWriter = writer", span="19-19", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_54 [label="with.EnableDashDash = true", span="91-91", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_111 [label="Entry lambda expression", span="194-194", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_114 [label="Entry lambda expression", span="195-195", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_127 [label="config.HelpWriter = help", span="204-204", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_137 [label="Entry lambda expression", span="226-226", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_140 [label="Entry lambda expression", span="227-227", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_157 [label="config.HelpWriter = help", span="236-236", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_116 [label="Exit lambda expression", span="195-195", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_142 [label="Exit lambda expression", span="227-227", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_70 [label="Exit lambda expression", span="120-120", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_69 [label="o.RespectingRuntimeTypes()", span="120-120", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_82 [label="Exit lambda expression", span="142-142", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_81 [label="o.RespectingRuntimeTypes()", span="142-142", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_92 [label="Exit lambda expression", span="163-163", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_91 [label="o.RespectingRuntimeTypes()", span="163-163", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_53 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_55 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_113 [label="Exit lambda expression", span="194-194", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_112 [label="x == 1", span="194-194", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_126 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_128 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_139 [label="Exit lambda expression", span="226-226", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_138 [label="x == 1", span="226-226", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_156 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_158 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_66 [label="with.EnableDashDash = true", span="111-111", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_24 [label="with.HelpWriter = writer", span="35-35", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_35 [label="with.HelpWriter = writer", span="51-51", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_179 [label="config.HelpWriter = help", span="255-255", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_196 [label="config.HelpWriter = help", span="280-280", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_209 [label="config.HelpWriter = help", span="305-305", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_159 [label="Entry lambda expression", span="245-245", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_211 [label="Entry lambda expression", span="314-314", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_65 [label="Entry lambda expression", span="111-111", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_67 [label="Exit lambda expression", span="111-111", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_23 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_25 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_34 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_36 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_178 [label="Entry lambda expression", span="255-255", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_180 [label="Exit lambda expression", span="255-255", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_195 [label="Entry lambda expression", span="280-280", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_197 [label="Exit lambda expression", span="280-280", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_210 [label="Exit lambda expression", span="305-305", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_161 [label="Exit lambda expression", span="245-245", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_160 [label="x == 1", span="245-245", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_212 [label="x == 1", span="314-314", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_213 [label="Exit lambda expression", span="314-314", cluster="lambda expression", file="VerbsHelpTextFixture.cs"];
m20_26 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_29 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="54-54", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_28 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="51-51", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_30 [label="var text = writer.ToString()", span="57-57", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_27 [label="var writer = new StringWriter()", span="50-50", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_31 [label="Assert.True(text.Length > 0)", span="58-58", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_32 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="47-47", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="VerbsHelpTextFixture.cs"];
m20_108 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="VerbsHelpTextFixture.cs"];
m20_117 [label="Entry Unk.Equals", span="", cluster="Unk.Equals", file="VerbsHelpTextFixture.cs"];
m20_10 [label="Entry System.IO.StringWriter.ToString()", span="0-0", cluster="System.IO.StringWriter.ToString()", file="VerbsHelpTextFixture.cs"];
m20_155 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="VerbsHelpTextFixture.cs"];
m20_109 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="VerbsHelpTextFixture.cs"];
m20_99 [label="Entry CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13", cluster="CommandLine.Tests.Fakes.FakeImmutableOptions.FakeImmutableOptions(string, System.Collections.Generic.IEnumerable<int>, bool, long)", file="VerbsHelpTextFixture.cs"];
m20_63 [label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7", cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="VerbsHelpTextFixture.cs"];
m20_37 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="VerbsHelpTextFixture.cs"];
m20_39 [label="var sut = new Parser()", span="70-70", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", color=green, community=0, file="VerbsHelpTextFixture.cs"];
m20_38 [label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="66-69", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="VerbsHelpTextFixture.cs"];
m20_40 [label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="73-73", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="VerbsHelpTextFixture.cs"];
m20_41 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="76-76", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="VerbsHelpTextFixture.cs"];
m20_42 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="63-63", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="VerbsHelpTextFixture.cs"];
m20_143 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_146 [label="sut.ParseArguments<FakeOptions>(new[] { ''--version'' })", span="239-239", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_145 [label="var sut = new Parser(config => config.HelpWriter = help)", span="236-236", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_147 [label="var result = help.ToString()", span="240-240", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_144 [label="var help = new StringWriter()", span="235-235", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_148 [label="result.Length.Should().BeGreaterThan(0)", span="243-243", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_149 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="244-244", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_150 [label="lines.Should().HaveCount(x => x == 1)", span="245-245", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_151 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="246-246", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_152 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="232-232", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="VerbsHelpTextFixture.cs"];
m20_93 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="VerbsHelpTextFixture.cs"];
m20_95 [label="var sut = new Parser()", span="173-173", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="VerbsHelpTextFixture.cs"];
m20_96 [label="var result = sut.ParseArguments<FakeImmutableOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="176-176", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="VerbsHelpTextFixture.cs"];
m20_94 [label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="171-172", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="VerbsHelpTextFixture.cs"];
m20_97 [label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="179-179", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="VerbsHelpTextFixture.cs"];
m20_98 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="168-168", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="VerbsHelpTextFixture.cs"];
m20_15 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_18 [label="sut.ParseArguments(new string[] { }, typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="38-38", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_17 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="35-35", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_19 [label="var text = writer.ToString()", span="41-41", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_16 [label="var writer = new StringWriter()", span="34-34", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_20 [label="Assert.True(text.Length > 0)", span="42-42", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_21 [label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="31-31", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="VerbsHelpTextFixture.cs"];
m20_153 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="VerbsHelpTextFixture.cs"];
m20_9 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="VerbsHelpTextFixture.cs"];
m20_72 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="VerbsHelpTextFixture.cs"];
m20_74 [label="var sut = new Parser()", span="133-133", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="VerbsHelpTextFixture.cs"];
m20_73 [label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="128-132", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="VerbsHelpTextFixture.cs"];
m20_75 [label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="136-138", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="VerbsHelpTextFixture.cs"];
m20_77 [label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="142-142", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="VerbsHelpTextFixture.cs"];
m20_76 [label="Assert.IsType<CloneOptions>(result.Value)", span="141-141", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="VerbsHelpTextFixture.cs"];
m20_78 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="125-125", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="VerbsHelpTextFixture.cs"];
m20_43 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="VerbsHelpTextFixture.cs"];
m20_198 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="301-301", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_201 [label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { command })", span="308-308", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_200 [label="var sut = new Parser(config => config.HelpWriter = help)", span="305-305", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_202 [label="var result = help.ToString()", span="309-309", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_203 [label="result.Length.Should().BeGreaterThan(0)", span="312-312", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_205 [label="lines.Should().HaveCount(x => x == 1)", span="314-314", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_206 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="315-315", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_204 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_199 [label="var help = new StringWriter()", span="304-304", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_207 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="301-301", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="VerbsHelpTextFixture.cs"];
m20_52 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="VerbsHelpTextFixture.cs"];
m20_107 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="VerbsHelpTextFixture.cs"];
m20_45 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="VerbsHelpTextFixture.cs"];
m20_217 [label=expectedError, span="", file="VerbsHelpTextFixture.cs"];
m20_219 [label=expectedError, span="", file="VerbsHelpTextFixture.cs"];
m20_214 [label=writer, span="", file="VerbsHelpTextFixture.cs"];
m20_218 [label=help, span="", file="VerbsHelpTextFixture.cs"];
m20_220 [label=help, span="", file="VerbsHelpTextFixture.cs"];
m20_215 [label=writer, span="", file="VerbsHelpTextFixture.cs"];
m20_216 [label=writer, span="", file="VerbsHelpTextFixture.cs"];
m20_221 [label=help, span="", file="VerbsHelpTextFixture.cs"];
m20_222 [label=help, span="", file="VerbsHelpTextFixture.cs"];
m20_223 [label=help, span="", file="VerbsHelpTextFixture.cs"];
m0_50 -> m0_51  [key=0, style=solid, color=green];
m0_51 -> m0_52  [key=0, style=solid, color=green];
m0_51 -> m0_24  [key=2, style=dotted, color=green];
m0_51 -> m0_54  [key=1, style=dashed, color=green, label=options];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_25  [key=2, style=dotted];
m0_52 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_52 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_27  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_26  [key=2, style=dotted];
m0_53 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_30  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_28  [key=2, style=dotted];
m0_55 -> m0_45  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_28  [key=2, style=dotted];
m0_57 -> m0_29  [key=2, style=dotted];
m0_58 -> m0_50  [key=0, style=bold, color=blue];
m0_16 -> m0_17  [key=0, style=solid, color=green];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_17 -> m0_24  [key=2, style=dotted, color=green];
m0_17 -> m0_20  [key=1, style=dashed, color=green, label=options];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_25  [key=2, style=dotted];
m0_18 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_18 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_27  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_26  [key=2, style=dotted];
m0_19 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_30  [key=2, style=dotted];
m0_22 -> m0_28  [key=2, style=dotted];
m0_22 -> m0_31  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_28  [key=2, style=dotted];
m0_21 -> m0_29  [key=2, style=dotted];
m0_23 -> m0_16  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_35 -> m0_36  [key=0, style=solid, color=green];
m0_36 -> m0_37  [key=0, style=solid, color=green];
m0_36 -> m0_24  [key=2, style=dotted, color=green];
m0_36 -> m0_39  [key=1, style=dashed, color=green, label=options];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_25  [key=2, style=dotted];
m0_37 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_37 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_27  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_26  [key=2, style=dotted];
m0_38 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_30  [key=2, style=dotted];
m0_41 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label=helpText];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_28  [key=2, style=dotted];
m0_40 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_46  [key=2, style=dotted];
m0_42 -> m0_28  [key=2, style=dotted];
m0_42 -> m0_29  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_44 -> m0_35  [key=0, style=bold, color=blue];
m0_59 -> m0_60  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_60 -> m0_61  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_34 -> m0_32  [key=0, style=bold, color=blue];
m0_47 -> m0_48  [key=0, style=solid];
m0_49 -> m0_47  [key=0, style=bold, color=blue];
m0_61 -> m0_59  [key=0, style=bold, color=blue];
m0_3 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m0_63 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_64 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=writer];
m0_65 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_94 -> m1_110  [key=0, style=solid];
m1_94 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_94 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_94 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_94 -> m1_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_94 -> m1_118  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_94 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_94 -> m1_121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_94 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_94 -> m1_122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_112  [key=0, style=solid];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_114  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_116  [key=0, style=solid];
m1_114 -> m1_45  [key=2, style=dotted];
m1_114 -> m1_124  [key=2, style=dotted];
m1_115 -> m1_123  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_125  [key=2, style=dotted];
m1_116 -> m1_120  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_118 -> m1_123  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_51  [key=2, style=dotted];
m1_119 -> m1_127  [key=2, style=dotted];
m1_119 -> m1_52  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_129  [key=2, style=dotted];
m1_121 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_122 -> m1_123  [key=0, style=solid];
m1_111 -> m1_123  [key=0, style=solid];
m1_111 -> m1_23  [key=2, style=dotted];
m1_113 -> m1_123  [key=0, style=solid];
m1_113 -> m1_23  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_119  [key=0, style=solid];
m1_117 -> m1_126  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_128  [key=2, style=dotted];
m1_123 -> m1_94  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_57 -> m1_159  [key=0, style=solid];
m1_57 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_161  [key=0, style=solid];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_163  [key=2, style=dotted];
m1_161 -> m1_51  [key=2, style=dotted];
m1_161 -> m1_164  [key=2, style=dotted];
m1_160 -> m1_162  [key=0, style=solid];
m1_160 -> m1_23  [key=2, style=dotted];
m1_162 -> m1_57  [key=0, style=bold, color=blue];
m1_136 -> m1_249  [key=0, style=solid];
m1_249 -> m1_250  [key=0, style=solid];
m1_250 -> m1_251  [key=0, style=solid];
m1_250 -> m1_24  [key=2, style=dotted];
m1_250 -> m1_252  [key=2, style=dotted];
m1_250 -> m1_253  [key=2, style=dotted];
m1_250 -> m1_209  [key=2, style=dotted];
m1_250 -> m1_126  [key=2, style=dotted];
m1_250 -> m1_254  [key=2, style=dotted];
m1_250 -> m1_198  [key=2, style=dotted];
m1_250 -> m1_255  [key=2, style=dotted];
m1_251 -> m1_136  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=2, style=dotted];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_413 -> m1_416  [key=0, style=solid];
m1_413 -> m1_417  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_413 -> m1_418  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_413 -> m1_420  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_413 -> m1_421  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_413 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_416 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_416 -> m1_433  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_416 -> m1_434  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_417 -> m1_418  [key=0, style=solid];
m1_417 -> m1_422  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m1_417 -> m1_432  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m1_418 -> m1_419  [key=0, style=solid];
m1_418 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m1_418 -> m1_432  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m1_420 -> m1_421  [key=0, style=solid];
m1_420 -> m1_422  [key=0, style=solid];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_421 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_428 -> m1_429  [key=0, style=solid];
m1_428 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_428 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_428 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_423  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_423 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_423 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_433  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_434 -> m1_435  [key=0, style=solid];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_427  [key=0, style=solid];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_434  [key=0, style=solid];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_419 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_427 -> m1_428  [key=0, style=solid];
m1_427 -> m1_432  [key=0, style=solid];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_426 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_426 -> m1_433  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_426 -> m1_434  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_431 -> m1_433  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_431 -> m1_434  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_426  [key=0, style=solid];
m1_425 -> m1_426  [key=0, style=solid];
m1_425 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_429 -> m1_430  [key=0, style=solid];
m1_429 -> m1_431  [key=0, style=solid];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_435 -> m1_413  [key=0, style=bold, color=blue];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_313  [key=2, style=dotted];
m1_311 -> m1_314  [key=2, style=dotted];
m1_311 -> m1_292  [key=2, style=dotted];
m1_311 -> m1_293  [key=2, style=dotted];
m1_311 -> m1_315  [key=2, style=dotted];
m1_311 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
m1_172 -> m1_311  [key=0, style=solid];
m1_312 -> m1_172  [key=0, style=bold, color=blue];
m1_125 -> m1_185  [key=0, style=solid];
m1_125 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_125 -> m1_191  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m1_125 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m1_125 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_187  [key=0, style=solid];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_45  [key=2, style=dotted];
m1_187 -> m1_191  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m1_187 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_195  [key=2, style=dotted];
m1_191 -> m1_196  [key=2, style=dotted];
m1_191 -> m1_199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_191 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_81  [key=2, style=dotted];
m1_192 -> m1_47  [key=2, style=dotted];
m1_192 -> m1_197  [key=2, style=dotted];
m1_192 -> m1_198  [key=2, style=dotted];
m1_186 -> m1_193  [key=0, style=solid];
m1_186 -> m1_23  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_190  [key=0, style=solid];
m1_188 -> m1_124  [key=2, style=dotted];
m1_189 -> m1_193  [key=0, style=solid];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_194  [key=2, style=dotted];
m1_190 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_190 -> m1_192  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_193 -> m1_125  [key=0, style=bold, color=blue];
m1_45 -> m1_256  [key=0, style=solid];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_195  [key=2, style=dotted];
m1_256 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_257 -> m1_45  [key=0, style=bold, color=blue];
m1_326 -> m1_334  [key=0, style=solid];
m1_326 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_371  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_337  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_326 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_326 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_326 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_326 -> m1_341  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_326 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_326 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_326 -> m1_360  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_209  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_24  [key=2, style=dotted];
m1_335 -> m1_364  [key=2, style=dotted];
m1_335 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_335 -> m1_374  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_198  [key=2, style=dotted];
m1_336 -> m1_365  [key=2, style=dotted];
m1_336 -> m1_209  [key=2, style=dotted];
m1_337 -> m1_338  [key=0, style=solid];
m1_337 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_337 -> m1_340  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_340  [key=0, style=solid];
m1_338 -> m1_46  [key=2, style=dotted];
m1_339 -> m1_340  [key=0, style=solid];
m1_339 -> m1_366  [key=2, style=dotted];
m1_339 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_340 -> m1_341  [key=0, style=solid];
m1_340 -> m1_49  [key=2, style=dotted];
m1_340 -> m1_378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_340 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_340 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_340 -> m1_343  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_340 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_340 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_340 -> m1_361  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_343  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_367  [key=2, style=dotted];
m1_342 -> m1_342  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_342 -> m1_345  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_342 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_342 -> m1_361  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_354  [key=0, style=solid];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_357  [key=0, style=solid];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_358  [key=0, style=solid];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_283  [key=2, style=dotted];
m1_355 -> m1_209  [key=2, style=dotted];
m1_356 -> m1_358  [key=0, style=solid];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_369  [key=2, style=dotted];
m1_359 -> m1_254  [key=2, style=dotted];
m1_360 -> m1_343  [key=0, style=solid];
m1_360 -> m1_361  [key=0, style=solid];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_361  [key=0, style=solid];
m1_343 -> m1_126  [key=2, style=dotted];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_282  [key=2, style=dotted];
m1_345 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_345 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_345 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_345 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_345 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_345 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_345 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_284  [key=2, style=dotted];
m1_358 -> m1_285  [key=2, style=dotted];
m1_358 -> m1_368  [key=2, style=dotted];
m1_358 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_358 -> m1_360  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_358 -> m1_361  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_209  [key=2, style=dotted];
m1_361 -> m1_254  [key=2, style=dotted];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_344 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_344 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_344 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_350 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_350 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_346 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_346 -> m1_350  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_346 -> m1_351  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_346 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_346 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_346 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_358  [key=0, style=solid];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_209  [key=2, style=dotted];
m1_357 -> m1_347  [key=0, style=solid];
m1_357 -> m1_357  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_353 -> m1_357  [key=0, style=solid];
m1_353 -> m1_353  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_353 -> m1_358  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_209  [key=2, style=dotted];
m1_362 -> m1_363  [key=0, style=solid];
m1_363 -> m1_326  [key=0, style=bold, color=blue];
m1_330 -> m1_293  [key=0, style=bold, color=blue];
m1_293 -> m1_329  [key=0, style=solid];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_47  [key=2, style=dotted];
m1_329 -> m1_314  [key=2, style=dotted];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_411  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_61  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_61  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_65 -> m1_66  [key=0, style=solid];
m1_60 -> m1_58  [key=0, style=bold, color=blue];
m1_64 -> m1_62  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_65  [key=0, style=bold, color=blue];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_94  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_94  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_94  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_104 -> m1_105  [key=0, style=solid];
m1_107 -> m1_108  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_95 -> m1_96  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_85  [key=0, style=bold, color=blue];
m1_89 -> m1_90  [key=0, style=solid];
m1_90 -> m1_88  [key=0, style=bold, color=blue];
m1_93 -> m1_91  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_95  [key=0, style=bold, color=blue];
m1_100 -> m1_98  [key=0, style=bold, color=blue];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_101  [key=0, style=bold, color=blue];
m1_106 -> m1_104  [key=0, style=bold, color=blue];
m1_108 -> m1_109  [key=0, style=solid];
m1_109 -> m1_107  [key=0, style=bold, color=blue];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_52  [key=2, style=dotted];
m1_130 -> m1_131  [key=0, style=solid];
m1_132 -> m1_130  [key=0, style=bold, color=blue];
m1_148 -> m1_149  [key=0, style=solid];
m1_149 -> m1_150  [key=0, style=solid];
m1_149 -> m1_52  [key=2, style=dotted];
m1_150 -> m1_148  [key=0, style=bold, color=blue];
m1_156 -> m1_157  [key=0, style=solid];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_140  [key=2, style=dotted];
m1_158 -> m1_156  [key=0, style=bold, color=blue];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_206  [key=2, style=dotted];
m1_203 -> m1_207  [key=2, style=dotted];
m1_203 -> m1_208  [key=2, style=dotted];
m1_203 -> m1_209  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_198  [key=2, style=dotted];
m1_204 -> m1_210  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_202 -> m1_203  [key=0, style=solid];
m1_200 -> m1_201  [key=0, style=solid];
m1_201 -> m1_199  [key=0, style=bold, color=blue];
m1_205 -> m1_202  [key=0, style=bold, color=blue];
m1_214 -> m1_215  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_216 -> m1_214  [key=0, style=bold, color=blue];
m1_245 -> m1_246  [key=0, style=solid];
m1_246 -> m1_247  [key=0, style=solid];
m1_247 -> m1_248  [key=0, style=solid];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m1_244 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m1_248 -> m1_244  [key=0, style=bold, color=blue];
m1_258 -> m1_259  [key=0, style=solid];
m1_259 -> m1_260  [key=0, style=solid];
m1_260 -> m1_258  [key=0, style=bold, color=blue];
m1_296 -> m1_297  [key=0, style=solid];
m1_297 -> m1_298  [key=0, style=solid];
m1_298 -> m1_296  [key=0, style=bold, color=blue];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_305  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
m1_304 -> m1_305  [key=0, style=solid];
m1_304 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label=prop];
m1_305 -> m1_306  [key=0, style=solid];
m1_305 -> m1_307  [key=1, style=dashed, color=darkseagreen4, label=attr];
m1_306 -> m1_307  [key=0, style=solid];
m1_306 -> m1_309  [key=2, style=dotted];
m1_307 -> m1_308  [key=0, style=solid];
m1_307 -> m1_310  [key=2, style=dotted];
m1_308 -> m1_303  [key=0, style=bold, color=blue];
m1_324 -> m1_325  [key=0, style=solid];
m1_324 -> m1_326  [key=2, style=dotted];
m1_323 -> m1_324  [key=0, style=solid];
m1_325 -> m1_323  [key=0, style=bold, color=blue];
m1_371 -> m1_372  [key=0, style=solid];
m1_371 -> m1_373  [key=2, style=dotted];
m1_371 -> m1_209  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_377  [key=2, style=dotted];
m1_375 -> m1_209  [key=2, style=dotted];
m1_370 -> m1_371  [key=0, style=solid];
m1_374 -> m1_375  [key=0, style=solid];
m1_378 -> m1_379  [key=0, style=solid];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_381  [key=2, style=dotted];
m1_379 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_372 -> m1_370  [key=0, style=bold, color=blue];
m1_376 -> m1_374  [key=0, style=bold, color=blue];
m1_380 -> m1_378  [key=0, style=bold, color=blue];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_388  [key=2, style=dotted];
m1_386 -> m1_389  [key=2, style=dotted];
m1_386 -> m1_390  [key=2, style=dotted];
m1_386 -> m1_254  [key=2, style=dotted];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_254  [key=2, style=dotted];
m1_392 -> m1_389  [key=2, style=dotted];
m1_392 -> m1_390  [key=2, style=dotted];
m1_385 -> m1_386  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_387 -> m1_385  [key=0, style=bold, color=blue];
m1_393 -> m1_391  [key=0, style=bold, color=blue];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_399  [key=2, style=dotted];
m1_401 -> m1_402  [key=0, style=solid];
m1_401 -> m1_389  [key=2, style=dotted];
m1_396 -> m1_397  [key=0, style=solid];
m1_400 -> m1_401  [key=0, style=solid];
m1_398 -> m1_396  [key=0, style=bold, color=blue];
m1_402 -> m1_400  [key=0, style=bold, color=blue];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_413  [key=2, style=dotted];
m1_410 -> m1_414  [key=2, style=dotted];
m1_411 -> m1_412  [key=0, style=solid];
m1_411 -> m1_415  [key=2, style=dotted];
m1_412 -> m1_409  [key=0, style=bold, color=blue];
m1_373 -> m1_382  [key=0, style=solid];
m1_373 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_373 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_24  [key=2, style=dotted];
m1_382 -> m1_384  [key=2, style=dotted];
m1_382 -> m1_198  [key=2, style=dotted];
m1_382 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_382 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_383 -> m1_373  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_71  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_68 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_68 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_68 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_68 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_71  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_71 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_75 -> m1_79  [key=0, style=solid];
m1_75 -> m1_25  [key=2, style=dotted];
m1_75 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_75 -> m1_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_25  [key=2, style=dotted];
m1_78 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_78 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_78 -> m1_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_78 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_70 -> m1_79  [key=0, style=solid];
m1_70 -> m1_80  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_74  [key=0, style=solid];
m1_72 -> m1_54  [key=2, style=dotted];
m1_72 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [key=0, style=solid];
m1_74 -> m1_54  [key=2, style=dotted];
m1_74 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_81  [key=2, style=dotted];
m1_76 -> m1_82  [key=2, style=dotted];
m1_76 -> m1_78  [key=1, style=dashed, color=darkseagreen4, label=err];
m1_73 -> m1_79  [key=0, style=solid];
m1_73 -> m1_4  [key=2, style=dotted];
m1_73 -> m1_52  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_83  [key=2, style=dotted];
m1_77 -> m1_84  [key=2, style=dotted];
m1_77 -> m1_44  [key=2, style=dotted];
m1_77 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=pr];
m1_79 -> m1_68  [key=0, style=bold, color=blue];
m1_151 -> m1_152  [key=0, style=solid];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_128  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_129  [key=2, style=dotted];
m1_153 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_154 -> m1_155  [key=0, style=solid];
m1_155 -> m1_151  [key=0, style=bold, color=blue];
m1_56 -> m1_165  [key=0, style=solid];
m1_56 -> m1_167  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_56 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_167  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_169  [key=0, style=solid];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_172  [key=2, style=dotted];
m1_169 -> m1_51  [key=2, style=dotted];
m1_169 -> m1_164  [key=2, style=dotted];
m1_166 -> m1_170  [key=0, style=solid];
m1_166 -> m1_23  [key=2, style=dotted];
m1_168 -> m1_170  [key=0, style=solid];
m1_168 -> m1_171  [key=2, style=dotted];
m1_170 -> m1_56  [key=0, style=bold, color=blue];
m1_236 -> m1_299  [key=0, style=solid];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_301  [key=2, style=dotted];
m1_299 -> m1_302  [key=2, style=dotted];
m1_299 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_300 -> m1_236  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_8  [key=0, style=bold, color=blue];
m1_211 -> m1_212  [key=0, style=solid];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_50  [key=2, style=dotted];
m1_212 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_213 -> m1_211  [key=0, style=bold, color=blue];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
m1_25 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_25 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_0  [key=2, style=dotted];
m1_26 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_26 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_32  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_47  [key=2, style=dotted];
m1_31 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_31 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_50  [key=2, style=dotted];
m1_34 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=usageText];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_41  [key=0, style=solid];
m1_38 -> m1_46  [key=2, style=dotted];
m1_38 -> m1_54  [key=2, style=dotted];
m1_38 -> m1_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_40 -> m1_42  [key=0, style=solid];
m1_40 -> m1_55  [key=2, style=dotted];
m1_40 -> m1_56  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_57  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_44  [key=2, style=dotted];
m1_27 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=errors];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_48  [key=2, style=dotted];
m1_32 -> m1_49  [key=2, style=dotted];
m1_32 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_48  [key=2, style=dotted];
m1_33 -> m1_49  [key=2, style=dotted];
m1_33 -> m1_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_51  [key=2, style=dotted];
m1_36 -> m1_52  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_53  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_30 -> m1_45  [key=2, style=dotted];
m1_30 -> m1_46  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_38  [key=0, style=solid];
m1_43 -> m1_25  [key=0, style=bold, color=blue];
m1_164 -> m1_316  [key=0, style=solid];
m1_164 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_164 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m1_164 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_322  [key=2, style=dotted];
m1_316 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_316 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_316 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_129  [key=2, style=dotted];
m1_319 -> m1_323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_24  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_321 -> m1_164  [key=0, style=bold, color=blue];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_136  [key=2, style=dotted];
m1_135 -> m1_133  [key=0, style=bold, color=blue];
m1_139 -> m1_331  [key=0, style=solid];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_261  [key=2, style=dotted];
m1_332 -> m1_333  [key=0, style=solid];
m1_333 -> m1_139  [key=0, style=bold, color=blue];
m1_143 -> m1_403  [key=0, style=solid];
m1_403 -> m1_404  [key=0, style=solid];
m1_403 -> m1_261  [key=2, style=dotted];
m1_404 -> m1_405  [key=0, style=solid];
m1_405 -> m1_143  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_81  [key=2, style=dotted];
m1_287 -> m1_292  [key=2, style=dotted];
m1_287 -> m1_293  [key=2, style=dotted];
m1_287 -> m1_294  [key=2, style=dotted];
m1_287 -> m1_289  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m1_163 -> m1_286  [key=0, style=solid];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_291  [key=2, style=dotted];
m1_286 -> m1_288  [key=1, style=dashed, color=darkseagreen4, label=specs];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_81  [key=2, style=dotted];
m1_288 -> m1_295  [key=2, style=dotted];
m1_288 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_44  [key=2, style=dotted];
m1_289 -> m1_294  [key=2, style=dotted];
m1_290 -> m1_163  [key=0, style=bold, color=blue];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_264  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_261 -> m1_267  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_261 -> m1_268  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_261 -> m1_270  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_261 -> m1_271  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_261 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_261 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_261 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_261 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_261 -> m1_278  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_261 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_261 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_254  [key=2, style=dotted];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_282  [key=2, style=dotted];
m1_264 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_264 -> m1_267  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_264 -> m1_268  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_264 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_264 -> m1_270  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_264 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_264 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label=words];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_273  [key=0, style=solid];
m1_268 -> m1_269  [key=0, style=solid];
m1_268 -> m1_209  [key=2, style=dotted];
m1_270 -> m1_271  [key=0, style=solid];
m1_270 -> m1_276  [key=0, style=solid];
m1_271 -> m1_272  [key=0, style=solid];
m1_271 -> m1_209  [key=2, style=dotted];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_277  [key=0, style=solid];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_283  [key=2, style=dotted];
m1_274 -> m1_209  [key=2, style=dotted];
m1_275 -> m1_277  [key=0, style=solid];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_284  [key=2, style=dotted];
m1_277 -> m1_285  [key=2, style=dotted];
m1_277 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_277 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_277 -> m1_280  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_254  [key=2, style=dotted];
m1_279 -> m1_262  [key=0, style=solid];
m1_279 -> m1_280  [key=0, style=solid];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_209  [key=2, style=dotted];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_267  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_263 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_263 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_263 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_269 -> m1_270  [key=0, style=solid];
m1_269 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_269 -> m1_272  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_269 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_267  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_265 -> m1_268  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_265 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_265 -> m1_270  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_265 -> m1_273  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_265 -> m1_274  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_265 -> m1_276  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_277  [key=0, style=solid];
m1_276 -> m1_266  [key=0, style=solid];
m1_276 -> m1_276  [key=1, style=dashed, color=darkseagreen4, label=i];
m1_272 -> m1_276  [key=0, style=solid];
m1_272 -> m1_272  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_272 -> m1_277  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m1_281 -> m1_261  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid, color=red];
m1_10 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_10 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_10 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.SentenceBuilder"];
m1_10 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_10 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_11 -> m1_12  [key=0, style=solid, color=red];
m1_11 -> m1_13  [key=0, style=solid, color=red];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_12 -> m1_22  [key=0, style=solid, color=red];
m1_12 -> m1_23  [key=2, style=dotted, color=red];
m1_14 -> m1_22  [key=0, style=solid];
m1_14 -> m1_23  [key=2, style=dotted];
m1_16 -> m1_22  [key=0, style=solid];
m1_16 -> m1_23  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_24  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_10  [key=0, style=bold, color=blue];
m1_377 -> m1_394  [key=0, style=solid];
m1_377 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_377 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_24  [key=2, style=dotted];
m1_394 -> m1_364  [key=2, style=dotted];
m1_394 -> m1_390  [key=2, style=dotted];
m1_394 -> m1_198  [key=2, style=dotted];
m1_394 -> m1_396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_394 -> m1_400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_395 -> m1_377  [key=0, style=bold, color=blue];
m1_322 -> m1_406  [key=0, style=solid];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_408  [key=2, style=dotted];
m1_406 -> m1_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_407 -> m1_322  [key=0, style=bold, color=blue];
m1_328 -> m1_292  [key=0, style=bold, color=blue];
m1_292 -> m1_327  [key=0, style=solid];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_47  [key=2, style=dotted];
m1_327 -> m1_314  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_176  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_163  [key=2, style=dotted];
m1_176 -> m1_51  [key=2, style=dotted];
m1_176 -> m1_164  [key=2, style=dotted];
m1_175 -> m1_177  [key=0, style=solid];
m1_175 -> m1_23  [key=2, style=dotted];
m1_177 -> m1_173  [key=0, style=bold, color=blue];
m1_414 -> m1_436  [key=0, style=solid];
m1_414 -> m1_437  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_414 -> m1_439  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_414 -> m1_440  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_414 -> m1_442  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_414 -> m1_443  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_436 -> m1_437  [key=0, style=solid];
m1_436 -> m1_442  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_436 -> m1_443  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_437 -> m1_438  [key=0, style=solid];
m1_437 -> m1_441  [key=1, style=dashed, color=darkseagreen4, label=hasMeta];
m1_439 -> m1_440  [key=0, style=solid];
m1_439 -> m1_441  [key=0, style=solid];
m1_440 -> m1_441  [key=0, style=solid];
m1_440 -> m1_444  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_442 -> m1_444  [key=0, style=solid];
m1_442 -> m1_447  [key=2, style=dotted];
m1_442 -> m1_442  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_443 -> m1_444  [key=0, style=solid];
m1_443 -> m1_447  [key=2, style=dotted];
m1_443 -> m1_443  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_438 -> m1_439  [key=0, style=solid];
m1_438 -> m1_444  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_443  [key=0, style=solid];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m1_445 -> m1_446  [key=0, style=solid];
m1_446 -> m1_414  [key=0, style=bold, color=blue];
m1_52 -> m1_137  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_139  [key=2, style=dotted];
m1_138 -> m1_52  [key=0, style=bold, color=blue];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_181  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m1_178 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_181  [key=0, style=solid];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_183  [key=0, style=solid];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_172  [key=2, style=dotted];
m1_183 -> m1_51  [key=2, style=dotted];
m1_183 -> m1_164  [key=2, style=dotted];
m1_180 -> m1_184  [key=0, style=solid];
m1_180 -> m1_23  [key=2, style=dotted];
m1_182 -> m1_184  [key=0, style=solid];
m1_182 -> m1_171  [key=2, style=dotted];
m1_184 -> m1_178  [key=0, style=bold, color=blue];
m1_53 -> m1_144  [key=0, style=solid];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_128  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_129  [key=2, style=dotted];
m1_145 -> m1_148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_146 -> m1_147  [key=0, style=solid];
m1_147 -> m1_53  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_50 -> m1_217  [key=0, style=solid];
m1_50 -> m1_219  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_50 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>"];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_219  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_236  [key=2, style=dotted];
m1_219 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=usage];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_47  [key=2, style=dotted];
m1_227 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=example];
m1_227 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=example];
m1_218 -> m1_235  [key=0, style=solid];
m1_218 -> m1_23  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_222  [key=0, style=solid];
m1_220 -> m1_237  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_238  [key=2, style=dotted];
m1_222 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label=usageTuple];
m1_221 -> m1_235  [key=0, style=solid];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=examples];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_239  [key=2, style=dotted];
m1_224 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=appAlias];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_234  [key=0, style=solid];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_24  [key=2, style=dotted];
m1_225 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_225 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_206  [key=2, style=dotted];
m1_231 -> m1_207  [key=2, style=dotted];
m1_231 -> m1_209  [key=2, style=dotted];
m1_231 -> m1_240  [key=2, style=dotted];
m1_231 -> m1_242  [key=2, style=dotted];
m1_231 -> m1_244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_233 -> m1_226  [key=0, style=solid];
m1_233 -> m1_243  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_198  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_206  [key=2, style=dotted];
m1_228 -> m1_240  [key=2, style=dotted];
m1_228 -> m1_209  [key=2, style=dotted];
m1_228 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label=exampleText];
m1_228 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=exampleText];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_241  [key=2, style=dotted];
m1_232 -> m1_230  [key=0, style=solid];
m1_232 -> m1_243  [key=2, style=dotted];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_233  [key=0, style=solid];
m1_230 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_230 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_230 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_235 -> m1_50  [key=0, style=bold, color=blue];
m1_448 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_146  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_153  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_169  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_250  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_287  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_311  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_316  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_327  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_329  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_331  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_332  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_371  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_338  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_352  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_355  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_359  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_361  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_362  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_406  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_424  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_448 -> m1_429  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_449 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_449 -> m1_63  [key=1, style=dashed, color=darkseagreen4, label=auto];
m1_450 -> m1_92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_450 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m1_451 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=pr];
m1_452 -> m1_131  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m1_453 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m1_454 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_455 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=text];
m1_456 -> m1_245  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_456 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_456 -> m1_247  [key=1, style=dashed, color=darkseagreen4, label=s];
m1_457 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_458 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m1_459 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m1_460 -> m1_371  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_460 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label=int];
m1_461 -> m1_371  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_461 -> m1_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m1_462 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m1_463 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_463 -> m1_392  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m1_464 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m1_464 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_3  [key=1, style=dashed, color=green, label=tokenPartitions];
m2_2 -> m2_3  [key=0, style=solid, color=green];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_11  [key=2, style=dotted];
m2_2 -> m2_12  [key=2, style=dotted];
m2_2 -> m2_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_4  [key=0, style=solid, color=green];
m2_3 -> m2_13  [key=2, style=dotted, color=green];
m2_3 -> m2_14  [key=2, style=dotted, color=green];
m2_3 -> m2_20  [key=1, style=dashed, color=green, label="lambda expression"];
m2_3 -> m2_24  [key=1, style=dashed, color=green, label="lambda expression"];
m2_4 -> m2_5  [key=0, style=solid, color=green];
m2_4 -> m2_11  [key=2, style=dotted, color=green];
m2_4 -> m2_15  [key=2, style=dotted, color=green];
m2_4 -> m2_28  [key=1, style=dashed, color=green, label="lambda expression"];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_28 -> m2_29  [key=0, style=solid, color=green];
m2_16 -> m2_17  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid, color=green];
m2_24 -> m2_25  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid, color=green];
m2_21 -> m2_23  [key=2, style=dotted, color=green];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid, color=green];
m2_29 -> m2_23  [key=2, style=dotted, color=green];
m2_29 -> m2_31  [key=2, style=dotted, color=green];
m2_30 -> m2_28  [key=0, style=bold, color=blue];
m7_78 -> m7_79  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid, color=green];
m7_80 -> m7_7  [key=2, style=dotted, color=green];
m7_79 -> m7_80  [key=0, style=solid, color=green];
m7_79 -> m7_8  [key=2, style=dotted];
m7_79 -> m7_81  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_79 -> m7_83  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_81 -> m7_9  [key=2, style=dotted];
m7_81 -> m7_82  [key=0, style=solid];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_27  [key=2, style=dotted];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_24  [key=2, style=dotted];
m7_82 -> m7_50  [key=2, style=dotted];
m7_84 -> m7_78  [key=0, style=bold, color=blue];
m7_211 -> m7_212  [key=0, style=solid];
m7_213 -> m7_214  [key=0, style=solid, color=green];
m7_213 -> m7_7  [key=2, style=dotted, color=green];
m7_212 -> m7_213  [key=0, style=solid, color=green];
m7_212 -> m7_102  [key=2, style=dotted];
m7_212 -> m7_214  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_214 -> m7_9  [key=2, style=dotted];
m7_214 -> m7_215  [key=0, style=solid];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_24  [key=2, style=dotted];
m7_215 -> m7_50  [key=2, style=dotted];
m7_216 -> m7_211  [key=0, style=bold, color=blue];
m7_297 -> m7_298  [key=0, style=solid];
m7_299 -> m7_300  [key=0, style=solid, color=green];
m7_299 -> m7_7  [key=2, style=dotted, color=green];
m7_298 -> m7_299  [key=0, style=solid, color=green];
m7_298 -> m7_102  [key=2, style=dotted];
m7_298 -> m7_300  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_300 -> m7_9  [key=2, style=dotted];
m7_300 -> m7_301  [key=0, style=solid];
m7_300 -> m7_303  [key=2, style=dotted];
m7_301 -> m7_302  [key=0, style=solid];
m7_301 -> m7_24  [key=2, style=dotted];
m7_301 -> m7_50  [key=2, style=dotted];
m7_302 -> m7_297  [key=0, style=bold, color=blue];
m7_106 -> m7_107  [key=0, style=solid];
m7_110 -> m7_111  [key=0, style=solid, color=green];
m7_110 -> m7_7  [key=2, style=dotted, color=green];
m7_109 -> m7_110  [key=0, style=solid, color=green];
m7_109 -> m7_102  [key=2, style=dotted];
m7_109 -> m7_111  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_109 -> m7_113  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_111 -> m7_9  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_108 -> m7_105  [key=2, style=dotted];
m7_108 -> m7_109  [key=0, style=solid];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_24  [key=2, style=dotted];
m7_113 -> m7_26  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_24  [key=2, style=dotted];
m7_112 -> m7_25  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_114  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m7_114 -> m7_115  [key=0, style=solid];
m7_115 -> m7_106  [key=0, style=bold, color=blue];
m7_157 -> m7_158  [key=0, style=solid, color=green];
m7_158 -> m7_159  [key=0, style=solid, color=green];
m7_158 -> m7_7  [key=2, style=dotted, color=green];
m7_158 -> m7_160  [key=1, style=dashed, color=green, label=parser];
m7_159 -> m7_160  [key=0, style=solid];
m7_159 -> m7_165  [key=2, style=dotted];
m7_159 -> m7_162  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_159 -> m7_163  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_160 -> m7_9  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_162 -> m7_163  [key=0, style=solid];
m7_162 -> m7_24  [key=2, style=dotted];
m7_162 -> m7_26  [key=2, style=dotted];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_24  [key=2, style=dotted];
m7_163 -> m7_26  [key=2, style=dotted];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_24  [key=2, style=dotted];
m7_161 -> m7_25  [key=2, style=dotted];
m7_164 -> m7_157  [key=0, style=bold, color=blue];
m7_137 -> m7_138  [key=0, style=solid];
m7_139 -> m7_140  [key=0, style=solid, color=green];
m7_139 -> m7_3  [key=2, style=dotted, color=green];
m7_139 -> m7_142  [key=1, style=dashed, color=green, label="lambda expression"];
m7_138 -> m7_139  [key=0, style=solid, color=green];
m7_138 -> m7_143  [key=1, style=dashed, color=green, label=options];
m7_138 -> m7_141  [key=2, style=dotted];
m7_140 -> m7_137  [key=0, style=bold, color=blue];
m7_145 -> m7_146  [key=0, style=solid];
m7_147 -> m7_148  [key=0, style=solid, color=green];
m7_147 -> m7_7  [key=2, style=dotted, color=green];
m7_146 -> m7_147  [key=0, style=solid, color=green];
m7_146 -> m7_8  [key=2, style=dotted];
m7_146 -> m7_148  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_148 -> m7_9  [key=2, style=dotted];
m7_148 -> m7_149  [key=0, style=solid];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_24  [key=2, style=dotted];
m7_149 -> m7_50  [key=2, style=dotted];
m7_150 -> m7_145  [key=0, style=bold, color=blue];
m7_223 -> m7_224  [key=0, style=solid];
m7_225 -> m7_226  [key=0, style=solid, color=green];
m7_225 -> m7_7  [key=2, style=dotted, color=green];
m7_224 -> m7_225  [key=0, style=solid, color=green];
m7_224 -> m7_8  [key=2, style=dotted];
m7_224 -> m7_226  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_224 -> m7_228  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_226 -> m7_9  [key=2, style=dotted];
m7_226 -> m7_227  [key=0, style=solid];
m7_228 -> m7_229  [key=0, style=solid];
m7_228 -> m7_24  [key=2, style=dotted];
m7_228 -> m7_26  [key=2, style=dotted];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_24  [key=2, style=dotted];
m7_227 -> m7_25  [key=2, style=dotted];
m7_229 -> m7_223  [key=0, style=bold, color=blue];
m7_283 -> m7_284  [key=0, style=solid];
m7_285 -> m7_286  [key=0, style=solid, color=green];
m7_285 -> m7_7  [key=2, style=dotted, color=green];
m7_284 -> m7_285  [key=0, style=solid, color=green];
m7_284 -> m7_102  [key=2, style=dotted];
m7_284 -> m7_286  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_284 -> m7_288  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_286 -> m7_9  [key=2, style=dotted];
m7_286 -> m7_287  [key=0, style=solid];
m7_288 -> m7_289  [key=0, style=solid];
m7_288 -> m7_24  [key=2, style=dotted];
m7_288 -> m7_26  [key=2, style=dotted];
m7_287 -> m7_288  [key=0, style=solid];
m7_287 -> m7_24  [key=2, style=dotted];
m7_287 -> m7_25  [key=2, style=dotted];
m7_289 -> m7_283  [key=0, style=bold, color=blue];
m7_311 -> m7_312  [key=0, style=solid];
m7_313 -> m7_314  [key=0, style=solid, color=green];
m7_313 -> m7_7  [key=2, style=dotted, color=green];
m7_312 -> m7_313  [key=0, style=solid, color=green];
m7_312 -> m7_102  [key=2, style=dotted];
m7_312 -> m7_314  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_314 -> m7_9  [key=2, style=dotted];
m7_314 -> m7_315  [key=0, style=solid];
m7_314 -> m7_317  [key=2, style=dotted];
m7_315 -> m7_316  [key=0, style=solid];
m7_315 -> m7_24  [key=2, style=dotted];
m7_315 -> m7_50  [key=2, style=dotted];
m7_316 -> m7_311  [key=0, style=bold, color=blue];
m7_10 -> m7_11  [key=0, style=solid, color=green];
m7_11 -> m7_12  [key=0, style=solid, color=green];
m7_11 -> m7_3  [key=2, style=dotted, color=green];
m7_11 -> m7_13  [key=1, style=dashed, color=green, label="lambda expression"];
m7_12 -> m7_10  [key=0, style=bold, color=blue];
m7_62 -> m7_63  [key=0, style=solid];
m7_64 -> m7_65  [key=0, style=solid, color=green];
m7_64 -> m7_7  [key=2, style=dotted, color=green];
m7_63 -> m7_64  [key=0, style=solid, color=green];
m7_63 -> m7_76  [key=2, style=dotted];
m7_63 -> m7_65  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_67  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_68  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_69  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_70  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_71  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_72  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_73  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_63 -> m7_74  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_65 -> m7_9  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_67 -> m7_24  [key=2, style=dotted];
m7_67 -> m7_26  [key=2, style=dotted];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_77  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_24  [key=2, style=dotted];
m7_69 -> m7_26  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_77  [key=2, style=dotted];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_24  [key=2, style=dotted];
m7_71 -> m7_26  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_77  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_24  [key=2, style=dotted];
m7_73 -> m7_26  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_77  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_24  [key=2, style=dotted];
m7_66 -> m7_25  [key=2, style=dotted];
m7_75 -> m7_62  [key=0, style=bold, color=blue];
m7_255 -> m7_256  [key=0, style=solid];
m7_257 -> m7_258  [key=0, style=solid, color=green];
m7_257 -> m7_7  [key=2, style=dotted, color=green];
m7_256 -> m7_257  [key=0, style=solid, color=green];
m7_256 -> m7_102  [key=2, style=dotted];
m7_256 -> m7_258  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_256 -> m7_260  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_258 -> m7_9  [key=2, style=dotted];
m7_258 -> m7_259  [key=0, style=solid];
m7_260 -> m7_261  [key=0, style=solid];
m7_260 -> m7_24  [key=2, style=dotted];
m7_260 -> m7_26  [key=2, style=dotted];
m7_259 -> m7_260  [key=0, style=solid];
m7_259 -> m7_24  [key=2, style=dotted];
m7_259 -> m7_25  [key=2, style=dotted];
m7_261 -> m7_255  [key=0, style=bold, color=blue];
m7_193 -> m7_194  [key=0, style=solid];
m7_195 -> m7_196  [key=0, style=solid, color=green];
m7_195 -> m7_7  [key=2, style=dotted, color=green];
m7_194 -> m7_195  [key=0, style=solid, color=green];
m7_194 -> m7_102  [key=2, style=dotted];
m7_194 -> m7_196  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_196 -> m7_9  [key=2, style=dotted];
m7_196 -> m7_197  [key=0, style=solid];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_24  [key=2, style=dotted];
m7_197 -> m7_50  [key=2, style=dotted];
m7_198 -> m7_193  [key=0, style=bold, color=blue];
m7_205 -> m7_206  [key=0, style=solid];
m7_207 -> m7_208  [key=0, style=solid, color=green];
m7_207 -> m7_7  [key=2, style=dotted, color=green];
m7_206 -> m7_207  [key=0, style=solid, color=green];
m7_206 -> m7_102  [key=2, style=dotted];
m7_206 -> m7_208  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_208 -> m7_9  [key=2, style=dotted];
m7_208 -> m7_209  [key=0, style=solid];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_24  [key=2, style=dotted];
m7_209 -> m7_50  [key=2, style=dotted];
m7_210 -> m7_205  [key=0, style=bold, color=blue];
m7_142 -> m7_143  [key=0, style=solid, color=green];
m7_4 -> m7_5  [key=0, style=solid, color=green];
m7_5 -> m7_6  [key=0, style=solid, color=green];
m7_5 -> m7_7  [key=2, style=dotted, color=green];
m7_5 -> m7_8  [key=2, style=dotted, color=green];
m7_5 -> m7_9  [key=2, style=dotted, color=green];
m7_6 -> m7_4  [key=0, style=bold, color=blue];
m7_13 -> m7_14  [key=0, style=solid, color=green];
m7_14 -> m7_15  [key=0, style=solid, color=green];
m7_14 -> m7_7  [key=2, style=dotted, color=green];
m7_14 -> m7_9  [key=2, style=dotted, color=green];
m7_15 -> m7_13  [key=0, style=bold, color=blue];
m7_143 -> m7_144  [key=0, style=solid, color=green];
m7_143 -> m7_7  [key=2, style=dotted, color=green];
m7_143 -> m7_9  [key=2, style=dotted, color=green];
m7_144 -> m7_142  [key=0, style=bold, color=blue];
m7_95 -> m7_96  [key=0, style=solid];
m7_97 -> m7_98  [key=0, style=solid, color=green];
m7_97 -> m7_103  [key=2, style=dotted, color=green];
m7_97 -> m7_104  [key=2, style=dotted, color=green];
m7_97 -> m7_105  [key=2, style=dotted, color=green];
m7_96 -> m7_97  [key=0, style=solid, color=green];
m7_96 -> m7_102  [key=2, style=dotted];
m7_96 -> m7_98  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_96 -> m7_100  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_98 -> m7_9  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_24  [key=2, style=dotted];
m7_100 -> m7_26  [key=2, style=dotted];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_24  [key=2, style=dotted];
m7_99 -> m7_25  [key=2, style=dotted];
m7_101 -> m7_95  [key=0, style=bold, color=blue];
m7_38 -> m7_39  [key=0, style=solid];
m7_40 -> m7_41  [key=0, style=solid, color=green];
m7_40 -> m7_7  [key=2, style=dotted, color=green];
m7_39 -> m7_40  [key=0, style=solid, color=green];
m7_39 -> m7_49  [key=2, style=dotted];
m7_39 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_39 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_39 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_39 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_39 -> m7_46  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_39 -> m7_47  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_41 -> m7_9  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_24  [key=2, style=dotted];
m7_43 -> m7_25  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_24  [key=2, style=dotted];
m7_44 -> m7_25  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_24  [key=2, style=dotted];
m7_45 -> m7_50  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_24  [key=2, style=dotted];
m7_46 -> m7_26  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_27  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_24  [key=2, style=dotted];
m7_42 -> m7_25  [key=2, style=dotted];
m7_48 -> m7_38  [key=0, style=bold, color=blue];
m7_269 -> m7_270  [key=0, style=solid];
m7_271 -> m7_272  [key=0, style=solid, color=green];
m7_271 -> m7_7  [key=2, style=dotted, color=green];
m7_270 -> m7_271  [key=0, style=solid, color=green];
m7_270 -> m7_102  [key=2, style=dotted];
m7_270 -> m7_272  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_270 -> m7_274  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_272 -> m7_9  [key=2, style=dotted];
m7_272 -> m7_273  [key=0, style=solid];
m7_274 -> m7_275  [key=0, style=solid];
m7_274 -> m7_24  [key=2, style=dotted];
m7_274 -> m7_26  [key=2, style=dotted];
m7_273 -> m7_274  [key=0, style=solid];
m7_273 -> m7_24  [key=2, style=dotted];
m7_273 -> m7_25  [key=2, style=dotted];
m7_275 -> m7_269  [key=0, style=bold, color=blue];
m7_85 -> m7_86  [key=0, style=solid];
m7_87 -> m7_88  [key=0, style=solid, color=green];
m7_87 -> m7_7  [key=2, style=dotted, color=green];
m7_86 -> m7_87  [key=0, style=solid, color=green];
m7_86 -> m7_94  [key=2, style=dotted];
m7_86 -> m7_88  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_86 -> m7_90  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_86 -> m7_91  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_86 -> m7_92  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_88 -> m7_9  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_24  [key=2, style=dotted];
m7_90 -> m7_26  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_24  [key=2, style=dotted];
m7_91 -> m7_26  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_27  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_24  [key=2, style=dotted];
m7_89 -> m7_25  [key=2, style=dotted];
m7_93 -> m7_85  [key=0, style=bold, color=blue];
m7_199 -> m7_200  [key=0, style=solid];
m7_201 -> m7_202  [key=0, style=solid, color=green];
m7_201 -> m7_7  [key=2, style=dotted, color=green];
m7_200 -> m7_201  [key=0, style=solid, color=green];
m7_200 -> m7_102  [key=2, style=dotted];
m7_200 -> m7_202  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_202 -> m7_9  [key=2, style=dotted];
m7_202 -> m7_203  [key=0, style=solid];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_24  [key=2, style=dotted];
m7_203 -> m7_50  [key=2, style=dotted];
m7_204 -> m7_199  [key=0, style=bold, color=blue];
m7_318 -> m7_319  [key=0, style=solid];
m7_320 -> m7_321  [key=0, style=solid, color=green];
m7_320 -> m7_7  [key=2, style=dotted, color=green];
m7_319 -> m7_320  [key=0, style=solid, color=green];
m7_319 -> m7_102  [key=2, style=dotted];
m7_319 -> m7_321  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_321 -> m7_9  [key=2, style=dotted];
m7_321 -> m7_322  [key=0, style=solid];
m7_321 -> m7_324  [key=2, style=dotted];
m7_322 -> m7_323  [key=0, style=solid];
m7_322 -> m7_24  [key=2, style=dotted];
m7_322 -> m7_50  [key=2, style=dotted];
m7_323 -> m7_318  [key=0, style=bold, color=blue];
m7_16 -> m7_17  [key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid, color=green];
m7_18 -> m7_7  [key=2, style=dotted, color=green];
m7_17 -> m7_18  [key=0, style=solid, color=green];
m7_17 -> m7_8  [key=2, style=dotted];
m7_17 -> m7_19  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_17 -> m7_21  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_17 -> m7_22  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_19 -> m7_9  [key=2, style=dotted];
m7_19 -> m7_20  [key=0, style=solid];
m7_21 -> m7_22  [key=0, style=solid];
m7_21 -> m7_24  [key=2, style=dotted];
m7_21 -> m7_26  [key=2, style=dotted];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_27  [key=2, style=dotted];
m7_20 -> m7_21  [key=0, style=solid];
m7_20 -> m7_24  [key=2, style=dotted];
m7_20 -> m7_25  [key=2, style=dotted];
m7_23 -> m7_16  [key=0, style=bold, color=blue];
m7_126 -> m7_127  [key=0, style=solid];
m7_128 -> m7_129  [key=0, style=solid, color=green];
m7_128 -> m7_7  [key=2, style=dotted, color=green];
m7_127 -> m7_128  [key=0, style=solid, color=green];
m7_127 -> m7_135  [key=2, style=dotted];
m7_127 -> m7_129  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_127 -> m7_131  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_127 -> m7_132  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_127 -> m7_133  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_129 -> m7_9  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_24  [key=2, style=dotted];
m7_131 -> m7_136  [key=2, style=dotted];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_24  [key=2, style=dotted];
m7_132 -> m7_136  [key=2, style=dotted];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_24  [key=2, style=dotted];
m7_133 -> m7_136  [key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_24  [key=2, style=dotted];
m7_130 -> m7_25  [key=2, style=dotted];
m7_134 -> m7_126  [key=0, style=bold, color=blue];
m7_172 -> m7_173  [key=0, style=solid, color=green];
m7_173 -> m7_174  [key=0, style=solid, color=green];
m7_173 -> m7_103  [key=2, style=dotted, color=green];
m7_173 -> m7_180  [key=2, style=dotted, color=green];
m7_173 -> m7_175  [key=1, style=dashed, color=green, label=parser];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_165  [key=2, style=dotted];
m7_174 -> m7_177  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_174 -> m7_178  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_175 -> m7_9  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_177 -> m7_178  [key=0, style=solid];
m7_177 -> m7_24  [key=2, style=dotted];
m7_177 -> m7_26  [key=2, style=dotted];
m7_178 -> m7_179  [key=0, style=solid];
m7_178 -> m7_24  [key=2, style=dotted];
m7_178 -> m7_26  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_24  [key=2, style=dotted];
m7_176 -> m7_25  [key=2, style=dotted];
m7_179 -> m7_172  [key=0, style=bold, color=blue];
m7_151 -> m7_152  [key=0, style=solid];
m7_153 -> m7_154  [key=0, style=solid, color=green];
m7_153 -> m7_7  [key=2, style=dotted, color=green];
m7_152 -> m7_153  [key=0, style=solid, color=green];
m7_152 -> m7_8  [key=2, style=dotted];
m7_152 -> m7_154  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_154 -> m7_9  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_24  [key=2, style=dotted];
m7_155 -> m7_50  [key=2, style=dotted];
m7_156 -> m7_151  [key=0, style=bold, color=blue];
m7_276 -> m7_277  [key=0, style=solid];
m7_278 -> m7_279  [key=0, style=solid, color=green];
m7_278 -> m7_7  [key=2, style=dotted, color=green];
m7_277 -> m7_278  [key=0, style=solid, color=green];
m7_277 -> m7_102  [key=2, style=dotted];
m7_277 -> m7_279  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_277 -> m7_281  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_279 -> m7_9  [key=2, style=dotted];
m7_279 -> m7_280  [key=0, style=solid];
m7_281 -> m7_282  [key=0, style=solid];
m7_281 -> m7_24  [key=2, style=dotted];
m7_281 -> m7_26  [key=2, style=dotted];
m7_280 -> m7_281  [key=0, style=solid];
m7_280 -> m7_24  [key=2, style=dotted];
m7_280 -> m7_25  [key=2, style=dotted];
m7_282 -> m7_276  [key=0, style=bold, color=blue];
m7_187 -> m7_188  [key=0, style=solid];
m7_189 -> m7_190  [key=0, style=solid, color=green];
m7_189 -> m7_7  [key=2, style=dotted, color=green];
m7_188 -> m7_189  [key=0, style=solid, color=green];
m7_188 -> m7_102  [key=2, style=dotted];
m7_188 -> m7_190  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_190 -> m7_9  [key=2, style=dotted];
m7_190 -> m7_191  [key=0, style=solid];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_24  [key=2, style=dotted];
m7_191 -> m7_50  [key=2, style=dotted];
m7_192 -> m7_187  [key=0, style=bold, color=blue];
m7_248 -> m7_249  [key=0, style=solid];
m7_250 -> m7_251  [key=0, style=solid, color=green];
m7_250 -> m7_7  [key=2, style=dotted, color=green];
m7_249 -> m7_250  [key=0, style=solid, color=green];
m7_249 -> m7_102  [key=2, style=dotted];
m7_249 -> m7_251  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_249 -> m7_253  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_251 -> m7_9  [key=2, style=dotted];
m7_251 -> m7_252  [key=0, style=solid];
m7_253 -> m7_254  [key=0, style=solid];
m7_253 -> m7_24  [key=2, style=dotted];
m7_253 -> m7_26  [key=2, style=dotted];
m7_252 -> m7_253  [key=0, style=solid];
m7_252 -> m7_24  [key=2, style=dotted];
m7_252 -> m7_25  [key=2, style=dotted];
m7_254 -> m7_248  [key=0, style=bold, color=blue];
m7_230 -> m7_231  [key=0, style=solid];
m7_232 -> m7_233  [key=0, style=solid, color=green];
m7_232 -> m7_7  [key=2, style=dotted, color=green];
m7_231 -> m7_232  [key=0, style=solid, color=green];
m7_231 -> m7_240  [key=2, style=dotted];
m7_231 -> m7_233  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_231 -> m7_235  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_231 -> m7_236  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_231 -> m7_237  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_231 -> m7_238  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_233 -> m7_9  [key=2, style=dotted];
m7_233 -> m7_234  [key=0, style=solid];
m7_235 -> m7_236  [key=0, style=solid];
m7_235 -> m7_24  [key=2, style=dotted];
m7_235 -> m7_26  [key=2, style=dotted];
m7_236 -> m7_237  [key=0, style=solid];
m7_236 -> m7_24  [key=2, style=dotted];
m7_236 -> m7_25  [key=2, style=dotted];
m7_237 -> m7_238  [key=0, style=solid];
m7_237 -> m7_24  [key=2, style=dotted];
m7_237 -> m7_26  [key=2, style=dotted];
m7_238 -> m7_239  [key=0, style=solid];
m7_238 -> m7_24  [key=2, style=dotted];
m7_238 -> m7_26  [key=2, style=dotted];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_24  [key=2, style=dotted];
m7_234 -> m7_25  [key=2, style=dotted];
m7_239 -> m7_230  [key=0, style=bold, color=blue];
m7_262 -> m7_263  [key=0, style=solid];
m7_264 -> m7_265  [key=0, style=solid, color=green];
m7_264 -> m7_7  [key=2, style=dotted, color=green];
m7_263 -> m7_264  [key=0, style=solid, color=green];
m7_263 -> m7_102  [key=2, style=dotted];
m7_263 -> m7_265  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_263 -> m7_267  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_265 -> m7_9  [key=2, style=dotted];
m7_265 -> m7_266  [key=0, style=solid];
m7_267 -> m7_268  [key=0, style=solid];
m7_267 -> m7_24  [key=2, style=dotted];
m7_267 -> m7_26  [key=2, style=dotted];
m7_266 -> m7_267  [key=0, style=solid];
m7_266 -> m7_24  [key=2, style=dotted];
m7_266 -> m7_25  [key=2, style=dotted];
m7_268 -> m7_262  [key=0, style=bold, color=blue];
m7_290 -> m7_291  [key=0, style=solid];
m7_292 -> m7_293  [key=0, style=solid, color=green];
m7_292 -> m7_7  [key=2, style=dotted, color=green];
m7_291 -> m7_292  [key=0, style=solid, color=green];
m7_291 -> m7_102  [key=2, style=dotted];
m7_291 -> m7_293  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_291 -> m7_295  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_293 -> m7_9  [key=2, style=dotted];
m7_293 -> m7_294  [key=0, style=solid];
m7_295 -> m7_296  [key=0, style=solid];
m7_295 -> m7_24  [key=2, style=dotted];
m7_295 -> m7_26  [key=2, style=dotted];
m7_294 -> m7_295  [key=0, style=solid];
m7_294 -> m7_24  [key=2, style=dotted];
m7_294 -> m7_25  [key=2, style=dotted];
m7_296 -> m7_290  [key=0, style=bold, color=blue];
m7_28 -> m7_29  [key=0, style=solid];
m7_30 -> m7_31  [key=0, style=solid, color=green];
m7_30 -> m7_7  [key=2, style=dotted, color=green];
m7_29 -> m7_30  [key=0, style=solid, color=green];
m7_29 -> m7_8  [key=2, style=dotted];
m7_29 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_29 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_29 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_29 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_29 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_31 -> m7_9  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_24  [key=2, style=dotted];
m7_33 -> m7_26  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_24  [key=2, style=dotted];
m7_34 -> m7_26  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_24  [key=2, style=dotted];
m7_35 -> m7_25  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_27  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_24  [key=2, style=dotted];
m7_32 -> m7_25  [key=2, style=dotted];
m7_37 -> m7_28  [key=0, style=bold, color=blue];
m7_332 -> m7_333  [key=0, style=solid];
m7_334 -> m7_335  [key=0, style=solid, color=green];
m7_334 -> m7_7  [key=2, style=dotted, color=green];
m7_333 -> m7_334  [key=0, style=solid, color=green];
m7_333 -> m7_339  [key=2, style=dotted];
m7_333 -> m7_335  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_333 -> m7_337  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_335 -> m7_9  [key=2, style=dotted];
m7_335 -> m7_336  [key=0, style=solid];
m7_337 -> m7_338  [key=0, style=solid];
m7_337 -> m7_24  [key=2, style=dotted];
m7_337 -> m7_340  [key=2, style=dotted];
m7_336 -> m7_337  [key=0, style=solid];
m7_336 -> m7_24  [key=2, style=dotted];
m7_336 -> m7_50  [key=2, style=dotted];
m7_338 -> m7_332  [key=0, style=bold, color=blue];
m7_217 -> m7_218  [key=0, style=solid];
m7_219 -> m7_220  [key=0, style=solid, color=green];
m7_219 -> m7_7  [key=2, style=dotted, color=green];
m7_218 -> m7_219  [key=0, style=solid, color=green];
m7_218 -> m7_102  [key=2, style=dotted];
m7_218 -> m7_220  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_220 -> m7_9  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_221 -> m7_222  [key=0, style=solid];
m7_221 -> m7_24  [key=2, style=dotted];
m7_221 -> m7_50  [key=2, style=dotted];
m7_222 -> m7_217  [key=0, style=bold, color=blue];
m7_181 -> m7_182  [key=0, style=solid];
m7_183 -> m7_184  [key=0, style=solid, color=green];
m7_183 -> m7_7  [key=2, style=dotted, color=green];
m7_182 -> m7_183  [key=0, style=solid, color=green];
m7_182 -> m7_8  [key=2, style=dotted];
m7_182 -> m7_184  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_184 -> m7_9  [key=2, style=dotted];
m7_184 -> m7_185  [key=0, style=solid];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_24  [key=2, style=dotted];
m7_185 -> m7_50  [key=2, style=dotted];
m7_186 -> m7_181  [key=0, style=bold, color=blue];
m7_304 -> m7_305  [key=0, style=solid];
m7_306 -> m7_307  [key=0, style=solid, color=green];
m7_306 -> m7_7  [key=2, style=dotted, color=green];
m7_305 -> m7_306  [key=0, style=solid, color=green];
m7_305 -> m7_102  [key=2, style=dotted];
m7_305 -> m7_307  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_307 -> m7_9  [key=2, style=dotted];
m7_307 -> m7_308  [key=0, style=solid];
m7_307 -> m7_310  [key=2, style=dotted];
m7_308 -> m7_309  [key=0, style=solid];
m7_308 -> m7_24  [key=2, style=dotted];
m7_308 -> m7_50  [key=2, style=dotted];
m7_309 -> m7_304  [key=0, style=bold, color=blue];
m7_116 -> m7_117  [key=0, style=solid];
m7_118 -> m7_119  [key=0, style=solid, color=green];
m7_118 -> m7_7  [key=2, style=dotted, color=green];
m7_117 -> m7_118  [key=0, style=solid, color=green];
m7_117 -> m7_125  [key=2, style=dotted];
m7_117 -> m7_119  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_117 -> m7_121  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_117 -> m7_122  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_117 -> m7_123  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_119 -> m7_9  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_24  [key=2, style=dotted];
m7_121 -> m7_26  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_24  [key=2, style=dotted];
m7_122 -> m7_26  [key=2, style=dotted];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_24  [key=2, style=dotted];
m7_123 -> m7_25  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_24  [key=2, style=dotted];
m7_120 -> m7_25  [key=2, style=dotted];
m7_124 -> m7_116  [key=0, style=bold, color=blue];
m7_241 -> m7_242  [key=0, style=solid];
m7_243 -> m7_244  [key=0, style=solid, color=green];
m7_243 -> m7_7  [key=2, style=dotted, color=green];
m7_242 -> m7_243  [key=0, style=solid, color=green];
m7_242 -> m7_8  [key=2, style=dotted];
m7_242 -> m7_244  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_242 -> m7_246  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_244 -> m7_9  [key=2, style=dotted];
m7_244 -> m7_245  [key=0, style=solid];
m7_246 -> m7_247  [key=0, style=solid];
m7_246 -> m7_24  [key=2, style=dotted];
m7_246 -> m7_26  [key=2, style=dotted];
m7_245 -> m7_246  [key=0, style=solid];
m7_245 -> m7_24  [key=2, style=dotted];
m7_245 -> m7_25  [key=2, style=dotted];
m7_247 -> m7_241  [key=0, style=bold, color=blue];
m7_325 -> m7_326  [key=0, style=solid];
m7_327 -> m7_328  [key=0, style=solid, color=green];
m7_327 -> m7_7  [key=2, style=dotted, color=green];
m7_326 -> m7_327  [key=0, style=solid, color=green];
m7_326 -> m7_102  [key=2, style=dotted];
m7_326 -> m7_328  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_328 -> m7_9  [key=2, style=dotted];
m7_328 -> m7_329  [key=0, style=solid];
m7_328 -> m7_331  [key=2, style=dotted];
m7_329 -> m7_330  [key=0, style=solid];
m7_329 -> m7_24  [key=2, style=dotted];
m7_329 -> m7_50  [key=2, style=dotted];
m7_330 -> m7_325  [key=0, style=bold, color=blue];
m7_166 -> m7_167  [key=0, style=solid, color=green];
m7_167 -> m7_168  [key=0, style=solid, color=green];
m7_167 -> m7_7  [key=2, style=dotted, color=green];
m7_167 -> m7_169  [key=1, style=dashed, color=green, label=parser];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_165  [key=2, style=dotted];
m7_169 -> m7_9  [key=2, style=dotted];
m7_169 -> m7_170  [key=0, style=solid];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_24  [key=2, style=dotted];
m7_170 -> m7_50  [key=2, style=dotted];
m7_171 -> m7_166  [key=0, style=bold, color=blue];
m7_51 -> m7_52  [key=0, style=solid];
m7_53 -> m7_54  [key=0, style=solid, color=green];
m7_53 -> m7_7  [key=2, style=dotted, color=green];
m7_52 -> m7_53  [key=0, style=solid, color=green];
m7_52 -> m7_49  [key=2, style=dotted];
m7_52 -> m7_54  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_52 -> m7_56  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_52 -> m7_57  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_52 -> m7_58  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_52 -> m7_59  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_52 -> m7_60  [key=1, style=dashed, color=darkseagreen4, label=options];
m7_54 -> m7_9  [key=2, style=dotted];
m7_54 -> m7_55  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_24  [key=2, style=dotted];
m7_56 -> m7_25  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_24  [key=2, style=dotted];
m7_57 -> m7_50  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_24  [key=2, style=dotted];
m7_58 -> m7_50  [key=2, style=dotted];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_24  [key=2, style=dotted];
m7_59 -> m7_26  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_27  [key=2, style=dotted];
m7_55 -> m7_56  [key=0, style=solid];
m7_55 -> m7_24  [key=2, style=dotted];
m7_55 -> m7_25  [key=2, style=dotted];
m7_61 -> m7_51  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid, color=green];
m7_1 -> m7_2  [key=0, style=solid, color=green];
m7_1 -> m7_3  [key=2, style=dotted, color=green];
m7_1 -> m7_4  [key=1, style=dashed, color=green, label="lambda expression"];
m7_2 -> m7_0  [key=0, style=bold, color=blue];
m7_341 -> m7_143  [key=1, style=dashed, color=green, label=options];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid, color=red];
m9_1 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label=writer];
m9_2 -> m9_3  [key=0, style=solid, color=red];
m9_2 -> m9_9  [key=2, style=dotted, color=red];
m9_2 -> m9_10  [key=2, style=dotted, color=red];
m9_2 -> m9_4  [key=1, style=dashed, color=red, label=parser];
m9_6 -> m9_7  [key=0, style=solid];
m9_6 -> m9_15  [key=2, style=dotted];
m9_6 -> m9_13  [key=2, style=dotted];
m9_6 -> m9_16  [key=2, style=dotted];
m9_3 -> m9_4  [key=0, style=solid];
m9_3 -> m9_11  [key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_12  [key=2, style=dotted];
m9_5 -> m9_6  [key=0, style=solid];
m9_5 -> m9_13  [key=2, style=dotted];
m9_5 -> m9_14  [key=2, style=dotted];
m9_7 -> m9_0  [key=0, style=bold, color=blue];
m9_17 -> m9_18  [key=0, style=solid];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_8  [key=2, style=dotted];
m9_18 -> m9_20  [key=1, style=dashed, color=darkseagreen4, label=writer];
m9_18 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=writer];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_27  [key=2, style=dotted];
m9_19 -> m9_21  [key=1, style=dashed, color=red, label=settings];
m9_20 -> m9_21  [key=0, style=solid, color=red];
m9_25 -> m9_26  [key=0, style=solid];
m9_25 -> m9_15  [key=2, style=dotted];
m9_25 -> m9_13  [key=2, style=dotted];
m9_25 -> m9_16  [key=2, style=dotted];
m9_21 -> m9_22  [key=0, style=solid, color=red];
m9_21 -> m9_9  [key=2, style=dotted, color=red];
m9_21 -> m9_23  [key=1, style=dashed, color=red, label=parser];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_11  [key=2, style=dotted];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_12  [key=2, style=dotted];
m9_24 -> m9_25  [key=0, style=solid];
m9_24 -> m9_13  [key=2, style=dotted];
m9_24 -> m9_14  [key=2, style=dotted];
m9_26 -> m9_17  [key=0, style=bold, color=blue];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_11 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_14 -> m10_16  [key=2, style=dotted];
m10_14 -> m10_17  [key=2, style=dotted];
m10_14 -> m10_18  [key=2, style=dotted];
m10_14 -> m10_19  [key=2, style=dotted];
m10_14 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_14 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_13 -> m10_15  [key=0, style=solid];
m10_13 -> m10_5  [key=2, style=dotted];
m10_15 -> m10_11  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_0 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_6  [key=2, style=dotted];
m10_3 -> m10_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m10_2 -> m10_4  [key=0, style=solid];
m10_2 -> m10_5  [key=2, style=dotted];
m10_4 -> m10_0  [key=0, style=bold, color=blue];
m10_23 -> m10_24  [key=0, style=solid];
m10_8 -> m10_9  [key=0, style=solid];
m10_8 -> m10_10  [key=2, style=dotted];
m10_7 -> m10_8  [key=0, style=solid];
m10_9 -> m10_7  [key=0, style=bold, color=blue];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_10  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_22 -> m10_20  [key=0, style=bold, color=blue];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_26  [key=2, style=dotted];
m10_25 -> m10_23  [key=0, style=bold, color=blue];
m10_27 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_28 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m10_29 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m10_30 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m12_21 -> m12_22  [key=0, style=solid, color=green];
m12_22 -> m12_23  [key=0, style=solid, color=green];
m12_22 -> m12_11  [key=2, style=dotted, color=green];
m12_22 -> m12_13  [key=2, style=dotted, color=green];
m12_23 -> m12_21  [key=0, style=bold, color=blue];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [key=0, style=solid, color=green];
m12_16 -> m12_20  [key=2, style=dotted];
m12_17 -> m12_18  [key=0, style=solid, color=green];
m12_17 -> m12_10  [key=2, style=dotted, color=green];
m12_18 -> m12_19  [key=0, style=solid];
m12_18 -> m12_11  [key=2, style=dotted];
m12_18 -> m12_12  [key=2, style=dotted];
m12_19 -> m12_15  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_1 -> m12_9  [key=2, style=dotted];
m12_1 -> m12_4  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_1 -> m12_5  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_1 -> m12_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_1 -> m12_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_2 -> m12_3  [key=0, style=solid, color=green];
m12_2 -> m12_10  [key=2, style=dotted, color=green];
m12_4 -> m12_5  [key=0, style=solid];
m12_4 -> m12_11  [key=2, style=dotted];
m12_4 -> m12_13  [key=2, style=dotted];
m12_5 -> m12_6  [key=0, style=solid];
m12_5 -> m12_11  [key=2, style=dotted];
m12_5 -> m12_13  [key=2, style=dotted];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_11  [key=2, style=dotted];
m12_6 -> m12_12  [key=2, style=dotted];
m12_7 -> m12_8  [key=0, style=solid];
m12_7 -> m12_14  [key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_11  [key=2, style=dotted];
m12_3 -> m12_12  [key=2, style=dotted];
m12_8 -> m12_0  [key=0, style=bold, color=blue];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m15_10 -> m15_14  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m15_10 -> m15_10  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate"];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_14  [key=0, style=solid];
m15_11 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=guard];
m15_11 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label=guard];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_11  [key=0, style=solid];
m15_12 -> m15_16  [key=2, style=dotted];
m15_12 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_14 -> m15_15  [key=0, style=solid];
m15_13 -> m15_15  [key=0, style=solid];
m15_13 -> m15_17  [key=2, style=dotted];
m15_15 -> m15_10  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_0  [key=0, style=bold, color=blue];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_3  [key=0, style=bold, color=blue];
m15_18 -> m15_19  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_21  [key=2, style=dotted];
m15_20 -> m15_18  [key=0, style=bold, color=blue];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m15_22 -> m15_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m15_22 -> m15_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_25  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_28  [key=0, style=solid];
m15_25 -> m15_36  [key=2, style=dotted];
m15_29 -> m15_30  [key=0, style=solid];
m15_29 -> m15_31  [key=1, style=dashed, color=darkseagreen4, label=min];
m15_30 -> m15_31  [key=0, style=solid];
m15_30 -> m15_32  [key=1, style=dashed, color=darkseagreen4, label=max];
m15_24 -> m15_34  [key=0, style=solid];
m15_24 -> m15_35  [key=2, style=dotted];
m15_26 -> m15_27  [key=0, style=solid];
m15_28 -> m15_29  [key=0, style=solid];
m15_27 -> m15_34  [key=0, style=solid];
m15_27 -> m15_37  [key=2, style=dotted];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_33  [key=0, style=solid];
m15_32 -> m15_34  [key=0, style=solid];
m15_32 -> m15_37  [key=2, style=dotted];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_38  [key=2, style=dotted];
m15_34 -> m15_22  [key=0, style=bold, color=blue];
m15_39 -> m15_40  [key=0, style=solid];
m15_40 -> m15_41  [key=0, style=solid];
m15_41 -> m15_39  [key=0, style=bold, color=blue];
m15_45 -> m15_46  [key=0, style=solid];
m15_46 -> m15_47  [key=0, style=solid];
m15_46 -> m15_48  [key=2, style=dotted];
m15_47 -> m15_45  [key=0, style=bold, color=blue];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_9  [key=2, style=dotted];
m15_8 -> m15_6  [key=0, style=bold, color=blue];
m15_42 -> m15_43  [key=0, style=solid];
m15_43 -> m15_44  [key=0, style=solid];
m15_44 -> m15_42  [key=0, style=bold, color=blue];
m15_49 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=guard];
m16_53 -> m16_54  [key=0, style=solid];
m16_16 -> m16_17  [key=0, style=solid];
m16_16 -> m16_49  [key=2, style=dotted];
m16_16 -> m16_19  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_44  [key=0, style=solid];
m16_19 -> m16_51  [key=2, style=dotted];
m16_21 -> m16_22  [key=0, style=solid, color=green];
m16_21 -> m16_13  [key=2, style=dotted, color=green];
m16_21 -> m16_53  [key=2, style=dotted];
m16_21 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label=items];
m16_20 -> m16_21  [key=0, style=solid, color=red];
m16_20 -> m16_31  [key=2, style=dotted];
m16_20 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_20 -> m16_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_20 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_20 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_20 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_20 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_20 -> m16_29  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_20 -> m16_52  [key=2, style=dotted, color=red];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_14  [key=2, style=dotted];
m16_22 -> m16_54  [key=2, style=dotted];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_15  [key=2, style=dotted];
m16_24 -> m16_17  [key=2, style=dotted];
m16_24 -> m16_26  [key=0, style=solid];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_15  [key=2, style=dotted];
m16_25 -> m16_17  [key=2, style=dotted];
m16_25 -> m16_50  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_15  [key=2, style=dotted];
m16_26 -> m16_17  [key=2, style=dotted];
m16_26 -> m16_44  [key=0, style=solid];
m16_26 -> m16_51  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_15  [key=2, style=dotted];
m16_27 -> m16_32  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_15  [key=2, style=dotted];
m16_28 -> m16_33  [key=2, style=dotted];
m16_28 -> m16_49  [key=2, style=dotted];
m16_28 -> m16_31  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_18  [key=2, style=dotted];
m16_29 -> m16_31  [key=0, style=solid];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_15  [key=2, style=dotted];
m16_23 -> m16_16  [key=2, style=dotted];
m16_23 -> m16_55  [key=2, style=dotted];
m16_23 -> m16_26  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m16_30 -> m16_19  [key=0, style=bold, color=blue];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_50  [key=2, style=dotted];
m16_52 -> m16_50  [key=0, style=bold, color=blue];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_55  [key=2, style=dotted];
m16_34 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m16_36 -> m16_37  [key=0, style=solid, color=green];
m16_36 -> m16_13  [key=2, style=dotted, color=green];
m16_36 -> m16_50  [key=2, style=dotted];
m16_35 -> m16_36  [key=0, style=solid, color=green];
m16_35 -> m16_31  [key=2, style=dotted];
m16_35 -> m16_37  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_14  [key=2, style=dotted];
m16_37 -> m16_44  [key=0, style=solid];
m16_37 -> m16_51  [key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_15  [key=2, style=dotted];
m16_38 -> m16_33  [key=2, style=dotted];
m16_38 -> m16_40  [key=0, style=solid];
m16_39 -> m16_34  [key=0, style=bold, color=blue];
m16_39 -> m16_44  [key=0, style=solid];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_27  [key=0, style=solid];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_53  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid, color=red];
m16_32 -> m16_52  [key=2, style=dotted, color=red];
m16_13 -> m16_44  [key=0, style=solid];
m16_54 -> m16_55  [key=0, style=solid, color=green];
m16_54 -> m16_48  [key=2, style=dotted];
m16_54 -> m16_56  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_50 -> m16_51  [key=0, style=solid];
m16_51 -> m16_52  [key=0, style=solid];
m16_55 -> m16_56  [key=0, style=solid, color=green];
m16_55 -> m16_13  [key=2, style=dotted, color=green];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_14  [key=2, style=dotted];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_15  [key=2, style=dotted];
m16_57 -> m16_33  [key=2, style=dotted];
m16_58 -> m16_53  [key=0, style=bold, color=blue];
m16_58 -> m16_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.LongOptionParser"];
m16_58 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.LongOptionParser"];
m16_58 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.LongOptionParser"];
m16_58 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.LongOptionParser"];
m16_58 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.LongOptionParser"];
m16_58 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.LongOptionParser"];
m16_58 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.LongOptionParser"];
m16_31 -> m16_44  [key=0, style=solid];
m16_31 -> m16_56  [key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m16_3 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
m16_3 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=object];
m16_3 -> m16_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
m16_3 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label=object];
m16_3 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
m16_3 -> m16_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
m16_3 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label=object];
m16_3 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label=object];
m16_3 -> m16_13  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Internal.PresentParserState Parse"];
m16_3 -> m16_14  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_45  [key=2, style=dotted];
m16_4 -> m16_46  [key=2, style=dotted];
m16_4 -> m16_12  [key=1, style=dashed, color=darkseagreen4, label=parts];
m16_4 -> m16_14  [key=1, style=dashed, color=darkseagreen4, label=parts];
m16_4 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=parts];
m16_4 -> m16_22  [key=1, style=dashed, color=darkseagreen4, label=parts];
m16_4 -> m16_38  [key=1, style=dashed, color=darkseagreen4, label=parts];
m16_4 -> m16_15  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_11  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_15  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_16  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_18  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_20  [key=1, style=dashed, color=red, label=option];
m16_5 -> m16_23  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_25  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_27  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_28  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_30  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_32  [key=1, style=dashed, color=red, label=option];
m16_5 -> m16_34  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_36  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_40  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_42  [key=1, style=dashed, color=darkseagreen4, label=option];
m16_5 -> m16_17  [key=2, style=dotted];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_14  [key=0, style=solid];
m16_12 -> m16_48  [key=2, style=dotted];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_57  [key=2, style=dotted];
m16_40 -> m16_43  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_15  [key=2, style=dotted];
m16_6 -> m16_17  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_9  [key=0, style=solid];
m16_7 -> m16_15  [key=2, style=dotted];
m16_7 -> m16_17  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_15  [key=2, style=dotted];
m16_9 -> m16_16  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_47  [key=2, style=dotted];
m16_10 -> m16_18  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_38  [key=0, style=solid];
m16_11 -> m16_0  [key=0, style=bold, color=blue];
m16_15 -> m16_16  [key=0, style=solid];
m16_15 -> m16_20  [key=0, style=solid, color=red];
m16_18 -> m16_19  [key=0, style=solid];
m16_18 -> m16_50  [key=2, style=dotted];
m16_42 -> m16_43  [key=0, style=solid, color=green];
m16_42 -> m16_50  [key=2, style=dotted];
m16_42 -> m16_13  [key=2, style=dotted, color=green];
m16_8 -> m16_44  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_15  [key=2, style=dotted];
m16_8 -> m16_17  [key=2, style=dotted];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_19  [key=0, style=solid];
m16_41 -> m16_42  [key=0, style=solid, color=green];
m16_41 -> m16_43  [key=0, style=solid];
m16_41 -> m16_48  [key=2, style=dotted];
m16_41 -> m16_45  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_41 -> m16_46  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_51  [key=2, style=dotted];
m16_43 -> m16_14  [key=2, style=dotted];
m16_44 -> m16_3  [key=0, style=bold, color=blue];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_15  [key=2, style=dotted];
m16_44 -> m16_16  [key=2, style=dotted];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_18  [key=2, style=dotted];
m16_47 -> m16_40  [key=0, style=bold, color=blue];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_15  [key=2, style=dotted];
m16_45 -> m16_49  [key=2, style=dotted];
m16_45 -> m16_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid, color=green];
m16_1 -> m16_12  [key=2, style=dotted];
m16_1 -> m16_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_1 -> m16_5  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_1 -> m16_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_1 -> m16_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_1 -> m16_8  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_1 -> m16_9  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_1 -> m16_10  [key=1, style=dashed, color=darkseagreen4, label=options];
m16_2 -> m16_0  [key=0, style=bold, color=blue];
m16_2 -> m16_3  [key=0, style=solid, color=green];
m16_2 -> m16_13  [key=2, style=dotted, color=green];
m17_14 -> m17_15  [key=0, style=solid];
m17_15 -> m17_16  [key=0, style=solid];
m17_15 -> m17_19  [key=2, style=dotted];
m17_15 -> m17_17  [key=1, style=dashed, color=darkseagreen4, label=expected];
m17_16 -> m17_17  [key=0, style=solid];
m17_16 -> m17_19  [key=2, style=dotted];
m17_16 -> m17_20  [key=2, style=dotted];
m17_16 -> m17_5  [key=2, style=dotted];
m17_16 -> m17_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_17 -> m17_18  [key=0, style=solid];
m17_17 -> m17_6  [key=2, style=dotted];
m17_18 -> m17_14  [key=0, style=bold, color=blue];
m17_21 -> m17_22  [key=0, style=solid];
m17_7 -> m17_8  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=2, style=dotted];
m17_8 -> m17_11  [key=2, style=dotted];
m17_8 -> m17_12  [key=2, style=dotted];
m17_8 -> m17_13  [key=2, style=dotted];
m17_9 -> m17_7  [key=0, style=bold, color=blue];
m17_22 -> m17_23  [key=0, style=solid];
m17_22 -> m17_10  [key=2, style=dotted];
m17_22 -> m17_11  [key=2, style=dotted];
m17_22 -> m17_12  [key=2, style=dotted];
m17_22 -> m17_13  [key=2, style=dotted];
m17_23 -> m17_21  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=1, style=dashed, color=red, label=expected];
m17_2 -> m17_3  [key=0, style=solid, color=red];
m17_2 -> m17_5  [key=2, style=dotted];
m17_2 -> m17_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_3 -> m17_4  [key=0, style=solid, color=red];
m17_3 -> m17_6  [key=2, style=dotted, color=red];
m17_4 -> m17_0  [key=0, style=bold, color=blue];
m18_15 -> m18_16  [key=0, style=solid];
m18_35 -> m18_36  [key=0, style=solid];
m18_35 -> m18_14  [key=2, style=dotted];
m18_35 -> m18_16  [key=2, style=dotted];
m18_23 -> m18_24  [key=0, style=solid];
m18_23 -> m18_14  [key=2, style=dotted];
m18_23 -> m18_27  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_18  [key=2, style=dotted];
m18_17 -> m18_15  [key=0, style=bold, color=blue];
m18_17 -> m18_18  [key=0, style=solid];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_14  [key=2, style=dotted];
m18_39 -> m18_16  [key=2, style=dotted];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_27  [key=2, style=dotted];
m18_40 -> m18_29  [key=0, style=bold, color=blue];
m18_41 -> m18_39  [key=0, style=bold, color=blue];
m18_36 -> m18_37  [key=0, style=solid];
m18_36 -> m18_14  [key=2, style=dotted];
m18_36 -> m18_16  [key=2, style=dotted];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_27  [key=2, style=dotted];
m18_37 -> m18_14  [key=2, style=dotted];
m18_37 -> m18_16  [key=2, style=dotted];
m18_38 -> m18_36  [key=0, style=bold, color=blue];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_14  [key=2, style=dotted];
m18_38 -> m18_16  [key=2, style=dotted];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_14  [key=2, style=dotted];
m18_7 -> m18_16  [key=2, style=dotted];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_0 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_2 -> m18_3  [key=0, style=solid, color=green];
m18_2 -> m18_12  [key=2, style=dotted, color=green];
m18_2 -> m18_5  [key=0, style=solid];
m18_2 -> m18_7  [key=2, style=dotted];
m18_1 -> m18_2  [key=0, style=solid, color=green];
m18_1 -> m18_11  [key=2, style=dotted];
m18_1 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_1 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_1 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_1 -> m18_7  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_1 -> m18_8  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_1 -> m18_9  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_13  [key=2, style=dotted];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_14  [key=2, style=dotted];
m18_5 -> m18_15  [key=2, style=dotted];
m18_5 -> m18_0  [key=0, style=bold, color=blue];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_14  [key=2, style=dotted];
m18_6 -> m18_16  [key=2, style=dotted];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_14  [key=2, style=dotted];
m18_8 -> m18_16  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_14  [key=2, style=dotted];
m18_9 -> m18_16  [key=2, style=dotted];
m18_9 -> m18_11  [key=2, style=dotted];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_14  [key=2, style=dotted];
m18_4 -> m18_15  [key=2, style=dotted];
m18_10 -> m18_0  [key=0, style=bold, color=blue];
m18_10 -> m18_8  [key=0, style=bold, color=blue];
m18_19 -> m18_20  [key=0, style=solid, color=green];
m18_19 -> m18_12  [key=2, style=dotted, color=green];
m18_19 -> m18_22  [key=2, style=dotted];
m18_18 -> m18_19  [key=0, style=solid, color=green];
m18_18 -> m18_11  [key=2, style=dotted];
m18_18 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_18 -> m18_22  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_18 -> m18_23  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_18 -> m18_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_18 -> m18_25  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_20 -> m18_21  [key=0, style=solid];
m18_20 -> m18_13  [key=2, style=dotted];
m18_20 -> m18_23  [key=2, style=dotted];
m18_20 -> m18_24  [key=2, style=dotted];
m18_20 -> m18_25  [key=2, style=dotted];
m18_20 -> m18_26  [key=2, style=dotted];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_14  [key=2, style=dotted];
m18_22 -> m18_15  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_14  [key=2, style=dotted];
m18_24 -> m18_16  [key=2, style=dotted];
m18_25 -> m18_26  [key=0, style=solid];
m18_25 -> m18_14  [key=2, style=dotted];
m18_25 -> m18_28  [key=2, style=dotted];
m18_21 -> m18_22  [key=0, style=solid];
m18_21 -> m18_14  [key=2, style=dotted];
m18_21 -> m18_15  [key=2, style=dotted];
m18_21 -> m18_18  [key=0, style=bold, color=blue];
m18_26 -> m18_17  [key=0, style=bold, color=blue];
m18_13 -> m18_14  [key=0, style=solid];
m18_27 -> m18_28  [key=0, style=solid];
m18_27 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m18_27 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label=string];
m18_12 -> m18_13  [key=0, style=solid];
m18_14 -> m18_12  [key=0, style=bold, color=blue];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_33  [key=0, style=solid];
m18_29 -> m18_7  [key=2, style=dotted];
m18_31 -> m18_32  [key=0, style=solid, color=green];
m18_31 -> m18_12  [key=2, style=dotted, color=green];
m18_31 -> m18_33  [key=0, style=solid];
m18_31 -> m18_34  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid, color=green];
m18_30 -> m18_41  [key=2, style=dotted];
m18_30 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_30 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_30 -> m18_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_30 -> m18_36  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_30 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_30 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_30 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_32 -> m18_33  [key=0, style=solid];
m18_32 -> m18_13  [key=2, style=dotted];
m18_32 -> m18_23  [key=2, style=dotted];
m18_32 -> m18_24  [key=2, style=dotted];
m18_32 -> m18_26  [key=2, style=dotted];
m18_32 -> m18_35  [key=2, style=dotted];
m18_34 -> m18_35  [key=0, style=solid];
m18_34 -> m18_14  [key=2, style=dotted];
m18_34 -> m18_16  [key=2, style=dotted];
m18_33 -> m18_34  [key=0, style=solid];
m18_33 -> m18_14  [key=2, style=dotted];
m18_33 -> m18_15  [key=2, style=dotted];
m18_33 -> m18_27  [key=0, style=bold, color=blue];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
m18_42 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
m18_42 -> m18_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
m18_42 -> m18_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
m18_42 -> m18_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
m18_42 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
m18_42 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
m18_44 -> m18_45  [key=0, style=solid, color=green];
m18_44 -> m18_12  [key=2, style=dotted, color=green];
m18_43 -> m18_44  [key=0, style=solid, color=green];
m18_43 -> m18_41  [key=2, style=dotted];
m18_43 -> m18_45  [key=1, style=dashed, color=darkseagreen4, label=options];
m18_45 -> m18_46  [key=0, style=solid];
m18_45 -> m18_13  [key=2, style=dotted];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_14  [key=2, style=dotted];
m18_46 -> m18_48  [key=2, style=dotted];
m18_47 -> m18_42  [key=0, style=bold, color=blue];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_30  [key=0, style=solid];
m18_28 -> m18_6  [key=2, style=dotted];
m19_95 -> m19_96  [key=0, style=solid];
m19_96 -> m19_97  [key=0, style=solid];
m19_96 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_96 -> m19_100  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_97 -> m19_98  [key=0, style=solid];
m19_97 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_97 -> m19_100  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_98 -> m19_99  [key=0, style=solid, color=red];
m19_98 -> m19_105  [key=2, style=dotted];
m19_98 -> m19_100  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_99 -> m19_100  [key=0, style=solid, color=red];
m19_99 -> m19_18  [key=2, style=dotted, color=red];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_19  [key=2, style=dotted];
m19_100 -> m19_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_100 -> m19_102  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_100 -> m19_103  [key=1, style=dashed, color=darkseagreen4, label=invokedVerbInstance];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_16  [key=2, style=dotted];
m19_101 -> m19_65  [key=2, style=dotted];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_16  [key=2, style=dotted];
m19_102 -> m19_21  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_103 -> m19_16  [key=2, style=dotted];
m19_103 -> m19_17  [key=2, style=dotted];
m19_104 -> m19_95  [key=0, style=bold, color=blue];
m19_29 -> m19_30  [key=0, style=solid];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_30 -> m19_37  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_31 -> m19_37  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_44  [key=2, style=dotted];
m19_32 -> m19_45  [key=2, style=dotted];
m19_32 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label=proof];
m19_32 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label=proof];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_15  [key=2, style=dotted];
m19_33 -> m19_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_33 -> m19_37  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_33 -> m19_41  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_33 -> m19_42  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_35 -> m19_36  [key=0, style=solid, color=red];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_16  [key=2, style=dotted];
m19_41 -> m19_21  [key=2, style=dotted];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_16  [key=2, style=dotted];
m19_34 -> m19_23  [key=2, style=dotted];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_19  [key=2, style=dotted];
m19_37 -> m19_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_37 -> m19_39  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_37 -> m19_40  [key=1, style=dashed, color=darkseagreen4, label=invokedVerbInstance];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_16  [key=2, style=dotted];
m19_42 -> m19_20  [key=2, style=dotted];
m19_36 -> m19_37  [key=0, style=solid, color=red];
m19_36 -> m19_18  [key=2, style=dotted, color=red];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_16  [key=2, style=dotted];
m19_38 -> m19_20  [key=2, style=dotted];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_16  [key=2, style=dotted];
m19_39 -> m19_21  [key=2, style=dotted];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_16  [key=2, style=dotted];
m19_40 -> m19_22  [key=2, style=dotted];
m19_43 -> m19_29  [key=0, style=bold, color=blue];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_108  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_27  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_28  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_27 -> m19_28  [key=0, style=solid];
m19_28 -> m19_25  [key=0, style=bold, color=blue];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_48  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_49  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_48 -> m19_49  [key=0, style=solid];
m19_49 -> m19_46  [key=0, style=bold, color=blue];
m19_69 -> m19_70  [key=0, style=solid, color=red];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_73  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_68 -> m19_69  [key=0, style=solid, color=red];
m19_70 -> m19_68  [key=0, style=bold, color=blue];
m19_72 -> m19_73  [key=0, style=solid];
m19_72 -> m19_74  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_73 -> m19_74  [key=0, style=solid];
m19_74 -> m19_71  [key=0, style=bold, color=blue];
m19_89 -> m19_90  [key=0, style=solid, color=red];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_93  [key=1, style=dashed, color=darkseagreen4, label=object];
m19_88 -> m19_89  [key=0, style=solid, color=red];
m19_90 -> m19_88  [key=0, style=bold, color=blue];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_94  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_93 -> m19_94  [key=0, style=solid];
m19_94 -> m19_91  [key=0, style=bold, color=blue];
m19_107 -> m19_108  [key=0, style=solid];
m19_107 -> m19_109  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_108 -> m19_109  [key=0, style=solid];
m19_109 -> m19_106  [key=0, style=bold, color=blue];
m19_50 -> m19_51  [key=0, style=solid];
m19_51 -> m19_52  [key=0, style=solid];
m19_51 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_51 -> m19_56  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_52 -> m19_53  [key=0, style=solid];
m19_52 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_52 -> m19_56  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_15  [key=2, style=dotted];
m19_53 -> m19_56  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_54 -> m19_55  [key=0, style=solid, color=red];
m19_54 -> m19_63  [key=2, style=dotted];
m19_54 -> m19_69  [key=1, style=dashed, color=red, label=testWriter];
m19_54 -> m19_60  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_19  [key=2, style=dotted];
m19_56 -> m19_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_56 -> m19_58  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_56 -> m19_59  [key=1, style=dashed, color=darkseagreen4, label=invokedVerbInstance];
m19_55 -> m19_56  [key=0, style=solid, color=red];
m19_55 -> m19_64  [key=2, style=dotted, color=red];
m19_55 -> m19_69  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_67  [key=2, style=dotted];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_16  [key=2, style=dotted];
m19_57 -> m19_65  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_16  [key=2, style=dotted];
m19_58 -> m19_66  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_16  [key=2, style=dotted];
m19_59 -> m19_17  [key=2, style=dotted];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_16  [key=2, style=dotted];
m19_61 -> m19_21  [key=2, style=dotted];
m19_62 -> m19_50  [key=0, style=bold, color=blue];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_1 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_2 -> m19_6  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_15  [key=2, style=dotted];
m19_3 -> m19_6  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_3 -> m19_10  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_3 -> m19_11  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_3 -> m19_12  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_3 -> m19_13  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_4 -> m19_5  [key=0, style=solid, color=red];
m19_4 -> m19_16  [key=2, style=dotted];
m19_4 -> m19_17  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_19  [key=2, style=dotted];
m19_6 -> m19_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_6 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_6 -> m19_9  [key=1, style=dashed, color=darkseagreen4, label=invokedVerbInstance];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_16  [key=2, style=dotted];
m19_10 -> m19_23  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_16  [key=2, style=dotted];
m19_11 -> m19_24  [key=2, style=dotted];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_16  [key=2, style=dotted];
m19_12 -> m19_20  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_16  [key=2, style=dotted];
m19_13 -> m19_21  [key=2, style=dotted];
m19_5 -> m19_6  [key=0, style=solid, color=red];
m19_5 -> m19_18  [key=2, style=dotted, color=red];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_16  [key=2, style=dotted];
m19_7 -> m19_20  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_16  [key=2, style=dotted];
m19_8 -> m19_21  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_16  [key=2, style=dotted];
m19_9 -> m19_22  [key=2, style=dotted];
m19_14 -> m19_0  [key=0, style=bold, color=blue];
m19_75 -> m19_76  [key=0, style=solid];
m19_76 -> m19_77  [key=0, style=solid];
m19_76 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_76 -> m19_81  [key=3, color=darkorchid, style=bold, label="Local variable string invokedVerb"];
m19_77 -> m19_78  [key=0, style=solid];
m19_77 -> m19_1  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_77 -> m19_81  [key=3, color=darkorchid, style=bold, label="Local variable object invokedVerbInstance"];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_15  [key=2, style=dotted];
m19_78 -> m19_81  [key=1, style=dashed, color=darkseagreen4, label=options];
m19_79 -> m19_80  [key=0, style=solid, color=red];
m19_79 -> m19_63  [key=2, style=dotted];
m19_79 -> m19_89  [key=1, style=dashed, color=red, label=testWriter];
m19_79 -> m19_85  [key=1, style=dashed, color=darkseagreen4, label=testWriter];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_19  [key=2, style=dotted];
m19_81 -> m19_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m19_81 -> m19_83  [key=1, style=dashed, color=darkseagreen4, label=invokedVerb];
m19_81 -> m19_84  [key=1, style=dashed, color=darkseagreen4, label=invokedVerbInstance];
m19_80 -> m19_81  [key=0, style=solid, color=red];
m19_80 -> m19_64  [key=2, style=dotted, color=red];
m19_80 -> m19_89  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_67  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_16  [key=2, style=dotted];
m19_82 -> m19_65  [key=2, style=dotted];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_16  [key=2, style=dotted];
m19_83 -> m19_21  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_84 -> m19_16  [key=2, style=dotted];
m19_84 -> m19_17  [key=2, style=dotted];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_16  [key=2, style=dotted];
m19_86 -> m19_21  [key=2, style=dotted];
m19_87 -> m19_75  [key=0, style=bold, color=blue];
m19_110 -> m19_69  [key=1, style=dashed, color=red, label=testWriter];
m19_111 -> m19_89  [key=1, style=dashed, color=red, label=testWriter];
m20_0 -> m20_1  [key=0, style=solid];
m20_3 -> m20_9  [key=2, style=dotted];
m20_3 -> m20_4  [key=0, style=solid];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_8  [key=2, style=dotted];
m20_2 -> m20_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_10  [key=2, style=dotted];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_1 -> m20_7  [key=2, style=dotted];
m20_1 -> m20_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_11  [key=2, style=dotted];
m20_6 -> m20_0  [key=0, style=bold, color=blue];
m20_100 -> m20_101  [key=0, style=solid];
m20_102 -> m20_44  [key=2, style=dotted];
m20_102 -> m20_103  [key=0, style=solid];
m20_103 -> m20_9  [key=2, style=dotted];
m20_103 -> m20_104  [key=0, style=solid];
m20_103 -> m20_105  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_101 -> m20_102  [key=0, style=solid];
m20_101 -> m20_107  [key=2, style=dotted];
m20_101 -> m20_105  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m20_101 -> m20_115  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m20_104 -> m20_105  [key=0, style=solid];
m20_104 -> m20_108  [key=2, style=dotted];
m20_104 -> m20_109  [key=2, style=dotted];
m20_104 -> m20_111  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_105 -> m20_106  [key=0, style=solid];
m20_105 -> m20_108  [key=2, style=dotted];
m20_105 -> m20_110  [key=2, style=dotted];
m20_105 -> m20_114  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_106 -> m20_100  [key=0, style=bold, color=blue];
m20_162 -> m20_163  [key=0, style=solid];
m20_170 -> m20_45  [key=2, style=dotted];
m20_170 -> m20_171  [key=0, style=solid];
m20_171 -> m20_45  [key=2, style=dotted];
m20_171 -> m20_172  [key=0, style=solid];
m20_172 -> m20_45  [key=2, style=dotted];
m20_172 -> m20_173  [key=0, style=solid];
m20_173 -> m20_45  [key=2, style=dotted];
m20_173 -> m20_174  [key=0, style=solid];
m20_174 -> m20_45  [key=2, style=dotted];
m20_174 -> m20_175  [key=0, style=solid];
m20_175 -> m20_45  [key=2, style=dotted];
m20_175 -> m20_176  [key=0, style=solid];
m20_176 -> m20_45  [key=2, style=dotted];
m20_176 -> m20_177  [key=0, style=solid];
m20_168 -> m20_170  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_168 -> m20_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_168 -> m20_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_168 -> m20_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_168 -> m20_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_168 -> m20_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_168 -> m20_176  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_168 -> m20_169  [key=0, style=solid];
m20_168 -> m20_153  [key=2, style=dotted];
m20_168 -> m20_154  [key=2, style=dotted];
m20_169 -> m20_170  [key=0, style=solid];
m20_169 -> m20_108  [key=2, style=dotted];
m20_169 -> m20_155  [key=2, style=dotted];
m20_165 -> m20_33  [key=2, style=dotted];
m20_165 -> m20_166  [key=0, style=solid];
m20_166 -> m20_168  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_166 -> m20_10  [key=2, style=dotted];
m20_166 -> m20_167  [key=0, style=solid];
m20_167 -> m20_168  [key=0, style=solid];
m20_167 -> m20_108  [key=2, style=dotted];
m20_167 -> m20_125  [key=2, style=dotted];
m20_164 -> m20_8  [key=2, style=dotted];
m20_164 -> m20_165  [key=0, style=solid];
m20_164 -> m20_179  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_163 -> m20_166  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_163 -> m20_7  [key=2, style=dotted];
m20_163 -> m20_164  [key=0, style=solid];
m20_163 -> m20_179  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_177 -> m20_162  [key=0, style=bold, color=blue];
m20_118 -> m20_119  [key=0, style=solid];
m20_121 -> m20_9  [key=2, style=dotted];
m20_121 -> m20_122  [key=0, style=solid];
m20_120 -> m20_121  [key=0, style=solid];
m20_120 -> m20_8  [key=2, style=dotted];
m20_120 -> m20_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_122 -> m20_123  [key=0, style=solid];
m20_122 -> m20_10  [key=2, style=dotted];
m20_119 -> m20_120  [key=0, style=solid];
m20_119 -> m20_122  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_119 -> m20_7  [key=2, style=dotted];
m20_119 -> m20_127  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_123 -> m20_108  [key=2, style=dotted];
m20_123 -> m20_124  [key=0, style=solid];
m20_123 -> m20_125  [key=2, style=dotted];
m20_124 -> m20_118  [key=0, style=bold, color=blue];
m20_46 -> m20_47  [key=0, style=solid];
m20_49 -> m20_9  [key=2, style=dotted];
m20_49 -> m20_50  [key=0, style=solid];
m20_50 -> m20_45  [key=2, style=dotted];
m20_50 -> m20_51  [key=0, style=solid];
m20_48 -> m20_49  [key=0, style=solid];
m20_48 -> m20_8  [key=2, style=dotted];
m20_48 -> m20_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_47 -> m20_50  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m20_47 -> m20_48  [key=0, style=solid];
m20_47 -> m20_52  [key=2, style=dotted];
m20_51 -> m20_46  [key=0, style=bold, color=blue];
m20_83 -> m20_84  [key=0, style=solid];
m20_85 -> m20_44  [key=2, style=dotted];
m20_85 -> m20_86  [key=0, style=solid];
m20_84 -> m20_85  [key=0, style=solid];
m20_84 -> m20_79  [key=2, style=dotted];
m20_84 -> m20_88  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m20_86 -> m20_87  [key=0, style=solid];
m20_86 -> m20_33  [key=2, style=dotted];
m20_86 -> m20_88  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_88 -> m20_45  [key=2, style=dotted];
m20_88 -> m20_89  [key=0, style=solid];
m20_88 -> m20_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_87 -> m20_88  [key=0, style=solid];
m20_87 -> m20_64  [key=2, style=dotted];
m20_89 -> m20_83  [key=0, style=bold, color=blue];
m20_56 -> m20_57  [key=0, style=solid];
m20_61 -> m20_45  [key=2, style=dotted];
m20_61 -> m20_62  [key=0, style=solid];
m20_61 -> m20_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_57 -> m20_61  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m20_57 -> m20_58  [key=0, style=solid];
m20_57 -> m20_63  [key=2, style=dotted];
m20_59 -> m20_61  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_59 -> m20_22  [key=2, style=dotted];
m20_59 -> m20_60  [key=0, style=solid];
m20_60 -> m20_61  [key=0, style=solid];
m20_60 -> m20_64  [key=2, style=dotted];
m20_58 -> m20_59  [key=0, style=solid];
m20_58 -> m20_8  [key=2, style=dotted];
m20_58 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_62 -> m20_56  [key=0, style=bold, color=blue];
m20_129 -> m20_130  [key=0, style=solid];
m20_131 -> m20_44  [key=2, style=dotted];
m20_131 -> m20_132  [key=0, style=solid];
m20_132 -> m20_9  [key=2, style=dotted];
m20_132 -> m20_133  [key=0, style=solid];
m20_132 -> m20_134  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_130 -> m20_131  [key=0, style=solid];
m20_130 -> m20_136  [key=2, style=dotted];
m20_130 -> m20_134  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m20_130 -> m20_141  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m20_133 -> m20_134  [key=0, style=solid];
m20_133 -> m20_108  [key=2, style=dotted];
m20_133 -> m20_109  [key=2, style=dotted];
m20_133 -> m20_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_134 -> m20_135  [key=0, style=solid];
m20_134 -> m20_108  [key=2, style=dotted];
m20_134 -> m20_110  [key=2, style=dotted];
m20_134 -> m20_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_135 -> m20_129  [key=0, style=bold, color=blue];
m20_181 -> m20_182  [key=0, style=solid];
m20_189 -> m20_45  [key=2, style=dotted];
m20_189 -> m20_190  [key=0, style=solid];
m20_190 -> m20_45  [key=2, style=dotted];
m20_190 -> m20_191  [key=0, style=solid];
m20_191 -> m20_45  [key=2, style=dotted];
m20_191 -> m20_192  [key=0, style=solid];
m20_192 -> m20_45  [key=2, style=dotted];
m20_192 -> m20_193  [key=0, style=solid];
m20_193 -> m20_45  [key=2, style=dotted];
m20_193 -> m20_194  [key=0, style=solid];
m20_187 -> m20_189  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_187 -> m20_190  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_187 -> m20_191  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_187 -> m20_192  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_187 -> m20_193  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_187 -> m20_188  [key=0, style=solid];
m20_187 -> m20_153  [key=2, style=dotted];
m20_187 -> m20_154  [key=2, style=dotted];
m20_188 -> m20_189  [key=0, style=solid];
m20_188 -> m20_108  [key=2, style=dotted];
m20_188 -> m20_155  [key=2, style=dotted];
m20_184 -> m20_33  [key=2, style=dotted];
m20_184 -> m20_185  [key=0, style=solid];
m20_185 -> m20_187  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_185 -> m20_10  [key=2, style=dotted];
m20_185 -> m20_186  [key=0, style=solid];
m20_186 -> m20_187  [key=0, style=solid];
m20_186 -> m20_108  [key=2, style=dotted];
m20_186 -> m20_125  [key=2, style=dotted];
m20_183 -> m20_8  [key=2, style=dotted];
m20_183 -> m20_184  [key=0, style=solid];
m20_183 -> m20_196  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_182 -> m20_185  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_182 -> m20_7  [key=2, style=dotted];
m20_182 -> m20_183  [key=0, style=solid];
m20_182 -> m20_196  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_194 -> m20_181  [key=0, style=bold, color=blue];
m20_208 -> m20_209  [key=0, style=solid];
m20_115 -> m20_116  [key=0, style=solid];
m20_115 -> m20_117  [key=2, style=dotted];
m20_141 -> m20_142  [key=0, style=solid];
m20_141 -> m20_117  [key=2, style=dotted];
m20_68 -> m20_69  [key=0, style=solid];
m20_80 -> m20_81  [key=0, style=solid];
m20_90 -> m20_91  [key=0, style=solid];
m20_13 -> m20_14  [key=0, style=solid];
m20_54 -> m20_55  [key=0, style=solid];
m20_111 -> m20_112  [key=0, style=solid];
m20_114 -> m20_115  [key=0, style=solid];
m20_127 -> m20_128  [key=0, style=solid];
m20_137 -> m20_138  [key=0, style=solid];
m20_140 -> m20_141  [key=0, style=solid];
m20_157 -> m20_158  [key=0, style=solid];
m20_116 -> m20_114  [key=0, style=bold, color=blue];
m20_142 -> m20_140  [key=0, style=bold, color=blue];
m20_70 -> m20_68  [key=0, style=bold, color=blue];
m20_69 -> m20_70  [key=0, style=solid];
m20_69 -> m20_71  [key=2, style=dotted];
m20_82 -> m20_80  [key=0, style=bold, color=blue];
m20_81 -> m20_82  [key=0, style=solid];
m20_81 -> m20_71  [key=2, style=dotted];
m20_92 -> m20_90  [key=0, style=bold, color=blue];
m20_91 -> m20_92  [key=0, style=solid];
m20_91 -> m20_71  [key=2, style=dotted];
m20_12 -> m20_13  [key=0, style=solid];
m20_14 -> m20_12  [key=0, style=bold, color=blue];
m20_53 -> m20_54  [key=0, style=solid];
m20_55 -> m20_53  [key=0, style=bold, color=blue];
m20_113 -> m20_111  [key=0, style=bold, color=blue];
m20_112 -> m20_113  [key=0, style=solid];
m20_126 -> m20_127  [key=0, style=solid];
m20_128 -> m20_126  [key=0, style=bold, color=blue];
m20_139 -> m20_137  [key=0, style=bold, color=blue];
m20_138 -> m20_139  [key=0, style=solid];
m20_156 -> m20_157  [key=0, style=solid];
m20_158 -> m20_156  [key=0, style=bold, color=blue];
m20_66 -> m20_67  [key=0, style=solid];
m20_24 -> m20_25  [key=0, style=solid];
m20_35 -> m20_36  [key=0, style=solid];
m20_179 -> m20_180  [key=0, style=solid];
m20_196 -> m20_197  [key=0, style=solid];
m20_209 -> m20_210  [key=0, style=solid];
m20_159 -> m20_160  [key=0, style=solid];
m20_211 -> m20_212  [key=0, style=solid];
m20_65 -> m20_66  [key=0, style=solid];
m20_67 -> m20_65  [key=0, style=bold, color=blue];
m20_23 -> m20_24  [key=0, style=solid];
m20_25 -> m20_23  [key=0, style=bold, color=blue];
m20_34 -> m20_35  [key=0, style=solid];
m20_36 -> m20_34  [key=0, style=bold, color=blue];
m20_178 -> m20_179  [key=0, style=solid];
m20_180 -> m20_178  [key=0, style=bold, color=blue];
m20_195 -> m20_196  [key=0, style=solid];
m20_197 -> m20_195  [key=0, style=bold, color=blue];
m20_210 -> m20_208  [key=0, style=bold, color=blue];
m20_161 -> m20_159  [key=0, style=bold, color=blue];
m20_160 -> m20_161  [key=0, style=solid];
m20_212 -> m20_213  [key=0, style=solid];
m20_213 -> m20_211  [key=0, style=bold, color=blue];
m20_26 -> m20_27  [key=0, style=solid];
m20_29 -> m20_33  [key=2, style=dotted];
m20_29 -> m20_30  [key=0, style=solid];
m20_28 -> m20_8  [key=2, style=dotted];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_30 -> m20_10  [key=2, style=dotted];
m20_30 -> m20_31  [key=0, style=solid];
m20_27 -> m20_7  [key=2, style=dotted];
m20_27 -> m20_28  [key=0, style=solid];
m20_27 -> m20_30  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_27 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_31 -> m20_11  [key=2, style=dotted];
m20_31 -> m20_32  [key=0, style=solid];
m20_32 -> m20_26  [key=0, style=bold, color=blue];
m20_37 -> m20_38  [key=0, style=solid];
m20_39 -> m20_40  [key=0, style=solid, color=green];
m20_39 -> m20_44  [key=2, style=dotted, color=green];
m20_38 -> m20_39  [key=0, style=solid, color=green];
m20_38 -> m20_43  [key=2, style=dotted];
m20_38 -> m20_41  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_9  [key=2, style=dotted];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_45  [key=2, style=dotted];
m20_42 -> m20_37  [key=0, style=bold, color=blue];
m20_143 -> m20_144  [key=0, style=solid];
m20_146 -> m20_9  [key=2, style=dotted];
m20_146 -> m20_147  [key=0, style=solid];
m20_145 -> m20_146  [key=0, style=solid];
m20_145 -> m20_8  [key=2, style=dotted];
m20_145 -> m20_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_147 -> m20_148  [key=0, style=solid];
m20_147 -> m20_10  [key=2, style=dotted];
m20_147 -> m20_149  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_144 -> m20_145  [key=0, style=solid];
m20_144 -> m20_147  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_144 -> m20_7  [key=2, style=dotted];
m20_144 -> m20_157  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_148 -> m20_108  [key=2, style=dotted];
m20_148 -> m20_149  [key=0, style=solid];
m20_148 -> m20_125  [key=2, style=dotted];
m20_149 -> m20_150  [key=0, style=solid];
m20_149 -> m20_153  [key=2, style=dotted];
m20_149 -> m20_154  [key=2, style=dotted];
m20_149 -> m20_151  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_150 -> m20_108  [key=2, style=dotted];
m20_150 -> m20_109  [key=2, style=dotted];
m20_150 -> m20_151  [key=0, style=solid];
m20_150 -> m20_159  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_151 -> m20_108  [key=2, style=dotted];
m20_151 -> m20_155  [key=2, style=dotted];
m20_151 -> m20_152  [key=0, style=solid];
m20_152 -> m20_143  [key=0, style=bold, color=blue];
m20_93 -> m20_94  [key=0, style=solid];
m20_95 -> m20_44  [key=2, style=dotted];
m20_95 -> m20_96  [key=0, style=solid];
m20_96 -> m20_9  [key=2, style=dotted];
m20_96 -> m20_97  [key=0, style=solid];
m20_94 -> m20_95  [key=0, style=solid];
m20_94 -> m20_99  [key=2, style=dotted];
m20_94 -> m20_97  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m20_97 -> m20_45  [key=2, style=dotted];
m20_97 -> m20_98  [key=0, style=solid];
m20_98 -> m20_93  [key=0, style=bold, color=blue];
m20_15 -> m20_16  [key=0, style=solid];
m20_18 -> m20_22  [key=2, style=dotted];
m20_18 -> m20_19  [key=0, style=solid];
m20_17 -> m20_8  [key=2, style=dotted];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_19 -> m20_10  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_16 -> m20_7  [key=2, style=dotted];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_19  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_16 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_20 -> m20_11  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_21 -> m20_15  [key=0, style=bold, color=blue];
m20_72 -> m20_73  [key=0, style=solid];
m20_74 -> m20_44  [key=2, style=dotted];
m20_74 -> m20_75  [key=0, style=solid];
m20_73 -> m20_74  [key=0, style=solid];
m20_73 -> m20_79  [key=2, style=dotted];
m20_73 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m20_75 -> m20_76  [key=0, style=solid];
m20_75 -> m20_22  [key=2, style=dotted];
m20_75 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_77 -> m20_45  [key=2, style=dotted];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_64  [key=2, style=dotted];
m20_78 -> m20_72  [key=0, style=bold, color=blue];
m20_198 -> m20_201  [key=1, style=dashed, color=darkseagreen4, label=string];
m20_198 -> m20_199  [key=0, style=solid];
m20_201 -> m20_33  [key=2, style=dotted];
m20_201 -> m20_202  [key=0, style=solid];
m20_200 -> m20_8  [key=2, style=dotted];
m20_200 -> m20_201  [key=0, style=solid];
m20_200 -> m20_209  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m20_202 -> m20_10  [key=2, style=dotted];
m20_202 -> m20_203  [key=0, style=solid];
m20_202 -> m20_204  [key=1, style=dashed, color=darkseagreen4, label=result];
m20_203 -> m20_108  [key=2, style=dotted];
m20_203 -> m20_204  [key=0, style=solid];
m20_203 -> m20_125  [key=2, style=dotted];
m20_205 -> m20_108  [key=2, style=dotted];
m20_205 -> m20_109  [key=2, style=dotted];
m20_205 -> m20_206  [key=0, style=solid];
m20_205 -> m20_211  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_206 -> m20_108  [key=2, style=dotted];
m20_206 -> m20_155  [key=2, style=dotted];
m20_206 -> m20_207  [key=0, style=solid];
m20_204 -> m20_153  [key=2, style=dotted];
m20_204 -> m20_154  [key=2, style=dotted];
m20_204 -> m20_205  [key=0, style=solid];
m20_204 -> m20_206  [key=1, style=dashed, color=darkseagreen4, label=lines];
m20_199 -> m20_7  [key=2, style=dotted];
m20_199 -> m20_200  [key=0, style=solid];
m20_199 -> m20_202  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_199 -> m20_209  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_207 -> m20_198  [key=0, style=bold, color=blue];
m20_217 -> m20_115  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m20_219 -> m20_141  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m20_214 -> m20_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_218 -> m20_127  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_220 -> m20_157  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_215 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_216 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label=writer];
m20_221 -> m20_179  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_222 -> m20_196  [key=1, style=dashed, color=darkseagreen4, label=help];
m20_223 -> m20_209  [key=1, style=dashed, color=darkseagreen4, label=help];
}
