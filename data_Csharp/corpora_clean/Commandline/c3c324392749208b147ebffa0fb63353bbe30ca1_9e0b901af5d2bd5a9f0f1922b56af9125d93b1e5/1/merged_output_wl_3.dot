digraph  {
n0 [cluster="Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeTests()", label="Entry Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeTests()", span="7-7"];
n1 [cluster="Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeTests()", label="Exit Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeTests()", span="7-7"];
n2 [cluster="Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeString(string, string)", label="Entry Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeString(string, string)", span="23-23"];
n3 [cluster="Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeString(string, string)", label="Assert.Equal(number.Ordinalize(), ordinalized)", span="25-25"];
n4 [cluster="Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeString(string, string)", label="Exit Humanizer.Tests.Localisation.de.OrdinalizeTests.OrdinalizeString(string, string)", span="23-23"];
n5 [cluster="string.Ordinalize()", label="Entry string.Ordinalize()", span="26-26"];
n6 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d470 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0, label="0: return value.ToStringLocal();", span="910-910"];
d397 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="900-900"];
d469 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0, label="0: asEnumerable == null", span="909-909"];
d475 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="900-900"];
d476 [cluster="T.ToStringLocal<T>()", label="Entry T.ToStringLocal<T>()", span="20-20"];
d468 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="var asEnumerable = value as IEnumerable", span="908-908"];
d471 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0, label="0: var builder = new StringBuilder()", span="912-912"];
d472 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0, label="0: asEnumerable", span="913-913"];
d473 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0, label="0: builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="914-916"];
d474 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0, label="0: return builder.Length > 0 ? builder.ToString(0, builder.Length - 1) : string.Empty;", span="918-918"];
d478 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
d222 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
d479 [cluster="System.Text.StringBuilder.ToString(int, int)", label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0"];
d395 [cluster="lambda expression", label="optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="744-744"];
d464 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="value is bool", span="902-902"];
d465 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="return value.ToStringLocal().ToLowerInvariant();", span="903-903"];
d466 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="value is string", span="905-905"];
d467 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="return value.ToStringLocal();", span="906-906"];
d357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="743-744"];
d210 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494"];
d250 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570"];
d266 [cluster="CommandLine.Text.HelpText.ToString()", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595"];
d285 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i])", span="614-614"];
d288 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append('' '')", span="618-618"];
d291 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i].Substring(0, maximumLength))", span="624-624"];
d297 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(value)", span="636-636"];
d351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''  '')", span="727-727"];
d387 [cluster="lambda expression", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="731-731"];
d391 [cluster="lambda expression", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="732-732"];
d353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="734-736"];
d372 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="769-769"];
d378 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="784-787"];
d366 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i])", span="759-759"];
d369 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append('' '')", span="763-763"];
d490 [label=optionHelpText, span=""];
d394 [cluster="lambda expression", label="Entry lambda expression", span="744-744"];
d396 [cluster="lambda expression", label="Exit lambda expression", span="744-744"];
d383 [cluster="string.FormatInvariant(params object[])", label="Entry string.FormatInvariant(params object[])", span="25-25"];
d477 [cluster="string.ToLowerInvariant()", label="Entry string.ToLowerInvariant()", span="0-0"];
d343 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="725-725"];
d354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var optionHelpText = specification.HelpText", span="738-738"];
d355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="740-740"];
d356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="741-741"];
d358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.Required", span="746-746"];
d52 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
d359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="747-747"];
d360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="!string.IsNullOrEmpty(optionHelpText)", span="749-749"];
d362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var words = optionHelpText.Split(' ')", span="754-754"];
d375 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="777-777"];
d130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
d209 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491"];
d211 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="yield return line.ToString();", span="495-495"];
d219 [cluster="System.Text.StringBuilder.StringBuilder(string)", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
d220 [cluster="int.Spaces()", label="Entry int.Spaces()", span="35-35"];
d221 [cluster="Unk.formatError", label="Entry Unk.formatError", span=""];
d245 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var example = mapperFunc(e)", span="554-554"];
d243 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550"];
d249 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label=styles, span="559-559"];
d251 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="yield return commandLine.ToString();", span="571-571"];
d257 [cluster="System.Text.StringBuilder.Append(char)", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
d259 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
d260 [cluster="lambda expression", label="Entry lambda expression", span="565-570"];
d480 [label="CommandLine.Text.HelpText", span=""];
d265 [cluster="CommandLine.Text.HelpText.ToString()", label="int ExtraLength = 10", span="582-582"];
d267 [cluster="CommandLine.Text.HelpText.ToString()", label="Exit CommandLine.Text.HelpText.ToString()", span="580-580"];
d24 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
d268 [cluster="string.SafeLength()", label="Entry string.SafeLength()", span="45-45"];
d269 [cluster="System.Text.StringBuilder.SafeLength()", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
d270 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d271 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
d223 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
d272 [cluster="System.Text.StringBuilder.SafeToString()", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
d278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="603-603"];
d281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var words = value.Split(' ')", span="609-609"];
d284 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length < (maximumLength - wordBuffer)", span="612-612"];
d282 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var i = 0", span="610-610"];
d286 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer += words[i].Length", span="615-615"];
d287 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="616-616"];
d289 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer++", span="619-619"];
d290 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length >= maximumLength && wordBuffer == 0", span="622-622"];
d292 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer = maximumLength", span="625-625"];
d300 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
d294 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="631-631"];
d296 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value.Length > maximumLength", span="634-634"];
d298 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="603-603"];
d352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="728-732"];
d488 [label=int, span=""];
d489 [label="CommandLine.Core.Specification", span=""];
d386 [cluster="lambda expression", label="Entry lambda expression", span="731-731"];
d388 [cluster="lambda expression", label="Exit lambda expression", span="731-731"];
d389 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="792-792"];
d390 [cluster="lambda expression", label="Entry lambda expression", span="732-732"];
d392 [cluster="lambda expression", label="Exit lambda expression", span="732-732"];
d393 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="812-812"];
d382 [cluster="string.PadRight(int)", label="Entry string.PadRight(int)", span="0-0"];
d371 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="767-767"];
d363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var i = 0", span="755-755"];
d373 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer = widthOfHelpText", span="770-770"];
d377 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText.Length > widthOfHelpText", span="781-781"];
d379 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="return this;", span="789-789"];
d365 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="757-757"];
d367 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer += words[i].Length", span="760-760"];
d368 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="761-761"];
d370 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer++", span="764-764"];
d341 [cluster="lambda expression", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="693-693"];
d361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var wordBuffer = 0", span="753-753"];
d380 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="725-725"];
d376 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="778-779"];
d333 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var maxLength = GetMaxLength(specifications)", span="685-685"];
d336 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="691-693"];
d335 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var remainingSpace = maximumLength - (maxLength + 6)", span="689-689"];
d49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d203 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
d32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
d39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233"];
d40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236"];
d299 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
d364 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i < words.Length", span="755-755"];
d301 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
d302 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d384 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
d124 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296"];
d201 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466"];
d217 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
d204 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="parserResult == null", span="483-483"];
d208 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="yield break;", span="488-488"];
d216 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="yield return line;", span="506-506"];
d206 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="485-486"];
d212 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500"];
d207 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors.Empty()", span="487-487"];
d218 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d224 [cluster="lambda expression", label="Entry lambda expression", span="491-491"];
d246 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556"];
d53 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
d244 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label=examples, span="552-552"];
d50 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
d248 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var styles = example.GetFormatStylesOrDefault()", span="558-558"];
d241 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var usageTuple = usage.FromJust()", span="548-548"];
d242 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var examples = usageTuple.Item2", span="549-549"];
d256 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
d261 [cluster="lambda expression", label="config.PreferShortName = s.PreferShortName", span="567-567"];
d262 [cluster="lambda expression", label="config.GroupSwitches = s.GroupSwitches", span="568-568"];
d263 [cluster="lambda expression", label="config.UseEqualToken = s.UseEqualToken", span="569-569"];
d264 [cluster="lambda expression", label="Exit lambda expression", span="565-570"];
d17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
d18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
d19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.sentenceBuilder = sentenceBuilder", span="104-104"];
d20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.heading = heading", span="105-105"];
d21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.copyright = copyright", span="106-106"];
d136 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324"];
d140 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="return AddLine(postOptionsHelp, value);", span="335-335"];
d143 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="lines.ForEach(line => AddPreOptionsLine(line))", span="345-345"];
d148 [cluster="lambda expression", label="AddPreOptionsLine(line)", span="345-345"];
d144 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="return this;", span="346-346"];
d151 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="lines.ForEach(line => AddPostOptionsLine(line))", span="356-356"];
d155 [cluster="lambda expression", label="AddPostOptionsLine(line)", span="356-356"];
d152 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="return this;", span="357-357"];
d159 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="lines.ForEach(line => AddPreOptionsLine(line))", span="368-368"];
d164 [cluster="lambda expression", label="AddPreOptionsLine(line)", span="368-368"];
d160 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="return this;", span="369-369"];
d168 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="lines.ForEach(line => AddPostOptionsLine(line))", span="380-380"];
d172 [cluster="lambda expression", label="AddPostOptionsLine(line)", span="380-380"];
d169 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="return this;", span="381-381"];
d176 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396"];
d184 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413"];
d191 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429"];
d198 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447"];
d304 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="642-644"];
d328 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="670-677"];
d334 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="687-687"];
d337 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="return this;", span="695-695"];
d344 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="700-705"];
d346 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="710-715"];
d348 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="AddLine(preOptionsHelp, value, maximumLength)", span="720-720"];
d349 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="return this;", span="722-722"];
d398 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="794-809"];
d402 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="798-802"];
d408 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="805-808"];
d419 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="AddLine(builder, value, MaximumDisplayWidth)", span="826-826"];
d420 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="return this;", span="828-828"];
d422 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="833-841"];
d426 [cluster="lambda expression", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="836-838"];
d440 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="859-859"];
d445 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="868-868"];
d135 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
d410 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="814-821"];
d279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="605-605"];
d295 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="632-632"];
d247 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="yield return exampleText.ToString();", span="557-557"];
d280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var wordBuffer = 0", span="608-608"];
d142 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="824-824"];
d138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="718-718"];
d283 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i < words.Length", span="610-610"];
d293 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i++", span="610-610"];
d381 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
d399 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="792-792"];
d411 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="812-812"];
d413 [cluster="lambda expression", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="817-817"];
d417 [cluster="lambda expression", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="818-818"];
d374 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i++", span="755-755"];
d485 [label=string, span=""];
d486 [label=maxLength, span=""];
d487 [label=remainingSpace, span=""];
d179 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="680-680"];
d340 [cluster="lambda expression", label="Entry lambda expression", span="692-693"];
d342 [cluster="lambda expression", label="Exit lambda expression", span="692-693"];
d385 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d339 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="831-831"];
d146 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
d41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239"];
d30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="FilterMeaningfulErrors(errors).Any()", span="215-215"];
d234 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530"];
d26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207"];
d28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211"];
d31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto = onError(auto)", span="216-216"];
d33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222"];
d51 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
d62 [cluster="lambda expression", label="Entry lambda expression", span="220-220"];
d38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddPreOptionsLine(heading)", span="229-229"];
d35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="usageAttr.IsJust() || usageLines.IsJust()", span="225-225"];
d37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="heading.Length > 0", span="228-228"];
d66 [cluster="lambda expression", label="Entry lambda expression", span="233-233"];
d34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223"];
d72 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
d69 [cluster="lambda expression", label="Entry lambda expression", span="236-236"];
d102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
d122 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="290-290"];
d125 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="errors.Empty()", span="297-297"];
d127 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303"];
d200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
d202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
d205 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="throw new ArgumentNullException(''parserResult'');", span="483-483"];
d213 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="mutuallyErrs.Length > 0", span="501-501"];
d215 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label=lines, span="505-505"];
d48 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="598-598"];
d89 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
d214 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504"];
d129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
d273 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="600-600"];
d226 [cluster="lambda expression", label="Exit lambda expression", span="491-491"];
d225 [cluster="lambda expression", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491"];
d252 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
d236 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="parserResult == null", span="542-542"];
d240 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="yield break;", span="546-546"];
d238 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544"];
d230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
d258 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
d239 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="usage.MatchNothing()", span="545-545"];
d255 [cluster="CSharpx.Maybe<T>.FromJust<T>()", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
d484 [label=s, span=""];
d15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="copyright == null", span="99-99"];
d10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
d22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
d57 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
d137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
d139 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
d141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
d147 [cluster="lambda expression", label="Entry lambda expression", span="345-345"];
d149 [cluster="lambda expression", label="Exit lambda expression", span="345-345"];
d145 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
d150 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
d154 [cluster="lambda expression", label="Entry lambda expression", span="356-356"];
d156 [cluster="lambda expression", label="Exit lambda expression", span="356-356"];
d153 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
d158 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367"];
d163 [cluster="lambda expression", label="Entry lambda expression", span="368-368"];
d165 [cluster="lambda expression", label="Exit lambda expression", span="368-368"];
d161 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
d167 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379"];
d171 [cluster="lambda expression", label="Entry lambda expression", span="380-380"];
d173 [cluster="lambda expression", label="Exit lambda expression", span="380-380"];
d170 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
d61 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
d174 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="result == null", span="391-391"];
d177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
d178 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="639-639"];
d56 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
d60 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
d182 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types.Length == 0", span="408-408"];
d185 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
d187 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="668-668"];
d188 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
d189 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="result == null", span="424-424"];
d192 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
d193 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
d196 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types.Length == 0", span="442-442"];
d199 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
d303 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="641-641"];
d305 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="645-647"];
d309 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="698-698"];
d310 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="708-708"];
d311 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
d306 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="648-650"];
d329 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="668-668"];
d330 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
d331 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
d332 [cluster="Unk.Concat", label="Entry Unk.Concat", span=""];
d338 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="680-680"];
d345 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="698-698"];
d347 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="708-708"];
d350 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="718-718"];
d400 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
d401 [cluster="lambda expression", label="Entry lambda expression", span="798-802"];
d407 [cluster="lambda expression", label="Entry lambda expression", span="805-808"];
d491 [label="CommandLine.Core.OptionSpecification", span=""];
d403 [cluster="lambda expression", label="Exit lambda expression", span="798-802"];
d404 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
d405 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
d406 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
d409 [cluster="lambda expression", label="Exit lambda expression", span="805-808"];
d421 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="824-824"];
d429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="845-845"];
d430 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="880-880"];
d423 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="831-831"];
d424 [cluster="Unk.Aggregate", label="Entry Unk.Aggregate", span=""];
d425 [cluster="lambda expression", label="Entry lambda expression", span="834-841"];
d427 [cluster="lambda expression", label="return Math.Max(length, specLength);", span="840-840"];
d439 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="858-858"];
d441 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="860-860"];
d442 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="862-862"];
d444 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += spec.LongName.Length", span="867-867"];
d446 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="869-869"];
d447 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="871-871"];
d132 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
d133 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="return info.ToString();", span="313-313"];
d412 [cluster="lambda expression", label="Entry lambda expression", span="817-817"];
d416 [cluster="lambda expression", label="Entry lambda expression", span="818-818"];
d432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var specLength = 0", span="847-847"];
d435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var metaLength = 0", span="852-852"];
d452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var specLength = 0", span="882-882"];
d454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var metaLength = 0", span="886-886"];
d492 [label="CommandLine.Core.ValueSpecification", span=""];
d414 [cluster="lambda expression", label="Exit lambda expression", span="817-817"];
d415 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
d418 [cluster="lambda expression", label="Exit lambda expression", span="818-818"];
d25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
d29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213"];
d27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var errors = Enumerable.Empty<Error>()", span="209-209"];
d42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddDashesToOption = false", span="241-241"];
d44 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddOptions(parserResult)", span="245-245"];
d58 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
d73 [cluster="lambda expression", label="Entry lambda expression", span="239-239"];
d235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
d0 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
d63 [cluster="lambda expression", label="license.AddToHelpText(auto, true)", span="220-220"];
d36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227"];
d67 [cluster="lambda expression", label="usage.AddToHelpText(auto, true)", span="233-233"];
d70 [cluster="lambda expression", label="auto.AddPreOptionsLines(lines)", span="236-236"];
d43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242"];
d45 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="return auto;", span="247-247"];
d64 [cluster="lambda expression", label="Exit lambda expression", span="220-220"];
d55 [cluster="CSharpx.Maybe<T>.IsJust<T>()", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
d68 [cluster="lambda expression", label="Exit lambda expression", span="233-233"];
d54 [cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331"];
d71 [cluster="lambda expression", label="Exit lambda expression", span="236-236"];
d100 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271"];
d113 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="277-277"];
d107 [cluster="lambda expression", label="DefaultParsingErrorsHandler(pr, current)", span="276-276"];
d128 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
d118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="parserResult == null", span="287-287"];
d120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current == null", span="288-288"];
d123 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="291-291"];
d126 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="298-298"];
d76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
d85 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274"];
d83 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271"];
d86 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277"];
d131 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
d23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d274 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="598-598"];
d84 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273"];
d162 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
d275 [cluster="lambda expression", label="Entry lambda expression", span="600-600"];
d237 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="throw new ArgumentNullException(''parserResult'');", span="542-542"];
d253 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="653-653"];
d227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
d228 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="return RenderUsageText(parserResult, example => example);", span="518-518"];
d254 [cluster="CSharpx.Maybe<T>.MatchNothing()", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
d13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="heading == null", span="98-98"];
d16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''copyright'');", span="99-99"];
d11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="sentenceBuilder == null", span="97-97"];
d12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
d14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''heading'');", span="98-98"];
d81 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268"];
d157 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
d166 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
d175 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="391-391"];
d307 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="639-639"];
d180 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types == null", span="407-407"];
d183 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="408-408"];
d181 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentNullException(''types'');", span="407-407"];
d190 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="424-424"];
d194 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types == null", span="441-441"];
d197 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="442-442"];
d195 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentNullException(''types'');", span="441-441"];
d308 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
d312 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d313 [cluster="lambda expression", label="Entry lambda expression", span="647-647"];
d47 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
d451 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="845-845"];
d433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasShort = spec.ShortName.Length > 0", span="849-849"];
d434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasLong = spec.LongName.Length > 0", span="850-850"];
d436 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="spec.MetaValue.Length > 0", span="853-853"];
d437 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="854-854"];
d462 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="880-880"];
d453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var hasMeta = spec.MetaName.Length > 0", span="884-884"];
d455 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="spec.MetaValue.Length > 0", span="887-887"];
d456 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="888-888"];
d458 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="891-891"];
d459 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="893-893"];
d428 [cluster="lambda expression", label="Exit lambda expression", span="834-841"];
d431 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
d438 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasShort, span="856-856"];
d443 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasLong, span="865-865"];
d449 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="875-875"];
d450 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="return specLength;", span="877-877"];
d448 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="hasShort && hasLong", span="874-874"];
d134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
d460 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += metaLength", span="895-895"];
d46 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
d80 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
d82 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270"];
d75 [cluster="lambda expression", label="Exit lambda expression", span="239-239"];
d74 [cluster="lambda expression", label="e.Tag == ErrorType.NoVerbSelectedError", span="239-239"];
d1 [cluster="CommandLine.Text.HelpText.HelpText()", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
d481 [label=auto, span=""];
d65 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
d59 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
d482 [label="CommandLine.ParserResult<T>", span=""];
d99 [cluster="lambda expression", label="Entry lambda expression", span="271-271"];
d101 [cluster="lambda expression", label="Exit lambda expression", span="271-271"];
d112 [cluster="lambda expression", label="Entry lambda expression", span="277-277"];
d114 [cluster="lambda expression", label="Exit lambda expression", span="277-277"];
d483 [label=pr, span=""];
d106 [cluster="lambda expression", label="Entry lambda expression", span="276-276"];
d108 [cluster="lambda expression", label="Exit lambda expression", span="276-276"];
d119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''parserResult'');", span="287-287"];
d121 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''current'');", span="288-288"];
d87 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
d77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="parserResult.Tag != ParserResultType.NotParsed", span="262-262"];
d79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
d91 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
d92 [cluster="CommandLine.TypeInfo.Create(System.Type)", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
d103 [cluster="lambda expression", label="Entry lambda expression", span="271-271"];
d109 [cluster="lambda expression", label="Entry lambda expression", span="276-276"];
d115 [cluster="lambda expression", label="Entry lambda expression", span="277-277"];
d90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
d277 [cluster="lambda expression", label="Exit lambda expression", span="600-600"];
d276 [cluster="lambda expression", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="600-600"];
d317 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="653-653"];
d316 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="655-665"];
d229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
d231 [cluster="lambda expression", label="Entry lambda expression", span="518-518"];
d4 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
d186 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
d315 [cluster="lambda expression", label="Exit lambda expression", span="647-647"];
d314 [cluster="lambda expression", label="v.Index", span="647-647"];
d461 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="return specLength;", span="897-897"];
d457 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label=hasMeta, span="890-890"];
d463 [cluster="T.ToStringInvariant<T>()", label="Entry T.ToStringInvariant<T>()", span="15-15"];
d93 [cluster="lambda expression", label="Entry lambda expression", span="267-267"];
d96 [cluster="lambda expression", label="Entry lambda expression", span="270-270"];
d78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263"];
d105 [cluster="lambda expression", label="Exit lambda expression", span="271-271"];
d104 [cluster="lambda expression", label=e, span="271-271"];
d111 [cluster="lambda expression", label="Exit lambda expression", span="276-276"];
d110 [cluster="lambda expression", label=e, span="276-276"];
d117 [cluster="lambda expression", label="Exit lambda expression", span="277-277"];
d116 [cluster="lambda expression", label=e, span="277-277"];
d318 [cluster="System.Type.GetUsageData()", label="Entry System.Type.GetUsageData()", span="38-38"];
d319 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
d320 [cluster="lambda expression", label="Entry lambda expression", span="656-665"];
d233 [cluster="lambda expression", label="Exit lambda expression", span="518-518"];
d232 [cluster="lambda expression", label=example, span="518-518"];
d5 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
d95 [cluster="lambda expression", label="Exit lambda expression", span="267-267"];
d94 [cluster="lambda expression", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
d98 [cluster="lambda expression", label="Exit lambda expression", span="270-270"];
d97 [cluster="lambda expression", label="e.Tag == ErrorType.HelpVerbRequestedError", span="270-270"];
d88 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d325 [cluster="lambda expression", label="Exit lambda expression", span="656-665"];
d321 [cluster="lambda expression", label="var prop = tuple.Item1", span="658-658"];
d322 [cluster="lambda expression", label="var attr = tuple.Item2", span="659-659"];
d324 [cluster="lambda expression", label="return Tuple.Create(attr, examples);", span="664-664"];
d323 [cluster="lambda expression", label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="661-662"];
d327 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
d326 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=2, style=dotted];
n3 -> n6  [key=2, style=dotted];
n4 -> n2  [color=blue, key=0, style=bold];
d470 -> d475  [color=green, key=0, style=solid];
d470 -> d476  [color=green, key=2, style=dotted];
d397 -> d470  [color=green, key=1, label=T, style=dashed];
d397 -> d464  [key=0, style=solid];
d397 -> d465  [color=darkseagreen4, key=1, label=T, style=dashed];
d397 -> d466  [color=darkseagreen4, key=1, label=T, style=dashed];
d397 -> d467  [color=darkseagreen4, key=1, label=T, style=dashed];
d397 -> d468  [color=darkseagreen4, key=1, label=T, style=dashed];
d397 -> d357  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
d469 -> d470  [color=green, key=0, style=solid];
d469 -> d471  [color=green, key=0, style=solid];
d475 -> d397  [color=blue, key=0, style=bold];
d476 -> d476  [color=darkorchid, key=3, label="Field variable int BuilderCapacity", style=bold];
d468 -> d469  [color=green, key=0, style=solid];
d468 -> d472  [color=green, key=1, label=asEnumerable, style=dashed];
d471 -> d472  [color=green, key=0, style=solid];
d471 -> d478  [color=green, key=2, style=dotted];
d471 -> d473  [color=green, key=1, label=builder, style=dashed];
d471 -> d474  [color=green, key=1, label=builder, style=dashed];
d472 -> d473  [color=green, key=0, style=solid];
d472 -> d474  [color=green, key=0, style=solid];
d473 -> d472  [color=green, key=0, style=solid];
d473 -> d476  [color=green, key=2, style=dotted];
d473 -> d222  [color=green, key=2, style=dotted];
d474 -> d475  [color=green, key=0, style=solid];
d474 -> d479  [color=green, key=2, style=dotted];
d395 -> d397  [key=2, style=dotted];
d395 -> d395  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d395 -> d396  [key=0, style=solid];
d395 -> d383  [key=2, style=dotted];
d464 -> d465  [key=0, style=solid];
d464 -> d466  [key=0, style=solid];
d465 -> d475  [key=0, style=solid];
d465 -> d476  [key=2, style=dotted];
d465 -> d477  [key=2, style=dotted];
d466 -> d468  [key=0, style=solid];
d466 -> d467  [key=0, style=solid];
d467 -> d475  [key=0, style=solid];
d467 -> d476  [key=2, style=dotted];
d357 -> d395  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d357 -> d358  [key=0, style=solid];
d357 -> d52  [key=2, style=dotted];
d357 -> d394  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d357 -> d359  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d357 -> d360  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d357 -> d362  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d357 -> d375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d357 -> d378  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d210 -> d222  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d210 -> d219  [key=2, style=dotted];
d210 -> d220  [key=2, style=dotted];
d210 -> d221  [key=2, style=dotted];
d250 -> d222  [key=2, style=dotted];
d250 -> d251  [key=0, style=solid];
d250 -> d219  [key=2, style=dotted];
d250 -> d220  [key=2, style=dotted];
d250 -> d257  [key=2, style=dotted];
d250 -> d259  [key=2, style=dotted];
d250 -> d260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d266 -> d222  [key=2, style=dotted];
d266 -> d267  [key=0, style=solid];
d266 -> d24  [key=2, style=dotted];
d266 -> d268  [key=2, style=dotted];
d266 -> d269  [key=2, style=dotted];
d266 -> d270  [key=2, style=dotted];
d266 -> d271  [key=2, style=dotted];
d266 -> d223  [key=2, style=dotted];
d266 -> d272  [key=2, style=dotted];
d285 -> d222  [key=2, style=dotted];
d285 -> d286  [key=0, style=solid];
d288 -> d222  [key=2, style=dotted];
d288 -> d289  [key=0, style=solid];
d291 -> d222  [key=2, style=dotted];
d291 -> d292  [key=0, style=solid];
d291 -> d300  [key=2, style=dotted];
d297 -> d222  [key=2, style=dotted];
d297 -> d298  [key=0, style=solid];
d351 -> d222  [key=2, style=dotted];
d351 -> d352  [key=0, style=solid];
d387 -> d222  [key=2, style=dotted];
d387 -> d388  [key=0, style=solid];
d387 -> d389  [key=2, style=dotted];
d391 -> d222  [key=2, style=dotted];
d391 -> d392  [key=0, style=solid];
d391 -> d393  [key=2, style=dotted];
d353 -> d222  [key=2, style=dotted];
d353 -> d354  [key=0, style=solid];
d353 -> d223  [key=2, style=dotted];
d353 -> d382  [key=2, style=dotted];
d372 -> d222  [key=2, style=dotted];
d372 -> d373  [key=0, style=solid];
d372 -> d300  [key=2, style=dotted];
d378 -> d222  [key=2, style=dotted];
d378 -> d379  [key=0, style=solid];
d378 -> d271  [key=2, style=dotted];
d366 -> d222  [key=2, style=dotted];
d366 -> d367  [key=0, style=solid];
d369 -> d222  [key=2, style=dotted];
d369 -> d370  [key=0, style=solid];
d490 -> d395  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d394 -> d395  [key=0, style=solid];
d396 -> d394  [color=blue, key=0, style=bold];
d343 -> d357  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d343 -> d351  [key=0, style=solid];
d343 -> d387  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d391  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d353  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d372  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d352  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d354  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d343 -> d355  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d343 -> d356  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d343 -> d358  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d343 -> d359  [color=darkseagreen4, key=1, label=string, style=dashed];
d343 -> d365  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d368  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d371  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d373  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d376  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d377  [color=darkseagreen4, key=1, label=int, style=dashed];
d343 -> d333  [color=darkorchid, key=3, label="Parameter variable int maxLength", style=bold];
d343 -> d336  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.Specification specification", style=bold];
d343 -> d335  [color=darkorchid, key=3, label="Parameter variable int widthOfHelpText", style=bold];
d354 -> d357  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d354 -> d355  [key=0, style=solid];
d354 -> d356  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d355 -> d357  [key=0, style=solid];
d355 -> d356  [key=0, style=solid];
d355 -> d49  [key=2, style=dotted];
d356 -> d357  [key=0, style=solid];
d356 -> d356  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d356 -> d203  [key=2, style=dotted];
d358 -> d359  [key=0, style=solid];
d358 -> d360  [key=0, style=solid];
d359 -> d378  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d359 -> d383  [key=2, style=dotted];
d359 -> d359  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d359 -> d360  [key=0, style=solid];
d359 -> d362  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d359 -> d375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d360 -> d378  [key=0, style=solid];
d360 -> d361  [key=0, style=solid];
d360 -> d270  [key=2, style=dotted];
d362 -> d372  [color=darkseagreen4, key=1, label=words, style=dashed];
d362 -> d366  [color=darkseagreen4, key=1, label=words, style=dashed];
d362 -> d363  [key=0, style=solid];
d362 -> d299  [key=2, style=dotted];
d362 -> d364  [color=darkseagreen4, key=1, label=words, style=dashed];
d362 -> d365  [color=darkseagreen4, key=1, label=words, style=dashed];
d362 -> d367  [color=darkseagreen4, key=1, label=words, style=dashed];
d362 -> d368  [color=darkseagreen4, key=1, label=words, style=dashed];
d362 -> d371  [color=darkseagreen4, key=1, label=words, style=dashed];
d375 -> d378  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d375 -> d375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d375 -> d376  [key=0, style=solid];
d375 -> d301  [key=2, style=dotted];
d375 -> d302  [key=2, style=dotted];
d375 -> d384  [key=2, style=dotted];
d375 -> d377  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d130 -> d210  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
d130 -> d204  [key=0, style=solid];
d130 -> d208  [color=crimson, key=0, style=bold];
d130 -> d211  [color=crimson, key=0, style=bold];
d130 -> d216  [color=crimson, key=0, style=bold];
d130 -> d206  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d130 -> d212  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
d209 -> d210  [key=0, style=solid];
d209 -> d212  [key=0, style=solid];
d209 -> d218  [key=2, style=dotted];
d209 -> d224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d211 -> d209  [key=0, style=solid];
d211 -> d223  [key=2, style=dotted];
d245 -> d250  [color=darkseagreen4, key=1, label=example, style=dashed];
d245 -> d246  [key=0, style=solid];
d245 -> d50  [key=2, style=dotted];
d245 -> d248  [color=darkseagreen4, key=1, label=example, style=dashed];
d243 -> d250  [color=darkseagreen4, key=1, label=appAlias, style=dashed];
d243 -> d244  [key=0, style=solid];
d243 -> d256  [key=2, style=dotted];
d249 -> d250  [key=0, style=solid];
d249 -> d244  [key=0, style=solid];
d249 -> d261  [color=darkseagreen4, key=1, label=s, style=dashed];
d249 -> d262  [color=darkseagreen4, key=1, label=s, style=dashed];
d249 -> d263  [color=darkseagreen4, key=1, label=s, style=dashed];
d251 -> d249  [key=0, style=solid];
d251 -> d223  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d260 -> d262  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
d260 -> d263  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
d480 -> d266  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d351  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d387  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d391  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d353  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d372  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d378  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d366  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d369  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d355  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d17  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d18  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d19  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d136  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d140  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d143  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d148  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d144  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d151  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d152  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d159  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d164  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d160  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d168  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d172  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d169  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d176  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d184  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d191  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d198  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d304  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d328  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d333  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d334  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d336  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d341  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d337  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d344  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d346  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d348  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d349  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d352  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d376  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d379  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d398  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d402  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d408  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d419  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d420  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d422  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d426  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d440  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d480 -> d445  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d265 -> d266  [key=0, style=solid];
d265 -> d265  [color=darkorchid, key=3, label="Local variable int ExtraLength", style=bold];
d267 -> d135  [color=blue, key=0, style=bold];
d278 -> d285  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d278 -> d288  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d278 -> d291  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d278 -> d297  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d278 -> d279  [key=0, style=solid];
d278 -> d281  [color=darkseagreen4, key=1, label=string, style=dashed];
d278 -> d284  [color=darkseagreen4, key=1, label=int, style=dashed];
d278 -> d287  [color=darkseagreen4, key=1, label=int, style=dashed];
d278 -> d290  [color=darkseagreen4, key=1, label=int, style=dashed];
d278 -> d292  [color=darkseagreen4, key=1, label=int, style=dashed];
d278 -> d294  [color=darkseagreen4, key=1, label=string, style=dashed];
d278 -> d295  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d278 -> d296  [color=darkseagreen4, key=1, label=int, style=dashed];
d278 -> d142  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d278 -> d138  [color=darkorchid, key=3, label="Parameter variable int maximumLength", style=bold];
d281 -> d285  [color=darkseagreen4, key=1, label=words, style=dashed];
d281 -> d291  [color=darkseagreen4, key=1, label=words, style=dashed];
d281 -> d282  [key=0, style=solid];
d281 -> d299  [key=2, style=dotted];
d281 -> d283  [color=darkseagreen4, key=1, label=words, style=dashed];
d281 -> d284  [color=darkseagreen4, key=1, label=words, style=dashed];
d281 -> d286  [color=darkseagreen4, key=1, label=words, style=dashed];
d281 -> d287  [color=darkseagreen4, key=1, label=words, style=dashed];
d281 -> d290  [color=darkseagreen4, key=1, label=words, style=dashed];
d284 -> d285  [key=0, style=solid];
d284 -> d290  [key=0, style=solid];
d282 -> d285  [color=darkseagreen4, key=1, label=i, style=dashed];
d282 -> d291  [color=darkseagreen4, key=1, label=i, style=dashed];
d282 -> d284  [color=darkseagreen4, key=1, label=i, style=dashed];
d282 -> d283  [key=0, style=solid];
d282 -> d286  [color=darkseagreen4, key=1, label=i, style=dashed];
d282 -> d287  [color=darkseagreen4, key=1, label=i, style=dashed];
d282 -> d290  [color=darkseagreen4, key=1, label=i, style=dashed];
d282 -> d293  [color=darkseagreen4, key=1, label=i, style=dashed];
d282 -> d280  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d286 -> d286  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d286 -> d287  [key=0, style=solid];
d286 -> d289  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d286 -> d294  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d287 -> d288  [key=0, style=solid];
d287 -> d293  [key=0, style=solid];
d289 -> d289  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d289 -> d293  [key=0, style=solid];
d289 -> d294  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d290 -> d291  [key=0, style=solid];
d290 -> d294  [key=0, style=solid];
d292 -> d294  [key=0, style=solid];
d294 -> d297  [color=darkseagreen4, key=1, label=string, style=dashed];
d294 -> d294  [color=darkseagreen4, key=1, label=string, style=dashed];
d294 -> d295  [key=0, style=solid];
d294 -> d301  [key=2, style=dotted];
d294 -> d302  [key=2, style=dotted];
d294 -> d296  [color=darkseagreen4, key=1, label=string, style=dashed];
d296 -> d297  [key=0, style=solid];
d296 -> d279  [key=0, style=solid];
d298 -> d278  [color=blue, key=0, style=bold];
d352 -> d353  [key=0, style=solid];
d352 -> d24  [key=2, style=dotted];
d352 -> d381  [key=2, style=dotted];
d352 -> d386  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d352 -> d390  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d488 -> d387  [color=darkseagreen4, key=1, label=int, style=dashed];
d488 -> d391  [color=darkseagreen4, key=1, label=int, style=dashed];
d489 -> d387  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d489 -> d391  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d386 -> d387  [key=0, style=solid];
d388 -> d386  [color=blue, key=0, style=bold];
d389 -> d343  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.OptionSpecification specification", style=bold];
d389 -> d398  [key=0, style=solid];
d389 -> d402  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d389 -> d408  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d390 -> d391  [key=0, style=solid];
d392 -> d390  [color=blue, key=0, style=bold];
d393 -> d343  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.ValueSpecification specification", style=bold];
d393 -> d410  [key=0, style=solid];
d393 -> d413  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d393 -> d417  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d371 -> d372  [key=0, style=solid];
d371 -> d375  [key=0, style=solid];
d363 -> d372  [color=darkseagreen4, key=1, label=i, style=dashed];
d363 -> d366  [color=darkseagreen4, key=1, label=i, style=dashed];
d363 -> d371  [color=darkseagreen4, key=1, label=i, style=dashed];
d363 -> d364  [key=0, style=solid];
d363 -> d365  [color=darkseagreen4, key=1, label=i, style=dashed];
d363 -> d367  [color=darkseagreen4, key=1, label=i, style=dashed];
d363 -> d368  [color=darkseagreen4, key=1, label=i, style=dashed];
d363 -> d374  [color=darkseagreen4, key=1, label=i, style=dashed];
d363 -> d280  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d373 -> d375  [key=0, style=solid];
d377 -> d378  [key=0, style=solid];
d377 -> d360  [key=0, style=solid];
d379 -> d380  [key=0, style=solid];
d365 -> d366  [key=0, style=solid];
d365 -> d371  [key=0, style=solid];
d367 -> d375  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d367 -> d367  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d367 -> d368  [key=0, style=solid];
d367 -> d370  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d368 -> d369  [key=0, style=solid];
d368 -> d374  [key=0, style=solid];
d370 -> d375  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d370 -> d370  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d370 -> d374  [key=0, style=solid];
d341 -> d343  [key=2, style=dotted];
d341 -> d342  [key=0, style=solid];
d361 -> d343  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d361 -> d362  [key=0, style=solid];
d361 -> d375  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d361 -> d371  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d361 -> d365  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d361 -> d367  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d361 -> d280  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d380 -> d343  [color=blue, key=0, style=bold];
d376 -> d271  [key=2, style=dotted];
d376 -> d377  [key=0, style=solid];
d376 -> d385  [key=2, style=dotted];
d333 -> d341  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d333 -> d334  [key=0, style=solid];
d333 -> d339  [key=2, style=dotted];
d333 -> d335  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d333 -> d336  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d336 -> d337  [key=0, style=solid];
d336 -> d146  [key=2, style=dotted];
d336 -> d340  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d335 -> d341  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
d335 -> d336  [key=0, style=solid];
d32 -> d52  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d51  [key=2, style=dotted];
d32 -> d62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d39 -> d52  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d39 -> d66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d40 -> d52  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d364 -> d375  [key=0, style=solid];
d364 -> d365  [key=0, style=solid];
d124 -> d130  [key=2, style=dotted];
d124 -> d125  [key=0, style=solid];
d124 -> d127  [color=darkseagreen4, key=1, label=errors, style=dashed];
d201 -> d130  [key=2, style=dotted];
d201 -> d203  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d217 -> d130  [color=blue, key=0, style=bold];
d204 -> d205  [key=0, style=solid];
d204 -> d206  [key=0, style=solid];
d208 -> d209  [key=0, style=solid];
d216 -> d215  [key=0, style=solid];
d206 -> d209  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
d206 -> d207  [key=0, style=solid];
d206 -> d48  [key=2, style=dotted];
d206 -> d212  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
d212 -> d213  [key=0, style=solid];
d212 -> d89  [key=2, style=dotted];
d212 -> d50  [key=2, style=dotted];
d212 -> d214  [color=darkseagreen4, key=1, label=mutuallyErrs, style=dashed];
d207 -> d209  [key=0, style=solid];
d207 -> d208  [key=0, style=solid];
d207 -> d129  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d246 -> d219  [key=2, style=dotted];
d246 -> d257  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d53 -> d245  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>", style=dashed];
d53 -> d251  [color=crimson, key=0, style=bold];
d53 -> d236  [key=0, style=solid];
d53 -> d240  [color=crimson, key=0, style=bold];
d53 -> d247  [color=crimson, key=0, style=bold];
d53 -> d238  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d53 -> d230  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc", style=bold];
d244 -> d245  [key=0, style=solid];
d244 -> d252  [key=0, style=solid];
d248 -> d249  [key=0, style=solid];
d248 -> d258  [key=2, style=dotted];
d241 -> d243  [color=darkseagreen4, key=1, label=usageTuple, style=dashed];
d241 -> d242  [key=0, style=solid];
d241 -> d255  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d242 -> d244  [color=darkseagreen4, key=1, label=examples, style=dashed];
d261 -> d262  [key=0, style=solid];
d262 -> d263  [key=0, style=solid];
d263 -> d264  [key=0, style=solid];
d264 -> d260  [color=blue, key=0, style=bold];
d17 -> d24  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d18 -> d24  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d136 -> d137  [key=0, style=solid];
d136 -> d138  [key=2, style=dotted];
d140 -> d141  [key=0, style=solid];
d140 -> d142  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d143 -> d146  [key=2, style=dotted];
d143 -> d147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d148 -> d149  [key=0, style=solid];
d148 -> d57  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d151 -> d146  [key=2, style=dotted];
d151 -> d154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d155 -> d156  [key=0, style=solid];
d155 -> d139  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d159 -> d160  [key=0, style=solid];
d159 -> d146  [key=2, style=dotted];
d159 -> d163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d164 -> d165  [key=0, style=solid];
d164 -> d57  [key=2, style=dotted];
d160 -> d161  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d168 -> d146  [key=2, style=dotted];
d168 -> d171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d172 -> d173  [key=0, style=solid];
d172 -> d139  [key=2, style=dotted];
d169 -> d170  [key=0, style=solid];
d176 -> d177  [key=0, style=solid];
d176 -> d178  [key=2, style=dotted];
d176 -> d56  [key=2, style=dotted];
d176 -> d179  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d184 -> d187  [key=2, style=dotted];
d184 -> d56  [key=2, style=dotted];
d184 -> d179  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d191 -> d178  [key=2, style=dotted];
d191 -> d56  [key=2, style=dotted];
d191 -> d179  [key=2, style=dotted];
d198 -> d199  [key=0, style=solid];
d198 -> d187  [key=2, style=dotted];
d198 -> d56  [key=2, style=dotted];
d198 -> d179  [key=2, style=dotted];
d304 -> d305  [key=0, style=solid];
d304 -> d89  [key=2, style=dotted];
d304 -> d309  [key=2, style=dotted];
d304 -> d310  [key=2, style=dotted];
d304 -> d311  [key=2, style=dotted];
d304 -> d306  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
d328 -> d328  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
d328 -> d329  [key=0, style=solid];
d328 -> d330  [key=2, style=dotted];
d328 -> d331  [key=2, style=dotted];
d328 -> d309  [key=2, style=dotted];
d328 -> d310  [key=2, style=dotted];
d328 -> d332  [key=2, style=dotted];
d334 -> d24  [key=2, style=dotted];
d334 -> d335  [key=0, style=solid];
d337 -> d338  [key=0, style=solid];
d344 -> d50  [key=2, style=dotted];
d344 -> d345  [key=0, style=solid];
d344 -> d331  [key=2, style=dotted];
d346 -> d50  [key=2, style=dotted];
d346 -> d347  [key=0, style=solid];
d346 -> d331  [key=2, style=dotted];
d348 -> d278  [key=2, style=dotted];
d348 -> d349  [key=0, style=solid];
d349 -> d350  [key=0, style=solid];
d398 -> d24  [key=2, style=dotted];
d398 -> d223  [key=2, style=dotted];
d398 -> d399  [key=0, style=solid];
d398 -> d400  [key=2, style=dotted];
d398 -> d401  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d398 -> d407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d402 -> d271  [key=2, style=dotted];
d402 -> d403  [key=0, style=solid];
d402 -> d404  [key=2, style=dotted];
d402 -> d405  [key=2, style=dotted];
d402 -> d406  [key=2, style=dotted];
d408 -> d271  [key=2, style=dotted];
d408 -> d409  [key=0, style=solid];
d408 -> d405  [key=2, style=dotted];
d408 -> d406  [key=2, style=dotted];
d419 -> d278  [key=2, style=dotted];
d419 -> d420  [key=0, style=solid];
d420 -> d421  [key=0, style=solid];
d422 -> d423  [key=0, style=solid];
d422 -> d424  [key=2, style=dotted];
d422 -> d425  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d426 -> d427  [key=0, style=solid];
d426 -> d429  [key=2, style=dotted];
d426 -> d430  [key=2, style=dotted];
d440 -> d441  [key=0, style=solid];
d440 -> d442  [key=0, style=solid];
d445 -> d446  [key=0, style=solid];
d445 -> d447  [key=0, style=solid];
d135 -> d265  [key=0, style=solid];
d410 -> d24  [key=2, style=dotted];
d410 -> d223  [key=2, style=dotted];
d410 -> d411  [key=0, style=solid];
d410 -> d381  [key=2, style=dotted];
d410 -> d406  [key=2, style=dotted];
d410 -> d412  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d410 -> d416  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d279 -> d271  [key=2, style=dotted];
d279 -> d280  [key=0, style=solid];
d295 -> d271  [key=2, style=dotted];
d295 -> d296  [key=0, style=solid];
d247 -> d223  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d280 -> d278  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d280 -> d281  [key=0, style=solid];
d280 -> d284  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d280 -> d286  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d280 -> d290  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d280 -> d294  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d280 -> d280  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d142 -> d256  [color=darkorchid, key=3, label="Parameter variable System.Text.StringBuilder builder", style=bold];
d142 -> d419  [key=0, style=solid];
d142 -> d139  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d138 -> d348  [key=0, style=solid];
d138 -> d57  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d283 -> d284  [key=0, style=solid];
d283 -> d294  [key=0, style=solid];
d293 -> d283  [key=0, style=solid];
d293 -> d293  [color=darkseagreen4, key=1, label=i, style=dashed];
d399 -> d389  [color=blue, key=0, style=bold];
d411 -> d393  [color=blue, key=0, style=bold];
d413 -> d414  [key=0, style=solid];
d413 -> d415  [key=2, style=dotted];
d417 -> d418  [key=0, style=solid];
d417 -> d405  [key=2, style=dotted];
d374 -> d364  [key=0, style=solid];
d374 -> d374  [color=darkseagreen4, key=1, label=i, style=dashed];
d485 -> d341  [color=darkseagreen4, key=1, label=string, style=dashed];
d486 -> d341  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d487 -> d341  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
d179 -> d341  [color=darkseagreen4, key=1, label=string, style=dashed];
d179 -> d333  [key=0, style=solid];
d179 -> d336  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
d179 -> d335  [color=darkseagreen4, key=1, label=int, style=dashed];
d340 -> d341  [key=0, style=solid];
d342 -> d340  [color=blue, key=0, style=bold];
d339 -> d422  [key=0, style=solid];
d41 -> d49  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d44  [key=0, style=solid];
d41 -> d58  [key=2, style=dotted];
d41 -> d73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d30 -> d49  [key=2, style=dotted];
d30 -> d32  [key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d30 -> d48  [key=2, style=dotted];
d234 -> d203  [key=2, style=dotted];
d234 -> d53  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d26 -> d32  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d39  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d40  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d27  [key=0, style=solid];
d26 -> d0  [key=2, style=dotted];
d26 -> d31  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d63  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d36  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d38  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d67  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d70  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d42  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d43  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d44  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d45  [color=darkseagreen4, key=1, label=auto, style=dashed];
d28 -> d32  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d39  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d40  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d50  [key=2, style=dotted];
d31 -> d31  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d63  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d36  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d38  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d67  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d70  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d42  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d43  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d44  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d45  [color=darkseagreen4, key=1, label=auto, style=dashed];
d33 -> d39  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
d33 -> d34  [key=0, style=solid];
d33 -> d51  [key=2, style=dotted];
d33 -> d35  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
d62 -> d63  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d57  [key=2, style=dotted];
d35 -> d39  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d35 -> d55  [key=2, style=dotted];
d37 -> d39  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d66 -> d67  [key=0, style=solid];
d34 -> d40  [color=darkseagreen4, key=1, label=usageLines, style=dashed];
d34 -> d53  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d54  [key=2, style=dotted];
d72 -> d40  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines", style=bold];
d72 -> d124  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines", style=bold];
d72 -> d143  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d102 -> d124  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d102 -> d72  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler", style=bold];
d102 -> d102  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler", style=bold];
d102 -> d118  [key=0, style=solid];
d102 -> d120  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d102 -> d122  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d102 -> d123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d102 -> d126  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d102 -> d127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d102 -> d76  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
d102 -> d85  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
d102 -> d83  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
d102 -> d86  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
d122 -> d124  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d122 -> d48  [key=2, style=dotted];
d122 -> d129  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d125 -> d127  [key=0, style=solid];
d125 -> d129  [key=2, style=dotted];
d127 -> d72  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d127 -> d56  [key=2, style=dotted];
d127 -> d131  [key=2, style=dotted];
d127 -> d57  [key=2, style=dotted];
d200 -> d201  [key=0, style=solid];
d202 -> d200  [color=blue, key=0, style=bold];
d205 -> d217  [key=0, style=solid];
d205 -> d23  [key=2, style=dotted];
d213 -> d217  [key=0, style=solid];
d213 -> d214  [key=0, style=solid];
d215 -> d217  [key=0, style=solid];
d215 -> d216  [key=0, style=solid];
d48 -> d273  [key=0, style=solid];
d48 -> d27  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors", style=bold];
d214 -> d215  [key=0, style=solid];
d214 -> d162  [key=2, style=dotted];
d273 -> d218  [key=2, style=dotted];
d273 -> d274  [key=0, style=solid];
d273 -> d275  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d226 -> d224  [color=blue, key=0, style=bold];
d225 -> d226  [key=0, style=solid];
d252 -> d53  [color=blue, key=0, style=bold];
d236 -> d237  [key=0, style=solid];
d236 -> d238  [key=0, style=solid];
d240 -> d241  [key=0, style=solid];
d238 -> d241  [color=darkseagreen4, key=1, label=usage, style=dashed];
d238 -> d239  [key=0, style=solid];
d238 -> d253  [key=2, style=dotted];
d230 -> d234  [key=0, style=solid];
d230 -> d227  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
d230 -> d228  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc", style=bold];
d239 -> d241  [key=0, style=solid];
d239 -> d240  [key=0, style=solid];
d239 -> d254  [key=2, style=dotted];
d484 -> d261  [color=darkseagreen4, key=1, label=s, style=dashed];
d484 -> d262  [color=darkseagreen4, key=1, label=s, style=dashed];
d484 -> d263  [color=darkseagreen4, key=1, label=s, style=dashed];
d15 -> d17  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d10 -> d19  [color=darkseagreen4, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
d10 -> d20  [color=darkseagreen4, key=1, label=string, style=dashed];
d10 -> d21  [color=darkseagreen4, key=1, label=string, style=dashed];
d10 -> d15  [color=darkseagreen4, key=1, label=string, style=dashed];
d10 -> d11  [key=0, style=solid];
d10 -> d13  [color=darkseagreen4, key=1, label=string, style=dashed];
d22 -> d10  [color=blue, key=0, style=bold];
d57 -> d136  [key=0, style=solid];
d57 -> d143  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d57 -> d159  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d57 -> d138  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine", style=bold];
d57 -> d36  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d137 -> d57  [color=blue, key=0, style=bold];
d139 -> d140  [key=0, style=solid];
d139 -> d151  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d139 -> d168  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d139 -> d142  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine", style=bold];
d141 -> d139  [color=blue, key=0, style=bold];
d147 -> d148  [key=0, style=solid];
d149 -> d147  [color=blue, key=0, style=bold];
d145 -> d72  [color=blue, key=0, style=bold];
d150 -> d151  [key=0, style=solid];
d154 -> d155  [key=0, style=solid];
d156 -> d154  [color=blue, key=0, style=bold];
d153 -> d150  [color=blue, key=0, style=bold];
d158 -> d159  [key=0, style=solid];
d158 -> d162  [key=2, style=dotted];
d163 -> d164  [key=0, style=solid];
d165 -> d163  [color=blue, key=0, style=bold];
d161 -> d157  [color=blue, key=0, style=bold];
d167 -> d168  [key=0, style=solid];
d167 -> d162  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d173 -> d171  [color=blue, key=0, style=bold];
d170 -> d166  [color=blue, key=0, style=bold];
d61 -> d176  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d61 -> d179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
d61 -> d174  [key=0, style=solid];
d174 -> d176  [key=0, style=solid];
d174 -> d175  [key=0, style=solid];
d177 -> d61  [color=blue, key=0, style=bold];
d178 -> d303  [key=0, style=solid];
d60 -> d184  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
d60 -> d179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
d60 -> d180  [key=0, style=solid];
d60 -> d182  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
d182 -> d184  [key=0, style=solid];
d182 -> d183  [key=0, style=solid];
d185 -> d60  [color=blue, key=0, style=bold];
d187 -> d328  [key=0, style=solid];
d187 -> d60  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
d187 -> d193  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
d188 -> d191  [color=darkseagreen4, key=1, label=int, style=dashed];
d188 -> d179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
d188 -> d189  [key=0, style=solid];
d189 -> d191  [key=0, style=solid];
d189 -> d190  [key=0, style=solid];
d192 -> d188  [color=blue, key=0, style=bold];
d193 -> d198  [color=darkseagreen4, key=1, label=int, style=dashed];
d193 -> d179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
d193 -> d194  [key=0, style=solid];
d193 -> d196  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
d196 -> d198  [key=0, style=solid];
d196 -> d197  [key=0, style=solid];
d199 -> d193  [color=blue, key=0, style=bold];
d303 -> d304  [key=0, style=solid];
d303 -> d308  [key=2, style=dotted];
d303 -> d305  [color=darkseagreen4, key=1, label=specs, style=dashed];
d305 -> d89  [key=2, style=dotted];
d305 -> d306  [key=0, style=solid];
d305 -> d312  [key=2, style=dotted];
d305 -> d313  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d309 -> d344  [key=0, style=solid];
d310 -> d346  [key=0, style=solid];
d306 -> d311  [key=2, style=dotted];
d306 -> d307  [key=0, style=solid];
d306 -> d47  [key=2, style=dotted];
d329 -> d187  [color=blue, key=0, style=bold];
d338 -> d179  [color=blue, key=0, style=bold];
d345 -> d309  [color=blue, key=0, style=bold];
d347 -> d310  [color=blue, key=0, style=bold];
d350 -> d138  [color=blue, key=0, style=bold];
d401 -> d402  [key=0, style=solid];
d407 -> d408  [key=0, style=solid];
d491 -> d402  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d491 -> d408  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d403 -> d401  [color=blue, key=0, style=bold];
d406 -> d10  [color=darkorchid, key=3, label="Field variable string copyright", style=bold];
d409 -> d407  [color=blue, key=0, style=bold];
d421 -> d142  [color=blue, key=0, style=bold];
d429 -> d422  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.OptionSpecification spec", style=bold];
d429 -> d432  [key=0, style=solid];
d429 -> d433  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d429 -> d434  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d429 -> d436  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d429 -> d437  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d429 -> d444  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d430 -> d422  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.ValueSpecification spec", style=bold];
d430 -> d452  [key=0, style=solid];
d430 -> d453  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d430 -> d455  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d430 -> d456  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d430 -> d458  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d430 -> d459  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d423 -> d339  [color=blue, key=0, style=bold];
d425 -> d426  [key=0, style=solid];
d425 -> d427  [color=darkseagreen4, key=1, label=int, style=dashed];
d427 -> d428  [key=0, style=solid];
d427 -> d431  [key=2, style=dotted];
d439 -> d440  [key=0, style=solid];
d439 -> d439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d439 -> d441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d439 -> d442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d441 -> d441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d441 -> d442  [key=0, style=solid];
d442 -> d442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d442 -> d443  [key=0, style=solid];
d442 -> d444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d442 -> d449  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d442 -> d450  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d444 -> d445  [key=0, style=solid];
d444 -> d444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d444 -> d446  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d444 -> d447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d446 -> d446  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d446 -> d447  [key=0, style=solid];
d447 -> d447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d447 -> d448  [key=0, style=solid];
d447 -> d449  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d447 -> d450  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d132 -> d135  [color=darkorchid, key=3, label="method methodReturn string op_Implicit", style=bold];
d132 -> d133  [key=0, style=solid];
d133 -> d135  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d412 -> d413  [key=0, style=solid];
d416 -> d417  [key=0, style=solid];
d432 -> d280  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d432 -> d439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d432 -> d444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d432 -> d433  [key=0, style=solid];
d432 -> d449  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d432 -> d450  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d432 -> d435  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d435 -> d280  [color=darkorchid, key=3, label="Local variable int metaLength", style=bold];
d435 -> d442  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d435 -> d447  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d435 -> d436  [key=0, style=solid];
d452 -> d280  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d452 -> d453  [key=0, style=solid];
d452 -> d458  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d452 -> d459  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d452 -> d454  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d454 -> d280  [color=darkorchid, key=3, label="Local variable int metaLength", style=bold];
d454 -> d455  [key=0, style=solid];
d454 -> d460  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d492 -> d413  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d492 -> d417  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d414 -> d412  [color=blue, key=0, style=bold];
d418 -> d416  [color=blue, key=0, style=bold];
d25 -> d41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d26  [key=0, style=solid];
d25 -> d28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d31  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
d25 -> d34  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d29  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d43  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d44  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d29 -> d41  [color=darkseagreen4, key=1, label=errors, style=dashed];
d29 -> d30  [key=0, style=solid];
d27 -> d41  [color=darkseagreen4, key=1, label=errors, style=dashed];
d27 -> d28  [key=0, style=solid];
d27 -> d47  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d44 -> d61  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d235 -> d230  [color=blue, key=0, style=bold];
d0 -> d1  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d65  [key=2, style=dotted];
d36 -> d38  [color=darkseagreen4, key=1, label=heading, style=dashed];
d36 -> d37  [key=0, style=solid];
d36 -> d56  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d67 -> d65  [key=2, style=dotted];
d70 -> d72  [key=2, style=dotted];
d70 -> d71  [key=0, style=solid];
d43 -> d60  [key=2, style=dotted];
d43 -> d45  [key=0, style=solid];
d43 -> d59  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d64 -> d62  [color=blue, key=0, style=bold];
d68 -> d66  [color=blue, key=0, style=bold];
d71 -> d69  [color=blue, key=0, style=bold];
d100 -> d102  [key=2, style=dotted];
d100 -> d101  [key=0, style=solid];
d113 -> d102  [key=2, style=dotted];
d113 -> d114  [key=0, style=solid];
d107 -> d102  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d128 -> d102  [color=blue, key=0, style=bold];
d118 -> d119  [key=0, style=solid];
d118 -> d120  [key=0, style=solid];
d120 -> d122  [key=0, style=solid];
d120 -> d121  [key=0, style=solid];
d123 -> d128  [key=0, style=solid];
d126 -> d128  [key=0, style=solid];
d76 -> d57  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
d76 -> d25  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
d76 -> d100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d76 -> d113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d76 -> d77  [key=0, style=solid];
d76 -> d79  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d76 -> d83  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d76 -> d86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d85 -> d107  [color=darkseagreen4, key=1, label=pr, style=dashed];
d85 -> d86  [key=0, style=solid];
d85 -> d91  [key=2, style=dotted];
d85 -> d92  [key=2, style=dotted];
d85 -> d47  [key=2, style=dotted];
d83 -> d25  [key=2, style=dotted];
d83 -> d87  [key=0, style=solid];
d83 -> d99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d83 -> d103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d86 -> d25  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d86 -> d109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d86 -> d112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d86 -> d115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d274 -> d48  [color=blue, key=0, style=bold];
d84 -> d89  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d86  [color=darkseagreen4, key=1, label=err, style=dashed];
d84 -> d90  [key=2, style=dotted];
d275 -> d276  [key=0, style=solid];
d237 -> d252  [key=0, style=solid];
d237 -> d23  [key=2, style=dotted];
d253 -> d316  [key=0, style=solid];
d227 -> d230  [color=darkorchid, key=3, label="method methodReturn string RenderUsageText", style=bold];
d227 -> d228  [key=0, style=solid];
d228 -> d230  [key=2, style=dotted];
d228 -> d229  [key=0, style=solid];
d228 -> d231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d13 -> d15  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d16 -> d22  [key=0, style=solid];
d16 -> d23  [key=2, style=dotted];
d11 -> d13  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d12 -> d22  [key=0, style=solid];
d12 -> d23  [key=2, style=dotted];
d14 -> d22  [key=0, style=solid];
d14 -> d23  [key=2, style=dotted];
d81 -> d57  [key=2, style=dotted];
d81 -> d87  [key=0, style=solid];
d81 -> d4  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d166 -> d167  [key=0, style=solid];
d175 -> d177  [key=0, style=solid];
d175 -> d23  [key=2, style=dotted];
d307 -> d178  [color=blue, key=0, style=bold];
d180 -> d182  [key=0, style=solid];
d180 -> d181  [key=0, style=solid];
d183 -> d185  [key=0, style=solid];
d183 -> d186  [key=2, style=dotted];
d181 -> d185  [key=0, style=solid];
d181 -> d23  [key=2, style=dotted];
d190 -> d192  [key=0, style=solid];
d190 -> d23  [key=2, style=dotted];
d194 -> d196  [key=0, style=solid];
d194 -> d195  [key=0, style=solid];
d197 -> d199  [key=0, style=solid];
d197 -> d186  [key=2, style=dotted];
d195 -> d199  [key=0, style=solid];
d195 -> d23  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d451 -> d429  [color=blue, key=0, style=bold];
d433 -> d434  [key=0, style=solid];
d433 -> d438  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
d433 -> d448  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
d434 -> d435  [key=0, style=solid];
d434 -> d443  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
d434 -> d448  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
d436 -> d437  [key=0, style=solid];
d436 -> d438  [key=0, style=solid];
d437 -> d442  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d437 -> d447  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d437 -> d438  [key=0, style=solid];
d462 -> d430  [color=blue, key=0, style=bold];
d453 -> d454  [key=0, style=solid];
d453 -> d457  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
d455 -> d456  [key=0, style=solid];
d455 -> d457  [key=0, style=solid];
d456 -> d457  [key=0, style=solid];
d456 -> d460  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d458 -> d458  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d458 -> d460  [key=0, style=solid];
d458 -> d463  [key=2, style=dotted];
d459 -> d459  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d459 -> d460  [key=0, style=solid];
d459 -> d463  [key=2, style=dotted];
d428 -> d425  [color=blue, key=0, style=bold];
d438 -> d439  [key=0, style=solid];
d438 -> d443  [key=0, style=solid];
d443 -> d444  [key=0, style=solid];
d443 -> d448  [key=0, style=solid];
d449 -> d449  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d449 -> d450  [key=0, style=solid];
d450 -> d451  [key=0, style=solid];
d448 -> d449  [key=0, style=solid];
d448 -> d450  [key=0, style=solid];
d134 -> d132  [color=blue, key=0, style=bold];
d460 -> d460  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d460 -> d461  [key=0, style=solid];
d46 -> d25  [color=blue, key=0, style=bold];
d80 -> d58  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d80 -> d82  [key=0, style=solid];
d80 -> d93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d82 -> d58  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d82 -> d84  [key=0, style=solid];
d82 -> d96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d75 -> d73  [color=blue, key=0, style=bold];
d74 -> d75  [key=0, style=solid];
d1 -> d0  [color=blue, key=0, style=bold];
d481 -> d63  [color=darkseagreen4, key=1, label=auto, style=dashed];
d481 -> d67  [color=darkseagreen4, key=1, label=auto, style=dashed];
d481 -> d70  [color=darkseagreen4, key=1, label=auto, style=dashed];
d482 -> d100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d482 -> d113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d99 -> d100  [key=0, style=solid];
d101 -> d99  [color=blue, key=0, style=bold];
d112 -> d113  [key=0, style=solid];
d114 -> d112  [color=blue, key=0, style=bold];
d483 -> d107  [color=darkseagreen4, key=1, label=pr, style=dashed];
d106 -> d107  [key=0, style=solid];
d108 -> d106  [color=blue, key=0, style=bold];
d119 -> d128  [key=0, style=solid];
d119 -> d23  [key=2, style=dotted];
d121 -> d128  [key=0, style=solid];
d121 -> d23  [key=2, style=dotted];
d87 -> d76  [color=blue, key=0, style=bold];
d77 -> d78  [key=0, style=solid];
d77 -> d79  [key=0, style=solid];
d79 -> d84  [color=darkseagreen4, key=1, label=errors, style=dashed];
d79 -> d80  [key=0, style=solid];
d79 -> d82  [color=darkseagreen4, key=1, label=errors, style=dashed];
d103 -> d104  [key=0, style=solid];
d109 -> d110  [key=0, style=solid];
d115 -> d116  [key=0, style=solid];
d277 -> d275  [color=blue, key=0, style=bold];
d276 -> d277  [key=0, style=solid];
d317 -> d253  [color=blue, key=0, style=bold];
d316 -> d317  [key=0, style=solid];
d316 -> d318  [key=2, style=dotted];
d316 -> d319  [key=2, style=dotted];
d316 -> d320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d229 -> d227  [color=blue, key=0, style=bold];
d231 -> d232  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d315 -> d313  [color=blue, key=0, style=bold];
d314 -> d315  [key=0, style=solid];
d461 -> d462  [key=0, style=solid];
d457 -> d458  [key=0, style=solid];
d457 -> d459  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d78 -> d87  [key=0, style=solid];
d78 -> d88  [key=2, style=dotted];
d105 -> d103  [color=blue, key=0, style=bold];
d104 -> d105  [key=0, style=solid];
d111 -> d109  [color=blue, key=0, style=bold];
d110 -> d111  [key=0, style=solid];
d117 -> d115  [color=blue, key=0, style=bold];
d116 -> d117  [key=0, style=solid];
d320 -> d321  [key=0, style=solid];
d320 -> d322  [color=darkseagreen4, key=1, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>", style=dashed];
d233 -> d231  [color=blue, key=0, style=bold];
d232 -> d233  [key=0, style=solid];
d5 -> d4  [color=blue, key=0, style=bold];
d95 -> d93  [color=blue, key=0, style=bold];
d94 -> d95  [key=0, style=solid];
d98 -> d96  [color=blue, key=0, style=bold];
d97 -> d98  [key=0, style=solid];
d325 -> d320  [color=blue, key=0, style=bold];
d321 -> d322  [key=0, style=solid];
d321 -> d323  [color=darkseagreen4, key=1, label=prop, style=dashed];
d322 -> d323  [key=0, style=solid];
d322 -> d324  [color=darkseagreen4, key=1, label=attr, style=dashed];
d324 -> d325  [key=0, style=solid];
d324 -> d327  [key=2, style=dotted];
d323 -> d324  [key=0, style=solid];
d323 -> d326  [key=2, style=dotted];
}
