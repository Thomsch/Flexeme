digraph  {
n0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
n1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18"];
n2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
n4 [cluster="lambda expression", label="spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0)", span="18-18"];
n3 [cluster="lambda expression", label="Entry lambda expression", span="18-18"];
n5 [cluster="lambda expression", label="Exit lambda expression", span="18-18"];
n6 [cluster="System.Type.ToDescriptor()", label="Entry System.Type.ToDescriptor()", span="22-22"];
n7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
n8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24"];
n9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
n11 [cluster="lambda expression", label="spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24"];
n10 [cluster="lambda expression", label="Entry lambda expression", span="23-24"];
n12 [cluster="lambda expression", label="Exit lambda expression", span="23-24"];
n13 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="76-76"];
n14 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="81-81"];
n15 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
n16 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29"];
n17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
n19 [cluster="lambda expression", label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29"];
n18 [cluster="lambda expression", label="Entry lambda expression", span="29-29"];
n20 [cluster="lambda expression", label="Exit lambda expression", span="29-29"];
n21 [cluster="CommandLine.Core.Specification.IsOption()", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m3_15 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="29-29"];
m3_16 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="StringExtensions.cs", label="return new string(' ', value);", span="31-31"];
m3_17 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="29-29"];
m3_12 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="24-24"];
m3_13 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs", label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="26-26"];
m3_14 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="24-24"];
m3_3 [cluster="string.String(char, int)", file="StringExtensions.cs", label="Entry string.String(char, int)", span="0-0"];
m3_31 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="StringExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m3_32 [cluster="System.Text.StringBuilder.Append(string)", file="StringExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m3_21 [cluster="string.CompareOrdinal(string, string)", file="StringExtensions.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m3_7 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="StringExtensions.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m3_18 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="34-34"];
m3_19 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="StringExtensions.cs", label="return string.CompareOrdinal(strA, strB) == 0;", span="36-36"];
m3_20 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="34-34"];
m3_33 [cluster="System.Text.StringBuilder.ToString()", file="StringExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m3_25 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="45-45"];
m3_26 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", color=green, community=0, file="StringExtensions.cs", label="0: var builder = new StringBuilder(value)", span="47-47"];
m3_27 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", color=green, community=0, file="StringExtensions.cs", label="0: others", span="48-48"];
m3_28 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", color=green, community=0, file="StringExtensions.cs", label="0: builder.Append(v)", span="50-50"];
m3_29 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", color=green, community=0, file="StringExtensions.cs", label="0: return builder.ToString();", span="52-52"];
m3_30 [cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="45-45"];
m3_22 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="39-39"];
m3_23 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="StringExtensions.cs", label="return value == null ? 0 : value.Length;", span="41-41"];
m3_24 [cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="39-39"];
m3_8 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="19-19"];
m3_9 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs", label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="21-21"];
m3_10 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="19-19"];
m3_0 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="9-9"];
m3_1 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="StringExtensions.cs", label="return new string(c, 1);", span="11-11"];
m3_2 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="9-9"];
m3_4 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="StringExtensions.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="14-14"];
m3_5 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="StringExtensions.cs", label="return Convert.ToString(value, CultureInfo.InvariantCulture);", span="16-16"];
m3_6 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="StringExtensions.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="14-14"];
m3_11 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="StringExtensions.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n1 -> n1  [color=darkorchid, key=3, label="Field variable int BuilderCapacity", style=bold];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n5 -> n3  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n9 -> n7  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n6  [key=2, style=dotted];
n11 -> n13  [key=2, style=dotted];
n11 -> n14  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n12 -> n10  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n17 -> n15  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n20 -> n18  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_3  [key=2, style=dotted];
m3_17 -> m3_15  [color=blue, key=0, style=bold];
m3_12 -> m3_13  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_11  [key=2, style=dotted];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_18 -> m3_19  [key=0, style=solid];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [key=2, style=dotted];
m3_20 -> m3_18  [color=blue, key=0, style=bold];
m3_25 -> m3_26  [color=green, key=0, style=solid];
m3_25 -> m3_27  [color=green, key=1, label="params string[]", style=dashed];
m3_26 -> m3_27  [color=green, key=0, style=solid];
m3_26 -> m3_31  [color=green, key=2, style=dotted];
m3_26 -> m3_28  [color=green, key=1, label=builder, style=dashed];
m3_26 -> m3_29  [color=green, key=1, label=builder, style=dashed];
m3_27 -> m3_28  [color=green, key=0, style=solid];
m3_27 -> m3_29  [color=green, key=0, style=solid];
m3_28 -> m3_27  [color=green, key=0, style=solid];
m3_28 -> m3_32  [color=green, key=2, style=dotted];
m3_29 -> m3_30  [color=green, key=0, style=solid];
m3_29 -> m3_33  [color=green, key=2, style=dotted];
m3_30 -> m3_25  [color=blue, key=0, style=bold];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_22  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_11  [key=2, style=dotted];
m3_10 -> m3_8  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
}
