digraph  {
n341 [label=options, span=""];
n0 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43"];
n1 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", color=red, community=0, label="-1: Assert.Throws<ArgumentNullException>(\r\n                () => new Parser().ParseArguments(null, new SimpleOptions()))", span="45-46"];
n2 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_arguments_array_is_null()", span="43-43"];
n3 [cluster="Unk.>", label="Entry Unk.>", span=""];
n4 [cluster="lambda expression", label="Entry lambda expression", span="46-46"];
n5 [cluster="lambda expression", label="new Parser().ParseArguments(null, new SimpleOptions())", span="46-46"];
n6 [cluster="lambda expression", label="Exit lambda expression", span="46-46"];
n7 [cluster="CommandLine.Parser.Parser()", label="Entry CommandLine.Parser.Parser()", span="55-55"];
n8 [cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33"];
n9 [cluster="CommandLine.Parser.ParseArguments(string[], object)", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141"];
n10 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Entry CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50"];
n11 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Assert.Throws<ArgumentNullException>(\r\n                () => new Parser().ParseArguments(new string[] {}, null))", span="52-53"];
n12 [cluster="CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", label="Exit CommandLine.Tests.Unit.ParserFixture.Will_throw_exception_if_options_instance_is_null()", span="50-50"];
n13 [cluster="lambda expression", label="Entry lambda expression", span="53-53"];
n14 [cluster="lambda expression", label="new Parser().ParseArguments(new string[] {}, null)", span="53-53"];
n15 [cluster="lambda expression", label="Exit lambda expression", span="53-53"];
n16 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57"];
n17 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="var options = new SimpleOptions()", span="59-59"];
n18 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="var parser = new Parser()", span="60-60"];
n19 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", color=red, community=0, label="-1: var result = parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="61-61"];
n21 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="options.StringValue.Should().Be(''something'')", span="64-64"];
n22 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Console.WriteLine(options)", span="65-65"];
n20 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="result.Should().BeTrue()", span="63-63"];
n24 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
n25 [cluster="Unk.BeTrue", label="Entry Unk.BeTrue", span=""];
n26 [cluster="Unk.Be", label="Entry Unk.Be", span=""];
n23 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_option()", span="57-57"];
n27 [cluster="System.Console.WriteLine(object)", label="Entry System.Console.WriteLine(object)", span="0-0"];
n28 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69"];
n29 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="var options = new SimpleOptions()", span="71-71"];
n30 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", color=red, community=0, label="-1: var parser = new Parser()", span="72-72"];
n31 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", color=red, community=0, label="-1: var result = parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="73-74"];
n33 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", color=red, community=0, label="-1: options.StringValue.Should().Be(''another string'')", span="77-77"];
n34 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="options.IntegerValue.Should().Be(100)", span="78-78"];
n35 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="options.BooleanValue.Should().BeTrue()", span="79-79"];
n36 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Console.WriteLine(options)", span="80-80"];
n32 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="result.Should().BeTrue()", span="76-76"];
n37 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_string_integer_bool_options()", span="69-69"];
n38 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84"];
n39 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var options = new BooleanSetOptions()", span="86-86"];
n40 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var parser = new Parser()", span="87-87"];
n49 [cluster="CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", label="Entry CommandLine.Tests.Fakes.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
n41 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="var result = parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="88-88"];
n43 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanThree.Should().BeTrue()", span="91-91"];
n44 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanOne.Should().BeTrue()", span="92-92"];
n45 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.BooleanTwo.Should().BeFalse()", span="93-93"];
n46 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="options.NonBooleanValue.Should().Be(65D)", span="94-94"];
n47 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Console.WriteLine(options)", span="95-95"];
n42 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="result.Should().BeTrue()", span="90-90"];
n50 [cluster="Unk.BeFalse", label="Entry Unk.BeFalse", span=""];
n48 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_adjacent_options()", span="84-84"];
n51 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99"];
n52 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var options = new BooleanSetOptions()", span="101-101"];
n53 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var parser = new Parser()", span="102-102"];
n54 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="var result = parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="103-103"];
n56 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanTwo.Should().BeTrue()", span="106-106"];
n57 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanOne.Should().BeFalse()", span="107-107"];
n58 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.BooleanThree.Should().BeFalse()", span="108-108"];
n59 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="options.NonBooleanValue.Should().Be(9D)", span="109-109"];
n60 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Console.WriteLine(options)", span="110-110"];
n55 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="result.Should().BeTrue()", span="105-105"];
n61 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_short_long_options()", span="99-99"];
n62 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114"];
n63 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var options = new SimpleOptionsWithOptionList()", span="116-116"];
n64 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var parser = new Parser()", span="117-117"];
n76 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
n65 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="var result = parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119"];
n67 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[0].Should().Be(''string1'')", span="122-122"];
n68 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[0])", span="123-123"];
n69 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[1].Should().Be(''stringTwo'')", span="124-124"];
n70 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[1])", span="125-125"];
n71 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.SearchKeywords[2].Should().Be(''stringIII'')", span="126-126"];
n72 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.SearchKeywords[2])", span="127-127"];
n73 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="options.StringValue.Should().Be(''test-file.txt'')", span="128-128"];
n74 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Console.WriteLine(options.StringValue)", span="129-129"];
n66 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="result.Should().BeTrue()", span="121-121"];
n77 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n75 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_option_list()", span="114-114"];
n78 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Entry CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134"];
n79 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var options = new SimpleOptions()", span="136-136"];
n80 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var parser = new Parser()", span="137-137"];
n81 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="var result = parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138"];
n83 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Console.WriteLine(options)", span="140-140"];
n82 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="result.Should().BeFalse()", span="139-139"];
n84 [cluster="CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", label="Exit CommandLine.Tests.Unit.ParserFixture.Short_option_refuses_equal_token()", span="134-134"];
n85 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145"];
n86 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
n87 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var parser = new Parser()", span="148-148"];
n94 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
n88 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="var result = parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
n90 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="options.StringValue.Should().Be(''data.bin'')", span="152-152"];
n91 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="options.FileAccess.Should().Be(FileAccess.ReadWrite)", span="153-153"];
n92 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Console.WriteLine(options)", span="154-154"];
n89 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="result.Should().BeTrue()", span="151-151"];
n93 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_enum_options()", span="145-145"];
n95 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158"];
n96 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var options = new NumberSetOptions()", span="162-162"];
n97 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var parser = new Parser(new ParserSettings { ParsingCulture = new CultureInfo(''it-IT'') })", span="163-163"];
n102 [cluster="CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", label="Entry CommandLine.Tests.Fakes.NumberSetOptions.NumberSetOptions()", span="34-34"];
n98 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="var result = parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="164-164"];
n100 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="options.DoubleValue.Should().Be(10.986D)", span="167-167"];
n103 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
n104 [cluster="CommandLine.ParserSettings.ParserSettings()", label="Entry CommandLine.ParserSettings.ParserSettings()", span="43-43"];
n105 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
n99 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="result.Should().BeTrue()", span="166-166"];
n101 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_number()", span="158-158"];
n106 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173"];
n107 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="175-175"];
n108 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="176-176"];
n114 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="184-184"];
n109 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var options = new NumberSetOptions()", span="177-177"];
n110 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var parser = new Parser()", span="178-178"];
n111 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="var result = parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="179-179"];
n113 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="options.NullableDoubleValue.Should().Be(12.32982D)", span="182-182"];
n112 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="result.Should().BeTrue()", span="181-181"];
n115 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_culture_specific_nullable_number()", span="173-173"];
n116 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188"];
n117 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var options = new SimpleOptionsWithDefaults()", span="190-190"];
n118 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var parser = new Parser()", span="191-191"];
n125 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="32-32"];
n119 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="var result = parser.ParseArguments(new string[] {}, options)", span="192-192"];
n121 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.StringValue.Should().Be(''str'')", span="195-195"];
n122 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.IntegerValue.Should().Be(9)", span="196-196"];
n123 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="options.BooleanValue.Should().BeTrue()", span="197-197"];
n120 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="result.Should().BeTrue()", span="194-194"];
n124 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_defaults()", span="188-188"];
n126 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201"];
n127 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var options = new SimpleOptionsWithDefaultArray()", span="203-203"];
n128 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var parser = new Parser()", span="204-204"];
n135 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
n129 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="var result = parser.ParseArguments(new [] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="205-205"];
n131 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.StringArrayValue.Should().Equal(new [] { ''a'', ''b'', ''c'' })", span="208-208"];
n132 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.IntegerArrayValue.Should().Equal(new [] { 4, 5, 6 })", span="209-209"];
n133 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="options.DoubleArrayValue.Should().Equal(new [] { 1.1, 2.2, 3.3 })", span="210-210"];
n130 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="result.Should().BeTrue()", span="207-207"];
n136 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
n134 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_default_array()", span="201-201"];
n137 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214"];
n138 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="var options = new SimpleOptionsWithBadDefaults()", span="216-216"];
n139 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Assert.Throws<ParserException>(\r\n                () => new Parser().ParseArguments(new string[] {}, options))", span="217-218"];
n141 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="32-32"];
n143 [cluster="lambda expression", label="new Parser().ParseArguments(new string[] {}, options)", span="218-218"];
n140 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_options_with_bad_defaults()", span="214-214"];
n142 [cluster="lambda expression", label="Entry lambda expression", span="218-218"];
n144 [cluster="lambda expression", label="Exit lambda expression", span="218-218"];
n145 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223"];
n146 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var options = new SimpleOptions()", span="225-225"];
n147 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var parser = new Parser()", span="226-226"];
n148 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="var result = parser.ParseArguments(new string[] { ''-x'' }, options)", span="227-227"];
n149 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="result.Should().BeFalse()", span="229-229"];
n150 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_short_option_fails_without_throwing_an_exception()", span="223-223"];
n151 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233"];
n152 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var options = new SimpleOptions()", span="235-235"];
n153 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var parser = new Parser()", span="236-236"];
n154 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="var result = parser.ParseArguments(new string[] { ''--extend'' }, options)", span="237-237"];
n155 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="result.Should().BeFalse()", span="239-239"];
n156 [cluster="CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parsing_non_existent_long_option_fails_without_throwing_an_exception()", span="233-233"];
n157 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="Entry CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245"];
n158 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var parser = new Parser()", span="247-247"];
n159 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var options = new MixedCaseOptions()", span="248-248"];
n160 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="var result = parser.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="249-249"];
n165 [cluster="CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", label="Entry CommandLine.Tests.Fakes.MixedCaseOptions.MixedCaseOptions()", span="31-31"];
n162 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="options.AlfaValue.Should().Be(''alfa'')", span="252-252"];
n163 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="options.BetaValue.Should().Be(''beta'')", span="253-253"];
n161 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="result.Should().BeTrue()", span="251-251"];
n164 [cluster="CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", label="Exit CommandLine.Tests.Unit.ParserFixture.Default_parsing_is_case_sensitive()", span="245-245"];
n166 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257"];
n167 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var parser = new Parser()", span="259-259"];
n168 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var options = new MixedCaseOptions()", span="260-260"];
n169 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="261-261"];
n170 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="result.Should().BeFalse()", span="263-263"];
n171 [cluster="CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Using_wrong_case_with_default_fails()", span="257-257"];
n172 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="Entry CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267"];
n173 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var parser = new Parser(new ParserSettings(false))", span="269-269"];
n174 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var options = new MixedCaseOptions()", span="270-270"];
n180 [cluster="CommandLine.ParserSettings.ParserSettings(bool)", label="Entry CommandLine.ParserSettings.ParserSettings(bool)", span="53-53"];
n175 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="var result = parser.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="271-271"];
n177 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="options.AlfaValue.Should().Be(''alfa'')", span="274-274"];
n178 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="options.BetaValue.Should().Be(''beta'')", span="275-275"];
n176 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="result.Should().BeTrue()", span="273-273"];
n179 [cluster="CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", label="Exit CommandLine.Tests.Unit.ParserFixture.Disabling_case_sensitive()", span="267-267"];
n181 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281"];
n182 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var options = new SimpleOptions()", span="283-283"];
n183 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var parser = new Parser()", span="284-284"];
n184 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--string'' }, options)", span="285-285"];
n185 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="result.Should().BeFalse()", span="287-287"];
n186 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_string_type_long_option_fails()", span="281-281"];
n187 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291"];
n188 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var options = new NumberSetOptions()", span="293-293"];
n189 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var parser = new Parser()", span="294-294"];
n190 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--byte'' }, options)", span="295-295"];
n191 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="result.Should().BeFalse()", span="297-297"];
n192 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_byte_type_long_option_fails()", span="291-291"];
n193 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301"];
n194 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var options = new NumberSetOptions()", span="303-303"];
n195 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var parser = new Parser()", span="304-304"];
n196 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--short'' }, options)", span="305-305"];
n197 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="result.Should().BeFalse()", span="307-307"];
n198 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_short_type_long_option_fails()", span="301-301"];
n199 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311"];
n200 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var options = new NumberSetOptions()", span="313-313"];
n201 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var parser = new Parser()", span="314-314"];
n202 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--int'' }, options)", span="315-315"];
n203 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="result.Should().BeFalse()", span="317-317"];
n204 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_an_integer_type_long_option_fails()", span="311-311"];
n205 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321"];
n206 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var options = new NumberSetOptions()", span="323-323"];
n207 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var parser = new Parser()", span="324-324"];
n208 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--long'' }, options)", span="325-325"];
n209 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="result.Should().BeFalse()", span="327-327"];
n210 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_long_type_long_option_fails()", span="321-321"];
n211 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331"];
n212 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var options = new NumberSetOptions()", span="333-333"];
n213 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var parser = new Parser()", span="334-334"];
n214 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--float'' }, options)", span="335-335"];
n215 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="result.Should().BeFalse()", span="337-337"];
n216 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_float_type_long_option_fails()", span="331-331"];
n217 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341"];
n218 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var options = new NumberSetOptions()", span="343-343"];
n219 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var parser = new Parser()", span="344-344"];
n220 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="var result = parser.ParseArguments(new string[] { ''--double'' }, options)", span="345-345"];
n221 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="result.Should().BeFalse()", span="347-347"];
n222 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_no_value_to_a_double_type_long_option_fails()", span="341-341"];
n223 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353"];
n224 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var options = new SimpleOptions()", span="355-355"];
n225 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var parser = new Parser()", span="356-356"];
n226 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="var result = parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="357-357"];
n228 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="options.StringValue.Should().Be(''-'')", span="360-360"];
n227 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="result.Should().BeTrue()", span="359-359"];
n229 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_option_input_value()", span="353-353"];
n230 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364"];
n231 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var options = new SimpleOptionsWithValueList()", span="366-366"];
n232 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var parser = new Parser()", span="367-367"];
n240 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
n233 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="var result = parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="368-368"];
n235 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.StringValue.Should().Be(''parser.xml'')", span="371-371"];
n236 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.BooleanValue.Should().BeTrue()", span="372-372"];
n237 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.Items.Count.Should().Be(1)", span="373-373"];
n238 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="options.Items[0].Should().Be(''-'')", span="374-374"];
n234 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="result.Should().BeTrue()", span="370-370"];
n239 [cluster="CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Allow_single_dash_as_non_option_value()", span="364-364"];
n241 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380"];
n242 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var options = new SimpleOptions()", span="382-382"];
n243 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var parser = new Parser()", span="383-383"];
n244 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="var result = parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="384-384"];
n246 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="options.IntegerValue.Should().Be(-4096)", span="387-387"];
n245 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="result.Should().BeTrue()", span="386-386"];
n247 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_integer_value()", span="380-380"];
n248 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390"];
n249 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var options = new NumberSetOptions()", span="392-392"];
n250 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var parser = new Parser()", span="393-393"];
n251 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="var result = parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="394-394"];
n253 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="options.IntegerValue.Should().Be(-4096)", span="397-397"];
n252 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="result.Should().BeTrue()", span="396-396"];
n254 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="390-390"];
n255 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400"];
n256 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var options = new NumberSetOptions()", span="402-402"];
n257 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var parser = new Parser()", span="403-403"];
n258 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="var result = parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="404-404"];
n260 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="options.IntegerValue.Should().Be(-4096)", span="407-407"];
n259 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="result.Should().BeTrue()", span="406-406"];
n261 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="400-400"];
n262 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Entry CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410"];
n263 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var options = new NumberSetOptions()", span="412-412"];
n264 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var parser = new Parser()", span="413-413"];
n265 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="var result = parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="414-414"];
n267 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="options.IntegerValue.Should().Be(-4096)", span="417-417"];
n266 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="result.Should().BeTrue()", span="416-416"];
n268 [cluster="CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", label="Exit CommandLine.Tests.Unit.ParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="410-410"];
n269 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422"];
n270 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var options = new NumberSetOptions()", span="424-424"];
n271 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var parser = new Parser()", span="425-425"];
n272 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="var result = parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="426-426"];
n274 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="429-429"];
n273 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="result.Should().BeTrue()", span="428-428"];
n275 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value()", span="422-422"];
n276 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433"];
n277 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var options = new NumberSetOptions()", span="435-435"];
n278 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var parser = new Parser()", span="436-436"];
n279 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="var result = parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="437-437"];
n281 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="440-440"];
n280 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="result.Should().BeTrue()", span="439-439"];
n282 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style2()", span="433-433"];
n283 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444"];
n284 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var options = new NumberSetOptions()", span="446-446"];
n285 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var parser = new Parser()", span="447-447"];
n286 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="var result = parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="448-448"];
n288 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="451-451"];
n287 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="result.Should().BeTrue()", span="450-450"];
n289 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style3()", span="444-444"];
n290 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455"];
n291 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var options = new NumberSetOptions()", span="457-457"];
n292 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var parser = new Parser()", span="458-458"];
n293 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="var result = parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="459-459"];
n295 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="options.DoubleValue.Should().Be(-4096.1024D)", span="462-462"];
n294 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="result.Should().BeTrue()", span="461-461"];
n296 [cluster="CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parse_negative_floating_point_value_input_style4()", span="455-455"];
n297 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468"];
n298 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="470-470"];
n299 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var parser = new Parser()", span="471-471"];
n300 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="472-472"];
n301 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="474-474"];
n303 [cluster="short.ToString(System.IFormatProvider)", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
n302 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_short_value_to_byte_option_must_fail_gracefully()", span="468-468"];
n304 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478"];
n305 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="480-480"];
n306 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var parser = new Parser()", span="481-481"];
n307 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="482-482"];
n308 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="484-484"];
n310 [cluster="int.ToString(System.IFormatProvider)", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
n309 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_integer_value_to_short_option_must_fail_gracefully()", span="478-478"];
n311 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488"];
n312 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="490-490"];
n313 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var parser = new Parser()", span="491-491"];
n314 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="492-492"];
n315 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="494-494"];
n317 [cluster="long.ToString(System.IFormatProvider)", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
n316 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_long_value_to_integer_option_must_fail_gracefully()", span="488-488"];
n318 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498"];
n319 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="500-500"];
n320 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var parser = new Parser()", span="501-501"];
n321 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="502-502"];
n322 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="504-504"];
n324 [cluster="float.ToString(System.IFormatProvider)", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
n323 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_float_value_to_long_option_must_fail_gracefully()", span="498-498"];
n325 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="Entry CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508"];
n326 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var options = new NumberSetOptions()", span="510-510"];
n327 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var parser = new Parser()", span="511-511"];
n328 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="var result = parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="512-512"];
n329 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="result.Should().BeFalse()", span="514-514"];
n331 [cluster="double.ToString(System.IFormatProvider)", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
n330 [cluster="CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", label="Exit CommandLine.Tests.Unit.ParserFixture.Passing_double_value_to_float_option_must_fail_gracefully()", span="508-508"];
n332 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="Entry CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523"];
n333 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var options = new ComplexOptions()", span="525-525"];
n334 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var parser = new Parser()", span="526-526"];
n339 [cluster="CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", label="Entry CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", span="37-37"];
n335 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="var result = parser.ParseArguments(new[] { ''-i'', ''-o'' }, options)", span="527-527"];
n337 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="options.LastParserState.Errors.Count.Should().BeGreaterThan(0)", span="531-531"];
n336 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="result.Should().BeFalse()", span="529-529"];
n338 [cluster="CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", label="Exit CommandLine.Tests.Unit.ParserFixture.Parser_should_report_missing_value()", span="523-523"];
n340 [cluster="Unk.BeGreaterThan", label="Entry Unk.BeGreaterThan", span=""];
n341 -> n143  [color=darkseagreen4, key=1, label=options, style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n3  [color=red, key=2, style=dotted];
n1 -> n4  [color=red, key=1, label="lambda expression", style=dashed];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n5 -> n7  [key=2, style=dotted];
n5 -> n8  [key=2, style=dotted];
n5 -> n9  [key=2, style=dotted];
n6 -> n4  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n11 -> n12  [key=0, style=solid];
n11 -> n3  [key=2, style=dotted];
n11 -> n13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n12 -> n10  [color=blue, key=0, style=bold];
n13 -> n14  [key=0, style=solid];
n14 -> n15  [key=0, style=solid];
n14 -> n7  [key=2, style=dotted];
n14 -> n9  [key=2, style=dotted];
n15 -> n13  [color=blue, key=0, style=bold];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n8  [key=2, style=dotted];
n17 -> n19  [color=red, key=1, label=options, style=dashed];
n17 -> n21  [color=darkseagreen4, key=1, label=options, style=dashed];
n17 -> n22  [color=darkseagreen4, key=1, label=options, style=dashed];
n18 -> n19  [color=red, key=0, style=solid];
n18 -> n7  [key=2, style=dotted];
n19 -> n20  [color=red, key=0, style=solid];
n19 -> n9  [color=red, key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n24  [key=2, style=dotted];
n21 -> n26  [key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n27  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n24  [key=2, style=dotted];
n20 -> n25  [key=2, style=dotted];
n23 -> n16  [color=blue, key=0, style=bold];
n28 -> n29  [key=0, style=solid];
n29 -> n30  [color=red, key=0, style=solid];
n29 -> n8  [key=2, style=dotted];
n29 -> n31  [color=red, key=1, label=options, style=dashed];
n29 -> n33  [color=red, key=1, label=options, style=dashed];
n29 -> n34  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n35  [color=darkseagreen4, key=1, label=options, style=dashed];
n29 -> n36  [color=darkseagreen4, key=1, label=options, style=dashed];
n30 -> n31  [color=red, key=0, style=solid];
n30 -> n7  [color=red, key=2, style=dotted];
n31 -> n32  [color=red, key=0, style=solid];
n31 -> n9  [color=red, key=2, style=dotted];
n33 -> n34  [color=red, key=0, style=solid];
n33 -> n24  [color=red, key=2, style=dotted];
n33 -> n26  [color=red, key=2, style=dotted];
n34 -> n35  [key=0, style=solid];
n34 -> n24  [key=2, style=dotted];
n34 -> n26  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n35 -> n24  [key=2, style=dotted];
n35 -> n25  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n27  [key=2, style=dotted];
n32 -> n33  [color=red, key=0, style=solid];
n32 -> n24  [key=2, style=dotted];
n32 -> n25  [key=2, style=dotted];
n37 -> n28  [color=blue, key=0, style=bold];
n38 -> n39  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n39 -> n49  [key=2, style=dotted];
n39 -> n41  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n43  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n44  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n45  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n46  [color=darkseagreen4, key=1, label=options, style=dashed];
n39 -> n47  [color=darkseagreen4, key=1, label=options, style=dashed];
n40 -> n41  [key=0, style=solid];
n40 -> n7  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n9  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n24  [key=2, style=dotted];
n43 -> n25  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n24  [key=2, style=dotted];
n44 -> n25  [key=2, style=dotted];
n45 -> n46  [key=0, style=solid];
n45 -> n24  [key=2, style=dotted];
n45 -> n50  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n24  [key=2, style=dotted];
n46 -> n26  [key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n27  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n24  [key=2, style=dotted];
n42 -> n25  [key=2, style=dotted];
n48 -> n38  [color=blue, key=0, style=bold];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n49  [key=2, style=dotted];
n52 -> n54  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n56  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n57  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n58  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n59  [color=darkseagreen4, key=1, label=options, style=dashed];
n52 -> n60  [color=darkseagreen4, key=1, label=options, style=dashed];
n53 -> n54  [key=0, style=solid];
n53 -> n7  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n9  [key=2, style=dotted];
n56 -> n57  [key=0, style=solid];
n56 -> n24  [key=2, style=dotted];
n56 -> n25  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n24  [key=2, style=dotted];
n57 -> n50  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n24  [key=2, style=dotted];
n58 -> n50  [key=2, style=dotted];
n59 -> n60  [key=0, style=solid];
n59 -> n24  [key=2, style=dotted];
n59 -> n26  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n27  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n24  [key=2, style=dotted];
n55 -> n25  [key=2, style=dotted];
n61 -> n51  [color=blue, key=0, style=bold];
n62 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n76  [key=2, style=dotted];
n63 -> n65  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n67  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n68  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n69  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n70  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n71  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n72  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n73  [color=darkseagreen4, key=1, label=options, style=dashed];
n63 -> n74  [color=darkseagreen4, key=1, label=options, style=dashed];
n64 -> n65  [key=0, style=solid];
n64 -> n7  [key=2, style=dotted];
n65 -> n66  [key=0, style=solid];
n65 -> n9  [key=2, style=dotted];
n67 -> n68  [key=0, style=solid];
n67 -> n24  [key=2, style=dotted];
n67 -> n26  [key=2, style=dotted];
n68 -> n69  [key=0, style=solid];
n68 -> n77  [key=2, style=dotted];
n69 -> n70  [key=0, style=solid];
n69 -> n24  [key=2, style=dotted];
n69 -> n26  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n77  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n24  [key=2, style=dotted];
n71 -> n26  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n77  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n24  [key=2, style=dotted];
n73 -> n26  [key=2, style=dotted];
n74 -> n75  [key=0, style=solid];
n74 -> n77  [key=2, style=dotted];
n66 -> n67  [key=0, style=solid];
n66 -> n24  [key=2, style=dotted];
n66 -> n25  [key=2, style=dotted];
n75 -> n62  [color=blue, key=0, style=bold];
n78 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n79 -> n8  [key=2, style=dotted];
n79 -> n81  [color=darkseagreen4, key=1, label=options, style=dashed];
n79 -> n83  [color=darkseagreen4, key=1, label=options, style=dashed];
n80 -> n81  [key=0, style=solid];
n80 -> n7  [key=2, style=dotted];
n81 -> n82  [key=0, style=solid];
n81 -> n9  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n27  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n24  [key=2, style=dotted];
n82 -> n50  [key=2, style=dotted];
n84 -> n78  [color=blue, key=0, style=bold];
n85 -> n86  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n86 -> n94  [key=2, style=dotted];
n86 -> n88  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n90  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n91  [color=darkseagreen4, key=1, label=options, style=dashed];
n86 -> n92  [color=darkseagreen4, key=1, label=options, style=dashed];
n87 -> n88  [key=0, style=solid];
n87 -> n7  [key=2, style=dotted];
n88 -> n89  [key=0, style=solid];
n88 -> n9  [key=2, style=dotted];
n90 -> n91  [key=0, style=solid];
n90 -> n24  [key=2, style=dotted];
n90 -> n26  [key=2, style=dotted];
n91 -> n92  [key=0, style=solid];
n91 -> n24  [key=2, style=dotted];
n91 -> n26  [key=2, style=dotted];
n92 -> n93  [key=0, style=solid];
n92 -> n27  [key=2, style=dotted];
n89 -> n90  [key=0, style=solid];
n89 -> n24  [key=2, style=dotted];
n89 -> n25  [key=2, style=dotted];
n93 -> n85  [color=blue, key=0, style=bold];
n95 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n102  [key=2, style=dotted];
n96 -> n98  [color=darkseagreen4, key=1, label=options, style=dashed];
n96 -> n100  [color=darkseagreen4, key=1, label=options, style=dashed];
n97 -> n98  [key=0, style=solid];
n97 -> n103  [key=2, style=dotted];
n97 -> n104  [key=2, style=dotted];
n97 -> n105  [key=2, style=dotted];
n98 -> n99  [key=0, style=solid];
n98 -> n9  [key=2, style=dotted];
n100 -> n101  [key=0, style=solid];
n100 -> n24  [key=2, style=dotted];
n100 -> n26  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n99 -> n24  [key=2, style=dotted];
n99 -> n25  [key=2, style=dotted];
n101 -> n95  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n107 -> n114  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
n108 -> n109  [key=0, style=solid];
n108 -> n105  [key=2, style=dotted];
n114 -> n115  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n109 -> n102  [key=2, style=dotted];
n109 -> n111  [color=darkseagreen4, key=1, label=options, style=dashed];
n109 -> n113  [color=darkseagreen4, key=1, label=options, style=dashed];
n110 -> n111  [key=0, style=solid];
n110 -> n7  [key=2, style=dotted];
n111 -> n112  [key=0, style=solid];
n111 -> n9  [key=2, style=dotted];
n113 -> n114  [key=0, style=solid];
n113 -> n24  [key=2, style=dotted];
n113 -> n26  [key=2, style=dotted];
n112 -> n113  [key=0, style=solid];
n112 -> n24  [key=2, style=dotted];
n112 -> n25  [key=2, style=dotted];
n115 -> n106  [color=blue, key=0, style=bold];
n116 -> n117  [key=0, style=solid];
n117 -> n118  [key=0, style=solid];
n117 -> n125  [key=2, style=dotted];
n117 -> n119  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n121  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n122  [color=darkseagreen4, key=1, label=options, style=dashed];
n117 -> n123  [color=darkseagreen4, key=1, label=options, style=dashed];
n118 -> n119  [key=0, style=solid];
n118 -> n7  [key=2, style=dotted];
n119 -> n120  [key=0, style=solid];
n119 -> n9  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n24  [key=2, style=dotted];
n121 -> n26  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n122 -> n24  [key=2, style=dotted];
n122 -> n26  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n123 -> n24  [key=2, style=dotted];
n123 -> n25  [key=2, style=dotted];
n120 -> n121  [key=0, style=solid];
n120 -> n24  [key=2, style=dotted];
n120 -> n25  [key=2, style=dotted];
n124 -> n116  [color=blue, key=0, style=bold];
n126 -> n127  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n135  [key=2, style=dotted];
n127 -> n129  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n131  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n132  [color=darkseagreen4, key=1, label=options, style=dashed];
n127 -> n133  [color=darkseagreen4, key=1, label=options, style=dashed];
n128 -> n129  [key=0, style=solid];
n128 -> n7  [key=2, style=dotted];
n129 -> n130  [key=0, style=solid];
n129 -> n9  [key=2, style=dotted];
n131 -> n132  [key=0, style=solid];
n131 -> n24  [key=2, style=dotted];
n131 -> n136  [key=2, style=dotted];
n132 -> n133  [key=0, style=solid];
n132 -> n24  [key=2, style=dotted];
n132 -> n136  [key=2, style=dotted];
n133 -> n134  [key=0, style=solid];
n133 -> n24  [key=2, style=dotted];
n133 -> n136  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n130 -> n24  [key=2, style=dotted];
n130 -> n25  [key=2, style=dotted];
n134 -> n126  [color=blue, key=0, style=bold];
n137 -> n138  [key=0, style=solid];
n138 -> n139  [key=0, style=solid];
n138 -> n141  [key=2, style=dotted];
n138 -> n143  [color=darkseagreen4, key=1, label=options, style=dashed];
n139 -> n140  [key=0, style=solid];
n139 -> n3  [key=2, style=dotted];
n139 -> n142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n143 -> n144  [key=0, style=solid];
n143 -> n7  [key=2, style=dotted];
n143 -> n9  [key=2, style=dotted];
n140 -> n137  [color=blue, key=0, style=bold];
n142 -> n143  [key=0, style=solid];
n144 -> n142  [color=blue, key=0, style=bold];
n145 -> n146  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n8  [key=2, style=dotted];
n146 -> n148  [color=darkseagreen4, key=1, label=options, style=dashed];
n147 -> n148  [key=0, style=solid];
n147 -> n7  [key=2, style=dotted];
n148 -> n149  [key=0, style=solid];
n148 -> n9  [key=2, style=dotted];
n149 -> n150  [key=0, style=solid];
n149 -> n24  [key=2, style=dotted];
n149 -> n50  [key=2, style=dotted];
n150 -> n145  [color=blue, key=0, style=bold];
n151 -> n152  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n8  [key=2, style=dotted];
n152 -> n154  [color=darkseagreen4, key=1, label=options, style=dashed];
n153 -> n154  [key=0, style=solid];
n153 -> n7  [key=2, style=dotted];
n154 -> n155  [key=0, style=solid];
n154 -> n9  [key=2, style=dotted];
n155 -> n156  [key=0, style=solid];
n155 -> n24  [key=2, style=dotted];
n155 -> n50  [key=2, style=dotted];
n156 -> n151  [color=blue, key=0, style=bold];
n157 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n7  [key=2, style=dotted];
n158 -> n160  [color=darkseagreen4, key=1, label=parser, style=dashed];
n159 -> n160  [key=0, style=solid];
n159 -> n165  [key=2, style=dotted];
n159 -> n162  [color=darkseagreen4, key=1, label=options, style=dashed];
n159 -> n163  [color=darkseagreen4, key=1, label=options, style=dashed];
n160 -> n161  [key=0, style=solid];
n160 -> n9  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n24  [key=2, style=dotted];
n162 -> n26  [key=2, style=dotted];
n163 -> n164  [key=0, style=solid];
n163 -> n24  [key=2, style=dotted];
n163 -> n26  [key=2, style=dotted];
n161 -> n162  [key=0, style=solid];
n161 -> n24  [key=2, style=dotted];
n161 -> n25  [key=2, style=dotted];
n164 -> n157  [color=blue, key=0, style=bold];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n7  [key=2, style=dotted];
n167 -> n169  [color=darkseagreen4, key=1, label=parser, style=dashed];
n168 -> n169  [key=0, style=solid];
n168 -> n165  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n169 -> n9  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n24  [key=2, style=dotted];
n170 -> n50  [key=2, style=dotted];
n171 -> n166  [color=blue, key=0, style=bold];
n172 -> n173  [key=0, style=solid];
n173 -> n174  [key=0, style=solid];
n173 -> n103  [key=2, style=dotted];
n173 -> n180  [key=2, style=dotted];
n173 -> n175  [color=darkseagreen4, key=1, label=parser, style=dashed];
n174 -> n175  [key=0, style=solid];
n174 -> n165  [key=2, style=dotted];
n174 -> n177  [color=darkseagreen4, key=1, label=options, style=dashed];
n174 -> n178  [color=darkseagreen4, key=1, label=options, style=dashed];
n175 -> n176  [key=0, style=solid];
n175 -> n9  [key=2, style=dotted];
n177 -> n178  [key=0, style=solid];
n177 -> n24  [key=2, style=dotted];
n177 -> n26  [key=2, style=dotted];
n178 -> n179  [key=0, style=solid];
n178 -> n24  [key=2, style=dotted];
n178 -> n26  [key=2, style=dotted];
n176 -> n177  [key=0, style=solid];
n176 -> n24  [key=2, style=dotted];
n176 -> n25  [key=2, style=dotted];
n179 -> n172  [color=blue, key=0, style=bold];
n181 -> n182  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n182 -> n8  [key=2, style=dotted];
n182 -> n184  [color=darkseagreen4, key=1, label=options, style=dashed];
n183 -> n184  [key=0, style=solid];
n183 -> n7  [key=2, style=dotted];
n184 -> n185  [key=0, style=solid];
n184 -> n9  [key=2, style=dotted];
n185 -> n186  [key=0, style=solid];
n185 -> n24  [key=2, style=dotted];
n185 -> n50  [key=2, style=dotted];
n186 -> n181  [color=blue, key=0, style=bold];
n187 -> n188  [key=0, style=solid];
n188 -> n189  [key=0, style=solid];
n188 -> n102  [key=2, style=dotted];
n188 -> n190  [color=darkseagreen4, key=1, label=options, style=dashed];
n189 -> n190  [key=0, style=solid];
n189 -> n7  [key=2, style=dotted];
n190 -> n191  [key=0, style=solid];
n190 -> n9  [key=2, style=dotted];
n191 -> n192  [key=0, style=solid];
n191 -> n24  [key=2, style=dotted];
n191 -> n50  [key=2, style=dotted];
n192 -> n187  [color=blue, key=0, style=bold];
n193 -> n194  [key=0, style=solid];
n194 -> n195  [key=0, style=solid];
n194 -> n102  [key=2, style=dotted];
n194 -> n196  [color=darkseagreen4, key=1, label=options, style=dashed];
n195 -> n196  [key=0, style=solid];
n195 -> n7  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n9  [key=2, style=dotted];
n197 -> n198  [key=0, style=solid];
n197 -> n24  [key=2, style=dotted];
n197 -> n50  [key=2, style=dotted];
n198 -> n193  [color=blue, key=0, style=bold];
n199 -> n200  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n102  [key=2, style=dotted];
n200 -> n202  [color=darkseagreen4, key=1, label=options, style=dashed];
n201 -> n202  [key=0, style=solid];
n201 -> n7  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n9  [key=2, style=dotted];
n203 -> n204  [key=0, style=solid];
n203 -> n24  [key=2, style=dotted];
n203 -> n50  [key=2, style=dotted];
n204 -> n199  [color=blue, key=0, style=bold];
n205 -> n206  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n102  [key=2, style=dotted];
n206 -> n208  [color=darkseagreen4, key=1, label=options, style=dashed];
n207 -> n208  [key=0, style=solid];
n207 -> n7  [key=2, style=dotted];
n208 -> n209  [key=0, style=solid];
n208 -> n9  [key=2, style=dotted];
n209 -> n210  [key=0, style=solid];
n209 -> n24  [key=2, style=dotted];
n209 -> n50  [key=2, style=dotted];
n210 -> n205  [color=blue, key=0, style=bold];
n211 -> n212  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n102  [key=2, style=dotted];
n212 -> n214  [color=darkseagreen4, key=1, label=options, style=dashed];
n213 -> n214  [key=0, style=solid];
n213 -> n7  [key=2, style=dotted];
n214 -> n215  [key=0, style=solid];
n214 -> n9  [key=2, style=dotted];
n215 -> n216  [key=0, style=solid];
n215 -> n24  [key=2, style=dotted];
n215 -> n50  [key=2, style=dotted];
n216 -> n211  [color=blue, key=0, style=bold];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n218 -> n102  [key=2, style=dotted];
n218 -> n220  [color=darkseagreen4, key=1, label=options, style=dashed];
n219 -> n220  [key=0, style=solid];
n219 -> n7  [key=2, style=dotted];
n220 -> n221  [key=0, style=solid];
n220 -> n9  [key=2, style=dotted];
n221 -> n222  [key=0, style=solid];
n221 -> n24  [key=2, style=dotted];
n221 -> n50  [key=2, style=dotted];
n222 -> n217  [color=blue, key=0, style=bold];
n223 -> n224  [key=0, style=solid];
n224 -> n225  [key=0, style=solid];
n224 -> n8  [key=2, style=dotted];
n224 -> n226  [color=darkseagreen4, key=1, label=options, style=dashed];
n224 -> n228  [color=darkseagreen4, key=1, label=options, style=dashed];
n225 -> n226  [key=0, style=solid];
n225 -> n7  [key=2, style=dotted];
n226 -> n227  [key=0, style=solid];
n226 -> n9  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n228 -> n24  [key=2, style=dotted];
n228 -> n26  [key=2, style=dotted];
n227 -> n228  [key=0, style=solid];
n227 -> n24  [key=2, style=dotted];
n227 -> n25  [key=2, style=dotted];
n229 -> n223  [color=blue, key=0, style=bold];
n230 -> n231  [key=0, style=solid];
n231 -> n232  [key=0, style=solid];
n231 -> n240  [key=2, style=dotted];
n231 -> n233  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n235  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n236  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n237  [color=darkseagreen4, key=1, label=options, style=dashed];
n231 -> n238  [color=darkseagreen4, key=1, label=options, style=dashed];
n232 -> n233  [key=0, style=solid];
n232 -> n7  [key=2, style=dotted];
n233 -> n234  [key=0, style=solid];
n233 -> n9  [key=2, style=dotted];
n235 -> n236  [key=0, style=solid];
n235 -> n24  [key=2, style=dotted];
n235 -> n26  [key=2, style=dotted];
n236 -> n237  [key=0, style=solid];
n236 -> n24  [key=2, style=dotted];
n236 -> n25  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n24  [key=2, style=dotted];
n237 -> n26  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n24  [key=2, style=dotted];
n238 -> n26  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n24  [key=2, style=dotted];
n234 -> n25  [key=2, style=dotted];
n239 -> n230  [color=blue, key=0, style=bold];
n241 -> n242  [key=0, style=solid];
n242 -> n243  [key=0, style=solid];
n242 -> n8  [key=2, style=dotted];
n242 -> n244  [color=darkseagreen4, key=1, label=options, style=dashed];
n242 -> n246  [color=darkseagreen4, key=1, label=options, style=dashed];
n243 -> n244  [key=0, style=solid];
n243 -> n7  [key=2, style=dotted];
n244 -> n245  [key=0, style=solid];
n244 -> n9  [key=2, style=dotted];
n246 -> n247  [key=0, style=solid];
n246 -> n24  [key=2, style=dotted];
n246 -> n26  [key=2, style=dotted];
n245 -> n246  [key=0, style=solid];
n245 -> n24  [key=2, style=dotted];
n245 -> n25  [key=2, style=dotted];
n247 -> n241  [color=blue, key=0, style=bold];
n248 -> n249  [key=0, style=solid];
n249 -> n250  [key=0, style=solid];
n249 -> n102  [key=2, style=dotted];
n249 -> n251  [color=darkseagreen4, key=1, label=options, style=dashed];
n249 -> n253  [color=darkseagreen4, key=1, label=options, style=dashed];
n250 -> n251  [key=0, style=solid];
n250 -> n7  [key=2, style=dotted];
n251 -> n252  [key=0, style=solid];
n251 -> n9  [key=2, style=dotted];
n253 -> n254  [key=0, style=solid];
n253 -> n24  [key=2, style=dotted];
n253 -> n26  [key=2, style=dotted];
n252 -> n253  [key=0, style=solid];
n252 -> n24  [key=2, style=dotted];
n252 -> n25  [key=2, style=dotted];
n254 -> n248  [color=blue, key=0, style=bold];
n255 -> n256  [key=0, style=solid];
n256 -> n257  [key=0, style=solid];
n256 -> n102  [key=2, style=dotted];
n256 -> n258  [color=darkseagreen4, key=1, label=options, style=dashed];
n256 -> n260  [color=darkseagreen4, key=1, label=options, style=dashed];
n257 -> n258  [key=0, style=solid];
n257 -> n7  [key=2, style=dotted];
n258 -> n259  [key=0, style=solid];
n258 -> n9  [key=2, style=dotted];
n260 -> n261  [key=0, style=solid];
n260 -> n24  [key=2, style=dotted];
n260 -> n26  [key=2, style=dotted];
n259 -> n260  [key=0, style=solid];
n259 -> n24  [key=2, style=dotted];
n259 -> n25  [key=2, style=dotted];
n261 -> n255  [color=blue, key=0, style=bold];
n262 -> n263  [key=0, style=solid];
n263 -> n264  [key=0, style=solid];
n263 -> n102  [key=2, style=dotted];
n263 -> n265  [color=darkseagreen4, key=1, label=options, style=dashed];
n263 -> n267  [color=darkseagreen4, key=1, label=options, style=dashed];
n264 -> n265  [key=0, style=solid];
n264 -> n7  [key=2, style=dotted];
n265 -> n266  [key=0, style=solid];
n265 -> n9  [key=2, style=dotted];
n267 -> n268  [key=0, style=solid];
n267 -> n24  [key=2, style=dotted];
n267 -> n26  [key=2, style=dotted];
n266 -> n267  [key=0, style=solid];
n266 -> n24  [key=2, style=dotted];
n266 -> n25  [key=2, style=dotted];
n268 -> n262  [color=blue, key=0, style=bold];
n269 -> n270  [key=0, style=solid];
n270 -> n271  [key=0, style=solid];
n270 -> n102  [key=2, style=dotted];
n270 -> n272  [color=darkseagreen4, key=1, label=options, style=dashed];
n270 -> n274  [color=darkseagreen4, key=1, label=options, style=dashed];
n271 -> n272  [key=0, style=solid];
n271 -> n7  [key=2, style=dotted];
n272 -> n273  [key=0, style=solid];
n272 -> n9  [key=2, style=dotted];
n274 -> n275  [key=0, style=solid];
n274 -> n24  [key=2, style=dotted];
n274 -> n26  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n273 -> n24  [key=2, style=dotted];
n273 -> n25  [key=2, style=dotted];
n275 -> n269  [color=blue, key=0, style=bold];
n276 -> n277  [key=0, style=solid];
n277 -> n278  [key=0, style=solid];
n277 -> n102  [key=2, style=dotted];
n277 -> n279  [color=darkseagreen4, key=1, label=options, style=dashed];
n277 -> n281  [color=darkseagreen4, key=1, label=options, style=dashed];
n278 -> n279  [key=0, style=solid];
n278 -> n7  [key=2, style=dotted];
n279 -> n280  [key=0, style=solid];
n279 -> n9  [key=2, style=dotted];
n281 -> n282  [key=0, style=solid];
n281 -> n24  [key=2, style=dotted];
n281 -> n26  [key=2, style=dotted];
n280 -> n281  [key=0, style=solid];
n280 -> n24  [key=2, style=dotted];
n280 -> n25  [key=2, style=dotted];
n282 -> n276  [color=blue, key=0, style=bold];
n283 -> n284  [key=0, style=solid];
n284 -> n285  [key=0, style=solid];
n284 -> n102  [key=2, style=dotted];
n284 -> n286  [color=darkseagreen4, key=1, label=options, style=dashed];
n284 -> n288  [color=darkseagreen4, key=1, label=options, style=dashed];
n285 -> n286  [key=0, style=solid];
n285 -> n7  [key=2, style=dotted];
n286 -> n287  [key=0, style=solid];
n286 -> n9  [key=2, style=dotted];
n288 -> n289  [key=0, style=solid];
n288 -> n24  [key=2, style=dotted];
n288 -> n26  [key=2, style=dotted];
n287 -> n288  [key=0, style=solid];
n287 -> n24  [key=2, style=dotted];
n287 -> n25  [key=2, style=dotted];
n289 -> n283  [color=blue, key=0, style=bold];
n290 -> n291  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n291 -> n102  [key=2, style=dotted];
n291 -> n293  [color=darkseagreen4, key=1, label=options, style=dashed];
n291 -> n295  [color=darkseagreen4, key=1, label=options, style=dashed];
n292 -> n293  [key=0, style=solid];
n292 -> n7  [key=2, style=dotted];
n293 -> n294  [key=0, style=solid];
n293 -> n9  [key=2, style=dotted];
n295 -> n296  [key=0, style=solid];
n295 -> n24  [key=2, style=dotted];
n295 -> n26  [key=2, style=dotted];
n294 -> n295  [key=0, style=solid];
n294 -> n24  [key=2, style=dotted];
n294 -> n25  [key=2, style=dotted];
n296 -> n290  [color=blue, key=0, style=bold];
n297 -> n298  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n298 -> n102  [key=2, style=dotted];
n298 -> n300  [color=darkseagreen4, key=1, label=options, style=dashed];
n299 -> n300  [key=0, style=solid];
n299 -> n7  [key=2, style=dotted];
n300 -> n301  [key=0, style=solid];
n300 -> n303  [key=2, style=dotted];
n300 -> n9  [key=2, style=dotted];
n301 -> n302  [key=0, style=solid];
n301 -> n24  [key=2, style=dotted];
n301 -> n50  [key=2, style=dotted];
n302 -> n297  [color=blue, key=0, style=bold];
n304 -> n305  [key=0, style=solid];
n305 -> n306  [key=0, style=solid];
n305 -> n102  [key=2, style=dotted];
n305 -> n307  [color=darkseagreen4, key=1, label=options, style=dashed];
n306 -> n307  [key=0, style=solid];
n306 -> n7  [key=2, style=dotted];
n307 -> n308  [key=0, style=solid];
n307 -> n310  [key=2, style=dotted];
n307 -> n9  [key=2, style=dotted];
n308 -> n309  [key=0, style=solid];
n308 -> n24  [key=2, style=dotted];
n308 -> n50  [key=2, style=dotted];
n309 -> n304  [color=blue, key=0, style=bold];
n311 -> n312  [key=0, style=solid];
n312 -> n313  [key=0, style=solid];
n312 -> n102  [key=2, style=dotted];
n312 -> n314  [color=darkseagreen4, key=1, label=options, style=dashed];
n313 -> n314  [key=0, style=solid];
n313 -> n7  [key=2, style=dotted];
n314 -> n315  [key=0, style=solid];
n314 -> n317  [key=2, style=dotted];
n314 -> n9  [key=2, style=dotted];
n315 -> n316  [key=0, style=solid];
n315 -> n24  [key=2, style=dotted];
n315 -> n50  [key=2, style=dotted];
n316 -> n311  [color=blue, key=0, style=bold];
n318 -> n319  [key=0, style=solid];
n319 -> n320  [key=0, style=solid];
n319 -> n102  [key=2, style=dotted];
n319 -> n321  [color=darkseagreen4, key=1, label=options, style=dashed];
n320 -> n321  [key=0, style=solid];
n320 -> n7  [key=2, style=dotted];
n321 -> n322  [key=0, style=solid];
n321 -> n324  [key=2, style=dotted];
n321 -> n9  [key=2, style=dotted];
n322 -> n323  [key=0, style=solid];
n322 -> n24  [key=2, style=dotted];
n322 -> n50  [key=2, style=dotted];
n323 -> n318  [color=blue, key=0, style=bold];
n325 -> n326  [key=0, style=solid];
n326 -> n327  [key=0, style=solid];
n326 -> n102  [key=2, style=dotted];
n326 -> n328  [color=darkseagreen4, key=1, label=options, style=dashed];
n327 -> n328  [key=0, style=solid];
n327 -> n7  [key=2, style=dotted];
n328 -> n329  [key=0, style=solid];
n328 -> n331  [key=2, style=dotted];
n328 -> n9  [key=2, style=dotted];
n329 -> n330  [key=0, style=solid];
n329 -> n24  [key=2, style=dotted];
n329 -> n50  [key=2, style=dotted];
n330 -> n325  [color=blue, key=0, style=bold];
n332 -> n333  [key=0, style=solid];
n333 -> n334  [key=0, style=solid];
n333 -> n339  [key=2, style=dotted];
n333 -> n335  [color=darkseagreen4, key=1, label=options, style=dashed];
n333 -> n337  [color=darkseagreen4, key=1, label=options, style=dashed];
n334 -> n335  [key=0, style=solid];
n334 -> n7  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n9  [key=2, style=dotted];
n337 -> n338  [key=0, style=solid];
n337 -> n24  [key=2, style=dotted];
n337 -> n340  [key=2, style=dotted];
n336 -> n337  [key=0, style=solid];
n336 -> n24  [key=2, style=dotted];
n336 -> n50  [key=2, style=dotted];
n338 -> n332  [color=blue, key=0, style=bold];
}
