digraph  {
n42 [label="CommandLine.Text.HeadingInfo", span=""];
n0 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
n1 [label="string.IsNullOrWhiteSpace(''programName'')", span="29-29", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
n3 [label="this.programName = programName", span="31-31", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
n4 [label="this.version = version", span="32-32", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
n2 [label="throw new ArgumentException(''programName'');", span="29-29", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
n6 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)"];
n5 [label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)"];
n7 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n8 [label="Entry lambda expression", span="59-59", cluster="lambda expression"];
n9 [label="Path.GetFileNameWithoutExtension(titleAttribute.Title)", span="59-59", cluster="lambda expression"];
n10 [label="Exit lambda expression", span="59-59", cluster="lambda expression"];
n11 [label="Entry System.IO.Path.GetFileNameWithoutExtension(string)", span="0-0", cluster="System.IO.Path.GetFileNameWithoutExtension(string)"];
n12 [label="Entry lambda expression", span="63-63", cluster="lambda expression"];
n13 [label="versionAttribute.InformationalVersion", span="63-63", cluster="lambda expression"];
n14 [label="Exit lambda expression", span="63-63", cluster="lambda expression"];
n15 [label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="74-74", cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)"];
n16 [label="return info.ToString();", span="76-76", cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)"];
n17 [label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="74-74", cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)"];
n18 [label="Entry CommandLine.Text.HeadingInfo.ToString()", span="83-83", cluster="CommandLine.Text.HeadingInfo.ToString()"];
n19 [label="var isVersionNull = string.IsNullOrEmpty(version)", span="85-85", cluster="CommandLine.Text.HeadingInfo.ToString()"];
n20 [label="return new StringBuilder(programName.Length +\r\n                    (!isVersionNull ? version.Length + 1 : 0))\r\n                .Append(programName)\r\n                .AppendWhen(!isVersionNull, '' '', version)\r\n                .ToString();", span="86-90", cluster="CommandLine.Text.HeadingInfo.ToString()"];
n22 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n21 [label="Exit CommandLine.Text.HeadingInfo.ToString()", span="83-83", cluster="CommandLine.Text.HeadingInfo.ToString()"];
n23 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)"];
n24 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
n25 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])"];
n26 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n27 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="101-101", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)"];
n28 [label="string.IsNullOrWhiteSpace(''message'')", span="103-103", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)"];
n30 [label="writer == null", span="104-104", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)"];
n32 [label="writer.WriteLine(\r\n                new StringBuilder(programName.Length + message.Length + 2)\r\n                    .Append(programName)\r\n                    .Append('': '')\r\n                    .Append(message)\r\n                    .ToString())", span="106-111", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)"];
n29 [label="throw new ArgumentException(''message'');", span="103-103", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)"];
n31 [label="throw new ArgumentNullException(''writer'');", span="104-104", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)"];
n33 [label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="101-101", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)"];
n34 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n35 [label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0", cluster="System.IO.TextWriter.WriteLine(string)"];
n36 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="120-120", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)"];
n37 [label="WriteMessage(message, Console.Out)", span="122-122", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)"];
n38 [label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="120-120", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)"];
n39 [label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="131-131", cluster="CommandLine.Text.HeadingInfo.WriteError(string)"];
n40 [label="WriteMessage(message, Console.Error)", span="133-133", cluster="CommandLine.Text.HeadingInfo.WriteError(string)"];
n41 [label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="131-131", cluster="CommandLine.Text.HeadingInfo.WriteError(string)"];
m0_0 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_1 [label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-28", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_2 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_71 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="StringBuilderExtensions.cs"];
m0_10 [label="Entry CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", span="33-33", cluster="CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", file="StringBuilderExtensions.cs"];
m0_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="62-62", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="StringBuilderExtensions.cs"];
m0_50 [label="Entry Unk.>", span="", cluster="Unk.>", file="StringBuilderExtensions.cs"];
m0_49 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="StringBuilderExtensions.cs"];
m0_18 [label="return resultSelector(identity.Value, valueSelector(identity.Value).Value).ToIdentity();", span="49-49", cluster="CommandLine.Infrastructure.IdentityExtensions.SelectMany<TSource, TValue, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, CommandLine.Infrastructure.Identity<TValue>>, System.Func<TSource, TValue, TResult>)", file="StringBuilderExtensions.cs"];
m0_36 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StringBuilderExtensions.cs"];
m0_9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="StringBuilderExtensions.cs"];
m0_32 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StringBuilderExtensions.cs"];
m0_39 [label="Entry CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="93-93", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_69 [label="return verb.Length > 0\r\n                      ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                             .ToMaybe()\r\n                             .Return(\r\n                                 v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                                 new HelpVerbRequestedError(null, null, false))\r\n                      : new HelpVerbRequestedError(null, null, false);", span="98-104", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_70 [label="Exit CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="93-93", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringBuilderExtensions.cs"];
m0_52 [label="Entry NotParsed<object>.cstr", span="", cluster="NotParsed<object>.cstr", file="StringBuilderExtensions.cs"];
m0_54 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="StringBuilderExtensions.cs"];
m0_73 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="StringBuilderExtensions.cs"];
m0_17 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_19 [label="var verbs = Verb.SelectFromTypes(types)", span="38-38", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs", color=green, community=0];
m0_3 [label="Entry CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", span="23-23", cluster="CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", file="StringBuilderExtensions.cs"];
m0_20 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_25 [label="return new NotParsed<object>(new NullInstance(), types, new[]\r\n                    {\r\n                        CreateHelpVerbRequestedError(\r\n                            verbs,\r\n                            arguments.Skip(1).SingleOrDefault() ?? string.Empty,\r\n                            nameComparer)\r\n                    });", span="53-59", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_28 [label="return MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="70-70", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_21 [label="CommandLine.Infrastructure.Identity<T>", span="", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_22 [label="var firstArg = arguments.First()", span="45-45", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_23 [label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-49", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_24 [label="preprocCompare(''help'')", span="51-51", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_26 [label="preprocCompare(''version'')", span="62-62", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_27 [label="return new NotParsed<object>(new NullInstance(), types, new[]\r\n                    {\r\n                        new VersionRequestedError()\r\n                    });", span="64-67", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_29 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="31-31", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_14 [label="Entry CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", span="38-38", cluster="CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", file="StringBuilderExtensions.cs"];
m0_40 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="421-421", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="StringBuilderExtensions.cs"];
m0_45 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="StringBuilderExtensions.cs"];
m0_72 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="StringBuilderExtensions.cs"];
m0_61 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StringBuilderExtensions.cs"];
m0_46 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="StringBuilderExtensions.cs"];
m0_15 [label="return selector(identity.Value).ToIdentity();", span="41-41", cluster="CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", file="StringBuilderExtensions.cs"];
m0_43 [label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="48-49", cluster="lambda expression", color=green, community=0, file="StringBuilderExtensions.cs"];
m0_42 [label="Entry lambda expression", span="47-49", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_44 [label="Exit lambda expression", span="47-49", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_56 [label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="80-80", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_64 [label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="82-82", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_76 [label="nameComparer.Equals(v.Item1.Name, verb)", span="99-99", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_4 [label="return new Identity<T>(value);", span="25-25", cluster="CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", file="StringBuilderExtensions.cs"];
m0_59 [label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="82-82", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_55 [label="Entry lambda expression", span="80-80", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_58 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_66 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_57 [label="Exit lambda expression", span="80-80", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_63 [label="Entry lambda expression", span="82-82", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_65 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_75 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_77 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_5 [label="Exit CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", span="23-23", cluster="CommandLine.Infrastructure.IdentityExtensions.ToIdentity<T>(T)", file="StringBuilderExtensions.cs"];
m0_12 [label="Exit CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", span="33-33", cluster="CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", file="StringBuilderExtensions.cs"];
m0_6 [label="Entry CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", span="28-28", cluster="CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", file="StringBuilderExtensions.cs"];
m0_16 [label="Exit CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", span="38-38", cluster="CommandLine.Infrastructure.IdentityExtensions.Select<TSource, TResult>(CommandLine.Infrastructure.Identity<TSource>, System.Func<TSource, TResult>)", file="StringBuilderExtensions.cs"];
m0_8 [label="Exit CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", span="28-28", cluster="CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", file="StringBuilderExtensions.cs"];
m0_78 [label="Entry lambda expression", span="102-102", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_60 [label="Exit lambda expression", span="82-82", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_68 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_67 [label="v.Item2", span="89-89", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_11 [label="return func(identity.Value).ToIdentity();", span="35-35", cluster="CommandLine.Infrastructure.IdentityExtensions.Map<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, T2>)", file="StringBuilderExtensions.cs"];
m0_13 [label="Entry T.ToIdentity<T>()", span="23-23", cluster="T.ToIdentity<T>()", file="StringBuilderExtensions.cs"];
m0_7 [label="return func(identity.Value);", span="30-30", cluster="CommandLine.Infrastructure.IdentityExtensions.Bind<T1, T2>(CommandLine.Infrastructure.Identity<T1>, System.Func<T1, CommandLine.Infrastructure.Identity<T2>>)", file="StringBuilderExtensions.cs"];
m0_79 [label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="102-102", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_80 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="StringBuilderExtensions.cs"];
m0_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="StringBuilderExtensions.cs"];
m0_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="StringBuilderExtensions.cs"];
m0_53 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StringBuilderExtensions.cs"];
m0_34 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="StringBuilderExtensions.cs"];
m0_41 [label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="73-73", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_47 [label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(() => verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : new NotParsed<object>(\r\n                    new NullInstance(),\r\n                    verbs.Select(v => v.Item2),\r\n                    new[] { new BadVerbSelectedError(arguments.First()) });", span="80-90", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_48 [label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="73-73", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_74 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="StringBuilderExtensions.cs"];
m0_62 [label="Entry Unk.AutoDefault", span="", cluster="Unk.AutoDefault", file="StringBuilderExtensions.cs"];
m0_33 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="StringBuilderExtensions.cs"];
m0_51 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringBuilderExtensions.cs"];
m0_30 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="StringBuilderExtensions.cs"];
m0_38 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="StringBuilderExtensions.cs"];
m0_81 [label="Entry HelpVerbRequestedError.cstr", span="", cluster="HelpVerbRequestedError.cstr", file="StringBuilderExtensions.cs"];
m0_84 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_85 [label=firstArg, span="", file="StringBuilderExtensions.cs"];
m0_86 [label="System.Collections.Generic.IEnumerable<string>", span="", file="StringBuilderExtensions.cs"];
m0_87 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_89 [label=string, span="", file="StringBuilderExtensions.cs"];
m0_90 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_88 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span="", file="StringBuilderExtensions.cs"];
m0_82 [label="System.StringComparer", span="", file="StringBuilderExtensions.cs"];
m0_83 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="StringBuilderExtensions.cs"];
n42 -> n3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
n42 -> n4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
n42 -> n19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
n42 -> n20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
n42 -> n32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
n42 -> n37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
n42 -> n40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HeadingInfo"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=string];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=string];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=0, style=solid];
n1 -> n6  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n4 -> n5  [key=0, style=solid];
n2 -> n5  [key=0, style=solid];
n2 -> n7  [key=2, style=dotted];
n5 -> n0  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=2, style=dotted];
n10 -> n8  [key=0, style=bold, color=blue];
n12 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n14 -> n12  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n18  [key=2, style=dotted];
n17 -> n15  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n19 -> n22  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=2, style=dotted];
n20 -> n24  [key=2, style=dotted];
n20 -> n25  [key=2, style=dotted];
n20 -> n26  [key=2, style=dotted];
n21 -> n18  [key=0, style=bold, color=blue];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n27 -> n32  [key=1, style=dashed, color=darkseagreen4, label=string];
n28 -> n29  [key=0, style=solid];
n28 -> n30  [key=0, style=solid];
n28 -> n6  [key=2, style=dotted];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n32 -> n33  [key=0, style=solid];
n32 -> n23  [key=2, style=dotted];
n32 -> n24  [key=2, style=dotted];
n32 -> n26  [key=2, style=dotted];
n32 -> n35  [key=2, style=dotted];
n29 -> n33  [key=0, style=solid];
n29 -> n7  [key=2, style=dotted];
n31 -> n33  [key=0, style=solid];
n31 -> n34  [key=2, style=dotted];
n33 -> n27  [key=0, style=bold, color=blue];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n27  [key=2, style=dotted];
n38 -> n36  [key=0, style=bold, color=blue];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n27  [key=2, style=dotted];
n41 -> n39  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_0 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_0 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_2 -> m0_0  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Text.StringBuilder AppendFormatWhen"];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_9  [key=2, style=dotted];
m0_18 -> m0_20  [key=2, style=dotted];
m0_18 -> m0_13  [key=2, style=dotted];
m0_39 -> m0_69  [key=0, style=solid];
m0_39 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=2, style=dotted];
m0_69 -> m0_72  [key=2, style=dotted];
m0_69 -> m0_73  [key=2, style=dotted];
m0_69 -> m0_74  [key=2, style=dotted];
m0_69 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_69 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_70 -> m0_39  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_15  [key=0, style=bold, color=blue];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_19 -> m0_20  [key=0, style=solid, color=green];
m0_19 -> m0_30  [key=2, style=dotted, color=green];
m0_19 -> m0_25  [key=1, style=dashed, color=green, label=verbs];
m0_19 -> m0_28  [key=1, style=dashed, color=green, label=verbs];
m0_3 -> m0_19  [key=0, style=solid, color=green];
m0_3 -> m0_20  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_3 -> m0_21  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_3 -> m0_22  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m0_3 -> m0_23  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_3 -> m0_43  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_3 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_3 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Type>"];
m0_3 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m0_3 -> m0_4  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid, color=green];
m0_20 -> m0_22  [key=0, style=solid, color=green];
m0_20 -> m0_31  [key=2, style=dotted, color=green];
m0_25 -> m0_29  [key=0, style=solid];
m0_25 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_33  [key=2, style=dotted];
m0_25 -> m0_37  [key=2, style=dotted];
m0_25 -> m0_38  [key=2, style=dotted];
m0_25 -> m0_39  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_41  [key=2, style=dotted];
m0_21 -> m0_29  [key=0, style=solid, color=green];
m0_21 -> m0_32  [key=2, style=dotted, color=green];
m0_21 -> m0_33  [key=2, style=dotted, color=green];
m0_21 -> m0_34  [key=2, style=dotted, color=green];
m0_21 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Identity<T>"];
m0_22 -> m0_23  [key=0, style=solid, color=green];
m0_22 -> m0_35  [key=2, style=dotted, color=green];
m0_22 -> m0_43  [key=1, style=dashed, color=green, label=firstArg];
m0_23 -> m0_24  [key=0, style=solid, color=green];
m0_23 -> m0_43  [key=1, style=dashed, color=green, label=string];
m0_23 -> m0_26  [key=1, style=dashed, color=green, label=preprocCompare];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=0, style=solid];
m0_24 -> m0_36  [key=2, style=dotted];
m0_26 -> m0_28  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_36  [key=2, style=dotted];
m0_27 -> m0_29  [key=0, style=solid];
m0_27 -> m0_32  [key=2, style=dotted];
m0_27 -> m0_33  [key=2, style=dotted];
m0_27 -> m0_40  [key=2, style=dotted];
m0_29 -> m0_3  [key=0, style=bold, color=blue];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_9  [key=2, style=dotted];
m0_15 -> m0_13  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid, color=green];
m0_43 -> m0_45  [key=2, style=dotted, color=green];
m0_43 -> m0_46  [key=2, style=dotted, color=green];
m0_42 -> m0_43  [key=0, style=solid, color=green];
m0_44 -> m0_42  [key=0, style=bold, color=blue];
m0_56 -> m0_35  [key=2, style=dotted];
m0_56 -> m0_45  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_64 -> m0_35  [key=2, style=dotted];
m0_64 -> m0_45  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_76 -> m0_45  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_4 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_4 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_4 -> m0_0  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_61  [key=2, style=dotted];
m0_59 -> m0_62  [key=2, style=dotted];
m0_59 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_55 -> m0_56  [key=0, style=solid];
m0_58 -> m0_59  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_57 -> m0_55  [key=0, style=bold, color=blue];
m0_63 -> m0_64  [key=0, style=solid];
m0_65 -> m0_63  [key=0, style=bold, color=blue];
m0_75 -> m0_76  [key=0, style=solid];
m0_77 -> m0_75  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_5 -> m0_3  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_12 -> m0_10  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_14  [key=0, style=bold, color=blue];
m0_8 -> m0_4  [key=0, style=bold, color=blue];
m0_8 -> m0_6  [key=0, style=bold, color=blue];
m0_78 -> m0_79  [key=0, style=solid];
m0_60 -> m0_58  [key=0, style=bold, color=blue];
m0_68 -> m0_66  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_9  [key=2, style=dotted];
m0_11 -> m0_13  [key=2, style=dotted];
m0_13 -> m0_11  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=2, style=dotted];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_81  [key=2, style=dotted];
m0_80 -> m0_78  [key=0, style=bold, color=blue];
m0_41 -> m0_47  [key=0, style=solid];
m0_41 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_41 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m0_41 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_47 -> m0_33  [key=2, style=dotted];
m0_47 -> m0_35  [key=2, style=dotted];
m0_47 -> m0_37  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [key=2, style=dotted];
m0_47 -> m0_50  [key=2, style=dotted];
m0_47 -> m0_51  [key=2, style=dotted];
m0_47 -> m0_52  [key=2, style=dotted];
m0_47 -> m0_53  [key=2, style=dotted];
m0_47 -> m0_54  [key=2, style=dotted];
m0_47 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_47 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_47 -> m0_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_48 -> m0_41  [key=0, style=bold, color=blue];
m0_84 -> m0_43  [key=1, style=dashed, color=green, label="System.StringComparer"];
m0_85 -> m0_43  [key=1, style=dashed, color=green, label=firstArg];
m0_86 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_86 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_86 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_87 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_87 -> m0_64  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_87 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_89 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_90 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_88 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m0_82 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_82 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_82 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_82 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m0_83 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m0_83 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
}
