digraph  {
n0 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11"];
n1 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", color=red, community=0, label="0: var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title)).ToArray()", span="13-15"];
n2 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", color=red, community=0, label="0: return string.Join('''', titlizedWords);", span="17-17"];
n4 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n5 [cluster="string.Humanize(Humanizer.LetterCasing)", label="Entry string.Humanize(Humanizer.LetterCasing)", span="62-62"];
n6 [cluster="Unk.ToArray", label="Entry Unk.ToArray", span=""];
n3 [cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11"];
n7 [cluster="Unk.Join", label="Entry Unk.Join", span=""];
m0_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m0_54 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceBuilder.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="38-38"];
m0_38 [cluster="Unk.ThrowingValidate", file="InstanceBuilder.cs", label="Entry Unk.ThrowingValidate", span=""];
m0_3 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="InstanceBuilder.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="24-24"];
m0_20 [cluster="CommandLine.Core.Token.Value(string)", color=green, community=0, file="InstanceBuilder.cs", label="0: Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m0_19 [cluster="CommandLine.Core.Token.Name(string)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m0_21 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: Entry lambda expression", span="38-41"];
m0_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="65-69"];
m0_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="71-74"];
m0_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="InstanceBuilder.cs", label="0: instance = instance\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsJust(),\r\n                    sp => sp.Value.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                    sp => sp.Specification.DefaultValue.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing(),\r\n                    sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="82-93"];
m0_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="80-80"];
m0_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup)\r\n                .OfType<Just<Error>>().Select(e => e.Value)", span="95-96"];
m0_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="98-105"];
m0_22 [cluster="lambda expression", file="InstanceBuilder.cs", label="new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Switch, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="39-41"];
m0_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57"];
m0_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer))", span="61-63"];
m0_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         NameInfo.FromOptionSpecification(optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))))", span="76-78"];
m0_23 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="38-41"];
m0_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="var tokens = tokenizerResult.Value", span="59-59"];
m0_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m0_80 [cluster="string.MatchName(string, string, System.StringComparer)", file="InstanceBuilder.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m0_13 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="22-22"];
m0_46 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m0_73 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m0_84 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m0_5 [cluster="lambda expression", file="InstanceBuilder.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m0_11 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="22-22"];
m0_100 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26"];
m0_49 [cluster="CommandLine.Core.Specification.IsValue()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m0_59 [cluster="Unk.Create", file="InstanceBuilder.cs", label="Entry Unk.Create", span=""];
m0_12 [cluster="lambda expression", file="InstanceBuilder.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m0_88 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m0_65 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21"];
m0_14 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28"];
m0_92 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m0_42 [cluster="System.StringComparer.Equals(string, string)", file="InstanceBuilder.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m0_37 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilder.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m0_51 [cluster="Unk.Single", file="InstanceBuilder.cs", label="Entry Unk.Single", span=""];
m0_35 [cluster="System.Func<TResult>.Invoke()", file="InstanceBuilder.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_36 [cluster="object.GetType()", file="InstanceBuilder.cs", label="Entry object.GetType()", span="0-0"];
m0_7 [cluster="lambda expression", file="InstanceBuilder.cs", label="return explodedTokens;", span="26-26"];
m0_8 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="20-27"];
m0_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m0_60 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="42-43"];
m0_81 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="84-84"];
m0_85 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="85-85"];
m0_89 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="87-87"];
m0_93 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="88-88"];
m0_96 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="90-92"];
m0_101 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="93-93"];
m0_67 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="63-63"];
m0_61 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="42-43"];
m0_62 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="42-43"];
m0_97 [cluster="lambda expression", color=green, community=0, file="InstanceBuilder.cs", label="0: sp.Value.IsNothing()\r\n                        && sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92"];
m0_98 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="90-92"];
m0_70 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="68-68"];
m0_74 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="74-74"];
m0_107 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="96-96"];
m0_83 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="84-84"];
m0_82 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsJust()", span="84-84"];
m0_87 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="85-85"];
m0_86 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.FromJust()", span="85-85"];
m0_91 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="87-87"];
m0_90 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87"];
m0_95 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="88-88"];
m0_94 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Specification.DefaultValue.FromJust()", span="88-88"];
m0_103 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="93-93"];
m0_102 [cluster="lambda expression", file="InstanceBuilder.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93"];
m0_66 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="63-63"];
m0_68 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="63-63"];
m0_77 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="78-78"];
m0_78 [cluster="lambda expression", file="InstanceBuilder.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78"];
m0_71 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68"];
m0_75 [cluster="lambda expression", file="InstanceBuilder.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74"];
m0_72 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="68-68"];
m0_76 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="74-74"];
m0_109 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="96-96"];
m0_108 [cluster="lambda expression", file="InstanceBuilder.cs", label="e.Value", span="96-96"];
m0_16 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="InstanceBuilder.cs", label="var result = Switch.Partition(\r\n                new []\r\n                    {\r\n                        Token.Name(''str''), Token.Value(''strvalue''), Token.Value(''freevalue''),\r\n                        Token.Name(''x''), Token.Value(''freevalue2'')\r\n                    },\r\n                name =>\r\n                    new[] { ''x'', ''switch'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Switch, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="32-41"];
m0_79 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="78-78"];
m0_6 [cluster="Unk.ShouldAllBeEquivalentTo", file="InstanceBuilder.cs", label="Entry Unk.ShouldAllBeEquivalentTo", span=""];
m0_4 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values_from_empty_token_sequence()", span="13-13"];
m0_15 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="InstanceBuilder.cs", label="var expected = new [] { Token.Name(''x'') }", span="30-30"];
m0_17 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="InstanceBuilder.cs", label="expected.ShouldAllBeEquivalentTo(result)", span="43-43"];
m0_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_44 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilder.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m0_50 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m0_58 [cluster="Unk.Concat", file="InstanceBuilder.cs", label="Entry Unk.Concat", span=""];
m0_105 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m0_57 [cluster="Unk.Select", file="InstanceBuilder.cs", label="Entry Unk.Select", span=""];
m0_18 [cluster="CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.Unit.Core.SwitchTests.Partition_switch_values()", span="28-28"];
m0_106 [cluster="System.Type.CreateEmptyArray()", file="InstanceBuilder.cs", label="Entry System.Type.CreateEmptyArray()", span="81-81"];
m0_104 [cluster="System.Type.GetGenericArguments()", file="InstanceBuilder.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m0_47 [cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m0_99 [cluster="Unk.ToDescriptorKind", file="InstanceBuilder.cs", label="Entry Unk.ToDescriptorKind", span=""];
m0_56 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="40-40"];
m0_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m0_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30"];
m0_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m0_64 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m0_52 [cluster="Unk.FromOptionSpecification", file="InstanceBuilder.cs", label="Entry Unk.FromOptionSpecification", span=""];
m0_39 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilder.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_69 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12"];
m0_55 [cluster="Unk.SetProperties", file="InstanceBuilder.cs", label="Entry Unk.SetProperties", span=""];
m0_43 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilder.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m0_63 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilder.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82"];
m0_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m0_53 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_48 [cluster="Unk.MapValues", file="InstanceBuilder.cs", label="Entry Unk.MapValues", span=""];
m0_112 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m0_113 [file="InstanceBuilder.cs", label=optionSpecs, span=""];
m0_115 [file="InstanceBuilder.cs", label=token, span=""];
m0_114 [file="InstanceBuilder.cs", label="System.Globalization.CultureInfo", span=""];
m0_110 [file="InstanceBuilder.cs", label="System.StringComparer", span=""];
m0_111 [file="InstanceBuilder.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m4_4 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="16-16"];
m4_0 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="15-15"];
m4_1 [cluster="lambda expression", file="ReflectionExtensions.cs", label="new RomanianFormatter()", span="15-15"];
m4_2 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="15-15"];
m4_5 [cluster="lambda expression", file="ReflectionExtensions.cs", label="new RussianFormatter()", span="16-16"];
m4_6 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="16-16"];
m4_7 [cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="ReflectionExtensions.cs", label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2"];
m4_3 [cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="ReflectionExtensions.cs", label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2"];
m5_17 [cluster="Unk.SingleOrDefault", file="Scalar.cs", label="Entry Unk.SingleOrDefault", span=""];
m5_37 [cluster="System.Type.GetInterfaces()", file="Scalar.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m5_84 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="128-128"];
m5_85 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="Scalar.cs", label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="130-134"];
m5_86 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="Scalar.cs", label="return type != typeof(object) ? isMutable() : true;", span="135-135"];
m5_87 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="128-128"];
m5_94 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="Scalar.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m5_3 [cluster="System.Type.FlattenHierarchy()", file="Scalar.cs", label="Entry System.Type.FlattenHierarchy()", span="38-38"];
m5_119 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Scalar.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m5_6 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="16-20"];
m5_66 [cluster="System.Action<T>.Invoke(T)", file="Scalar.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m5_75 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="119-119"];
m5_76 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="Scalar.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="121-124"];
m5_77 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="Scalar.cs", label="return e.Compile()();", span="125-125"];
m5_78 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="119-119"];
m5_7 [cluster="Unk.Any", file="Scalar.cs", label="Entry Unk.Any", span=""];
m5_8 [cluster="CommandLine.Core.Token.IsValue()", file="Scalar.cs", label="Entry CommandLine.Core.Token.IsValue()", span="73-73"];
m5_9 [cluster="Unk.selector", file="Scalar.cs", label="Entry Unk.selector", span=""];
m5_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Scalar.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m5_45 [cluster="Unk.Where", file="Scalar.cs", label="Entry Unk.Where", span=""];
m5_52 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="86-86"];
m5_53 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="88-88"];
m5_54 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="property.SetValue(instance, value, null)", span="92-92"];
m5_63 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="return instance;", span="111-111"];
m5_56 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="fail(e)", span="96-96"];
m5_58 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="fail(e)", span="100-100"];
m5_60 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="fail(e)", span="104-104"];
m5_62 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="fail(e)", span="108-108"];
m5_55 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label=TargetException, span="94-94"];
m5_57 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label=TargetParameterCountException, span="98-98"];
m5_59 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label=MethodAccessException, span="102-102"];
m5_61 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label=TargetInvocationException, span="106-106"];
m5_64 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="86-86"];
m5_38 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="60-60"];
m5_39 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="Scalar.cs", label="return type == typeof(bool)\r\n                       ? TargetType.Switch\r\n                       : type == typeof(string)\r\n                             ? TargetType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TargetType.Sequence\r\n                                   : TargetType.Scalar;", span="62-68"];
m5_40 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="60-60"];
m5_95 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Scalar.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m5_70 [cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="Scalar.cs", label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0"];
m5_18 [cluster="Unk.ToMaybe", file="Scalar.cs", label="Entry Unk.ToMaybe", span=""];
m5_32 [cluster="System.Type.SafeGetInterfaces()", file="Scalar.cs", label="Entry System.Type.SafeGetInterfaces()", span="55-55"];
m5_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="Scalar.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m5_4 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="16-20"];
m5_14 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="Scalar.cs", label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", span=""];
m5_15 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="Scalar.cs", label="CommandLine.Core.Token", span=""];
m5_16 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="Scalar.cs", label="CommandLine.Core.Token", span=""];
m5_11 [cluster="lambda expression", file="Scalar.cs", label="x.GetProperties()", span="18-18"];
m5_10 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="Scalar.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m5_12 [cluster="lambda expression", color=green, community=0, file="Scalar.cs", label="0: info.Tag == TargetType.Scalar ? new[] { f, s } : new Token[] { }", span="19-19"];
m5_19 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="31-31"];
m5_20 [cluster="lambda expression", file="Scalar.cs", label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="31-31"];
m5_21 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="31-31"];
m5_48 [cluster="lambda expression", file="Scalar.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="81-81"];
m5_49 [cluster="lambda expression", file="Scalar.cs", label="return instance;", span="82-82"];
m5_47 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="79-83"];
m5_50 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="79-83"];
m5_68 [cluster="lambda expression", file="Scalar.cs", label="throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="88-88"];
m5_67 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="88-88"];
m5_69 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="88-88"];
m5_89 [cluster="lambda expression", file="Scalar.cs", label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="131-131"];
m5_90 [cluster="lambda expression", file="Scalar.cs", label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="132-132"];
m5_88 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="130-134"];
m5_96 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="131-131"];
m5_91 [cluster="lambda expression", file="Scalar.cs", label="return props || fields;", span="133-133"];
m5_92 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="130-134"];
m5_97 [cluster="lambda expression", file="Scalar.cs", label="p.CanWrite", span="131-131"];
m5_98 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="131-131"];
m5_121 [cluster="lambda expression", file="Scalar.cs", label="Entry lambda expression", span="158-158"];
m5_122 [cluster="lambda expression", file="Scalar.cs", label="pi.PropertyType", span="158-158"];
m5_123 [cluster="lambda expression", file="Scalar.cs", label="Exit lambda expression", span="158-158"];
m5_5 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", color=green, community=0, file="Scalar.cs", label="0: Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m5_13 [cluster="System.Type.GetProperties()", file="Scalar.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m5_65 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="Scalar.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m5_74 [cluster="System.Array.CreateInstance(System.Type, int)", file="Scalar.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m5_80 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="Scalar.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m5_79 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="Scalar.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m5_83 [cluster="System.Func<TResult>.Invoke()", file="Scalar.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m5_120 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="Scalar.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m5_41 [cluster="System.Type.IsAssignableFrom(System.Type)", file="Scalar.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m5_99 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="138-138"];
m5_100 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="Scalar.cs", label="type == typeof(string)", span="140-140"];
m5_102 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="Scalar.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="144-144"];
m5_103 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="Scalar.cs", label="return type.GetGenericArguments()[0].CreateEmptyArray();", span="146-146"];
m5_104 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="Scalar.cs", label="return type.GetDefaultValue();", span="148-148"];
m5_101 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="Scalar.cs", label="return string.Empty;", span="142-142"];
m5_105 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="138-138"];
m5_0 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs", label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m5_1 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", color=green, community=0, file="Scalar.cs", label="0: return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Tag == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="15-22"];
m5_2 [cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Scalar.cs", label="Exit CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m5_81 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="Scalar.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m5_106 [cluster="System.Type.GetGenericTypeDefinition()", file="Scalar.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m5_110 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="151-151"];
m5_111 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="Scalar.cs", label="type.IsMutable()", span="153-153"];
m5_112 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="Scalar.cs", label="return Activator.CreateInstance(type);", span="155-155"];
m5_113 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="Scalar.cs", label="var ctorTypes = type.GetSpecifications(pi => pi.PropertyType).ToArray()", span="158-158"];
m5_114 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="Scalar.cs", label="return ReflectionHelper.CreateDefaultImmutableInstance(type, ctorTypes);", span="160-160"];
m5_115 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="151-151"];
m5_33 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="55-55"];
m5_34 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="Scalar.cs", label="return type == null ? Enumerable.Empty<Type>() : type.GetInterfaces();", span="57-57"];
m5_35 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="55-55"];
m5_108 [cluster="System.Type.CreateEmptyArray()", file="Scalar.cs", label="Entry System.Type.CreateEmptyArray()", span="114-114"];
m5_109 [cluster="System.Type.GetDefaultValue()", file="Scalar.cs", label="Entry System.Type.GetDefaultValue()", span="119-119"];
m5_107 [cluster="System.Type.GetGenericArguments()", file="Scalar.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m5_118 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="Scalar.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m5_117 [cluster="System.Activator.CreateInstance(System.Type)", file="Scalar.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m5_93 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="Scalar.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m5_116 [cluster="System.Type.IsMutable()", file="Scalar.cs", label="Entry System.Type.IsMutable()", span="128-128"];
m5_46 [cluster="Unk.Aggregate", file="Scalar.cs", label="Entry Unk.Aggregate", span=""];
m5_71 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="114-114"];
m5_72 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="Scalar.cs", label="return Array.CreateInstance(type, 0);", span="116-116"];
m5_73 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="114-114"];
m5_42 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="71-71"];
m5_43 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="Scalar.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="77-83"];
m5_44 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="71-71"];
m5_23 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="Entry CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="38-38"];
m5_24 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="type == null", span="40-40"];
m5_25 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="yield break;", span="42-42"];
m5_26 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="yield return type;", span="44-44"];
m5_28 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="yield return @interface;", span="47-47"];
m5_30 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="yield return @interface;", span="51-51"];
m5_27 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="type.SafeGetInterfaces()", span="45-45"];
m5_29 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="FlattenHierarchy(type.BaseType)", span="49-49"];
m5_31 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="Scalar.cs", label="Exit CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="38-38"];
m5_51 [cluster="Unk.SetValue", file="Scalar.cs", label="Entry Unk.SetValue", span=""];
m5_82 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="Scalar.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m5_124 [file="Scalar.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m5_125 [file="Scalar.cs", label=T, span=""];
m5_126 [file="Scalar.cs", label="System.Type", span=""];
m6_18 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="ScalarTests.cs", label="Entry CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43"];
m6_19 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="ScalarTests.cs", label="return new {this.Value, this.Errors}.GetHashCode();", span="45-45"];
m6_20 [cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="ScalarTests.cs", label="Exit CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43"];
m6_34 [cluster="CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", file="ScalarTests.cs", label="Entry CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", span="69-69"];
m6_35 [cluster="CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", file="ScalarTests.cs", label="return new StatePair<T2>(func(statePair.Value), statePair.Errors);", span="73-73"];
m6_36 [cluster="CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", file="ScalarTests.cs", label="Exit CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", span="69-69"];
m6_17 [cluster="object.Equals(object)", file="ScalarTests.cs", label="Entry object.Equals(object)", span="0-0"];
m6_10 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="ScalarTests.cs", label="Entry CommandLine.Core.StatePair<T>.Equals(object)", span="32-32"];
m6_11 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="ScalarTests.cs", label="var other = obj as StatePair<T>", span="34-34"];
m6_14 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", color=red, community=0, file="ScalarTests.cs", label="0: return base.Equals(obj);", span="40-40"];
m6_12 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="ScalarTests.cs", label="other != null", span="35-35"];
m6_13 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="ScalarTests.cs", label="return this.Equals(other);", span="37-37"];
m6_15 [cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="ScalarTests.cs", label="Exit CommandLine.Core.StatePair<T>.Equals(object)", span="32-32"];
m6_37 [cluster="System.Func<T, TResult>.Invoke(T)", file="ScalarTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_0 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="Entry CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13"];
m6_1 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="object.Equals(value, default(T))", span="15-15"];
m6_3 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="errors == null", span="16-16"];
m6_5 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="this.value = value", span="18-18"];
m6_6 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="this.errors = errors", span="19-19"];
m6_2 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="throw new ArgumentNullException(''value'');", span="15-15"];
m6_4 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="throw new ArgumentNullException(''errors'');", span="16-16"];
m6_7 [cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="Exit CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13"];
m6_26 [cluster="Unk.SequenceEqual", file="ScalarTests.cs", label="Entry Unk.SequenceEqual", span=""];
m6_8 [cluster="object.Equals(object, object)", file="ScalarTests.cs", label="Entry object.Equals(object, object)", span="0-0"];
m6_16 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="ScalarTests.cs", label="Entry CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48"];
m6_22 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="ScalarTests.cs", label="other == null", span="50-50"];
m6_24 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="ScalarTests.cs", label="return this.Value.Equals(other.Value) && this.Errors.SequenceEqual(other.Errors);", span="55-55"];
m6_23 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="ScalarTests.cs", label="return false;", span="52-52"];
m6_25 [cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="ScalarTests.cs", label="Exit CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48"];
m6_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ScalarTests.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_21 [cluster="object.GetHashCode()", file="ScalarTests.cs", label="Entry object.GetHashCode()", span="0-0"];
m6_27 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61"];
m6_28 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="object.Equals(value, default(T))", span="63-63"];
m6_30 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="errors == null", span="64-64"];
m6_32 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="return new StatePair<T>(value, errors);", span="66-66"];
m6_29 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="throw new ArgumentNullException(''value'');", span="63-63"];
m6_31 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="throw new ArgumentNullException(''errors'');", span="64-64"];
m6_33 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ScalarTests.cs", label="Exit CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61"];
m6_38 [file="ScalarTests.cs", label="CommandLine.Core.StatePair<T>", span=""];
m7_133 [cluster="string.Format(System.IFormatProvider, string, object)", file="Sequence.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m7_183 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="418-418"];
m7_184 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="Sequence.cs", label="var options = new ComplexOptionsWithHelp()", span="420-420"];
m7_185 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="Sequence.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="422-423"];
m7_186 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="Sequence.cs", label="result.Should().Be.False()", span="425-425"];
m7_187 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="418-418"];
m7_162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="Sequence.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="52-52"];
m7_203 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="453-453"];
m7_204 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="string optionHelp = null", span="456-456"];
m7_205 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="e.Option.ShortName.Value", span="458-458"];
m7_210 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="e.Option.Required", span="469-469"];
m7_212 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="e.Option.HelpText = optionHelp", span="474-474"];
m7_206 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="'v'", span="460-460"];
m7_208 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="'i'", span="464-464"];
m7_207 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="461-461"];
m7_209 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="465-465"];
m7_211 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="471-471"];
m7_213 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="453-453"];
m7_160 [cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="Sequence.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6"];
m7_201 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="Sequence.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="108-108"];
m7_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="299-299"];
m7_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="var sw = new StringWriter()", span="301-301"];
m7_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="var options = new RPEOptions()", span="302-302"];
m7_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="303-304"];
m7_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="var outsw = sw.ToString()", span="309-309"];
m7_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="305-305"];
m7_151 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="result.Should().Be.False()", span="307-307"];
m7_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="Console.WriteLine(outsw)", span="311-311"];
m7_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="313-313"];
m7_155 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="lines[0].Should().Equal(''--option-b option violates format.'')", span="315-315"];
m7_156 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="lines[1].Should().Equal(''-c/--option-c option violates format.'')", span="316-316"];
m7_157 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="lines[2].Should().Equal(''-a required option is missing.'')", span="317-317"];
m7_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="299-299"];
m7_189 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="429-429"];
m7_190 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="Sequence.cs", label="var options = new ComplexOptionsWithHelp()", span="431-431"];
m7_191 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="Sequence.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="433-434"];
m7_192 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="Sequence.cs", label="result.Should().Be.False()", span="436-436"];
m7_193 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="429-429"];
m7_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m7_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="_helpText.MaximumDisplayWidth = 40", span="195-195"];
m7_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="196-196"];
m7_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="string help = _helpText.ToString()", span="197-197"];
m7_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="199-199"];
m7_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="lines[2].Should().Equal(''  v, verbose    Before '')", span="200-200"];
m7_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="lines[3].Should().Equal(''                012345678901234567890123'')", span="201-201"];
m7_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="lines[4].Should().Equal(''                After'')", span="202-202"];
m7_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="lines[5].Should().Equal(''  input-file    Before '')", span="203-203"];
m7_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="lines[6].Should().Equal(''                012345678901234567890123'')", span="204-204"];
m7_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="lines[7].Should().Equal(''                456789 After'')", span="205-205"];
m7_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m7_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="367-367"];
m7_129 [cluster="CommandLine.Text.HelpText.HelpText()", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="53-53"];
m7_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="291-291"];
m7_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="Sequence.cs", label="var local = new HelpText()", span="293-293"];
m7_144 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="Sequence.cs", label="local.ToString().Should().Equal('''')", span="295-295"];
m7_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="291-291"];
m7_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="342-342"];
m7_159 [cluster="System.IO.StringWriter.StringWriter()", file="Sequence.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m7_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithMetaValue.MockOptionsWithMetaValue()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithMetaValue.MockOptionsWithMetaValue()", span="56-56"];
m7_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="98-98"];
m7_19 [cluster="string.Concat(string, string)", file="Sequence.cs", label="Entry string.Concat(string, string)", span="0-0"];
m7_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="229-229"];
m7_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="var local = new HelpText(''Customizing Test.'')", span="231-231"];
m7_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="232-232"];
m7_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="233-233"];
m7_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="234-234"];
m7_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="235-235"];
m7_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="string help = local.ToString()", span="237-237"];
m7_101 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="Console.WriteLine(help)", span="239-239"];
m7_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="241-241"];
m7_103 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="lines[0].Should().Equal(''Customizing Test.'')", span="242-242"];
m7_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="lines[1].Should().Equal(''Pre-Options.'')", span="243-243"];
m7_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="lines[3].Should().Equal(''  v, verbose       Kommentar umfassend Operationen.'')", span="244-244"];
m7_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="lines[4].Should().Equal(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", span="245-245"];
m7_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="246-246"];
m7_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="229-229"];
m7_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m7_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="Sequence.cs", label="var options = new ComplexOptionsWithHelp()", span="409-409"];
m7_180 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="Sequence.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="411-412"];
m7_181 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="Sequence.cs", label="result.Should().Be.False()", span="414-414"];
m7_182 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m7_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="83-83"];
m7_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="Sequence.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="81-81"];
m7_44 [cluster="Unk.Should", file="Sequence.cs", label="Entry Unk.Should", span=""];
m7_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="74-74"];
m7_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="65-65"];
m7_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m7_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="Sequence.cs", label="var options = new ComplexOptionsWithHelp()", span="387-387"];
m7_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="Sequence.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="389-390"];
m7_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="Sequence.cs", label="result.Should().Be.False()", span="392-392"];
m7_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m7_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", span="429-429"];
m7_42 [cluster="CommandLine.Text.HelpText.ToString()", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="598-598"];
m7_164 [cluster="Unk.False", file="Sequence.cs", label="Entry Unk.False", span=""];
m7_165 [cluster="System.IO.StringWriter.ToString()", file="Sequence.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m7_25 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="140-140"];
m7_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="Sequence.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="142-142"];
m7_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="140-140"];
m7_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="Sequence.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m7_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="177-177"];
m7_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="_helpText.MaximumDisplayWidth = 40", span="179-179"];
m7_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="180-180"];
m7_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="string help = _helpText.ToString()", span="181-181"];
m7_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="183-183"];
m7_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="lines[2].Should().Equal(''  v, verbose    This is the description'')", span="184-184"];
m7_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="lines[3].Should().Equal(''                of the verbosity to '')", span="186-186"];
m7_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="lines[4].Should().Equal(''                test out the wrapping '')", span="187-187"];
m7_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="lines[5].Should().Equal(''                capabilities of the '')", span="188-188"];
m7_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="lines[6].Should().Equal(''                Help Text.'')", span="189-189"];
m7_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="177-177"];
m7_131 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="Sequence.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="68-68"];
m7_130 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="Sequence.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m7_41 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Sequence.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="357-357"];
m7_161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="Sequence.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="63-63"];
m7_202 [cluster="Unk.Exactly", file="Sequence.cs", label="Entry Unk.Exactly", span=""];
m7_18 [cluster="string.IsNullOrEmpty(string)", file="Sequence.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m7_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m7_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", span="275-279"];
m7_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="local.AddOptions(new MockOptionsSimple())", span="280-280"];
m7_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="string help = local.ToString()", span="282-282"];
m7_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="Console.WriteLine(help)", span="284-284"];
m7_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="286-286"];
m7_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="lines[3].Should().Equal(''  -s, --something    Input something here.'')", span="287-287"];
m7_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m7_172 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Sequence.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="73-73"];
m7_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m7_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="Sequence.cs", label="var options = new ComplexOptionsWithHelp()", span="398-398"];
m7_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="Sequence.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="400-401"];
m7_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="Sequence.cs", label="result.Should().Be.False()", span="403-403"];
m7_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m7_109 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="Sequence.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m7_200 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="Sequence.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m7_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m7_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="var local = new HelpText(''Heading Info.'')", span="211-211"];
m7_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="local.MaximumDisplayWidth = 40", span="212-212"];
m7_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="213-213"];
m7_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="local.AddOptions(new MockOptions())", span="214-214"];
m7_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="215-215"];
m7_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="string help = local.ToString()", span="217-217"];
m7_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="219-219"];
m7_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="lines[1].Should().Equal(''Before '')", span="220-220"];
m7_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="lines[2].Should().Equal(''0123456789012345678901234567890123456789'')", span="221-221"];
m7_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="lines[3].Should().Equal(''012 After'')", span="222-222"];
m7_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="lines[lines.Length - 3].Should().Equal(''Before '')", span="223-223"];
m7_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="lines[lines.Length - 2].Should().Equal(''0123456789012345678901234567890123456789'')", span="224-224"];
m7_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="lines[lines.Length - 1].Should().Equal('' After'')", span="225-225"];
m7_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m7_194 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="441-441"];
m7_195 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="Sequence.cs", label="var options = new ComplexOptions()", span="443-443"];
m7_196 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="Sequence.cs", label="var writer = new StringWriter()", span="444-444"];
m7_197 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="Sequence.cs", label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="446-446"];
m7_198 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="Sequence.cs", label="options.LastParserState.Errors.Should().Count.Exactly(2)", span="448-448"];
m7_199 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="441-441"];
m7_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m7_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="109-109"];
m7_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.AdditionalNewLineAfterOption = true", span="110-110"];
m7_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="111-111"];
m7_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="114-114"];
m7_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="117-117"];
m7_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.AddPreOptionsLine(errors)", span="118-118"];
m7_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="121-121"];
m7_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="122-122"];
m7_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="123-123"];
m7_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="help.AddOptions(this)", span="124-124"];
m7_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="return help;", span="126-126"];
m7_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="!string.IsNullOrEmpty(errors)", span="115-115"];
m7_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m7_111 [cluster="System.Console.WriteLine(string)", file="Sequence.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m7_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="47-47"];
m7_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="83-83"];
m7_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m7_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="var local = new HelpText(''Heading Info.'')", span="151-151"];
m7_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="152-152"];
m7_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="153-153"];
m7_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="local.AddOptions(new MockOptions())", span="154-154"];
m7_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="155-155"];
m7_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="156-156"];
m7_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="string help = local.ToString()", span="158-158"];
m7_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="160-160"];
m7_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="lines[lines.Length - 2].Should().Equal(''This is a first post-options line.'')", span="161-161"];
m7_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="lines[lines.Length - 1].Should().Equal(''This is a second post-options line.'')", span="162-162"];
m7_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m7_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m7_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="Sequence.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", span="136-136"];
m7_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m7_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="92-92"];
m7_188 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="Sequence.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="112-112"];
m7_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m7_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="Sequence.cs", label="var local = new HelpText(''Meta Value.'')", span="168-168"];
m7_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="Sequence.cs", label="local.AddOptions(new MockOptionsWithMetaValue())", span="169-169"];
m7_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="Sequence.cs", label="string help = local.ToString()", span="171-171"];
m7_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="Sequence.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="172-172"];
m7_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="Sequence.cs", label="lines[lines.Length - 2].Should().Equal(''  i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="173-173"];
m7_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m7_45 [cluster="Unk.Equal", file="Sequence.cs", label="Entry Unk.Equal", span=""];
m7_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="Sequence.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m7_163 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Sequence.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="87-87"];
m7_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m7_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="var year = DateTime.Now.Year", span="252-252"];
m7_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="var local = new HelpText()", span="253-253"];
m7_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="255-255"];
m7_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="lines[1].Should().Equal(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year))", span="266-266"];
m7_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="254-254"];
m7_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="256-256"];
m7_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="local.AddOptions(new MockOptionsSimple())", span="257-257"];
m7_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="258-258"];
m7_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="string help = local.ToString()", span="260-260"];
m7_121 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="Console.WriteLine(help)", span="262-262"];
m7_122 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="264-264"];
m7_123 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="lines[0].Should().Equal(''Parameterless Constructor Test.'')", span="265-265"];
m7_125 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="lines[2].Should().Equal(''Pre-Options.'')", span="267-267"];
m7_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="lines[4].Should().Equal(''  s, something    Input something here.'')", span="268-268"];
m7_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="269-269"];
m7_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="Sequence.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m7_214 [file="Sequence.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m7_215 [file="Sequence.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m8_4 [cluster="Unk.Select", file="SequenceTests.cs", label="Entry Unk.Select", span=""];
m8_18 [cluster="string.MatchName(string, string, System.StringComparer)", file="SequenceTests.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m8_24 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="SequenceTests.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m8_26 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="SequenceTests.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m8_23 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="SequenceTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="324-324"];
m8_11 [cluster="Unk.ToMaybe", file="SequenceTests.cs", label="Entry Unk.ToMaybe", span=""];
m8_10 [cluster="Unk.FirstOrDefault", file="SequenceTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m8_25 [cluster="CSharpx.Maybe.Just<T>(T)", file="SequenceTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80"];
m8_13 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="SequenceTests.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m8_27 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="28-31"];
m8_7 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="21-35"];
m8_8 [cluster="lambda expression", file="SequenceTests.cs", label="options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="22-35"];
m8_16 [cluster="lambda expression", file="SequenceTests.cs", label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="24-24"];
m8_20 [cluster="lambda expression", file="SequenceTests.cs", label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification()))))", span="27-34"];
m8_31 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="38-38"];
m8_34 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="39-39"];
m8_37 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="39-39"];
m8_9 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="21-35"];
m8_28 [cluster="lambda expression", file="SequenceTests.cs", label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="29-31"];
m8_15 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="23-24"];
m8_19 [cluster="lambda expression", file="SequenceTests.cs", label="Entry lambda expression", span="26-34"];
m8_17 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="23-24"];
m8_21 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="26-34"];
m8_33 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="38-38"];
m8_32 [cluster="lambda expression", file="SequenceTests.cs", label="se.Item1", span="38-38"];
m8_36 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="39-39"];
m8_35 [cluster="lambda expression", file="SequenceTests.cs", label="se.Item2", span="39-39"];
m8_39 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="39-39"];
m8_38 [cluster="lambda expression", file="SequenceTests.cs", label="se.Value", span="39-39"];
m8_29 [cluster="lambda expression", file="SequenceTests.cs", label="Exit lambda expression", span="28-31"];
m8_14 [cluster="Unk.Return", file="SequenceTests.cs", label="Entry Unk.Return", span=""];
m8_22 [cluster="Unk.converter", file="SequenceTests.cs", label="Entry Unk.converter", span=""];
m8_5 [cluster="Unk.>", file="SequenceTests.cs", label="Entry Unk.>", span=""];
m8_12 [cluster="CSharpx.Maybe.Nothing<T>()", file="SequenceTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m8_30 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", file="SequenceTests.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CSharpx.Maybe<object>)", span="18-18"];
m8_6 [cluster="Unk.Succeed", file="SequenceTests.cs", label="Entry Unk.Succeed", span=""];
m8_0 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="SequenceTests.cs", label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m8_1 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", color=green, community=0, file="SequenceTests.cs", label="0: var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .Return(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .Return(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="20-36"];
m8_2 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="SequenceTests.cs", label="return Result.Succeed(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="37-39"];
m8_3 [cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="SequenceTests.cs", label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14"];
m8_40 [file="SequenceTests.cs", label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span=""];
m8_41 [file="SequenceTests.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", span=""];
m8_42 [file="SequenceTests.cs", label="System.StringComparer", span=""];
m8_43 [file="SequenceTests.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m11_0 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="SpecificationPropertyRules.cs", label="Entry CommandLine.BaseAttribute.BaseAttribute()", span="18-18"];
m11_1 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="SpecificationPropertyRules.cs", label="min = -1", span="20-20"];
m11_2 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="SpecificationPropertyRules.cs", label="max = -1", span="21-21"];
m11_3 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="SpecificationPropertyRules.cs", label="helpText = string.Empty", span="22-22"];
m11_4 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="SpecificationPropertyRules.cs", label="metaValue = string.Empty", span="23-23"];
m11_5 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="SpecificationPropertyRules.cs", label="Exit CommandLine.BaseAttribute.BaseAttribute()", span="18-18"];
m11_6 [file="SpecificationPropertyRules.cs", label="CommandLine.BaseAttribute", span=""];
m13_8 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="17-17"];
m13_0 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="15-15"];
m13_1 [cluster="lambda expression", file="TokenizerTests.cs", label="new RomanianFormatter()", span="15-15"];
m13_2 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="15-15"];
m13_4 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="16-16"];
m13_5 [cluster="lambda expression", file="TokenizerTests.cs", label="new RussianFormatter()", span="16-16"];
m13_6 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="16-16"];
m13_9 [cluster="lambda expression", file="TokenizerTests.cs", label="new ArabicFormatter()", span="17-17"];
m13_10 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="17-17"];
m13_7 [cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="TokenizerTests.cs", label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2"];
m13_3 [cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="TokenizerTests.cs", label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2"];
m13_11 [cluster="Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", file="TokenizerTests.cs", label="Entry Humanizer.Localisation.ArabicFormatter.ArabicFormatter()", span="2-2"];
m14_0 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="TokenPartitionerTests.cs", label="Entry CommandLine.BaseAttribute.BaseAttribute()", span="18-18"];
m14_1 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="TokenPartitionerTests.cs", label="min = -1", span="20-20"];
m14_2 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="TokenPartitionerTests.cs", label="max = -1", span="21-21"];
m14_3 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="TokenPartitionerTests.cs", label="helpText = string.Empty", span="22-22"];
m14_4 [cluster="CommandLine.BaseAttribute.BaseAttribute()", color=green, community=0, file="TokenPartitionerTests.cs", label="1: metaValue = string.Empty", span="23-23"];
m14_5 [cluster="CommandLine.BaseAttribute.BaseAttribute()", file="TokenPartitionerTests.cs", label="Exit CommandLine.BaseAttribute.BaseAttribute()", span="18-18"];
m14_6 [file="TokenPartitionerTests.cs", label="CommandLine.BaseAttribute", span=""];
m16_4 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="16-16"];
m16_0 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="15-15"];
m16_1 [cluster="lambda expression", file="ValueMapper.cs", label="new RomanianFormatter()", span="15-15"];
m16_2 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="15-15"];
m16_5 [cluster="lambda expression", file="ValueMapper.cs", label="new RussianFormatter()", span="16-16"];
m16_6 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="16-16"];
m16_7 [cluster="Humanizer.Localisation.RussianFormatter.RussianFormatter()", file="ValueMapper.cs", label="Entry Humanizer.Localisation.RussianFormatter.RussianFormatter()", span="2-2"];
m16_3 [cluster="Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", file="ValueMapper.cs", label="Entry Humanizer.Localisation.RomanianFormatter.RomanianFormatter()", span="2-2"];
n0 -> n1  [color=red, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n4  [color=red, key=2, style=dotted];
n1 -> n5  [color=red, key=2, style=dotted];
n1 -> n6  [color=red, key=2, style=dotted];
n1 -> n1  [color=red, key=1, label=word, style=dashed];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n7  [color=red, key=2, style=dotted];
n3 -> n0  [color=blue, key=0, style=bold];
m0_54 -> m0_18  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo parsingCulture", style=bold];
m0_3 -> m0_19  [key=0, style=solid];
m0_3 -> m0_27  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_3 -> m0_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m0_3 -> m0_26  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_67  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_29  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_71  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_75  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_3 -> m0_78  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_20 -> m0_21  [color=green, key=0, style=solid];
m0_20 -> m0_36  [color=green, key=2, style=dotted];
m0_20 -> m0_37  [color=green, key=2, style=dotted];
m0_20 -> m0_60  [color=green, key=1, label="lambda expression", style=dashed];
m0_20 -> m0_27  [color=green, key=1, label=specProps, style=dashed];
m0_20 -> m0_28  [color=green, key=1, label=specProps, style=dashed];
m0_19 -> m0_20  [color=green, key=0, style=solid];
m0_19 -> m0_31  [color=green, key=1, label=instance, style=dashed];
m0_19 -> m0_35  [key=2, style=dotted];
m0_19 -> m0_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m0_21 -> m0_21  [color=green, key=1, label=pt, style=dashed];
m0_21 -> m0_22  [color=green, key=0, style=solid];
m0_21 -> m0_38  [color=green, key=2, style=dotted];
m0_21 -> m0_39  [color=green, key=2, style=dotted];
m0_21 -> m0_24  [color=green, key=1, label=optionSpecs, style=dashed];
m0_21 -> m0_26  [color=green, key=1, label=optionSpecs, style=dashed];
m0_21 -> m0_67  [color=green, key=1, label=optionSpecs, style=dashed];
m0_21 -> m0_29  [color=green, key=1, label=optionSpecs, style=dashed];
m0_27 -> m0_27  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_47  [key=2, style=dotted];
m0_27 -> m0_48  [key=2, style=dotted];
m0_27 -> m0_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_30  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m0_27 -> m0_33  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m0_28 -> m0_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_49  [key=2, style=dotted];
m0_28 -> m0_48  [key=2, style=dotted];
m0_28 -> m0_74  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_28 -> m0_30  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m0_28 -> m0_33  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m0_31 -> m0_31  [color=green, key=1, label=instance, style=dashed];
m0_31 -> m0_32  [color=green, key=0, style=solid];
m0_31 -> m0_54  [color=green, key=2, style=dotted];
m0_31 -> m0_55  [color=green, key=2, style=dotted];
m0_31 -> m0_81  [color=green, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_85  [color=green, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_89  [color=green, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_93  [color=green, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_96  [color=green, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_101  [color=green, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_33  [color=green, key=1, label=instance, style=dashed];
m0_30 -> m0_31  [color=green, key=0, style=solid];
m0_30 -> m0_53  [key=2, style=dotted];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_56  [key=2, style=dotted];
m0_32 -> m0_39  [key=2, style=dotted];
m0_32 -> m0_57  [key=2, style=dotted];
m0_32 -> m0_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_58  [key=2, style=dotted];
m0_33 -> m0_59  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_22 -> m0_40  [key=2, style=dotted];
m0_22 -> m0_41  [key=2, style=dotted];
m0_22 -> m0_42  [key=2, style=dotted];
m0_22 -> m0_10  [key=2, style=dotted];
m0_22 -> m0_11  [key=2, style=dotted];
m0_22 -> m0_12  [key=2, style=dotted];
m0_22 -> m0_13  [key=2, style=dotted];
m0_24 -> m0_33  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_45  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_28  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m0_26 -> m0_46  [key=2, style=dotted];
m0_26 -> m0_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_29  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_33  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m0_29 -> m0_29  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_29 -> m0_50  [key=2, style=dotted];
m0_29 -> m0_51  [key=2, style=dotted];
m0_29 -> m0_52  [key=2, style=dotted];
m0_29 -> m0_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_29 -> m0_78  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_23 -> m0_34  [key=0, style=solid];
m0_23 -> m0_43  [key=2, style=dotted];
m0_23 -> m0_44  [key=2, style=dotted];
m0_23 -> m0_21  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_34 -> m0_3  [color=blue, key=0, style=bold];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_9  [key=2, style=dotted];
m0_5 -> m0_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_14  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=2, style=dotted];
m0_8 -> m0_11  [key=2, style=dotted];
m0_8 -> m0_12  [key=2, style=dotted];
m0_8 -> m0_13  [key=2, style=dotted];
m0_8 -> m0_4  [color=blue, key=0, style=bold];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_60 -> m0_61  [color=green, key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_96 -> m0_97  [color=green, key=0, style=solid];
m0_101 -> m0_102  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=2, style=dotted];
m0_61 -> m0_62  [color=green, key=0, style=solid];
m0_61 -> m0_63  [color=green, key=2, style=dotted];
m0_61 -> m0_64  [color=green, key=2, style=dotted];
m0_61 -> m0_65  [color=green, key=2, style=dotted];
m0_62 -> m0_60  [color=blue, key=0, style=bold];
m0_97 -> m0_98  [color=green, key=0, style=solid];
m0_97 -> m0_92  [color=green, key=2, style=dotted];
m0_97 -> m0_99  [color=green, key=2, style=dotted];
m0_97 -> m0_100  [color=green, key=2, style=dotted];
m0_98 -> m0_96  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_107 -> m0_108  [key=0, style=solid];
m0_83 -> m0_81  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_84  [key=2, style=dotted];
m0_87 -> m0_85  [color=blue, key=0, style=bold];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_88  [key=2, style=dotted];
m0_91 -> m0_89  [color=blue, key=0, style=bold];
m0_90 -> m0_92  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_84  [key=2, style=dotted];
m0_95 -> m0_93  [color=blue, key=0, style=bold];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_88  [key=2, style=dotted];
m0_103 -> m0_101  [color=blue, key=0, style=bold];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_104  [key=2, style=dotted];
m0_102 -> m0_105  [key=2, style=dotted];
m0_102 -> m0_106  [key=2, style=dotted];
m0_66 -> m0_67  [key=0, style=solid];
m0_68 -> m0_66  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_73  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_73  [key=2, style=dotted];
m0_72 -> m0_70  [color=blue, key=0, style=bold];
m0_76 -> m0_74  [color=blue, key=0, style=bold];
m0_109 -> m0_107  [color=blue, key=0, style=bold];
m0_108 -> m0_109  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [key=2, style=dotted];
m0_16 -> m0_20  [key=2, style=dotted];
m0_16 -> m0_5  [key=2, style=dotted];
m0_16 -> m0_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_16 -> m0_0  [color=darkorchid, key=3, label="Parameter variable System.Func<T> factory", style=bold];
m0_16 -> m0_2  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>> tokenizer", style=bold];
m0_16 -> m0_1  [color=darkorchid, key=3, label="Parameter variable System.StringComparer nameComparer", style=bold];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_4 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_4 -> m0_0  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_15 -> m0_17  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_6  [key=2, style=dotted];
m0_18 -> m0_14  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> Build", style=bold];
m0_0 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [color=darkseagreen4, key=1, label=expected, style=dashed];
m0_1 -> m0_1  [color=darkorchid, key=3, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> ", style=bold];
m0_1 -> m0_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_112 -> m0_67  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_112 -> m0_78  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_113 -> m0_67  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m0_115 -> m0_78  [color=darkseagreen4, key=1, label=token, style=dashed];
m0_114 -> m0_71  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_114 -> m0_75  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_110 -> m0_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_110 -> m0_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_110 -> m0_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_110 -> m0_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_111 -> m0_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_111 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m5_84 -> m5_85  [key=0, style=solid];
m5_84 -> m5_89  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_84 -> m5_90  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_84 -> m5_86  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_85 -> m5_86  [key=0, style=solid];
m5_86 -> m5_87  [key=0, style=solid];
m5_86 -> m5_83  [key=2, style=dotted];
m5_87 -> m5_84  [color=blue, key=0, style=bold];
m5_6 -> m5_4  [color=blue, key=0, style=bold];
m5_75 -> m5_76  [key=0, style=solid];
m5_76 -> m5_77  [key=0, style=solid];
m5_76 -> m5_79  [key=2, style=dotted];
m5_76 -> m5_80  [key=2, style=dotted];
m5_76 -> m5_81  [key=2, style=dotted];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_82  [key=2, style=dotted];
m5_77 -> m5_83  [key=2, style=dotted];
m5_78 -> m5_75  [color=blue, key=0, style=bold];
m5_52 -> m5_53  [key=0, style=solid];
m5_52 -> m5_54  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_52 -> m5_63  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_53 -> m5_54  [key=0, style=solid];
m5_53 -> m5_68  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m5_53 -> m5_56  [color=darkseagreen4, key=1, label=fail, style=dashed];
m5_53 -> m5_58  [color=darkseagreen4, key=1, label=fail, style=dashed];
m5_53 -> m5_60  [color=darkseagreen4, key=1, label=fail, style=dashed];
m5_53 -> m5_62  [color=darkseagreen4, key=1, label=fail, style=dashed];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_57  [key=0, style=solid];
m5_54 -> m5_59  [key=0, style=solid];
m5_54 -> m5_61  [key=0, style=solid];
m5_54 -> m5_63  [key=0, style=solid];
m5_54 -> m5_65  [key=2, style=dotted];
m5_63 -> m5_64  [key=0, style=solid];
m5_56 -> m5_63  [key=0, style=solid];
m5_56 -> m5_66  [key=2, style=dotted];
m5_58 -> m5_63  [key=0, style=solid];
m5_58 -> m5_66  [key=2, style=dotted];
m5_60 -> m5_63  [key=0, style=solid];
m5_60 -> m5_66  [key=2, style=dotted];
m5_62 -> m5_63  [key=0, style=solid];
m5_62 -> m5_66  [key=2, style=dotted];
m5_55 -> m5_56  [key=0, style=solid];
m5_57 -> m5_58  [key=0, style=solid];
m5_59 -> m5_60  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_64 -> m5_52  [color=blue, key=0, style=bold];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_41  [key=2, style=dotted];
m5_40 -> m5_38  [color=blue, key=0, style=bold];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_4 -> m5_12  [color=green, key=1, label="CommandLine.Core.Token", style=dashed];
m5_14 -> m5_15  [key=0, style=solid];
m5_14 -> m5_5  [color=green, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_3  [key=2, style=dotted];
m5_15 -> m5_4  [key=2, style=dotted];
m5_15 -> m5_17  [key=2, style=dotted];
m5_15 -> m5_18  [key=2, style=dotted];
m5_15 -> m5_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_15 -> m5_15  [color=darkseagreen4, key=1, label=attr, style=dashed];
m5_15 -> m5_12  [color=green, key=1, label="CommandLine.Core.Token", style=dashed];
m5_16 -> m5_14  [color=blue, key=0, style=bold];
m5_16 -> m5_12  [color=green, key=1, label="CommandLine.Core.Token", style=dashed];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_11 -> m5_13  [key=2, style=dotted];
m5_10 -> m5_11  [key=0, style=solid];
m5_12 -> m5_10  [color=blue, key=0, style=bold];
m5_12 -> m5_13  [color=green, key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid];
m5_20 -> m5_21  [key=0, style=solid];
m5_20 -> m5_22  [key=2, style=dotted];
m5_21 -> m5_19  [color=blue, key=0, style=bold];
m5_48 -> m5_49  [key=0, style=solid];
m5_48 -> m5_9  [key=2, style=dotted];
m5_48 -> m5_51  [key=2, style=dotted];
m5_49 -> m5_50  [key=0, style=solid];
m5_47 -> m5_48  [key=0, style=solid];
m5_50 -> m5_47  [color=blue, key=0, style=bold];
m5_68 -> m5_69  [key=0, style=solid];
m5_68 -> m5_70  [key=2, style=dotted];
m5_67 -> m5_68  [key=0, style=solid];
m5_69 -> m5_67  [color=blue, key=0, style=bold];
m5_89 -> m5_90  [key=0, style=solid];
m5_89 -> m5_93  [key=2, style=dotted];
m5_89 -> m5_7  [key=2, style=dotted];
m5_89 -> m5_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_89 -> m5_91  [color=darkseagreen4, key=1, label=props, style=dashed];
m5_90 -> m5_91  [key=0, style=solid];
m5_90 -> m5_94  [key=2, style=dotted];
m5_90 -> m5_95  [key=2, style=dotted];
m5_88 -> m5_89  [key=0, style=solid];
m5_96 -> m5_97  [key=0, style=solid];
m5_91 -> m5_92  [key=0, style=solid];
m5_92 -> m5_88  [color=blue, key=0, style=bold];
m5_97 -> m5_98  [key=0, style=solid];
m5_98 -> m5_96  [color=blue, key=0, style=bold];
m5_121 -> m5_122  [key=0, style=solid];
m5_122 -> m5_123  [key=0, style=solid];
m5_123 -> m5_121  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [color=green, key=0, style=solid];
m5_5 -> m5_7  [color=green, key=2, style=dotted];
m5_5 -> m5_8  [color=green, key=2, style=dotted];
m5_5 -> m5_9  [color=green, key=2, style=dotted];
m5_5 -> m5_10  [color=green, key=2, style=dotted];
m5_5 -> m5_11  [color=green, key=1, label="lambda expression", style=dashed];
m5_13 -> m5_11  [color=blue, key=0, style=bold];
m5_99 -> m5_100  [key=0, style=solid];
m5_99 -> m5_102  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_99 -> m5_103  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_99 -> m5_104  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_100 -> m5_101  [key=0, style=solid];
m5_100 -> m5_102  [key=0, style=solid];
m5_102 -> m5_103  [key=0, style=solid];
m5_102 -> m5_104  [key=0, style=solid];
m5_102 -> m5_106  [key=2, style=dotted];
m5_103 -> m5_105  [key=0, style=solid];
m5_103 -> m5_107  [key=2, style=dotted];
m5_103 -> m5_108  [key=2, style=dotted];
m5_104 -> m5_105  [key=0, style=solid];
m5_104 -> m5_109  [key=2, style=dotted];
m5_101 -> m5_105  [key=0, style=solid];
m5_105 -> m5_99  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [color=green, key=0, style=solid];
m5_0 -> m5_5  [color=green, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m5_1 -> m5_2  [color=green, key=0, style=solid];
m5_1 -> m5_3  [color=green, key=2, style=dotted];
m5_1 -> m5_4  [color=red, key=2, style=dotted];
m5_1 -> m5_5  [color=red, key=2, style=dotted];
m5_1 -> m5_6  [color=red, key=2, style=dotted];
m5_1 -> m5_7  [color=red, key=2, style=dotted];
m5_1 -> m5_8  [color=red, key=2, style=dotted];
m5_1 -> m5_9  [color=red, key=2, style=dotted];
m5_1 -> m5_10  [color=red, key=1, label="lambda expression", style=dashed];
m5_1 -> m5_1  [color=green, key=1, label=tseq, style=dashed];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_110 -> m5_111  [key=0, style=solid];
m5_110 -> m5_112  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_110 -> m5_113  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_110 -> m5_114  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_111 -> m5_112  [key=0, style=solid];
m5_111 -> m5_113  [key=0, style=solid];
m5_111 -> m5_116  [key=2, style=dotted];
m5_112 -> m5_115  [key=0, style=solid];
m5_112 -> m5_117  [key=2, style=dotted];
m5_113 -> m5_114  [key=0, style=solid];
m5_113 -> m5_118  [key=2, style=dotted];
m5_113 -> m5_119  [key=2, style=dotted];
m5_113 -> m5_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_114 -> m5_115  [key=0, style=solid];
m5_114 -> m5_120  [key=2, style=dotted];
m5_115 -> m5_110  [color=blue, key=0, style=bold];
m5_33 -> m5_34  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_34 -> m5_36  [key=2, style=dotted];
m5_34 -> m5_37  [key=2, style=dotted];
m5_35 -> m5_33  [color=blue, key=0, style=bold];
m5_71 -> m5_72  [key=0, style=solid];
m5_72 -> m5_73  [key=0, style=solid];
m5_72 -> m5_74  [key=2, style=dotted];
m5_73 -> m5_71  [color=blue, key=0, style=bold];
m5_42 -> m5_43  [key=0, style=solid];
m5_42 -> m5_48  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m5_42 -> m5_49  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_43 -> m5_44  [key=0, style=solid];
m5_43 -> m5_45  [key=2, style=dotted];
m5_43 -> m5_46  [key=2, style=dotted];
m5_43 -> m5_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_44 -> m5_42  [color=blue, key=0, style=bold];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_25  [color=crimson, key=0, style=bold];
m5_23 -> m5_26  [color=crimson, key=0, style=bold];
m5_23 -> m5_28  [color=crimson, key=0, style=bold];
m5_23 -> m5_30  [color=crimson, key=0, style=bold];
m5_23 -> m5_27  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_23 -> m5_29  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=0, style=solid];
m5_25 -> m5_26  [key=0, style=solid];
m5_26 -> m5_27  [key=0, style=solid];
m5_28 -> m5_27  [key=0, style=solid];
m5_30 -> m5_29  [key=0, style=solid];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=0, style=solid];
m5_27 -> m5_32  [key=2, style=dotted];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_31  [key=0, style=solid];
m5_29 -> m5_23  [key=2, style=dotted];
m5_31 -> m5_23  [color=blue, key=0, style=bold];
m5_124 -> m5_48  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m5_125 -> m5_49  [color=darkseagreen4, key=1, label=T, style=dashed];
m5_126 -> m5_89  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_126 -> m5_90  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m6_18 -> m6_19  [key=0, style=solid];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_34 -> m6_35  [key=0, style=solid];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_0  [key=2, style=dotted];
m6_35 -> m6_37  [key=2, style=dotted];
m6_36 -> m6_34  [color=blue, key=0, style=bold];
m6_10 -> m6_11  [key=0, style=solid];
m6_10 -> m6_14  [color=red, key=1, label=object, style=dashed];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_13  [color=darkseagreen4, key=1, label=other, style=dashed];
m6_14 -> m6_15  [color=red, key=0, style=solid];
m6_14 -> m6_17  [color=red, key=2, style=dotted];
m6_12 -> m6_13  [key=0, style=solid];
m6_12 -> m6_14  [color=red, key=0, style=solid];
m6_13 -> m6_15  [key=0, style=solid];
m6_13 -> m6_16  [key=2, style=dotted];
m6_15 -> m6_10  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m6_0 -> m6_5  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_0 -> m6_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_1 -> m6_8  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_6 -> m6_7  [key=0, style=solid];
m6_2 -> m6_7  [key=0, style=solid];
m6_2 -> m6_9  [key=2, style=dotted];
m6_4 -> m6_7  [key=0, style=solid];
m6_4 -> m6_9  [key=2, style=dotted];
m6_7 -> m6_0  [color=blue, key=0, style=bold];
m6_16 -> m6_22  [key=0, style=solid];
m6_16 -> m6_24  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_17  [key=2, style=dotted];
m6_24 -> m6_26  [key=2, style=dotted];
m6_23 -> m6_25  [key=0, style=solid];
m6_25 -> m6_16  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Error>", style=dashed];
m6_27 -> m6_32  [color=darkseagreen4, key=1, label=T, style=dashed];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_28 -> m6_8  [key=2, style=dotted];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_32  [key=0, style=solid];
m6_32 -> m6_33  [key=0, style=solid];
m6_32 -> m6_0  [key=2, style=dotted];
m6_29 -> m6_33  [key=0, style=solid];
m6_29 -> m6_9  [key=2, style=dotted];
m6_31 -> m6_33  [key=0, style=solid];
m6_31 -> m6_9  [key=2, style=dotted];
m6_33 -> m6_27  [color=blue, key=0, style=bold];
m6_38 -> m6_5  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m6_38 -> m6_6  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m6_38 -> m6_13  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m6_38 -> m6_14  [color=red, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m6_38 -> m6_19  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m6_38 -> m6_24  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<T>", style=dashed];
m7_183 -> m7_184  [key=0, style=solid];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_171  [key=2, style=dotted];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_161  [key=2, style=dotted];
m7_185 -> m7_188  [key=2, style=dotted];
m7_185 -> m7_163  [key=2, style=dotted];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_44  [key=2, style=dotted];
m7_186 -> m7_164  [key=2, style=dotted];
m7_187 -> m7_183  [color=blue, key=0, style=bold];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_205  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m7_203 -> m7_210  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m7_203 -> m7_212  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m7_204 -> m7_205  [key=0, style=solid];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_208  [key=0, style=solid];
m7_210 -> m7_211  [key=0, style=solid];
m7_210 -> m7_212  [key=0, style=solid];
m7_212 -> m7_213  [key=0, style=solid];
m7_206 -> m7_207  [key=0, style=solid];
m7_208 -> m7_209  [key=0, style=solid];
m7_207 -> m7_210  [key=0, style=solid];
m7_209 -> m7_210  [key=0, style=solid];
m7_209 -> m7_211  [color=darkseagreen4, key=1, label=optionHelp, style=dashed];
m7_209 -> m7_212  [color=darkseagreen4, key=1, label=optionHelp, style=dashed];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_211  [color=darkseagreen4, key=1, label=optionHelp, style=dashed];
m7_213 -> m7_203  [color=blue, key=0, style=bold];
m7_146 -> m7_147  [key=0, style=solid];
m7_147 -> m7_148  [key=0, style=solid];
m7_147 -> m7_159  [key=2, style=dotted];
m7_147 -> m7_149  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_147 -> m7_152  [color=darkseagreen4, key=1, label=sw, style=dashed];
m7_148 -> m7_149  [key=0, style=solid];
m7_148 -> m7_160  [key=2, style=dotted];
m7_148 -> m7_150  [color=darkseagreen4, key=1, label=options, style=dashed];
m7_149 -> m7_150  [key=0, style=solid];
m7_149 -> m7_161  [key=2, style=dotted];
m7_149 -> m7_162  [key=2, style=dotted];
m7_152 -> m7_153  [key=0, style=solid];
m7_152 -> m7_165  [key=2, style=dotted];
m7_152 -> m7_154  [color=darkseagreen4, key=1, label=outsw, style=dashed];
m7_150 -> m7_151  [key=0, style=solid];
m7_150 -> m7_163  [key=2, style=dotted];
m7_151 -> m7_152  [key=0, style=solid];
m7_151 -> m7_44  [key=2, style=dotted];
m7_151 -> m7_164  [key=2, style=dotted];
m7_153 -> m7_154  [key=0, style=solid];
m7_153 -> m7_111  [key=2, style=dotted];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_43  [key=2, style=dotted];
m7_154 -> m7_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_154 -> m7_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_44  [key=2, style=dotted];
m7_155 -> m7_45  [key=2, style=dotted];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_44  [key=2, style=dotted];
m7_156 -> m7_45  [key=2, style=dotted];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_44  [key=2, style=dotted];
m7_157 -> m7_45  [key=2, style=dotted];
m7_158 -> m7_146  [color=blue, key=0, style=bold];
m7_189 -> m7_190  [key=0, style=solid];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_171  [key=2, style=dotted];
m7_191 -> m7_192  [key=0, style=solid];
m7_191 -> m7_161  [key=2, style=dotted];
m7_191 -> m7_188  [key=2, style=dotted];
m7_191 -> m7_163  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_192 -> m7_44  [key=2, style=dotted];
m7_192 -> m7_164  [key=2, style=dotted];
m7_193 -> m7_189  [color=blue, key=0, style=bold];
m7_66 -> m7_67  [key=0, style=solid];
m7_67 -> m7_68  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_78  [key=2, style=dotted];
m7_68 -> m7_21  [key=2, style=dotted];
m7_69 -> m7_70  [key=0, style=solid];
m7_69 -> m7_42  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_43  [key=2, style=dotted];
m7_70 -> m7_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_70 -> m7_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_70 -> m7_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_70 -> m7_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_70 -> m7_76  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_71 -> m7_72  [key=0, style=solid];
m7_71 -> m7_44  [key=2, style=dotted];
m7_71 -> m7_45  [key=2, style=dotted];
m7_72 -> m7_73  [key=0, style=solid];
m7_72 -> m7_44  [key=2, style=dotted];
m7_72 -> m7_45  [key=2, style=dotted];
m7_73 -> m7_74  [key=0, style=solid];
m7_73 -> m7_44  [key=2, style=dotted];
m7_73 -> m7_45  [key=2, style=dotted];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_44  [key=2, style=dotted];
m7_74 -> m7_45  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_44  [key=2, style=dotted];
m7_75 -> m7_45  [key=2, style=dotted];
m7_76 -> m7_77  [key=0, style=solid];
m7_76 -> m7_44  [key=2, style=dotted];
m7_76 -> m7_45  [key=2, style=dotted];
m7_77 -> m7_66  [color=blue, key=0, style=bold];
m7_142 -> m7_143  [key=0, style=solid];
m7_143 -> m7_144  [key=0, style=solid];
m7_143 -> m7_129  [key=2, style=dotted];
m7_144 -> m7_145  [key=0, style=solid];
m7_144 -> m7_42  [key=2, style=dotted];
m7_144 -> m7_44  [key=2, style=dotted];
m7_144 -> m7_45  [key=2, style=dotted];
m7_145 -> m7_142  [color=blue, key=0, style=bold];
m7_94 -> m7_95  [key=0, style=solid];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_14  [key=2, style=dotted];
m7_95 -> m7_97  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_95 -> m7_98  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_95 -> m7_99  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_95 -> m7_100  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_109  [key=2, style=dotted];
m7_97 -> m7_98  [key=0, style=solid];
m7_97 -> m7_20  [key=2, style=dotted];
m7_98 -> m7_99  [key=0, style=solid];
m7_98 -> m7_110  [key=2, style=dotted];
m7_98 -> m7_21  [key=2, style=dotted];
m7_99 -> m7_100  [key=0, style=solid];
m7_99 -> m7_41  [key=2, style=dotted];
m7_100 -> m7_101  [key=0, style=solid];
m7_100 -> m7_42  [key=2, style=dotted];
m7_100 -> m7_102  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_101 -> m7_102  [key=0, style=solid];
m7_101 -> m7_111  [key=2, style=dotted];
m7_102 -> m7_103  [key=0, style=solid];
m7_102 -> m7_43  [key=2, style=dotted];
m7_102 -> m7_104  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_102 -> m7_105  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_102 -> m7_106  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_102 -> m7_107  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_103 -> m7_104  [key=0, style=solid];
m7_103 -> m7_44  [key=2, style=dotted];
m7_103 -> m7_45  [key=2, style=dotted];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_44  [key=2, style=dotted];
m7_104 -> m7_45  [key=2, style=dotted];
m7_105 -> m7_106  [key=0, style=solid];
m7_105 -> m7_44  [key=2, style=dotted];
m7_105 -> m7_45  [key=2, style=dotted];
m7_106 -> m7_107  [key=0, style=solid];
m7_106 -> m7_44  [key=2, style=dotted];
m7_106 -> m7_45  [key=2, style=dotted];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_44  [key=2, style=dotted];
m7_107 -> m7_45  [key=2, style=dotted];
m7_108 -> m7_94  [color=blue, key=0, style=bold];
m7_178 -> m7_179  [key=0, style=solid];
m7_179 -> m7_180  [key=0, style=solid];
m7_179 -> m7_171  [key=2, style=dotted];
m7_180 -> m7_181  [key=0, style=solid];
m7_180 -> m7_161  [key=2, style=dotted];
m7_180 -> m7_172  [key=2, style=dotted];
m7_180 -> m7_163  [key=2, style=dotted];
m7_181 -> m7_182  [key=0, style=solid];
m7_181 -> m7_44  [key=2, style=dotted];
m7_181 -> m7_164  [key=2, style=dotted];
m7_182 -> m7_178  [color=blue, key=0, style=bold];
m7_166 -> m7_167  [key=0, style=solid];
m7_167 -> m7_168  [key=0, style=solid];
m7_167 -> m7_171  [key=2, style=dotted];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_161  [key=2, style=dotted];
m7_168 -> m7_172  [key=2, style=dotted];
m7_168 -> m7_163  [key=2, style=dotted];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_44  [key=2, style=dotted];
m7_169 -> m7_164  [key=2, style=dotted];
m7_170 -> m7_166  [color=blue, key=0, style=bold];
m7_25 -> m7_26  [key=0, style=solid];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_20  [key=2, style=dotted];
m7_27 -> m7_25  [color=blue, key=0, style=bold];
m7_54 -> m7_55  [key=0, style=solid];
m7_55 -> m7_56  [key=0, style=solid];
m7_56 -> m7_57  [key=0, style=solid];
m7_56 -> m7_65  [key=2, style=dotted];
m7_56 -> m7_21  [key=2, style=dotted];
m7_57 -> m7_58  [key=0, style=solid];
m7_57 -> m7_42  [key=2, style=dotted];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_43  [key=2, style=dotted];
m7_58 -> m7_60  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_58 -> m7_61  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_58 -> m7_62  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_58 -> m7_63  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_44  [key=2, style=dotted];
m7_59 -> m7_45  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_44  [key=2, style=dotted];
m7_60 -> m7_45  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_44  [key=2, style=dotted];
m7_61 -> m7_45  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_44  [key=2, style=dotted];
m7_62 -> m7_45  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_44  [key=2, style=dotted];
m7_63 -> m7_45  [key=2, style=dotted];
m7_64 -> m7_54  [color=blue, key=0, style=bold];
m7_134 -> m7_135  [key=0, style=solid];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_129  [key=2, style=dotted];
m7_135 -> m7_130  [key=2, style=dotted];
m7_135 -> m7_131  [key=2, style=dotted];
m7_135 -> m7_137  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_136 -> m7_137  [key=0, style=solid];
m7_136 -> m7_132  [key=2, style=dotted];
m7_136 -> m7_21  [key=2, style=dotted];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_42  [key=2, style=dotted];
m7_137 -> m7_139  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_138 -> m7_139  [key=0, style=solid];
m7_138 -> m7_111  [key=2, style=dotted];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_43  [key=2, style=dotted];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_44  [key=2, style=dotted];
m7_140 -> m7_45  [key=2, style=dotted];
m7_141 -> m7_134  [color=blue, key=0, style=bold];
m7_173 -> m7_174  [key=0, style=solid];
m7_174 -> m7_175  [key=0, style=solid];
m7_174 -> m7_171  [key=2, style=dotted];
m7_175 -> m7_176  [key=0, style=solid];
m7_175 -> m7_161  [key=2, style=dotted];
m7_175 -> m7_172  [key=2, style=dotted];
m7_175 -> m7_163  [key=2, style=dotted];
m7_176 -> m7_177  [key=0, style=solid];
m7_176 -> m7_44  [key=2, style=dotted];
m7_176 -> m7_164  [key=2, style=dotted];
m7_177 -> m7_173  [color=blue, key=0, style=bold];
m7_79 -> m7_80  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_14  [key=2, style=dotted];
m7_80 -> m7_82  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_80 -> m7_83  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_80 -> m7_84  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_80 -> m7_85  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_81 -> m7_82  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_20  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_40  [key=2, style=dotted];
m7_83 -> m7_21  [key=2, style=dotted];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_41  [key=2, style=dotted];
m7_85 -> m7_86  [key=0, style=solid];
m7_85 -> m7_42  [key=2, style=dotted];
m7_86 -> m7_87  [key=0, style=solid];
m7_86 -> m7_43  [key=2, style=dotted];
m7_86 -> m7_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_86 -> m7_89  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_86 -> m7_90  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_86 -> m7_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_86 -> m7_92  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_87 -> m7_88  [key=0, style=solid];
m7_87 -> m7_44  [key=2, style=dotted];
m7_87 -> m7_45  [key=2, style=dotted];
m7_88 -> m7_89  [key=0, style=solid];
m7_88 -> m7_44  [key=2, style=dotted];
m7_88 -> m7_45  [key=2, style=dotted];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_44  [key=2, style=dotted];
m7_89 -> m7_45  [key=2, style=dotted];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_44  [key=2, style=dotted];
m7_90 -> m7_45  [key=2, style=dotted];
m7_91 -> m7_92  [key=0, style=solid];
m7_91 -> m7_44  [key=2, style=dotted];
m7_91 -> m7_45  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_44  [key=2, style=dotted];
m7_92 -> m7_45  [key=2, style=dotted];
m7_93 -> m7_79  [color=blue, key=0, style=bold];
m7_194 -> m7_195  [key=0, style=solid];
m7_195 -> m7_196  [key=0, style=solid];
m7_195 -> m7_200  [key=2, style=dotted];
m7_195 -> m7_197  [color=darkseagreen4, key=1, label=options, style=dashed];
m7_195 -> m7_198  [color=darkseagreen4, key=1, label=options, style=dashed];
m7_196 -> m7_197  [key=0, style=solid];
m7_196 -> m7_159  [key=2, style=dotted];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_161  [key=2, style=dotted];
m7_197 -> m7_188  [key=2, style=dotted];
m7_197 -> m7_201  [key=2, style=dotted];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_44  [key=2, style=dotted];
m7_198 -> m7_202  [key=2, style=dotted];
m7_199 -> m7_194  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_14  [key=2, style=dotted];
m7_1 -> m7_15  [key=2, style=dotted];
m7_1 -> m7_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_1 -> m7_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_16  [key=2, style=dotted];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_17  [key=2, style=dotted];
m7_4 -> m7_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_19  [key=2, style=dotted];
m7_6 -> m7_20  [key=2, style=dotted];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_20  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_20  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_20  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_20  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_21  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_8  [key=0, style=solid];
m7_5 -> m7_18  [key=2, style=dotted];
m7_13 -> m7_0  [color=blue, key=0, style=bold];
m7_28 -> m7_29  [key=0, style=solid];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_14  [key=2, style=dotted];
m7_29 -> m7_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_29 -> m7_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_29 -> m7_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_29 -> m7_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_29 -> m7_35  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_20  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_20  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_40  [key=2, style=dotted];
m7_32 -> m7_21  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_41  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_41  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_42  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_43  [key=2, style=dotted];
m7_36 -> m7_38  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_44  [key=2, style=dotted];
m7_37 -> m7_45  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_44  [key=2, style=dotted];
m7_38 -> m7_45  [key=2, style=dotted];
m7_39 -> m7_28  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_14  [key=2, style=dotted];
m7_23 -> m7_15  [key=2, style=dotted];
m7_24 -> m7_22  [color=blue, key=0, style=bold];
m7_46 -> m7_47  [key=0, style=solid];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_14  [key=2, style=dotted];
m7_47 -> m7_49  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_53  [key=2, style=dotted];
m7_48 -> m7_21  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_42  [key=2, style=dotted];
m7_50 -> m7_51  [key=0, style=solid];
m7_50 -> m7_43  [key=2, style=dotted];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_44  [key=2, style=dotted];
m7_51 -> m7_45  [key=2, style=dotted];
m7_52 -> m7_46  [color=blue, key=0, style=bold];
m7_112 -> m7_113  [key=0, style=solid];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m7_113 -> m7_124  [color=darkseagreen4, key=1, label=year, style=dashed];
m7_114 -> m7_115  [key=0, style=solid];
m7_114 -> m7_129  [key=2, style=dotted];
m7_114 -> m7_116  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_114 -> m7_117  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_114 -> m7_118  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_114 -> m7_119  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_114 -> m7_120  [color=darkseagreen4, key=1, label=local, style=dashed];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_131  [key=2, style=dotted];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_44  [key=2, style=dotted];
m7_124 -> m7_133  [key=2, style=dotted];
m7_124 -> m7_45  [key=2, style=dotted];
m7_115 -> m7_116  [key=0, style=solid];
m7_115 -> m7_130  [key=2, style=dotted];
m7_117 -> m7_118  [key=0, style=solid];
m7_117 -> m7_20  [key=2, style=dotted];
m7_118 -> m7_119  [key=0, style=solid];
m7_118 -> m7_132  [key=2, style=dotted];
m7_118 -> m7_21  [key=2, style=dotted];
m7_119 -> m7_120  [key=0, style=solid];
m7_119 -> m7_41  [key=2, style=dotted];
m7_120 -> m7_121  [key=0, style=solid];
m7_120 -> m7_42  [key=2, style=dotted];
m7_120 -> m7_122  [color=darkseagreen4, key=1, label=help, style=dashed];
m7_121 -> m7_122  [key=0, style=solid];
m7_121 -> m7_111  [key=2, style=dotted];
m7_122 -> m7_123  [key=0, style=solid];
m7_122 -> m7_43  [key=2, style=dotted];
m7_122 -> m7_124  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_122 -> m7_125  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_122 -> m7_126  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_122 -> m7_127  [color=darkseagreen4, key=1, label=lines, style=dashed];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_44  [key=2, style=dotted];
m7_123 -> m7_45  [key=2, style=dotted];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_44  [key=2, style=dotted];
m7_125 -> m7_45  [key=2, style=dotted];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_44  [key=2, style=dotted];
m7_126 -> m7_45  [key=2, style=dotted];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_44  [key=2, style=dotted];
m7_127 -> m7_45  [key=2, style=dotted];
m7_128 -> m7_112  [color=blue, key=0, style=bold];
m7_214 -> m7_4  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m7_214 -> m7_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m7_215 -> m7_23  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_26  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_55  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_56  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_57  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_67  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_68  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_69  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m7_215 -> m7_96  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m8_27 -> m8_28  [key=0, style=solid];
m8_7 -> m8_8  [key=0, style=solid];
m8_7 -> m8_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m8_7 -> m8_20  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m8_7 -> m8_28  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m8_8 -> m8_9  [key=0, style=solid];
m8_8 -> m8_10  [key=2, style=dotted];
m8_8 -> m8_11  [key=2, style=dotted];
m8_8 -> m8_12  [key=2, style=dotted];
m8_8 -> m8_13  [key=2, style=dotted];
m8_8 -> m8_14  [key=2, style=dotted];
m8_8 -> m8_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_8 -> m8_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_16 -> m8_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_18  [key=2, style=dotted];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_22  [key=2, style=dotted];
m8_20 -> m8_23  [key=2, style=dotted];
m8_20 -> m8_24  [key=2, style=dotted];
m8_20 -> m8_25  [key=2, style=dotted];
m8_20 -> m8_13  [key=2, style=dotted];
m8_20 -> m8_26  [key=2, style=dotted];
m8_20 -> m8_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_31 -> m8_32  [key=0, style=solid];
m8_34 -> m8_35  [key=0, style=solid];
m8_37 -> m8_38  [key=0, style=solid];
m8_9 -> m8_7  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_28 -> m8_25  [key=2, style=dotted];
m8_28 -> m8_30  [key=2, style=dotted];
m8_28 -> m8_12  [key=2, style=dotted];
m8_28 -> m8_13  [key=2, style=dotted];
m8_15 -> m8_16  [key=0, style=solid];
m8_19 -> m8_20  [key=0, style=solid];
m8_17 -> m8_15  [color=blue, key=0, style=bold];
m8_21 -> m8_19  [color=blue, key=0, style=bold];
m8_33 -> m8_31  [color=blue, key=0, style=bold];
m8_32 -> m8_33  [key=0, style=solid];
m8_36 -> m8_34  [color=blue, key=0, style=bold];
m8_35 -> m8_36  [key=0, style=solid];
m8_39 -> m8_37  [color=blue, key=0, style=bold];
m8_38 -> m8_39  [key=0, style=solid];
m8_29 -> m8_27  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [color=green, key=0, style=solid];
m8_0 -> m8_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m8_0 -> m8_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m8_0 -> m8_20  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m8_1 -> m8_2  [color=green, key=0, style=solid];
m8_1 -> m8_4  [color=green, key=2, style=dotted];
m8_1 -> m8_7  [color=green, key=1, label="lambda expression", style=dashed];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [key=2, style=dotted];
m8_2 -> m8_5  [key=2, style=dotted];
m8_2 -> m8_6  [key=2, style=dotted];
m8_2 -> m8_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2 -> m8_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2 -> m8_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_3 -> m8_0  [color=blue, key=0, style=bold];
m8_40 -> m8_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", style=dashed];
m8_41 -> m8_8  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m8_41 -> m8_20  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", style=dashed];
m8_42 -> m8_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m8_42 -> m8_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m8_43 -> m8_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m8_43 -> m8_20  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m8_43 -> m8_28  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_2 -> m11_3  [key=0, style=solid];
m11_3 -> m11_4  [key=0, style=solid];
m11_4 -> m11_5  [key=0, style=solid];
m11_5 -> m11_0  [color=blue, key=0, style=bold];
m11_6 -> m11_1  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
m11_6 -> m11_2  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
m11_6 -> m11_3  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
m11_6 -> m11_4  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
m13_8 -> m13_9  [key=0, style=solid];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_2 -> m13_0  [color=blue, key=0, style=bold];
m13_4 -> m13_5  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=2, style=dotted];
m13_6 -> m13_4  [color=blue, key=0, style=bold];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_11  [key=2, style=dotted];
m13_10 -> m13_8  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_0 -> m14_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m14_0 -> m14_0  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [color=green, key=0, style=solid];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_4 -> m14_5  [color=green, key=0, style=solid];
m14_5 -> m14_0  [color=blue, key=0, style=bold];
m14_6 -> m14_4  [color=green, key=1, label="CommandLine.BaseAttribute", style=dashed];
m14_6 -> m14_1  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
m14_6 -> m14_2  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
m14_6 -> m14_3  [color=darkseagreen4, key=1, label="CommandLine.BaseAttribute", style=dashed];
m16_4 -> m16_5  [key=0, style=solid];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_7  [key=2, style=dotted];
m16_6 -> m16_4  [color=blue, key=0, style=bold];
}
