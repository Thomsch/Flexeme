digraph  {
n14 [label="System.Collections.Generic.IEnumerable<string>", span=""];
n15 [label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", span=""];
n0 [label="Entry CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
n1 [label="return preprocessorLookup.TryHead().MapMaybe(\r\n                func =>\r\n                    {\r\n                        var errors = func(arguments);\r\n                        return errors.Any()\r\n                            ? errors\r\n                            : arguments.Preprocess(preprocessorLookup.TailNoFail());\r\n                    },\r\n                Enumerable.Empty<Error>());", span="17-25", cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", color=red, community=1];
n7 [label="var errors = func(arguments)", span="20-20", cluster="lambda expression"];
n8 [label="return errors.Any()\r\n                            ? errors\r\n                            : arguments.Preprocess(preprocessorLookup.TailNoFail());", span="21-23", cluster="lambda expression"];
n2 [label="Exit CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="CommandLine.Core.ArgumentsExtensions.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
n3 [label="Entry System.Collections.Generic.IEnumerable<T>.TryHead<T>()", span="318-318", cluster="System.Collections.Generic.IEnumerable<T>.TryHead<T>()"];
n4 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
n5 [label="Entry Unk.MapMaybe", span="", cluster="Unk.MapMaybe"];
n6 [label="Entry lambda expression", span="18-24", cluster="lambda expression"];
n10 [label="Entry Unk.func", span="", cluster="Unk.func"];
n9 [label="Exit lambda expression", span="18-24", cluster="lambda expression"];
n11 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
n12 [label="Entry System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", span="361-361", cluster="System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()"];
n13 [label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
m0_34 [label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_36 [label="years.Length == 1", span="164-164", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_37 [label="return years[0].ToString(CultureInfo.InvariantCulture);", span="166-166", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_38 [label="var yearsPart = new StringBuilder(years.Length * 6)", span="169-169", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_40 [label="i < years.Length", span="170-170", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_41 [label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="172-172", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_43 [label="next < years.Length", span="174-174", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_44 [label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="176-176", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_39 [label="var i = 0", span="170-170", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_46 [label="return yearsPart.ToString();", span="180-180", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_42 [label="var next = i + 1", span="173-173", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_45 [label="i++", span="170-170", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_47 [label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs"];
m0_33 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="CopyrightInfo.cs"];
m0_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs"];
m0_19 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs"];
m0_32 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfo.cs"];
m0_20 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs"];
m0_21 [label="this.attribute = attribute", span="86-86", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs"];
m0_22 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs"];
m0_31 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfo.cs"];
m0_4 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_5 [label="string.IsNullOrWhiteSpace(author)", span="62-62", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_7 [label="copyrightYears.Length == 0", span="63-63", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_10 [label="this.isSymbolUpper = isSymbolUpper", span="66-66", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_11 [label="this.author = author", span="67-67", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_12 [label="this.copyrightYears = copyrightYears", span="68-68", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_13 [label="builderSize = 12 + author.Length + (4 * copyrightYears.Length) + ExtraLength", span="69-69", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_6 [label="throw new ArgumentException(''author'');", span="62-62", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_8 [label="throw new ArgumentOutOfRangeException(''copyrightYears'');", span="63-63", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_9 [label="int ExtraLength = 10", span="65-65", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_14 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs"];
m0_0 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs"];
m0_1 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs"];
m0_48 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfo.cs"];
m0_26 [label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="138-138", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs"];
m0_27 [label="attribute != null", span="140-140", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs"];
m0_28 [label="return attribute.Copyright;", span="142-142", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs"];
m0_29 [label="return new StringBuilder(builderSize)\r\n                .Append(CopyrightWord)\r\n                .Append(' ')\r\n                .Append(isSymbolUpper ? SymbolUpper : SymbolLower)\r\n                .Append(' ')\r\n                .Append(FormatYears(copyrightYears))\r\n                .Append(' ')\r\n                .Append(author)\r\n                .ToString();", span="145-153", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs"];
m0_30 [label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="138-138", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs"];
m0_23 [label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs"];
m0_24 [label="return info.ToString();", span="131-131", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs"];
m0_25 [label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs"];
m0_2 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs"];
m0_3 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs"];
m0_35 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfo.cs"];
m0_17 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CopyrightInfo.cs"];
m0_16 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="CopyrightInfo.cs"];
m0_15 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="CopyrightInfo.cs"];
m0_49 [label="CommandLine.Text.CopyrightInfo", span="", file="CopyrightInfo.cs"];
m2_258 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="HelpText.cs"];
m2_102 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_118 [label="parserResult == null", span="287-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_120 [label="current == null", span="288-288", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_122 [label="((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes().Empty()", span="290-290", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_123 [label="return current;", span="291-291", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_124 [label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_126 [label="return current;", span="298-298", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_127 [label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_119 [label="throw new ArgumentNullException(''parserResult'');", span="287-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_121 [label="throw new ArgumentNullException(''current'');", span="288-288", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_125 [label="errors.Empty()", span="297-297", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_128 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_129 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="HelpText.cs"];
m2_48 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", span="18-18", cluster="System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", file="HelpText.cs"];
m2_255 [label="Entry Unk.FromJustStrict", span="", cluster="Unk.FromJustStrict", file="HelpText.cs"];
m2_0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs"];
m2_1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs"];
m2_379 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)", file="HelpText.cs"];
m2_460 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()", file="HelpText.cs"];
m2_324 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="HelpText.cs"];
m2_61 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_174 [label="result == null", span="391-391", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_176 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_175 [label="throw new ArgumentNullException(''result'');", span="391-391", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_177 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_274 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()", file="HelpText.cs"];
m2_273 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HelpText.cs"];
m2_92 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpText.cs"];
m2_90 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HelpText.cs"];
m2_402 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HelpText.cs"];
m2_135 [label="Entry CommandLine.Text.HelpText.ToString()", span="580-580", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m2_267 [label="int ExtraLength = 10", span="582-582", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m2_268 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m2_269 [label="Exit CommandLine.Text.HelpText.ToString()", span="580-580", cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs"];
m2_270 [label="Entry string.SafeLength()", span="50-50", cluster="string.SafeLength()", file="HelpText.cs"];
m2_139 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs"];
m2_140 [label="return AddLine(postOptionsHelp, value);", span="335-335", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs"];
m2_141 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs"];
m2_272 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="HelpText.cs"];
m2_474 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="HelpText.cs"];
m2_426 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_429 [label="var specLength = 0", span="842-842", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_430 [label="var hasShort = spec.ShortName.Length > 0", span="844-844", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_431 [label="var hasLong = spec.LongName.Length > 0", span="845-845", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_433 [label="spec.MetaValue.Length > 0", span="848-848", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_434 [label="metaLength = spec.MetaValue.Length + 1", span="849-849", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_441 [label="specLength += spec.LongName.Length", span="862-862", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_436 [label="++specLength", span="853-853", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_446 [label="specLength += 2", span="870-870", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_447 [label="return specLength;", span="872-872", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_435 [label=hasShort, span="851-851", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_445 [label="hasShort && hasLong", span="869-869", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_432 [label="var metaLength = 0", span="847-847", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_440 [label=hasLong, span="860-860", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_439 [label="specLength += metaLength", span="857-857", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_444 [label="specLength += metaLength", span="866-866", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_437 [label=AddDashesToOption, span="854-854", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_438 [label="++specLength", span="855-855", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_442 [label=AddDashesToOption, span="863-863", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_443 [label="specLength += 2", span="864-864", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_448 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="840-840", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_259 [label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124", cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="HelpText.cs"];
m2_325 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="665-672", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs"];
m2_187 [label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs"];
m2_326 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="663-663", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs"];
m2_381 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="HelpText.cs"];
m2_271 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()", file="HelpText.cs"];
m2_327 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs"];
m2_380 [label="Entry string.FormatInvariant(params object[])", span="25-25", cluster="string.FormatInvariant(params object[])", file="HelpText.cs"];
m2_23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpText.cs"];
m2_299 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="HelpText.cs"];
m2_200 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_201 [label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_202 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_315 [label="Entry System.Type.GetUsageData()", span="38-38", cluster="System.Type.GetUsageData()", file="HelpText.cs"];
m2_401 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="HelpText.cs"];
m2_59 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HelpText.cs"];
m2_256 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="HelpText.cs"];
m2_51 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="HelpText.cs"];
m2_130 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_204 [label="parserResult == null", span="483-483", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_208 [label="yield break;", span="488-488", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_211 [label="yield return line.ToString();", span="495-495", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_216 [label="yield return line;", span="506-506", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_206 [label="var meaningfulErrors =\r\n                ((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes()", span="485-486", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_210 [label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_212 [label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_205 [label="throw new ArgumentNullException(''parserResult'');", span="483-483", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_207 [label="meaningfulErrors.Empty()", span="487-487", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_209 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_213 [label="mutuallyErrs.Length > 0", span="501-501", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_214 [label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_215 [label=lines, span="505-505", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_217 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs"];
m2_340 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_348 [label="optionsHelp.Append(''  '')", span="722-722", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_349 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="723-727", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_350 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="729-731", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_351 [label="var optionHelpText = specification.HelpText", span="733-733", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_352 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="735-735", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_353 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="736-736", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_354 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="738-739", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_355 [label="specification.Required", span="741-741", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_356 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="742-742", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_362 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="752-752", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_365 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="756-756", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_368 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="762-762", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_369 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="764-764", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_370 [label="wordBuffer = widthOfHelpText", span="765-765", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_373 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="773-774", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_374 [label="optionHelpText.Length > widthOfHelpText", span="776-776", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_357 [label="!string.IsNullOrEmpty(optionHelpText)", span="744-744", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_359 [label="var words = optionHelpText.Split(' ')", span="749-749", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_372 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="772-772", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_375 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="779-782", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_358 [label="var wordBuffer = 0", span="748-748", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_364 [label="wordBuffer += words[i].Length", span="755-755", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_360 [label="var i = 0", span="750-750", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_361 [label="i < words.Length", span="750-750", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_363 [label="optionsHelp.Append(words[i])", span="754-754", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_371 [label="i++", span="750-750", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_367 [label="wordBuffer++", span="759-759", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_366 [label="optionsHelp.Append('' '')", span="758-758", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_376 [label="return this;", span="784-784", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_377 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="720-720", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs"];
m2_344 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs"];
m2_307 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="703-703", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs"];
m2_343 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="705-710", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs"];
m2_403 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="HelpText.cs"];
m2_131 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="HelpText.cs"];
m2_422 [label="Entry lambda expression", span="829-836", cluster="lambda expression", file="HelpText.cs"];
m2_63 [label="license.AddToHelpText(auto, true)", span="220-220", cluster="lambda expression", file="HelpText.cs"];
m2_67 [label="usage.AddToHelpText(auto, true)", span="233-233", cluster="lambda expression", file="HelpText.cs"];
m2_70 [label="auto.AddPreOptionsLines(lines)", span="236-236", cluster="lambda expression", file="HelpText.cs"];
m2_62 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="HelpText.cs"];
m2_66 [label="Entry lambda expression", span="233-233", cluster="lambda expression", file="HelpText.cs"];
m2_69 [label="Entry lambda expression", span="236-236", cluster="lambda expression", file="HelpText.cs"];
m2_73 [label="Entry lambda expression", span="239-239", cluster="lambda expression", file="HelpText.cs"];
m2_64 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="HelpText.cs"];
m2_68 [label="Exit lambda expression", span="233-233", cluster="lambda expression", file="HelpText.cs"];
m2_71 [label="Exit lambda expression", span="236-236", cluster="lambda expression", file="HelpText.cs"];
m2_74 [label="e.Tag == ErrorType.NoVerbSelectedError", span="239-239", cluster="lambda expression", file="HelpText.cs"];
m2_75 [label="Exit lambda expression", span="239-239", cluster="lambda expression", file="HelpText.cs"];
m2_100 [label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271", cluster="lambda expression", file="HelpText.cs"];
m2_113 [label="DefaultParsingErrorsHandler(parserResult, current)", span="277-277", cluster="lambda expression", file="HelpText.cs"];
m2_93 [label="Entry lambda expression", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m2_96 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="HelpText.cs"];
m2_107 [label="DefaultParsingErrorsHandler(pr, current)", span="276-276", cluster="lambda expression", file="HelpText.cs"];
m2_99 [label="Entry lambda expression", span="271-271", cluster="lambda expression", file="HelpText.cs"];
m2_103 [label="Entry lambda expression", span="271-271", cluster="lambda expression", file="HelpText.cs"];
m2_106 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="HelpText.cs"];
m2_109 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="HelpText.cs"];
m2_112 [label="Entry lambda expression", span="277-277", cluster="lambda expression", file="HelpText.cs"];
m2_115 [label="Entry lambda expression", span="277-277", cluster="lambda expression", file="HelpText.cs"];
m2_94 [label="e.Tag == ErrorType.VersionRequestedError", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m2_95 [label="Exit lambda expression", span="267-267", cluster="lambda expression", file="HelpText.cs"];
m2_97 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="270-270", cluster="lambda expression", file="HelpText.cs"];
m2_98 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="HelpText.cs"];
m2_101 [label="Exit lambda expression", span="271-271", cluster="lambda expression", file="HelpText.cs"];
m2_104 [label=e, span="271-271", cluster="lambda expression", file="HelpText.cs"];
m2_105 [label="Exit lambda expression", span="271-271", cluster="lambda expression", file="HelpText.cs"];
m2_108 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="HelpText.cs"];
m2_110 [label=e, span="276-276", cluster="lambda expression", file="HelpText.cs"];
m2_111 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="HelpText.cs"];
m2_114 [label="Exit lambda expression", span="277-277", cluster="lambda expression", file="HelpText.cs"];
m2_116 [label=e, span="277-277", cluster="lambda expression", file="HelpText.cs"];
m2_117 [label="Exit lambda expression", span="277-277", cluster="lambda expression", file="HelpText.cs"];
m2_147 [label="Entry lambda expression", span="345-345", cluster="lambda expression", file="HelpText.cs"];
m2_148 [label="AddPreOptionsLine(line)", span="345-345", cluster="lambda expression", file="HelpText.cs"];
m2_149 [label="Exit lambda expression", span="345-345", cluster="lambda expression", file="HelpText.cs"];
m2_154 [label="Entry lambda expression", span="356-356", cluster="lambda expression", file="HelpText.cs"];
m2_155 [label="AddPostOptionsLine(line)", span="356-356", cluster="lambda expression", file="HelpText.cs"];
m2_156 [label="Exit lambda expression", span="356-356", cluster="lambda expression", file="HelpText.cs"];
m2_163 [label="Entry lambda expression", span="368-368", cluster="lambda expression", file="HelpText.cs"];
m2_164 [label="AddPreOptionsLine(line)", span="368-368", cluster="lambda expression", file="HelpText.cs"];
m2_165 [label="Exit lambda expression", span="368-368", cluster="lambda expression", file="HelpText.cs"];
m2_171 [label="Entry lambda expression", span="380-380", cluster="lambda expression", file="HelpText.cs"];
m2_172 [label="AddPostOptionsLine(line)", span="380-380", cluster="lambda expression", file="HelpText.cs"];
m2_173 [label="Exit lambda expression", span="380-380", cluster="lambda expression", file="HelpText.cs"];
m2_224 [label="Entry lambda expression", span="491-491", cluster="lambda expression", file="HelpText.cs"];
m2_225 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491", cluster="lambda expression", file="HelpText.cs"];
m2_226 [label="Exit lambda expression", span="491-491", cluster="lambda expression", file="HelpText.cs"];
m2_231 [label="Entry lambda expression", span="518-518", cluster="lambda expression", file="HelpText.cs"];
m2_232 [label=example, span="518-518", cluster="lambda expression", file="HelpText.cs"];
m2_233 [label="Exit lambda expression", span="518-518", cluster="lambda expression", file="HelpText.cs"];
m2_263 [label="config.PreferShortName = s.PreferShortName", span="567-567", cluster="lambda expression", file="HelpText.cs"];
m2_264 [label="config.GroupSwitches = s.GroupSwitches", span="568-568", cluster="lambda expression", file="HelpText.cs"];
m2_265 [label="config.UseEqualToken = s.UseEqualToken", span="569-569", cluster="lambda expression", file="HelpText.cs"];
m2_262 [label="Entry lambda expression", span="565-570", cluster="lambda expression", file="HelpText.cs"];
m2_266 [label="Exit lambda expression", span="565-570", cluster="lambda expression", file="HelpText.cs"];
m2_310 [label="Entry lambda expression", span="642-642", cluster="lambda expression", file="HelpText.cs"];
m2_311 [label="v.Index", span="642-642", cluster="lambda expression", file="HelpText.cs"];
m2_312 [label="Exit lambda expression", span="642-642", cluster="lambda expression", file="HelpText.cs"];
m2_317 [label="Entry lambda expression", span="651-660", cluster="lambda expression", file="HelpText.cs"];
m2_318 [label="var prop = tuple.Item1", span="653-653", cluster="lambda expression", file="HelpText.cs"];
m2_319 [label="var attr = tuple.Item2", span="654-654", cluster="lambda expression", file="HelpText.cs"];
m2_320 [label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="656-657", cluster="lambda expression", file="HelpText.cs"];
m2_321 [label="return Tuple.Create(attr, examples);", span="659-659", cluster="lambda expression", file="HelpText.cs"];
m2_322 [label="Exit lambda expression", span="651-660", cluster="lambda expression", file="HelpText.cs"];
m2_338 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="688-688", cluster="lambda expression", file="HelpText.cs"];
m2_337 [label="Entry lambda expression", span="687-688", cluster="lambda expression", file="HelpText.cs"];
m2_339 [label="Exit lambda expression", span="687-688", cluster="lambda expression", file="HelpText.cs"];
m2_384 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="726-726", cluster="lambda expression", file="HelpText.cs"];
m2_388 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="727-727", cluster="lambda expression", file="HelpText.cs"];
m2_383 [label="Entry lambda expression", span="726-726", cluster="lambda expression", file="HelpText.cs"];
m2_387 [label="Entry lambda expression", span="727-727", cluster="lambda expression", file="HelpText.cs"];
m2_391 [label="Entry lambda expression", span="739-739", cluster="lambda expression", file="HelpText.cs"];
m2_392 [label="optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="739-739", cluster="lambda expression", file="HelpText.cs"];
m2_385 [label="Exit lambda expression", span="726-726", cluster="lambda expression", file="HelpText.cs"];
m2_389 [label="Exit lambda expression", span="727-727", cluster="lambda expression", file="HelpText.cs"];
m2_393 [label="Exit lambda expression", span="739-739", cluster="lambda expression", file="HelpText.cs"];
m2_399 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="793-797", cluster="lambda expression", file="HelpText.cs"];
m2_405 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="800-803", cluster="lambda expression", file="HelpText.cs"];
m2_398 [label="Entry lambda expression", span="793-797", cluster="lambda expression", file="HelpText.cs"];
m2_404 [label="Entry lambda expression", span="800-803", cluster="lambda expression", file="HelpText.cs"];
m2_400 [label="Exit lambda expression", span="793-797", cluster="lambda expression", file="HelpText.cs"];
m2_406 [label="Exit lambda expression", span="800-803", cluster="lambda expression", file="HelpText.cs"];
m2_410 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="812-812", cluster="lambda expression", file="HelpText.cs"];
m2_414 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="813-813", cluster="lambda expression", file="HelpText.cs"];
m2_409 [label="Entry lambda expression", span="812-812", cluster="lambda expression", file="HelpText.cs"];
m2_413 [label="Entry lambda expression", span="813-813", cluster="lambda expression", file="HelpText.cs"];
m2_411 [label="Exit lambda expression", span="812-812", cluster="lambda expression", file="HelpText.cs"];
m2_415 [label="Exit lambda expression", span="813-813", cluster="lambda expression", file="HelpText.cs"];
m2_423 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="831-833", cluster="lambda expression", file="HelpText.cs"];
m2_424 [label="return Math.Max(length, specLength);", span="835-835", cluster="lambda expression", file="HelpText.cs"];
m2_425 [label="Exit lambda expression", span="829-836", cluster="lambda expression", file="HelpText.cs"];
m2_397 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs"];
m2_88 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="HelpText.cs"];
m2_386 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_395 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="789-804", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_396 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="787-787", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs"];
m2_4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs"];
m2_5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs"];
m2_473 [label="Entry T.ToStringLocal<T>()", span="20-20", cluster="T.ToStringLocal<T>()", file="HelpText.cs"];
m2_329 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="HelpText.cs"];
m2_476 [label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0", cluster="System.Text.StringBuilder.ToString(int, int)", file="HelpText.cs"];
m2_76 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_77 [label="parserResult.Tag != ParserResultType.NotParsed", span="262-262", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_79 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_83 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_86 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_78 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_80 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_82 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_84 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_81 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_85 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_87 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_220 [label="Entry int.Spaces()", span="35-35", cluster="int.Spaces()", file="HelpText.cs"];
m2_65 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="HelpText.cs"];
m2_223 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="HelpText.cs"];
m2_254 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()", file="HelpText.cs"];
m2_475 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="HelpText.cs"];
m2_166 [label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs"];
m2_167 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs"];
m2_168 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="380-380", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs"];
m2_169 [label="return this;", span="381-381", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs"];
m2_170 [label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs"];
m2_60 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m2_180 [label="types == null", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m2_182 [label="types.Length == 0", span="408-408", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m2_184 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m2_181 [label="throw new ArgumentNullException(''types'');", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m2_183 [label="throw new ArgumentOutOfRangeException(''types'');", span="408-408", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m2_185 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs"];
m2_253 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs"];
m2_313 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="650-660", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs"];
m2_314 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs"];
m2_162 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpText.cs"];
m2_203 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_8 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs"];
m2_9 [label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpText.cs"];
m2_227 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_228 [label="return RenderUsageText(parserResult, example => example);", span="518-518", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_229 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_146 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="HelpText.cs"];
m2_296 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="HelpText.cs"];
m2_24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="HelpText.cs"];
m2_328 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="HelpText.cs"];
m2_394 [label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_461 [label="value is bool", span="897-897", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_462 [label="return value.ToStringLocal().ToLowerInvariant();", span="898-898", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_463 [label="value is string", span="900-900", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_464 [label="return value.ToStringLocal();", span="901-901", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_465 [label="var asEnumerable = value as IEnumerable", span="903-903", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_467 [label="return value.ToStringLocal();", span="905-905", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_466 [label="asEnumerable == null", span="904-904", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_469 [label=asEnumerable, span="908-908", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_468 [label="var builder = new StringBuilder()", span="907-907", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_470 [label="builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="909-911", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_471 [label="return builder.Length > 0\r\n                ? builder.ToString(0, builder.Length - 1)\r\n                : string.Empty;", span="913-915", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_472 [label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="895-895", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs"];
m2_25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_31 [label="auto = onError(auto)", span="216-216", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_34 [label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_41 [label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_43 [label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_44 [label="auto.AddOptions(parserResult)", span="245-245", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_27 [label="var errors = Enumerable.Empty<Error>()", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_36 [label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_38 [label="auto.AddPreOptionsLine(heading)", span="229-229", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_39 [label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_40 [label="usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_42 [label="auto.AddDashesToOption = false", span="241-241", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_45 [label="return auto;", span="247-247", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_30 [label="errors.OnlyMeaningfulOnes().Any()", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_33 [label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_35 [label="usageAttr.IsJust() || usageLines.IsJust()", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_37 [label="heading.Length > 0", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_46 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs"];
m2_50 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="HelpText.cs"];
m2_47 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpText.cs"];
m2_218 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="HelpText.cs"];
m2_91 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs"];
m2_382 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="HelpText.cs"];
m2_298 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="HelpText.cs"];
m2_309 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="HelpText.cs"];
m2_412 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="HelpText.cs"];
m2_257 [label="Entry Unk.mapperFunc", span="", cluster="Unk.mapperFunc", file="HelpText.cs"];
m2_260 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="HelpText.cs"];
m2_54 [label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331", cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="HelpText.cs"];
m2_179 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m2_330 [label="var maxLength = GetMaxLength(specifications)", span="680-680", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m2_332 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="684-684", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m2_333 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="686-688", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m2_331 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="682-682", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m2_334 [label="return this;", span="690-690", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m2_335 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="675-675", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs"];
m2_222 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="HelpText.cs"];
m2_132 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_133 [label="return info.ToString();", span="313-313", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_134 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs"];
m2_138 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m2_345 [label="AddLine(preOptionsHelp, value, maximumLength)", span="715-715", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m2_346 [label="return this;", span="717-717", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m2_347 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="713-713", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs"];
m2_323 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="HelpText.cs"];
m2_142 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m2_416 [label="AddLine(builder, value, MaximumDisplayWidth)", span="821-821", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m2_417 [label="return this;", span="823-823", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m2_418 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="819-819", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs"];
m2_2 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs"];
m2_3 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="HelpText.cs"];
m2_301 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="637-639", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m2_178 [label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m2_300 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="636-636", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m2_302 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="640-642", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m2_303 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="643-645", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m2_304 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs"];
m2_275 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_276 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="600-600", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_278 [label="var words = value.Split(' ')", span="604-604", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_281 [label="words[i].Length < (maximumLength - wordBuffer)", span="607-607", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_282 [label="builder.Append(words[i])", span="609-609", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_284 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="611-611", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_285 [label="builder.Append('' '')", span="613-613", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_287 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="617-617", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_288 [label="builder.Append(words[i].Substring(0, maximumLength))", span="619-619", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_289 [label="wordBuffer = maximumLength", span="620-620", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_291 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="626-626", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_292 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="627-627", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_293 [label="value.Length > maximumLength", span="629-629", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_294 [label="builder.Append(value)", span="631-631", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_277 [label="var wordBuffer = 0", span="603-603", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_283 [label="wordBuffer += words[i].Length", span="610-610", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_279 [label="var i = 0", span="605-605", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_280 [label="i < words.Length", span="605-605", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_290 [label="i++", span="605-605", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_286 [label="wordBuffer++", span="614-614", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_295 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs"];
m2_10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_11 [label="sentenceBuilder == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_13 [label="heading == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_15 [label="copyright == null", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_19 [label="this.sentenceBuilder = sentenceBuilder", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_20 [label="this.heading = heading", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_21 [label="this.copyright = copyright", span="106-106", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_14 [label="throw new ArgumentNullException(''heading'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_16 [label="throw new ArgumentNullException(''copyright'');", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs"];
m2_390 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_407 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="809-816", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_408 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="807-807", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_72 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_143 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="345-345", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_144 [label="return this;", span="346-346", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_145 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_428 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="HelpText.cs"];
m2_221 [label="Entry Unk.formatError", span="", cluster="Unk.formatError", file="HelpText.cs"];
m2_336 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs"];
m2_419 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="828-836", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs"];
m2_420 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="826-826", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs"];
m2_378 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs"];
m2_186 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HelpText.cs"];
m2_342 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs"];
m2_306 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="693-693", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs"];
m2_341 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="695-700", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs"];
m2_297 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="HelpText.cs"];
m2_188 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_189 [label="result == null", span="424-424", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_191 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_190 [label="throw new ArgumentNullException(''result'');", span="424-424", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_192 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs"];
m2_427 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_449 [label="var specLength = 0", span="877-877", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_450 [label="var hasMeta = spec.MetaName.Length > 0", span="879-879", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_452 [label="spec.MetaValue.Length > 0", span="882-882", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_453 [label="metaLength = spec.MetaValue.Length + 1", span="883-883", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_455 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="886-886", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_456 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="888-888", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_451 [label="var metaLength = 0", span="881-881", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_454 [label=hasMeta, span="885-885", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_457 [label="specLength += metaLength", span="890-890", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_458 [label="return specLength;", span="892-892", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_459 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="875-875", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs"];
m2_57 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs"];
m2_136 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs"];
m2_137 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs"];
m2_316 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="HelpText.cs"];
m2_305 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="HelpText.cs"];
m2_49 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpText.cs"];
m2_56 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="HelpText.cs"];
m2_193 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m2_194 [label="types == null", span="441-441", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m2_196 [label="types.Length == 0", span="442-442", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m2_198 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m2_195 [label="throw new ArgumentNullException(''types'');", span="441-441", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m2_197 [label="throw new ArgumentOutOfRangeException(''types'');", span="442-442", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m2_199 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs"];
m2_150 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_151 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="356-356", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_152 [label="return this;", span="357-357", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_153 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs"];
m2_52 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="HelpText.cs"];
m2_157 [label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m2_158 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m2_159 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="368-368", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m2_160 [label="return this;", span="369-369", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m2_161 [label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs"];
m2_6 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs"];
m2_7 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="HelpText.cs"];
m2_230 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_234 [label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_235 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_53 [label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_236 [label="parserResult == null", span="542-542", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_240 [label="yield break;", span="546-546", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_247 [label="yield return exampleText.ToString();", span="557-557", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_251 [label="yield return commandLine.ToString();", span="571-571", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_238 [label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_245 [label="var example = mapperFunc(e)", span="554-554", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_237 [label="throw new ArgumentNullException(''parserResult'');", span="542-542", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_239 [label="usage.MatchNothing()", span="545-545", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_241 [label="var usageTuple = usage.FromJustStrict()", span="548-548", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=red, community=0, file="HelpText.cs"];
m2_242 [label="var examples = usageTuple.Item2", span="549-549", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_243 [label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_244 [label=examples, span="552-552", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_250 [label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_246 [label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_248 [label="var styles = example.GetFormatStylesOrDefault()", span="558-558", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_249 [label=styles, span="559-559", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_252 [label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs"];
m2_421 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="HelpText.cs"];
m2_261 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="HelpText.cs"];
m2_219 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpText.cs"];
m2_89 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="HelpText.cs"];
m2_55 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326", cluster="CSharpx.Maybe<T>.IsJust<T>()", file="HelpText.cs"];
m2_308 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpText.cs"];
m2_477 [label="CommandLine.Text.HelpText", span="", file="HelpText.cs"];
m2_478 [label=auto, span="", file="HelpText.cs"];
m2_479 [label="CommandLine.ParserResult<T>", span="", file="HelpText.cs"];
m2_480 [label=pr, span="", file="HelpText.cs"];
m2_481 [label=s, span="", file="HelpText.cs"];
m2_482 [label=string, span="", file="HelpText.cs"];
m2_483 [label=maxLength, span="", file="HelpText.cs"];
m2_484 [label=remainingSpace, span="", file="HelpText.cs"];
m2_485 [label=int, span="", file="HelpText.cs"];
m2_486 [label="CommandLine.Core.Specification", span="", file="HelpText.cs"];
m2_487 [label=optionHelpText, span="", file="HelpText.cs"];
m2_488 [label="CommandLine.Core.OptionSpecification", span="", file="HelpText.cs"];
m2_489 [label="CommandLine.Core.ValueSpecification", span="", file="HelpText.cs"];
m3_7 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="InstanceBuilder.cs"];
m3_0 [label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs"];
m3_1 [label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="42-42", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs"];
m3_2 [label="ae.MoveNext()", span="44-44", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs"];
m3_3 [label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="46-46", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs"];
m3_5 [label="ae.Current.Should().Equal(''two'')", span="49-49", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs"];
m3_4 [label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="48-48", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs"];
m3_6 [label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40", cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilder.cs"];
m3_10 [label="Entry Unk.ElementsShouldBeEqual", span="", cluster="Unk.ElementsShouldBeEqual", file="InstanceBuilder.cs"];
m3_9 [label="Entry Unk.PublicWrapperOfGetNextInputValues", span="", cluster="Unk.PublicWrapperOfGetNextInputValues", file="InstanceBuilder.cs"];
m3_12 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InstanceBuilder.cs"];
m3_8 [label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390", cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="InstanceBuilder.cs"];
m3_11 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="InstanceBuilder.cs"];
m3_13 [label="CommandLine.Tests.ArgumentParserFixture", span="", file="InstanceBuilder.cs"];
m5_30 [label="Entry Unk.WithValue", span="", cluster="Unk.WithValue", file="OptionMapper.cs"];
m5_4 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="OptionMapper.cs"];
m5_24 [label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15", cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="OptionMapper.cs"];
m5_18 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="OptionMapper.cs"];
m5_23 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="OptionMapper.cs"];
m5_11 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="OptionMapper.cs"];
m5_10 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="OptionMapper.cs"];
m5_25 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="OptionMapper.cs"];
m5_13 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="OptionMapper.cs"];
m5_29 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="OptionMapper.cs"];
m5_37 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m5_7 [label="Entry lambda expression", span="21-35", cluster="lambda expression", file="OptionMapper.cs"];
m5_8 [label="options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .MapMaybeOrDefault(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .MapMaybeOrDefault(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))", span="22-35", cluster="lambda expression", color=green, community=0, file="OptionMapper.cs"];
m5_9 [label="Exit lambda expression", span="21-35", cluster="lambda expression", file="OptionMapper.cs"];
m5_15 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="OptionMapper.cs"];
m5_19 [label="Entry lambda expression", span="26-34", cluster="lambda expression", file="OptionMapper.cs"];
m5_20 [label="converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .MapMaybeOrDefault(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification()))))", span="27-34", cluster="lambda expression", color=green, community=0, file="OptionMapper.cs"];
m5_21 [label="Exit lambda expression", span="26-34", cluster="lambda expression", file="OptionMapper.cs"];
m5_26 [label="Entry lambda expression", span="28-31", cluster="lambda expression", file="OptionMapper.cs"];
m5_16 [label="s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer)", span="24-24", cluster="lambda expression", file="OptionMapper.cs"];
m5_31 [label="Entry lambda expression", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m5_34 [label="Entry lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m5_27 [label="Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>())", span="29-31", cluster="lambda expression", file="OptionMapper.cs"];
m5_17 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="OptionMapper.cs"];
m5_28 [label="Exit lambda expression", span="28-31", cluster="lambda expression", file="OptionMapper.cs"];
m5_33 [label="Exit lambda expression", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m5_32 [label="se.Item1", span="38-38", cluster="lambda expression", file="OptionMapper.cs"];
m5_36 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m5_35 [label="se.Item2", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m5_38 [label="se.Value", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m5_39 [label="Exit lambda expression", span="39-39", cluster="lambda expression", file="OptionMapper.cs"];
m5_22 [label="Entry Unk.converter", span="", cluster="Unk.converter", file="OptionMapper.cs"];
m5_5 [label="Entry Unk.>", span="", cluster="Unk.>", file="OptionMapper.cs"];
m5_12 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapper.cs"];
m5_6 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="OptionMapper.cs"];
m5_14 [label="Entry Unk.MapMaybeOrDefault", span="", cluster="Unk.MapMaybeOrDefault", file="OptionMapper.cs"];
m5_0 [label="Entry CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m5_1 [label="var sequencesAndErrors = propertyTuples\r\n                .Select(pt =>\r\n                    options.FirstOrDefault(\r\n                            s =>\r\n                            s.Key.MatchName(((OptionSpecification)pt.Specification).ShortName, ((OptionSpecification)pt.Specification).LongName, comparer))\r\n                               .ToMaybe()\r\n                               .MapMaybeOrDefault(sequence =>\r\n                                    converter(sequence.Value, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                                    .MapMaybeOrDefault(converted =>\r\n                                            Tuple.Create(\r\n                                                pt.WithValue(Maybe.Just(converted)),\r\n                                                Maybe.Nothing<Error>()),\r\n                                            Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                                                pt,\r\n                                                Maybe.Just<Error>(new BadFormatConversionError(((OptionSpecification)pt.Specification).FromOptionSpecification())))),\r\n                                Tuple.Create(pt, Maybe.Nothing<Error>()))\r\n                )", span="20-36", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", color=green, community=0, file="OptionMapper.cs"];
m5_2 [label="return Result.Succeed(\r\n                sequencesAndErrors.Select(se => se.Item1),\r\n                sequencesAndErrors.Select(se => se.Item2).OfType<Just<Error>>().Select(se => se.Value));", span="37-39", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m5_3 [label="Exit CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", span="14-14", cluster="CommandLine.Core.OptionMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>, System.StringComparer)", file="OptionMapper.cs"];
m5_40 [label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>", span="", file="OptionMapper.cs"];
m5_41 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>", span="", file="OptionMapper.cs"];
m5_42 [label="System.StringComparer", span="", file="OptionMapper.cs"];
m5_43 [label="CommandLine.Core.SpecificationProperty", span="", file="OptionMapper.cs"];
m6_13 [label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="76-76", cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="Parser.cs"];
m6_7 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs"];
m6_8 [label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs"];
m6_9 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs"];
m6_18 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="Parser.cs"];
m6_4 [label="spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0)", span="18-18", cluster="lambda expression", file="Parser.cs"];
m6_3 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Parser.cs"];
m6_5 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Parser.cs"];
m6_11 [label="spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24", cluster="lambda expression", file="Parser.cs"];
m6_10 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="Parser.cs"];
m6_12 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="Parser.cs"];
m6_19 [label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29", cluster="lambda expression", file="Parser.cs"];
m6_20 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="Parser.cs"];
m6_6 [label="Entry System.Type.ToDescriptor()", span="22-22", cluster="System.Type.ToDescriptor()", file="Parser.cs"];
m6_15 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs"];
m6_16 [label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs"];
m6_17 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs"];
m6_21 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="Parser.cs"];
m6_0 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs"];
m6_1 [label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs"];
m6_2 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs"];
m6_14 [label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="81-81", cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="Parser.cs"];
m8_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", span="10-10", cluster="System.Collections.Generic.IEnumerable<TSource>.IndexOf<TSource>(System.Func<TSource, bool>)", file="Sequence.cs"];
m8_24 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="Sequence.cs"];
m8_10 [label="Entry Unk.MapMaybeOrDefault", span="", cluster="Unk.MapMaybeOrDefault", file="Sequence.cs"];
m8_0 [label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs"];
m8_1 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).MapMaybeOrDefault(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="16-25", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", color=green, community=0, file="Sequence.cs"];
m8_2 [label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Sequence.cs"];
m8_35 [label="Entry Unk.Take", span="", cluster="Unk.Take", file="Sequence.cs"];
m8_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Sequence.cs"];
m8_28 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="Sequence.cs"];
m8_36 [label="Entry lambda expression", span="36-36", cluster="lambda expression", file="Sequence.cs"];
m8_5 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).MapMaybeOrDefault(info =>\r\n                                   info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }, new Token[] { })\r\n                            : new Token[] { }", span="18-23", cluster="lambda expression", color=green, community=0, file="Sequence.cs"];
m8_12 [label="info.TargetType == TargetType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.OfSequence(f, info))\r\n                                        : new Token[] { }", span="20-22", cluster="lambda expression", file="Sequence.cs"];
m8_4 [label="Entry lambda expression", span="17-23", cluster="lambda expression", file="Sequence.cs"];
m8_6 [label="Exit lambda expression", span="17-23", cluster="lambda expression", file="Sequence.cs"];
m8_11 [label="Entry lambda expression", span="19-22", cluster="lambda expression", file="Sequence.cs"];
m8_13 [label="Exit lambda expression", span="19-22", cluster="lambda expression", file="Sequence.cs"];
m8_26 [label="t.Equals(nameToken)", span="30-30", cluster="lambda expression", file="Sequence.cs"];
m8_30 [label="info.MaxItems.MapMaybeOrDefault(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()))", span="34-36", cluster="lambda expression", color=green, community=0, file="Sequence.cs"];
m8_33 [label="tokens.Skip(nameIndex + 1).Take(n)", span="35-35", cluster="lambda expression", file="Sequence.cs"];
m8_25 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="Sequence.cs"];
m8_29 [label="Entry lambda expression", span="34-36", cluster="lambda expression", file="Sequence.cs"];
m8_39 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="Sequence.cs"];
m8_27 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="Sequence.cs"];
m8_31 [label="Exit lambda expression", span="34-36", cluster="lambda expression", file="Sequence.cs"];
m8_32 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="Sequence.cs"];
m8_34 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="Sequence.cs"];
m8_37 [label="v.IsValue()", span="36-36", cluster="lambda expression", file="Sequence.cs"];
m8_38 [label="Exit lambda expression", span="36-36", cluster="lambda expression", file="Sequence.cs"];
m8_40 [label="v.IsValue()", span="37-37", cluster="lambda expression", file="Sequence.cs"];
m8_41 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="Sequence.cs"];
m8_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Sequence.cs"];
m8_16 [label="Entry CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_17 [label="var nameIndex = tokens.IndexOf(t => t.Equals(nameToken))", span="30-30", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_19 [label="return info.NextValue.MapMaybeOrDefault(\r\n                    _ => info.MaxItems.MapMaybeOrDefault(\r\n                            n => tokens.Skip(nameIndex + 1).Take(n),\r\n                                 tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue())),\r\n                    tokens.Skip(nameIndex + 1).TakeWhile(v => v.IsValue()));", span="33-37", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", color=green, community=0, file="Sequence.cs"];
m8_18 [label="nameIndex >= 0", span="31-31", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_20 [label="return new Token[] { };", span="39-39", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_21 [label="Exit CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", span="28-28", cluster="CommandLine.Core.Sequence.OfSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Core.Token, CommandLine.Core.TypeDescriptor)", file="Sequence.cs"];
m8_7 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Sequence.cs"];
m8_14 [label="Entry Unk.OfSequence", span="", cluster="Unk.OfSequence", file="Sequence.cs"];
m8_8 [label="Entry CommandLine.Core.Token.IsValue()", span="133-133", cluster="CommandLine.Core.Token.IsValue()", file="Sequence.cs"];
m8_9 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Sequence.cs"];
m8_3 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="Sequence.cs"];
m8_42 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="Sequence.cs"];
m8_43 [label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span="", file="Sequence.cs"];
m8_44 [label="CommandLine.Core.Token", span="", file="Sequence.cs"];
m8_45 [label="CommandLine.Core.Token", span="", file="Sequence.cs"];
m8_46 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="Sequence.cs"];
m8_47 [label="CommandLine.Core.TypeDescriptor", span="", file="Sequence.cs"];
m8_48 [label=nameIndex, span="", file="Sequence.cs"];
m10_56 [label="Entry CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="111-111", cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", file="SpecificationPropertyExtensions.cs"];
m10_52 [label="Entry CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165", cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="SpecificationPropertyExtensions.cs"];
m10_58 [label="Entry CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="180-180", cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="SpecificationPropertyExtensions.cs"];
m10_51 [label="Entry CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", span="38-38", cluster="CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", file="SpecificationPropertyExtensions.cs"];
m10_47 [label="Entry CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="38-38", cluster="CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="SpecificationPropertyExtensions.cs"];
m10_3 [label="Entry CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="38-38", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_4 [label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="40-40", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_6 [label="var option = map[group.Current]", span="43-43", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_12 [label="argumentEnumerator.IsLast && group.IsLast", span="55-55", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_17 [label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="65-65", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_22 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="76-76", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_24 [label="valueSetting = option.SetValue(items, options)", span="79-79", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_28 [label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="88-88", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_31 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="96-96", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_36 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="107-107", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_37 [label="valueSetting = option.SetValue(items, options)", span="109-109", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_41 [label="!@group.IsLast && map[@group.Next] == null", span="119-119", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_43 [label="!option.SetValue(true, options)", span="124-124", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_5 [label="group.MoveNext()", span="41-41", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_15 [label="!group.IsLast", span="61-61", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_23 [label="items.Insert(0, @group.GetRemainingFromNext())", span="77-77", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_45 [label="return PresentParserState.Success;", span="130-130", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_7 [label="option == null", span="44-44", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_9 [label="option.IsDefined = true", span="49-49", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_10 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="51-51", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_11 [label="!option.IsBoolean", span="53-53", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_16 [label="!option.IsArray", span="63-63", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_19 [label="DefineOptionThatViolatesFormat(option)", span="68-68", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_21 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="74-74", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_26 [label="DefineOptionThatViolatesFormat(option)", span="82-82", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_30 [label="!option.IsArray", span="94-94", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_33 [label="DefineOptionThatViolatesFormat(option)", span="99-99", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_35 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="105-105", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_39 [label="DefineOptionThatViolatesFormat(option)", span="112-112", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_8 [label="return _ignoreUnkwnownArguments ? PresentParserState.MoveOnNextElement : PresentParserState.Failure;", span="46-46", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_13 [label="return PresentParserState.Failure;", span="57-57", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_14 [label="bool valueSetting", span="60-60", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_18 [label="!valueSetting", span="66-66", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_20 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="71-71", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_25 [label="!valueSetting", span="80-80", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_27 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="85-85", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_29 [label="return PresentParserState.Failure;", span="90-90", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_32 [label="!valueSetting", span="97-97", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_34 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="102-102", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_38 [label="!valueSetting", span="110-110", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_40 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="115-115", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_42 [label="return PresentParserState.Failure;", span="121-121", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_44 [label="return PresentParserState.Failure;", span="126-126", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_46 [label="Exit CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="38-38", cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="SpecificationPropertyExtensions.cs"];
m10_53 [label="Entry CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171", cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="SpecificationPropertyExtensions.cs"];
m10_59 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", span="140-140", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="SpecificationPropertyExtensions.cs"];
m10_50 [label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="SpecificationPropertyExtensions.cs"];
m10_61 [label="Entry CommandLine.Parsing.OptionInfo.SetValue(bool, object)", span="201-201", cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", file="SpecificationPropertyExtensions.cs"];
m10_0 [label="Entry CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="33-33", cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="SpecificationPropertyExtensions.cs"];
m10_1 [label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="35-35", cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="SpecificationPropertyExtensions.cs"];
m10_2 [label="Exit CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="33-33", cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="SpecificationPropertyExtensions.cs"];
m10_57 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="SpecificationPropertyExtensions.cs"];
m10_60 [label="Entry CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="SpecificationPropertyExtensions.cs"];
m10_49 [label="Entry CommandLine.Parsing.IArgumentEnumerator.MoveNext()", span="34-34", cluster="CommandLine.Parsing.IArgumentEnumerator.MoveNext()", file="SpecificationPropertyExtensions.cs"];
m10_55 [label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", span="155-155", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", file="SpecificationPropertyExtensions.cs"];
m10_54 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", span="135-135", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="SpecificationPropertyExtensions.cs"];
m10_48 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="SpecificationPropertyExtensions.cs"];
m10_62 [label="CommandLine.Parsing.OptionGroupParser", span="", file="SpecificationPropertyExtensions.cs"];
m11_46 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs"];
m11_47 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="94-97", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs"];
m11_48 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="101-101", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs"];
m11_49 [label="Assert.Equal(''pre-options'', lines[0])", span="102-102", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs"];
m11_50 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="103-103", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs"];
m11_51 [label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="104-104", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=red, community=0, file="SpecificationPropertyRules.cs"];
m11_52 [label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="105-105", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=red, community=0, file="SpecificationPropertyRules.cs"];
m11_53 [label="Assert.Equal(''post-options'', lines[4])", span="106-106", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs"];
m11_54 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationPropertyRules.cs"];
m11_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="SpecificationPropertyRules.cs"];
m11_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_25 [label="Assert.Equal(''pre-options'', lines[0])", span="58-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_26 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_27 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_28 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_29 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_30 [label="Assert.Equal(''post-options'', lines[5])", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_31 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationPropertyRules.cs"];
m11_62 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_63 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="130-130", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_64 [label="sut.MaximumDisplayWidth = 40", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_65 [label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="132-132", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_66 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_67 [label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_68 [label="lines[3].Should().Be(''                of the verbosity to '')", span="138-138", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_69 [label="lines[4].Should().Be(''                test out the wrapping '')", span="139-139", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_70 [label="lines[5].Should().Be(''                capabilities of the '')", span="140-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_71 [label="lines[6].Should().Be(''                Help Text.'')", span="141-141", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_72 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationPropertyRules.cs"];
m11_77 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_78 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_79 [label="sut.MaximumDisplayWidth = 40", span="151-151", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_80 [label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_81 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_82 [label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_83 [label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_84 [label="lines[4].Should().Be(''                After'')", span="158-158", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_85 [label="lines[5].Should().Be(''  input-file    Before '')", span="159-159", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_86 [label="lines[6].Should().Be(''                012345678901234567890123'')", span="160-160", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_87 [label="lines[7].Should().Be(''                456789 After'')", span="161-161", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_88 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_194 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationPropertyRules.cs"];
m11_169 [label="Entry Unk.True", span="", cluster="Unk.True", file="SpecificationPropertyRules.cs"];
m11_119 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="SpecificationPropertyRules.cs"];
m11_153 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_154 [label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="255-263", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_155 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_156 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_157 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_158 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_159 [label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_160 [label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_161 [label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_162 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_163 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_164 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_165 [label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_166 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_168 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="SpecificationPropertyRules.cs"];
m11_35 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_36 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="72-75", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_37 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="79-79", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_38 [label="Assert.Equal(''pre-options'', lines[0])", span="80-80", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_39 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="81-81", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_40 [label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="82-82", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_41 [label="Assert.Equal(''Triangle'', lines[3])", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_42 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_43 [label="Assert.Equal(''post-options'', lines[5])", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_44 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationPropertyRules.cs"];
m11_123 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs"];
m11_45 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="13-13", cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="SpecificationPropertyRules.cs"];
m11_90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_91 [label="var sut = new HelpText(''Heading Info.'')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_92 [label="sut.MaximumDisplayWidth = 40", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_94 [label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_95 [label="lines[1].Should().Be(''Before '')", span="178-178", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_96 [label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_97 [label="lines[3].Should().Be(''012 After'')", span="180-180", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_98 [label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_99 [label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_100 [label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationPropertyRules.cs"];
m11_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="SpecificationPropertyRules.cs"];
m11_1 [label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="SpecificationPropertyRules.cs"];
m11_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="SpecificationPropertyRules.cs"];
m11_181 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_182 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_183 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="317-324", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_184 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_185 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_186 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_187 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_188 [label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_189 [label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_190 [label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_191 [label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="337-337", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_192 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_131 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="399-399", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="SpecificationPropertyRules.cs"];
m11_152 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="SpecificationPropertyRules.cs"];
m11_127 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="SpecificationPropertyRules.cs"];
m11_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33", cluster="CommandLine.Text.HelpText.HelpText()", file="SpecificationPropertyRules.cs"];
m11_55 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs"];
m11_56 [label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs"];
m11_57 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs"];
m11_58 [label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs"];
m11_59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationPropertyRules.cs"];
m11_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="323-323", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="SpecificationPropertyRules.cs"];
m11_117 [label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="SpecificationPropertyRules.cs"];
m11_129 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="SpecificationPropertyRules.cs"];
m11_61 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="SpecificationPropertyRules.cs"];
m11_125 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs"];
m11_132 [label="Entry lambda expression", span="209-232", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_133 [label="err.Tag", span="211-211", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_135 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="214-214", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_137 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="216-216", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_139 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="218-218", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_141 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="220-220", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_143 [label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="222-222", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_145 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="224-224", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_149 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="228-228", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_134 [label="ErrorType.BadFormatTokenError", span="213-213", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_136 [label="ErrorType.MissingValueOptionError", span="215-215", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_138 [label="ErrorType.UnknownOptionError", span="217-217", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_140 [label="ErrorType.MissingRequiredOptionError", span="219-219", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_142 [label="ErrorType.MutuallyExclusiveSetError", span="221-221", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_144 [label="ErrorType.SequenceOutOfRangeError", span="223-223", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_146 [label="ErrorType.NoVerbSelectedError", span="225-225", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_148 [label="ErrorType.BadVerbSelectedError", span="227-227", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_150 [label="throw new InvalidOperationException();", span="230-230", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_147 [label="return ''ERR no-verb-selected'';", span="226-226", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_151 [label="Exit lambda expression", span="209-232", cluster="lambda expression", file="SpecificationPropertyRules.cs"];
m11_60 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56", cluster="CommandLine.Text.HelpText.HelpText(string)", file="SpecificationPropertyRules.cs"];
m11_120 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs"];
m11_75 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="SpecificationPropertyRules.cs"];
m11_76 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="SpecificationPropertyRules.cs"];
m11_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="427-427", cluster="CommandLine.Text.HelpText.ToString()", file="SpecificationPropertyRules.cs"];
m11_33 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="343-343", cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="SpecificationPropertyRules.cs"];
m11_195 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationPropertyRules.cs"];
m11_102 [label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="SpecificationPropertyRules.cs"];
m11_126 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="SpecificationPropertyRules.cs"];
m11_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="SpecificationPropertyRules.cs"];
m11_89 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="SpecificationPropertyRules.cs"];
m11_122 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="SpecificationPropertyRules.cs"];
m11_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="SpecificationPropertyRules.cs"];
m11_167 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationPropertyRules.cs"];
m11_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="SpecificationPropertyRules.cs"];
m11_124 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="SpecificationPropertyRules.cs"];
m11_21 [label="Entry string.ToNotEmptyLines()", span="9-9", cluster="string.ToNotEmptyLines()", file="SpecificationPropertyRules.cs"];
m11_118 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="SpecificationPropertyRules.cs"];
m11_130 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationPropertyRules.cs"];
m11_121 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="SpecificationPropertyRules.cs"];
m11_32 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="SpecificationPropertyRules.cs"];
m11_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_9 [label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_10 [label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_11 [label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_12 [label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_13 [label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_14 [label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationPropertyRules.cs"];
m11_103 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_104 [label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="192-208", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_105 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="209-232", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="235-235", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_107 [label="var lines = errorsText.ToNotEmptyLines()", span="238-238", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_108 [label="Assert.Equal(''  ERR badtoken'', lines[0])", span="240-240", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_109 [label="Assert.Equal(''  ERR x, switch'', lines[1])", span="241-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_110 [label="Assert.Equal(''  ERR unknown'', lines[2])", span="242-242", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_111 [label="Assert.Equal(''  ERR missing'', lines[3])", span="243-243", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_112 [label="Assert.Equal(''  ERR z'', lines[4])", span="244-244", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_113 [label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="245-245", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_114 [label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_115 [label="Assert.Equal(''  ERR badverb'', lines[7])", span="247-247", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_116 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_170 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_171 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="287-294", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_172 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_173 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_174 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_175 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_176 [label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_177 [label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_178 [label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_179 [label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_180 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationPropertyRules.cs"];
m11_34 [label="Entry string[].TrimStringArray()", span="14-14", cluster="string[].TrimStringArray()", file="SpecificationPropertyRules.cs"];
m11_128 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="SpecificationPropertyRules.cs"];
m11_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="SpecificationPropertyRules.cs"];
m11_74 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="SpecificationPropertyRules.cs"];
m11_73 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="SpecificationPropertyRules.cs"];
m12_0 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs"];
m12_1 [label="return from t in tokens\r\n                   where typeLookup(t.Text).MapMaybeOrDefault(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", span="15-17", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", color=green, community=0, file="Switch.cs"];
m12_2 [label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Switch.cs"];
m12_5 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="Switch.cs"];
m12_6 [label="t.IsName() && info.TargetType == TargetType.Switch", span="16-16", cluster="lambda expression", color=green, community=0, file="Switch.cs"];
m12_7 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="Switch.cs"];
m12_8 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="Switch.cs"];
m12_4 [label="Entry Unk.MapMaybeOrDefault", span="", cluster="Unk.MapMaybeOrDefault", file="Switch.cs"];
m12_3 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Switch.cs"];
m12_9 [label=t, span="", file="Switch.cs"];
m13_34 [label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_36 [label="years.Length == 1", span="164-164", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_37 [label="return years[0].ToString(CultureInfo.InvariantCulture);", span="166-166", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_38 [label="var yearsPart = new StringBuilder(years.Length * 6)", span="169-169", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_40 [label="i < years.Length", span="170-170", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_41 [label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="172-172", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_43 [label="next < years.Length", span="174-174", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_44 [label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="176-176", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_39 [label="var i = 0", span="170-170", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_46 [label="return yearsPart.ToString();", span="180-180", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_42 [label="var next = i + 1", span="173-173", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_45 [label="i++", span="170-170", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_47 [label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162", cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="TypeConverter.cs"];
m13_33 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="TypeConverter.cs"];
m13_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="TypeConverter.cs"];
m13_19 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="TypeConverter.cs"];
m13_32 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="TypeConverter.cs"];
m13_20 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="TypeConverter.cs"];
m13_21 [label="this.attribute = attribute", span="86-86", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="TypeConverter.cs"];
m13_22 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="TypeConverter.cs"];
m13_31 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="TypeConverter.cs"];
m13_4 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_5 [label="string.IsNullOrWhiteSpace(author)", span="62-62", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_7 [label="copyrightYears.Length == 0", span="63-63", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_10 [label="this.isSymbolUpper = isSymbolUpper", span="66-66", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_11 [label="this.author = author", span="67-67", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_12 [label="this.copyrightYears = copyrightYears", span="68-68", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_13 [label="builderSize = 12 + author.Length + (4 * copyrightYears.Length) + ExtraLength", span="69-69", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_6 [label="throw new ArgumentException(''author'');", span="62-62", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_8 [label="throw new ArgumentOutOfRangeException(''copyrightYears'');", span="63-63", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_9 [label="int ExtraLength = 10", span="65-65", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_14 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="TypeConverter.cs"];
m13_0 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="TypeConverter.cs"];
m13_1 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="TypeConverter.cs"];
m13_48 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="TypeConverter.cs"];
m13_26 [label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="138-138", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs"];
m13_27 [label="attribute != null", span="140-140", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs"];
m13_28 [label="return attribute.Copyright;", span="142-142", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs"];
m13_29 [label="return new StringBuilder(builderSize)\r\n                .Append(CopyrightWord)\r\n                .Append(' ')\r\n                .Append(isSymbolUpper ? SymbolUpper : SymbolLower)\r\n                .Append(' ')\r\n                .Append(FormatYears(copyrightYears))\r\n                .Append(' ')\r\n                .Append(author)\r\n                .ToString();", span="145-153", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs"];
m13_30 [label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="138-138", cluster="CommandLine.Text.CopyrightInfo.ToString()", file="TypeConverter.cs"];
m13_23 [label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="TypeConverter.cs"];
m13_24 [label="return info.ToString();", span="131-131", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="TypeConverter.cs"];
m13_25 [label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129", cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="TypeConverter.cs"];
m13_2 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="TypeConverter.cs"];
m13_3 [label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="TypeConverter.cs"];
m13_35 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="TypeConverter.cs"];
m13_17 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="TypeConverter.cs"];
m13_16 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="TypeConverter.cs"];
m13_15 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="TypeConverter.cs"];
m13_49 [label="CommandLine.Text.CopyrightInfo", span="", file="TypeConverter.cs"];
m14_86 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="TypeDescriptor.cs"];
m14_17 [label="Entry System.Type.GetVerbSpecification()", span="27-27", cluster="System.Type.GetVerbSpecification()", file="TypeDescriptor.cs"];
m14_31 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="TypeDescriptor.cs"];
m14_18 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="TypeDescriptor.cs"];
m14_88 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="TypeDescriptor.cs"];
m14_89 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="92-93", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="TypeDescriptor.cs"];
m14_90 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="TypeDescriptor.cs"];
m14_51 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_52 [label="var builder = new StringBuilder()", span="60-60", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_53 [label="spec.TargetType", span="61-61", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_55 [label="builder.Append(FormatWithQuotesIfString(value))", span="64-64", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_57 [label="var sep = spec.SeperatorOrSpace()", span="67-67", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_59 [label="var e = ((IEnumerable)value).GetEnumerator()", span="70-70", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_61 [label="builder.Append(fmtWithQuotesIfStr(e.Current)).Append(sep)", span="72-72", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_62 [label="builder.TrimEndIfMatch(' ')", span="73-73", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_63 [label="return builder.ToString();", span="76-76", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_54 [label="TargetType.Scalar", span="63-63", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_56 [label="TargetType.Sequence", span="66-66", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_58 [label="Func<object, object> fmtWithQuotesIfStr = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="68-69", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_60 [label="e.MoveNext()", span="71-71", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_64 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="TypeDescriptor.cs"];
m14_68 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="TypeDescriptor.cs"];
m14_20 [label="Entry object.IsEmpty()", span="111-111", cluster="object.IsEmpty()", file="TypeDescriptor.cs"];
m14_70 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="TypeDescriptor.cs"];
m14_102 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_103 [label="value == null", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_105 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_107 [label="value is string && ((string)value).Length == 0", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_109 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_104 [label="return true;", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_106 [label="return true;", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_108 [label="return true;", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_110 [label="return true;", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_111 [label="return false;", span="117-117", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_112 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="TypeDescriptor.cs"];
m14_21 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="TypeDescriptor.cs"];
m14_82 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="TypeDescriptor.cs"];
m14_94 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="TypeDescriptor.cs"];
m14_95 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="98-102", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="TypeDescriptor.cs"];
m14_96 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="TypeDescriptor.cs"];
m14_19 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="TypeDescriptor.cs"];
m14_77 [label="Entry T.ToMaybe<T>()", span="105-105", cluster="T.ToMaybe<T>()", file="TypeDescriptor.cs"];
m14_81 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="TypeDescriptor.cs"];
m14_15 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="TypeDescriptor.cs"];
m14_91 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_33 [label="new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) }", span="37-37", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_28 [label="builder.Append(verb.Name).Append(' ')", span="32-32", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_44 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="50-50", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_48 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="52-52", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_32 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_37 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_43 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_47 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_34 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_38 [label="i.Specification.Tag == SpecificationType.Option", span="40-40", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_39 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_41 [label="i.Specification.Tag == SpecificationType.Value", span="45-45", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_42 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_45 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_49 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_72 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="69-69", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_71 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_73 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_79 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="82-82", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_84 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="86-87", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_83 [label="Entry lambda expression", span="86-87", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_78 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_80 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_85 [label="Exit lambda expression", span="86-87", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_92 [label="o.Separator != '\0' ? o.Separator : ' '", span="93-93", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_93 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="TypeDescriptor.cs"];
m14_98 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="TypeDescriptor.cs"];
m14_26 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="TypeDescriptor.cs"];
m14_24 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="TypeDescriptor.cs"];
m14_113 [label="Entry System.Type.GetDefaultValue()", span="119-119", cluster="System.Type.GetDefaultValue()", file="TypeDescriptor.cs"];
m14_50 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="TypeDescriptor.cs"];
m14_46 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="TypeDescriptor.cs"];
m14_22 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="TypeDescriptor.cs"];
m14_87 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="TypeDescriptor.cs"];
m14_25 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="TypeDescriptor.cs"];
m14_67 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="90-90", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="TypeDescriptor.cs"];
m14_30 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="TypeDescriptor.cs"];
m14_97 [label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="105-105", cluster="CommandLine.Core.OptionSpecification.FormatName()", file="TypeDescriptor.cs"];
m14_65 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs"];
m14_74 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="81-82", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs"];
m14_75 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="84-87", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs"];
m14_76 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="TypeDescriptor.cs"];
m14_23 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="TypeDescriptor.cs"];
m14_66 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="TypeDescriptor.cs"];
m14_16 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="TypeDescriptor.cs"];
m14_114 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="TypeDescriptor.cs"];
m14_69 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="TypeDescriptor.cs"];
m14_99 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="TypeDescriptor.cs"];
m14_100 [label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="107-108", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="TypeDescriptor.cs"];
m14_101 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="TypeDescriptor.cs"];
m14_35 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="TypeDescriptor.cs"];
m14_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeDescriptor.cs"];
m14_0 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_1 [label="options == null", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_3 [label="var type = options.GetType()", span="28-28", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_6 [label="var specs =\r\n                from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) })\r\n                where !info.Value.IsEmpty()\r\n                select info", span="34-39", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_2 [label="throw new ArgumentNullException(''options'');", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_4 [label="var builder = new StringBuilder()", span="29-29", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_5 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_9 [label="optSpecs.ForEach(opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="50-50", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_10 [label="builder.TrimEndIfMatch(' ')", span="51-51", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_11 [label="valSpecs.ForEach(val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="52-52", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_12 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="54-55", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_7 [label="var optSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="40-44", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_8 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="45-48", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=red, community=0, file="TypeDescriptor.cs"];
m14_13 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="TypeDescriptor.cs"];
m14_36 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="TypeDescriptor.cs"];
m14_115 [label=builder, span="", file="TypeDescriptor.cs"];
m14_116 [label=T, span="", file="TypeDescriptor.cs"];
m14_117 [label=sep, span="", file="TypeDescriptor.cs"];
m14_118 [label=doubQt, span="", file="TypeDescriptor.cs"];
m15_33 [label="Entry System.Type.GetVerbSpecification()", span="28-28", cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs"];
m15_41 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs"];
m15_118 [label="Entry Unk.doubQt", span="", cluster="Unk.doubQt", file="UnParserExtensions.cs"];
m15_143 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs"];
m15_120 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="186-186", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m15_121 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="188-189", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m15_122 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="186-186", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs"];
m15_82 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="154-154", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_83 [label="var builder = new StringBuilder()", span="156-156", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_84 [label="spec.TargetType", span="157-157", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_86 [label="builder.Append(FormatWithQuotesIfString(value))", span="160-160", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_88 [label="var sep = spec.SeperatorOrSpace()", span="163-163", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_90 [label="var e = ((IEnumerable)value).GetEnumerator()", span="166-166", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_94 [label="return builder.ToString();", span="172-172", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_92 [label="builder.Append(format(e.Current)).Append(sep)", span="168-168", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_93 [label="builder.TrimEndIfMatch(' ')", span="169-169", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_85 [label="TargetType.Scalar", span="159-159", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_87 [label="TargetType.Sequence", span="162-162", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_89 [label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="164-165", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_91 [label="e.MoveNext()", span="167-167", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_95 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="154-154", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs"];
m15_30 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs"];
m15_99 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs"];
m15_36 [label="Entry object.IsEmpty()", span="224-224", cluster="object.IsEmpty()", file="UnParserExtensions.cs"];
m15_131 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="200-200", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m15_133 [label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", span="205-210", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m15_132 [label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && settings.NameStyleFormat == NameStyleFormat.PreferLongName", span="202-204", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m15_134 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="200-200", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m15_101 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs"];
m15_145 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="224-224", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_148 [label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="227-227", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_150 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="228-228", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_146 [label="value == null", span="226-226", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_149 [label="return true;", span="227-227", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_151 [label="return true;", span="228-228", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_152 [label="value is string && ((string)value).Length == 0", span="229-229", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_154 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="230-230", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_147 [label="return true;", span="226-226", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_153 [label="return true;", span="229-229", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_155 [label="return true;", span="230-230", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_156 [label="return false;", span="231-231", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_157 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="224-224", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs"];
m15_38 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="UnParserExtensions.cs"];
m15_136 [label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34", cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs"];
m15_47 [label="Entry Unk.TrimEndIfMatchWhen", span="", cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs"];
m15_114 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="UnParserExtensions.cs"];
m15_35 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs"];
m15_67 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="UnParserExtensions.cs"];
m15_109 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs"];
m15_113 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="UnParserExtensions.cs"];
m15_31 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="UnParserExtensions.cs"];
m15_110 [label="Entry lambda expression", span="177-178", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_55 [label="Entry lambda expression", span="109-110", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_56 [label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="109-110", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_51 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_61 [label="Entry lambda expression", span="115-115", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_57 [label="Exit lambda expression", span="109-110", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_68 [label="Entry lambda expression", span="132-132", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_75 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="144-144", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_79 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="148-148", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_52 [label="builder.Append(verb.Name).Append(' ')", span="104-104", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_53 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_65 [label="!shortSwitches.Contains(info)", span="129-129", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_63 [label="Exit lambda expression", span="115-115", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_62 [label="i.Specification.Tag == SpecificationType.Option", span="115-115", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_64 [label="Entry lambda expression", span="129-129", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_71 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_70 [label="Exit lambda expression", span="132-132", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_69 [label="i.Specification.Tag == SpecificationType.Value", span="132-132", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_78 [label="Entry lambda expression", span="148-148", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_74 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_76 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_80 [label="Exit lambda expression", span="148-148", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_104 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="165-165", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_115 [label="Entry lambda expression", span="182-183", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_123 [label="Entry lambda expression", span="189-189", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_66 [label="Exit lambda expression", span="129-129", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_73 [label="Exit lambda expression", span="139-139", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_72 [label="((OptionSpecification)info.Specification).ShortName", span="139-139", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_103 [label="Entry lambda expression", span="164-165", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_105 [label="Exit lambda expression", span="164-165", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_116 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="182-183", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_111 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="178-178", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_117 [label="Exit lambda expression", span="182-183", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_125 [label="Exit lambda expression", span="189-189", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_124 [label="o.Separator != '\0' ? o.Separator : ' '", span="189-189", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_112 [label="Exit lambda expression", span="177-178", cluster="lambda expression", file="UnParserExtensions.cs"];
m15_130 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs"];
m15_50 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs"];
m15_102 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs"];
m15_142 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs"];
m15_46 [label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101", cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs"];
m15_54 [label="Entry Unk.Append", span="", cluster="Unk.Append", file="UnParserExtensions.cs"];
m15_42 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="UnParserExtensions.cs"];
m15_158 [label="Entry System.Type.GetDefaultValue()", span="131-131", cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs"];
m15_81 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="UnParserExtensions.cs"];
m15_37 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="UnParserExtensions.cs"];
m15_77 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="UnParserExtensions.cs"];
m15_39 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="UnParserExtensions.cs"];
m15_144 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs"];
m15_119 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs"];
m15_60 [label="Entry object.NormalizeValue()", span="213-213", cluster="object.NormalizeValue()", file="UnParserExtensions.cs"];
m15_34 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="UnParserExtensions.cs"];
m15_49 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs"];
m15_129 [label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="200-200", cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m15_45 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs"];
m15_98 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="186-186", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs"];
m15_96 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="175-175", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m15_107 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="180-183", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m15_106 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="177-178", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m15_108 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="175-175", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs"];
m15_48 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="UnParserExtensions.cs"];
m15_97 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs"];
m15_44 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="UnParserExtensions.cs"];
m15_135 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs"];
m15_32 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs"];
m15_29 [label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="30-30", cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs"];
m15_159 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="UnParserExtensions.cs"];
m15_100 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs"];
m15_7 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="92-92", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_16 [label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="106-113", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="UnParserExtensions.cs"];
m15_13 [label="var type = options.GetType()", span="100-100", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_15 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="103-104", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_17 [label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="115-119", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_20 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="132-135", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_8 [label="options == null", span="94-94", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_11 [label="configuration(settings)", span="97-97", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_12 [label="settings.Consumed = true", span="98-98", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_14 [label="var builder = new StringBuilder()", span="101-101", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_18 [label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="121-126", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_19 [label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="128-130", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_21 [label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="137-140", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_24 [label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="145-146", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_25 [label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="147-148", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_26 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="150-151", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_9 [label="throw new ArgumentNullException(''options'');", span="94-94", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_10 [label="var settings = new UnParserSettings()", span="96-96", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_22 [label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="141-142", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_23 [label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="143-144", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_27 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="92-92", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs"];
m15_126 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="192-192", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m15_127 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="194-197", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", color=green, community=0, file="UnParserExtensions.cs"];
m15_128 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="192-192", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs"];
m15_43 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="UnParserExtensions.cs"];
m15_58 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs"];
m15_28 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs"];
m15_59 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs"];
m15_137 [label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="213-213", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m15_138 [label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="215-217", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m15_139 [label="return FSharpOptionHelper.ValueOf(value);", span="219-219", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m15_140 [label="return value;", span="221-221", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m15_141 [label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="213-213", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs"];
m15_161 [label=T, span="", file="UnParserExtensions.cs"];
m15_160 [label=builder, span="", file="UnParserExtensions.cs"];
m15_163 [label=settings, span="", file="UnParserExtensions.cs"];
m15_162 [label=shortSwitches, span="", file="UnParserExtensions.cs"];
m15_164 [label=sep, span="", file="UnParserExtensions.cs"];
m15_165 [label=doubQt, span="", file="UnParserExtensions.cs"];
m16_0 [label="Entry CommandLine.Tests.MyClass.MyClass()", span="5-5", cluster="CommandLine.Tests.MyClass.MyClass()", file="ValueMapper.cs"];
m16_1 [label="Exit CommandLine.Tests.MyClass.MyClass()", span="5-5", cluster="CommandLine.Tests.MyClass.MyClass()", file="ValueMapper.cs"];
n14 -> n7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n14 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n15 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>"];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> n7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n0 -> n8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=2, style=dotted, color=red];
n1 -> n4  [key=2, style=dotted, color=red];
n1 -> n5  [key=2, style=dotted, color=red];
n1 -> n6  [key=1, style=dashed, color=red, label="lambda expression"];
n7 -> n8  [key=0, style=solid];
n7 -> n10  [key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=2, style=dotted];
n8 -> n12  [key=2, style=dotted];
n8 -> n13  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n9 -> n6  [key=0, style=bold, color=blue];
m0_34 -> m0_36  [key=0, style=solid];
m0_34 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_34 -> m0_38  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_34 -> m0_40  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_34 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_34 -> m0_43  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_34 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_38  [key=0, style=solid];
m0_37 -> m0_47  [key=0, style=solid];
m0_37 -> m0_48  [key=2, style=dotted];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_31  [key=2, style=dotted];
m0_38 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m0_38 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m0_38 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_46  [key=0, style=solid];
m0_40 -> m0_40  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_48  [key=2, style=dotted];
m0_41 -> m0_32  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_32  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_39 -> m0_42  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_39 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_39 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_35  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=next];
m0_45 -> m0_40  [key=0, style=solid];
m0_45 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m0_47 -> m0_34  [key=0, style=bold, color=blue];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_18  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_20  [key=0, style=bold, color=blue];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m0_4 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=bool];
m0_4 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_4 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m0_4 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_7  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_6 -> m0_14  [key=0, style=solid];
m0_6 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_14  [key=0, style=solid];
m0_8 -> m0_17  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label=ExtraLength];
m0_9 -> m0_9  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
m0_14 -> m0_4  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_26 -> m0_27  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_29  [key=0, style=solid];
m0_28 -> m0_30  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_29 -> m0_32  [key=2, style=dotted];
m0_29 -> m0_33  [key=2, style=dotted];
m0_29 -> m0_34  [key=2, style=dotted];
m0_29 -> m0_35  [key=2, style=dotted];
m0_30 -> m0_26  [key=0, style=bold, color=blue];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [key=3, color=darkorchid, style=bold, label="method methodReturn string op_Implicit"];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_25 -> m0_23  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=bold, color=blue];
m0_49 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_49 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_49 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_49 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_49 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_49 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_49 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m0_49 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m2_102 -> m2_118  [key=0, style=solid];
m2_102 -> m2_120  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_102 -> m2_122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_102 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_102 -> m2_124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_102 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_102 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_102 -> m2_76  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m2_102 -> m2_85  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m2_102 -> m2_83  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
m2_102 -> m2_86  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
m2_102 -> m2_102  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
m2_102 -> m2_72  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_122  [key=0, style=solid];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_124  [key=0, style=solid];
m2_122 -> m2_48  [key=2, style=dotted];
m2_122 -> m2_129  [key=2, style=dotted];
m2_123 -> m2_128  [key=0, style=solid];
m2_124 -> m2_125  [key=0, style=solid];
m2_124 -> m2_130  [key=2, style=dotted];
m2_124 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_126 -> m2_128  [key=0, style=solid];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_56  [key=2, style=dotted];
m2_127 -> m2_131  [key=2, style=dotted];
m2_127 -> m2_57  [key=2, style=dotted];
m2_127 -> m2_72  [key=2, style=dotted];
m2_119 -> m2_128  [key=0, style=solid];
m2_119 -> m2_23  [key=2, style=dotted];
m2_121 -> m2_128  [key=0, style=solid];
m2_121 -> m2_23  [key=2, style=dotted];
m2_125 -> m2_126  [key=0, style=solid];
m2_125 -> m2_127  [key=0, style=solid];
m2_125 -> m2_129  [key=2, style=dotted];
m2_128 -> m2_102  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [key=0, style=bold, color=blue];
m2_61 -> m2_174  [key=0, style=solid];
m2_61 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_61 -> m2_179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
m2_174 -> m2_175  [key=0, style=solid];
m2_174 -> m2_176  [key=0, style=solid];
m2_176 -> m2_177  [key=0, style=solid];
m2_176 -> m2_178  [key=2, style=dotted];
m2_176 -> m2_56  [key=2, style=dotted];
m2_176 -> m2_179  [key=2, style=dotted];
m2_175 -> m2_177  [key=0, style=solid];
m2_175 -> m2_23  [key=2, style=dotted];
m2_177 -> m2_61  [key=0, style=bold, color=blue];
m2_135 -> m2_267  [key=0, style=solid];
m2_267 -> m2_268  [key=0, style=solid];
m2_267 -> m2_267  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
m2_268 -> m2_269  [key=0, style=solid];
m2_268 -> m2_24  [key=2, style=dotted];
m2_268 -> m2_270  [key=2, style=dotted];
m2_268 -> m2_271  [key=2, style=dotted];
m2_268 -> m2_222  [key=2, style=dotted];
m2_268 -> m2_272  [key=2, style=dotted];
m2_268 -> m2_273  [key=2, style=dotted];
m2_268 -> m2_223  [key=2, style=dotted];
m2_268 -> m2_274  [key=2, style=dotted];
m2_269 -> m2_135  [key=0, style=bold, color=blue];
m2_139 -> m2_140  [key=0, style=solid];
m2_139 -> m2_142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine"];
m2_139 -> m2_151  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_139 -> m2_168  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_142  [key=2, style=dotted];
m2_141 -> m2_139  [key=0, style=bold, color=blue];
m2_426 -> m2_429  [key=0, style=solid];
m2_426 -> m2_430  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_426 -> m2_431  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_426 -> m2_433  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_426 -> m2_434  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_426 -> m2_441  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_426 -> m2_419  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification spec"];
m2_429 -> m2_430  [key=0, style=solid];
m2_429 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_429 -> m2_441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_429 -> m2_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_429 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_429 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m2_429 -> m2_432  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m2_430 -> m2_431  [key=0, style=solid];
m2_430 -> m2_435  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m2_430 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m2_431 -> m2_432  [key=0, style=solid];
m2_431 -> m2_440  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m2_431 -> m2_445  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m2_433 -> m2_434  [key=0, style=solid];
m2_433 -> m2_435  [key=0, style=solid];
m2_434 -> m2_435  [key=0, style=solid];
m2_434 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m2_434 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m2_441 -> m2_442  [key=0, style=solid];
m2_441 -> m2_441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_441 -> m2_443  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_441 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_436 -> m2_437  [key=0, style=solid];
m2_436 -> m2_436  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_436 -> m2_438  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_436 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_446 -> m2_447  [key=0, style=solid];
m2_446 -> m2_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_447 -> m2_448  [key=0, style=solid];
m2_435 -> m2_436  [key=0, style=solid];
m2_435 -> m2_440  [key=0, style=solid];
m2_445 -> m2_446  [key=0, style=solid];
m2_445 -> m2_447  [key=0, style=solid];
m2_432 -> m2_433  [key=0, style=solid];
m2_432 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m2_432 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m2_432 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
m2_440 -> m2_441  [key=0, style=solid];
m2_440 -> m2_445  [key=0, style=solid];
m2_439 -> m2_440  [key=0, style=solid];
m2_439 -> m2_439  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_439 -> m2_441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_439 -> m2_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_439 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_444 -> m2_445  [key=0, style=solid];
m2_444 -> m2_444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_444 -> m2_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_444 -> m2_447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_437 -> m2_438  [key=0, style=solid];
m2_437 -> m2_439  [key=0, style=solid];
m2_438 -> m2_439  [key=0, style=solid];
m2_438 -> m2_438  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_442 -> m2_443  [key=0, style=solid];
m2_442 -> m2_444  [key=0, style=solid];
m2_443 -> m2_444  [key=0, style=solid];
m2_443 -> m2_443  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_448 -> m2_426  [key=0, style=bold, color=blue];
m2_325 -> m2_326  [key=0, style=solid];
m2_325 -> m2_327  [key=2, style=dotted];
m2_325 -> m2_328  [key=2, style=dotted];
m2_325 -> m2_306  [key=2, style=dotted];
m2_325 -> m2_307  [key=2, style=dotted];
m2_325 -> m2_329  [key=2, style=dotted];
m2_325 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
m2_187 -> m2_325  [key=0, style=solid];
m2_187 -> m2_60  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
m2_187 -> m2_193  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
m2_326 -> m2_187  [key=0, style=bold, color=blue];
m2_200 -> m2_201  [key=0, style=solid];
m2_201 -> m2_202  [key=0, style=solid];
m2_201 -> m2_130  [key=2, style=dotted];
m2_201 -> m2_203  [key=2, style=dotted];
m2_202 -> m2_200  [key=0, style=bold, color=blue];
m2_130 -> m2_204  [key=0, style=solid];
m2_130 -> m2_208  [key=0, style=bold, color=crimson];
m2_130 -> m2_211  [key=0, style=bold, color=crimson];
m2_130 -> m2_216  [key=0, style=bold, color=crimson];
m2_130 -> m2_206  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_130 -> m2_210  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m2_130 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
m2_204 -> m2_205  [key=0, style=solid];
m2_204 -> m2_206  [key=0, style=solid];
m2_208 -> m2_209  [key=0, style=solid];
m2_211 -> m2_209  [key=0, style=solid];
m2_211 -> m2_223  [key=2, style=dotted];
m2_216 -> m2_215  [key=0, style=solid];
m2_206 -> m2_207  [key=0, style=solid];
m2_206 -> m2_48  [key=2, style=dotted];
m2_206 -> m2_209  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m2_206 -> m2_212  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m2_210 -> m2_211  [key=0, style=solid];
m2_210 -> m2_219  [key=2, style=dotted];
m2_210 -> m2_220  [key=2, style=dotted];
m2_210 -> m2_221  [key=2, style=dotted];
m2_210 -> m2_222  [key=2, style=dotted];
m2_212 -> m2_213  [key=0, style=solid];
m2_212 -> m2_89  [key=2, style=dotted];
m2_212 -> m2_50  [key=2, style=dotted];
m2_212 -> m2_214  [key=1, style=dashed, color=darkseagreen4, label=mutuallyErrs];
m2_205 -> m2_217  [key=0, style=solid];
m2_205 -> m2_23  [key=2, style=dotted];
m2_207 -> m2_208  [key=0, style=solid];
m2_207 -> m2_209  [key=0, style=solid];
m2_207 -> m2_129  [key=2, style=dotted];
m2_209 -> m2_210  [key=0, style=solid];
m2_209 -> m2_212  [key=0, style=solid];
m2_209 -> m2_218  [key=2, style=dotted];
m2_209 -> m2_224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_213 -> m2_214  [key=0, style=solid];
m2_213 -> m2_217  [key=0, style=solid];
m2_214 -> m2_215  [key=0, style=solid];
m2_214 -> m2_162  [key=2, style=dotted];
m2_215 -> m2_216  [key=0, style=solid];
m2_215 -> m2_217  [key=0, style=solid];
m2_217 -> m2_130  [key=0, style=bold, color=blue];
m2_340 -> m2_348  [key=0, style=solid];
m2_340 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_351  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_340 -> m2_352  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_340 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_340 -> m2_354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_340 -> m2_355  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_340 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_340 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_369  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_370  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_373  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_374  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_340 -> m2_330  [key=3, color=darkorchid, style=bold, label="Parameter variable int maxLength"];
m2_340 -> m2_333  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.Specification specification"];
m2_340 -> m2_332  [key=3, color=darkorchid, style=bold, label="Parameter variable int widthOfHelpText"];
m2_348 -> m2_349  [key=0, style=solid];
m2_348 -> m2_222  [key=2, style=dotted];
m2_349 -> m2_350  [key=0, style=solid];
m2_349 -> m2_24  [key=2, style=dotted];
m2_349 -> m2_378  [key=2, style=dotted];
m2_349 -> m2_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_349 -> m2_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_350 -> m2_351  [key=0, style=solid];
m2_350 -> m2_223  [key=2, style=dotted];
m2_350 -> m2_379  [key=2, style=dotted];
m2_350 -> m2_222  [key=2, style=dotted];
m2_351 -> m2_352  [key=0, style=solid];
m2_351 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_351 -> m2_354  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_352 -> m2_353  [key=0, style=solid];
m2_352 -> m2_354  [key=0, style=solid];
m2_352 -> m2_49  [key=2, style=dotted];
m2_353 -> m2_354  [key=0, style=solid];
m2_353 -> m2_203  [key=2, style=dotted];
m2_353 -> m2_353  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_354 -> m2_355  [key=0, style=solid];
m2_354 -> m2_52  [key=2, style=dotted];
m2_354 -> m2_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_354 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_354 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_354 -> m2_357  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_354 -> m2_359  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_354 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_354 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_355 -> m2_356  [key=0, style=solid];
m2_355 -> m2_357  [key=0, style=solid];
m2_356 -> m2_357  [key=0, style=solid];
m2_356 -> m2_380  [key=2, style=dotted];
m2_356 -> m2_356  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_356 -> m2_359  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_356 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_356 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_362 -> m2_363  [key=0, style=solid];
m2_362 -> m2_368  [key=0, style=solid];
m2_365 -> m2_366  [key=0, style=solid];
m2_365 -> m2_371  [key=0, style=solid];
m2_368 -> m2_369  [key=0, style=solid];
m2_368 -> m2_372  [key=0, style=solid];
m2_369 -> m2_370  [key=0, style=solid];
m2_369 -> m2_297  [key=2, style=dotted];
m2_369 -> m2_222  [key=2, style=dotted];
m2_370 -> m2_372  [key=0, style=solid];
m2_373 -> m2_374  [key=0, style=solid];
m2_373 -> m2_382  [key=2, style=dotted];
m2_373 -> m2_273  [key=2, style=dotted];
m2_374 -> m2_357  [key=0, style=solid];
m2_374 -> m2_375  [key=0, style=solid];
m2_357 -> m2_358  [key=0, style=solid];
m2_357 -> m2_375  [key=0, style=solid];
m2_357 -> m2_272  [key=2, style=dotted];
m2_359 -> m2_360  [key=0, style=solid];
m2_359 -> m2_296  [key=2, style=dotted];
m2_359 -> m2_361  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_359 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_359 -> m2_363  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_359 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_359 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_359 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_359 -> m2_369  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_372 -> m2_373  [key=0, style=solid];
m2_372 -> m2_298  [key=2, style=dotted];
m2_372 -> m2_299  [key=2, style=dotted];
m2_372 -> m2_381  [key=2, style=dotted];
m2_372 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_372 -> m2_374  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_372 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_375 -> m2_376  [key=0, style=solid];
m2_375 -> m2_222  [key=2, style=dotted];
m2_375 -> m2_273  [key=2, style=dotted];
m2_358 -> m2_359  [key=0, style=solid];
m2_358 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_358 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_358 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_358 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_358 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m2_358 -> m2_340  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m2_364 -> m2_365  [key=0, style=solid];
m2_364 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_364 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_364 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_360 -> m2_361  [key=0, style=solid];
m2_360 -> m2_362  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_360 -> m2_363  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_360 -> m2_364  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_360 -> m2_365  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_360 -> m2_368  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_360 -> m2_369  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_360 -> m2_371  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_360 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_361 -> m2_362  [key=0, style=solid];
m2_361 -> m2_372  [key=0, style=solid];
m2_363 -> m2_364  [key=0, style=solid];
m2_363 -> m2_222  [key=2, style=dotted];
m2_371 -> m2_361  [key=0, style=solid];
m2_371 -> m2_371  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_367 -> m2_371  [key=0, style=solid];
m2_367 -> m2_367  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_367 -> m2_372  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_366 -> m2_367  [key=0, style=solid];
m2_366 -> m2_222  [key=2, style=dotted];
m2_376 -> m2_377  [key=0, style=solid];
m2_377 -> m2_340  [key=0, style=bold, color=blue];
m2_344 -> m2_307  [key=0, style=bold, color=blue];
m2_307 -> m2_343  [key=0, style=solid];
m2_343 -> m2_344  [key=0, style=solid];
m2_343 -> m2_50  [key=2, style=dotted];
m2_343 -> m2_328  [key=2, style=dotted];
m2_403 -> m2_10  [key=3, color=darkorchid, style=bold, label="Field variable string copyright"];
m2_422 -> m2_423  [key=0, style=solid];
m2_422 -> m2_424  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_63 -> m2_64  [key=0, style=solid];
m2_63 -> m2_65  [key=2, style=dotted];
m2_67 -> m2_68  [key=0, style=solid];
m2_67 -> m2_65  [key=2, style=dotted];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_62 -> m2_63  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_69 -> m2_70  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_64 -> m2_62  [key=0, style=bold, color=blue];
m2_68 -> m2_66  [key=0, style=bold, color=blue];
m2_71 -> m2_69  [key=0, style=bold, color=blue];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_73  [key=0, style=bold, color=blue];
m2_100 -> m2_101  [key=0, style=solid];
m2_100 -> m2_102  [key=2, style=dotted];
m2_113 -> m2_114  [key=0, style=solid];
m2_113 -> m2_102  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_96 -> m2_97  [key=0, style=solid];
m2_107 -> m2_108  [key=0, style=solid];
m2_107 -> m2_102  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_103 -> m2_104  [key=0, style=solid];
m2_106 -> m2_107  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_112 -> m2_113  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_95 -> m2_93  [key=0, style=bold, color=blue];
m2_97 -> m2_98  [key=0, style=solid];
m2_98 -> m2_96  [key=0, style=bold, color=blue];
m2_101 -> m2_99  [key=0, style=bold, color=blue];
m2_104 -> m2_105  [key=0, style=solid];
m2_105 -> m2_103  [key=0, style=bold, color=blue];
m2_108 -> m2_106  [key=0, style=bold, color=blue];
m2_110 -> m2_111  [key=0, style=solid];
m2_111 -> m2_109  [key=0, style=bold, color=blue];
m2_114 -> m2_112  [key=0, style=bold, color=blue];
m2_116 -> m2_117  [key=0, style=solid];
m2_117 -> m2_115  [key=0, style=bold, color=blue];
m2_147 -> m2_148  [key=0, style=solid];
m2_148 -> m2_149  [key=0, style=solid];
m2_148 -> m2_57  [key=2, style=dotted];
m2_149 -> m2_147  [key=0, style=bold, color=blue];
m2_154 -> m2_155  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_139  [key=2, style=dotted];
m2_156 -> m2_154  [key=0, style=bold, color=blue];
m2_163 -> m2_164  [key=0, style=solid];
m2_164 -> m2_165  [key=0, style=solid];
m2_164 -> m2_57  [key=2, style=dotted];
m2_165 -> m2_163  [key=0, style=bold, color=blue];
m2_171 -> m2_172  [key=0, style=solid];
m2_172 -> m2_173  [key=0, style=solid];
m2_172 -> m2_139  [key=2, style=dotted];
m2_173 -> m2_171  [key=0, style=bold, color=blue];
m2_224 -> m2_225  [key=0, style=solid];
m2_225 -> m2_226  [key=0, style=solid];
m2_226 -> m2_224  [key=0, style=bold, color=blue];
m2_231 -> m2_232  [key=0, style=solid];
m2_232 -> m2_233  [key=0, style=solid];
m2_233 -> m2_231  [key=0, style=bold, color=blue];
m2_263 -> m2_264  [key=0, style=solid];
m2_264 -> m2_265  [key=0, style=solid];
m2_265 -> m2_266  [key=0, style=solid];
m2_262 -> m2_263  [key=0, style=solid];
m2_262 -> m2_264  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m2_262 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m2_266 -> m2_262  [key=0, style=bold, color=blue];
m2_310 -> m2_311  [key=0, style=solid];
m2_311 -> m2_312  [key=0, style=solid];
m2_312 -> m2_310  [key=0, style=bold, color=blue];
m2_317 -> m2_318  [key=0, style=solid];
m2_317 -> m2_319  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
m2_318 -> m2_319  [key=0, style=solid];
m2_318 -> m2_320  [key=1, style=dashed, color=darkseagreen4, label=prop];
m2_319 -> m2_320  [key=0, style=solid];
m2_319 -> m2_321  [key=1, style=dashed, color=darkseagreen4, label=attr];
m2_320 -> m2_321  [key=0, style=solid];
m2_320 -> m2_323  [key=2, style=dotted];
m2_321 -> m2_322  [key=0, style=solid];
m2_321 -> m2_324  [key=2, style=dotted];
m2_322 -> m2_317  [key=0, style=bold, color=blue];
m2_338 -> m2_339  [key=0, style=solid];
m2_338 -> m2_340  [key=2, style=dotted];
m2_337 -> m2_338  [key=0, style=solid];
m2_339 -> m2_337  [key=0, style=bold, color=blue];
m2_384 -> m2_385  [key=0, style=solid];
m2_384 -> m2_386  [key=2, style=dotted];
m2_384 -> m2_222  [key=2, style=dotted];
m2_388 -> m2_389  [key=0, style=solid];
m2_388 -> m2_390  [key=2, style=dotted];
m2_388 -> m2_222  [key=2, style=dotted];
m2_383 -> m2_384  [key=0, style=solid];
m2_387 -> m2_388  [key=0, style=solid];
m2_391 -> m2_392  [key=0, style=solid];
m2_392 -> m2_393  [key=0, style=solid];
m2_392 -> m2_394  [key=2, style=dotted];
m2_392 -> m2_380  [key=2, style=dotted];
m2_392 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_385 -> m2_383  [key=0, style=bold, color=blue];
m2_389 -> m2_387  [key=0, style=bold, color=blue];
m2_393 -> m2_391  [key=0, style=bold, color=blue];
m2_399 -> m2_400  [key=0, style=solid];
m2_399 -> m2_401  [key=2, style=dotted];
m2_399 -> m2_402  [key=2, style=dotted];
m2_399 -> m2_403  [key=2, style=dotted];
m2_399 -> m2_273  [key=2, style=dotted];
m2_405 -> m2_406  [key=0, style=solid];
m2_405 -> m2_273  [key=2, style=dotted];
m2_405 -> m2_402  [key=2, style=dotted];
m2_405 -> m2_403  [key=2, style=dotted];
m2_398 -> m2_399  [key=0, style=solid];
m2_404 -> m2_405  [key=0, style=solid];
m2_400 -> m2_398  [key=0, style=bold, color=blue];
m2_406 -> m2_404  [key=0, style=bold, color=blue];
m2_410 -> m2_411  [key=0, style=solid];
m2_410 -> m2_412  [key=2, style=dotted];
m2_414 -> m2_415  [key=0, style=solid];
m2_414 -> m2_402  [key=2, style=dotted];
m2_409 -> m2_410  [key=0, style=solid];
m2_413 -> m2_414  [key=0, style=solid];
m2_411 -> m2_409  [key=0, style=bold, color=blue];
m2_415 -> m2_413  [key=0, style=bold, color=blue];
m2_423 -> m2_424  [key=0, style=solid];
m2_423 -> m2_426  [key=2, style=dotted];
m2_423 -> m2_427  [key=2, style=dotted];
m2_424 -> m2_425  [key=0, style=solid];
m2_424 -> m2_428  [key=2, style=dotted];
m2_425 -> m2_422  [key=0, style=bold, color=blue];
m2_386 -> m2_395  [key=0, style=solid];
m2_386 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_386 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_386 -> m2_340  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
m2_395 -> m2_396  [key=0, style=solid];
m2_395 -> m2_24  [key=2, style=dotted];
m2_395 -> m2_397  [key=2, style=dotted];
m2_395 -> m2_223  [key=2, style=dotted];
m2_395 -> m2_398  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_395 -> m2_404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_396 -> m2_386  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [key=0, style=bold, color=blue];
m2_473 -> m2_473  [key=3, color=darkorchid, style=bold, label="Field variable int BuilderCapacity"];
m2_76 -> m2_77  [key=0, style=solid];
m2_76 -> m2_79  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_76 -> m2_83  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_76 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_76 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_76 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_76 -> m2_57  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
m2_76 -> m2_25  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_79  [key=0, style=solid];
m2_79 -> m2_80  [key=0, style=solid];
m2_79 -> m2_82  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_79 -> m2_84  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_83 -> m2_87  [key=0, style=solid];
m2_83 -> m2_25  [key=2, style=dotted];
m2_83 -> m2_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_83 -> m2_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_86 -> m2_87  [key=0, style=solid];
m2_86 -> m2_25  [key=2, style=dotted];
m2_86 -> m2_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_86 -> m2_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_86 -> m2_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_86 -> m2_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_78 -> m2_87  [key=0, style=solid];
m2_78 -> m2_88  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=0, style=solid];
m2_80 -> n11  [key=2, style=dotted];
m2_80 -> m2_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_84  [key=0, style=solid];
m2_82 -> n11  [key=2, style=dotted];
m2_82 -> m2_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_89  [key=2, style=dotted];
m2_84 -> m2_90  [key=2, style=dotted];
m2_84 -> m2_86  [key=1, style=dashed, color=darkseagreen4, label=err];
m2_81 -> m2_87  [key=0, style=solid];
m2_81 -> m2_4  [key=2, style=dotted];
m2_81 -> m2_57  [key=2, style=dotted];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_91  [key=2, style=dotted];
m2_85 -> m2_92  [key=2, style=dotted];
m2_85 -> m2_47  [key=2, style=dotted];
m2_85 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=pr];
m2_87 -> m2_76  [key=0, style=bold, color=blue];
m2_166 -> m2_167  [key=0, style=solid];
m2_167 -> m2_168  [key=0, style=solid];
m2_167 -> m2_162  [key=2, style=dotted];
m2_168 -> m2_169  [key=0, style=solid];
m2_168 -> m2_146  [key=2, style=dotted];
m2_168 -> m2_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_169 -> m2_170  [key=0, style=solid];
m2_170 -> m2_166  [key=0, style=bold, color=blue];
m2_60 -> m2_180  [key=0, style=solid];
m2_60 -> m2_182  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m2_60 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m2_60 -> m2_179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
m2_180 -> m2_181  [key=0, style=solid];
m2_180 -> m2_182  [key=0, style=solid];
m2_182 -> m2_183  [key=0, style=solid];
m2_182 -> m2_184  [key=0, style=solid];
m2_184 -> m2_185  [key=0, style=solid];
m2_184 -> m2_187  [key=2, style=dotted];
m2_184 -> m2_56  [key=2, style=dotted];
m2_184 -> m2_179  [key=2, style=dotted];
m2_181 -> m2_185  [key=0, style=solid];
m2_181 -> m2_23  [key=2, style=dotted];
m2_183 -> m2_185  [key=0, style=solid];
m2_183 -> m2_186  [key=2, style=dotted];
m2_185 -> m2_60  [key=0, style=bold, color=blue];
m2_253 -> m2_313  [key=0, style=solid];
m2_313 -> m2_314  [key=0, style=solid];
m2_313 -> m2_315  [key=2, style=dotted];
m2_313 -> m2_316  [key=2, style=dotted];
m2_313 -> m2_317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_314 -> m2_253  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_8  [key=0, style=bold, color=blue];
m2_227 -> m2_228  [key=0, style=solid];
m2_227 -> m2_230  [key=3, color=darkorchid, style=bold, label="method methodReturn string RenderUsageText"];
m2_228 -> m2_229  [key=0, style=solid];
m2_228 -> m2_230  [key=2, style=dotted];
m2_228 -> m2_231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_229 -> m2_227  [key=0, style=bold, color=blue];
m2_394 -> m2_461  [key=0, style=solid];
m2_394 -> m2_462  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_394 -> m2_463  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_394 -> m2_464  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_394 -> m2_465  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_394 -> m2_467  [key=1, style=dashed, color=darkseagreen4, label=T];
m2_394 -> m2_354  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
m2_461 -> m2_462  [key=0, style=solid];
m2_461 -> m2_463  [key=0, style=solid];
m2_462 -> m2_472  [key=0, style=solid];
m2_462 -> m2_473  [key=2, style=dotted];
m2_462 -> m2_474  [key=2, style=dotted];
m2_463 -> m2_464  [key=0, style=solid];
m2_463 -> m2_465  [key=0, style=solid];
m2_464 -> m2_472  [key=0, style=solid];
m2_464 -> m2_473  [key=2, style=dotted];
m2_465 -> m2_466  [key=0, style=solid];
m2_465 -> m2_469  [key=1, style=dashed, color=darkseagreen4, label=asEnumerable];
m2_467 -> m2_472  [key=0, style=solid];
m2_467 -> m2_473  [key=2, style=dotted];
m2_466 -> m2_467  [key=0, style=solid];
m2_466 -> m2_468  [key=0, style=solid];
m2_469 -> m2_470  [key=0, style=solid];
m2_469 -> m2_471  [key=0, style=solid];
m2_468 -> m2_469  [key=0, style=solid];
m2_468 -> m2_475  [key=2, style=dotted];
m2_468 -> m2_470  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_468 -> m2_471  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_470 -> m2_469  [key=0, style=solid];
m2_470 -> m2_473  [key=2, style=dotted];
m2_470 -> m2_222  [key=2, style=dotted];
m2_471 -> m2_472  [key=0, style=solid];
m2_471 -> m2_476  [key=2, style=dotted];
m2_472 -> m2_394  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_25 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_25 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
m2_25 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_25 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_25 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_25 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_0  [key=2, style=dotted];
m2_26 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_26 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_32  [key=0, style=solid];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_50  [key=2, style=dotted];
m2_31 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_43  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_44  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_31 -> m2_45  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_34 -> m2_35  [key=0, style=solid];
m2_34 -> m2_53  [key=2, style=dotted];
m2_34 -> m2_54  [key=2, style=dotted];
m2_34 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label=usageLines];
m2_41 -> m2_42  [key=0, style=solid];
m2_41 -> m2_44  [key=0, style=solid];
m2_41 -> m2_49  [key=2, style=dotted];
m2_41 -> n11  [key=2, style=dotted];
m2_41 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_43 -> m2_45  [key=0, style=solid];
m2_43 -> m2_59  [key=2, style=dotted];
m2_43 -> m2_60  [key=2, style=dotted];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_61  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_47  [key=2, style=dotted];
m2_27 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label=errors];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_51  [key=2, style=dotted];
m2_32 -> m2_52  [key=2, style=dotted];
m2_32 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_36 -> m2_37  [key=0, style=solid];
m2_36 -> m2_56  [key=2, style=dotted];
m2_36 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label=heading];
m2_38 -> m2_39  [key=0, style=solid];
m2_38 -> m2_57  [key=2, style=dotted];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_52  [key=2, style=dotted];
m2_39 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_52  [key=2, style=dotted];
m2_40 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_42 -> m2_43  [key=0, style=solid];
m2_45 -> m2_46  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_32  [key=0, style=solid];
m2_30 -> m2_48  [key=2, style=dotted];
m2_30 -> m2_49  [key=2, style=dotted];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_51  [key=2, style=dotted];
m2_33 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=usageAttr];
m2_33 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=usageAttr];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_39  [key=0, style=solid];
m2_35 -> m2_55  [key=2, style=dotted];
m2_37 -> m2_38  [key=0, style=solid];
m2_37 -> m2_39  [key=0, style=solid];
m2_46 -> m2_25  [key=0, style=bold, color=blue];
m2_179 -> m2_330  [key=0, style=solid];
m2_179 -> m2_332  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_179 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m2_179 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_330 -> m2_331  [key=0, style=solid];
m2_330 -> m2_336  [key=2, style=dotted];
m2_330 -> m2_332  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m2_330 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m2_330 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m2_332 -> m2_333  [key=0, style=solid];
m2_332 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m2_333 -> m2_334  [key=0, style=solid];
m2_333 -> m2_146  [key=2, style=dotted];
m2_333 -> m2_337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_331 -> m2_332  [key=0, style=solid];
m2_331 -> m2_24  [key=2, style=dotted];
m2_334 -> m2_335  [key=0, style=solid];
m2_335 -> m2_179  [key=0, style=bold, color=blue];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_135  [key=3, color=darkorchid, style=bold, label="method methodReturn string op_Implicit"];
m2_133 -> m2_134  [key=0, style=solid];
m2_133 -> m2_135  [key=2, style=dotted];
m2_134 -> m2_132  [key=0, style=bold, color=blue];
m2_138 -> m2_345  [key=0, style=solid];
m2_138 -> m2_57  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_345 -> m2_346  [key=0, style=solid];
m2_345 -> m2_275  [key=2, style=dotted];
m2_346 -> m2_347  [key=0, style=solid];
m2_347 -> m2_138  [key=0, style=bold, color=blue];
m2_142 -> m2_416  [key=0, style=solid];
m2_142 -> m2_256  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Text.StringBuilder builder"];
m2_142 -> m2_139  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_416 -> m2_417  [key=0, style=solid];
m2_416 -> m2_275  [key=2, style=dotted];
m2_417 -> m2_418  [key=0, style=solid];
m2_418 -> m2_142  [key=0, style=bold, color=blue];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [key=0, style=bold, color=blue];
m2_301 -> m2_302  [key=0, style=solid];
m2_301 -> m2_89  [key=2, style=dotted];
m2_301 -> m2_306  [key=2, style=dotted];
m2_301 -> m2_307  [key=2, style=dotted];
m2_301 -> m2_308  [key=2, style=dotted];
m2_301 -> m2_303  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m2_178 -> m2_300  [key=0, style=solid];
m2_300 -> m2_301  [key=0, style=solid];
m2_300 -> m2_305  [key=2, style=dotted];
m2_300 -> m2_302  [key=1, style=dashed, color=darkseagreen4, label=specs];
m2_302 -> m2_303  [key=0, style=solid];
m2_302 -> m2_89  [key=2, style=dotted];
m2_302 -> m2_309  [key=2, style=dotted];
m2_302 -> m2_310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_303 -> m2_304  [key=0, style=solid];
m2_303 -> m2_47  [key=2, style=dotted];
m2_303 -> m2_308  [key=2, style=dotted];
m2_304 -> m2_178  [key=0, style=bold, color=blue];
m2_275 -> m2_276  [key=0, style=solid];
m2_275 -> m2_278  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_275 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_275 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m2_275 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_275 -> m2_285  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m2_275 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_275 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m2_275 -> m2_289  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_275 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_275 -> m2_292  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m2_275 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_275 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m2_275 -> m2_142  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_275 -> m2_138  [key=3, color=darkorchid, style=bold, label="Parameter variable int maximumLength"];
m2_276 -> m2_277  [key=0, style=solid];
m2_276 -> m2_273  [key=2, style=dotted];
m2_278 -> m2_279  [key=0, style=solid];
m2_278 -> m2_296  [key=2, style=dotted];
m2_278 -> m2_280  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_278 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_278 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_278 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_278 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_278 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_278 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=words];
m2_281 -> m2_282  [key=0, style=solid];
m2_281 -> m2_287  [key=0, style=solid];
m2_282 -> m2_283  [key=0, style=solid];
m2_282 -> m2_222  [key=2, style=dotted];
m2_284 -> m2_285  [key=0, style=solid];
m2_284 -> m2_290  [key=0, style=solid];
m2_285 -> m2_286  [key=0, style=solid];
m2_285 -> m2_222  [key=2, style=dotted];
m2_287 -> m2_288  [key=0, style=solid];
m2_287 -> m2_291  [key=0, style=solid];
m2_288 -> m2_289  [key=0, style=solid];
m2_288 -> m2_297  [key=2, style=dotted];
m2_288 -> m2_222  [key=2, style=dotted];
m2_289 -> m2_291  [key=0, style=solid];
m2_291 -> m2_292  [key=0, style=solid];
m2_291 -> m2_298  [key=2, style=dotted];
m2_291 -> m2_299  [key=2, style=dotted];
m2_291 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_291 -> m2_293  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_291 -> m2_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_292 -> m2_293  [key=0, style=solid];
m2_292 -> m2_273  [key=2, style=dotted];
m2_293 -> m2_276  [key=0, style=solid];
m2_293 -> m2_294  [key=0, style=solid];
m2_294 -> m2_295  [key=0, style=solid];
m2_294 -> m2_222  [key=2, style=dotted];
m2_277 -> m2_278  [key=0, style=solid];
m2_277 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_277 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_277 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_277 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_277 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m2_277 -> m2_275  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m2_283 -> m2_284  [key=0, style=solid];
m2_283 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_283 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_283 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_279 -> m2_280  [key=0, style=solid];
m2_279 -> m2_281  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_279 -> m2_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_279 -> m2_283  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_279 -> m2_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_279 -> m2_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_279 -> m2_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_279 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_279 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m2_280 -> m2_281  [key=0, style=solid];
m2_280 -> m2_291  [key=0, style=solid];
m2_290 -> m2_280  [key=0, style=solid];
m2_290 -> m2_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m2_286 -> m2_290  [key=0, style=solid];
m2_286 -> m2_286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_286 -> m2_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m2_295 -> m2_275  [key=0, style=bold, color=blue];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_10 -> m2_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_10 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.SentenceBuilder"];
m2_10 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_10 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_12 -> m2_22  [key=0, style=solid];
m2_12 -> m2_23  [key=2, style=dotted];
m2_14 -> m2_22  [key=0, style=solid];
m2_14 -> m2_23  [key=2, style=dotted];
m2_16 -> m2_22  [key=0, style=solid];
m2_16 -> m2_23  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_24  [key=2, style=dotted];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_24  [key=2, style=dotted];
m2_22 -> m2_10  [key=0, style=bold, color=blue];
m2_390 -> m2_407  [key=0, style=solid];
m2_390 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_390 -> m2_414  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_390 -> m2_340  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification specification"];
m2_407 -> m2_408  [key=0, style=solid];
m2_407 -> m2_24  [key=2, style=dotted];
m2_407 -> m2_378  [key=2, style=dotted];
m2_407 -> m2_403  [key=2, style=dotted];
m2_407 -> m2_223  [key=2, style=dotted];
m2_407 -> m2_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_407 -> m2_413  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_408 -> m2_390  [key=0, style=bold, color=blue];
m2_72 -> m2_143  [key=0, style=solid];
m2_72 -> m2_40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines"];
m2_72 -> m2_124  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines"];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_146  [key=2, style=dotted];
m2_143 -> m2_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_144 -> m2_145  [key=0, style=solid];
m2_145 -> m2_72  [key=0, style=bold, color=blue];
m2_336 -> m2_419  [key=0, style=solid];
m2_419 -> m2_420  [key=0, style=solid];
m2_419 -> m2_421  [key=2, style=dotted];
m2_419 -> m2_422  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_420 -> m2_336  [key=0, style=bold, color=blue];
m2_342 -> m2_306  [key=0, style=bold, color=blue];
m2_306 -> m2_341  [key=0, style=solid];
m2_341 -> m2_342  [key=0, style=solid];
m2_341 -> m2_50  [key=2, style=dotted];
m2_341 -> m2_328  [key=2, style=dotted];
m2_188 -> m2_189  [key=0, style=solid];
m2_188 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_188 -> m2_179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
m2_189 -> m2_190  [key=0, style=solid];
m2_189 -> m2_191  [key=0, style=solid];
m2_191 -> m2_192  [key=0, style=solid];
m2_191 -> m2_178  [key=2, style=dotted];
m2_191 -> m2_56  [key=2, style=dotted];
m2_191 -> m2_179  [key=2, style=dotted];
m2_190 -> m2_192  [key=0, style=solid];
m2_190 -> m2_23  [key=2, style=dotted];
m2_192 -> m2_188  [key=0, style=bold, color=blue];
m2_427 -> m2_449  [key=0, style=solid];
m2_427 -> m2_450  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_427 -> m2_452  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_427 -> m2_453  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_427 -> m2_455  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_427 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_427 -> m2_419  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification spec"];
m2_449 -> m2_450  [key=0, style=solid];
m2_449 -> m2_455  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_449 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_449 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m2_449 -> m2_451  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m2_450 -> m2_451  [key=0, style=solid];
m2_450 -> m2_454  [key=1, style=dashed, color=darkseagreen4, label=hasMeta];
m2_452 -> m2_453  [key=0, style=solid];
m2_452 -> m2_454  [key=0, style=solid];
m2_453 -> m2_454  [key=0, style=solid];
m2_453 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m2_455 -> m2_457  [key=0, style=solid];
m2_455 -> m2_460  [key=2, style=dotted];
m2_455 -> m2_455  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_456 -> m2_457  [key=0, style=solid];
m2_456 -> m2_460  [key=2, style=dotted];
m2_456 -> m2_456  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_451 -> m2_452  [key=0, style=solid];
m2_451 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m2_451 -> m2_277  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
m2_454 -> m2_455  [key=0, style=solid];
m2_454 -> m2_456  [key=0, style=solid];
m2_457 -> m2_458  [key=0, style=solid];
m2_457 -> m2_457  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m2_458 -> m2_459  [key=0, style=solid];
m2_459 -> m2_427  [key=0, style=bold, color=blue];
m2_57 -> m2_136  [key=0, style=solid];
m2_57 -> m2_36  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_57 -> m2_143  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_57 -> m2_159  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m2_57 -> m2_138  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine"];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_138  [key=2, style=dotted];
m2_137 -> m2_57  [key=0, style=bold, color=blue];
m2_193 -> m2_194  [key=0, style=solid];
m2_193 -> m2_196  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m2_193 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_193 -> m2_179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
m2_194 -> m2_195  [key=0, style=solid];
m2_194 -> m2_196  [key=0, style=solid];
m2_196 -> m2_197  [key=0, style=solid];
m2_196 -> m2_198  [key=0, style=solid];
m2_198 -> m2_199  [key=0, style=solid];
m2_198 -> m2_187  [key=2, style=dotted];
m2_198 -> m2_56  [key=2, style=dotted];
m2_198 -> m2_179  [key=2, style=dotted];
m2_195 -> m2_199  [key=0, style=solid];
m2_195 -> m2_23  [key=2, style=dotted];
m2_197 -> m2_199  [key=0, style=solid];
m2_197 -> m2_186  [key=2, style=dotted];
m2_199 -> m2_193  [key=0, style=bold, color=blue];
m2_150 -> m2_151  [key=0, style=solid];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_146  [key=2, style=dotted];
m2_151 -> m2_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_152 -> m2_153  [key=0, style=solid];
m2_153 -> m2_150  [key=0, style=bold, color=blue];
m2_157 -> m2_158  [key=0, style=solid];
m2_158 -> m2_159  [key=0, style=solid];
m2_158 -> m2_162  [key=2, style=dotted];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_146  [key=2, style=dotted];
m2_159 -> m2_163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_160 -> m2_161  [key=0, style=solid];
m2_161 -> m2_157  [key=0, style=bold, color=blue];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_6  [key=0, style=bold, color=blue];
m2_230 -> m2_234  [key=0, style=solid];
m2_230 -> m2_227  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m2_230 -> m2_228  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
m2_234 -> m2_235  [key=0, style=solid];
m2_234 -> m2_53  [key=2, style=dotted];
m2_234 -> m2_203  [key=2, style=dotted];
m2_235 -> m2_230  [key=0, style=bold, color=blue];
m2_53 -> m2_236  [key=0, style=solid];
m2_53 -> m2_240  [key=0, style=bold, color=crimson];
m2_53 -> m2_247  [key=0, style=bold, color=crimson];
m2_53 -> m2_251  [key=0, style=bold, color=crimson];
m2_53 -> m2_238  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_53 -> m2_245  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>"];
m2_53 -> m2_230  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
m2_236 -> m2_237  [key=0, style=solid];
m2_236 -> m2_238  [key=0, style=solid];
m2_240 -> m2_241  [key=0, style=solid, color=red];
m2_247 -> m2_248  [key=0, style=solid];
m2_247 -> m2_223  [key=2, style=dotted];
m2_251 -> m2_249  [key=0, style=solid];
m2_251 -> m2_223  [key=2, style=dotted];
m2_238 -> m2_239  [key=0, style=solid];
m2_238 -> m2_253  [key=2, style=dotted];
m2_238 -> m2_241  [key=1, style=dashed, color=red, label=usage];
m2_245 -> m2_246  [key=0, style=solid];
m2_245 -> m2_257  [key=2, style=dotted];
m2_245 -> m2_248  [key=1, style=dashed, color=darkseagreen4, label=example];
m2_245 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=example];
m2_237 -> m2_252  [key=0, style=solid];
m2_237 -> m2_23  [key=2, style=dotted];
m2_239 -> m2_240  [key=0, style=solid];
m2_239 -> m2_241  [key=0, style=solid, color=red];
m2_239 -> m2_254  [key=2, style=dotted];
m2_241 -> m2_242  [key=0, style=solid, color=red];
m2_241 -> m2_255  [key=2, style=dotted, color=red];
m2_241 -> m2_243  [key=1, style=dashed, color=red, label=usageTuple];
m2_242 -> m2_243  [key=0, style=solid];
m2_242 -> m2_244  [key=1, style=dashed, color=darkseagreen4, label=examples];
m2_243 -> m2_244  [key=0, style=solid];
m2_243 -> m2_256  [key=2, style=dotted];
m2_243 -> m2_250  [key=1, style=dashed, color=darkseagreen4, label=appAlias];
m2_244 -> m2_245  [key=0, style=solid];
m2_244 -> m2_252  [key=0, style=solid];
m2_250 -> m2_251  [key=0, style=solid];
m2_250 -> m2_219  [key=2, style=dotted];
m2_250 -> m2_220  [key=2, style=dotted];
m2_250 -> m2_260  [key=2, style=dotted];
m2_250 -> m2_258  [key=2, style=dotted];
m2_250 -> m2_261  [key=2, style=dotted];
m2_250 -> m2_222  [key=2, style=dotted];
m2_250 -> m2_262  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_246 -> m2_247  [key=0, style=solid];
m2_246 -> m2_219  [key=2, style=dotted];
m2_246 -> m2_258  [key=2, style=dotted];
m2_248 -> m2_249  [key=0, style=solid];
m2_248 -> m2_259  [key=2, style=dotted];
m2_249 -> m2_250  [key=0, style=solid];
m2_249 -> m2_244  [key=0, style=solid];
m2_249 -> m2_263  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_249 -> m2_264  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_249 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_252 -> m2_53  [key=0, style=bold, color=blue];
m2_477 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_148  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_144  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_151  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_155  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_152  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_159  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_164  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_160  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_168  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_172  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_169  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_184  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_191  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_198  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_268  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_301  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_330  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_331  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_333  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_334  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_341  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_343  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_345  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_346  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_348  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_349  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_350  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_352  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_363  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_366  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_369  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_373  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_376  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_395  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_416  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_417  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_419  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_423  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_437  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_477 -> m2_442  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m2_478 -> m2_63  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_478 -> m2_67  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_478 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label=auto];
m2_479 -> m2_100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_479 -> m2_113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_480 -> m2_107  [key=1, style=dashed, color=darkseagreen4, label=pr];
m2_481 -> m2_263  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_481 -> m2_264  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_481 -> m2_265  [key=1, style=dashed, color=darkseagreen4, label=s];
m2_482 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_483 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m2_484 -> m2_338  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m2_485 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_485 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label=int];
m2_486 -> m2_384  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_486 -> m2_388  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m2_487 -> m2_392  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m2_488 -> m2_399  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_488 -> m2_405  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m2_489 -> m2_410  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m2_489 -> m2_414  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=ae];
m3_1 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=ae];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_11  [key=2, style=dotted];
m3_5 -> m3_12  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_0  [key=0, style=bold, color=blue];
m3_13 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.ArgumentParserFixture"];
m5_37 -> m5_38  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid, color=green];
m5_7 -> m5_20  [key=1, style=dashed, color=green, label="CommandLine.Core.SpecificationProperty"];
m5_7 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m5_7 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m5_8 -> m5_9  [key=0, style=solid, color=green];
m5_8 -> m5_10  [key=2, style=dotted, color=green];
m5_8 -> m5_11  [key=2, style=dotted, color=green];
m5_8 -> m5_12  [key=2, style=dotted, color=green];
m5_8 -> m5_13  [key=2, style=dotted, color=green];
m5_8 -> m5_14  [key=2, style=dotted, color=green];
m5_8 -> m5_15  [key=1, style=dashed, color=green, label="lambda expression"];
m5_8 -> m5_19  [key=1, style=dashed, color=green, label="lambda expression"];
m5_9 -> m5_7  [key=0, style=bold, color=blue];
m5_15 -> m5_16  [key=0, style=solid];
m5_19 -> m5_20  [key=0, style=solid, color=green];
m5_20 -> m5_21  [key=0, style=solid, color=green];
m5_20 -> m5_22  [key=2, style=dotted, color=green];
m5_20 -> m5_23  [key=2, style=dotted, color=green];
m5_20 -> m5_24  [key=2, style=dotted, color=green];
m5_20 -> m5_25  [key=2, style=dotted, color=green];
m5_20 -> m5_13  [key=2, style=dotted, color=green];
m5_20 -> m5_14  [key=2, style=dotted, color=green];
m5_20 -> m5_26  [key=1, style=dashed, color=green, label="lambda expression"];
m5_21 -> m5_19  [key=0, style=bold, color=blue];
m5_26 -> m5_27  [key=0, style=solid];
m5_16 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_27 -> m5_12  [key=2, style=dotted];
m5_27 -> m5_13  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_27 -> m5_29  [key=2, style=dotted];
m5_27 -> m5_30  [key=2, style=dotted];
m5_17 -> m5_15  [key=0, style=bold, color=blue];
m5_28 -> m5_26  [key=0, style=bold, color=blue];
m5_33 -> m5_31  [key=0, style=bold, color=blue];
m5_32 -> m5_33  [key=0, style=solid];
m5_36 -> m5_34  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid];
m5_38 -> m5_39  [key=0, style=solid];
m5_39 -> m5_37  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid, color=green];
m5_0 -> m5_8  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
m5_0 -> m5_20  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m5_0 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_1 -> m5_2  [key=0, style=solid, color=green];
m5_1 -> m5_4  [key=2, style=dotted, color=green];
m5_1 -> m5_7  [key=1, style=dashed, color=green, label="lambda expression"];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_4  [key=2, style=dotted];
m5_2 -> m5_5  [key=2, style=dotted];
m5_2 -> m5_6  [key=2, style=dotted];
m5_2 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_2 -> m5_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_3 -> m5_0  [key=0, style=bold, color=blue];
m5_40 -> m5_8  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>>"];
m5_41 -> m5_8  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m5_41 -> m5_20  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>"];
m5_42 -> m5_8  [key=1, style=dashed, color=green, label="System.StringComparer"];
m5_42 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m5_43 -> m5_20  [key=1, style=dashed, color=green, label="CommandLine.Core.SpecificationProperty"];
m5_43 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m5_43 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_9 -> m6_7  [key=0, style=bold, color=blue];
m6_18 -> m6_19  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_5 -> m6_3  [key=0, style=bold, color=blue];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_6  [key=2, style=dotted];
m6_11 -> m6_13  [key=2, style=dotted];
m6_11 -> m6_14  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_12 -> m6_10  [key=0, style=bold, color=blue];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_20 -> m6_18  [key=0, style=bold, color=blue];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_17 -> m6_15  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m6_1 -> m6_1  [key=3, color=darkorchid, style=bold, label="Field variable int BuilderCapacity"];
m6_2 -> m6_0  [key=0, style=bold, color=blue];
m8_0 -> m8_1  [key=0, style=solid, color=green];
m8_0 -> m8_5  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_0 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_1 -> m8_2  [key=0, style=solid, color=green];
m8_1 -> m8_3  [key=2, style=dotted, color=green];
m8_1 -> m8_4  [key=1, style=dashed, color=green, label="lambda expression"];
m8_1 -> m8_1  [key=1, style=dashed, color=green, label=tseq];
m8_2 -> m8_0  [key=0, style=bold, color=blue];
m8_36 -> m8_37  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid, color=green];
m8_5 -> m8_7  [key=2, style=dotted, color=green];
m8_5 -> m8_8  [key=2, style=dotted, color=green];
m8_5 -> m8_9  [key=2, style=dotted, color=green];
m8_5 -> n5  [key=2, style=dotted, color=red];
m8_5 -> m8_11  [key=1, style=dashed, color=green, label="lambda expression"];
m8_5 -> m8_10  [key=2, style=dotted, color=green];
m8_12 -> m8_13  [key=0, style=solid];
m8_12 -> m8_14  [key=2, style=dotted];
m8_12 -> m8_15  [key=2, style=dotted];
m8_4 -> m8_5  [key=0, style=solid, color=green];
m8_4 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_6 -> m8_4  [key=0, style=bold, color=blue];
m8_11 -> m8_12  [key=0, style=solid];
m8_13 -> m8_11  [key=0, style=bold, color=blue];
m8_26 -> m8_27  [key=0, style=solid];
m8_26 -> m8_28  [key=2, style=dotted];
m8_30 -> m8_31  [key=0, style=solid, color=green];
m8_30 -> m8_23  [key=2, style=dotted, color=green];
m8_30 -> m8_24  [key=2, style=dotted, color=green];
m8_30 -> n5  [key=2, style=dotted, color=red];
m8_30 -> m8_30  [key=1, style=dashed, color=green, label="CommandLine.Core.TypeDescriptor"];
m8_30 -> m8_32  [key=1, style=dashed, color=green, label="lambda expression"];
m8_30 -> m8_36  [key=1, style=dashed, color=green, label="lambda expression"];
m8_30 -> m8_10  [key=2, style=dotted, color=green];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_23  [key=2, style=dotted];
m8_33 -> m8_35  [key=2, style=dotted];
m8_25 -> m8_26  [key=0, style=solid];
m8_29 -> m8_30  [key=0, style=solid, color=green];
m8_39 -> m8_40  [key=0, style=solid];
m8_27 -> m8_25  [key=0, style=bold, color=blue];
m8_31 -> m8_29  [key=0, style=bold, color=blue];
m8_32 -> m8_33  [key=0, style=solid];
m8_34 -> m8_32  [key=0, style=bold, color=blue];
m8_37 -> m8_38  [key=0, style=solid];
m8_37 -> m8_8  [key=2, style=dotted];
m8_38 -> m8_36  [key=0, style=bold, color=blue];
m8_40 -> m8_41  [key=0, style=solid];
m8_40 -> m8_8  [key=2, style=dotted];
m8_41 -> m8_39  [key=0, style=bold, color=blue];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_16 -> m8_19  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_16 -> m8_30  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_16 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_22  [key=2, style=dotted];
m8_17 -> m8_25  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m8_17 -> m8_19  [key=1, style=dashed, color=green, label=nameIndex];
m8_17 -> m8_30  [key=1, style=dashed, color=green, label=nameIndex];
m8_17 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=nameIndex];
m8_19 -> m8_21  [key=0, style=solid, color=green];
m8_19 -> m8_23  [key=2, style=dotted, color=green];
m8_19 -> m8_24  [key=2, style=dotted, color=green];
m8_19 -> n5  [key=2, style=dotted, color=red];
m8_19 -> m8_19  [key=1, style=dashed, color=green, label="CommandLine.Core.TypeDescriptor"];
m8_19 -> m8_29  [key=1, style=dashed, color=green, label="lambda expression"];
m8_19 -> m8_30  [key=1, style=dashed, color=green, label="CommandLine.Core.TypeDescriptor"];
m8_19 -> m8_39  [key=1, style=dashed, color=green, label="lambda expression"];
m8_19 -> m8_10  [key=2, style=dotted, color=green];
m8_18 -> m8_19  [key=0, style=solid, color=green];
m8_18 -> m8_20  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_21 -> m8_16  [key=0, style=bold, color=blue];
m8_42 -> m8_5  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_42 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_43 -> m8_5  [key=1, style=dashed, color=green, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m8_44 -> m8_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_45 -> m8_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m8_46 -> m8_30  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_46 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m8_47 -> m8_30  [key=1, style=dashed, color=green, label="CommandLine.Core.TypeDescriptor"];
m8_48 -> m8_30  [key=1, style=dashed, color=green, label=nameIndex];
m8_48 -> m8_33  [key=1, style=dashed, color=darkseagreen4, label=nameIndex];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionMap"];
m10_3 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m10_3 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_3 -> m10_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m10_3 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_3 -> m10_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m10_3 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m10_3 -> m10_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m10_3 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_3 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionMap"];
m10_3 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_3 -> m10_13  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Parsing.PresentParserState Parse"];
m10_3 -> m10_45  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Parsing.PresentParserState Parse"];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_47  [key=2, style=dotted];
m10_4 -> m10_48  [key=2, style=dotted];
m10_4 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=group];
m10_4 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label=group];
m10_4 -> m10_15  [key=1, style=dashed, color=darkseagreen4, label=group];
m10_4 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label=group];
m10_4 -> m10_23  [key=1, style=dashed, color=darkseagreen4, label=group];
m10_4 -> m10_41  [key=1, style=dashed, color=darkseagreen4, label=group];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_10  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_11  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_16  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_17  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_21  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_30  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_31  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_35  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_37  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_6 -> m10_43  [key=1, style=dashed, color=darkseagreen4, label=option];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=0, style=solid];
m10_17 -> m10_18  [key=0, style=solid];
m10_17 -> m10_51  [key=2, style=dotted];
m10_17 -> m10_52  [key=2, style=dotted];
m10_17 -> m10_20  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_56  [key=2, style=dotted];
m10_22 -> m10_24  [key=1, style=dashed, color=darkseagreen4, label=items];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_58  [key=2, style=dotted];
m10_24 -> m10_27  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m10_28 -> m10_29  [key=0, style=solid];
m10_28 -> m10_30  [key=0, style=solid];
m10_28 -> m10_60  [key=2, style=dotted];
m10_31 -> m10_32  [key=0, style=solid];
m10_31 -> m10_52  [key=2, style=dotted];
m10_31 -> m10_34  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m10_36 -> m10_37  [key=0, style=solid];
m10_36 -> m10_56  [key=2, style=dotted];
m10_37 -> m10_38  [key=0, style=solid];
m10_37 -> m10_58  [key=2, style=dotted];
m10_37 -> m10_40  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m10_41 -> m10_42  [key=0, style=solid];
m10_41 -> m10_43  [key=0, style=solid];
m10_43 -> m10_44  [key=0, style=solid];
m10_43 -> m10_5  [key=0, style=solid];
m10_43 -> m10_61  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_45  [key=0, style=solid];
m10_5 -> m10_49  [key=2, style=dotted];
m10_15 -> m10_16  [key=0, style=solid];
m10_15 -> m10_28  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_51  [key=2, style=dotted];
m10_23 -> m10_57  [key=2, style=dotted];
m10_45 -> m10_46  [key=0, style=solid];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_50  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_41  [key=0, style=solid];
m10_16 -> m10_17  [key=0, style=solid];
m10_16 -> m10_21  [key=0, style=solid];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_53  [key=2, style=dotted];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_55  [key=2, style=dotted];
m10_26 -> m10_27  [key=0, style=solid];
m10_26 -> m10_53  [key=2, style=dotted];
m10_30 -> m10_31  [key=0, style=solid];
m10_30 -> m10_35  [key=0, style=solid];
m10_33 -> m10_34  [key=0, style=solid];
m10_33 -> m10_53  [key=2, style=dotted];
m10_35 -> m10_36  [key=0, style=solid];
m10_35 -> m10_55  [key=2, style=dotted];
m10_39 -> m10_40  [key=0, style=solid];
m10_39 -> m10_53  [key=2, style=dotted];
m10_8 -> m10_46  [key=0, style=solid];
m10_13 -> m10_46  [key=0, style=solid];
m10_14 -> m10_15  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_20  [key=0, style=solid];
m10_20 -> m10_46  [key=0, style=solid];
m10_20 -> m10_54  [key=2, style=dotted];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_27  [key=0, style=solid];
m10_27 -> m10_46  [key=0, style=solid];
m10_27 -> m10_59  [key=2, style=dotted];
m10_29 -> m10_46  [key=0, style=solid];
m10_32 -> m10_33  [key=0, style=solid];
m10_32 -> m10_34  [key=0, style=solid];
m10_34 -> m10_46  [key=0, style=solid];
m10_34 -> m10_59  [key=2, style=dotted];
m10_38 -> m10_39  [key=0, style=solid];
m10_38 -> m10_40  [key=0, style=solid];
m10_40 -> m10_46  [key=0, style=solid];
m10_40 -> m10_54  [key=2, style=dotted];
m10_42 -> m10_46  [key=0, style=solid];
m10_44 -> m10_46  [key=0, style=solid];
m10_46 -> m10_3  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_62 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionGroupParser"];
m10_62 -> m10_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionGroupParser"];
m10_62 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionGroupParser"];
m10_62 -> m10_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionGroupParser"];
m10_62 -> m10_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionGroupParser"];
m10_62 -> m10_39  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.OptionGroupParser"];
m11_46 -> m11_47  [key=0, style=solid];
m11_47 -> m11_48  [key=0, style=solid];
m11_47 -> m11_3  [key=2, style=dotted];
m11_47 -> m11_19  [key=2, style=dotted];
m11_47 -> m11_45  [key=2, style=dotted];
m11_47 -> m11_33  [key=2, style=dotted];
m11_47 -> m11_20  [key=2, style=dotted];
m11_48 -> m11_49  [key=0, style=solid];
m11_48 -> m11_4  [key=2, style=dotted];
m11_48 -> m11_21  [key=2, style=dotted];
m11_48 -> m11_34  [key=2, style=dotted];
m11_48 -> m11_50  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_48 -> m11_51  [key=1, style=dashed, color=red, label=lines];
m11_48 -> m11_52  [key=1, style=dashed, color=red, label=lines];
m11_48 -> m11_53  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_49 -> m11_50  [key=0, style=solid];
m11_49 -> m11_5  [key=2, style=dotted];
m11_50 -> m11_51  [key=0, style=solid, color=red];
m11_50 -> m11_5  [key=2, style=dotted];
m11_51 -> m11_52  [key=0, style=solid, color=red];
m11_51 -> m11_5  [key=2, style=dotted, color=red];
m11_52 -> m11_53  [key=0, style=solid, color=red];
m11_52 -> m11_5  [key=2, style=dotted, color=red];
m11_53 -> m11_54  [key=0, style=solid];
m11_53 -> m11_5  [key=2, style=dotted];
m11_54 -> m11_46  [key=0, style=bold, color=blue];
m11_22 -> m11_23  [key=0, style=solid];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_3  [key=2, style=dotted];
m11_23 -> m11_19  [key=2, style=dotted];
m11_23 -> m11_32  [key=2, style=dotted];
m11_23 -> m11_33  [key=2, style=dotted];
m11_23 -> m11_20  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_4  [key=2, style=dotted];
m11_24 -> m11_21  [key=2, style=dotted];
m11_24 -> m11_34  [key=2, style=dotted];
m11_24 -> m11_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_24 -> m11_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_24 -> m11_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_24 -> m11_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_24 -> m11_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_5  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_5  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_5  [key=2, style=dotted];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_5  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_5  [key=2, style=dotted];
m11_30 -> m11_31  [key=0, style=solid];
m11_30 -> m11_5  [key=2, style=dotted];
m11_31 -> m11_22  [key=0, style=bold, color=blue];
m11_62 -> m11_63  [key=0, style=solid];
m11_63 -> m11_64  [key=0, style=solid];
m11_63 -> m11_60  [key=2, style=dotted];
m11_63 -> m11_17  [key=2, style=dotted];
m11_63 -> m11_65  [key=1, style=dashed, color=darkseagreen4, label=sut];
m11_63 -> m11_66  [key=1, style=dashed, color=darkseagreen4, label=sut];
m11_64 -> m11_65  [key=0, style=solid];
m11_65 -> m11_66  [key=0, style=solid];
m11_65 -> m11_73  [key=2, style=dotted];
m11_65 -> m11_33  [key=2, style=dotted];
m11_66 -> m11_67  [key=0, style=solid];
m11_66 -> m11_4  [key=2, style=dotted];
m11_66 -> m11_74  [key=2, style=dotted];
m11_66 -> m11_68  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_66 -> m11_69  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_66 -> m11_70  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_66 -> m11_71  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_67 -> m11_68  [key=0, style=solid];
m11_67 -> m11_75  [key=2, style=dotted];
m11_67 -> m11_76  [key=2, style=dotted];
m11_68 -> m11_69  [key=0, style=solid];
m11_68 -> m11_75  [key=2, style=dotted];
m11_68 -> m11_76  [key=2, style=dotted];
m11_69 -> m11_70  [key=0, style=solid];
m11_69 -> m11_75  [key=2, style=dotted];
m11_69 -> m11_76  [key=2, style=dotted];
m11_70 -> m11_71  [key=0, style=solid];
m11_70 -> m11_75  [key=2, style=dotted];
m11_70 -> m11_76  [key=2, style=dotted];
m11_71 -> m11_72  [key=0, style=solid];
m11_71 -> m11_75  [key=2, style=dotted];
m11_71 -> m11_76  [key=2, style=dotted];
m11_72 -> m11_62  [key=0, style=bold, color=blue];
m11_77 -> m11_78  [key=0, style=solid];
m11_78 -> m11_79  [key=0, style=solid];
m11_78 -> m11_60  [key=2, style=dotted];
m11_78 -> m11_17  [key=2, style=dotted];
m11_78 -> m11_80  [key=1, style=dashed, color=darkseagreen4, label=sut];
m11_78 -> m11_81  [key=1, style=dashed, color=darkseagreen4, label=sut];
m11_79 -> m11_80  [key=0, style=solid];
m11_80 -> m11_81  [key=0, style=solid];
m11_80 -> m11_89  [key=2, style=dotted];
m11_80 -> m11_33  [key=2, style=dotted];
m11_81 -> m11_82  [key=0, style=solid];
m11_81 -> m11_4  [key=2, style=dotted];
m11_81 -> m11_74  [key=2, style=dotted];
m11_81 -> m11_83  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_81 -> m11_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_81 -> m11_85  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_81 -> m11_86  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_81 -> m11_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_82 -> m11_83  [key=0, style=solid];
m11_82 -> m11_75  [key=2, style=dotted];
m11_82 -> m11_76  [key=2, style=dotted];
m11_83 -> m11_84  [key=0, style=solid];
m11_83 -> m11_75  [key=2, style=dotted];
m11_83 -> m11_76  [key=2, style=dotted];
m11_84 -> m11_85  [key=0, style=solid];
m11_84 -> m11_75  [key=2, style=dotted];
m11_84 -> m11_76  [key=2, style=dotted];
m11_85 -> m11_86  [key=0, style=solid];
m11_85 -> m11_75  [key=2, style=dotted];
m11_85 -> m11_76  [key=2, style=dotted];
m11_86 -> m11_87  [key=0, style=solid];
m11_86 -> m11_75  [key=2, style=dotted];
m11_86 -> m11_76  [key=2, style=dotted];
m11_87 -> m11_88  [key=0, style=solid];
m11_87 -> m11_75  [key=2, style=dotted];
m11_87 -> m11_76  [key=2, style=dotted];
m11_88 -> m11_77  [key=0, style=bold, color=blue];
m11_153 -> m11_154  [key=0, style=solid];
m11_154 -> m11_155  [key=0, style=solid];
m11_154 -> m11_117  [key=2, style=dotted];
m11_154 -> m11_32  [key=2, style=dotted];
m11_154 -> m11_119  [key=2, style=dotted];
m11_154 -> m11_125  [key=2, style=dotted];
m11_154 -> m11_121  [key=2, style=dotted];
m11_154 -> m11_130  [key=2, style=dotted];
m11_155 -> m11_156  [key=0, style=solid];
m11_155 -> m11_167  [key=2, style=dotted];
m11_156 -> m11_157  [key=0, style=solid];
m11_156 -> m11_4  [key=2, style=dotted];
m11_156 -> m11_21  [key=2, style=dotted];
m11_156 -> m11_34  [key=2, style=dotted];
m11_156 -> m11_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_156 -> m11_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_156 -> m11_160  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_156 -> m11_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_156 -> m11_162  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_156 -> m11_163  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_156 -> m11_164  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_156 -> m11_165  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_157 -> m11_158  [key=0, style=solid];
m11_157 -> m11_168  [key=2, style=dotted];
m11_157 -> m11_169  [key=2, style=dotted];
m11_158 -> m11_159  [key=0, style=solid];
m11_158 -> m11_168  [key=2, style=dotted];
m11_158 -> m11_169  [key=2, style=dotted];
m11_159 -> m11_160  [key=0, style=solid];
m11_159 -> m11_5  [key=2, style=dotted];
m11_160 -> m11_161  [key=0, style=solid];
m11_160 -> m11_5  [key=2, style=dotted];
m11_161 -> m11_162  [key=0, style=solid];
m11_161 -> m11_5  [key=2, style=dotted];
m11_162 -> m11_163  [key=0, style=solid];
m11_162 -> m11_5  [key=2, style=dotted];
m11_163 -> m11_164  [key=0, style=solid];
m11_163 -> m11_5  [key=2, style=dotted];
m11_164 -> m11_165  [key=0, style=solid];
m11_164 -> m11_5  [key=2, style=dotted];
m11_165 -> m11_166  [key=0, style=solid];
m11_165 -> m11_5  [key=2, style=dotted];
m11_166 -> m11_153  [key=0, style=bold, color=blue];
m11_35 -> m11_36  [key=0, style=solid];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_3  [key=2, style=dotted];
m11_36 -> m11_19  [key=2, style=dotted];
m11_36 -> m11_45  [key=2, style=dotted];
m11_36 -> m11_33  [key=2, style=dotted];
m11_36 -> m11_20  [key=2, style=dotted];
m11_37 -> m11_38  [key=0, style=solid];
m11_37 -> m11_4  [key=2, style=dotted];
m11_37 -> m11_21  [key=2, style=dotted];
m11_37 -> m11_34  [key=2, style=dotted];
m11_37 -> m11_39  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_37 -> m11_40  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_37 -> m11_41  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_37 -> m11_42  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_37 -> m11_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_38 -> m11_39  [key=0, style=solid];
m11_38 -> m11_5  [key=2, style=dotted];
m11_39 -> m11_40  [key=0, style=solid];
m11_39 -> m11_5  [key=2, style=dotted];
m11_40 -> m11_41  [key=0, style=solid];
m11_40 -> m11_5  [key=2, style=dotted];
m11_41 -> m11_42  [key=0, style=solid];
m11_41 -> m11_5  [key=2, style=dotted];
m11_42 -> m11_43  [key=0, style=solid];
m11_42 -> m11_5  [key=2, style=dotted];
m11_43 -> m11_44  [key=0, style=solid];
m11_43 -> m11_5  [key=2, style=dotted];
m11_44 -> m11_35  [key=0, style=bold, color=blue];
m11_90 -> m11_91  [key=0, style=solid];
m11_91 -> m11_92  [key=0, style=solid];
m11_91 -> m11_60  [key=2, style=dotted];
m11_91 -> m11_93  [key=1, style=dashed, color=darkseagreen4, label=sut];
m11_91 -> m11_94  [key=1, style=dashed, color=darkseagreen4, label=sut];
m11_92 -> m11_93  [key=0, style=solid];
m11_93 -> m11_94  [key=0, style=solid];
m11_93 -> m11_19  [key=2, style=dotted];
m11_93 -> m11_102  [key=2, style=dotted];
m11_93 -> m11_33  [key=2, style=dotted];
m11_93 -> m11_20  [key=2, style=dotted];
m11_94 -> m11_95  [key=0, style=solid];
m11_94 -> m11_4  [key=2, style=dotted];
m11_94 -> m11_74  [key=2, style=dotted];
m11_94 -> m11_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_94 -> m11_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_94 -> m11_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_94 -> m11_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_94 -> m11_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_95 -> m11_96  [key=0, style=solid];
m11_95 -> m11_75  [key=2, style=dotted];
m11_95 -> m11_76  [key=2, style=dotted];
m11_96 -> m11_97  [key=0, style=solid];
m11_96 -> m11_75  [key=2, style=dotted];
m11_96 -> m11_76  [key=2, style=dotted];
m11_97 -> m11_98  [key=0, style=solid];
m11_97 -> m11_75  [key=2, style=dotted];
m11_97 -> m11_76  [key=2, style=dotted];
m11_98 -> m11_99  [key=0, style=solid];
m11_98 -> m11_75  [key=2, style=dotted];
m11_98 -> m11_76  [key=2, style=dotted];
m11_99 -> m11_100  [key=0, style=solid];
m11_99 -> m11_75  [key=2, style=dotted];
m11_99 -> m11_76  [key=2, style=dotted];
m11_100 -> m11_101  [key=0, style=solid];
m11_100 -> m11_75  [key=2, style=dotted];
m11_100 -> m11_76  [key=2, style=dotted];
m11_101 -> m11_90  [key=0, style=bold, color=blue];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_1 -> m11_4  [key=2, style=dotted];
m11_1 -> m11_5  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_181 -> m11_182  [key=0, style=solid];
m11_182 -> m11_183  [key=0, style=solid];
m11_182 -> n4  [key=2, style=dotted];
m11_182 -> m11_194  [key=2, style=dotted];
m11_183 -> m11_184  [key=0, style=solid];
m11_183 -> m11_117  [key=2, style=dotted];
m11_183 -> m11_118  [key=2, style=dotted];
m11_183 -> m11_129  [key=2, style=dotted];
m11_183 -> m11_195  [key=2, style=dotted];
m11_184 -> m11_185  [key=0, style=solid];
m11_184 -> m11_167  [key=2, style=dotted];
m11_185 -> m11_186  [key=0, style=solid];
m11_185 -> m11_4  [key=2, style=dotted];
m11_185 -> m11_21  [key=2, style=dotted];
m11_185 -> m11_34  [key=2, style=dotted];
m11_185 -> m11_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_185 -> m11_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_185 -> m11_189  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_185 -> m11_190  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_185 -> m11_191  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_186 -> m11_187  [key=0, style=solid];
m11_186 -> m11_168  [key=2, style=dotted];
m11_186 -> m11_169  [key=2, style=dotted];
m11_187 -> m11_188  [key=0, style=solid];
m11_187 -> m11_168  [key=2, style=dotted];
m11_187 -> m11_169  [key=2, style=dotted];
m11_188 -> m11_189  [key=0, style=solid];
m11_188 -> m11_5  [key=2, style=dotted];
m11_189 -> m11_190  [key=0, style=solid];
m11_189 -> m11_5  [key=2, style=dotted];
m11_190 -> m11_191  [key=0, style=solid];
m11_190 -> m11_5  [key=2, style=dotted];
m11_191 -> m11_192  [key=0, style=solid];
m11_191 -> m11_5  [key=2, style=dotted];
m11_192 -> m11_181  [key=0, style=bold, color=blue];
m11_55 -> m11_56  [key=0, style=solid];
m11_56 -> m11_57  [key=0, style=solid];
m11_56 -> m11_60  [key=2, style=dotted];
m11_56 -> m11_61  [key=2, style=dotted];
m11_56 -> m11_33  [key=2, style=dotted];
m11_57 -> m11_58  [key=0, style=solid];
m11_57 -> m11_4  [key=2, style=dotted];
m11_57 -> m11_21  [key=2, style=dotted];
m11_57 -> m11_34  [key=2, style=dotted];
m11_57 -> m11_66  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Error> "];
m11_58 -> m11_59  [key=0, style=solid];
m11_58 -> m11_5  [key=2, style=dotted];
m11_59 -> m11_55  [key=0, style=bold, color=blue];
m11_132 -> m11_133  [key=0, style=solid];
m11_132 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_132 -> m11_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_132 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_132 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_132 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_132 -> m11_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_132 -> m11_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_133 -> m11_134  [key=0, style=solid];
m11_133 -> m11_136  [key=0, style=solid];
m11_133 -> m11_138  [key=0, style=solid];
m11_133 -> m11_140  [key=0, style=solid];
m11_133 -> m11_142  [key=0, style=solid];
m11_133 -> m11_144  [key=0, style=solid];
m11_133 -> m11_146  [key=0, style=solid];
m11_133 -> m11_148  [key=0, style=solid];
m11_133 -> m11_150  [key=0, style=solid];
m11_135 -> m11_151  [key=0, style=solid];
m11_137 -> m11_151  [key=0, style=solid];
m11_139 -> m11_151  [key=0, style=solid];
m11_141 -> m11_151  [key=0, style=solid];
m11_143 -> m11_151  [key=0, style=solid];
m11_145 -> m11_151  [key=0, style=solid];
m11_149 -> m11_151  [key=0, style=solid];
m11_134 -> m11_135  [key=0, style=solid];
m11_136 -> m11_137  [key=0, style=solid];
m11_138 -> m11_139  [key=0, style=solid];
m11_140 -> m11_141  [key=0, style=solid];
m11_142 -> m11_143  [key=0, style=solid];
m11_144 -> m11_145  [key=0, style=solid];
m11_146 -> m11_147  [key=0, style=solid];
m11_148 -> m11_149  [key=0, style=solid];
m11_150 -> m11_151  [key=0, style=solid];
m11_150 -> m11_152  [key=2, style=dotted];
m11_147 -> m11_151  [key=0, style=solid];
m11_151 -> m11_132  [key=0, style=bold, color=blue];
m11_18 -> m11_28  [key=3, color=darkorchid, style=bold, label="Field variable T2 value"];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_16  [key=2, style=dotted];
m11_7 -> m11_17  [key=2, style=dotted];
m11_7 -> m11_18  [key=2, style=dotted];
m11_7 -> m11_19  [key=2, style=dotted];
m11_7 -> m11_20  [key=2, style=dotted];
m11_7 -> m11_6  [key=3, color=darkorchid, style=bold, label="Property variable CSharpx.Either2Type Tag"];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_4  [key=2, style=dotted];
m11_8 -> m11_21  [key=2, style=dotted];
m11_8 -> m11_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_8 -> m11_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_8 -> m11_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_8 -> m11_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_8 -> m11_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_5  [key=2, style=dotted];
m11_10 -> m11_11  [key=0, style=solid];
m11_10 -> m11_5  [key=2, style=dotted];
m11_11 -> m11_12  [key=0, style=solid];
m11_11 -> m11_5  [key=2, style=dotted];
m11_12 -> m11_13  [key=0, style=solid];
m11_12 -> m11_5  [key=2, style=dotted];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_5  [key=2, style=dotted];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_5  [key=2, style=dotted];
m11_15 -> m11_6  [key=0, style=bold, color=blue];
m11_103 -> m11_104  [key=0, style=solid];
m11_104 -> m11_105  [key=0, style=solid];
m11_104 -> m11_117  [key=2, style=dotted];
m11_104 -> m11_118  [key=2, style=dotted];
m11_104 -> m11_119  [key=2, style=dotted];
m11_104 -> m11_120  [key=2, style=dotted];
m11_104 -> m11_121  [key=2, style=dotted];
m11_104 -> m11_122  [key=2, style=dotted];
m11_104 -> m11_123  [key=2, style=dotted];
m11_104 -> m11_124  [key=2, style=dotted];
m11_104 -> m11_125  [key=2, style=dotted];
m11_104 -> m11_126  [key=2, style=dotted];
m11_104 -> m11_127  [key=2, style=dotted];
m11_104 -> m11_128  [key=2, style=dotted];
m11_104 -> m11_129  [key=2, style=dotted];
m11_104 -> m11_130  [key=2, style=dotted];
m11_104 -> m11_106  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m11_105 -> m11_106  [key=0, style=solid];
m11_105 -> m11_133  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_105 -> m11_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_105 -> m11_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_105 -> m11_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_105 -> m11_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_105 -> m11_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_105 -> m11_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_105 -> m11_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m11_106 -> m11_107  [key=0, style=solid];
m11_106 -> m11_131  [key=2, style=dotted];
m11_107 -> m11_108  [key=0, style=solid];
m11_107 -> m11_21  [key=2, style=dotted];
m11_107 -> m11_109  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_107 -> m11_110  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_107 -> m11_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_107 -> m11_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_107 -> m11_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_107 -> m11_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_107 -> m11_115  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_108 -> m11_109  [key=0, style=solid];
m11_108 -> m11_5  [key=2, style=dotted];
m11_109 -> m11_110  [key=0, style=solid];
m11_109 -> m11_5  [key=2, style=dotted];
m11_110 -> m11_111  [key=0, style=solid];
m11_110 -> m11_5  [key=2, style=dotted];
m11_111 -> m11_112  [key=0, style=solid];
m11_111 -> m11_5  [key=2, style=dotted];
m11_112 -> m11_113  [key=0, style=solid];
m11_112 -> m11_5  [key=2, style=dotted];
m11_113 -> m11_114  [key=0, style=solid];
m11_113 -> m11_5  [key=2, style=dotted];
m11_114 -> m11_115  [key=0, style=solid];
m11_114 -> m11_5  [key=2, style=dotted];
m11_115 -> m11_116  [key=0, style=solid];
m11_115 -> m11_5  [key=2, style=dotted];
m11_116 -> m11_103  [key=0, style=bold, color=blue];
m11_170 -> m11_171  [key=0, style=solid];
m11_171 -> m11_172  [key=0, style=solid];
m11_171 -> m11_117  [key=2, style=dotted];
m11_171 -> m11_118  [key=2, style=dotted];
m11_171 -> m11_129  [key=2, style=dotted];
m11_171 -> m11_130  [key=2, style=dotted];
m11_172 -> m11_173  [key=0, style=solid];
m11_172 -> m11_167  [key=2, style=dotted];
m11_173 -> m11_174  [key=0, style=solid];
m11_173 -> m11_4  [key=2, style=dotted];
m11_173 -> m11_21  [key=2, style=dotted];
m11_173 -> m11_34  [key=2, style=dotted];
m11_173 -> m11_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_173 -> m11_176  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_173 -> m11_177  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_173 -> m11_178  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_173 -> m11_179  [key=1, style=dashed, color=darkseagreen4, label=lines];
m11_174 -> m11_175  [key=0, style=solid];
m11_174 -> m11_168  [key=2, style=dotted];
m11_174 -> m11_169  [key=2, style=dotted];
m11_175 -> m11_176  [key=0, style=solid];
m11_175 -> m11_168  [key=2, style=dotted];
m11_175 -> m11_169  [key=2, style=dotted];
m11_176 -> m11_177  [key=0, style=solid];
m11_176 -> m11_5  [key=2, style=dotted];
m11_177 -> m11_178  [key=0, style=solid];
m11_177 -> m11_5  [key=2, style=dotted];
m11_178 -> m11_179  [key=0, style=solid];
m11_178 -> m11_5  [key=2, style=dotted];
m11_179 -> m11_180  [key=0, style=solid];
m11_179 -> m11_5  [key=2, style=dotted];
m11_180 -> m11_170  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid, color=green];
m12_1 -> m12_2  [key=0, style=solid, color=green];
m12_1 -> m12_3  [key=2, style=dotted, color=green];
m12_1 -> n5  [key=2, style=dotted, color=red];
m12_1 -> m12_1  [key=1, style=dashed, color=green, label=t];
m12_1 -> m12_5  [key=1, style=dashed, color=green, label="lambda expression"];
m12_1 -> m12_6  [key=1, style=dashed, color=green, label=t];
m12_1 -> m12_4  [key=2, style=dotted, color=green];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_5 -> m12_6  [key=0, style=solid, color=green];
m12_6 -> m12_7  [key=0, style=solid, color=green];
m12_6 -> m12_8  [key=2, style=dotted, color=green];
m12_7 -> m12_5  [key=0, style=bold, color=blue];
m12_9 -> m12_6  [key=1, style=dashed, color=green, label=t];
m13_34 -> m13_36  [key=0, style=solid];
m13_34 -> m13_37  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m13_34 -> m13_38  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m13_34 -> m13_40  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m13_34 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m13_34 -> m13_43  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m13_34 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="int[]"];
m13_36 -> m13_37  [key=0, style=solid];
m13_36 -> m13_38  [key=0, style=solid];
m13_37 -> m13_47  [key=0, style=solid];
m13_37 -> m13_48  [key=2, style=dotted];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_31  [key=2, style=dotted];
m13_38 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m13_38 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m13_38 -> m13_46  [key=1, style=dashed, color=darkseagreen4, label=yearsPart];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_46  [key=0, style=solid];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_48  [key=2, style=dotted];
m13_41 -> m13_32  [key=2, style=dotted];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_45  [key=0, style=solid];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_32  [key=2, style=dotted];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_39 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_39 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_39 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_35  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=next];
m13_45 -> m13_40  [key=0, style=solid];
m13_45 -> m13_45  [key=1, style=dashed, color=darkseagreen4, label=i];
m13_47 -> m13_34  [key=0, style=bold, color=blue];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_18  [key=0, style=bold, color=blue];
m13_20 -> m13_21  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_22 -> m13_20  [key=0, style=bold, color=blue];
m13_4 -> m13_5  [key=0, style=solid];
m13_4 -> m13_7  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m13_4 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label=bool];
m13_4 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_4 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="params int[]"];
m13_4 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_7  [key=0, style=solid];
m13_5 -> m13_15  [key=2, style=dotted];
m13_7 -> m13_8  [key=0, style=solid];
m13_7 -> m13_9  [key=0, style=solid];
m13_10 -> m13_11  [key=0, style=solid];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_6 -> m13_14  [key=0, style=solid];
m13_6 -> m13_16  [key=2, style=dotted];
m13_8 -> m13_14  [key=0, style=solid];
m13_8 -> m13_17  [key=2, style=dotted];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label=ExtraLength];
m13_14 -> m13_4  [key=0, style=bold, color=blue];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [key=0, style=bold, color=blue];
m13_26 -> m13_27  [key=0, style=solid];
m13_27 -> m13_28  [key=0, style=solid];
m13_27 -> m13_29  [key=0, style=solid];
m13_28 -> m13_30  [key=0, style=solid];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_31  [key=2, style=dotted];
m13_29 -> m13_32  [key=2, style=dotted];
m13_29 -> m13_33  [key=2, style=dotted];
m13_29 -> m13_34  [key=2, style=dotted];
m13_29 -> m13_35  [key=2, style=dotted];
m13_30 -> m13_26  [key=0, style=bold, color=blue];
m13_23 -> m13_24  [key=0, style=solid];
m13_24 -> m13_25  [key=0, style=solid];
m13_24 -> m13_26  [key=2, style=dotted];
m13_25 -> m13_23  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_2  [key=0, style=bold, color=blue];
m13_49 -> m13_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m13_49 -> m13_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m13_49 -> m13_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m13_49 -> m13_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m13_49 -> m13_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m13_49 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m13_49 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m13_49 -> m13_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.CopyrightInfo"];
m14_88 -> m14_89  [key=0, style=solid];
m14_89 -> m14_90  [key=0, style=solid];
m14_89 -> m14_77  [key=2, style=dotted];
m14_89 -> m14_18  [key=2, style=dotted];
m14_89 -> m14_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_90 -> m14_88  [key=0, style=bold, color=blue];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_53  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m14_51 -> m14_55  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_51 -> m14_57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m14_51 -> m14_59  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_52 -> m14_53  [key=0, style=solid];
m14_52 -> m14_16  [key=2, style=dotted];
m14_52 -> m14_55  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_52 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_52 -> m14_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_52 -> m14_63  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_53 -> m14_54  [key=0, style=solid];
m14_53 -> m14_56  [key=0, style=solid];
m14_55 -> m14_63  [key=0, style=solid];
m14_55 -> m14_65  [key=2, style=dotted];
m14_55 -> m14_66  [key=2, style=dotted];
m14_57 -> m14_58  [key=0, style=solid];
m14_57 -> m14_67  [key=2, style=dotted];
m14_57 -> m14_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m14_57 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label=sep];
m14_59 -> m14_60  [key=0, style=solid];
m14_59 -> m14_68  [key=2, style=dotted];
m14_59 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label=e];
m14_61 -> m14_60  [key=0, style=solid];
m14_61 -> m14_70  [key=2, style=dotted];
m14_61 -> m14_66  [key=2, style=dotted];
m14_61 -> m14_31  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_24  [key=2, style=dotted];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_25  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_56 -> m14_57  [key=0, style=solid];
m14_58 -> m14_59  [key=0, style=solid];
m14_58 -> m14_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_58 -> m14_61  [key=1, style=dashed, color=darkseagreen4, label=fmtWithQuotesIfStr];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_62  [key=0, style=solid];
m14_60 -> m14_69  [key=2, style=dotted];
m14_64 -> m14_51  [key=0, style=bold, color=blue];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_102 -> m14_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_102 -> m14_109  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_105  [key=0, style=solid];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_107  [key=0, style=solid];
m14_105 -> m14_15  [key=2, style=dotted];
m14_105 -> m14_113  [key=2, style=dotted];
m14_105 -> m14_114  [key=2, style=dotted];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_109  [key=0, style=solid];
m14_109 -> m14_110  [key=0, style=solid];
m14_109 -> m14_111  [key=0, style=solid];
m14_109 -> m14_68  [key=2, style=dotted];
m14_109 -> m14_69  [key=2, style=dotted];
m14_104 -> m14_112  [key=0, style=solid];
m14_106 -> m14_112  [key=0, style=solid];
m14_108 -> m14_112  [key=0, style=solid];
m14_110 -> m14_112  [key=0, style=solid];
m14_111 -> m14_112  [key=0, style=solid];
m14_112 -> m14_102  [key=0, style=bold, color=blue];
m14_94 -> m14_95  [key=0, style=solid];
m14_95 -> m14_96  [key=0, style=solid];
m14_95 -> m14_16  [key=2, style=dotted];
m14_95 -> m14_97  [key=2, style=dotted];
m14_95 -> m14_30  [key=2, style=dotted];
m14_95 -> m14_31  [key=2, style=dotted];
m14_95 -> m14_51  [key=2, style=dotted];
m14_95 -> m14_98  [key=2, style=dotted];
m14_95 -> m14_25  [key=2, style=dotted];
m14_96 -> m14_94  [key=0, style=bold, color=blue];
m14_91 -> m14_92  [key=0, style=solid];
m14_33 -> m14_34  [key=0, style=solid];
m14_33 -> m14_35  [key=2, style=dotted];
m14_33 -> m14_36  [key=2, style=dotted];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_30  [key=2, style=dotted];
m14_28 -> m14_31  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_46  [key=2, style=dotted];
m14_44 -> m14_30  [key=2, style=dotted];
m14_44 -> m14_31  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_50  [key=2, style=dotted];
m14_48 -> m14_30  [key=2, style=dotted];
m14_48 -> m14_31  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_32 -> m14_33  [key=0, style=solid];
m14_37 -> m14_38  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_43 -> m14_44  [key=0, style=solid];
m14_47 -> m14_48  [key=0, style=solid];
m14_29 -> m14_27  [key=0, style=bold, color=blue];
m14_34 -> m14_32  [key=0, style=bold, color=blue];
m14_38 -> m14_39  [key=0, style=solid];
m14_39 -> m14_37  [key=0, style=bold, color=blue];
m14_41 -> m14_42  [key=0, style=solid];
m14_42 -> m14_40  [key=0, style=bold, color=blue];
m14_45 -> m14_43  [key=0, style=bold, color=blue];
m14_49 -> m14_47  [key=0, style=bold, color=blue];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_65  [key=2, style=dotted];
m14_71 -> m14_72  [key=0, style=solid];
m14_73 -> m14_71  [key=0, style=bold, color=blue];
m14_79 -> m14_80  [key=0, style=solid];
m14_79 -> m14_81  [key=2, style=dotted];
m14_79 -> m14_82  [key=2, style=dotted];
m14_84 -> m14_85  [key=0, style=solid];
m14_84 -> m14_86  [key=2, style=dotted];
m14_84 -> m14_81  [key=2, style=dotted];
m14_84 -> m14_70  [key=2, style=dotted];
m14_84 -> m14_87  [key=2, style=dotted];
m14_83 -> m14_84  [key=0, style=solid];
m14_78 -> m14_79  [key=0, style=solid];
m14_80 -> m14_78  [key=0, style=bold, color=blue];
m14_85 -> m14_83  [key=0, style=bold, color=blue];
m14_92 -> m14_93  [key=0, style=solid];
m14_93 -> m14_91  [key=0, style=bold, color=blue];
m14_65 -> m14_74  [key=0, style=solid];
m14_65 -> m14_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m14_74 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_77  [key=2, style=dotted];
m14_75 -> m14_18  [key=2, style=dotted];
m14_75 -> m14_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_76 -> m14_65  [key=0, style=bold, color=blue];
m14_99 -> m14_100  [key=0, style=solid];
m14_100 -> m14_101  [key=0, style=solid];
m14_100 -> m14_87  [key=2, style=dotted];
m14_101 -> m14_99  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_0 -> m14_3  [key=1, style=dashed, color=darkseagreen4, label=T];
m14_0 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label=T];
m14_0 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_15  [key=2, style=dotted];
m14_3 -> m14_5  [key=1, style=dashed, color=darkseagreen4, label=type];
m14_3 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label=type];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_19  [key=2, style=dotted];
m14_6 -> m14_20  [key=2, style=dotted];
m14_6 -> m14_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_6 -> m14_6  [key=1, style=dashed, color=darkseagreen4, label=info];
m14_6 -> m14_8  [key=1, style=dashed, color=red, label=specs];
m14_2 -> m14_13  [key=0, style=solid];
m14_2 -> m14_14  [key=2, style=dotted];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_16  [key=2, style=dotted];
m14_4 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_4 -> m14_9  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_4 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_4 -> m14_10  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_4 -> m14_11  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_4 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_4 -> m14_12  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_17  [key=2, style=dotted];
m14_5 -> m14_18  [key=2, style=dotted];
m14_5 -> m14_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_23  [key=2, style=dotted];
m14_9 -> m14_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_24  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_23  [key=2, style=dotted];
m14_11 -> m14_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_25  [key=2, style=dotted];
m14_12 -> m14_26  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid, color=red];
m14_7 -> m14_21  [key=2, style=dotted];
m14_7 -> m14_22  [key=2, style=dotted];
m14_7 -> m14_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m14_7 -> m14_7  [key=1, style=dashed, color=darkseagreen4, label=info];
m14_7 -> m14_9  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m14_8 -> m14_9  [key=0, style=solid, color=red];
m14_8 -> m14_21  [key=2, style=dotted, color=red];
m14_8 -> m14_40  [key=1, style=dashed, color=red, label="lambda expression"];
m14_8 -> m14_8  [key=1, style=dashed, color=red, label=info];
m14_8 -> m14_11  [key=1, style=dashed, color=red, label=valSpecs];
m14_13 -> m14_0  [key=0, style=bold, color=blue];
m14_115 -> m14_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_115 -> m14_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_115 -> m14_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m14_116 -> m14_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m14_117 -> m14_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m14_118 -> m14_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m15_120 -> m15_121  [key=0, style=solid];
m15_121 -> m15_34  [key=2, style=dotted];
m15_121 -> m15_122  [key=0, style=solid];
m15_121 -> m15_109  [key=2, style=dotted];
m15_121 -> m15_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_122 -> m15_120  [key=0, style=bold, color=blue];
m15_82 -> m15_83  [key=0, style=solid];
m15_82 -> m15_84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m15_82 -> m15_86  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_82 -> m15_88  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m15_82 -> m15_90  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_83 -> m15_32  [key=2, style=dotted];
m15_83 -> m15_84  [key=0, style=solid];
m15_83 -> m15_86  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_83 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_83 -> m15_93  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_83 -> m15_94  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_87  [key=0, style=solid];
m15_86 -> m15_94  [key=0, style=solid];
m15_86 -> m15_96  [key=2, style=dotted];
m15_86 -> m15_97  [key=2, style=dotted];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_98  [key=2, style=dotted];
m15_88 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label=sep];
m15_88 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=sep];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_99  [key=2, style=dotted];
m15_90 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=e];
m15_94 -> m15_49  [key=2, style=dotted];
m15_94 -> m15_95  [key=0, style=solid];
m15_92 -> m15_41  [key=2, style=dotted];
m15_92 -> m15_91  [key=0, style=solid];
m15_92 -> m15_101  [key=2, style=dotted];
m15_92 -> m15_97  [key=2, style=dotted];
m15_93 -> m15_94  [key=0, style=solid];
m15_93 -> m15_102  [key=2, style=dotted];
m15_85 -> m15_86  [key=0, style=solid];
m15_87 -> m15_88  [key=0, style=solid];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_92  [key=1, style=dashed, color=darkseagreen4, label=format];
m15_89 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_93  [key=0, style=solid];
m15_91 -> m15_100  [key=2, style=dotted];
m15_95 -> m15_82  [key=0, style=bold, color=blue];
m15_131 -> m15_133  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m15_131 -> m15_132  [key=0, style=solid];
m15_133 -> m15_49  [key=2, style=dotted];
m15_133 -> m15_134  [key=0, style=solid];
m15_133 -> m15_135  [key=2, style=dotted];
m15_133 -> m15_119  [key=2, style=dotted];
m15_133 -> m15_136  [key=2, style=dotted];
m15_132 -> m15_133  [key=0, style=solid];
m15_134 -> m15_131  [key=0, style=bold, color=blue];
m15_145 -> m15_148  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_145 -> m15_150  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_145 -> m15_146  [key=0, style=solid];
m15_145 -> m15_152  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_145 -> m15_154  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_148 -> m15_31  [key=2, style=dotted];
m15_148 -> m15_149  [key=0, style=solid];
m15_148 -> m15_150  [key=0, style=solid];
m15_148 -> m15_142  [key=2, style=dotted];
m15_148 -> m15_143  [key=2, style=dotted];
m15_150 -> m15_31  [key=2, style=dotted];
m15_150 -> m15_151  [key=0, style=solid];
m15_150 -> m15_152  [key=0, style=solid];
m15_150 -> m15_158  [key=2, style=dotted];
m15_150 -> m15_159  [key=2, style=dotted];
m15_146 -> m15_148  [key=0, style=solid];
m15_146 -> m15_147  [key=0, style=solid];
m15_149 -> m15_157  [key=0, style=solid];
m15_151 -> m15_157  [key=0, style=solid];
m15_152 -> m15_153  [key=0, style=solid];
m15_152 -> m15_154  [key=0, style=solid];
m15_154 -> m15_99  [key=2, style=dotted];
m15_154 -> m15_100  [key=2, style=dotted];
m15_154 -> m15_155  [key=0, style=solid];
m15_154 -> m15_156  [key=0, style=solid];
m15_147 -> m15_157  [key=0, style=solid];
m15_153 -> m15_157  [key=0, style=solid];
m15_155 -> m15_157  [key=0, style=solid];
m15_156 -> m15_157  [key=0, style=solid];
m15_157 -> m15_145  [key=0, style=bold, color=blue];
m15_110 -> m15_111  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_58  [key=2, style=dotted];
m15_56 -> m15_59  [key=2, style=dotted];
m15_56 -> m15_60  [key=2, style=dotted];
m15_51 -> m15_52  [key=0, style=solid];
m15_61 -> m15_62  [key=0, style=solid];
m15_57 -> m15_55  [key=0, style=bold, color=blue];
m15_68 -> m15_69  [key=0, style=solid];
m15_75 -> m15_45  [key=2, style=dotted];
m15_75 -> m15_76  [key=0, style=solid];
m15_75 -> m15_77  [key=2, style=dotted];
m15_75 -> m15_41  [key=2, style=dotted];
m15_79 -> m15_45  [key=2, style=dotted];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_81  [key=2, style=dotted];
m15_79 -> m15_41  [key=2, style=dotted];
m15_52 -> m15_53  [key=0, style=solid];
m15_52 -> m15_54  [key=2, style=dotted];
m15_52 -> m15_41  [key=2, style=dotted];
m15_53 -> m15_51  [key=0, style=bold, color=blue];
m15_65 -> m15_66  [key=0, style=solid];
m15_65 -> m15_67  [key=2, style=dotted];
m15_63 -> m15_61  [key=0, style=bold, color=blue];
m15_62 -> m15_63  [key=0, style=solid];
m15_64 -> m15_65  [key=0, style=solid];
m15_71 -> m15_72  [key=0, style=solid];
m15_70 -> m15_68  [key=0, style=bold, color=blue];
m15_69 -> m15_70  [key=0, style=solid];
m15_78 -> m15_79  [key=0, style=solid];
m15_74 -> m15_75  [key=0, style=solid];
m15_76 -> m15_74  [key=0, style=bold, color=blue];
m15_80 -> m15_78  [key=0, style=bold, color=blue];
m15_104 -> m15_96  [key=2, style=dotted];
m15_104 -> m15_105  [key=0, style=solid];
m15_115 -> m15_116  [key=0, style=solid];
m15_123 -> m15_124  [key=0, style=solid];
m15_66 -> m15_64  [key=0, style=bold, color=blue];
m15_73 -> m15_71  [key=0, style=bold, color=blue];
m15_72 -> m15_73  [key=0, style=solid];
m15_103 -> m15_104  [key=0, style=solid];
m15_105 -> m15_103  [key=0, style=bold, color=blue];
m15_116 -> m15_119  [key=2, style=dotted];
m15_116 -> m15_67  [key=2, style=dotted];
m15_116 -> m15_117  [key=0, style=solid];
m15_116 -> m15_118  [key=2, style=dotted];
m15_111 -> m15_112  [key=0, style=solid];
m15_111 -> m15_113  [key=2, style=dotted];
m15_111 -> m15_114  [key=2, style=dotted];
m15_117 -> m15_115  [key=0, style=bold, color=blue];
m15_125 -> m15_123  [key=0, style=bold, color=blue];
m15_124 -> m15_125  [key=0, style=solid];
m15_112 -> m15_110  [key=0, style=bold, color=blue];
m15_96 -> m15_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_96 -> m15_106  [key=0, style=solid];
m15_107 -> m15_34  [key=2, style=dotted];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_109  [key=2, style=dotted];
m15_107 -> m15_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_106 -> m15_107  [key=0, style=solid];
m15_106 -> m15_111  [key=1, style=dashed, color=darkseagreen4, label=string];
m15_106 -> m15_116  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m15_108 -> m15_96  [key=0, style=bold, color=blue];
m15_7 -> m15_16  [key=1, style=dashed, color=green, label=T];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_11  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.UnParserSettings>"];
m15_7 -> m15_13  [key=1, style=dashed, color=darkseagreen4, label=T];
m15_7 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=T];
m15_16 -> m15_16  [key=1, style=dashed, color=green, label=info];
m15_16 -> m15_17  [key=0, style=solid, color=green];
m15_16 -> m15_35  [key=2, style=dotted, color=green];
m15_16 -> m15_36  [key=2, style=dotted, color=green];
m15_16 -> m15_37  [key=2, style=dotted, color=green];
m15_16 -> m15_55  [key=1, style=dashed, color=green, label="lambda expression"];
m15_16 -> m15_20  [key=1, style=dashed, color=green, label=specs];
m15_13 -> m15_16  [key=1, style=dashed, color=green, label=type];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_31  [key=2, style=dotted];
m15_13 -> m15_15  [key=1, style=dashed, color=darkseagreen4, label=type];
m15_15 -> m15_16  [key=0, style=solid, color=green];
m15_15 -> m15_33  [key=2, style=dotted];
m15_15 -> m15_34  [key=2, style=dotted];
m15_15 -> m15_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_17 -> m15_17  [key=1, style=dashed, color=darkseagreen4, label=info];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_38  [key=2, style=dotted];
m15_17 -> m15_39  [key=2, style=dotted];
m15_17 -> m15_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_17 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=allOptSpecs];
m15_20 -> m15_20  [key=1, style=dashed, color=darkseagreen4, label=info];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_38  [key=2, style=dotted];
m15_20 -> m15_68  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_20 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m15_20 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_10  [key=0, style=solid];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_30  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_32  [key=2, style=dotted];
m15_14 -> m15_52  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_14 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_18 -> m15_18  [key=1, style=dashed, color=darkseagreen4, label=info];
m15_18 -> m15_19  [key=0, style=solid];
m15_18 -> m15_39  [key=2, style=dotted];
m15_18 -> m15_65  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m15_18 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_38  [key=2, style=dotted];
m15_19 -> m15_64  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_19 -> m15_22  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m15_19 -> m15_23  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m15_21 -> m15_45  [key=2, style=dotted];
m15_21 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> n11  [key=2, style=dotted];
m15_21 -> m15_41  [key=2, style=dotted];
m15_21 -> m15_42  [key=2, style=dotted];
m15_21 -> m15_43  [key=2, style=dotted];
m15_21 -> m15_44  [key=2, style=dotted];
m15_21 -> m15_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_21 -> m15_23  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_21 -> m15_75  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_21 -> m15_24  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_21 -> m15_25  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_21 -> m15_79  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_21 -> m15_26  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_24 -> m15_25  [key=0, style=solid];
m15_24 -> n11  [key=2, style=dotted];
m15_24 -> m15_46  [key=2, style=dotted];
m15_24 -> m15_47  [key=2, style=dotted];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_48  [key=2, style=dotted];
m15_25 -> m15_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_26 -> m15_49  [key=2, style=dotted];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_50  [key=2, style=dotted];
m15_9 -> m15_27  [key=0, style=solid];
m15_9 -> m15_28  [key=2, style=dotted];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_12  [key=1, style=dashed, color=darkseagreen4, label=settings];
m15_10 -> m15_19  [key=1, style=dashed, color=darkseagreen4, label=settings];
m15_10 -> m15_21  [key=1, style=dashed, color=darkseagreen4, label=settings];
m15_10 -> m15_75  [key=1, style=dashed, color=darkseagreen4, label=settings];
m15_10 -> m15_29  [key=2, style=dotted];
m15_10 -> m15_23  [key=1, style=dashed, color=darkseagreen4, label=settings];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> n11  [key=2, style=dotted];
m15_22 -> m15_46  [key=2, style=dotted];
m15_22 -> m15_47  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_48  [key=2, style=dotted];
m15_23 -> m15_74  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m15_27 -> m15_7  [key=0, style=bold, color=blue];
m15_126 -> m15_127  [key=0, style=solid, color=green];
m15_127 -> m15_128  [key=0, style=solid, color=green];
m15_127 -> m15_32  [key=2, style=dotted, color=green];
m15_127 -> m15_129  [key=2, style=dotted, color=green];
m15_127 -> m15_45  [key=2, style=dotted, color=green];
m15_127 -> m15_82  [key=2, style=dotted, color=green];
m15_127 -> m15_130  [key=2, style=dotted, color=green];
m15_127 -> m15_49  [key=2, style=dotted, color=green];
m15_128 -> m15_126  [key=0, style=bold, color=blue];
m15_137 -> m15_138  [key=0, style=solid];
m15_137 -> m15_139  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_137 -> m15_140  [key=1, style=dashed, color=darkseagreen4, label=object];
m15_138 -> m15_31  [key=2, style=dotted];
m15_138 -> m15_139  [key=0, style=solid];
m15_138 -> m15_140  [key=0, style=solid];
m15_138 -> m15_142  [key=2, style=dotted];
m15_138 -> m15_143  [key=2, style=dotted];
m15_139 -> m15_141  [key=0, style=solid];
m15_139 -> m15_144  [key=2, style=dotted];
m15_140 -> m15_141  [key=0, style=solid];
m15_141 -> m15_137  [key=0, style=bold, color=blue];
m15_161 -> m15_56  [key=1, style=dashed, color=darkseagreen4, label=T];
m15_160 -> m15_75  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_160 -> m15_79  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_160 -> m15_52  [key=1, style=dashed, color=darkseagreen4, label=builder];
m15_163 -> m15_75  [key=1, style=dashed, color=darkseagreen4, label=settings];
m15_162 -> m15_65  [key=1, style=dashed, color=darkseagreen4, label=shortSwitches];
m15_164 -> m15_104  [key=1, style=dashed, color=darkseagreen4, label=sep];
m15_165 -> m15_116  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_0  [key=0, style=bold, color=blue];
}
