digraph  {
d104 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=green, community=0, label="0: current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="311-312"];
d88 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="292-292"];
d102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="string.IsNullOrEmpty(errors)", span="306-306"];
d105 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=green, community=0, label="0: var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="313-314"];
d112 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
d113 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
d74 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="336-336"];
d106 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", color=green, community=0, label="0: lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="315-316"];
d107 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="318-318"];
d115 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="251-251"];
d116 [cluster="lambda expression", label="Entry lambda expression", span="316-316"];
d117 [cluster="lambda expression", color=green, community=0, label="0: current.AddPreOptionsLine(line)", span="316-316"];
d378 [label="CommandLine.Text.HelpText", span=""];
d118 [cluster="lambda expression", label="Exit lambda expression", span="316-316"];
d101 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="302-305"];
d114 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
d199 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", color=green, community=0, label="0: var words = value.Split(new[] { ' ' })", span="488-488"];
d196 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="482-482"];
d198 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var wordBuffer = 0", span="487-487"];
d200 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var i = 0", span="489-489"];
d217 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
d201 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i < words.Length", span="489-489"];
d202 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length < (maximumLength - wordBuffer)", span="491-491"];
d203 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i])", span="493-493"];
d204 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer += words[i].Length", span="494-494"];
d205 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="495-495"];
d208 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length >= maximumLength && wordBuffer == 0", span="501-501"];
d209 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i].Substring(0, maximumLength))", span="503-503"];
d221 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=0, label="0: var specs = options.GetType().GetSpecifications(Specification.FromProperty)", span="522-522"];
d135 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="520-520"];
d222 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=1, label="2: var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() })", span="523-525"];
d226 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
d227 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
d223 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", color=green, community=1, label="2: var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="526-528"];
d375 [label="CommandLine.Text.HelpText", span=""];
d75 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
d228 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="564-564"];
d229 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="574-574"];
d230 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
d224 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="529-531"];
d231 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
d232 [cluster="lambda expression", label="Entry lambda expression", span="528-528"];
d259 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", color=green, community=2, label="1: var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="594-598"];
d250 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="591-591"];
d258 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''  '')", span="593-593"];
d260 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())", span="600-600"];
d24 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
d292 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="47-47"];
d299 [cluster="lambda expression", label="Entry lambda expression", span="597-597"];
d303 [cluster="lambda expression", label="Entry lambda expression", span="598-598"];
d300 [cluster="lambda expression", color=green, community=0, label="0: it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="597-597"];
d385 [label=int, span=""];
d386 [label="CommandLine.Core.Specification", span=""];
d301 [cluster="lambda expression", label="Exit lambda expression", span="597-597"];
d302 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="664-664"];
d182 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
d304 [cluster="lambda expression", color=green, community=0, label="1: it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="598-598"];
d305 [cluster="lambda expression", label="Exit lambda expression", span="598-598"];
d306 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="683-683"];
d86 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="274-274"];
d93 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="284-284"];
d90 [cluster="lambda expression", label="DefaultParsingErrorsHandler(pr, current)", span="281-281"];
d108 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="292-292"];
d95 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="parserResult == null", span="294-294"];
d97 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current == null", span="295-295"];
d99 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="297-297"];
d100 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="299-299"];
d103 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="308-308"];
d59 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="258-258"];
d69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var pr = new NotParsed<object>(err.Type.AutoDefault(), Enumerable.Empty<Error>())", span="280-280"];
d66 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="274-274"];
d70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current));", span="281-281"];
d71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="284-284"];
d111 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d132 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="return AddOptionsImpl(\r\n                this.GetSpecificationsFromType(options),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="360-363"];
d141 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="return AddOptionsImpl(\r\n                this.AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="377-380"];
d148 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="return AddOptionsImpl(\r\n                this.GetSpecificationsFromType(options),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="393-396"];
d155 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="return AddOptionsImpl(this.AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="411-411"];
d64 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="269-269"];
d124 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="336-336"];
d125 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="584-584"];
d123 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="338-338"];
d243 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="557-559"];
d110 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="422-422"];
d216 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="482-482"];
d255 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="AddLine(preOptionsHelp, value, maximumLength)", span="586-586"];
d330 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="AddLine(builder, value, MaximumDisplayWidth)", span="702-702"];
d197 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="484-484"];
d206 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append('' '')", span="497-497"];
d210 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer = maximumLength", span="504-504"];
d212 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="512-512"];
d213 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="513-513"];
d214 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value.Length > maximumLength", span="515-515"];
d215 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(value)", span="517-517"];
d296 [cluster="string.FormatInvariant(params object[])", label="Entry string.FormatInvariant(params object[])", span="20-20"];
d129 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="700-700"];
d270 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var wordBuffer = 0", span="624-624"];
d272 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var i = 0", span="626-626"];
d343 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var specLength = 0", span="723-723"];
d346 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var metaLength = 0", span="728-728"];
d363 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var specLength = 0", span="766-766"];
d365 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var metaLength = 0", span="770-770"];
d211 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i++", span="489-489"];
d271 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var words = optionHelpText.Split(new[] { ' ' })", span="625-625"];
d207 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer++", span="498-498"];
d218 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
d225 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType<T>(T)", span="520-520"];
d55 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="356-356"];
d145 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="389-389"];
d17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="99-99"];
d18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="100-100"];
d19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.sentenceBuilder = sentenceBuilder", span="102-102"];
d20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.heading = heading", span="103-103"];
d21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.copyright = copyright", span="104-104"];
d127 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="return AddLine(postOptionsHelp, value);", span="348-348"];
d185 [cluster="CommandLine.Text.HelpText.ToString()", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="462-474"];
d235 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { this.MakeHelpEntry(), this.MakeVersionEntry() });", span="536-543"];
d240 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var maxLength = GetMaxLength(specifications)", span="551-551"];
d241 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="553-553"];
d248 [cluster="lambda expression", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="559-559"];
d244 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="return this;", span="561-561"];
d251 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="566-571"];
d253 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="576-581"];
d256 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="return this;", span="588-588"];
d261 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''    '')", span="602-602"];
d263 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="605-605"];
d275 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i])", span="630-630"];
d278 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append('' '')", span="634-634"];
d281 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="640-640"];
d285 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="651-652"];
d287 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(optionHelpText)", span="657-657"];
d288 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(Environment.NewLine)", span="658-658"];
d289 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="659-659"];
d290 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="return this;", span="661-661"];
d309 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendWhen(addDashesToOption, '-')", span="669-669"];
d314 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendWhen(addDashesToOption, ''--'')", span="676-676"];
d331 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="return this;", span="704-704"];
d333 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="709-717"];
d337 [cluster="lambda expression", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? this.GetMaxOptionLength((OptionSpecification)spec)\r\n                            : this.GetMaxValueLength((ValueSpecification)spec)", span="712-714"];
d351 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="737-737"];
d356 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="748-748"];
d67 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="277-277"];
d164 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))", span="448-450"];
d252 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="564-564"];
d254 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="574-574"];
d44 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
d234 [cluster="lambda expression", label="Exit lambda expression", span="528-528"];
d233 [cluster="lambda expression", label="v.Index", span="528-528"];
d291 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="591-591"];
d262 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var optionHelpText = specification.HelpText", span="603-603"];
d264 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="607-607"];
d265 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.DefaultValue.IsJust()", span="610-610"];
d266 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(specification.DefaultValue.FromJust()) + optionHelpText", span="612-612"];
d267 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.Required", span="615-615"];
d268 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="617-617"];
d274 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="628-628"];
d277 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="632-632"];
d280 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="638-638"];
d282 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer = widthOfHelpText", span="641-641"];
d286 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText.Length > widthOfHelpText", span="654-654"];
d242 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var remainingSpace = maximumLength - (maxLength + 6)", span="555-555"];
d171 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
d293 [cluster="string.PadRight(int)", label="Entry string.PadRight(int)", span="0-0"];
d307 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="var optionName = new StringBuilder(maxLength)", span="666-666"];
d322 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="var valueName = new StringBuilder(maxLength)", span="685-685"];
d318 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="664-664"];
d308 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="specification.ShortName.Length > 0", span="667-667"];
d310 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormat(''{0}'', specification.ShortName)", span="670-670"];
d311 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)", span="671-671"];
d312 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendWhen(specification.LongName.Length > 0, '', '')", span="672-672"];
d313 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="specification.LongName.Length > 0", span="674-674"];
d315 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormat(''{0}'', specification.LongName)", span="677-677"];
d316 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="optionName.AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="678-678"];
d176 [cluster="lambda expression", label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="443-444"];
d328 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="683-683"];
d323 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="specification.MetaName.Length > 0", span="687-687"];
d324 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="valueName.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="689-689"];
d325 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="valueName.AppendFormat(''value pos. {0}'', specification.Index)", span="693-693"];
d326 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="valueName.AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)", span="695-695"];
d376 [label="CommandLine.ParserResult<T>", span=""];
d85 [cluster="lambda expression", label="Entry lambda expression", span="274-274"];
d87 [cluster="lambda expression", label="Exit lambda expression", span="274-274"];
d92 [cluster="lambda expression", label="Entry lambda expression", span="284-284"];
d94 [cluster="lambda expression", label="Exit lambda expression", span="284-284"];
d377 [label=pr, span=""];
d89 [cluster="lambda expression", label="Entry lambda expression", span="281-281"];
d91 [cluster="lambda expression", label="Exit lambda expression", span="281-281"];
d96 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''parserResult'');", span="294-294"];
d98 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''current'');", span="295-295"];
d45 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="477-477"];
d109 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
d72 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="258-258"];
d60 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="parserResult.Tag != ParserResultType.NotParsed", span="260-260"];
d62 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
d25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="199-199"];
d68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="err.Matched", span="278-278"];
d77 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
d78 [cluster="System.Type.AutoDefault()", label="Entry System.Type.AutoDefault()", span="138-138"];
d65 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="272-272"];
d269 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="!string.IsNullOrEmpty(optionHelpText)", span="620-620"];
d130 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="Equals(options, default(T))", span="358-358"];
d133 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(T)", span="356-356"];
d136 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="546-546"];
d54 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="372-372"];
d139 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types.Length == 0", span="375-375"];
d142 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="372-372"];
d144 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="534-534"];
d146 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="Equals(options, default(T))", span="391-391"];
d149 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, T)", span="389-389"];
d150 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="406-406"];
d153 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types.Length == 0", span="409-409"];
d156 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="406-406"];
d63 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
d4 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
d257 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="584-584"];
d247 [cluster="lambda expression", label="Entry lambda expression", span="558-559"];
d166 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="422-422"];
d157 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="parserResult == null", span="428-428"];
d159 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="430-431"];
d163 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="438-446"];
d189 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
d219 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
d220 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
d126 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="346-346"];
d332 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="700-700"];
d319 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="21-21"];
d276 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer += words[i].Length", span="631-631"];
d284 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="650-650"];
d273 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i < words.Length", span="626-626"];
d283 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i++", span="626-626"];
d340 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="721-721"];
d344 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasShort = spec.ShortName.Length > 0", span="725-725"];
d350 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="736-736"];
d355 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += spec.LongName.Length", span="747-747"];
d360 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="758-758"];
d361 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="return specLength;", span="761-761"];
d345 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasLong = spec.LongName.Length > 0", span="726-726"];
d347 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="spec.MetaValue.Length > 0", span="729-729"];
d353 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="742-742"];
d358 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="753-753"];
d341 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="764-764"];
d364 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var hasMeta = spec.MetaName.Length > 0", span="768-768"];
d369 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="778-778"];
d370 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="782-782"];
d366 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="spec.MetaValue.Length > 0", span="771-771"];
d371 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += metaLength", span="785-785"];
d41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddOptions(parserResult.Value)", span="242-242"];
d15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="copyright == null", span="97-97"];
d10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
d22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
d128 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="346-346"];
d184 [cluster="CommandLine.Text.HelpText.ToString()", label="int ExtraLength = 10", span="461-461"];
d186 [cluster="CommandLine.Text.HelpText.ToString()", label="Exit CommandLine.Text.HelpText.ToString()", span="459-459"];
d187 [cluster="string.SafeLength()", label="Entry string.SafeLength()", span="40-40"];
d188 [cluster="System.Text.StringBuilder.SafeLength()", label="Entry System.Text.StringBuilder.SafeLength()", span="70-70"];
d190 [cluster="System.Text.StringBuilder.SafeToString()", label="Entry System.Text.StringBuilder.SafeToString()", span="65-65"];
d236 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="534-534"];
d237 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
d238 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
d239 [cluster="Unk.Concat", label="Entry Unk.Concat", span=""];
d246 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="707-707"];
d382 [label=string, span=""];
d383 [label=maxLength, span=""];
d384 [label=remainingSpace, span=""];
d249 [cluster="lambda expression", label="Exit lambda expression", span="558-559"];
d245 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="546-546"];
d47 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
d46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d279 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer++", span="635-635"];
d298 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d334 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="707-707"];
d335 [cluster="Unk.Aggregate", label="Entry Unk.Aggregate", span=""];
d336 [cluster="lambda expression", label="Entry lambda expression", span="710-717"];
d338 [cluster="lambda expression", label="return Math.Max(length, specLength);", span="716-716"];
d352 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="739-739"];
d357 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="750-750"];
d76 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
d162 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var text = new StringBuilder()", span="437-437"];
d165 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return text.ToString();", span="452-452"];
d170 [cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="53-53"];
d27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var errors = Enumerable.Empty<Error>()", span="211-211"];
d294 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
d49 [cluster="CSharpx.Maybe<T>.IsJust<T>()", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175"];
d50 [cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160"];
d295 [cluster="string.FormatLocal(params object[])", label="Entry string.FormatLocal(params object[])", span="25-25"];
d177 [cluster="lambda expression", label="text.AppendLine(line.ToString())", span="445-445"];
d317 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="return optionName.ToString();", span="680-680"];
d327 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="return valueName.ToString();", span="697-697"];
d320 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
d321 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="33-33"];
d379 [label="System.Func<CommandLine.Error, string>", span=""];
d380 [label=int, span=""];
d175 [cluster="lambda expression", label="Entry lambda expression", span="441-446"];
d179 [cluster="System.Text.StringBuilder.StringBuilder(string)", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
d180 [cluster="int.Spaces()", label="Entry int.Spaces()", span="30-30"];
d181 [cluster="Unk.formatError", label="Entry Unk.formatError", span=""];
d329 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
d23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="FilterMeaningfulErrors(errors).Any()", span="217-217"];
d192 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="477-477"];
d191 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="479-479"];
d160 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors.Empty()", span="432-432"];
d61 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="throw new InvalidOperationException();", span="262-262"];
d43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="199-199"];
d26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="204-209"];
d28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="213-213"];
d29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="errors = ((NotParsed<T>)parserResult).Errors", span="215-215"];
d31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto = onError(auto)", span="219-219"];
d38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="(verbsIndex && parserResult.VerbTypes.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="235-235"];
d40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddVerbs(parserResult.VerbTypes.ToArray())", span="238-238"];
d52 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
d82 [cluster="lambda expression", label="Entry lambda expression", span="272-272"];
d131 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", label="throw new ArgumentNullException(''options'');", span="358-358"];
d134 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
d137 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types == null", span="374-374"];
d140 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="375-375"];
d138 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentNullException(''types'');", span="374-374"];
d147 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, T)", label="throw new ArgumentNullException(''options'');", span="391-391"];
d151 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types == null", span="408-408"];
d154 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="409-409"];
d152 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentNullException(''types'');", span="408-408"];
d79 [cluster="lambda expression", label="Entry lambda expression", span="267-267"];
d5 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
d158 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="throw new ArgumentNullException(''parserResult'');", span="428-428"];
d161 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return string.Empty;", span="434-434"];
d168 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
d169 [cluster="Unk.ForEach", label="Entry Unk.ForEach", span=""];
d172 [cluster="lambda expression", label="Entry lambda expression", span="439-439"];
d297 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
d362 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="721-721"];
d348 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="731-731"];
d349 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasShort, span="734-734"];
d359 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="hasShort && hasLong", span="756-756"];
d354 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasLong, span="745-745"];
d373 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="764-764"];
d367 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="773-773"];
d368 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label=hasMeta, span="776-776"];
d374 [cluster="T.ToStringInvariant<T>()", label="Entry T.ToStringInvariant<T>()", span="15-15"];
d372 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="return specLength;", span="787-787"];
d42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="return auto;", span="245-245"];
d13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="heading == null", span="96-96"];
d16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''copyright'');", span="97-97"];
d11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="sentenceBuilder == null", span="95-95"];
d12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''sentenceBuilder'');", span="95-95"];
d14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''heading'');", span="96-96"];
d122 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="459-459"];
d339 [cluster="lambda expression", label="Exit lambda expression", span="710-717"];
d342 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
d167 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
d33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="license.IsJust()", span="224-224"];
d36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="usage.IsJust()", span="230-230"];
d34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="license.FromJust().AddToHelpText(auto, true)", span="226-226"];
d37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="usage.FromJust().AddToHelpText(auto, true)", span="232-232"];
d381 [label=text, span=""];
d178 [cluster="lambda expression", label="Exit lambda expression", span="441-446"];
d183 [cluster="System.Text.StringBuilder.AppendLine(string)", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
d32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var license = ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()", span="223-223"];
d193 [cluster="lambda expression", label="Entry lambda expression", span="479-479"];
d73 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
d0 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="34-34"];
d39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddDashesToOption = false", span="237-237"];
d56 [cluster="lambda expression", label="Entry lambda expression", span="235-235"];
d53 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
d84 [cluster="lambda expression", label="Exit lambda expression", span="272-272"];
d83 [cluster="lambda expression", label="e.Tag == ErrorType.HelpVerbRequestedError", span="272-272"];
d143 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
d81 [cluster="lambda expression", label="Exit lambda expression", span="267-267"];
d80 [cluster="lambda expression", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
d174 [cluster="lambda expression", label="Exit lambda expression", span="439-439"];
d173 [cluster="lambda expression", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="439-439"];
d119 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="326-326"];
d120 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="return info.ToString();", span="328-328"];
d35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var usage = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="229-229"];
d51 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
d48 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
d195 [cluster="lambda expression", label="Exit lambda expression", span="479-479"];
d194 [cluster="lambda expression", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="479-479"];
d1 [cluster="CommandLine.Text.HelpText.HelpText()", label="Exit CommandLine.Text.HelpText.HelpText()", span="34-34"];
d58 [cluster="lambda expression", label="Exit lambda expression", span="235-235"];
d57 [cluster="lambda expression", label="e.Tag == ErrorType.NoVerbSelectedError", span="235-235"];
d121 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="326-326"];
m0_14 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33"];
m0_15 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label=condition, span="35-35"];
m0_16 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="builder.AppendFormat(format, args)", span="37-37"];
m0_17 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="return builder;", span="39-39"];
m0_18 [cluster="CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="33-33"];
m0_19 [cluster="System.Text.StringBuilder.AppendFormat(string, params object[])", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, params object[])", span="0-0"];
m0_13 [cluster="System.Text.StringBuilder.Append(char)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_33 [cluster="CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="64-64"];
m0_34 [cluster="CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="return builder == null ? 0 : builder.Length;", span="66-66"];
m0_35 [cluster="CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="64-64"];
m0_7 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="21-21"];
m0_8 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label=condition, span="23-23"];
m0_9 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label=values, span="25-25"];
m0_10 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="27-27"];
m0_11 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="return builder;", span="30-30"];
m0_12 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="21-21"];
m0_0 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m0_1 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label=condition, span="11-11"];
m0_2 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label=values, span="13-13"];
m0_3 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="15-15"];
m0_4 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="return builder;", span="18-18"];
m0_5 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m0_20 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="42-42"];
m0_21 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="return condition ? builder.Append(ifTrue) : builder.Append(ifFalse);", span="44-44"];
m0_22 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="42-42"];
m0_23 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="47-47"];
m0_24 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label=values, span="49-49"];
m0_26 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="53-53"];
m0_27 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="return builder;", span="56-56"];
m0_25 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="value.Length > 0", span="51-51"];
m0_28 [cluster="CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="47-47"];
m0_6 [cluster="System.Text.StringBuilder.Append(string)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_29 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="59-59"];
m0_30 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="return builder == null ? string.Empty : builder.ToString();", span="61-61"];
m0_31 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="59-59"];
d104 -> d105  [color=green, key=0, style=solid];
d104 -> d112  [color=green, key=2, style=dotted];
d104 -> d113  [color=green, key=2, style=dotted];
d104 -> d74  [color=green, key=2, style=dotted];
d88 -> d104  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d88 -> d106  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d88 -> d117  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d88 -> d88  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler", style=bold];
d88 -> d95  [key=0, style=solid];
d88 -> d97  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d88 -> d99  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d88 -> d100  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d88 -> d101  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d88 -> d103  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d88 -> d107  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d88 -> d59  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
d88 -> d69  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
d88 -> d66  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
d88 -> d70  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
d88 -> d71  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
d102 -> d104  [color=green, key=0, style=solid];
d102 -> d103  [key=0, style=solid];
d102 -> d111  [key=2, style=dotted];
d105 -> d106  [color=green, key=0, style=solid];
d105 -> d114  [color=green, key=2, style=dotted];
d74 -> d106  [color=green, key=3, label="Parameter variable string value", style=bold];
d74 -> d123  [key=0, style=solid];
d74 -> d125  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine", style=bold];
d106 -> d107  [color=green, key=0, style=solid];
d106 -> d115  [color=green, key=2, style=dotted];
d106 -> d116  [color=green, key=1, label="lambda expression", style=dashed];
d107 -> d108  [key=0, style=solid];
d116 -> d117  [color=green, key=0, style=solid];
d117 -> d118  [color=green, key=0, style=solid];
d117 -> d74  [color=green, key=2, style=dotted];
d378 -> d117  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d118 -> d116  [color=blue, key=0, style=bold];
d101 -> d105  [color=green, key=1, label=errors, style=dashed];
d101 -> d102  [key=0, style=solid];
d101 -> d110  [key=2, style=dotted];
d199 -> d200  [color=green, key=0, style=solid];
d199 -> d217  [color=green, key=2, style=dotted];
d199 -> d201  [color=green, key=1, label=words, style=dashed];
d199 -> d202  [color=green, key=1, label=words, style=dashed];
d199 -> d203  [color=green, key=1, label=words, style=dashed];
d199 -> d204  [color=green, key=1, label=words, style=dashed];
d199 -> d205  [color=green, key=1, label=words, style=dashed];
d199 -> d208  [color=green, key=1, label=words, style=dashed];
d199 -> d209  [color=green, key=1, label=words, style=dashed];
d196 -> d199  [color=green, key=1, label=string, style=dashed];
d196 -> d197  [key=0, style=solid];
d196 -> d202  [color=darkseagreen4, key=1, label=int, style=dashed];
d196 -> d203  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d196 -> d205  [color=darkseagreen4, key=1, label=int, style=dashed];
d196 -> d206  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d196 -> d208  [color=darkseagreen4, key=1, label=int, style=dashed];
d196 -> d209  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d196 -> d210  [color=darkseagreen4, key=1, label=int, style=dashed];
d196 -> d212  [color=darkseagreen4, key=1, label=string, style=dashed];
d196 -> d213  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d196 -> d214  [color=darkseagreen4, key=1, label=int, style=dashed];
d196 -> d215  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
d196 -> d296  [color=darkorchid, key=3, label="Parameter variable System.Text.StringBuilder builder", style=bold];
d196 -> d129  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d196 -> d125  [color=darkorchid, key=3, label="Parameter variable int maximumLength", style=bold];
d198 -> d199  [color=green, key=0, style=solid];
d198 -> d196  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d198 -> d198  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d198 -> d202  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d198 -> d204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d198 -> d208  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d198 -> d212  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d200 -> d198  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d200 -> d201  [key=0, style=solid];
d200 -> d202  [color=darkseagreen4, key=1, label=i, style=dashed];
d200 -> d203  [color=darkseagreen4, key=1, label=i, style=dashed];
d200 -> d204  [color=darkseagreen4, key=1, label=i, style=dashed];
d200 -> d205  [color=darkseagreen4, key=1, label=i, style=dashed];
d200 -> d208  [color=darkseagreen4, key=1, label=i, style=dashed];
d200 -> d209  [color=darkseagreen4, key=1, label=i, style=dashed];
d200 -> d211  [color=darkseagreen4, key=1, label=i, style=dashed];
d201 -> d202  [key=0, style=solid];
d201 -> d212  [key=0, style=solid];
d202 -> d203  [key=0, style=solid];
d202 -> d208  [key=0, style=solid];
d203 -> d204  [key=0, style=solid];
d203 -> d182  [key=2, style=dotted];
d204 -> d204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d204 -> d205  [key=0, style=solid];
d204 -> d207  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d204 -> d212  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d205 -> d206  [key=0, style=solid];
d205 -> d211  [key=0, style=solid];
d208 -> d209  [key=0, style=solid];
d208 -> d212  [key=0, style=solid];
d209 -> d210  [key=0, style=solid];
d209 -> d218  [key=2, style=dotted];
d209 -> d182  [key=2, style=dotted];
d221 -> d222  [color=green, key=0, style=solid];
d221 -> d226  [color=green, key=2, style=dotted];
d221 -> d227  [color=green, key=2, style=dotted];
d221 -> d223  [color=green, key=1, label=specs, style=dashed];
d135 -> d221  [color=green, key=0, style=solid];
d135 -> d55  [color=darkorchid, key=3, label="Parameter variable T options", style=bold];
d135 -> d145  [color=darkorchid, key=3, label="Parameter variable T options", style=bold];
d222 -> d223  [color=green, key=0, style=solid];
d222 -> d75  [color=green, key=2, style=dotted];
d222 -> d228  [color=green, key=2, style=dotted];
d222 -> d229  [color=green, key=2, style=dotted];
d222 -> d230  [color=green, key=2, style=dotted];
d222 -> d224  [color=green, key=1, label=optionSpecs, style=dashed];
d223 -> d224  [color=green, key=0, style=solid];
d223 -> d75  [color=green, key=2, style=dotted];
d223 -> d231  [color=green, key=2, style=dotted];
d223 -> d232  [color=green, key=1, label="lambda expression", style=dashed];
d375 -> d222  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d259  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d300  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d304  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d17  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d18  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d19  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d132  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d141  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d148  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d185  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d235  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d240  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d241  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d243  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d248  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d244  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d251  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d253  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d255  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d256  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d258  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d260  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d261  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d263  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d275  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d278  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d281  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d285  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d287  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d288  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d289  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d290  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d309  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d314  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d330  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d331  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d333  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d337  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d351  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d375 -> d356  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
d228 -> d251  [key=0, style=solid];
d229 -> d253  [key=0, style=solid];
d224 -> d230  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d224 -> d44  [key=2, style=dotted];
d232 -> d233  [key=0, style=solid];
d259 -> d260  [color=green, key=0, style=solid];
d259 -> d24  [color=green, key=2, style=dotted];
d259 -> d292  [color=green, key=2, style=dotted];
d259 -> d299  [color=green, key=1, label="lambda expression", style=dashed];
d259 -> d303  [color=green, key=1, label="lambda expression", style=dashed];
d250 -> d259  [color=green, key=1, label=int, style=dashed];
d250 -> d300  [color=green, key=1, label=int, style=dashed];
d250 -> d304  [color=green, key=1, label=int, style=dashed];
d250 -> d258  [key=0, style=solid];
d250 -> d260  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d262  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d250 -> d263  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d250 -> d264  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d250 -> d265  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d250 -> d266  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d250 -> d267  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
d250 -> d268  [color=darkseagreen4, key=1, label=string, style=dashed];
d250 -> d274  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d277  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d280  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d281  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d282  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d285  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d286  [color=darkseagreen4, key=1, label=int, style=dashed];
d250 -> d240  [color=darkorchid, key=3, label="Parameter variable int maxLength", style=bold];
d250 -> d243  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.Specification specification", style=bold];
d250 -> d242  [color=darkorchid, key=3, label="Parameter variable int widthOfHelpText", style=bold];
d258 -> d259  [color=green, key=0, style=solid];
d258 -> d182  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d260 -> d171  [key=2, style=dotted];
d260 -> d293  [key=2, style=dotted];
d260 -> d182  [key=2, style=dotted];
d299 -> d300  [color=green, key=0, style=solid];
d303 -> d304  [color=green, key=0, style=solid];
d300 -> d301  [color=green, key=0, style=solid];
d300 -> d302  [color=green, key=2, style=dotted];
d300 -> d182  [color=green, key=2, style=dotted];
d385 -> d300  [color=green, key=1, label=int, style=dashed];
d385 -> d304  [color=green, key=1, label=int, style=dashed];
d386 -> d300  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
d386 -> d304  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
d301 -> d299  [color=blue, key=0, style=bold];
d302 -> d250  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.OptionSpecification specification", style=bold];
d302 -> d307  [key=0, style=solid];
d302 -> d308  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d302 -> d310  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d302 -> d311  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d302 -> d312  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d302 -> d313  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d302 -> d315  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d302 -> d316  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d304 -> d305  [color=green, key=0, style=solid];
d304 -> d306  [color=green, key=2, style=dotted];
d304 -> d182  [color=green, key=2, style=dotted];
d305 -> d303  [color=blue, key=0, style=bold];
d306 -> d250  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.ValueSpecification specification", style=bold];
d306 -> d322  [key=0, style=solid];
d306 -> d323  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d306 -> d324  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d306 -> d325  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d306 -> d326  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d86 -> d88  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d93 -> d88  [key=2, style=dotted];
d93 -> d94  [key=0, style=solid];
d90 -> d88  [key=2, style=dotted];
d90 -> d91  [key=0, style=solid];
d108 -> d88  [color=blue, key=0, style=bold];
d95 -> d96  [key=0, style=solid];
d95 -> d97  [key=0, style=solid];
d97 -> d98  [key=0, style=solid];
d97 -> d99  [key=0, style=solid];
d99 -> d101  [key=0, style=solid];
d99 -> d100  [key=0, style=solid];
d99 -> d45  [key=2, style=dotted];
d99 -> d109  [key=2, style=dotted];
d100 -> d108  [key=0, style=solid];
d103 -> d108  [key=0, style=solid];
d59 -> d74  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
d59 -> d86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d59 -> d93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d59 -> d60  [key=0, style=solid];
d59 -> d62  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d59 -> d66  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d59 -> d71  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d59 -> d25  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
d69 -> d90  [color=darkseagreen4, key=1, label=pr, style=dashed];
d69 -> d70  [key=0, style=solid];
d69 -> d77  [key=2, style=dotted];
d69 -> d78  [key=2, style=dotted];
d69 -> d44  [key=2, style=dotted];
d66 -> d72  [key=0, style=solid];
d66 -> d25  [key=2, style=dotted];
d66 -> d85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d70 -> d72  [key=0, style=solid];
d70 -> d25  [key=2, style=dotted];
d70 -> d89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d71 -> d72  [key=0, style=solid];
d71 -> d25  [key=2, style=dotted];
d71 -> d92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d132 -> d112  [key=2, style=dotted];
d132 -> d135  [key=2, style=dotted];
d132 -> d133  [key=0, style=solid];
d132 -> d136  [key=2, style=dotted];
d141 -> d112  [key=2, style=dotted];
d141 -> d142  [key=0, style=solid];
d141 -> d144  [key=2, style=dotted];
d141 -> d136  [key=2, style=dotted];
d148 -> d112  [key=2, style=dotted];
d148 -> d135  [key=2, style=dotted];
d148 -> d149  [key=0, style=solid];
d148 -> d136  [key=2, style=dotted];
d155 -> d112  [key=2, style=dotted];
d155 -> d156  [key=0, style=solid];
d155 -> d144  [key=2, style=dotted];
d155 -> d136  [key=2, style=dotted];
d64 -> d74  [key=2, style=dotted];
d64 -> d72  [key=0, style=solid];
d64 -> d4  [key=2, style=dotted];
d124 -> d74  [color=blue, key=0, style=bold];
d125 -> d74  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d125 -> d255  [key=0, style=solid];
d123 -> d124  [key=0, style=solid];
d123 -> d125  [key=2, style=dotted];
d243 -> d115  [key=2, style=dotted];
d243 -> d244  [key=0, style=solid];
d243 -> d247  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d110 -> d157  [key=0, style=solid];
d110 -> d159  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d110 -> d163  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
d110 -> d176  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
d110 -> d164  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
d216 -> d196  [color=blue, key=0, style=bold];
d255 -> d196  [key=2, style=dotted];
d255 -> d256  [key=0, style=solid];
d330 -> d196  [key=2, style=dotted];
d330 -> d331  [key=0, style=solid];
d197 -> d198  [key=0, style=solid];
d197 -> d189  [key=2, style=dotted];
d206 -> d182  [key=2, style=dotted];
d206 -> d207  [key=0, style=solid];
d210 -> d212  [key=0, style=solid];
d212 -> d212  [color=darkseagreen4, key=1, label=string, style=dashed];
d212 -> d213  [key=0, style=solid];
d212 -> d219  [key=2, style=dotted];
d212 -> d220  [key=2, style=dotted];
d212 -> d214  [color=darkseagreen4, key=1, label=string, style=dashed];
d212 -> d215  [color=darkseagreen4, key=1, label=string, style=dashed];
d213 -> d214  [key=0, style=solid];
d213 -> d189  [key=2, style=dotted];
d214 -> d197  [key=0, style=solid];
d214 -> d215  [key=0, style=solid];
d215 -> d182  [key=2, style=dotted];
d215 -> d216  [key=0, style=solid];
d129 -> d330  [key=0, style=solid];
d129 -> d319  [color=darkorchid, key=3, label="Parameter variable System.Text.StringBuilder builder", style=bold];
d129 -> d126  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d270 -> d198  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d270 -> d250  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
d270 -> d271  [key=0, style=solid];
d270 -> d274  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d270 -> d276  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d270 -> d280  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d270 -> d284  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d272 -> d198  [color=darkorchid, key=3, label="Local variable int i", style=bold];
d272 -> d273  [key=0, style=solid];
d272 -> d274  [color=darkseagreen4, key=1, label=i, style=dashed];
d272 -> d275  [color=darkseagreen4, key=1, label=i, style=dashed];
d272 -> d276  [color=darkseagreen4, key=1, label=i, style=dashed];
d272 -> d277  [color=darkseagreen4, key=1, label=i, style=dashed];
d272 -> d280  [color=darkseagreen4, key=1, label=i, style=dashed];
d272 -> d281  [color=darkseagreen4, key=1, label=i, style=dashed];
d272 -> d283  [color=darkseagreen4, key=1, label=i, style=dashed];
d343 -> d198  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d343 -> d344  [key=0, style=solid];
d343 -> d350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d343 -> d355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d343 -> d360  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d343 -> d361  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d343 -> d346  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d346 -> d198  [color=darkorchid, key=3, label="Local variable int metaLength", style=bold];
d346 -> d347  [key=0, style=solid];
d346 -> d353  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d346 -> d358  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d363 -> d198  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d363 -> d364  [key=0, style=solid];
d363 -> d369  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d363 -> d370  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d363 -> d365  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
d365 -> d198  [color=darkorchid, key=3, label="Local variable int metaLength", style=bold];
d365 -> d366  [key=0, style=solid];
d365 -> d371  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d211 -> d201  [key=0, style=solid];
d211 -> d211  [color=darkseagreen4, key=1, label=i, style=dashed];
d271 -> d217  [key=2, style=dotted];
d271 -> d272  [key=0, style=solid];
d271 -> d273  [color=darkseagreen4, key=1, label=words, style=dashed];
d271 -> d274  [color=darkseagreen4, key=1, label=words, style=dashed];
d271 -> d275  [color=darkseagreen4, key=1, label=words, style=dashed];
d271 -> d276  [color=darkseagreen4, key=1, label=words, style=dashed];
d271 -> d277  [color=darkseagreen4, key=1, label=words, style=dashed];
d271 -> d280  [color=darkseagreen4, key=1, label=words, style=dashed];
d271 -> d281  [color=darkseagreen4, key=1, label=words, style=dashed];
d207 -> d212  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d207 -> d211  [key=0, style=solid];
d207 -> d207  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d225 -> d135  [color=blue, key=0, style=bold];
d55 -> d132  [color=darkseagreen4, key=1, label=T, style=dashed];
d55 -> d130  [key=0, style=solid];
d55 -> d136  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
d145 -> d148  [color=darkseagreen4, key=1, label=int, style=dashed];
d145 -> d146  [key=0, style=solid];
d145 -> d136  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
d17 -> d24  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d18 -> d24  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d127 -> d129  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d185 -> d24  [key=2, style=dotted];
d185 -> d182  [key=2, style=dotted];
d185 -> d111  [key=2, style=dotted];
d185 -> d186  [key=0, style=solid];
d185 -> d187  [key=2, style=dotted];
d185 -> d188  [key=2, style=dotted];
d185 -> d189  [key=2, style=dotted];
d185 -> d171  [key=2, style=dotted];
d185 -> d190  [key=2, style=dotted];
d235 -> d228  [key=2, style=dotted];
d235 -> d229  [key=2, style=dotted];
d235 -> d235  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
d235 -> d236  [key=0, style=solid];
d235 -> d237  [key=2, style=dotted];
d235 -> d238  [key=2, style=dotted];
d235 -> d239  [key=2, style=dotted];
d240 -> d243  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d240 -> d241  [key=0, style=solid];
d240 -> d246  [key=2, style=dotted];
d240 -> d242  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d240 -> d248  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d241 -> d24  [key=2, style=dotted];
d241 -> d242  [key=0, style=solid];
d248 -> d250  [key=2, style=dotted];
d248 -> d249  [key=0, style=solid];
d244 -> d245  [key=0, style=solid];
d251 -> d252  [key=0, style=solid];
d251 -> d47  [key=2, style=dotted];
d251 -> d238  [key=2, style=dotted];
d253 -> d254  [key=0, style=solid];
d253 -> d47  [key=2, style=dotted];
d253 -> d238  [key=2, style=dotted];
d256 -> d257  [key=0, style=solid];
d261 -> d182  [key=2, style=dotted];
d261 -> d262  [key=0, style=solid];
d263 -> d264  [key=0, style=solid];
d263 -> d265  [key=0, style=solid];
d263 -> d46  [key=2, style=dotted];
d275 -> d182  [key=2, style=dotted];
d275 -> d276  [key=0, style=solid];
d278 -> d182  [key=2, style=dotted];
d278 -> d279  [key=0, style=solid];
d281 -> d182  [key=2, style=dotted];
d281 -> d218  [key=2, style=dotted];
d281 -> d282  [key=0, style=solid];
d285 -> d286  [key=0, style=solid];
d285 -> d298  [key=2, style=dotted];
d285 -> d189  [key=2, style=dotted];
d287 -> d182  [key=2, style=dotted];
d287 -> d288  [key=0, style=solid];
d288 -> d182  [key=2, style=dotted];
d288 -> d289  [key=0, style=solid];
d289 -> d290  [key=0, style=solid];
d289 -> d189  [key=2, style=dotted];
d290 -> d291  [key=0, style=solid];
d309 -> d310  [key=0, style=solid];
d309 -> d319  [key=2, style=dotted];
d314 -> d315  [key=0, style=solid];
d314 -> d189  [key=2, style=dotted];
d331 -> d332  [key=0, style=solid];
d333 -> d334  [key=0, style=solid];
d333 -> d335  [key=2, style=dotted];
d333 -> d336  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d337 -> d338  [key=0, style=solid];
d337 -> d340  [key=2, style=dotted];
d337 -> d341  [key=2, style=dotted];
d351 -> d352  [key=0, style=solid];
d351 -> d353  [key=0, style=solid];
d356 -> d357  [key=0, style=solid];
d356 -> d358  [key=0, style=solid];
d67 -> d75  [key=2, style=dotted];
d67 -> d69  [color=darkseagreen4, key=1, label=err, style=dashed];
d67 -> d68  [key=0, style=solid];
d67 -> d76  [key=2, style=dotted];
d164 -> d75  [key=2, style=dotted];
d164 -> d165  [key=0, style=solid];
d164 -> d47  [key=2, style=dotted];
d164 -> d170  [key=2, style=dotted];
d252 -> d228  [color=blue, key=0, style=bold];
d254 -> d229  [color=blue, key=0, style=bold];
d234 -> d232  [color=blue, key=0, style=bold];
d233 -> d234  [key=0, style=solid];
d291 -> d250  [color=blue, key=0, style=bold];
d262 -> d271  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d262 -> d263  [key=0, style=solid];
d262 -> d287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d262 -> d264  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d262 -> d266  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d262 -> d268  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d262 -> d269  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d262 -> d284  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d264 -> d271  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d264 -> d287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d264 -> d264  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d264 -> d265  [key=0, style=solid];
d264 -> d294  [key=2, style=dotted];
d264 -> d266  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d264 -> d268  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d264 -> d269  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d264 -> d284  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d265 -> d266  [key=0, style=solid];
d265 -> d267  [key=0, style=solid];
d265 -> d49  [key=2, style=dotted];
d266 -> d271  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d266 -> d287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d266 -> d266  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d266 -> d267  [key=0, style=solid];
d266 -> d50  [key=2, style=dotted];
d266 -> d295  [key=2, style=dotted];
d266 -> d268  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d266 -> d269  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d266 -> d284  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d267 -> d268  [key=0, style=solid];
d267 -> d269  [key=0, style=solid];
d268 -> d296  [key=2, style=dotted];
d268 -> d271  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d268 -> d287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d268 -> d268  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d268 -> d269  [key=0, style=solid];
d268 -> d284  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d274 -> d275  [key=0, style=solid];
d274 -> d280  [key=0, style=solid];
d277 -> d278  [key=0, style=solid];
d277 -> d283  [key=0, style=solid];
d280 -> d281  [key=0, style=solid];
d280 -> d284  [key=0, style=solid];
d282 -> d284  [key=0, style=solid];
d286 -> d287  [key=0, style=solid];
d286 -> d269  [key=0, style=solid];
d242 -> d243  [key=0, style=solid];
d242 -> d248  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
d307 -> d24  [key=2, style=dotted];
d307 -> d309  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d307 -> d314  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d307 -> d308  [key=0, style=solid];
d307 -> d310  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d307 -> d311  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d307 -> d312  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d307 -> d315  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d307 -> d316  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d307 -> d317  [color=darkseagreen4, key=1, label=optionName, style=dashed];
d322 -> d24  [key=2, style=dotted];
d322 -> d323  [key=0, style=solid];
d322 -> d324  [color=darkseagreen4, key=1, label=valueName, style=dashed];
d322 -> d325  [color=darkseagreen4, key=1, label=valueName, style=dashed];
d322 -> d326  [color=darkseagreen4, key=1, label=valueName, style=dashed];
d322 -> d327  [color=darkseagreen4, key=1, label=valueName, style=dashed];
d318 -> d302  [color=blue, key=0, style=bold];
d308 -> d309  [key=0, style=solid];
d308 -> d313  [key=0, style=solid];
d310 -> d311  [key=0, style=solid];
d310 -> d320  [key=2, style=dotted];
d311 -> d312  [key=0, style=solid];
d311 -> d321  [key=2, style=dotted];
d312 -> d313  [key=0, style=solid];
d312 -> d189  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d313 -> d317  [key=0, style=solid];
d315 -> d316  [key=0, style=solid];
d315 -> d320  [key=2, style=dotted];
d316 -> d317  [key=0, style=solid];
d316 -> d321  [key=2, style=dotted];
d176 -> d182  [key=2, style=dotted];
d176 -> d177  [key=0, style=solid];
d176 -> d179  [key=2, style=dotted];
d176 -> d180  [key=2, style=dotted];
d176 -> d181  [key=2, style=dotted];
d328 -> d306  [color=blue, key=0, style=bold];
d323 -> d324  [key=0, style=solid];
d323 -> d325  [key=0, style=solid];
d324 -> d326  [key=0, style=solid];
d324 -> d329  [key=2, style=dotted];
d325 -> d326  [key=0, style=solid];
d325 -> d320  [key=2, style=dotted];
d326 -> d327  [key=0, style=solid];
d326 -> d321  [key=2, style=dotted];
d376 -> d86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d376 -> d93  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d85 -> d86  [key=0, style=solid];
d87 -> d85  [color=blue, key=0, style=bold];
d92 -> d93  [key=0, style=solid];
d94 -> d92  [color=blue, key=0, style=bold];
d377 -> d90  [color=darkseagreen4, key=1, label=pr, style=dashed];
d89 -> d90  [key=0, style=solid];
d91 -> d89  [color=blue, key=0, style=bold];
d96 -> d108  [key=0, style=solid];
d96 -> d23  [key=2, style=dotted];
d98 -> d108  [key=0, style=solid];
d98 -> d23  [key=2, style=dotted];
d45 -> d191  [key=0, style=solid];
d45 -> d27  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors", style=bold];
d72 -> d59  [color=blue, key=0, style=bold];
d60 -> d61  [key=0, style=solid];
d60 -> d62  [key=0, style=solid];
d62 -> d67  [color=darkseagreen4, key=1, label=errors, style=dashed];
d62 -> d63  [key=0, style=solid];
d62 -> d65  [color=darkseagreen4, key=1, label=errors, style=dashed];
d25 -> d26  [key=0, style=solid];
d25 -> d28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d29  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d31  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
d25 -> d38  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d40  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d25 -> d41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
d68 -> d69  [key=0, style=solid];
d68 -> d71  [key=0, style=solid];
d65 -> d66  [key=0, style=solid];
d65 -> d67  [key=0, style=solid];
d65 -> d52  [key=2, style=dotted];
d65 -> d82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d269 -> d111  [key=2, style=dotted];
d269 -> d270  [key=0, style=solid];
d269 -> d287  [key=0, style=solid];
d130 -> d132  [key=0, style=solid];
d130 -> d131  [key=0, style=solid];
d130 -> d134  [key=2, style=dotted];
d133 -> d55  [color=blue, key=0, style=bold];
d136 -> d243  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
d136 -> d240  [key=0, style=solid];
d136 -> d248  [color=darkseagreen4, key=1, label=string, style=dashed];
d136 -> d242  [color=darkseagreen4, key=1, label=int, style=dashed];
d54 -> d141  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
d54 -> d136  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
d54 -> d137  [key=0, style=solid];
d54 -> d139  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
d139 -> d141  [key=0, style=solid];
d139 -> d140  [key=0, style=solid];
d142 -> d54  [color=blue, key=0, style=bold];
d144 -> d235  [key=0, style=solid];
d144 -> d54  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
d144 -> d150  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
d146 -> d148  [key=0, style=solid];
d146 -> d147  [key=0, style=solid];
d146 -> d134  [key=2, style=dotted];
d149 -> d145  [color=blue, key=0, style=bold];
d150 -> d155  [color=darkseagreen4, key=1, label=int, style=dashed];
d150 -> d136  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
d150 -> d151  [key=0, style=solid];
d150 -> d153  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
d153 -> d155  [key=0, style=solid];
d153 -> d154  [key=0, style=solid];
d156 -> d150  [color=blue, key=0, style=bold];
d63 -> d64  [key=0, style=solid];
d63 -> d65  [key=0, style=solid];
d63 -> d52  [key=2, style=dotted];
d63 -> d79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d4 -> d5  [key=0, style=solid];
d257 -> d125  [color=blue, key=0, style=bold];
d247 -> d248  [key=0, style=solid];
d166 -> d110  [color=blue, key=0, style=bold];
d157 -> d158  [key=0, style=solid];
d157 -> d159  [key=0, style=solid];
d159 -> d164  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
d159 -> d45  [key=2, style=dotted];
d159 -> d160  [key=0, style=solid];
d159 -> d163  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
d163 -> d164  [key=0, style=solid];
d163 -> d168  [key=2, style=dotted];
d163 -> d169  [key=2, style=dotted];
d163 -> d172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d163 -> d175  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d126 -> d129  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine", style=bold];
d126 -> d127  [key=0, style=solid];
d332 -> d129  [color=blue, key=0, style=bold];
d276 -> d277  [key=0, style=solid];
d276 -> d276  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d276 -> d279  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d276 -> d284  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d284 -> d285  [key=0, style=solid];
d284 -> d287  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d284 -> d286  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d284 -> d219  [key=2, style=dotted];
d284 -> d220  [key=2, style=dotted];
d284 -> d284  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
d284 -> d297  [key=2, style=dotted];
d273 -> d274  [key=0, style=solid];
d273 -> d284  [key=0, style=solid];
d283 -> d273  [key=0, style=solid];
d283 -> d283  [color=darkseagreen4, key=1, label=i, style=dashed];
d340 -> d343  [key=0, style=solid];
d340 -> d333  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.OptionSpecification spec", style=bold];
d340 -> d344  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d340 -> d345  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d340 -> d347  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d340 -> d348  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d340 -> d355  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
d344 -> d345  [key=0, style=solid];
d344 -> d349  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
d344 -> d359  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
d350 -> d351  [key=0, style=solid];
d350 -> d350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d350 -> d352  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d350 -> d353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d355 -> d356  [key=0, style=solid];
d355 -> d355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d355 -> d357  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d355 -> d358  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d360 -> d360  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d360 -> d361  [key=0, style=solid];
d361 -> d362  [key=0, style=solid];
d345 -> d346  [key=0, style=solid];
d345 -> d354  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
d345 -> d359  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
d347 -> d348  [key=0, style=solid];
d347 -> d349  [key=0, style=solid];
d353 -> d355  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d353 -> d360  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d353 -> d361  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d353 -> d353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d353 -> d354  [key=0, style=solid];
d358 -> d360  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d358 -> d361  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d358 -> d358  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d358 -> d359  [key=0, style=solid];
d341 -> d363  [key=0, style=solid];
d341 -> d333  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.ValueSpecification spec", style=bold];
d341 -> d364  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d341 -> d366  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d341 -> d367  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d341 -> d369  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d341 -> d370  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
d364 -> d365  [key=0, style=solid];
d364 -> d368  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
d369 -> d369  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d369 -> d371  [key=0, style=solid];
d369 -> d374  [key=2, style=dotted];
d370 -> d370  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d370 -> d371  [key=0, style=solid];
d370 -> d374  [key=2, style=dotted];
d366 -> d367  [key=0, style=solid];
d366 -> d368  [key=0, style=solid];
d371 -> d371  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d371 -> d372  [key=0, style=solid];
d41 -> d55  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d15 -> d17  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d10 -> d19  [color=darkseagreen4, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
d10 -> d20  [color=darkseagreen4, key=1, label=string, style=dashed];
d10 -> d21  [color=darkseagreen4, key=1, label=string, style=dashed];
d10 -> d15  [color=darkseagreen4, key=1, label=string, style=dashed];
d10 -> d11  [key=0, style=solid];
d10 -> d13  [color=darkseagreen4, key=1, label=string, style=dashed];
d22 -> d10  [color=blue, key=0, style=bold];
d128 -> d126  [color=blue, key=0, style=bold];
d184 -> d185  [key=0, style=solid];
d184 -> d184  [color=darkorchid, key=3, label="Local variable int ExtraLength", style=bold];
d186 -> d122  [color=blue, key=0, style=bold];
d236 -> d144  [color=blue, key=0, style=bold];
d246 -> d333  [key=0, style=solid];
d382 -> d248  [color=darkseagreen4, key=1, label=string, style=dashed];
d383 -> d248  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
d384 -> d248  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
d249 -> d247  [color=blue, key=0, style=bold];
d245 -> d136  [color=blue, key=0, style=bold];
d279 -> d284  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d279 -> d283  [key=0, style=solid];
d279 -> d279  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
d334 -> d246  [color=blue, key=0, style=bold];
d336 -> d337  [key=0, style=solid];
d336 -> d338  [color=darkseagreen4, key=1, label=int, style=dashed];
d338 -> d339  [key=0, style=solid];
d338 -> d342  [key=2, style=dotted];
d352 -> d353  [key=0, style=solid];
d352 -> d352  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d357 -> d358  [key=0, style=solid];
d357 -> d357  [color=darkseagreen4, key=1, label=specLength, style=dashed];
d162 -> d164  [color=darkseagreen4, key=1, label=text, style=dashed];
d162 -> d163  [key=0, style=solid];
d162 -> d167  [key=2, style=dotted];
d162 -> d177  [color=darkseagreen4, key=1, label=text, style=dashed];
d162 -> d165  [color=darkseagreen4, key=1, label=text, style=dashed];
d165 -> d171  [key=2, style=dotted];
d165 -> d166  [key=0, style=solid];
d27 -> d44  [key=2, style=dotted];
d27 -> d28  [key=0, style=solid];
d27 -> d38  [color=darkseagreen4, key=1, label=errors, style=dashed];
d295 -> d10  [color=darkorchid, key=3, label="Field variable string copyright", style=bold];
d177 -> d171  [key=2, style=dotted];
d177 -> d178  [key=0, style=solid];
d177 -> d183  [key=2, style=dotted];
d317 -> d171  [key=2, style=dotted];
d317 -> d318  [key=0, style=solid];
d327 -> d171  [key=2, style=dotted];
d327 -> d328  [key=0, style=solid];
d379 -> d176  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
d380 -> d176  [color=darkseagreen4, key=1, label=int, style=dashed];
d175 -> d176  [key=0, style=solid];
d30 -> d45  [key=2, style=dotted];
d30 -> d46  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d30 -> d32  [key=0, style=solid];
d192 -> d45  [color=blue, key=0, style=bold];
d191 -> d192  [key=0, style=solid];
d191 -> d168  [key=2, style=dotted];
d191 -> d193  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d160 -> d109  [key=2, style=dotted];
d160 -> d162  [key=0, style=solid];
d160 -> d161  [key=0, style=solid];
d61 -> d72  [key=0, style=solid];
d61 -> d73  [key=2, style=dotted];
d43 -> d25  [color=blue, key=0, style=bold];
d26 -> d41  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d27  [key=0, style=solid];
d26 -> d0  [key=2, style=dotted];
d26 -> d31  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d34  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d37  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d39  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d40  [color=darkseagreen4, key=1, label=auto, style=dashed];
d26 -> d42  [color=darkseagreen4, key=1, label=auto, style=dashed];
d28 -> d29  [key=0, style=solid];
d28 -> d32  [key=0, style=solid];
d29 -> d30  [key=0, style=solid];
d29 -> d38  [color=darkseagreen4, key=1, label=errors, style=dashed];
d31 -> d41  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d47  [key=2, style=dotted];
d31 -> d31  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d32  [key=0, style=solid];
d31 -> d34  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d37  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d39  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d40  [color=darkseagreen4, key=1, label=auto, style=dashed];
d31 -> d42  [color=darkseagreen4, key=1, label=auto, style=dashed];
d38 -> d41  [key=0, style=solid];
d38 -> d46  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d52  [key=2, style=dotted];
d38 -> d56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d40 -> d54  [key=2, style=dotted];
d40 -> d42  [key=0, style=solid];
d40 -> d53  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d131 -> d133  [key=0, style=solid];
d131 -> d23  [key=2, style=dotted];
d137 -> d139  [key=0, style=solid];
d137 -> d138  [key=0, style=solid];
d140 -> d142  [key=0, style=solid];
d140 -> d143  [key=2, style=dotted];
d138 -> d142  [key=0, style=solid];
d138 -> d23  [key=2, style=dotted];
d147 -> d149  [key=0, style=solid];
d147 -> d23  [key=2, style=dotted];
d151 -> d153  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d154 -> d156  [key=0, style=solid];
d154 -> d143  [key=2, style=dotted];
d152 -> d156  [key=0, style=solid];
d152 -> d23  [key=2, style=dotted];
d79 -> d80  [key=0, style=solid];
d5 -> d4  [color=blue, key=0, style=bold];
d158 -> d166  [key=0, style=solid];
d158 -> d23  [key=2, style=dotted];
d161 -> d166  [key=0, style=solid];
d172 -> d173  [key=0, style=solid];
d362 -> d340  [color=blue, key=0, style=bold];
d348 -> d353  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d348 -> d358  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d348 -> d349  [key=0, style=solid];
d349 -> d350  [key=0, style=solid];
d349 -> d354  [key=0, style=solid];
d359 -> d360  [key=0, style=solid];
d359 -> d361  [key=0, style=solid];
d354 -> d355  [key=0, style=solid];
d354 -> d359  [key=0, style=solid];
d373 -> d341  [color=blue, key=0, style=bold];
d367 -> d371  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
d367 -> d368  [key=0, style=solid];
d368 -> d369  [key=0, style=solid];
d368 -> d370  [key=0, style=solid];
d372 -> d373  [key=0, style=solid];
d42 -> d43  [key=0, style=solid];
d13 -> d15  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d16 -> d22  [key=0, style=solid];
d16 -> d23  [key=2, style=dotted];
d11 -> d13  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d12 -> d22  [key=0, style=solid];
d12 -> d23  [key=2, style=dotted];
d14 -> d22  [key=0, style=solid];
d14 -> d23  [key=2, style=dotted];
d122 -> d184  [key=0, style=solid];
d339 -> d336  [color=blue, key=0, style=bold];
d33 -> d49  [key=2, style=dotted];
d33 -> d34  [key=0, style=solid];
d33 -> d35  [key=0, style=solid];
d36 -> d49  [key=2, style=dotted];
d36 -> d38  [key=0, style=solid];
d36 -> d37  [key=0, style=solid];
d34 -> d50  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d51  [key=2, style=dotted];
d37 -> d50  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d51  [key=2, style=dotted];
d381 -> d177  [color=darkseagreen4, key=1, label=text, style=dashed];
d178 -> d175  [color=blue, key=0, style=bold];
d32 -> d33  [key=0, style=solid];
d32 -> d34  [color=darkseagreen4, key=1, label=license, style=dashed];
d32 -> d48  [key=2, style=dotted];
d193 -> d194  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d39 -> d40  [key=0, style=solid];
d56 -> d57  [key=0, style=solid];
d84 -> d82  [color=blue, key=0, style=bold];
d83 -> d84  [key=0, style=solid];
d81 -> d79  [color=blue, key=0, style=bold];
d80 -> d81  [key=0, style=solid];
d174 -> d172  [color=blue, key=0, style=bold];
d173 -> d174  [key=0, style=solid];
d119 -> d122  [color=darkorchid, key=3, label="method methodReturn string op_Implicit", style=bold];
d119 -> d120  [key=0, style=solid];
d120 -> d122  [key=2, style=dotted];
d120 -> d121  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d35 -> d37  [color=darkseagreen4, key=1, label=usage, style=dashed];
d35 -> d48  [key=2, style=dotted];
d195 -> d193  [color=blue, key=0, style=bold];
d194 -> d195  [key=0, style=solid];
d1 -> d0  [color=blue, key=0, style=bold];
d58 -> d56  [color=blue, key=0, style=bold];
d57 -> d58  [key=0, style=solid];
d121 -> d119  [color=blue, key=0, style=bold];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_16  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_14 -> m0_17  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_14 -> m0_14  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder AppendFormatWhen", style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_17  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_18 -> m0_14  [color=blue, key=0, style=bold];
m0_33 -> m0_34  [key=0, style=solid];
m0_34 -> m0_35  [key=0, style=solid];
m0_35 -> m0_33  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [color=darkseagreen4, key=1, label="params char[]", style=dashed];
m0_7 -> m0_10  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_7 -> m0_11  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_7 -> m0_7  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder AppendWhen", style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_11  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_11  [key=0, style=solid];
m0_10 -> m0_9  [key=0, style=solid];
m0_10 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_7  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_0 -> m0_0  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder AppendWhen", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_4  [key=0, style=solid];
m0_3 -> m0_2  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_0  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_6  [key=2, style=dotted];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_23 -> m0_27  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m0_23 -> m0_23  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder AppendIfNotEmpty", style=bold];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_27  [key=0, style=solid];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=value, style=dashed];
m0_26 -> m0_24  [key=0, style=solid];
m0_26 -> m0_6  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_24  [key=0, style=solid];
m0_28 -> m0_23  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> d171  [key=2, style=dotted];
m0_31 -> m0_29  [color=blue, key=0, style=bold];
}
