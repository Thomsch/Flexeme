digraph  {
m2_0 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m2_1 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="17-20", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m2_2 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(string), TargetType.Scalar),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<int>), TargetType.Sequence)\r\n                }", span="21-25", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m2_4 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="34-34", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m2_3 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="28-31", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=red, community=0, file="TokenPartitionerTests.cs"];
m2_5 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs"];
m2_13 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitionerTests.cs"];
m2_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs"];
m2_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenPartitionerTests.cs"];
m2_10 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="TokenPartitionerTests.cs"];
m2_15 [label="Entry Unk.True", span="", cluster="Unk.True", file="TokenPartitionerTests.cs"];
m2_14 [label="Entry Unk.All", span="", cluster="Unk.All", file="TokenPartitionerTests.cs"];
m2_41 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_17 [label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="30-30", cluster="lambda expression", color=red, community=0, file="TokenPartitionerTests.cs"];
m2_16 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_21 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_20 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_18 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_22 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_24 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_25 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_26 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_36 [label="TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)", span="56-56", cluster="lambda expression", color=red, community=0, file="TokenPartitionerTests.cs"];
m2_35 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_39 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_38 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_37 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_40 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_42 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_43 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m2_19 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs"];
m2_27 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="TokenPartitionerTests.cs"];
m2_11 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs"];
m2_8 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="TokenPartitionerTests.cs"];
m2_28 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs"];
m2_23 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="TokenPartitionerTests.cs"];
m2_12 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs"];
m2_29 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m2_30 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="43-46", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m2_31 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(string), TargetType.Scalar),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<int>), TargetType.Sequence)\r\n                }", span="47-51", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m2_33 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="60-60", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m2_32 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptor(name, specs, StringComparer.InvariantCulture)\r\n                )", span="54-57", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=red, community=0, file="TokenPartitionerTests.cs"];
m2_34 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m2_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs"];
m2_44 [label=specs, span="", file="TokenPartitionerTests.cs"];
m2_45 [label=result, span="", file="TokenPartitionerTests.cs"];
m2_46 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="TokenPartitionerTests.cs"];
m2_47 [label=specs, span="", file="TokenPartitionerTests.cs"];
m2_48 [label=result, span="", file="TokenPartitionerTests.cs"];
m2_49 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="TokenPartitionerTests.cs"];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m2_2 -> m2_3  [key=0, style=solid, color=red];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_17  [key=1, style=dashed, color=red, label=specs];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_15  [key=2, style=dotted];
m2_4 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_4  [key=0, style=solid, color=red];
m2_3 -> m2_11  [key=2, style=dotted, color=red];
m2_3 -> m2_12  [key=2, style=dotted, color=red];
m2_3 -> m2_13  [key=2, style=dotted, color=red];
m2_3 -> m2_16  [key=1, style=dashed, color=red, label="lambda expression"];
m2_3 -> m2_21  [key=1, style=dashed, color=red, label=result];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m2_41 -> m2_42  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid, color=red];
m2_17 -> m2_19  [key=2, style=dotted, color=red];
m2_16 -> m2_17  [key=0, style=solid, color=red];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_21 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_21 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m2_20 -> m2_21  [key=0, style=solid];
m2_18 -> m2_16  [key=0, style=bold, color=blue];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_25 -> m2_28  [key=2, style=dotted];
m2_25 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m2_26 -> m2_24  [key=0, style=bold, color=blue];
m2_36 -> m2_37  [key=0, style=solid, color=red];
m2_36 -> m2_19  [key=2, style=dotted, color=red];
m2_35 -> m2_36  [key=0, style=solid, color=red];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_23  [key=2, style=dotted];
m2_39 -> m2_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_39 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m2_38 -> m2_39  [key=0, style=solid];
m2_37 -> m2_35  [key=0, style=bold, color=blue];
m2_40 -> m2_38  [key=0, style=bold, color=blue];
m2_42 -> m2_43  [key=0, style=solid];
m2_42 -> m2_27  [key=2, style=dotted];
m2_42 -> m2_28  [key=2, style=dotted];
m2_42 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m2_43 -> m2_41  [key=0, style=bold, color=blue];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_6  [key=2, style=dotted];
m2_30 -> m2_33  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m2_31 -> m2_32  [key=0, style=solid, color=red];
m2_31 -> m2_7  [key=2, style=dotted];
m2_31 -> m2_8  [key=2, style=dotted];
m2_31 -> m2_9  [key=2, style=dotted];
m2_31 -> m2_10  [key=2, style=dotted];
m2_31 -> m2_36  [key=1, style=dashed, color=red, label=specs];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_14  [key=2, style=dotted];
m2_33 -> m2_15  [key=2, style=dotted];
m2_33 -> m2_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_32 -> m2_33  [key=0, style=solid, color=red];
m2_32 -> m2_11  [key=2, style=dotted, color=red];
m2_32 -> m2_12  [key=2, style=dotted, color=red];
m2_32 -> m2_13  [key=2, style=dotted, color=red];
m2_32 -> m2_35  [key=1, style=dashed, color=red, label="lambda expression"];
m2_32 -> m2_39  [key=1, style=dashed, color=red, label=result];
m2_34 -> m2_29  [key=0, style=bold, color=blue];
m2_44 -> m2_17  [key=1, style=dashed, color=red, label=specs];
m2_45 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_46 -> m2_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m2_47 -> m2_36  [key=1, style=dashed, color=red, label=specs];
m2_48 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label=result];
m2_49 -> m2_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
}
