digraph  {
n0 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="15-15"];
n1 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="result.Tag == ResultType.Ok", span="17-17"];
n2 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="var ok = (Ok<TSuccess, TMessage>)result", span="19-19"];
n4 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="return Enumerable.Empty<TMessage>();", span="22-22"];
n3 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="return ok.Value.Messages;", span="20-20"];
n5 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="15-15"];
n6 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n7 [cluster="CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="Entry CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="25-25"];
n8 [cluster="CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="result.Tag == ResultType.Ok", span="27-27"];
n9 [cluster="CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="var ok = (Ok<TSuccess, TMessage>)result", span="29-29"];
n11 [cluster="CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="return Maybe.Nothing<TSuccess>();", span="32-32"];
n10 [cluster="CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="return Maybe.Just(ok.Value.Success);", span="30-30"];
n12 [cluster="CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", label="Exit CommandLine.Infrastructure.ResultExtensions.ToMaybe<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="25-25"];
n13 [cluster="Unk.Just", label="Entry Unk.Just", span=""];
n14 [cluster="CSharpx.Maybe.Nothing<T>()", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
d135 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", prediction=0, span="276-276"];
d131 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", label="var expectedError = new HelpRequestedError()", span="268-268"];
d133 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", prediction=0, span="272-272"];
d134 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", color=green, community=0, label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", prediction=2, span="275-275"];
d136 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265"];
d23 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
d139 [cluster="Unk.ContainSingle", label="Entry Unk.ContainSingle", span=""];
d143 [cluster="lambda expression", label="Entry lambda expression", span="276-276"];
d144 [cluster="lambda expression", color=green, community=0, label="e.Equals(expectedError)", prediction=0, span="276-276"];
d380 [label=expectedError, span=""];
d145 [cluster="lambda expression", label="Exit lambda expression", span="276-276"];
d146 [cluster="Unk.Equals", label="Entry Unk.Equals", span=""];
d132 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", label="var sut = new Parser()", span="269-269"];
d9 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
d138 [cluster="Unk.HaveCount", label="Entry Unk.HaveCount", span=""];
d140 [cluster="lambda expression", label="Entry lambda expression", span="275-275"];
d141 [cluster="lambda expression", color=green, community=0, label="x == 1", prediction=4, span="275-275"];
d142 [cluster="lambda expression", label="Exit lambda expression", span="275-275"];
d148 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, label="var help = new StringWriter()", prediction=5, span="284-284"];
d147 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281"];
d149 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, label="var sut = new Parser(config => config.HelpWriter = help)", prediction=6, span="285-285"];
d7 [cluster="System.IO.StringWriter.StringWriter()", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
d156 [cluster="lambda expression", color=green, community=0, label="config.HelpWriter = help", prediction=7, span="285-285"];
d151 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, label="var result = help.ToString()", prediction=8, span="289-289"];
d150 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, label="sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", prediction=9, span="288-288"];
d8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
d381 [label=help, span=""];
d155 [cluster="lambda expression", label="Entry lambda expression", span="285-285"];
d157 [cluster="lambda expression", label="Exit lambda expression", span="285-285"];
d152 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", color=green, community=0, label="result.Length.Should().BeGreaterThan(0)", prediction=10, span="292-292"];
d10 [cluster="System.IO.StringWriter.ToString()", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
d153 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", span="281-281"];
d154 [cluster="Unk.BeGreaterThan", label="Entry Unk.BeGreaterThan", span=""];
d159 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", color=green, community=0, label="var expectedError = new VersionRequestedError()", prediction=11, span="300-300"];
d158 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297"];
d160 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", color=green, community=0, label="var sut = new Parser()", prediction=12, span="301-301"];
d165 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457"];
d163 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", color=green, community=0, label="((NotParsed<Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", prediction=11, span="308-308"];
d170 [cluster="lambda expression", color=green, community=0, label="e.Equals(expectedError)", prediction=11, span="308-308"];
d161 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", color=green, community=0, label="var result = sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", prediction=11, span="304-304"];
d46 [cluster="CommandLine.Parser.Parser()", label="Entry CommandLine.Parser.Parser()", span="26-26"];
d162 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", color=green, community=0, label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", prediction=16, span="307-307"];
d164 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="297-297"];
d169 [cluster="lambda expression", label="Entry lambda expression", span="308-308"];
d382 [label=expectedError, span=""];
d171 [cluster="lambda expression", label="Exit lambda expression", span="308-308"];
d166 [cluster="lambda expression", label="Entry lambda expression", span="307-307"];
d167 [cluster="lambda expression", color=green, community=0, label="x == 1", prediction=17, span="307-307"];
d168 [cluster="lambda expression", label="Exit lambda expression", span="307-307"];
d173 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="var help = new StringWriter()", prediction=18, span="316-316"];
d172 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313"];
d174 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="var sut = new Parser(config => config.HelpWriter = help)", prediction=19, span="317-317"];
d186 [cluster="lambda expression", color=green, community=0, label="config.HelpWriter = help", prediction=20, span="317-317"];
d176 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="var result = help.ToString()", prediction=21, span="321-321"];
d175 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", prediction=22, span="320-320"];
d383 [label=help, span=""];
d185 [cluster="lambda expression", label="Entry lambda expression", span="317-317"];
d187 [cluster="lambda expression", label="Exit lambda expression", span="317-317"];
d177 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="result.Length.Should().BeGreaterThan(0)", prediction=23, span="324-324"];
d178 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="var lines = result.ToNotEmptyLines().TrimStringArray()", prediction=24, span="325-325"];
d179 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="lines.Should().HaveCount(x => x == 1)", prediction=25, span="326-326"];
d182 [cluster="string.ToNotEmptyLines()", label="Entry string.ToNotEmptyLines()", span="10-10"];
d183 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
d180 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", color=green, community=0, label="lines[0].Should().StartWithEquivalent(''CommandLine'')", prediction=24, span="327-327"];
d188 [cluster="lambda expression", label="Entry lambda expression", span="326-326"];
d181 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="313-313"];
d184 [cluster="Unk.StartWithEquivalent", label="Entry Unk.StartWithEquivalent", span=""];
d189 [cluster="lambda expression", color=green, community=0, label="x == 1", prediction=27, span="326-326"];
d190 [cluster="lambda expression", label="Exit lambda expression", span="326-326"];
d130 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="265-265"];
d137 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="393-393"];
d20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", label="text.Should().NotBeEmpty()", span="43-43"];
d33 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", label="text.Should().NotBeEmpty()", span="59-59"];
d196 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="result.Length.Should().BeGreaterThan(0)", span="343-343"];
d198 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="345-345"];
d217 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="370-370"];
d233 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="result.Length.Should().BeGreaterThan(0)", span="394-394"];
d235 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="lines.Should().HaveCount(x => x == 1)", span="396-396"];
d236 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="397-397"];
d250 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="414-414"];
d269 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", label="result.Length.Should().BeGreaterThan(0)", span="439-439"];
d280 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="457-457"];
d307 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="492-492"];
d350 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="556-556"];
d3 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", label="sut.ParseArguments<Options_With_Required_Set_To_True>(new string[] { })", span="23-23"];
d42 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", label="var result = sut.ParseArguments<Simple_Options>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="71-71"];
d51 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", label="var result = sut.ParseArguments<Options_With_Switches>(args)", span="90-90"];
d57 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", label="var result = sut.ParseArguments<Options_With_Switches>(new[] { ''-i'', ''-i'', ''-o'', ''file'' })", span="104-104"];
d64 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", label="var result =\r\n                sut.ParseArguments<Simple_Options_With_Values>(\r\n                    new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="125-127"];
d126 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="257-257"];
d247 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="sut.ParseArguments<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>(new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="409-409"];
d321 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", label="var result = sut.ParseArguments<Simple_Options>(arguments)", span="514-514"];
d366 [cluster="CommandLine.Tests.Unit.ParserTests.Invoke_not_parsed_lambda_when_parsed_With_Options_With_SetName_That_Ends_With_Previous_SetName()", label="Parser.Default.ParseArguments<Options_With_SetName_That_Ends_With_Previous_SetName>(new[] { ''--weburl'', ''value'', ''--somethingelse'', ''othervalue'' })\r\n                .WithParsed(opts => expected = opts.WebUrl)\r\n                .WithNotParsed(err => expected = ''changed'')", span="574-576"];
d1 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", label="var writer = new StringWriter()", span="19-19"];
d16 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", label="var writer = new StringWriter()", span="35-35"];
d29 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", label="var writer = new StringWriter()", span="51-51"];
d192 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="var help = new StringWriter()", span="335-335"];
d212 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="var help = new StringWriter()", span="361-361"];
d229 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="var help = new StringWriter()", span="386-386"];
d245 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="var help = new StringWriter()", span="405-405"];
d265 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", label="var help = new StringWriter()", span="431-431"];
d275 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="var help = new StringWriter()", span="447-447"];
d302 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="var help = new StringWriter()", span="482-482"];
d345 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="var help = new StringWriter()", span="546-546"];
d2 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", label="var sut = new Parser(with => with.HelpWriter = writer)", span="20-20"];
d17 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", label="var sut = new Parser(with => with.HelpWriter = writer)", span="36-36"];
d30 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", label="var sut = new Parser(with => with.HelpWriter = writer)", span="52-52"];
d63 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", label="var sut = new Parser(with => with.EnableDashDash = true)", span="122-122"];
d73 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", label="var sut = new Parser(with => with.EnableDashDash = true)", span="139-139"];
d193 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="var sut = new Parser(config => config.HelpWriter = help)", span="336-336"];
d213 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="var sut = new Parser(config => config.HelpWriter = help)", span="362-362"];
d230 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="var sut = new Parser(config => config.HelpWriter = help)", span="387-387"];
d246 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="var sut = new Parser(config => config.HelpWriter = help)", span="406-406"];
d266 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", label="var sut = new Parser(config => config.HelpWriter = help)", span="432-432"];
d276 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="var sut = new Parser(config => config.HelpWriter = help)", span="448-448"];
d303 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="var sut = new Parser(config => config.HelpWriter = help)", span="483-483"];
d320 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="511-511"];
d333 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="530-530"];
d346 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="var sut = new Parser(config => config.HelpWriter = help)", span="547-547"];
d4 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", label="var text = writer.ToString()", span="26-26"];
d19 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", label="var text = writer.ToString()", span="42-42"];
d32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", label="var text = writer.ToString()", span="58-58"];
d195 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="var result = help.ToString()", span="340-340"];
d215 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="var result = help.ToString()", span="366-366"];
d232 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="var result = help.ToString()", span="391-391"];
d248 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="var result = help.ToString()", span="410-410"];
d268 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", label="var result = help.ToString()", span="436-436"];
d278 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="var result = help.ToString()", span="453-453"];
d305 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="var result = help.ToString()", span="488-488"];
d348 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="var result = help.ToString()", span="552-552"];
d41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", label="var sut = new Parser()", span="68-68"];
d50 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", label="var sut = new Parser()", span="87-87"];
d88 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", label="var sut = new Parser()", span="168-168"];
d99 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", label="var sut = new Parser()", span="193-193"];
d115 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", label="var sut = new Parser()", span="236-236"];
d125 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", label="var sut = new Parser()", span="254-254"];
d197 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="344-344"];
d216 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="369-369"];
d234 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="395-395"];
d249 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="413-413"];
d279 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="456-456"];
d306 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="491-491"];
d349 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="555-555"];
d21 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32"];
d24 [cluster="Unk.NotBeEmpty", label="Entry Unk.NotBeEmpty", span=""];
d34 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48"];
d199 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="346-346"];
d218 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="371-371"];
d241 [cluster="lambda expression", label="Entry lambda expression", span="396-396"];
d237 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383"];
d251 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="415-415"];
d270 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428"];
d281 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="458-458"];
d308 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="493-493"];
d351 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="557-557"];
d43 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", label="((Parsed<Simple_Options>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="74-74"];
d48 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83"];
d52 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", label="((Parsed<Options_With_Switches>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="93-93"];
d56 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", label="var sut = Parser.Default", span="101-101"];
d58 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", label="Assert.IsType<NotParsed<Options_With_Switches>>(result)", span="107-107"];
d65 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", label="((Parsed<Simple_Options_With_Values>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="130-130"];
d127 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", label="((Parsed<Immutable_Simple_Options>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="260-260"];
d319 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="506-506"];
d322 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="517-517"];
d323 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="518-518"];
d365 [cluster="CommandLine.Tests.Unit.ParserTests.Invoke_not_parsed_lambda_when_parsed_With_Options_With_SetName_That_Ends_With_Previous_SetName()", label="var expected = string.Empty", span="573-573"];
d367 [cluster="CommandLine.Tests.Unit.ParserTests.Invoke_not_parsed_lambda_when_parsed_With_Options_With_SetName_That_Ends_With_Previous_SetName()", label="''changed''.ShouldBeEquivalentTo(expected)", span="578-578"];
d369 [cluster="CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", label="Entry CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", span="20-20"];
d370 [cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="58-58"];
d371 [cluster="lambda expression", label="Entry lambda expression", span="575-575"];
d374 [cluster="lambda expression", label="Entry lambda expression", span="576-576"];
d0 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="16-16"];
d13 [cluster="lambda expression", label="with.HelpWriter = writer", span="20-20"];
d15 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32"];
d26 [cluster="lambda expression", label="with.HelpWriter = writer", span="36-36"];
d28 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="48-48"];
d37 [cluster="lambda expression", label="with.HelpWriter = writer", span="52-52"];
d191 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332"];
d209 [cluster="lambda expression", label="config.HelpWriter = help", span="336-336"];
d211 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358"];
d226 [cluster="lambda expression", label="config.HelpWriter = help", span="362-362"];
d228 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="383-383"];
d239 [cluster="lambda expression", label="config.HelpWriter = help", span="387-387"];
d244 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402"];
d262 [cluster="lambda expression", label="config.HelpWriter = help", span="406-406"];
d264 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="428-428"];
d272 [cluster="lambda expression", label="config.HelpWriter = help", span="432-432"];
d274 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444"];
d299 [cluster="lambda expression", label="config.HelpWriter = help", span="448-448"];
d301 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="Entry CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", span="479-479"];
d317 [cluster="lambda expression", label="config.HelpWriter = help", span="483-483"];
d344 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", span="543-543"];
d362 [cluster="lambda expression", label="config.HelpWriter = help", span="547-547"];
d18 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", label="sut.ParseArguments(new string[] { }, typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="39-39"];
d31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="55-55"];
d62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", label="var expectedOptions = new Simple_Options_With_Values\r\n                                  {\r\n                                      StringValue = ''astring'',\r\n                                      LongValue = 20L,\r\n                                      StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                                      IntValue = 30\r\n                                  }", span="115-121"];
d69 [cluster="lambda expression", label="with.EnableDashDash = true", span="122-122"];
d72 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", label="var expectedOptions = new Add_Verb { Patch = true, FileName = ''--strange-fn'' }", span="138-138"];
d74 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(Add_Verb),\r\n                typeof(Commit_Verb),\r\n                typeof(Clone_Verb))", span="142-146"];
d80 [cluster="lambda expression", label="with.EnableDashDash = true", span="139-139"];
d194 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="339-339"];
d214 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''--help'' })", span="365-365"];
d231 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { command })", span="390-390"];
d267 [cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''commit'', ''--help'' })", span="435-435"];
d277 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="sut.ParseArguments<Add_Verb_With_Usage_Attribute, Commit_Verb_With_Usage_Attribute, Clone_Verb_With_Usage_Attribute>(\r\n                new[] { ''clone'', ''--badoption=@bad?value'' })", span="451-452"];
d304 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''help'', ''clone'', ''extra-arg'' })", span="486-487"];
d327 [cluster="lambda expression", label="config.IgnoreUnknownArguments = true", span="511-511"];
d332 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="525-525"];
d334 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", label="var result = sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(arguments)", span="533-533"];
d339 [cluster="lambda expression", label="config.IgnoreUnknownArguments = true", span="530-530"];
d347 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''clone'', ''--bad-arg'', ''--help'' })", span="550-551"];
d5 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", label="Assert.True(text.Length > 0)", span="27-27"];
d40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", label="var expectedOptions = new Simple_Options { StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 } }", span="67-67"];
d49 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", label="var expectedOptions = new Options_With_Switches { OutputFile = outputFile }", span="86-86"];
d87 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="158-167"];
d89 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", label="var result =\r\n                sut.ParseArguments(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                    typeof(Add_Verb),\r\n                    typeof(Commit_Verb),\r\n                    typeof(Clone_Verb))", span="171-176"];
d98 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", label="var expectedOptions = new Commit_Verb() { Message = message }", span="192-192"];
d100 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", label="var result = sut.ParseArguments(\r\n                args,\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="196-198"];
d114 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="226-235"];
d116 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", label="var result =\r\n                sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="239-241"];
d124 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", label="var expectedOptions = new Immutable_Simple_Options(''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="253-253"];
d200 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="347-347"];
d201 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="348-348"];
d202 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="349-349"];
d203 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="350-350"];
d204 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="351-351"];
d205 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="352-352"];
d206 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="353-353"];
d219 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="372-372"];
d220 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="373-373"];
d221 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="374-374"];
d222 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="375-375"];
d223 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="376-376"];
d252 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="416-416"];
d253 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="417-417"];
d254 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="418-418"];
d255 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="419-419"];
d256 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="420-420"];
d257 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[7].ShouldBeEquivalentTo(''-a'')", span="421-421"];
d258 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="422-422"];
d259 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="423-423"];
d282 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="459-459"];
d283 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[3].ShouldBeEquivalentTo(''Option 'badoption' is unknown.'')", span="460-460"];
d284 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="461-461"];
d285 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[5].ShouldBeEquivalentTo(''Basic cloning:'')", span="462-462"];
d286 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[6].ShouldBeEquivalentTo(''git clone https://github.com/gsscoder/csharpx'')", span="463-463"];
d287 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[7].ShouldBeEquivalentTo(''Cloning quietly:'')", span="464-464"];
d288 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[8].ShouldBeEquivalentTo(''git clone --quiet https://github.com/gsscoder/railwaysharp'')", span="465-465"];
d289 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[9].ShouldBeEquivalentTo(''Cloning without hard links:'')", span="466-466"];
d290 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[10].ShouldBeEquivalentTo(''git clone --no-hardlinks https://github.com/gsscoder/csharpx'')", span="467-467"];
d291 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[11].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="468-468"];
d292 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[12].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="469-469"];
d293 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[13].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="470-470"];
d294 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[14].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="471-471"];
d295 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[15].ShouldBeEquivalentTo(''--version         Display version information.'')", span="472-472"];
d296 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="lines[16].ShouldBeEquivalentTo(''URLS (pos. 0)     A list of url(s) to clone.'')", span="473-473"];
d309 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[2].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="494-494"];
d310 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[3].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="495-495"];
d311 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[4].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="496-496"];
d312 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[5].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="497-497"];
d313 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[6].ShouldBeEquivalentTo(''--version         Display version information.'')", span="498-498"];
d314 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="lines[7].ShouldBeEquivalentTo(''value pos. 0'')", span="499-499"];
d352 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="558-558"];
d353 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[3].ShouldBeEquivalentTo(''Option 'bad-arg' is unknown.'')", span="559-559"];
d354 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[4].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="560-560"];
d355 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[5].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="561-561"];
d356 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[6].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="562-562"];
d357 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[7].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="563-563"];
d358 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[8].ShouldBeEquivalentTo(''--version         Display version information.'')", span="564-564"];
d359 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="lines[9].ShouldBeEquivalentTo(''value pos. 0'')", span="565-565"];
d47 [cluster="Unk.ShouldBeEquivalentTo", label="Entry Unk.ShouldBeEquivalentTo", span=""];
d243 [cluster="lambda expression", label="Exit lambda expression", span="396-396"];
d242 [cluster="lambda expression", label="x == 1", span="396-396"];
d44 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64"];
d53 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83"];
d55 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98"];
d59 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", span="98-98"];
d60 [cluster="Unk.>", label="Entry Unk.>", span=""];
d66 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112"];
d128 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250"];
d324 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="506-506"];
d330 [cluster="lambda expression", label="opts.ShouldBeEquivalentTo(expected)", span="518-518"];
d325 [cluster="Unk.WithParsed", label="Entry Unk.WithParsed", span=""];
d329 [cluster="lambda expression", label="Entry lambda expression", span="518-518"];
d364 [cluster="CommandLine.Tests.Unit.ParserTests.Invoke_not_parsed_lambda_when_parsed_With_Options_With_SetName_That_Ends_With_Previous_SetName()", label="Entry CommandLine.Tests.Unit.ParserTests.Invoke_not_parsed_lambda_when_parsed_With_Options_With_SetName_That_Ends_With_Previous_SetName()", span="571-571"];
d368 [cluster="CommandLine.Tests.Unit.ParserTests.Invoke_not_parsed_lambda_when_parsed_With_Options_With_SetName_That_Ends_With_Previous_SetName()", label="Exit CommandLine.Tests.Unit.ParserTests.Invoke_not_parsed_lambda_when_parsed_With_Options_With_SetName_That_Ends_With_Previous_SetName()", span="571-571"];
d373 [cluster="lambda expression", label="Exit lambda expression", span="575-575"];
d372 [cluster="lambda expression", label="expected = opts.WebUrl", span="575-575"];
d376 [cluster="lambda expression", label="Exit lambda expression", span="576-576"];
d375 [cluster="lambda expression", label="expected = ''changed''", span="576-576"];
d6 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated()", span="16-16"];
d377 [label=writer, span=""];
d12 [cluster="lambda expression", label="Entry lambda expression", span="20-20"];
d14 [cluster="lambda expression", label="Exit lambda expression", span="20-20"];
d378 [label=writer, span=""];
d25 [cluster="lambda expression", label="Entry lambda expression", span="36-36"];
d27 [cluster="lambda expression", label="Exit lambda expression", span="36-36"];
d379 [label=writer, span=""];
d36 [cluster="lambda expression", label="Entry lambda expression", span="52-52"];
d38 [cluster="lambda expression", label="Exit lambda expression", span="52-52"];
d207 [cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="332-332"];
d384 [label=help, span=""];
d208 [cluster="lambda expression", label="Entry lambda expression", span="336-336"];
d210 [cluster="lambda expression", label="Exit lambda expression", span="336-336"];
d224 [cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="358-358"];
d385 [label=help, span=""];
d225 [cluster="lambda expression", label="Entry lambda expression", span="362-362"];
d227 [cluster="lambda expression", label="Exit lambda expression", span="362-362"];
d386 [label=help, span=""];
d238 [cluster="lambda expression", label="Entry lambda expression", span="387-387"];
d240 [cluster="lambda expression", label="Exit lambda expression", span="387-387"];
d260 [cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="402-402"];
d387 [label=help, span=""];
d261 [cluster="lambda expression", label="Entry lambda expression", span="406-406"];
d263 [cluster="lambda expression", label="Exit lambda expression", span="406-406"];
d388 [label=help, span=""];
d271 [cluster="lambda expression", label="Entry lambda expression", span="432-432"];
d273 [cluster="lambda expression", label="Exit lambda expression", span="432-432"];
d297 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="444-444"];
d389 [label=help, span=""];
d298 [cluster="lambda expression", label="Entry lambda expression", span="448-448"];
d300 [cluster="lambda expression", label="Exit lambda expression", span="448-448"];
d315 [cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", label="Exit CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", span="479-479"];
d390 [label=help, span=""];
d316 [cluster="lambda expression", label="Entry lambda expression", span="483-483"];
d318 [cluster="lambda expression", label="Exit lambda expression", span="483-483"];
d360 [cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", span="543-543"];
d393 [label=help, span=""];
d361 [cluster="lambda expression", label="Entry lambda expression", span="547-547"];
d363 [cluster="lambda expression", label="Exit lambda expression", span="547-547"];
d22 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144"];
d35 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
d61 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112"];
d67 [cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6"];
d68 [cluster="lambda expression", label="Entry lambda expression", span="122-122"];
d70 [cluster="lambda expression", label="Exit lambda expression", span="122-122"];
d71 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135"];
d78 [cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7"];
d76 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="150-150"];
d75 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", label="Assert.IsType<Add_Verb>(((Parsed<object>)result).Value)", span="149-149"];
d79 [cluster="lambda expression", label="Entry lambda expression", span="139-139"];
d81 [cluster="lambda expression", label="Exit lambda expression", span="139-139"];
d326 [cluster="lambda expression", label="Entry lambda expression", span="511-511"];
d328 [cluster="lambda expression", label="Exit lambda expression", span="511-511"];
d337 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="525-525"];
d336 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="537-537"];
d342 [cluster="lambda expression", label="opts.ShouldBeEquivalentTo(expected)", span="537-537"];
d335 [cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="536-536"];
d338 [cluster="lambda expression", label="Entry lambda expression", span="530-530"];
d340 [cluster="lambda expression", label="Exit lambda expression", span="530-530"];
d11 [cluster="Unk.True", label="Entry Unk.True", span=""];
d39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="64-64"];
d45 [cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6"];
d54 [cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4"];
d86 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155"];
d93 [cluster="CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", label="Entry CommandLine.Tests.Fakes.Clone_Verb.Clone_Verb()", span="36-36"];
d91 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="180-180"];
d90 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="179-179"];
d97 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189"];
d104 [cluster="CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", label="Entry CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", span="22-22"];
d102 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="202-202"];
d101 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", label="Assert.IsType<Commit_Verb>(((Parsed<object>)result).Value)", span="201-201"];
d113 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223"];
d118 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="245-245"];
d117 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="244-244"];
d123 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="250-250"];
d129 [cluster="CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", label="Entry CommandLine.Tests.Fakes.Immutable_Simple_Options.Immutable_Simple_Options(string, System.Collections.Generic.IEnumerable<int>, bool, long)", span="13-13"];
d111 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", label="Assert.IsType<NotParsed<object>>(result)", span="218-218"];
d391 [label="CommandLine.Tests.Fakes.Simple_Options", span=""];
d331 [cluster="lambda expression", label="Exit lambda expression", span="518-518"];
d110 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="213-215"];
d77 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="135-135"];
d82 [cluster="lambda expression", label="Entry lambda expression", span="150-150"];
d341 [cluster="lambda expression", label="Entry lambda expression", span="537-537"];
d392 [label="CommandLine.Tests.Fakes.Commit_Verb", span=""];
d343 [cluster="lambda expression", label="Exit lambda expression", span="537-537"];
d92 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="155-155"];
d94 [cluster="lambda expression", label="Entry lambda expression", span="180-180"];
d103 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name_in_verbs_scenario(string, string[])", span="189-189"];
d105 [cluster="lambda expression", label="Entry lambda expression", span="202-202"];
d119 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="223-223"];
d120 [cluster="lambda expression", label="Entry lambda expression", span="245-245"];
d112 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207"];
d109 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", label="var sut = Parser.Default", span="210-210"];
d84 [cluster="lambda expression", label="Exit lambda expression", span="150-150"];
d83 [cluster="lambda expression", label="o.RespectingRuntimeTypes()", span="150-150"];
d96 [cluster="lambda expression", label="Exit lambda expression", span="180-180"];
d95 [cluster="lambda expression", label="o.RespectingRuntimeTypes()", span="180-180"];
d107 [cluster="lambda expression", label="Exit lambda expression", span="202-202"];
d106 [cluster="lambda expression", label="o.RespectingRuntimeTypes()", span="202-202"];
d122 [cluster="lambda expression", label="Exit lambda expression", span="245-245"];
d121 [cluster="lambda expression", label="o.RespectingRuntimeTypes()", span="245-245"];
d108 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser_in_verbs_scenario()", span="207-207"];
d85 [cluster="Unk.RespectingRuntimeTypes", label="Entry Unk.RespectingRuntimeTypes", span=""];
m1_12 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="23-23"];
m1_13 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJust(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="25-30"];
m1_14 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var converted = values.Select(value => ChangeType(value, type, conversionCulture))", span="32-32"];
m1_15 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToArray(type));", span="34-36"];
m1_16 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="23-23"];
m1_0 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m1_1 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="values == null", span="14-14"];
m1_3 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="conversionType == null", span="15-15"];
m1_5 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="conversionCulture == null", span="16-16"];
m1_7 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return scalar\r\n                ? ChangeType(values.Single(), conversionType, conversionCulture)\r\n                : ChangeType(values, conversionType, conversionCulture);", span="18-20"];
m1_2 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="throw new ArgumentNullException(''values'');", span="14-14"];
m1_4 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="throw new ArgumentNullException(''conversionType'');", span="15-15"];
m1_6 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="throw new ArgumentNullException(''conversionCulture'');", span="16-16"];
m1_8 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m1_20 [cluster="System.ApplicationException.ApplicationException(string)", file="TypeConverter.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m1_23 [cluster="Unk.Any", file="TypeConverter.cs", label="Entry Unk.Any", span=""];
m1_21 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137"];
m1_47 [cluster="System.Enum.Parse(System.Type, string)", file="TypeConverter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m1_46 [cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="70-70"];
m1_53 [cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="TypeConverter.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="72-72"];
m1_54 [cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="70-70"];
m1_19 [cluster="T.ToMaybe<T>()", file="TypeConverter.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m1_34 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="36-36"];
m1_28 [cluster="lambda expression", file="TypeConverter.cs", label="ChangeType(value, type, conversionCulture)", span="32-32"];
m1_27 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="32-32"];
m1_30 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="34-34"];
m1_29 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="32-32"];
m1_31 [cluster="lambda expression", file="TypeConverter.cs", label="a.MatchNothing()", span="34-34"];
m1_32 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="34-34"];
m1_35 [cluster="lambda expression", file="TypeConverter.cs", label="((Just<object>)c).Value", span="36-36"];
m1_36 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="36-36"];
m1_52 [cluster="string.Equals(string, System.StringComparison)", file="TypeConverter.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m1_48 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="TypeConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m1_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_11 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="39-39"];
m1_38 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label=InvalidCastException, span="50-50"];
m1_39 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return Maybe.Nothing<object>();", span="52-52"];
m1_40 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label=FormatException, span="54-54"];
m1_41 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return Maybe.Nothing<object>();", span="56-56"];
m1_42 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label=OverflowException, span="58-58"];
m1_43 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return Maybe.Nothing<object>();", span="60-60"];
m1_44 [cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="39-39"];
m1_49 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m1_22 [cluster="Unk.Select", file="TypeConverter.cs", label="Entry Unk.Select", span=""];
m1_17 [cluster="System.Type.GetGenericArguments()", file="TypeConverter.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m1_24 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m1_33 [cluster="Unk.MatchNothing", file="TypeConverter.cs", label="Entry Unk.MatchNothing", span=""];
m1_25 [cluster="Unk.ToArray", file="TypeConverter.cs", label="Entry Unk.ToArray", span=""];
m1_45 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.MatchBoolString(string)", span="64-64"];
m1_50 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="TypeConverter.cs", label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                   || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="66-67"];
m1_51 [cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.MatchBoolString(string)", span="64-64"];
m1_9 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeConverter.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m1_55 [file="TypeConverter.cs", label="System.Globalization.CultureInfo", span=""];
m1_56 [file="TypeConverter.cs", label=type, span=""];
d135 -> d143  [color=green, key=1, label="lambda expression", style=dashed];
d131 -> d135  [color=green, key=1, label=expectedError, style=dashed];
d131 -> d144  [color=green, key=1, label=expectedError, style=dashed];
d133 -> d135  [color=green, key=1, label=result, style=dashed];
d134 -> d140  [color=green, key=1, label="lambda expression", style=dashed];
d380 -> d144  [color=green, key=1, label=expectedError, style=dashed];
d159 -> d163  [color=green, key=1, label=expectedError, style=dashed];
d159 -> d170  [color=green, key=1, label=expectedError, style=dashed];
d163 -> d169  [color=green, key=1, label="lambda expression", style=dashed];
d161 -> d163  [color=green, key=1, label=result, style=dashed];
d162 -> d166  [color=green, key=1, label="lambda expression", style=dashed];
d382 -> d170  [color=green, key=1, label=expectedError, style=dashed];
d178 -> d180  [color=green, key=1, label=lines, style=dashed];
d179 -> d188  [color=green, key=1, label="lambda expression", style=dashed];
d235 -> d241  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d321 -> d323  [color=darkseagreen4, key=1, label=result, style=dashed];
d366 -> d371  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d366 -> d374  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d197 -> d199  [color=darkseagreen4, key=1, label=lines, style=dashed];
d197 -> d200  [color=darkseagreen4, key=1, label=lines, style=dashed];
d197 -> d201  [color=darkseagreen4, key=1, label=lines, style=dashed];
d197 -> d202  [color=darkseagreen4, key=1, label=lines, style=dashed];
d197 -> d203  [color=darkseagreen4, key=1, label=lines, style=dashed];
d197 -> d204  [color=darkseagreen4, key=1, label=lines, style=dashed];
d197 -> d205  [color=darkseagreen4, key=1, label=lines, style=dashed];
d197 -> d206  [color=darkseagreen4, key=1, label=lines, style=dashed];
d216 -> d218  [color=darkseagreen4, key=1, label=lines, style=dashed];
d216 -> d219  [color=darkseagreen4, key=1, label=lines, style=dashed];
d216 -> d220  [color=darkseagreen4, key=1, label=lines, style=dashed];
d216 -> d221  [color=darkseagreen4, key=1, label=lines, style=dashed];
d216 -> d222  [color=darkseagreen4, key=1, label=lines, style=dashed];
d216 -> d223  [color=darkseagreen4, key=1, label=lines, style=dashed];
d234 -> d236  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d251  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d252  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d253  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d254  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d255  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d256  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d257  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d258  [color=darkseagreen4, key=1, label=lines, style=dashed];
d249 -> d259  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d281  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d282  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d283  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d284  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d285  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d286  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d287  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d288  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d289  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d290  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d291  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d292  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d293  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d294  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d295  [color=darkseagreen4, key=1, label=lines, style=dashed];
d279 -> d296  [color=darkseagreen4, key=1, label=lines, style=dashed];
d306 -> d308  [color=darkseagreen4, key=1, label=lines, style=dashed];
d306 -> d309  [color=darkseagreen4, key=1, label=lines, style=dashed];
d306 -> d310  [color=darkseagreen4, key=1, label=lines, style=dashed];
d306 -> d311  [color=darkseagreen4, key=1, label=lines, style=dashed];
d306 -> d312  [color=darkseagreen4, key=1, label=lines, style=dashed];
d306 -> d313  [color=darkseagreen4, key=1, label=lines, style=dashed];
d306 -> d314  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d351  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d352  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d353  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d354  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d355  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d356  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d357  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d358  [color=darkseagreen4, key=1, label=lines, style=dashed];
d349 -> d359  [color=darkseagreen4, key=1, label=lines, style=dashed];
d319 -> d323  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Simple_Options", style=dashed];
d319 -> d330  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Simple_Options", style=dashed];
d323 -> d329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d228 -> d231  [color=darkseagreen4, key=1, label=string, style=dashed];
d62 -> d65  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d72 -> d76  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d74 -> d76  [color=darkseagreen4, key=1, label=result, style=dashed];
d332 -> d336  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Commit_Verb", style=dashed];
d332 -> d342  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Commit_Verb", style=dashed];
d334 -> d336  [color=darkseagreen4, key=1, label=result, style=dashed];
d40 -> d43  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d49 -> d52  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d87 -> d91  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d89 -> d91  [color=darkseagreen4, key=1, label=result, style=dashed];
d98 -> d102  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d100 -> d102  [color=darkseagreen4, key=1, label=result, style=dashed];
d114 -> d118  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d116 -> d118  [color=darkseagreen4, key=1, label=result, style=dashed];
d124 -> d127  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
d76 -> d82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d336 -> d341  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d91 -> d94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d102 -> d105  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d118 -> d120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
d391 -> d330  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Simple_Options", style=dashed];
d392 -> d342  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Commit_Verb", style=dashed];
m1_12 -> m1_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_13 -> m1_28  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=type, style=dashed];
m1_14 -> m1_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_15 -> m1_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_15 -> m1_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m1_55 -> m1_28  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m1_56 -> m1_28  [color=darkseagreen4, key=1, label=type, style=dashed];
}
