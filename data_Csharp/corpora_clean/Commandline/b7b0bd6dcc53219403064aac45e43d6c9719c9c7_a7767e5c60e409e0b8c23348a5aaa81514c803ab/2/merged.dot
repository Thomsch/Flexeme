digraph  {
d14 [label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="60-60", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0];
d11 [label="Entry CommandLine.Internal.ArgumentParser.Create(string, bool)", span="57-57", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d12 [label="StringUtil.IsNumeric(argument)", span="59-59", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d15 [label="return null;", span="60-60", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0];
d16 [label="argument[0] == '-' && argument[1] == '-'", span="61-61", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", color=green, community=0];
d23 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)"];
d17 [label="return new LongOptionParser(ignoreUnknownArguments);", span="63-63", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d18 [label="argument[0] == '-'", span="65-65", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d21 [label="Exit CommandLine.Internal.ArgumentParser.Create(string, bool)", span="57-57", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d29 [label="argument.Length > 0", span="75-75", cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)", color=green, community=0];
d26 [label="Entry CommandLine.Internal.ArgumentParser.IsInputValue(string)", span="72-72", cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)"];
d27 [label="StringUtil.IsNumeric(argument)", span="74-74", cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)"];
d30 [label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="77-77", cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)"];
d31 [label="return true;", span="79-79", cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)"];
d56 [label="return BooleanToParserState(value, false);", span="111-111", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", color=green, community=0];
d55 [label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="109-109", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)"];
d58 [label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)"];
d57 [label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="109-109", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)"];
d19 [label="return new OptionGroupParser(ignoreUnknownArguments);", span="67-67", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d13 [label="return null;", span="59-59", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d22 [label="Entry CommandLine.Internal.StringUtil.IsNumeric(string)", span="48-48", cluster="CommandLine.Internal.StringUtil.IsNumeric(string)"];
d24 [label="Entry CommandLine.Internal.LongOptionParser.LongOptionParser(bool)", span="43-43", cluster="CommandLine.Internal.LongOptionParser.LongOptionParser(bool)"];
d20 [label="return null;", span="69-69", cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)"];
d32 [label="Exit CommandLine.Internal.ArgumentParser.IsInputValue(string)", span="72-72", cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)"];
d36 [label="IsInputValue(ae.Current)", span="92-92", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d28 [label="return true;", span="74-74", cluster="CommandLine.Internal.ArgumentParser.IsInputValue(string)"];
d64 [label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="114-114", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)"];
d59 [label="value && !addMoveNextIfTrue", span="116-116", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)"];
d61 [label=value, span="117-117", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)"];
d62 [label="return Internal.ParserState.Success | Internal.ParserState.MoveOnNextElement;", span="119-119", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)"];
d63 [label="return Internal.ParserState.Failure;", span="121-121", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)"];
d25 [label="Entry CommandLine.Internal.OptionGroupParser.OptionGroupParser(bool)", span="43-43", cluster="CommandLine.Internal.OptionGroupParser.OptionGroupParser(bool)"];
d33 [label="Entry CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", span="87-87", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d35 [label="ae.MoveNext()", span="90-90", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d37 [label="list.Add(ae.Current)", span="92-92", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d38 [label="!ae.MovePrevious()", span="95-95", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d60 [label="return Internal.ParserState.Success;", span="116-116", cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)"];
d41 [label="Exit CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)", span="87-87", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d34 [label="IList<string> list = new List<string>()", span="89-89", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d42 [label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="48-48", cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()"];
d43 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
d39 [label="throw new CommandLineParserException();", span="95-95", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d40 [label="return list;", span="96-96", cluster="CommandLine.Internal.ArgumentParser.GetNextInputValues(CommandLine.Internal.IArgumentEnumerator)"];
d44 [label="Entry CommandLine.Internal.IArgumentEnumerator.MovePrevious()", span="50-50", cluster="CommandLine.Internal.IArgumentEnumerator.MovePrevious()"];
d3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
d45 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="48-48", cluster="CommandLine.CommandLineParserException.CommandLineParserException()"];
d1 [label="PostParsingState = new List<ParsingError>()", span="45-45", cluster="CommandLine.Internal.ArgumentParser.ArgumentParser()"];
d67 [label="throw new CommandLineParserException();", span="128-128", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)"];
d71 [label="throw new CommandLineParserException();", span="136-136", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)"];
d73 [label="CommandLine.Internal.ArgumentParser", span=""];
d0 [label="Entry CommandLine.Internal.ArgumentParser.ArgumentParser()", span="43-43", cluster="CommandLine.Internal.ArgumentParser.ArgumentParser()"];
d2 [label="Exit CommandLine.Internal.ArgumentParser.ArgumentParser()", span="43-43", cluster="CommandLine.Internal.ArgumentParser.ArgumentParser()"];
d66 [label="!option.IsAttributeArrayCompatible", span="126-126", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)"];
d68 [label="Exit CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", span="124-124", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)"];
d70 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="134-134", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)"];
d72 [label="Exit CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", span="132-132", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)"];
d7 [label="PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="54-54", cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)"];
d65 [label="Entry CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)", span="124-124", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Internal.OptionInfo)"];
d69 [label="Entry CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)", span="132-132", cluster="CommandLine.Internal.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Internal.OptionInfo)"];
d6 [label="Entry CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", span="52-52", cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)"];
d8 [label="Exit CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)", span="52-52", cluster="CommandLine.Internal.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Internal.OptionInfo)"];
d9 [label="Entry CommandLine.ParsingError.ParsingError(char?, string, bool)", span="52-52", cluster="CommandLine.ParsingError.ParsingError(char?, string, bool)"];
d10 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
m1_0 [label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", span="46-46", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", file="AssemblyLicenseAttribute.cs"];
m1_1 [label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", span="46-46", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", file="AssemblyLicenseAttribute.cs"];
m1_2 [label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", span="56-56", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", file="AssemblyLicenseAttribute.cs"];
m1_3 [label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", span="56-56", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", file="AssemblyLicenseAttribute.cs"];
m1_8 [label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", span="92-92", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", file="AssemblyLicenseAttribute.cs"];
m1_9 [label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", span="92-92", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", file="AssemblyLicenseAttribute.cs"];
m1_6 [label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", span="79-79", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", file="AssemblyLicenseAttribute.cs"];
m1_7 [label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", span="79-79", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", file="AssemblyLicenseAttribute.cs"];
m1_4 [label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", span="67-67", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", file="AssemblyLicenseAttribute.cs"];
m1_5 [label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", span="67-67", cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", file="AssemblyLicenseAttribute.cs"];
m2_0 [label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="AssemblyUsageAttribute.cs"];
m2_1 [label="result.Tag == ResultType.Ok", span="14-14", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="AssemblyUsageAttribute.cs"];
m2_2 [label="var ok = (Ok<TSuccess, TMessage>)result", span="16-16", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="AssemblyUsageAttribute.cs"];
m2_4 [label="return Enumerable.Empty<TMessage>();", span="19-19", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="AssemblyUsageAttribute.cs"];
m2_3 [label="return ok.Value.Messages;", span="17-17", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="AssemblyUsageAttribute.cs"];
m2_5 [label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12", cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="AssemblyUsageAttribute.cs"];
m2_6 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="AssemblyUsageAttribute.cs"];
m6_6 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CommandLineParserException.cs"];
m6_0 [label="Entry Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", file="CommandLineParserException.cs"];
m6_1 [label="Exit Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", span="7-7", cluster="Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", file="CommandLineParserException.cs"];
m6_5 [label="Entry int.ToOrdinalWords()", span="54-54", cluster="int.ToOrdinalWords()", file="CommandLineParserException.cs"];
m6_2 [label="Entry Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="61-61", cluster="Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="CommandLineParserException.cs"];
m6_3 [label="Assert.Equal(words, number.ToOrdinalWords())", span="63-63", cluster="Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="CommandLineParserException.cs"];
m6_4 [label="Exit Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", span="61-61", cluster="Humanizer.Tests.Localisation.nl.NumberToOrdinalWordsTests.ToOrdinalWords(int, string)", file="CommandLineParserException.cs"];
m7_19 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLineParserSettings.cs"];
m7_20 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="532-532", cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLineParserSettings.cs"];
m7_23 [label="Entry Unk.False", span="", cluster="Unk.False", file="CommandLineParserSettings.cs"];
m7_47 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLineParserSettings.cs"];
m7_25 [label="Entry Unk.True", span="", cluster="Unk.True", file="CommandLineParserSettings.cs"];
m7_24 [label="Entry Unk.Null", span="", cluster="Unk.Null", file="CommandLineParserSettings.cs"];
m7_0 [label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_1 [label="string valueOne = ''one''", span="41-41", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_2 [label="string valueTwo = ''two''", span="42-42", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_4 [label="string[] values = { valueOne, valueTwo, valueThree }", span="45-45", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_7 [label="e.Current.Should().Equal(valueOne)", span="49-49", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_3 [label="string valueThree = ''three''", span="43-43", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_8 [label="e.Next.Should().Equal(valueTwo)", span="50-50", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_11 [label="e.Current.Should().Equal(valueTwo)", span="55-55", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_12 [label="e.Next.Should().Equal(valueThree)", span="56-56", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_15 [label="e.Current.Should().Equal(valueThree)", span="61-61", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_5 [label="IArgumentEnumerator e = new StringArrayEnumerator(values)", span="46-46", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_6 [label="e.MoveNext()", span="47-47", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_9 [label="e.IsLast.Should().Be.False()", span="51-51", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_10 [label="e.MoveNext()", span="53-53", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_13 [label="e.IsLast.Should().Be.False()", span="57-57", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_14 [label="e.MoveNext()", span="59-59", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_16 [label="e.Next.Should().Be.Null()", span="62-62", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_17 [label="e.IsLast.Should().Be.True()", span="63-63", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_18 [label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39", cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="CommandLineParserSettings.cs"];
m7_22 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="CommandLineParserSettings.cs"];
m7_21 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="CommandLineParserSettings.cs"];
m7_48 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLineParserSettings.cs"];
m7_26 [label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_27 [label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="69-69", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_28 [label="e.MoveNext()", span="70-70", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_29 [label="e.Current.Should().Equal(''a'')", span="72-72", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_30 [label="e.Next.Should().Equal(''b'')", span="73-73", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_31 [label="e.GetRemainingFromNext().Should().Equal(''bcd'')", span="74-74", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_32 [label="e.IsLast.Should().Be.False()", span="75-75", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_33 [label="e.MoveNext()", span="77-77", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_34 [label="e.Current.Should().Equal(''b'')", span="79-79", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_35 [label="e.Next.Should().Equal(''c'')", span="80-80", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_36 [label="e.GetRemainingFromNext().Should().Equal(''cd'')", span="81-81", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_37 [label="e.IsLast.Should().Be.False()", span="82-82", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_38 [label="e.MoveNext()", span="84-84", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_39 [label="e.Current.Should().Equal(''c'')", span="86-86", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_40 [label="e.Next.Should().Equal(''d'')", span="87-87", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_41 [label="e.GetRemainingFromNext().Should().Equal(''d'')", span="88-88", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_42 [label="e.IsLast.Should().Be.False()", span="89-89", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_43 [label="e.MoveNext()", span="91-91", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_44 [label="e.Current.Should().Equal(''d'')", span="93-93", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_45 [label="e.IsLast.Should().Be.True()", span="94-94", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m7_46 [label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67", cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="CommandLineParserSettings.cs"];
m10_3 [label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="62-62", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="HelpVerbOptionAttribute.cs"];
m10_4 [label="LongName = longName", span="64-64", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="HelpVerbOptionAttribute.cs"];
m10_5 [label="HelpText = DefaultHelpText", span="65-65", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="HelpVerbOptionAttribute.cs"];
m10_6 [label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="62-62", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="HelpVerbOptionAttribute.cs"];
m10_14 [label="Entry CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="100-100", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs"];
m10_18 [label="value.ReturnType == typeof(string) && value.GetParameters().Length == 1", span="102-102", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs"];
m10_19 [label="return value.GetParameters()[0].ParameterType == typeof(string);", span="104-104", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs"];
m10_20 [label="return false;", span="106-106", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs"];
m10_21 [label="Exit CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="100-100", cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs"];
m10_17 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="HelpVerbOptionAttribute.cs"];
m10_15 [label="Entry System.MemberAccessException.MemberAccessException(string)", span="0-0", cluster="System.MemberAccessException.MemberAccessException(string)", file="HelpVerbOptionAttribute.cs"];
m10_16 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="HelpVerbOptionAttribute.cs"];
m10_7 [label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="86-86", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs"];
m10_8 [label="text = null", span="89-89", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs"];
m10_9 [label="var method = helpInfo.Left", span="90-90", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs"];
m10_12 [label="text = (string) method.Invoke(target, new object[] {verb})", span="97-97", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs"];
m10_10 [label="!CheckMethodSignature(method)", span="91-91", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs"];
m10_11 [label="throw new MemberAccessException(string.Format(\r\n                    ''{0} has an incorrect signature. '' +\r\n                    ''Help verb command requires a method that accepts and returns a string.'', method.Name));", span="93-95", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", color=red, community=1, file="HelpVerbOptionAttribute.cs"];
m10_13 [label="Exit CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="86-86", cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs"];
m10_0 [label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="51-51", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="HelpVerbOptionAttribute.cs"];
m10_1 [label="HelpText = DefaultHelpText", span="54-54", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="HelpVerbOptionAttribute.cs"];
m10_2 [label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="51-51", cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="HelpVerbOptionAttribute.cs"];
m10_22 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="HelpVerbOptionAttribute.cs"];
m10_23 [label="CommandLine.HelpVerbOptionAttribute", span="", file="HelpVerbOptionAttribute.cs"];
m11_5 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="IArgumentEnumerator.cs"];
m11_9 [label="Entry Unk.BeFalse", span="", cluster="Unk.BeFalse", file="IArgumentEnumerator.cs"];
m11_0 [label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="IArgumentEnumerator.cs"];
m11_1 [label="ReflectionHelper.IsTypeMutable(typeof(FakeOptions)).Should().BeTrue()", span="14-14", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="IArgumentEnumerator.cs"];
m11_2 [label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", span="12-12", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_with_public_set_properties_or_fields_is_ranked_mutable()", file="IArgumentEnumerator.cs"];
m11_3 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsTypeMutable(System.Type)", span="39-39", cluster="CommandLine.Infrastructure.ReflectionHelper.IsTypeMutable(System.Type)", file="IArgumentEnumerator.cs"];
m11_6 [label="Entry CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="IArgumentEnumerator.cs"];
m11_7 [label="ReflectionHelper.IsTypeMutable(typeof(FakeImmutableOptions)).Should().BeFalse()", span="20-20", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="IArgumentEnumerator.cs"];
m11_8 [label="Exit CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", span="18-18", cluster="CommandLine.Tests.Unit.Infrastructure.ReflectionHelperTests.Class_without_public_set_properties_or_fields_is_ranked_immutable()", file="IArgumentEnumerator.cs"];
m11_4 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="IArgumentEnumerator.cs"];
m15_2 [label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", span="46-46", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", file="OptionArrayAttribute.cs"];
m15_3 [label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", span="46-46", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", file="OptionArrayAttribute.cs"];
m15_4 [label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", span="53-53", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", file="OptionArrayAttribute.cs"];
m15_5 [label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", span="53-53", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char, string)", file="OptionArrayAttribute.cs"];
m15_0 [label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="40-40", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="OptionArrayAttribute.cs"];
m15_1 [label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="40-40", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="OptionArrayAttribute.cs"];
m18_45 [label="Assert.Equal(''-512 KB'', ByteSize.FromMegabytes(-.5).ToString(''#.#''))", span="78-78", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", file="OptionInfo.Verbs.cs", color=green, community=0];
m18_63 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="58-58", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="OptionInfo.Verbs.cs"];
m18_10 [label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", span="16-16", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="OptionInfo.Verbs.cs"];
m18_103 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="OptionInfo.Verbs.cs"];
m18_23 [label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="52-52", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_24 [label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    factory.Return(f => f(), default(T)),\r\n                    new[] { new HelpRequestedError() });", span="54-57", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_25 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="60-60", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_53 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionInfo.Verbs.cs"];
m18_15 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_16 [label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="26-26", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_17 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_43 [label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", span="70-70", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", file="OptionInfo.Verbs.cs"];
m18_69 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="OptionInfo.Verbs.cs"];
m18_96 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_110 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="OptionInfo.Verbs.cs"];
m18_125 [label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26", cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="OptionInfo.Verbs.cs"];
m18_7 [label="return explodedTokens;", span="27-27", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_4 [label="Entry lambda expression", span="21-28", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_44 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="OptionInfo.Verbs.cs"];
m18_46 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="OptionInfo.Verbs.cs"];
m18_18 [label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93", cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="OptionInfo.Verbs.cs"];
m18_56 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="OptionInfo.Verbs.cs"];
m18_68 [label="Entry System.Type.CreateDefaultForImmutable()", span="122-122", cluster="System.Type.CreateDefaultForImmutable()", file="OptionInfo.Verbs.cs"];
m18_66 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="OptionInfo.Verbs.cs"];
m18_72 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="OptionInfo.Verbs.cs"];
m18_74 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="OptionInfo.Verbs.cs"];
m18_118 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="OptionInfo.Verbs.cs"];
m18_114 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="OptionInfo.Verbs.cs"];
m18_85 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="OptionInfo.Verbs.cs"];
m18_14 [label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", span="22-22", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="OptionInfo.Verbs.cs"];
m18_65 [label="Entry Unk.GetConstructor", span="", cluster="Unk.GetConstructor", file="OptionInfo.Verbs.cs"];
m18_49 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="OptionInfo.Verbs.cs"];
m18_58 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="OptionInfo.Verbs.cs"];
m18_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="OptionInfo.Verbs.cs"];
m18_51 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="OptionInfo.Verbs.cs"];
m18_71 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="OptionInfo.Verbs.cs"];
m18_86 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_5 [label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103", cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="OptionInfo.Verbs.cs"];
m18_12 [label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", span="22-22", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="OptionInfo.Verbs.cs"];
m18_6 [label="Entry Humanizer.Bytes.ByteSize.ToString()", span="129-129", cluster="Humanizer.Bytes.ByteSize.ToString()", file="OptionInfo.Verbs.cs"];
m18_11 [label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="134-134", cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="OptionInfo.Verbs.cs"];
m18_8 [label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", span="16-16", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="OptionInfo.Verbs.cs"];
m18_13 [label="Assert.Equal(''10.1234 KB'', ByteSize.FromKilobytes(10.1234).ToString(''#.#### KB''))", span="24-24", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="OptionInfo.Verbs.cs"];
m18_90 [label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="66-66", cluster="lambda expression", color=red, community=0, file="OptionInfo.Verbs.cs"];
m18_94 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="71-71", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_98 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="77-77", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_101 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="81-81", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_75 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_80 [label="Entry lambda expression", span="43-44", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_89 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_93 [label="Entry lambda expression", span="71-71", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_97 [label="Entry lambda expression", span="77-77", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_100 [label="Entry lambda expression", span="81-81", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_104 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_132 [label="Entry lambda expression", span="108-108", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_135 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_107 [label="Entry lambda expression", span="91-91", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_111 [label="Entry lambda expression", span="92-92", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_115 [label="Entry lambda expression", span="94-94", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_119 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_122 [label="Entry lambda expression", span="97-99", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_126 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_76 [label="f().GetType()", span="41-41", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_77 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_81 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="43-44", cluster="lambda expression", color=red, community=0, file="OptionInfo.Verbs.cs"];
m18_82 [label="Exit lambda expression", span="43-44", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_87 [label="f()", span="56-56", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_88 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_91 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_95 [label="Exit lambda expression", span="71-71", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_99 [label="Exit lambda expression", span="77-77", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_102 [label="Exit lambda expression", span="81-81", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_105 [label="f()", span="88-88", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_106 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_108 [label="sp.Value.IsJust()", span="91-91", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_109 [label="Exit lambda expression", span="91-91", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_112 [label="sp.Value.FromJust()", span="92-92", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_113 [label="Exit lambda expression", span="92-92", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_116 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="94-94", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_117 [label="Exit lambda expression", span="94-94", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_120 [label="sp.Specification.DefaultValue.FromJust()", span="95-95", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_121 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_123 [label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="97-99", cluster="lambda expression", color=red, community=0, file="OptionInfo.Verbs.cs"];
m18_124 [label="Exit lambda expression", span="97-99", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_127 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="100-100", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_128 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_133 [label=v, span="108-108", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_134 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_136 [label=d, span="109-109", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_137 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="OptionInfo.Verbs.cs"];
m18_48 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="OptionInfo.Verbs.cs"];
m18_78 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="OptionInfo.Verbs.cs"];
m18_79 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="OptionInfo.Verbs.cs"];
m18_57 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="265-265", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="OptionInfo.Verbs.cs"];
m18_73 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="OptionInfo.Verbs.cs"];
m18_130 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="OptionInfo.Verbs.cs"];
m18_29 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="74-77", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_131 [label="Entry System.Type.CreateEmptyArray()", span="101-101", cluster="System.Type.CreateEmptyArray()", file="OptionInfo.Verbs.cs"];
m18_26 [label="var tokens = tokenizerResult.Value", span="62-62", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_27 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="64-66", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.Verbs.cs"];
m18_28 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="68-72", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_67 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="OptionInfo.Verbs.cs"];
m18_129 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="OptionInfo.Verbs.cs"];
m18_9 [label="Assert.Equal(''10.5 KB'', ByteSize.FromKilobytes(10.5).ToString(''KB''))", span="18-18", cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="OptionInfo.Verbs.cs"];
m18_30 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="79-81", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_31 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="83-83", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="OptionInfo.Verbs.cs"];
m18_32 [label="T instance", span="85-85", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_38 [label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="106-110", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_39 [label="instance = (T)ctor.Invoke(values)", span="111-111", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_40 [label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="114-115", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_83 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="OptionInfo.Verbs.cs"];
m18_92 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="OptionInfo.Verbs.cs"];
m18_34 [label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="88-88", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_35 [label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="89-100", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="OptionInfo.Verbs.cs"];
m18_36 [label="var t = typeof(T)", span="104-104", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_62 [label="Entry System.Activator.CreateInstance<T>()", span="0-0", cluster="System.Activator.CreateInstance<T>()", file="OptionInfo.Verbs.cs"];
m18_54 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="OptionInfo.Verbs.cs"];
m18_61 [label="Entry System.Type.IsMutable()", span="115-115", cluster="System.Type.IsMutable()", file="OptionInfo.Verbs.cs"];
m18_84 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionInfo.Verbs.cs"];
m18_41 [label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="117-124", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_42 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="34-34", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_33 [label="typeInfo.IsMutable()", span="86-86", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_19 [label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="41-41", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_20 [label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="43-44", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_21 [label="var specs = from pt in specProps select pt.Specification", span="46-46", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs", color=red, community=0];
m18_37 [label="var ctor = t.GetConstructor((from p in specProps select p.Specification.ConversionType).ToArray())", span="105-105", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="19-31", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CommandLine.Infrastructure.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="OptionInfo.Verbs.cs"];
m18_22 [label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98", cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="OptionInfo.Verbs.cs"];
m18_70 [label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0", cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="OptionInfo.Verbs.cs"];
m18_64 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="OptionInfo.Verbs.cs"];
m18_50 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="353-353", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="OptionInfo.Verbs.cs"];
m18_59 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="OptionInfo.Verbs.cs"];
m18_52 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="OptionInfo.Verbs.cs"];
m18_60 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="OptionInfo.Verbs.cs"];
m18_55 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="OptionInfo.Verbs.cs"];
m18_138 [label="System.StringComparer", span="", file="OptionInfo.Verbs.cs"];
m18_139 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="OptionInfo.Verbs.cs"];
m18_140 [label="System.StringComparer", span="", file="OptionInfo.Verbs.cs"];
m18_141 [label=optionSpecs, span="", file="OptionInfo.Verbs.cs"];
m18_142 [label="System.Globalization.CultureInfo", span="", file="OptionInfo.Verbs.cs"];
m18_143 [label=token, span="", file="OptionInfo.Verbs.cs"];
m19_0 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="OptionListAttribute.cs"];
m19_1 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="OptionListAttribute.cs"];
m19_7 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="67-67", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs"];
m19_8 [label="Separator = separator", span="70-70", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs"];
m19_9 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="67-67", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs"];
m19_2 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string)", span="48-48", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="OptionListAttribute.cs"];
m19_3 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string)", span="48-48", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="OptionListAttribute.cs"];
m19_4 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="55-55", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs"];
m19_5 [label="Separator = ':'", span="58-58", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs"];
m19_6 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="55-55", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs"];
m19_10 [label="CommandLine.OptionListAttribute", span="", file="OptionListAttribute.cs"];
m20_37 [label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_57 [label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="178-178", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_61 [label="property.GetValue(options, null) == null", span="185-185", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_62 [label="property.SetValue(options, new CommandLine.ParserState(), null)", span="187-187", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_63 [label="var parserState = (IParserState)property.GetValue(options, null)", span="189-189", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_66 [label="var error = new ParsingError\r\n            {\r\n                BadOption =\r\n                {\r\n                    ShortName = option.ShortName,\r\n                    LongName = option.LongName\r\n                }\r\n            }", span="194-201", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_67 [label="required != null", span="202-202", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_68 [label="error.ViolatesRequired = required.Value", span="202-202", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_69 [label="mutualExclusiveness != null", span="203-203", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_70 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="203-203", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_58 [label="list.Count == 0", span="179-179", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_60 [label="var property = list[0].Left", span="183-183", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_59 [label="return;", span="181-181", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_64 [label="parserState == null", span="190-190", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_71 [label="parserState.Errors.Add(error)", span="204-204", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_65 [label="return;", span="192-192", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_72 [label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="176-176", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="OptionMap.cs"];
m20_49 [label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_50 [label="var setName = option.MutuallyExclusiveSet", span="168-168", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_52 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="171-171", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_51 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="169-169", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_53 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="173-173", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_54 [label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="166-166", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_24 [label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="128-128", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_30 [label="bool requiredRulesAllMet = true", span="130-130", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_31 [label="_map.Values", span="131-131", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_35 [label="return requiredRulesAllMet;", span="139-139", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_32 [label="option.Required && !option.IsDefined", span="133-133", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_33 [label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="135-135", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_34 [label="requiredRulesAllMet = false", span="136-136", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_36 [label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="128-128", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="OptionMap.cs"];
m20_29 [label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="197-197", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionMap.cs"];
m20_25 [label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="120-120", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs"];
m20_26 [label="_map.Values", span="122-122", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs"];
m20_27 [label="option.SetDefault(RawOptions)", span="124-124", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs"];
m20_28 [label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="120-120", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="OptionMap.cs"];
m20_20 [label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="115-115", cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionMap.cs"];
m20_21 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="117-117", cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionMap.cs"];
m20_22 [label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="115-115", cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="OptionMap.cs"];
m20_56 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="OptionMap.cs"];
m20_75 [label="Entry CommandLine.ParserState.ParserState()", span="47-47", cluster="CommandLine.ParserState.ParserState()", file="OptionMap.cs"];
m20_0 [label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="45-45", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="OptionMap.cs"];
m20_1 [label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="45-45", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="OptionMap.cs"];
m20_8 [label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_9 [label="_settings = settings", span="63-63", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_14 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="74-74", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_15 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="75-75", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_17 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="78-78", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_10 [label="IEqualityComparer<string> comparer", span="65-65", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_11 [label="_settings.CaseSensitive", span="66-66", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_12 [label="comparer = StringComparer.Ordinal", span="68-68", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_13 [label="comparer = StringComparer.OrdinalIgnoreCase", span="72-72", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_16 [label="_settings.MutuallyExclusive", span="76-76", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_18 [label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMap.cs"];
m20_73 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="OptionMap.cs"];
m20_76 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionMap.cs"];
m20_77 [label="Entry CommandLine.ParsingError.ParsingError()", span="47-47", cluster="CommandLine.ParsingError.ParsingError()", file="OptionMap.cs"];
m20_55 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionMap.cs"];
m20_74 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionMap.cs"];
m20_2 [label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_3 [label="BadOption = option", span="49-49", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_4 [label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="47-47", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="OptionMap.cs"];
m20_5 [label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs"];
m20_6 [label="++_count", span="54-54", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs"];
m20_7 [label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="54-54", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="OptionMap.cs"];
m20_23 [label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_38 [label="!_settings.MutuallyExclusive", span="144-144", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_39 [label="return true;", span="146-146", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_40 [label="_map.Values", span="148-148", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_41 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="150-150", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_43 [label="_mutuallyExclusiveSetMap.Values", span="155-155", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_42 [label="BuildMutuallyExclusiveMap(option)", span="152-152", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_44 [label="info.Occurrence > 1", span="157-157", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_47 [label="return true;", span="163-163", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_45 [label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="159-159", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_46 [label="return false;", span="160-160", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_48 [label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="142-142", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="OptionMap.cs"];
m20_19 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="OptionMap.cs"];
m20_79 [label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span="", file="OptionMap.cs"];
m20_80 [label="CommandLine.Internal.OptionMap", span="", file="OptionMap.cs"];
m21_22 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="Pair.cs"];
m21_24 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Pair.cs"];
m21_11 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="Pair.cs"];
m21_17 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="Pair.cs"];
m21_13 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="Pair.cs"];
m21_12 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="Pair.cs"];
m21_0 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_1 [label="name == null", span="16-16", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_3 [label="specifications == null", span="17-17", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_5 [label="comparer == null", span="18-18", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_7 [label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max)))", span="20-24", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_2 [label="throw new ArgumentNullException(''name'');", span="16-16", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_4 [label="throw new ArgumentNullException(''specifications'');", span="17-17", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_6 [label="throw new ArgumentNullException(''comparer'');", span="18-18", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_8 [label="return info;", span="25-25", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_9 [label="Exit CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Pair.cs"];
m21_23 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="Pair.cs"];
m21_21 [label="Entry Unk.ToDescriptor", span="", cluster="Unk.ToDescriptor", file="Pair.cs"];
m21_18 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="Pair.cs"];
m21_15 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="20-20", cluster="lambda expression", file="Pair.cs"];
m21_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Pair.cs"];
m21_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="Pair.cs"];
m21_19 [label="Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max))", span="23-24", cluster="lambda expression", file="Pair.cs"];
m21_20 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="Pair.cs"];
m21_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Pair.cs"];
m21_25 [label=string, span="", file="Pair.cs"];
m21_26 [label="System.StringComparer", span="", file="Pair.cs"];
m23_78 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtil.cs"];
m23_51 [label="Entry CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", span="137-137", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs"];
m23_52 [label="object[] a = AssemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="140-140", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs"];
m23_53 [label="a.Length <= 0", span="141-141", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs"];
m23_55 [label="return (TAttribute)a[0];", span="143-143", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs"];
m23_54 [label="return null;", span="141-141", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs"];
m23_56 [label="Exit CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", span="137-137", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs"];
m23_39 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="112-112", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_40 [label="IList<TAttribute> list = new List<TAttribute>()", span="115-115", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_41 [label="var info = target.GetType().GetProperties()", span="116-116", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_48 [label="list.Add((TAttribute)attribute)", span="128-128", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_49 [label="return list;", span="134-134", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_42 [label=info, span="118-118", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_43 [label="property != null && (property.CanRead && property.CanWrite)", span="120-120", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_44 [label="var setMethod = property.GetSetMethod()", span="122-122", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_46 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="125-125", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_45 [label="setMethod != null && !setMethod.IsStatic", span="123-123", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_47 [label="attribute != null", span="126-126", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_50 [label="Exit CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="112-112", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_17 [label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="ReflectionUtil.cs"];
m23_20 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="70-70", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_21 [label="var info = target.GetType().GetMethods()", span="73-73", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_22 [label=info, span="75-75", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_23 [label="!method.IsStatic", span="77-77", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_27 [label="return null;", span="88-88", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_24 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="79-80", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_26 [label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="83-83", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_25 [label="attribute != null", span="81-81", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_28 [label="Exit CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="70-70", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_30 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="91-91", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_31 [label="var info = target.GetType().GetMethods()", span="94-94", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_32 [label=info, span="96-96", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_33 [label="!method.IsStatic", span="98-98", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_37 [label="return null;", span="109-109", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_34 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="100-101", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_35 [label="attribute != null", span="102-102", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_36 [label="return (TAttribute)attribute;", span="104-104", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_38 [label="Exit CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="91-91", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_18 [label="Entry CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="37-37", cluster="CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="ReflectionUtil.cs"];
m23_57 [label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionUtil.cs"];
m23_74 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="ReflectionUtil.cs"];
m23_16 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="ReflectionUtil.cs"];
m23_58 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="151-151", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_59 [label="Pair<PropertyInfo, TAttribute> found = null", span="154-154", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_60 [label="target == null", span="155-155", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_62 [label="var propertiesInfo = target.GetType().GetProperties()", span="156-156", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_69 [label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", span="167-167", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_72 [label="return found;", span="175-175", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_61 [label="return null;", span="155-155", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_63 [label=propertiesInfo, span="158-158", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_64 [label="property != null && (property.CanRead && property.CanWrite)", span="160-160", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_65 [label="var setMethod = property.GetSetMethod()", span="162-162", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_67 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="165-165", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_70 [label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute)", span="169-169", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_66 [label="setMethod != null && !setMethod.IsStatic", span="163-163", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_68 [label="var optionAttr = (TAttribute)attribute", span="166-166", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_71 [label="return found;", span="170-170", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_73 [label="Exit CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="151-151", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs"];
m23_14 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="ReflectionUtil.cs"];
m23_75 [label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs"];
m23_76 [label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="180-180", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs"];
m23_77 [label="Exit CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs"];
m23_0 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_1 [label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="46-46", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_2 [label="target != null", span="47-47", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_3 [label="var propertiesInfo = target.GetType().GetProperties()", span="49-49", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_10 [label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="61-61", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_11 [label="return list;", span="67-67", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_4 [label=propertiesInfo, span="51-51", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_5 [label="property != null && (property.CanRead && property.CanWrite)", span="53-53", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_6 [label="var setMethod = property.GetSetMethod()", span="55-55", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_8 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="58-58", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_7 [label="setMethod != null && !setMethod.IsStatic", span="56-56", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_9 [label="attribute != null", span="59-59", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_12 [label="Exit CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs"];
m23_29 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="ReflectionUtil.cs"];
m23_15 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="ReflectionUtil.cs"];
m23_13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtil.cs"];
m24_6 [label="Entry System.Type.ToDescriptorKind()", span="22-22", cluster="System.Type.ToDescriptorKind()", file="StringArrayEnumerator.cs"];
m24_0 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="StringArrayEnumerator.cs"];
m24_1 [label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="StringArrayEnumerator.cs"];
m24_2 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="StringArrayEnumerator.cs"];
m24_7 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="StringArrayEnumerator.cs"];
m24_8 [label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="StringArrayEnumerator.cs"];
m24_9 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="StringArrayEnumerator.cs"];
m24_18 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_4 [label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Scalar && (spec.Min > 0 || spec.Max > 0)", span="18-18", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_3 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_5 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_11 [label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_10 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_12 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_19 [label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_20 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="StringArrayEnumerator.cs"];
m24_15 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="StringArrayEnumerator.cs"];
m24_16 [label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="StringArrayEnumerator.cs"];
m24_17 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="StringArrayEnumerator.cs"];
m24_21 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()", file="StringArrayEnumerator.cs"];
m24_13 [label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70", cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="StringArrayEnumerator.cs"];
m24_14 [label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="75-75", cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="StringArrayEnumerator.cs"];
m25_5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24", cluster="lambda expression", file="StringUtil.cs"];
m25_6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27", cluster="lambda expression", file="StringUtil.cs"];
m25_7 [label="return explodedTokens;", span="28-28", cluster="lambda expression", file="StringUtil.cs"];
m25_57 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="StringUtil.cs"];
m25_48 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate", file="StringUtil.cs"];
m25_80 [label="Entry NotParsed<T>.cstr", span="", cluster="NotParsed<T>.cstr", file="StringUtil.cs"];
m25_67 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="71-71", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="StringUtil.cs"];
m25_115 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="StringUtil.cs"];
m25_53 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StringUtil.cs"];
m25_3 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="StringUtil.cs"];
m25_19 [label="Entry CommandLine.Internal.StringUtil.IsLineTerminator(char)", span="71-71", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_20 [label=c, span="73-73", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_36 [label="typeInfo.IsMutable()", span="95-95", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_39 [label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="113-113", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_24 [label="'\x2029'", span="78-78", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_23 [label="'\x2028'", span="77-77", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", file="StringUtil.cs"];
m25_25 [label="return true;", span="79-79", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_28 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="68-68", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="StringUtil.cs"];
m25_26 [label="return false;", span="82-82", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_27 [label="Exit CommandLine.Internal.StringUtil.IsLineTerminator(char)", span="71-71", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_22 [label="'\xA'", span="76-76", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_29 [label="var tokens = tokenizerResult.SucceededWith()", span="70-70", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_43 [label="var allErrors = tokenizerResult.SuccessfulMessages()\r\n                .Concat(missingValueErrors)\r\n                .Concat(optionSpecProps.SuccessfulMessages())\r\n                .Concat(valueSpecProps.SuccessfulMessages())\r\n                .Concat(validationErrors)", span="125-129", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_32 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-85", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="StringUtil.cs"];
m25_30 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="72-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_31 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="76-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_33 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="87-89", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_34 [label="var specPropsWithValue = optionSpecProps.SucceededWith()\r\n                .Concat(valueSpecProps.SucceededWith())", span="91-92", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_21 [label="'\xD'", span="75-75", cluster="CommandLine.Internal.StringUtil.IsLineTerminator(char)", color=green, community=0, file="StringUtil.cs"];
m25_37 [label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="97-97", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_40 [label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="114-118", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_35 [label="T instance", span="94-94", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_41 [label="instance = (T)ctor.Invoke(values)", span="119-119", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_42 [label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="122-123", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_44 [label="return allErrors.Any()\r\n                ? (ParserResult<T>)new NotParsed<T>(instance, allErrors)\r\n                : (ParserResult<T>)new Parsed<T>(instance);", span="131-133", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_38 [label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="98-109", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_45 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_86 [label="Entry Unk.GetType", span="", cluster="Unk.GetType", file="StringUtil.cs"];
m25_70 [label="Entry Unk.GetParameters", span="", cluster="Unk.GetParameters", file="StringUtil.cs"];
m25_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-32", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="StringUtil.cs"];
m25_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_108 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="StringUtil.cs"];
m25_10 [label=c, span="56-56", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_97 [label="Entry Unk.>", span="", cluster="Unk.>", file="StringUtil.cs"];
m25_79 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="StringUtil.cs"];
m25_18 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_60 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="StringUtil.cs"];
m25_76 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="StringUtil.cs"];
m25_8 [label="Exit lambda expression", span="22-29", cluster="lambda expression", file="StringUtil.cs"];
m25_14 [label="'\t'", span="62-62", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_69 [label="Entry Unk.GetConstructor", span="", cluster="Unk.GetConstructor", file="StringUtil.cs"];
m25_62 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StringUtil.cs"];
m25_74 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke", file="StringUtil.cs"];
m25_50 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="StringUtil.cs"];
m25_54 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="StringUtil.cs"];
m25_75 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringUtil.cs"];
m25_15 [label="return true;", span="63-63", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_82 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="StringUtil.cs"];
m25_109 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="StringUtil.cs"];
m25_110 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="85-85", cluster="lambda expression", color=green, community=0, file="StringUtil.cs"];
m25_111 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="StringUtil.cs"];
m25_87 [label="Entry lambda expression", span="44-45", cluster="lambda expression", file="StringUtil.cs"];
m25_94 [label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="54-57", cluster="lambda expression", file="StringUtil.cs"];
m25_102 [label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="74-74", cluster="lambda expression", file="StringUtil.cs"];
m25_83 [label="f().GetType()", span="42-42", cluster="lambda expression", color=green, community=0, file="StringUtil.cs"];
m25_84 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="StringUtil.cs"];
m25_88 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="44-45", cluster="lambda expression", color=green, community=0, file="StringUtil.cs"];
m25_89 [label="Exit lambda expression", span="44-45", cluster="lambda expression", file="StringUtil.cs"];
m25_106 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79", cluster="lambda expression", file="StringUtil.cs"];
m25_113 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="89-89", cluster="lambda expression", file="StringUtil.cs"];
m25_101 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="StringUtil.cs"];
m25_105 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="StringUtil.cs"];
m25_112 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="StringUtil.cs"];
m25_93 [label="Entry lambda expression", span="53-57", cluster="lambda expression", file="StringUtil.cs"];
m25_95 [label="Exit lambda expression", span="53-57", cluster="lambda expression", file="StringUtil.cs"];
m25_98 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="StringUtil.cs"];
m25_103 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="StringUtil.cs"];
m25_99 [label="f()", span="55-55", cluster="lambda expression", file="StringUtil.cs"];
m25_117 [label="f()", span="97-97", cluster="lambda expression", file="StringUtil.cs"];
m25_4 [label="Entry lambda expression", span="22-29", cluster="lambda expression", file="StringUtil.cs"];
m25_107 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="StringUtil.cs"];
m25_114 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="StringUtil.cs"];
m25_116 [label="Entry lambda expression", span="97-97", cluster="lambda expression", file="StringUtil.cs"];
m25_144 [label="Entry lambda expression", span="116-116", cluster="lambda expression", file="StringUtil.cs"];
m25_147 [label="Entry lambda expression", span="117-117", cluster="lambda expression", file="StringUtil.cs"];
m25_119 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="StringUtil.cs"];
m25_123 [label="Entry lambda expression", span="101-101", cluster="lambda expression", file="StringUtil.cs"];
m25_127 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="StringUtil.cs"];
m25_131 [label="Entry lambda expression", span="104-104", cluster="lambda expression", file="StringUtil.cs"];
m25_134 [label="Entry lambda expression", span="106-108", cluster="lambda expression", file="StringUtil.cs"];
m25_138 [label="Entry lambda expression", span="109-109", cluster="lambda expression", file="StringUtil.cs"];
m25_100 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="StringUtil.cs"];
m25_118 [label="Exit lambda expression", span="97-97", cluster="lambda expression", file="StringUtil.cs"];
m25_12 [label="'\v'", span="60-60", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_16 [label="return (c > 127 && char.IsWhiteSpace(c));", span="67-67", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_146 [label="Exit lambda expression", span="116-116", cluster="lambda expression", file="StringUtil.cs"];
m25_145 [label=v, span="116-116", cluster="lambda expression", file="StringUtil.cs"];
m25_149 [label="Exit lambda expression", span="117-117", cluster="lambda expression", file="StringUtil.cs"];
m25_148 [label=d, span="117-117", cluster="lambda expression", file="StringUtil.cs"];
m25_121 [label="Exit lambda expression", span="100-100", cluster="lambda expression", file="StringUtil.cs"];
m25_120 [label="sp.Value.IsJust()", span="100-100", cluster="lambda expression", file="StringUtil.cs"];
m25_125 [label="Exit lambda expression", span="101-101", cluster="lambda expression", file="StringUtil.cs"];
m25_124 [label="sp.Value.FromJust()", span="101-101", cluster="lambda expression", file="StringUtil.cs"];
m25_129 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="StringUtil.cs"];
m25_128 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="103-103", cluster="lambda expression", file="StringUtil.cs"];
m25_133 [label="Exit lambda expression", span="104-104", cluster="lambda expression", file="StringUtil.cs"];
m25_132 [label="sp.Specification.DefaultValue.FromJust()", span="104-104", cluster="lambda expression", file="StringUtil.cs"];
m25_136 [label="Exit lambda expression", span="106-108", cluster="lambda expression", file="StringUtil.cs"];
m25_135 [label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="106-108", cluster="lambda expression", file="StringUtil.cs"];
m25_140 [label="Exit lambda expression", span="109-109", cluster="lambda expression", file="StringUtil.cs"];
m25_139 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="109-109", cluster="lambda expression", file="StringUtil.cs"];
m25_11 [label="'\f'", span="59-59", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_13 [label="' '", span="61-61", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_17 [label="Exit CommandLine.Internal.StringUtil.IsWhiteSpace(char)", span="54-54", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_52 [label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="StringUtil.cs"];
m25_47 [label="Entry Unk.GetSpecifications", span="", cluster="Unk.GetSpecifications", file="StringUtil.cs"];
m25_77 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="12-12", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", file="StringUtil.cs"];
m25_78 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="StringUtil.cs"];
m25_61 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="StringUtil.cs"];
m25_73 [label="Entry Unk.CreateDefaultForImmutable", span="", cluster="Unk.CreateDefaultForImmutable", file="StringUtil.cs"];
m25_81 [label="Entry CommandLine.Parsed<T>.Parsed(T)", span="72-72", cluster="CommandLine.Parsed<T>.Parsed(T)", file="StringUtil.cs"];
m25_142 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="StringUtil.cs"];
m25_143 [label="Entry System.Type.CreateEmptyArray()", span="114-114", cluster="System.Type.CreateEmptyArray()", file="StringUtil.cs"];
m25_72 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="StringUtil.cs"];
m25_141 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="StringUtil.cs"];
m25_9 [label="Entry CommandLine.Internal.StringUtil.IsWhiteSpace(char)", span="54-54", cluster="CommandLine.Internal.StringUtil.IsWhiteSpace(char)", file="StringUtil.cs"];
m25_46 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="StringUtil.cs"];
m25_104 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="StringUtil.cs"];
m25_126 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()", file="StringUtil.cs"];
m25_85 [label="Entry Unk.f", span="", cluster="Unk.f", file="StringUtil.cs"];
m25_91 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="StringUtil.cs"];
m25_56 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="StringUtil.cs"];
m25_58 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="StringUtil.cs"];
m25_66 [label="Entry System.Activator.CreateInstance<T>()", span="0-0", cluster="System.Activator.CreateInstance<T>()", file="StringUtil.cs"];
m25_130 [label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="334-334", cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="StringUtil.cs"];
m25_137 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()", file="StringUtil.cs"];
m25_96 [label="Entry System.Type.IsMutable()", span="128-128", cluster="System.Type.IsMutable()", file="StringUtil.cs"];
m25_92 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="StringUtil.cs"];
m25_71 [label="Entry Unk.ToLower", span="", cluster="Unk.ToLower", file="StringUtil.cs"];
m25_63 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="StringUtil.cs"];
m25_51 [label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11", cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="StringUtil.cs"];
m25_49 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="StringUtil.cs"];
m25_65 [label="Entry Unk.IsMutable", span="", cluster="Unk.IsMutable", file="StringUtil.cs"];
m25_68 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="StringUtil.cs"];
m25_122 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326", cluster="CSharpx.Maybe<T>.IsJust<T>()", file="StringUtil.cs"];
m25_90 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="StringUtil.cs"];
m25_55 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="StringUtil.cs"];
m25_64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="StringUtil.cs"];
m25_59 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="StringUtil.cs"];
m25_156 [label="System.Globalization.CultureInfo", span="", file="StringUtil.cs"];
m25_152 [label="CSharpx.Maybe<System.Func<T>>", span="", file="StringUtil.cs"];
m25_153 [label=specProps, span="", file="StringUtil.cs"];
m25_154 [label="System.StringComparer", span="", file="StringUtil.cs"];
m25_155 [label=optionSpecs, span="", file="StringUtil.cs"];
m25_157 [label=token, span="", file="StringUtil.cs"];
m25_150 [label="System.StringComparer", span="", file="StringUtil.cs"];
m25_151 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="StringUtil.cs"];
m28_3 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="57-57", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs"];
m28_4 [label="concreteType == null", span="60-60", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs"];
m28_6 [label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="61-61", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs"];
m28_8 [label="_concreteType = concreteType", span="65-65", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs"];
m28_5 [label="throw new ArgumentNullException(''concreteType'');", span="60-60", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs"];
m28_7 [label="throw new CommandLineParserException(''The types are incompatible.'');", span="63-63", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs"];
m28_9 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="57-57", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs"];
m28_25 [label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="86-86", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_26 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="88-88", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_27 [label="list == null || list.Count == 0", span="89-89", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_29 [label="list.Count > 1", span="90-90", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_31 [label="var pairZero = list[0]", span="91-91", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_28 [label="return null;", span="89-89", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_30 [label="throw new InvalidOperationException();", span="90-90", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_32 [label="return pairZero.Right;", span="92-92", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_33 [label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="86-86", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs"];
m28_13 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="77-77", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_14 [label="Type concreteType", span="79-79", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_15 [label="var property = GetProperty(target, out concreteType)", span="80-80", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_18 [label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="82-82", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_19 [label="return (IList<string>)property.GetValue(target, null);", span="83-83", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_16 [label="property == null || concreteType == null", span="81-81", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_17 [label="return null;", span="81-81", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_20 [label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="77-77", cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs"];
m28_21 [label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="95-95", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_36 [label="concreteType = null", span="97-97", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_37 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="98-98", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_38 [label="list == null || list.Count == 0", span="99-99", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_40 [label="list.Count > 1", span="100-100", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_42 [label="var pairZero = list[0]", span="101-101", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_39 [label="return null;", span="99-99", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_41 [label="throw new InvalidOperationException();", span="100-100", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_43 [label="concreteType = pairZero.Right.ConcreteType", span="102-102", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_44 [label="return pairZero.Left;", span="103-103", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_45 [label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="95-95", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs"];
m28_0 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="47-47", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs"];
m28_1 [label="MaximumElements = -1", span="49-49", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs"];
m28_2 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="47-47", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs"];
m28_22 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)", file="ValueListAttribute.cs"];
m28_23 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ValueListAttribute.cs"];
m28_34 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ValueListAttribute.cs"];
m28_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueListAttribute.cs"];
m28_11 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)", file="ValueListAttribute.cs"];
m28_12 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="52-52", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="ValueListAttribute.cs"];
m28_24 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ValueListAttribute.cs"];
m28_35 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="ValueListAttribute.cs"];
m28_46 [label="CommandLine.ValueListAttribute", span="", file="ValueListAttribute.cs"];
m29_3 [label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="61-61", cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="VerbOptionAttribute.cs"];
m29_0 [label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="47-47", cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs"];
m29_1 [label="Assumes.NotNullOrEmpty(longName, ''longName'')", span="50-50", cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs"];
m29_2 [label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="47-47", cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs"];
d14 -> d15  [key=0, style=solid, color=green];
d14 -> d16  [key=0, style=solid, color=green];
d14 -> d23  [key=2, style=dotted, color=green];
d11 -> d14  [key=1, style=dashed, color=green, label=string];
d11 -> d16  [key=1, style=dashed, color=green, label=string];
d11 -> d12  [key=0, style=solid];
d11 -> d17  [key=1, style=dashed, color=darkseagreen4, label=bool];
d11 -> d18  [key=1, style=dashed, color=darkseagreen4, label=string];
d11 -> d19  [key=1, style=dashed, color=darkseagreen4, label=bool];
d12 -> d14  [key=0, style=solid, color=green];
d12 -> d13  [key=0, style=solid];
d12 -> d22  [key=2, style=dotted];
d15 -> d21  [key=0, style=solid, color=green];
d16 -> d17  [key=0, style=solid, color=green];
d16 -> d18  [key=0, style=solid, color=green];
d17 -> d21  [key=0, style=solid];
d17 -> d24  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d18 -> d20  [key=0, style=solid];
d21 -> d11  [key=0, style=bold, color=blue];
d29 -> d30  [key=0, style=solid, color=green];
d29 -> d31  [key=0, style=solid, color=green];
d26 -> d29  [key=1, style=dashed, color=green, label=string];
d26 -> d27  [key=0, style=solid];
d26 -> d30  [key=1, style=dashed, color=darkseagreen4, label=string];
d27 -> d29  [key=0, style=solid, color=green];
d27 -> d28  [key=0, style=solid];
d27 -> d22  [key=2, style=dotted];
d30 -> d23  [key=2, style=dotted];
d30 -> d32  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d56 -> d57  [key=0, style=solid, color=green];
d56 -> d58  [key=2, style=dotted, color=green];
d55 -> d56  [key=0, style=solid, color=green];
d55 -> d58  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Internal.ParserState BooleanToParserState"];
d58 -> d56  [key=3, color=green, style=bold, label="Parameter variable bool addMoveNextIfTrue"];
d58 -> d55  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
d58 -> d59  [key=0, style=solid];
d58 -> d61  [key=1, style=dashed, color=darkseagreen4, label=bool];
d58 -> d62  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Internal.ParserState BooleanToParserState"];
d58 -> d63  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Internal.ParserState BooleanToParserState"];
d57 -> d55  [key=0, style=bold, color=blue];
d19 -> d21  [key=0, style=solid];
d19 -> d25  [key=2, style=dotted];
d13 -> d21  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d32 -> d26  [key=0, style=bold, color=blue];
d36 -> d26  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d36 -> d38  [key=0, style=solid];
d28 -> d32  [key=0, style=solid];
d64 -> d58  [key=0, style=bold, color=blue];
d59 -> d60  [key=0, style=solid];
d59 -> d61  [key=0, style=solid];
d61 -> d62  [key=0, style=solid];
d61 -> d63  [key=0, style=solid];
d62 -> d64  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d33 -> d36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
d33 -> d34  [key=0, style=solid];
d33 -> d35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
d33 -> d37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
d33 -> d38  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.IArgumentEnumerator"];
d35 -> d36  [key=0, style=solid];
d35 -> d38  [key=0, style=solid];
d35 -> d42  [key=2, style=dotted];
d37 -> d35  [key=0, style=solid];
d37 -> d43  [key=2, style=dotted];
d38 -> d39  [key=0, style=solid];
d38 -> d40  [key=0, style=solid];
d38 -> d44  [key=2, style=dotted];
d60 -> d64  [key=0, style=solid];
d41 -> d33  [key=0, style=bold, color=blue];
d34 -> d35  [key=0, style=solid];
d34 -> d37  [key=1, style=dashed, color=darkseagreen4, label=list];
d34 -> d3  [key=2, style=dotted];
d34 -> d40  [key=1, style=dashed, color=darkseagreen4, label=list];
d39 -> d41  [key=0, style=solid];
d39 -> d45  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d1 -> d3  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d67 -> d45  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d71 -> d45  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d73 -> d1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.ArgumentParser"];
d73 -> d7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.ArgumentParser"];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [key=0, style=bold, color=blue];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=0, style=solid];
d68 -> d65  [key=0, style=bold, color=blue];
d70 -> d71  [key=0, style=solid];
d70 -> d72  [key=0, style=solid];
d72 -> d69  [key=0, style=bold, color=blue];
d7 -> d8  [key=0, style=solid];
d7 -> d9  [key=2, style=dotted];
d7 -> d10  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d6 -> d7  [key=0, style=solid];
d8 -> d6  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_8  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>"];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_4  [key=0, style=solid];
m2_2 -> m2_3  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_5  [key=0, style=solid];
m2_5 -> m2_0  [key=0, style=bold, color=blue];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_0  [key=0, style=bold, color=blue];
m6_2 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_3 -> m6_5  [key=2, style=dotted];
m6_3 -> m6_6  [key=2, style=dotted];
m6_4 -> m6_2  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [key=0, style=solid];
m7_1 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=valueOne];
m7_1 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=valueOne];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [key=1, style=dashed, color=darkseagreen4, label=valueTwo];
m7_2 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=valueTwo];
m7_2 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label=valueTwo];
m7_4 -> m7_5  [key=0, style=solid];
m7_7 -> m7_8  [key=0, style=solid];
m7_7 -> m7_21  [key=2, style=dotted];
m7_7 -> m7_22  [key=2, style=dotted];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label=valueThree];
m7_3 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=valueThree];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_21  [key=2, style=dotted];
m7_8 -> m7_22  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_21  [key=2, style=dotted];
m7_11 -> m7_22  [key=2, style=dotted];
m7_12 -> m7_13  [key=0, style=solid];
m7_12 -> m7_21  [key=2, style=dotted];
m7_12 -> m7_22  [key=2, style=dotted];
m7_15 -> m7_16  [key=0, style=solid];
m7_15 -> m7_21  [key=2, style=dotted];
m7_15 -> m7_22  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_19  [key=2, style=dotted];
m7_5 -> m7_7  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_8  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_9  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_10  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_11  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_12  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_13  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_14  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_15  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_16  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_5 -> m7_17  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_20  [key=2, style=dotted];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_21  [key=2, style=dotted];
m7_9 -> m7_23  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_20  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_13 -> m7_21  [key=2, style=dotted];
m7_13 -> m7_23  [key=2, style=dotted];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_20  [key=2, style=dotted];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_21  [key=2, style=dotted];
m7_16 -> m7_24  [key=2, style=dotted];
m7_17 -> m7_18  [key=0, style=solid];
m7_17 -> m7_21  [key=2, style=dotted];
m7_17 -> m7_25  [key=2, style=dotted];
m7_18 -> m7_0  [key=0, style=bold, color=blue];
m7_26 -> m7_27  [key=0, style=solid];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_47  [key=2, style=dotted];
m7_27 -> m7_29  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_30  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_31  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_32  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_33  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_34  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_35  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_36  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_37  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_38  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_39  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_40  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_41  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_42  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_43  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_44  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_27 -> m7_45  [key=1, style=dashed, color=darkseagreen4, label=e];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_20  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_21  [key=2, style=dotted];
m7_29 -> m7_22  [key=2, style=dotted];
m7_30 -> m7_31  [key=0, style=solid];
m7_30 -> m7_21  [key=2, style=dotted];
m7_30 -> m7_22  [key=2, style=dotted];
m7_31 -> m7_32  [key=0, style=solid];
m7_31 -> m7_48  [key=2, style=dotted];
m7_31 -> m7_21  [key=2, style=dotted];
m7_31 -> m7_22  [key=2, style=dotted];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_21  [key=2, style=dotted];
m7_32 -> m7_23  [key=2, style=dotted];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_20  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_21  [key=2, style=dotted];
m7_34 -> m7_22  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_21  [key=2, style=dotted];
m7_35 -> m7_22  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_48  [key=2, style=dotted];
m7_36 -> m7_21  [key=2, style=dotted];
m7_36 -> m7_22  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_21  [key=2, style=dotted];
m7_37 -> m7_23  [key=2, style=dotted];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_20  [key=2, style=dotted];
m7_39 -> m7_40  [key=0, style=solid];
m7_39 -> m7_21  [key=2, style=dotted];
m7_39 -> m7_22  [key=2, style=dotted];
m7_40 -> m7_41  [key=0, style=solid];
m7_40 -> m7_21  [key=2, style=dotted];
m7_40 -> m7_22  [key=2, style=dotted];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_48  [key=2, style=dotted];
m7_41 -> m7_21  [key=2, style=dotted];
m7_41 -> m7_22  [key=2, style=dotted];
m7_42 -> m7_43  [key=0, style=solid];
m7_42 -> m7_21  [key=2, style=dotted];
m7_42 -> m7_23  [key=2, style=dotted];
m7_43 -> m7_44  [key=0, style=solid];
m7_43 -> m7_20  [key=2, style=dotted];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_21  [key=2, style=dotted];
m7_44 -> m7_22  [key=2, style=dotted];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_21  [key=2, style=dotted];
m7_45 -> m7_25  [key=2, style=dotted];
m7_46 -> m7_26  [key=0, style=bold, color=blue];
m10_3 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_3  [key=0, style=bold, color=blue];
m10_14 -> m10_18  [key=0, style=solid];
m10_14 -> m10_19  [key=1, style=dashed, color=darkseagreen4, label="System.Reflection.MethodInfo"];
m10_14 -> m10_9  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo value"];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_20  [key=0, style=solid];
m10_18 -> m10_22  [key=2, style=dotted];
m10_19 -> m10_21  [key=0, style=solid];
m10_19 -> m10_22  [key=2, style=dotted];
m10_20 -> m10_21  [key=0, style=solid];
m10_21 -> m10_14  [key=0, style=bold, color=blue];
m10_7 -> m10_8  [key=0, style=solid];
m10_7 -> m10_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>"];
m10_7 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label=object];
m10_8 -> m10_9  [key=0, style=solid];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_11  [key=1, style=dashed, color=red, label=method];
m10_9 -> m10_12  [key=1, style=dashed, color=darkseagreen4, label=method];
m10_12 -> m10_13  [key=0, style=solid];
m10_12 -> m10_17  [key=2, style=dotted];
m10_10 -> m10_11  [key=0, style=solid, color=red];
m10_10 -> m10_12  [key=0, style=solid];
m10_10 -> m10_14  [key=2, style=dotted];
m10_11 -> m10_13  [key=0, style=solid, color=red];
m10_11 -> m10_15  [key=2, style=dotted, color=red];
m10_11 -> m10_16  [key=2, style=dotted, color=red];
m10_13 -> m10_7  [key=0, style=bold, color=blue];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_2 -> m10_0  [key=0, style=bold, color=blue];
m10_23 -> m10_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpVerbOptionAttribute"];
m10_23 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpVerbOptionAttribute"];
m10_23 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.HelpVerbOptionAttribute"];
m11_0 -> m11_1  [key=0, style=solid];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_1 -> m11_4  [key=2, style=dotted];
m11_1 -> m11_5  [key=2, style=dotted];
m11_2 -> m11_0  [key=0, style=bold, color=blue];
m11_6 -> m11_7  [key=0, style=solid];
m11_7 -> m11_8  [key=0, style=solid];
m11_7 -> m11_3  [key=2, style=dotted];
m11_7 -> m11_4  [key=2, style=dotted];
m11_7 -> m11_9  [key=2, style=dotted];
m11_8 -> m11_6  [key=0, style=bold, color=blue];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_2  [key=0, style=bold, color=blue];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_4  [key=0, style=bold, color=blue];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [key=0, style=bold, color=blue];
m18_45 -> m18_46  [key=0, style=solid, color=green];
m18_45 -> m18_29  [key=2, style=dotted, color=green];
m18_45 -> m18_11  [key=2, style=dotted, color=green];
m18_45 -> m18_7  [key=2, style=dotted, color=green];
m18_10 -> m18_8  [key=0, style=bold, color=blue];
m18_23 -> m18_24  [key=0, style=solid, color=red];
m18_23 -> m18_25  [key=0, style=solid, color=red];
m18_23 -> m18_47  [key=2, style=dotted, color=red];
m18_23 -> m18_48  [key=2, style=dotted, color=red];
m18_23 -> m18_49  [key=2, style=dotted, color=red];
m18_24 -> m18_11  [key=2, style=dotted];
m18_24 -> m18_7  [key=2, style=dotted];
m18_24 -> m18_25  [key=0, style=solid];
m18_24 -> m18_5  [key=2, style=dotted];
m18_24 -> m18_42  [key=0, style=solid, color=red];
m18_24 -> m18_43  [key=2, style=dotted, color=red];
m18_24 -> m18_50  [key=2, style=dotted, color=red];
m18_24 -> m18_51  [key=2, style=dotted, color=red];
m18_24 -> m18_86  [key=1, style=dashed, color=red, label="lambda expression"];
m18_25 -> m18_23  [key=0, style=bold, color=blue];
m18_25 -> m18_26  [key=0, style=solid, color=red];
m18_25 -> m18_52  [key=2, style=dotted, color=red];
m18_25 -> m18_41  [key=1, style=dashed, color=red, label=tokenizerResult];
m18_15 -> m18_16  [key=0, style=solid];
m18_16 -> m18_11  [key=2, style=dotted];
m18_16 -> m18_7  [key=2, style=dotted];
m18_16 -> m18_17  [key=0, style=solid];
m18_16 -> m18_18  [key=2, style=dotted];
m18_17 -> m18_15  [key=0, style=bold, color=blue];
m18_43 -> m18_41  [key=0, style=bold, color=blue];
m18_7 -> m18_8  [key=0, style=solid];
m18_2 -> m18_3  [key=0, style=solid];
m18_2 -> m18_0  [key=0, style=bold, color=blue];
m18_3 -> m18_7  [key=2, style=dotted];
m18_3 -> m18_4  [key=0, style=solid];
m18_3 -> m18_5  [key=2, style=dotted];
m18_3 -> m18_6  [key=2, style=dotted];
m18_3 -> m18_19  [key=0, style=solid];
m18_3 -> m18_23  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m18_3 -> m18_24  [key=1, style=dashed, color=red, label="CommandLine.Infrastructure.Maybe<System.Func<T>>"];
m18_3 -> m18_25  [key=1, style=dashed, color=red, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m18_3 -> m18_27  [key=1, style=dashed, color=red, label="System.StringComparer"];
m18_3 -> m18_90  [key=1, style=dashed, color=red, label="System.StringComparer"];
m18_3 -> m18_28  [key=1, style=dashed, color=red, label="System.StringComparer"];
m18_3 -> m18_94  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m18_3 -> m18_29  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m18_3 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m18_3 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_3 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_3 -> m18_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Maybe<System.Func<T>>"];
m18_4 -> m18_2  [key=0, style=bold, color=blue];
m18_4 -> m18_5  [key=0, style=solid];
m18_4 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m18_4 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m18_4 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m18_44 -> m18_45  [key=0, style=solid, color=green];
m18_46 -> m18_44  [key=0, style=bold, color=blue];
m18_14 -> m18_12  [key=0, style=bold, color=blue];
m18_86 -> m18_87  [key=0, style=solid];
m18_5 -> m18_6  [key=0, style=solid];
m18_5 -> m18_9  [key=2, style=dotted];
m18_5 -> m18_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_12 -> m18_13  [key=0, style=solid];
m18_12 -> m18_14  [key=2, style=dotted];
m18_6 -> m18_7  [key=0, style=solid];
m18_6 -> m18_10  [key=2, style=dotted];
m18_6 -> m18_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_11 -> m18_12  [key=0, style=solid];
m18_8 -> m18_4  [key=0, style=bold, color=blue];
m18_8 -> m18_9  [key=0, style=solid];
m18_13 -> m18_11  [key=0, style=bold, color=blue];
m18_13 -> m18_7  [key=2, style=dotted];
m18_13 -> m18_14  [key=0, style=solid];
m18_13 -> m18_5  [key=2, style=dotted];
m18_90 -> m18_91  [key=0, style=solid, color=red];
m18_90 -> m18_92  [key=2, style=dotted, color=red];
m18_94 -> m18_95  [key=0, style=solid];
m18_94 -> m18_96  [key=2, style=dotted];
m18_98 -> m18_99  [key=0, style=solid];
m18_98 -> m18_96  [key=2, style=dotted];
m18_101 -> m18_102  [key=0, style=solid];
m18_101 -> m18_103  [key=2, style=dotted];
m18_75 -> m18_76  [key=0, style=solid];
m18_80 -> m18_81  [key=0, style=solid, color=red];
m18_89 -> m18_90  [key=0, style=solid, color=red];
m18_93 -> m18_94  [key=0, style=solid];
m18_97 -> m18_98  [key=0, style=solid];
m18_100 -> m18_101  [key=0, style=solid];
m18_104 -> m18_105  [key=0, style=solid];
m18_132 -> m18_133  [key=0, style=solid];
m18_135 -> m18_136  [key=0, style=solid];
m18_107 -> m18_108  [key=0, style=solid];
m18_111 -> m18_112  [key=0, style=solid];
m18_115 -> m18_116  [key=0, style=solid];
m18_119 -> m18_120  [key=0, style=solid];
m18_122 -> m18_123  [key=0, style=solid, color=red];
m18_126 -> m18_127  [key=0, style=solid];
m18_76 -> m18_77  [key=0, style=solid];
m18_76 -> m18_78  [key=2, style=dotted];
m18_76 -> m18_79  [key=2, style=dotted];
m18_77 -> m18_75  [key=0, style=bold, color=blue];
m18_81 -> m18_82  [key=0, style=solid, color=red];
m18_81 -> m18_83  [key=2, style=dotted, color=red];
m18_81 -> m18_84  [key=2, style=dotted, color=red];
m18_81 -> m18_85  [key=2, style=dotted, color=red];
m18_82 -> m18_80  [key=0, style=bold, color=blue];
m18_87 -> m18_88  [key=0, style=solid];
m18_87 -> m18_78  [key=2, style=dotted];
m18_88 -> m18_86  [key=0, style=bold, color=blue];
m18_91 -> m18_89  [key=0, style=bold, color=blue];
m18_95 -> m18_93  [key=0, style=bold, color=blue];
m18_99 -> m18_97  [key=0, style=bold, color=blue];
m18_102 -> m18_100  [key=0, style=bold, color=blue];
m18_105 -> m18_106  [key=0, style=solid];
m18_105 -> m18_78  [key=2, style=dotted];
m18_106 -> m18_104  [key=0, style=bold, color=blue];
m18_108 -> m18_109  [key=0, style=solid];
m18_108 -> m18_110  [key=2, style=dotted];
m18_109 -> m18_107  [key=0, style=bold, color=blue];
m18_112 -> m18_113  [key=0, style=solid];
m18_112 -> m18_114  [key=2, style=dotted];
m18_113 -> m18_111  [key=0, style=bold, color=blue];
m18_116 -> m18_117  [key=0, style=solid];
m18_116 -> m18_118  [key=2, style=dotted];
m18_116 -> m18_110  [key=2, style=dotted];
m18_117 -> m18_115  [key=0, style=bold, color=blue];
m18_120 -> m18_121  [key=0, style=solid];
m18_120 -> m18_114  [key=2, style=dotted];
m18_121 -> m18_119  [key=0, style=bold, color=blue];
m18_123 -> m18_124  [key=0, style=solid, color=red];
m18_123 -> m18_118  [key=2, style=dotted, color=red];
m18_123 -> m18_125  [key=2, style=dotted, color=red];
m18_124 -> m18_122  [key=0, style=bold, color=blue];
m18_127 -> m18_128  [key=0, style=solid];
m18_127 -> m18_129  [key=2, style=dotted];
m18_127 -> m18_130  [key=2, style=dotted];
m18_127 -> m18_131  [key=2, style=dotted];
m18_128 -> m18_126  [key=0, style=bold, color=blue];
m18_133 -> m18_134  [key=0, style=solid];
m18_134 -> m18_132  [key=0, style=bold, color=blue];
m18_136 -> m18_137  [key=0, style=solid];
m18_137 -> m18_135  [key=0, style=bold, color=blue];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_56  [key=2, style=dotted];
m18_29 -> m18_55  [key=2, style=dotted];
m18_29 -> m18_29  [key=1, style=dashed, color=darkseagreen4, label=pt];
m18_29 -> m18_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_29 -> m18_31  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m18_29 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m18_26 -> m18_27  [key=0, style=solid, color=red];
m18_26 -> m18_40  [key=1, style=dashed, color=red, label=tokens];
m18_27 -> m18_28  [key=0, style=solid, color=red];
m18_27 -> m18_29  [key=2, style=dotted, color=green];
m18_27 -> m18_11  [key=2, style=dotted, color=green];
m18_27 -> m18_7  [key=2, style=dotted, color=green];
m18_27 -> m18_53  [key=2, style=dotted, color=red];
m18_27 -> m18_89  [key=1, style=dashed, color=red, label="lambda expression"];
m18_27 -> m18_30  [key=1, style=dashed, color=red, label=partitions];
m18_28 -> m18_26  [key=0, style=bold, color=blue];
m18_28 -> m18_29  [key=0, style=solid, color=red];
m18_28 -> m18_54  [key=2, style=dotted, color=red];
m18_28 -> m18_55  [key=2, style=dotted, color=red];
m18_28 -> m18_28  [key=1, style=dashed, color=red, label=pt];
m18_28 -> m18_93  [key=1, style=dashed, color=red, label="lambda expression"];
m18_28 -> m18_31  [key=1, style=dashed, color=red, label=optionSpecProps];
m18_28 -> m18_41  [key=1, style=dashed, color=red, label=optionSpecProps];
m18_9 -> m18_11  [key=2, style=dotted];
m18_9 -> m18_7  [key=2, style=dotted];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_5  [key=2, style=dotted];
m18_30 -> m18_31  [key=0, style=solid, color=green];
m18_30 -> m18_57  [key=2, style=dotted];
m18_30 -> m18_58  [key=2, style=dotted];
m18_30 -> m18_59  [key=2, style=dotted];
m18_30 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_30 -> m18_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_30 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label=token];
m18_30 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label=missingValueErrors];
m18_31 -> m18_32  [key=0, style=solid, color=green];
m18_31 -> m18_33  [key=2, style=dotted, color=green];
m18_31 -> m18_11  [key=2, style=dotted, color=green];
m18_31 -> m18_7  [key=2, style=dotted, color=green];
m18_31 -> m18_60  [key=2, style=dotted];
m18_31 -> m18_35  [key=1, style=dashed, color=red, label=specPropsWithValue];
m18_31 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m18_31 -> m18_40  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m18_32 -> m18_30  [key=0, style=bold, color=blue];
m18_32 -> m18_33  [key=0, style=solid, color=red];
m18_38 -> m18_39  [key=0, style=solid];
m18_38 -> m18_66  [key=2, style=dotted];
m18_38 -> m18_67  [key=2, style=dotted];
m18_38 -> m18_68  [key=2, style=dotted];
m18_38 -> m18_43  [key=2, style=dotted];
m18_38 -> m18_69  [key=2, style=dotted];
m18_38 -> m18_38  [key=1, style=dashed, color=darkseagreen4, label=prms];
m18_38 -> m18_132  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_38 -> m18_135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_39 -> m18_11  [key=2, style=dotted];
m18_39 -> m18_7  [key=2, style=dotted];
m18_39 -> m18_37  [key=2, style=dotted];
m18_39 -> m18_40  [key=0, style=solid];
m18_39 -> m18_70  [key=2, style=dotted];
m18_39 -> m18_41  [key=1, style=dashed, color=darkseagreen4, label=instance];
m18_40 -> m18_38  [key=0, style=bold, color=blue];
m18_40 -> m18_41  [key=0, style=solid];
m18_40 -> m18_71  [key=2, style=dotted];
m18_40 -> m18_72  [key=2, style=dotted];
m18_34 -> m18_35  [key=0, style=solid, color=red];
m18_34 -> m18_62  [key=2, style=dotted];
m18_34 -> m18_43  [key=2, style=dotted];
m18_34 -> m18_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_35 -> m18_36  [key=0, style=solid, color=green];
m18_35 -> m18_37  [key=2, style=dotted, color=green];
m18_35 -> m18_11  [key=2, style=dotted, color=green];
m18_35 -> m18_7  [key=2, style=dotted, color=green];
m18_35 -> m18_40  [key=0, style=solid, color=red];
m18_35 -> m18_63  [key=2, style=dotted, color=red];
m18_35 -> m18_35  [key=1, style=dashed, color=red, label=instance];
m18_35 -> m18_107  [key=1, style=dashed, color=red, label="lambda expression"];
m18_35 -> m18_111  [key=1, style=dashed, color=red, label="lambda expression"];
m18_35 -> m18_115  [key=1, style=dashed, color=red, label="lambda expression"];
m18_35 -> m18_119  [key=1, style=dashed, color=red, label="lambda expression"];
m18_35 -> m18_122  [key=1, style=dashed, color=red, label="lambda expression"];
m18_35 -> m18_126  [key=1, style=dashed, color=red, label="lambda expression"];
m18_35 -> m18_41  [key=1, style=dashed, color=red, label=instance];
m18_36 -> m18_34  [key=0, style=bold, color=blue];
m18_36 -> m18_37  [key=0, style=solid];
m18_41 -> m18_42  [key=0, style=solid];
m18_41 -> m18_73  [key=2, style=dotted];
m18_41 -> m18_74  [key=2, style=dotted];
m18_42 -> m18_29  [key=2, style=dotted];
m18_42 -> m18_11  [key=2, style=dotted];
m18_42 -> m18_7  [key=2, style=dotted];
m18_42 -> m18_43  [key=0, style=solid];
m18_42 -> m18_3  [key=0, style=bold, color=blue];
m18_33 -> m18_34  [key=0, style=solid, color=red];
m18_33 -> m18_36  [key=0, style=solid, color=red];
m18_33 -> m18_61  [key=2, style=dotted, color=red];
m18_19 -> m18_20  [key=0, style=solid, color=red];
m18_19 -> m18_43  [key=2, style=dotted];
m18_19 -> m18_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_19 -> m18_33  [key=1, style=dashed, color=red, label=typeInfo];
m18_20 -> m18_11  [key=2, style=dotted];
m18_20 -> m18_7  [key=2, style=dotted];
m18_20 -> m18_21  [key=0, style=solid, color=red];
m18_20 -> m18_22  [key=2, style=dotted];
m18_20 -> m18_44  [key=2, style=dotted, color=red];
m18_20 -> m18_80  [key=1, style=dashed, color=red, label="lambda expression"];
m18_20 -> m18_28  [key=1, style=dashed, color=red, label=specProps];
m18_20 -> m18_29  [key=1, style=dashed, color=red, label=specProps];
m18_20 -> m18_37  [key=1, style=dashed, color=red, label=specProps];
m18_21 -> m18_19  [key=0, style=bold, color=blue];
m18_21 -> m18_22  [key=0, style=solid, color=red];
m18_21 -> m18_21  [key=1, style=dashed, color=red, label=pt];
m18_37 -> m18_38  [key=0, style=solid];
m18_37 -> m18_64  [key=2, style=dotted];
m18_37 -> m18_65  [key=2, style=dotted];
m18_37 -> m18_37  [key=1, style=dashed, color=darkseagreen4, label=p];
m18_37 -> m18_39  [key=1, style=dashed, color=darkseagreen4, label=ctor];
m18_0 -> m18_1  [key=0, style=solid];
m18_0 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_0 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_0 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_0 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_1 -> m18_2  [key=0, style=solid];
m18_1 -> m18_3  [key=2, style=dotted];
m18_1 -> m18_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m18_22 -> m18_23  [key=0, style=solid, color=red];
m18_22 -> m18_45  [key=2, style=dotted];
m18_22 -> m18_46  [key=2, style=dotted];
m18_22 -> m18_25  [key=1, style=dashed, color=red, label=optionSpecs];
m18_22 -> m18_27  [key=1, style=dashed, color=red, label=optionSpecs];
m18_22 -> m18_90  [key=1, style=dashed, color=red, label=optionSpecs];
m18_22 -> m18_30  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m18_138 -> m18_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_138 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_138 -> m18_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_138 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_139 -> m18_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m18_139 -> m18_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m18_140 -> m18_90  [key=1, style=dashed, color=red, label="System.StringComparer"];
m18_140 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m18_141 -> m18_90  [key=1, style=dashed, color=red, label=optionSpecs];
m18_142 -> m18_94  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m18_142 -> m18_98  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m18_143 -> m18_101  [key=1, style=dashed, color=darkseagreen4, label=token];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_0  [key=0, style=bold, color=blue];
m19_7 -> m19_8  [key=0, style=solid];
m19_8 -> m19_9  [key=0, style=solid];
m19_9 -> m19_7  [key=0, style=bold, color=blue];
m19_2 -> m19_3  [key=0, style=solid];
m19_3 -> m19_2  [key=0, style=bold, color=blue];
m19_4 -> m19_5  [key=0, style=solid];
m19_5 -> m19_6  [key=0, style=solid];
m19_6 -> m19_4  [key=0, style=bold, color=blue];
m19_10 -> m19_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m19_10 -> m19_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m20_37 -> m20_57  [key=0, style=solid];
m20_37 -> m20_61  [key=1, style=dashed, color=darkseagreen4, label=object];
m20_37 -> m20_62  [key=1, style=dashed, color=darkseagreen4, label=object];
m20_37 -> m20_63  [key=1, style=dashed, color=darkseagreen4, label=object];
m20_37 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m20_37 -> m20_67  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m20_37 -> m20_68  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m20_37 -> m20_69  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m20_37 -> m20_70  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m20_37 -> m20_31  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Internal.OptionInfo option"];
m20_37 -> m20_30  [key=3, color=darkorchid, style=bold, label="Parameter variable bool? mutualExclusiveness"];
m20_57 -> m20_58  [key=0, style=solid];
m20_57 -> m20_73  [key=2, style=dotted];
m20_57 -> m20_60  [key=1, style=dashed, color=darkseagreen4, label=list];
m20_61 -> m20_62  [key=0, style=solid];
m20_61 -> m20_63  [key=0, style=solid];
m20_61 -> m20_74  [key=2, style=dotted];
m20_62 -> m20_63  [key=0, style=solid];
m20_62 -> m20_75  [key=2, style=dotted];
m20_62 -> m20_76  [key=2, style=dotted];
m20_63 -> m20_64  [key=0, style=solid];
m20_63 -> m20_74  [key=2, style=dotted];
m20_63 -> m20_71  [key=1, style=dashed, color=darkseagreen4, label=parserState];
m20_66 -> m20_67  [key=0, style=solid];
m20_66 -> m20_77  [key=2, style=dotted];
m20_66 -> m20_68  [key=1, style=dashed, color=darkseagreen4, label=error];
m20_66 -> m20_70  [key=1, style=dashed, color=darkseagreen4, label=error];
m20_66 -> m20_71  [key=1, style=dashed, color=darkseagreen4, label=error];
m20_67 -> m20_68  [key=0, style=solid];
m20_67 -> m20_69  [key=0, style=solid];
m20_68 -> m20_69  [key=0, style=solid];
m20_69 -> m20_70  [key=0, style=solid];
m20_69 -> m20_71  [key=0, style=solid];
m20_70 -> m20_71  [key=0, style=solid];
m20_58 -> m20_59  [key=0, style=solid];
m20_58 -> m20_60  [key=0, style=solid];
m20_60 -> m20_61  [key=0, style=solid];
m20_60 -> m20_62  [key=1, style=dashed, color=darkseagreen4, label=property];
m20_60 -> m20_63  [key=1, style=dashed, color=darkseagreen4, label=property];
m20_59 -> m20_72  [key=0, style=solid];
m20_64 -> m20_65  [key=0, style=solid];
m20_64 -> m20_66  [key=0, style=solid];
m20_71 -> m20_72  [key=0, style=solid];
m20_71 -> d43  [key=2, style=dotted];
m20_65 -> m20_72  [key=0, style=solid];
m20_72 -> m20_37  [key=0, style=bold, color=blue];
m20_49 -> m20_50  [key=0, style=solid];
m20_49 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m20_49 -> m20_40  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Internal.OptionInfo option"];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label=setName];
m20_50 -> m20_53  [key=1, style=dashed, color=darkseagreen4, label=setName];
m20_52 -> m20_53  [key=0, style=solid];
m20_52 -> m20_2  [key=2, style=dotted];
m20_52 -> m20_56  [key=2, style=dotted];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_53  [key=0, style=solid];
m20_51 -> m20_55  [key=2, style=dotted];
m20_53 -> m20_54  [key=0, style=solid];
m20_53 -> m20_5  [key=2, style=dotted];
m20_54 -> m20_49  [key=0, style=bold, color=blue];
m20_24 -> m20_30  [key=0, style=solid];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label=requiredRulesAllMet];
m20_30 -> m20_30  [key=3, color=darkorchid, style=bold, label="Local variable bool requiredRulesAllMet"];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_35  [key=0, style=solid];
m20_31 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label=option];
m20_35 -> m20_36  [key=0, style=solid];
m20_32 -> m20_33  [key=0, style=solid];
m20_32 -> m20_31  [key=0, style=solid];
m20_33 -> m20_34  [key=0, style=solid];
m20_33 -> m20_37  [key=2, style=dotted];
m20_34 -> m20_31  [key=0, style=solid];
m20_34 -> m20_35  [key=1, style=dashed, color=darkseagreen4, label=requiredRulesAllMet];
m20_36 -> m20_24  [key=0, style=bold, color=blue];
m20_25 -> m20_26  [key=0, style=solid];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_28  [key=0, style=solid];
m20_27 -> m20_26  [key=0, style=solid];
m20_27 -> m20_29  [key=2, style=dotted];
m20_28 -> m20_25  [key=0, style=bold, color=blue];
m20_20 -> m20_21  [key=0, style=solid];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_23  [key=2, style=dotted];
m20_21 -> m20_24  [key=2, style=dotted];
m20_22 -> m20_20  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_0  [key=0, style=bold, color=blue];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m20_8 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m20_8 -> m20_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m20_9 -> m20_10  [key=0, style=solid];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_19  [key=2, style=dotted];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_19  [key=2, style=dotted];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_19  [key=2, style=dotted];
m20_10 -> m20_11  [key=0, style=solid];
m20_11 -> m20_12  [key=0, style=solid];
m20_11 -> m20_13  [key=0, style=solid];
m20_12 -> m20_14  [key=0, style=solid];
m20_12 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_18  [key=0, style=solid];
m20_18 -> m20_8  [key=0, style=bold, color=blue];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_4  [key=0, style=solid];
m20_4 -> m20_2  [key=0, style=bold, color=blue];
m20_5 -> m20_6  [key=0, style=solid];
m20_6 -> m20_7  [key=0, style=solid];
m20_7 -> m20_5  [key=0, style=bold, color=blue];
m20_23 -> m20_38  [key=0, style=solid];
m20_23 -> m20_30  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnforceMutuallyExclusiveMap"];
m20_23 -> m20_46  [key=3, color=darkorchid, style=bold, label="method methodReturn bool EnforceMutuallyExclusiveMap"];
m20_38 -> m20_39  [key=0, style=solid];
m20_38 -> m20_40  [key=0, style=solid];
m20_39 -> m20_48  [key=0, style=solid];
m20_40 -> m20_41  [key=0, style=solid];
m20_40 -> m20_43  [key=0, style=solid];
m20_40 -> m20_42  [key=1, style=dashed, color=darkseagreen4, label=option];
m20_41 -> m20_42  [key=0, style=solid];
m20_41 -> m20_40  [key=0, style=solid];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_47  [key=0, style=solid];
m20_43 -> m20_45  [key=1, style=dashed, color=darkseagreen4, label=info];
m20_42 -> m20_40  [key=0, style=solid];
m20_42 -> m20_49  [key=2, style=dotted];
m20_44 -> m20_45  [key=0, style=solid];
m20_44 -> m20_43  [key=0, style=solid];
m20_47 -> m20_48  [key=0, style=solid];
m20_45 -> m20_46  [key=0, style=solid];
m20_45 -> m20_37  [key=2, style=dotted];
m20_46 -> m20_48  [key=0, style=solid];
m20_48 -> m20_23  [key=0, style=bold, color=blue];
m20_79 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo"];
m20_79 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo"];
m20_80 -> m20_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_38  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_51  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_52  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m20_80 -> m20_53  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m21_0 -> m21_1  [key=0, style=solid];
m21_0 -> m21_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m21_0 -> m21_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m21_0 -> m21_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_0 -> m21_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=0, style=solid];
m21_3 -> m21_4  [key=0, style=solid];
m21_3 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_7  [key=0, style=solid];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_11  [key=2, style=dotted];
m21_7 -> m21_12  [key=2, style=dotted];
m21_7 -> m21_13  [key=2, style=dotted];
m21_7 -> m21_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_7 -> m21_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m21_2 -> m21_9  [key=0, style=solid];
m21_2 -> m21_10  [key=2, style=dotted];
m21_4 -> m21_9  [key=0, style=solid];
m21_4 -> m21_10  [key=2, style=dotted];
m21_6 -> m21_9  [key=0, style=solid];
m21_6 -> m21_10  [key=2, style=dotted];
m21_8 -> m21_9  [key=0, style=solid];
m21_9 -> m21_0  [key=0, style=bold, color=blue];
m21_18 -> m21_19  [key=0, style=solid];
m21_15 -> m21_16  [key=0, style=solid];
m21_15 -> m21_17  [key=2, style=dotted];
m21_14 -> m21_15  [key=0, style=solid];
m21_16 -> m21_14  [key=0, style=bold, color=blue];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_21  [key=2, style=dotted];
m21_19 -> m21_22  [key=2, style=dotted];
m21_19 -> m21_23  [key=2, style=dotted];
m21_19 -> m21_24  [key=2, style=dotted];
m21_20 -> m21_18  [key=0, style=bold, color=blue];
m21_25 -> m21_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m21_26 -> m21_15  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m23_51 -> m23_52  [key=0, style=solid];
m23_51 -> m23_27  [key=3, color=darkorchid, style=bold, label="method methodReturn TAttribute GetAttribute"];
m23_52 -> m23_53  [key=0, style=solid];
m23_52 -> m23_57  [key=2, style=dotted];
m23_52 -> m23_55  [key=1, style=dashed, color=darkseagreen4, label=a];
m23_53 -> m23_54  [key=0, style=solid];
m23_53 -> m23_55  [key=0, style=solid];
m23_55 -> m23_56  [key=0, style=solid];
m23_54 -> m23_56  [key=0, style=solid];
m23_56 -> m23_51  [key=0, style=bold, color=blue];
m23_39 -> m23_40  [key=0, style=solid];
m23_39 -> m23_41  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_40 -> m23_41  [key=0, style=solid];
m23_40 -> m23_13  [key=2, style=dotted];
m23_40 -> m23_48  [key=1, style=dashed, color=darkseagreen4, label=list];
m23_40 -> m23_49  [key=1, style=dashed, color=darkseagreen4, label=list];
m23_41 -> m23_42  [key=0, style=solid];
m23_41 -> m23_14  [key=2, style=dotted];
m23_41 -> m23_15  [key=2, style=dotted];
m23_48 -> m23_42  [key=0, style=solid];
m23_48 -> d43  [key=2, style=dotted];
m23_49 -> m23_50  [key=0, style=solid];
m23_42 -> m23_43  [key=0, style=solid];
m23_42 -> m23_49  [key=0, style=solid];
m23_42 -> m23_44  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_42 -> m23_46  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_43 -> m23_44  [key=0, style=solid];
m23_43 -> m23_42  [key=0, style=solid];
m23_44 -> m23_45  [key=0, style=solid];
m23_44 -> m23_16  [key=2, style=dotted];
m23_46 -> m23_47  [key=0, style=solid];
m23_46 -> m23_17  [key=2, style=dotted];
m23_46 -> m23_48  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m23_45 -> m23_46  [key=0, style=solid];
m23_45 -> m23_42  [key=0, style=solid];
m23_47 -> m23_48  [key=0, style=solid];
m23_47 -> m23_42  [key=0, style=solid];
m23_50 -> m23_39  [key=0, style=bold, color=blue];
m23_20 -> m23_21  [key=0, style=solid];
m23_20 -> m23_27  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Internal.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod"];
m23_21 -> m23_22  [key=0, style=solid];
m23_21 -> m23_14  [key=2, style=dotted];
m23_21 -> m23_29  [key=2, style=dotted];
m23_22 -> m23_23  [key=0, style=solid];
m23_22 -> m23_27  [key=0, style=solid];
m23_22 -> m23_24  [key=1, style=dashed, color=darkseagreen4, label=method];
m23_22 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label=method];
m23_23 -> m23_24  [key=0, style=solid];
m23_23 -> m23_22  [key=0, style=solid];
m23_27 -> m23_28  [key=0, style=solid];
m23_24 -> m23_25  [key=0, style=solid];
m23_24 -> m23_17  [key=2, style=dotted];
m23_24 -> m23_26  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m23_26 -> m23_28  [key=0, style=solid];
m23_26 -> m23_18  [key=2, style=dotted];
m23_25 -> m23_26  [key=0, style=solid];
m23_25 -> m23_22  [key=0, style=solid];
m23_28 -> m23_20  [key=0, style=bold, color=blue];
m23_30 -> m23_31  [key=0, style=solid];
m23_30 -> m23_34  [key=3, color=darkorchid, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
m23_30 -> m23_27  [key=3, color=darkorchid, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
m23_31 -> m23_32  [key=0, style=solid];
m23_31 -> m23_14  [key=2, style=dotted];
m23_31 -> m23_29  [key=2, style=dotted];
m23_32 -> m23_33  [key=0, style=solid];
m23_32 -> m23_37  [key=0, style=solid];
m23_32 -> m23_34  [key=1, style=dashed, color=darkseagreen4, label=method];
m23_33 -> m23_34  [key=0, style=solid];
m23_33 -> m23_32  [key=0, style=solid];
m23_37 -> m23_38  [key=0, style=solid];
m23_34 -> m23_35  [key=0, style=solid];
m23_34 -> m23_17  [key=2, style=dotted];
m23_34 -> m23_36  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m23_35 -> m23_36  [key=0, style=solid];
m23_35 -> m23_32  [key=0, style=solid];
m23_36 -> m23_38  [key=0, style=solid];
m23_38 -> m23_30  [key=0, style=bold, color=blue];
m23_58 -> m23_59  [key=0, style=solid];
m23_58 -> m23_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_58 -> m23_62  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_58 -> m23_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m23_58 -> m23_27  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Internal.Pair<System.Reflection.PropertyInfo, TAttribute> RetrieveOptionProperty"];
m23_59 -> m23_60  [key=0, style=solid];
m23_59 -> m23_72  [key=1, style=dashed, color=darkseagreen4, label=found];
m23_59 -> m23_27  [key=3, color=darkorchid, style=bold, label="Local variable CommandLine.Internal.Pair<System.Reflection.PropertyInfo, TAttribute> found"];
m23_60 -> m23_61  [key=0, style=solid];
m23_60 -> m23_62  [key=0, style=solid];
m23_62 -> m23_63  [key=0, style=solid];
m23_62 -> m23_14  [key=2, style=dotted];
m23_62 -> m23_15  [key=2, style=dotted];
m23_69 -> m23_70  [key=0, style=solid];
m23_69 -> m23_63  [key=0, style=solid];
m23_69 -> m23_74  [key=2, style=dotted];
m23_72 -> m23_73  [key=0, style=solid];
m23_61 -> m23_73  [key=0, style=solid];
m23_63 -> m23_64  [key=0, style=solid];
m23_63 -> m23_72  [key=0, style=solid];
m23_63 -> m23_65  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_63 -> m23_67  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_63 -> m23_70  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_64 -> m23_65  [key=0, style=solid];
m23_64 -> m23_63  [key=0, style=solid];
m23_65 -> m23_66  [key=0, style=solid];
m23_65 -> m23_16  [key=2, style=dotted];
m23_67 -> m23_68  [key=0, style=solid];
m23_67 -> m23_17  [key=2, style=dotted];
m23_67 -> m23_70  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m23_70 -> m23_71  [key=0, style=solid];
m23_70 -> m23_18  [key=2, style=dotted];
m23_70 -> m23_72  [key=1, style=dashed, color=darkseagreen4, label=found];
m23_66 -> m23_67  [key=0, style=solid];
m23_66 -> m23_63  [key=0, style=solid];
m23_68 -> m23_69  [key=0, style=solid];
m23_71 -> m23_73  [key=0, style=solid];
m23_73 -> m23_58  [key=0, style=bold, color=blue];
m23_75 -> m23_76  [key=0, style=solid];
m23_76 -> m23_77  [key=0, style=solid];
m23_76 -> m23_78  [key=2, style=dotted];
m23_77 -> m23_75  [key=0, style=bold, color=blue];
m23_0 -> m23_1  [key=0, style=solid];
m23_0 -> m23_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_0 -> m23_3  [key=1, style=dashed, color=darkseagreen4, label=object];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_13  [key=2, style=dotted];
m23_1 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label=list];
m23_1 -> m23_11  [key=1, style=dashed, color=darkseagreen4, label=list];
m23_2 -> m23_3  [key=0, style=solid];
m23_2 -> m23_11  [key=0, style=solid];
m23_3 -> m23_4  [key=0, style=solid];
m23_3 -> m23_14  [key=2, style=dotted];
m23_3 -> m23_15  [key=2, style=dotted];
m23_10 -> m23_4  [key=0, style=solid];
m23_10 -> m23_18  [key=2, style=dotted];
m23_10 -> d43  [key=2, style=dotted];
m23_11 -> m23_12  [key=0, style=solid];
m23_4 -> m23_5  [key=0, style=solid];
m23_4 -> m23_11  [key=0, style=solid];
m23_4 -> m23_6  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_4 -> m23_8  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_4 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label=property];
m23_5 -> m23_6  [key=0, style=solid];
m23_5 -> m23_4  [key=0, style=solid];
m23_6 -> m23_7  [key=0, style=solid];
m23_6 -> m23_16  [key=2, style=dotted];
m23_8 -> m23_9  [key=0, style=solid];
m23_8 -> m23_17  [key=2, style=dotted];
m23_8 -> m23_10  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_4  [key=0, style=solid];
m23_9 -> m23_10  [key=0, style=solid];
m23_9 -> m23_4  [key=0, style=solid];
m23_12 -> m23_0  [key=0, style=bold, color=blue];
m24_0 -> m24_1  [key=0, style=solid];
m24_1 -> m24_2  [key=0, style=solid];
m24_1 -> m24_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m24_2 -> m24_0  [key=0, style=bold, color=blue];
m24_7 -> m24_8  [key=0, style=solid];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> m24_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m24_9 -> m24_7  [key=0, style=bold, color=blue];
m24_18 -> m24_19  [key=0, style=solid];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_6  [key=2, style=dotted];
m24_3 -> m24_4  [key=0, style=solid];
m24_5 -> m24_3  [key=0, style=bold, color=blue];
m24_11 -> m24_12  [key=0, style=solid];
m24_11 -> m24_6  [key=2, style=dotted];
m24_11 -> m24_13  [key=2, style=dotted];
m24_11 -> m24_14  [key=2, style=dotted];
m24_10 -> m24_11  [key=0, style=solid];
m24_12 -> m24_10  [key=0, style=bold, color=blue];
m24_19 -> m24_20  [key=0, style=solid];
m24_19 -> m24_21  [key=2, style=dotted];
m24_20 -> m24_18  [key=0, style=bold, color=blue];
m24_15 -> m24_16  [key=0, style=solid];
m24_16 -> m24_17  [key=0, style=solid];
m24_16 -> m24_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m24_17 -> m24_15  [key=0, style=bold, color=blue];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_9  [key=2, style=dotted];
m25_5 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_6 -> m25_7  [key=0, style=solid];
m25_6 -> m25_8  [key=2, style=dotted];
m25_6 -> m25_10  [key=2, style=dotted];
m25_6 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_7 -> d22  [key=0, style=bold, color=blue];
m25_7 -> m25_8  [key=0, style=solid];
m25_3 -> m25_19  [key=0, style=solid, color=green];
m25_3 -> m25_24  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m25_3 -> m25_25  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<string>"];
m25_3 -> m25_28  [key=1, style=dashed, color=green, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
m25_3 -> m25_32  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m25_3 -> m25_110  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m25_3 -> m25_23  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m25_3 -> m25_94  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m25_3 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_3 -> m25_102  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_3 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_3 -> m25_106  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m25_3 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_3 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_3 -> m25_37  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m25_19 -> m25_20  [key=0, style=solid, color=green];
m25_19 -> m25_46  [key=2, style=dotted, color=green];
m25_19 -> m25_82  [key=1, style=dashed, color=green, label="lambda expression"];
m25_19 -> m25_36  [key=1, style=dashed, color=green, label=typeInfo];
m25_19 -> m25_39  [key=1, style=dashed, color=green, label=typeInfo];
m25_19 -> m25_15  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsLineTerminator"];
m25_19 -> m25_26  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsLineTerminator"];
m25_20 -> m25_32  [key=1, style=dashed, color=green, label=specProps];
m25_20 -> m25_21  [key=0, style=solid, color=green];
m25_20 -> m25_47  [key=2, style=dotted, color=green];
m25_20 -> m25_87  [key=1, style=dashed, color=green, label="lambda expression"];
m25_20 -> m25_23  [key=1, style=dashed, color=green, label=specProps];
m25_20 -> m25_94  [key=1, style=dashed, color=green, label=specProps];
m25_20 -> m25_31  [key=1, style=dashed, color=green, label=specProps];
m25_20 -> m25_39  [key=1, style=dashed, color=green, label=specProps];
m25_20 -> m25_26  [key=0, style=solid];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_39  [key=0, style=solid];
m25_36 -> m25_65  [key=2, style=dotted];
m25_39 -> m25_39  [key=1, style=dashed, color=darkseagreen4, label=sp];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_68  [key=2, style=dotted];
m25_39 -> m25_69  [key=2, style=dotted];
m25_39 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label=ctor];
m25_24 -> m25_25  [key=0, style=solid, color=green];
m25_24 -> m25_28  [key=0, style=solid, color=green];
m25_24 -> m25_50  [key=2, style=dotted, color=green];
m25_23 -> m25_24  [key=0, style=solid, color=green];
m25_23 -> m25_27  [key=1, style=dashed, color=green, label=makeDefault];
m25_25 -> m25_26  [key=0, style=solid, color=green];
m25_25 -> m25_51  [key=2, style=dotted, color=green];
m25_25 -> m25_52  [key=2, style=dotted, color=green];
m25_25 -> m25_27  [key=1, style=dashed, color=green, label=preprocessorErrors];
m25_28 -> m25_29  [key=0, style=solid, color=green];
m25_28 -> m25_55  [key=2, style=dotted, color=green];
m25_28 -> m25_43  [key=1, style=dashed, color=green, label=tokenizerResult];
m25_26 -> m25_28  [key=0, style=solid, color=green];
m25_26 -> m25_27  [key=0, style=solid, color=green];
m25_26 -> m25_50  [key=2, style=dotted, color=green];
m25_27 -> m25_45  [key=0, style=solid, color=green];
m25_27 -> m25_53  [key=2, style=dotted, color=green];
m25_27 -> m25_54  [key=2, style=dotted, color=green];
m25_27 -> m25_19  [key=0, style=bold, color=blue];
m25_22 -> m25_28  [key=1, style=dashed, color=green, label=optionSpecs];
m25_22 -> m25_23  [key=0, style=solid, color=green];
m25_22 -> m25_48  [key=2, style=dotted, color=green];
m25_22 -> m25_49  [key=2, style=dotted, color=green];
m25_22 -> m25_30  [key=1, style=dashed, color=green, label=optionSpecs];
m25_22 -> m25_102  [key=1, style=dashed, color=green, label=optionSpecs];
m25_22 -> m25_33  [key=1, style=dashed, color=green, label=optionSpecs];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_56  [key=2, style=dotted];
m25_29 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_77  [key=2, style=dotted];
m25_43 -> m25_78  [key=2, style=dotted];
m25_32 -> m25_32  [key=1, style=dashed, color=green, label=pt];
m25_32 -> m25_33  [key=0, style=solid, color=green];
m25_32 -> m25_60  [key=2, style=dotted, color=green];
m25_32 -> m25_59  [key=2, style=dotted, color=green];
m25_32 -> m25_109  [key=1, style=dashed, color=green, label="lambda expression"];
m25_32 -> m25_34  [key=1, style=dashed, color=green, label=valueSpecProps];
m25_32 -> m25_43  [key=1, style=dashed, color=green, label=valueSpecProps];
m25_30 -> m25_32  [key=1, style=dashed, color=green, label=partitions];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_57  [key=2, style=dotted];
m25_30 -> m25_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_30 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m25_31 -> m25_32  [key=0, style=solid, color=green];
m25_31 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m25_31 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=pt];
m25_31 -> m25_58  [key=2, style=dotted];
m25_31 -> m25_59  [key=2, style=dotted];
m25_31 -> m25_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_31 -> m25_34  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m25_33 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label=missingValueErrors];
m25_33 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=token];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_61  [key=2, style=dotted];
m25_33 -> m25_62  [key=2, style=dotted];
m25_33 -> m25_63  [key=2, style=dotted];
m25_33 -> m25_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_33 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label=token];
m25_34 -> m25_35  [key=0, style=solid];
m25_34 -> m25_56  [key=2, style=dotted];
m25_34 -> m25_64  [key=2, style=dotted];
m25_34 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m25_34 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m25_34 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m25_21 -> m25_21  [key=1, style=dashed, color=green, label=pt];
m25_21 -> m25_22  [key=0, style=solid, color=green];
m25_37 -> m25_46  [key=2, style=dotted];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_66  [key=2, style=dotted];
m25_37 -> m25_116  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_40 -> m25_46  [key=2, style=dotted];
m25_40 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label=prms];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_70  [key=2, style=dotted];
m25_40 -> m25_71  [key=2, style=dotted];
m25_40 -> m25_72  [key=2, style=dotted];
m25_40 -> m25_73  [key=2, style=dotted];
m25_40 -> m25_68  [key=2, style=dotted];
m25_40 -> m25_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_40 -> m25_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_35 -> m25_36  [key=0, style=solid];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_74  [key=2, style=dotted];
m25_41 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label=instance];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_75  [key=2, style=dotted];
m25_42 -> m25_76  [key=2, style=dotted];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_79  [key=2, style=dotted];
m25_44 -> m25_80  [key=2, style=dotted];
m25_44 -> m25_81  [key=2, style=dotted];
m25_38 -> m25_42  [key=0, style=solid];
m25_38 -> m25_44  [key=1, style=dashed, color=darkseagreen4, label=instance];
m25_38 -> m25_38  [key=1, style=dashed, color=darkseagreen4, label=instance];
m25_38 -> m25_67  [key=2, style=dotted];
m25_38 -> m25_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_38 -> m25_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_38 -> m25_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_38 -> m25_131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_38 -> m25_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_38 -> m25_138  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_45 -> m25_3  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid, color=red];
m25_0 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_0 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_0 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_0 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_1 -> m25_2  [key=0, style=solid, color=red];
m25_1 -> m25_3  [key=2, style=dotted, color=red];
m25_1 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_16  [key=0, style=solid];
m25_8 -> m25_4  [key=0, style=bold, color=blue];
m25_14 -> m25_15  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_17  [key=0, style=solid];
m25_82 -> m25_83  [key=0, style=solid, color=green];
m25_109 -> m25_110  [key=0, style=solid, color=green];
m25_110 -> m25_111  [key=0, style=solid, color=green];
m25_110 -> m25_108  [key=2, style=dotted, color=green];
m25_111 -> m25_109  [key=0, style=bold, color=blue];
m25_87 -> m25_88  [key=0, style=solid, color=green];
m25_94 -> m25_46  [key=2, style=dotted];
m25_94 -> m25_94  [key=1, style=dashed, color=darkseagreen4, label=p];
m25_94 -> m25_95  [key=0, style=solid];
m25_94 -> m25_96  [key=2, style=dotted];
m25_94 -> m25_66  [key=2, style=dotted];
m25_94 -> m25_68  [key=2, style=dotted];
m25_94 -> m25_97  [key=2, style=dotted];
m25_94 -> m25_98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m25_102 -> m25_103  [key=0, style=solid];
m25_102 -> m25_104  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid, color=green];
m25_83 -> m25_85  [key=2, style=dotted, color=green];
m25_83 -> m25_86  [key=2, style=dotted, color=green];
m25_84 -> m25_82  [key=0, style=bold, color=blue];
m25_88 -> m25_89  [key=0, style=solid, color=green];
m25_88 -> m25_90  [key=2, style=dotted, color=green];
m25_88 -> m25_91  [key=2, style=dotted, color=green];
m25_88 -> m25_92  [key=2, style=dotted, color=green];
m25_89 -> m25_87  [key=0, style=bold, color=blue];
m25_106 -> m25_108  [key=2, style=dotted];
m25_106 -> m25_107  [key=0, style=solid];
m25_113 -> m25_114  [key=0, style=solid];
m25_113 -> m25_115  [key=2, style=dotted];
m25_101 -> m25_102  [key=0, style=solid];
m25_105 -> m25_106  [key=0, style=solid];
m25_112 -> m25_113  [key=0, style=solid];
m25_93 -> m25_94  [key=0, style=solid];
m25_95 -> m25_93  [key=0, style=bold, color=blue];
m25_98 -> m25_99  [key=0, style=solid];
m25_103 -> m25_101  [key=0, style=bold, color=blue];
m25_99 -> m25_85  [key=2, style=dotted];
m25_99 -> m25_100  [key=0, style=solid];
m25_117 -> m25_85  [key=2, style=dotted];
m25_117 -> m25_118  [key=0, style=solid];
m25_4 -> m25_5  [key=0, style=solid];
m25_4 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m25_4 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m25_4 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m25_107 -> m25_105  [key=0, style=bold, color=blue];
m25_114 -> m25_112  [key=0, style=bold, color=blue];
m25_116 -> m25_117  [key=0, style=solid];
m25_144 -> m25_145  [key=0, style=solid];
m25_147 -> m25_148  [key=0, style=solid];
m25_119 -> m25_120  [key=0, style=solid];
m25_123 -> m25_124  [key=0, style=solid];
m25_127 -> m25_128  [key=0, style=solid];
m25_131 -> m25_132  [key=0, style=solid];
m25_134 -> m25_135  [key=0, style=solid];
m25_138 -> m25_139  [key=0, style=solid];
m25_100 -> m25_98  [key=0, style=bold, color=blue];
m25_118 -> m25_116  [key=0, style=bold, color=blue];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_14  [key=2, style=dotted];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_18  [key=2, style=dotted];
m25_146 -> m25_144  [key=0, style=bold, color=blue];
m25_145 -> m25_146  [key=0, style=solid];
m25_149 -> m25_147  [key=0, style=bold, color=blue];
m25_148 -> m25_149  [key=0, style=solid];
m25_121 -> m25_119  [key=0, style=bold, color=blue];
m25_120 -> m25_121  [key=0, style=solid];
m25_120 -> m25_122  [key=2, style=dotted];
m25_125 -> m25_123  [key=0, style=bold, color=blue];
m25_124 -> m25_125  [key=0, style=solid];
m25_124 -> m25_126  [key=2, style=dotted];
m25_129 -> m25_127  [key=0, style=bold, color=blue];
m25_128 -> m25_129  [key=0, style=solid];
m25_128 -> m25_130  [key=2, style=dotted];
m25_128 -> m25_122  [key=2, style=dotted];
m25_133 -> m25_131  [key=0, style=bold, color=blue];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_126  [key=2, style=dotted];
m25_136 -> m25_134  [key=0, style=bold, color=blue];
m25_135 -> m25_136  [key=0, style=solid];
m25_135 -> m25_130  [key=2, style=dotted];
m25_135 -> m25_137  [key=2, style=dotted];
m25_140 -> m25_138  [key=0, style=bold, color=blue];
m25_139 -> m25_140  [key=0, style=solid];
m25_139 -> m25_141  [key=2, style=dotted];
m25_139 -> m25_142  [key=2, style=dotted];
m25_139 -> m25_143  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_13 -> m25_11  [key=0, style=bold, color=blue];
m25_13 -> m25_14  [key=0, style=solid];
m25_17 -> m25_15  [key=0, style=bold, color=blue];
m25_17 -> m25_9  [key=0, style=bold, color=blue];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label=char];
m25_9 -> m25_15  [key=3, color=darkorchid, style=bold, label="method methodReturn bool IsWhiteSpace"];
m25_156 -> m25_110  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m25_156 -> m25_106  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m25_152 -> m25_94  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m25_153 -> m25_94  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m25_154 -> m25_102  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_154 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_155 -> m25_102  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m25_157 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label=token];
m25_150 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_150 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_150 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_150 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m25_151 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m25_151 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m28_3 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_6  [key=0, style=solid];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_8  [key=0, style=solid];
m28_6 -> m28_11  [key=2, style=dotted];
m28_8 -> m28_9  [key=0, style=solid];
m28_5 -> m28_9  [key=0, style=solid];
m28_5 -> m28_10  [key=2, style=dotted];
m28_7 -> m28_9  [key=0, style=solid];
m28_7 -> m28_12  [key=2, style=dotted];
m28_9 -> m28_3  [key=0, style=bold, color=blue];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_16  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ValueListAttribute GetAttribute"];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_34  [key=2, style=dotted];
m28_26 -> m28_29  [key=1, style=dashed, color=darkseagreen4, label=list];
m28_26 -> m28_31  [key=1, style=dashed, color=darkseagreen4, label=list];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_29  [key=0, style=solid];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_31  [key=0, style=solid];
m28_31 -> m28_32  [key=0, style=solid];
m28_28 -> m28_33  [key=0, style=solid];
m28_30 -> m28_33  [key=0, style=solid];
m28_30 -> m28_35  [key=2, style=dotted];
m28_32 -> m28_33  [key=0, style=solid];
m28_33 -> m28_25  [key=0, style=bold, color=blue];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_15  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_13 -> m28_18  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_13 -> m28_19  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_13 -> m28_16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IList<string> GetReference"];
m28_14 -> m28_15  [key=0, style=solid];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_21  [key=2, style=dotted];
m28_15 -> m28_18  [key=1, style=dashed, color=darkseagreen4, label=concreteType];
m28_15 -> m28_19  [key=1, style=dashed, color=darkseagreen4, label=property];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_22  [key=2, style=dotted];
m28_18 -> m28_23  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_24  [key=2, style=dotted];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_18  [key=0, style=solid];
m28_17 -> m28_20  [key=0, style=solid];
m28_20 -> m28_13  [key=0, style=bold, color=blue];
m28_21 -> m28_36  [key=0, style=solid];
m28_21 -> m28_37  [key=1, style=dashed, color=darkseagreen4, label=object];
m28_21 -> m28_13  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
m28_21 -> m28_14  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type concreteType"];
m28_21 -> m28_16  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Reflection.PropertyInfo GetProperty"];
m28_36 -> m28_37  [key=0, style=solid];
m28_37 -> m28_38  [key=0, style=solid];
m28_37 -> m28_34  [key=2, style=dotted];
m28_37 -> m28_40  [key=1, style=dashed, color=darkseagreen4, label=list];
m28_37 -> m28_42  [key=1, style=dashed, color=darkseagreen4, label=list];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_40  [key=0, style=solid];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_42  [key=0, style=solid];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_44  [key=1, style=dashed, color=darkseagreen4, label=pairZero];
m28_39 -> m28_45  [key=0, style=solid];
m28_41 -> m28_45  [key=0, style=solid];
m28_41 -> m28_35  [key=2, style=dotted];
m28_43 -> m28_44  [key=0, style=solid];
m28_43 -> m28_45  [key=1, style=dashed, color=darkseagreen4, label="out System.Type"];
m28_44 -> m28_45  [key=0, style=solid];
m28_45 -> m28_21  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_0  [key=0, style=bold, color=blue];
m28_46 -> m28_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueListAttribute"];
m28_46 -> m28_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueListAttribute"];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=2, style=dotted];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
}
