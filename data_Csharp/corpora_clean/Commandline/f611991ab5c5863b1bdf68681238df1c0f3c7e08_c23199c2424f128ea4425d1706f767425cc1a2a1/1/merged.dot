digraph  {
d1 [label="this.tag = tag", span="26-26", cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", color=green, community=0];
d91 [label="CSharpx.Either<T1, T2>", span=""];
d0 [label="Entry CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24", cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)"];
d2 [label="Exit CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24", cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)"];
d4 [label="this.value = value", span="45-45", cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", color=green, community=0];
d92 [label="CSharpx.Either1Of2<T1, T2>", span=""];
d3 [label="Entry CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42", cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)"];
d5 [label="Exit CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42", cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)"];
d7 [label="this.value = value", span="64-64", cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", color=green, community=0];
d93 [label="CSharpx.Either2Of2<T1, T2>", span=""];
d6 [label="Entry CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61", cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)"];
d8 [label="Exit CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61", cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)"];
d10 [label="return new Either1Of2<T1, T2>(value);", span="681-681", cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", color=green, community=0];
d9 [label="Entry CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679", cluster="CSharpx.Either.New1Of2<T1, T2>(T1)"];
d11 [label="Exit CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679", cluster="CSharpx.Either.New1Of2<T1, T2>(T1)"];
d13 [label="return new Either2Of2<T1, T2>(value);", span="686-686", cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", color=green, community=0];
d12 [label="Entry CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684", cluster="CSharpx.Either.New2Of2<T1, T2>(T2)"];
d14 [label="Exit CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684", cluster="CSharpx.Either.New2Of2<T1, T2>(T2)"];
d16 [label="return value => new Either1Of2<T1, T2>(value);", span="830-830", cluster="CSharpx.Either.ReturnM<T1, T2>()", color=green, community=0];
d15 [label="Entry CSharpx.Either.ReturnM<T1, T2>()", span="828-828", cluster="CSharpx.Either.ReturnM<T1, T2>()"];
d17 [label="Exit CSharpx.Either.ReturnM<T1, T2>()", span="828-828", cluster="CSharpx.Either.ReturnM<T1, T2>()"];
d19 [label="new Either1Of2<T1, T2>(value)", span="830-830", cluster="lambda expression", color=green, community=0];
d18 [label="Entry lambda expression", span="830-830", cluster="lambda expression"];
d20 [label="Exit lambda expression", span="830-830", cluster="lambda expression"];
d22 [label="either.Tag == Either2Type.Either1Of2", span="838-838", cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0];
d21 [label="Entry CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836", cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)"];
d23 [label="return ((Either1Of2<T1, T2>)either).Value;", span="840-840", cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0];
d24 [label="throw new ArgumentException(''either'', string.Format(''The either value was Either2Of2 {0}'', either));", span="842-842", cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0];
d25 [label="Exit CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836", cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)"];
d26 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d27 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)"];
d29 [label="return new Either1Of2<T2, Exception>(func(value));", span="852-852", cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", color=green, community=0];
d28 [label="Entry CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848", cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)"];
d32 [label="Exit CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848", cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)"];
d33 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
d30 [label=Exception, span="854-854", cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", color=green, community=0];
d31 [label="return new Either2Of2<T2, Exception>(ex);", span="856-856", cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", color=green, community=0];
d35 [label="return Protect(v => (T1)obj, obj);", span="866-866", cluster="CSharpx.Either.Cast<T1>(object)", color=green, community=0];
d34 [label="Entry CSharpx.Either.Cast<T1>(object)", span="864-864", cluster="CSharpx.Either.Cast<T1>(object)"];
d36 [label="Exit CSharpx.Either.Cast<T1>(object)", span="864-864", cluster="CSharpx.Either.Cast<T1>(object)"];
d37 [label="Entry lambda expression", span="866-866", cluster="lambda expression"];
d38 [label="(T1)obj", span="866-866", cluster="lambda expression", color=green, community=0];
d94 [label=object, span=""];
d39 [label="Exit lambda expression", span="866-866", cluster="lambda expression"];
d41 [label="func.Tag == Either2Type.Either1Of2 && value.Tag == Either2Type.Either1Of2", span="874-874", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d40 [label="Entry CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)"];
d42 [label="var f = (Either1Of2<Func<T1, T3>, T2>)func", span="876-876", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d45 [label="func.Tag == Either2Type.Either2Of2", span="880-880", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d43 [label="var x = (Either1Of2<T1, T2>)value", span="877-877", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d44 [label="return new Either1Of2<T3, T2>(f.Value(x.Value));", span="878-878", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d46 [label="var e = (Either2Of2<Func<T1, T3>, T2>)func", span="882-882", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d48 [label="var g = (Either2Of2<T1, T2>)value", span="885-885", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d47 [label="return new Either2Of2<T3, T2>(e.Value);", span="883-883", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d49 [label="return new Either2Of2<T3, T2>(g.Value);", span="886-886", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0];
d50 [label="Exit CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872", cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)"];
d52 [label="either.Tag == Either2Type.Either1Of2", span="894-894", cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d51 [label="Entry CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892", cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)"];
d53 [label="var x = (Either1Of2<T1, T3>)either", span="896-896", cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d55 [label="var y = (Either2Of2<T1, T3>)either", span="899-899", cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d54 [label="return new Either1Of2<T2, T3>(func(x.Value));", span="897-897", cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d57 [label="Exit CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892", cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)"];
d56 [label="return new Either2Of2<T2, T3>(y.Value);", span="900-900", cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d59 [label="either.Tag == Either2Type.Either1Of2", span="908-908", cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0];
d58 [label="Entry CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906", cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)"];
d60 [label="var x = (Either1Of2<T1, T3>)either", span="910-910", cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0];
d62 [label="var y = (Either2Of2<T1, T3>)either", span="913-913", cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0];
d61 [label="return func(x.Value);", span="911-911", cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0];
d64 [label="Exit CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906", cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)"];
d63 [label="return new Either2Of2<T2, T3>(y.Value);", span="914-914", cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0];
d66 [label="either.Tag == Either2Type.Either1Of2", span="924-924", cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0];
d65 [label="Entry CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922", cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)"];
d67 [label="var x = (Either1Of2<T1, T3>)either", span="926-926", cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0];
d69 [label="var y = (Either2Of2<T1, T3>)either", span="929-929", cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0];
d68 [label="return new Either1Of2<T2, T4>(func1(x.Value));", span="927-927", cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0];
d71 [label="Exit CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922", cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)"];
d70 [label="return new Either2Of2<T2, T4>(func2(y.Value));", span="930-930", cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0];
d73 [label="either.Tag == Either2Type.Either1Of2", span="940-940", cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d72 [label="Entry CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938", cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)"];
d74 [label="var x = (Either1Of2<T1, T3>)either", span="942-942", cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d76 [label="var y = (Either2Of2<T1, T3>)either", span="945-945", cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d75 [label="return func1(x.Value);", span="943-943", cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d78 [label="Exit CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938", cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)"];
d77 [label="return func2(y.Value);", span="946-946", cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0];
d80 [label="maybe.Tag == MaybeType.Just", span="952-952", cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", color=green, community=0];
d79 [label="Entry CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", span="950-950", cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)"];
d81 [label="return new Either1Of2<T1, T2>(((Just<T1>)maybe).Value);", span="954-954", cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", color=green, community=0];
}
