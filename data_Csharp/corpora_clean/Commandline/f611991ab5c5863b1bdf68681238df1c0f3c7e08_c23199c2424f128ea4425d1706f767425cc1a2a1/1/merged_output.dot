digraph  {
d1 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", color=green, community=0, label="-1: this.tag = tag", span="26-26"];
d91 [label="CSharpx.Either<T1, T2>", span=""];
d0 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", label="Entry CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24"];
d2 [cluster="CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", label="Exit CSharpx.Either<T1, T2>.Either(CSharpx.Either2Type)", span="24-24"];
d4 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", color=green, community=0, label="-1: this.value = value", span="45-45"];
d92 [label="CSharpx.Either1Of2<T1, T2>", span=""];
d3 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", label="Entry CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42"];
d5 [cluster="CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", label="Exit CSharpx.Either1Of2<T1, T2>.Either1Of2(T1)", span="42-42"];
d7 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", color=green, community=0, label="-1: this.value = value", span="64-64"];
d93 [label="CSharpx.Either2Of2<T1, T2>", span=""];
d6 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", label="Entry CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61"];
d8 [cluster="CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", label="Exit CSharpx.Either2Of2<T1, T2>.Either2Of2(T2)", span="61-61"];
d10 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", color=green, community=0, label="-1: return new Either1Of2<T1, T2>(value);", span="681-681"];
d9 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", label="Entry CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679"];
d11 [cluster="CSharpx.Either.New1Of2<T1, T2>(T1)", label="Exit CSharpx.Either.New1Of2<T1, T2>(T1)", span="679-679"];
d13 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", color=green, community=0, label="-1: return new Either2Of2<T1, T2>(value);", span="686-686"];
d12 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", label="Entry CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684"];
d14 [cluster="CSharpx.Either.New2Of2<T1, T2>(T2)", label="Exit CSharpx.Either.New2Of2<T1, T2>(T2)", span="684-684"];
d16 [cluster="CSharpx.Either.ReturnM<T1, T2>()", color=green, community=0, label="-1: return value => new Either1Of2<T1, T2>(value);", span="830-830"];
d15 [cluster="CSharpx.Either.ReturnM<T1, T2>()", label="Entry CSharpx.Either.ReturnM<T1, T2>()", span="828-828"];
d17 [cluster="CSharpx.Either.ReturnM<T1, T2>()", label="Exit CSharpx.Either.ReturnM<T1, T2>()", span="828-828"];
d19 [cluster="lambda expression", color=green, community=0, label="-1: new Either1Of2<T1, T2>(value)", span="830-830"];
d18 [cluster="lambda expression", label="Entry lambda expression", span="830-830"];
d20 [cluster="lambda expression", label="Exit lambda expression", span="830-830"];
d22 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0, label="-1: either.Tag == Either2Type.Either1Of2", span="838-838"];
d21 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", label="Entry CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836"];
d23 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0, label="-1: return ((Either1Of2<T1, T2>)either).Value;", span="840-840"];
d24 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", color=green, community=0, label="-1: throw new ArgumentException(''either'', string.Format(''The either value was Either2Of2 {0}'', either));", span="842-842"];
d25 [cluster="CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", label="Exit CSharpx.Either.Get<T1, T2>(CSharpx.Either<T1, T2>)", span="836-836"];
d26 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d27 [cluster="string.Format(string, object)", label="Entry string.Format(string, object)", span="0-0"];
d29 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", color=green, community=0, label="-1: return new Either1Of2<T2, Exception>(func(value));", span="852-852"];
d28 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", label="Entry CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848"];
d32 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", label="Exit CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", span="848-848"];
d33 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
d30 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", color=green, community=0, label="-1: Exception", span="854-854"];
d31 [cluster="CSharpx.Either.Protect<T1, T2>(System.Func<T1, T2>, T1)", color=green, community=0, label="-1: return new Either2Of2<T2, Exception>(ex);", span="856-856"];
d35 [cluster="CSharpx.Either.Cast<T1>(object)", color=green, community=0, label="-1: return Protect(v => (T1)obj, obj);", span="866-866"];
d34 [cluster="CSharpx.Either.Cast<T1>(object)", label="Entry CSharpx.Either.Cast<T1>(object)", span="864-864"];
d36 [cluster="CSharpx.Either.Cast<T1>(object)", label="Exit CSharpx.Either.Cast<T1>(object)", span="864-864"];
d37 [cluster="lambda expression", label="Entry lambda expression", span="866-866"];
d38 [cluster="lambda expression", color=green, community=0, label="-1: (T1)obj", span="866-866"];
d94 [label=object, span=""];
d39 [cluster="lambda expression", label="Exit lambda expression", span="866-866"];
d41 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: func.Tag == Either2Type.Either1Of2 && value.Tag == Either2Type.Either1Of2", span="874-874"];
d40 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", label="Entry CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872"];
d42 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: var f = (Either1Of2<Func<T1, T3>, T2>)func", span="876-876"];
d45 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: func.Tag == Either2Type.Either2Of2", span="880-880"];
d43 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: var x = (Either1Of2<T1, T2>)value", span="877-877"];
d44 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: return new Either1Of2<T3, T2>(f.Value(x.Value));", span="878-878"];
d46 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: var e = (Either2Of2<Func<T1, T3>, T2>)func", span="882-882"];
d48 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: var g = (Either2Of2<T1, T2>)value", span="885-885"];
d47 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: return new Either2Of2<T3, T2>(e.Value);", span="883-883"];
d49 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", color=green, community=0, label="-1: return new Either2Of2<T3, T2>(g.Value);", span="886-886"];
d50 [cluster="CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", label="Exit CSharpx.Either.Ap<T1, T2, T3>(CSharpx.Either<T1, T2>, CSharpx.Either<System.Func<T1, T3>, T2>)", span="872-872"];
d52 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: either.Tag == Either2Type.Either1Of2", span="894-894"];
d51 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", label="Entry CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892"];
d53 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var x = (Either1Of2<T1, T3>)either", span="896-896"];
d55 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var y = (Either2Of2<T1, T3>)either", span="899-899"];
d54 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return new Either1Of2<T2, T3>(func(x.Value));", span="897-897"];
d57 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", label="Exit CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", span="892-892"];
d56 [cluster="CSharpx.Either.Map<T1, T2, T3>(System.Func<T1, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return new Either2Of2<T2, T3>(y.Value);", span="900-900"];
d59 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: either.Tag == Either2Type.Either1Of2", span="908-908"];
d58 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", label="Entry CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906"];
d60 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var x = (Either1Of2<T1, T3>)either", span="910-910"];
d62 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var y = (Either2Of2<T1, T3>)either", span="913-913"];
d61 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return func(x.Value);", span="911-911"];
d64 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", label="Exit CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", span="906-906"];
d63 [cluster="CSharpx.Either.Bind<T1, T2, T3>(System.Func<T1, CSharpx.Either<T2, T3>>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return new Either2Of2<T2, T3>(y.Value);", span="914-914"];
d66 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: either.Tag == Either2Type.Either1Of2", span="924-924"];
d65 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", label="Entry CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922"];
d67 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var x = (Either1Of2<T1, T3>)either", span="926-926"];
d69 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var y = (Either2Of2<T1, T3>)either", span="929-929"];
d68 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return new Either1Of2<T2, T4>(func1(x.Value));", span="927-927"];
d71 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", label="Exit CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", span="922-922"];
d70 [cluster="CSharpx.Either.Bimap<T1, T2, T3, T4>(System.Func<T1, T2>, System.Func<T3, T4>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return new Either2Of2<T2, T4>(func2(y.Value));", span="930-930"];
d73 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: either.Tag == Either2Type.Either1Of2", span="940-940"];
d72 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", label="Entry CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938"];
d74 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var x = (Either1Of2<T1, T3>)either", span="942-942"];
d76 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: var y = (Either2Of2<T1, T3>)either", span="945-945"];
d75 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return func1(x.Value);", span="943-943"];
d78 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", label="Exit CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", span="938-938"];
d77 [cluster="CSharpx.Either.Choice<T1, T2, T3>(System.Func<T1, T2>, System.Func<T3, T2>, CSharpx.Either<T1, T3>)", color=green, community=0, label="-1: return func2(y.Value);", span="946-946"];
d80 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", color=green, community=0, label="-1: maybe.Tag == MaybeType.Just", span="952-952"];
d79 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", label="Entry CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", span="950-950"];
d81 [cluster="CSharpx.Either.OfMaybe<T1, T2>(CSharpx.Maybe<T1>, T2)", color=green, community=0, label="-1: return new Either1Of2<T1, T2>(((Just<T1>)maybe).Value);", span="954-954"];
}
