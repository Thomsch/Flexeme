digraph  {
m0_65 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m0_63 [cluster="string.Substring(int, int)", file="SentenceBuilder.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_40 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="SentenceBuilder.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m0_64 [cluster="System.Text.StringBuilder.Append(char)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m0_0 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.CreateDefault()", span="22-22"];
m0_1 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="return new DefaultSentenceBuilder();", span="24-24"];
m0_2 [cluster="CommandLine.Text.SentenceBuilder.CreateDefault()", file="SentenceBuilder.cs", label="Exit CommandLine.Text.SentenceBuilder.CreateDefault()", span="22-22"];
m0_48 [cluster="Unk.Select", file="SentenceBuilder.cs", label="Entry Unk.Select", span=""];
m0_50 [cluster="Unk.Join", file="SentenceBuilder.cs", label="Entry Unk.Join", span=""];
m0_59 [cluster="Unk.Distinct", file="SentenceBuilder.cs", label="Entry Unk.Distinct", span=""];
m0_60 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m0_39 [cluster="string.JoinTo(params string[])", file="SentenceBuilder.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m0_51 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="147-171"];
m0_4 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="63-63"];
m0_5 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Required.''", span="63-63"];
m0_6 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="63-63"];
m0_7 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="71-71"];
m0_8 [cluster="lambda expression", file="SentenceBuilder.cs", label="''ERROR(S):''", span="71-71"];
m0_9 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="71-71"];
m0_10 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="79-81"];
m0_11 [cluster="lambda expression", file="SentenceBuilder.cs", label="isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="79-81"];
m0_12 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="79-81"];
m0_13 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="89-89"];
m0_14 [cluster="lambda expression", file="SentenceBuilder.cs", label="''Display version information.''", span="89-89"];
m0_15 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="89-89"];
m0_16 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="97-132"];
m0_17 [cluster="lambda expression", file="SentenceBuilder.cs", label="error.Tag", span="99-99"];
m0_19 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="102-102"];
m0_21 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="104-105"];
m0_23 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="107-107"];
m0_25 [cluster="lambda expression", file="SentenceBuilder.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="109-109"];
m0_28 [cluster="lambda expression", file="SentenceBuilder.cs", label="var badFormat = ((BadFormatConversionError)error)", span="116-116"];
m0_31 [cluster="lambda expression", file="SentenceBuilder.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="121-121"];
m0_34 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="127-127"];
m0_18 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatTokenError", span="101-101"];
m0_20 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingValueOptionError", span="103-103"];
m0_22 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.UnknownOptionError", span="106-106"];
m0_24 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.MissingRequiredOptionError", span="108-108"];
m0_27 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadFormatConversionError", span="115-115"];
m0_30 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.SequenceOutOfRangeError", span="120-120"];
m0_33 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.BadVerbSelectedError", span="126-126"];
m0_35 [cluster="lambda expression", file="SentenceBuilder.cs", label="ErrorType.NoVerbSelectedError", span="128-128"];
m0_26 [cluster="lambda expression", file="SentenceBuilder.cs", label="return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="110-112"];
m0_29 [cluster="lambda expression", file="SentenceBuilder.cs", label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="117-119"];
m0_32 [cluster="lambda expression", file="SentenceBuilder.cs", label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with few items than required.'');", span="122-125"];
m0_36 [cluster="lambda expression", file="SentenceBuilder.cs", label="return ''No verb selected.'';", span="129-129"];
m0_37 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="97-132"];
m0_38 [cluster="lambda expression", file="SentenceBuilder.cs", label="throw new InvalidOperationException();", span="131-131"];
m0_42 [cluster="lambda expression", file="SentenceBuilder.cs", label="Entry lambda expression", span="140-173"];
m0_43 [cluster="lambda expression", file="SentenceBuilder.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="142-144"];
m0_44 [cluster="lambda expression", file="SentenceBuilder.cs", label="var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select ''''' + e.NameInfo.NameText + ''', '').ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select ''''' + x.NameInfo.NameText + ''', '').ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 2))\r\n                                        .Append(' ')\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                        .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="146-171"];
m0_54 [cluster="lambda expression", file="SentenceBuilder.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select ''''' + x.NameInfo.NameText + ''', '').ToArray())", span="154-159"];
m0_45 [cluster="lambda expression", file="SentenceBuilder.cs", label="return string.Join(Environment.NewLine, msgs);", span="172-172"];
m0_46 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="140-173"];
m0_52 [cluster="lambda expression", file="SentenceBuilder.cs", label="var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select ''''' + e.NameInfo.NameText + ''', '').ToArray())", span="149-151"];
m0_53 [cluster="lambda expression", file="SentenceBuilder.cs", label="var namesCount = set.Errors.Count()", span="152-152"];
m0_55 [cluster="lambda expression", file="SentenceBuilder.cs", label="return\r\n                                    new StringBuilder(''Option'').AppendWhen(namesCount > 1, ''s'')\r\n                                        .Append('': '')\r\n                                        .Append(names.Substring(0, names.Length - 2))\r\n                                        .Append(' ')\r\n                                        .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                        .Append('' not compatible with: '')\r\n                                        .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                        .Append('.')\r\n                                        .ToString();", span="161-170"];
m0_56 [cluster="lambda expression", file="SentenceBuilder.cs", label="Exit lambda expression", span="147-171"];
m0_49 [cluster="Unk.ToArray", file="SentenceBuilder.cs", label="Entry Unk.ToArray", span=""];
m0_61 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m0_57 [cluster="Unk.Count", file="SentenceBuilder.cs", label="Entry Unk.Count", span=""];
m0_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="SentenceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m0_41 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SentenceBuilder.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_62 [cluster="System.Text.StringBuilder.Append(string)", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_58 [cluster="Unk.EndsWith", file="SentenceBuilder.cs", label="Entry Unk.EndsWith", span=""];
m0_66 [cluster="System.Text.StringBuilder.ToString()", file="SentenceBuilder.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_3 [cluster="CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", file="SentenceBuilder.cs", label="Entry CommandLine.Text.SentenceBuilder.DefaultSentenceBuilder.DefaultSentenceBuilder()", span="57-57"];
m0_67 [file="SentenceBuilder.cs", label=bySet, span=""];
m1_154 [cluster="CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", file="TypeConverter.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.StringArrayEnumerator(string[])", span="38-38"];
m1_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="TypeConverter.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="85-85"];
m1_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="TypeConverter.cs", label="Assumes.NotNull(configuration, ''configuration'', SR.ArgumentNullException_ParserSettingsDelegateCannotBeNull)", span="87-87"];
m1_16 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="TypeConverter.cs", label="configuration.Invoke(Settings)", span="90-90"];
m1_15 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="TypeConverter.cs", label="_settings = new ParserSettings()", span="89-89"];
m1_17 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="TypeConverter.cs", label="_settings.Consumed = true", span="91-91"];
m1_18 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="TypeConverter.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="85-85"];
m1_64 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="227-227"];
m1_65 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="229-229"];
m1_66 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="230-230"];
m1_67 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="231-231"];
m1_69 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="!DoParseArgumentsVerbs(args, options, ref verbInstance)", span="235-235"];
m1_70 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, null)", span="237-237"];
m1_71 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="InvokeAutoBuildIfNeeded(options)", span="239-239"];
m1_72 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="onFail == null", span="241-241"];
m1_74 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="onFail()", span="247-247"];
m1_76 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, verbInstance)", span="253-253"];
m1_68 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="object verbInstance = null", span="233-233"];
m1_73 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="Environment.Exit(DefaultExitCodeFail)", span="243-243"];
m1_75 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="return false;", span="250-250"];
m1_77 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="return true;", span="254-254"];
m1_78 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TypeConverter.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="227-227"];
m1_125 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="Entry CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="431-431"];
m1_190 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="var caseSensitive = _settings.CaseSensitive", span="433-433"];
m1_191 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label=args, span="434-434"];
m1_192 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="helpOption.ShortName != null", span="436-436"];
m1_193 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="438-438"];
m1_195 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="string.IsNullOrEmpty(helpOption.LongName)", span="444-444"];
m1_196 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="449-449"];
m1_198 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="return false;", span="455-455"];
m1_194 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="return true;", span="440-440"];
m1_197 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="return true;", span="451-451"];
m1_199 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="TypeConverter.cs", label="Exit CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="431-431"];
m1_229 [cluster="object.HasVerbHelp()", file="TypeConverter.cs", label="Entry object.HasVerbHelp()", span="44-44"];
m1_28 [cluster="CommandLine.Parser.~Parser()", file="TypeConverter.cs", label="Entry CommandLine.Parser.~Parser()", span="109-109"];
m1_29 [cluster="CommandLine.Parser.~Parser()", file="TypeConverter.cs", label="Dispose(false)", span="111-111"];
m1_30 [cluster="CommandLine.Parser.~Parser()", file="TypeConverter.cs", label="Exit CommandLine.Parser.~Parser()", span="109-109"];
m1_84 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="Entry CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="268-268"];
m1_85 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="found = false", span="270-270"];
m1_86 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="string.IsNullOrEmpty(verb)", span="271-271"];
m1_87 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="return target;", span="273-273"];
m1_88 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="var pair = ReflectionHelper.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="276-276"];
m1_90 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="return found ? pair.Left.GetValue(target, null) : target;", span="278-278"];
m1_89 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="found = pair != null", span="277-277"];
m1_91 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="TypeConverter.cs", label="Exit CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="268-268"];
m1_189 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_106 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m1_19 [cluster="System.Action<T>.Invoke(T)", file="TypeConverter.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m1_231 [cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="TypeConverter.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="278-278"];
m1_37 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="Entry CommandLine.Parser.DoParseArguments(string[], object)", span="310-310"];
m1_113 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="var pair = ReflectionHelper.RetrieveMethod<HelpOptionAttribute>(options)", span="312-312"];
m1_116 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsCore(args, options)", span="318-318"];
m1_118 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="321-321"];
m1_122 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="return DoParseArgumentsCore(args, options);", span="329-329"];
m1_114 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="var helpWriter = _settings.HelpWriter", span="313-313"];
m1_115 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="pair != null && helpWriter != null", span="315-315"];
m1_119 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="helpWriter.Write(helpText)", span="322-322"];
m1_117 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="string helpText", span="320-320"];
m1_121 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="return true;", span="326-326"];
m1_120 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="return false;", span="323-323"];
m1_123 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="TypeConverter.cs", label="Exit CommandLine.Parser.DoParseArguments(string[], object)", span="310-310"];
m1_4 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="TypeConverter.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m1_5 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=red, community=0, file="TypeConverter.cs", label="3: Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_ParserSettingsInstanceCannotBeNull)", span="68-68"];
m1_6 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=red, community=0, file="TypeConverter.cs", label="3: settings.Consumed", span="70-70"];
m1_8 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=red, community=0, file="TypeConverter.cs", label="8: _settings = settings", span="75-75"];
m1_7 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=red, community=0, file="TypeConverter.cs", label="3: throw new InvalidOperationException(SR.InvalidOperationException_ParserSettingsInstanceCanBeUsedOnce);", span="72-72"];
m1_9 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", color=red, community=0, file="TypeConverter.cs", label="3: _settings.Consumed = true", span="76-76"];
m1_10 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="TypeConverter.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="66-66"];
m1_62 [cluster="System.Environment.Exit(int)", file="TypeConverter.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m1_151 [cluster="CommandLine.Parsing.OptionMap.Create(object, CommandLine.ParserSettings)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.OptionMap.Create(object, CommandLine.ParserSettings)", span="101-101"];
m1_183 [cluster="CommandLine.Parsing.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Infrastructure.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", span="134-134"];
m1_200 [cluster="CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", span="43-43"];
m1_235 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="TypeConverter.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="338-338"];
m1_159 [cluster="CommandLine.Parsing.OptionMap.EnforceRules()", file="TypeConverter.cs", label="Entry CommandLine.Parsing.OptionMap.EnforceRules()", span="161-161"];
m1_156 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.ArgumentParser.Create(string, bool)", span="59-59"];
m1_201 [cluster="CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", span="51-51"];
m1_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="TypeConverter.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="49-49"];
m1_124 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrieveMethod<TAttribute>(object)", span="86-86"];
m1_32 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="TypeConverter.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m1_33 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="TypeConverter.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="142-142"];
m1_34 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="TypeConverter.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="143-143"];
m1_35 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="TypeConverter.cs", label="return DoParseArguments(args, options);", span="145-145"];
m1_36 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="TypeConverter.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object)", span="140-140"];
m1_49 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="TypeConverter.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m1_50 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="188-188"];
m1_51 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="190-190"];
m1_52 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="191-191"];
m1_53 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="!DoParseArguments(args, options)", span="193-193"];
m1_54 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="InvokeAutoBuildIfNeeded(options)", span="195-195"];
m1_55 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="onFail == null", span="197-197"];
m1_57 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="onFail()", span="203-203"];
m1_59 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="return true;", span="209-209"];
m1_56 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="Environment.Exit(DefaultExitCodeFail)", span="199-199"];
m1_58 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="return false;", span="206-206"];
m1_60 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="TypeConverter.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="188-188"];
m1_0 [cluster="CommandLine.Parser.Parser()", file="TypeConverter.cs", label="Entry CommandLine.Parser.Parser()", span="54-54"];
m1_1 [cluster="CommandLine.Parser.Parser()", color=red, community=0, file="TypeConverter.cs", label="5: _settings = new ParserSettings { Consumed = true }", span="56-56"];
m1_2 [cluster="CommandLine.Parser.Parser()", file="TypeConverter.cs", label="Exit CommandLine.Parser.Parser()", span="54-54"];
m1_232 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="519-519"];
m1_22 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="96-102"];
m1_23 [cluster="lambda expression", file="TypeConverter.cs", label="with.CaseSensitive = false", span="98-98"];
m1_24 [cluster="lambda expression", file="TypeConverter.cs", label="with.MutuallyExclusive = false", span="99-99"];
m1_25 [cluster="lambda expression", file="TypeConverter.cs", label="with.HelpWriter = Console.Error", span="100-100"];
m1_26 [cluster="lambda expression", file="TypeConverter.cs", label="with.ParsingCulture = CultureInfo.InvariantCulture", span="101-101"];
m1_27 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="96-102"];
m1_233 [cluster="lambda expression", file="TypeConverter.cs", label="HelpText.DefaultParsingErrorsHandler(options, current)", span="519-519"];
m1_234 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="519-519"];
m1_47 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="Entry CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="378-378"];
m1_160 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="var verbs = ReflectionHelper.RetrievePropertyList<VerbOptionAttribute>(options)", span="380-380"];
m1_161 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="var helpInfo = ReflectionHelper.RetrieveMethod<HelpVerbOptionAttribute>(options)", span="381-381"];
m1_162 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="args.Length == 0", span="382-382"];
m1_164 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="386-386"];
m1_166 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="var optionMap = OptionMap.Create(options, verbs, _settings)", span="392-392"];
m1_167 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="TryParseHelpVerb(args, options, helpInfo, optionMap)", span="395-395"];
m1_169 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="var verbOption = optionMap[args.First()]", span="401-401"];
m1_172 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="408-408"];
m1_174 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="verbInstance = verbOption.GetValue(options)", span="414-414"];
m1_176 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="verbInstance = verbOption.CreateInstance(options)", span="418-418"];
m1_177 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="var verbResult = DoParseArgumentsCore(args.Skip(1).ToArray(), verbInstance)", span="421-421"];
m1_179 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="DisplayHelpVerbText(options, helpInfo, args.First())", span="425-425"];
m1_163 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="helpInfo != null || _settings.HelpWriter != null", span="384-384"];
m1_171 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="helpInfo != null", span="406-406"];
m1_178 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="!verbResult && helpInfo != null", span="422-422"];
m1_165 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="return false;", span="389-389"];
m1_168 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="return false;", span="398-398"];
m1_170 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="verbOption == null", span="404-404"];
m1_173 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="return false;", span="411-411"];
m1_175 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="verbInstance == null", span="415-415"];
m1_180 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="return verbResult;", span="428-428"];
m1_181 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="TypeConverter.cs", label="Exit CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="378-378"];
m1_108 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="TypeConverter.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m1_185 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m1_126 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="Entry CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="332-332"];
m1_129 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="var hadError = false", span="334-334"];
m1_130 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="var optionMap = OptionMap.Create(options, _settings)", span="335-335"];
m1_132 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="var valueMapper = new ValueMapper(options, _settings.ParsingCulture)", span="337-337"];
m1_133 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="var arguments = new StringArrayEnumerator(args)", span="339-339"];
m1_139 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="var result = parser.Parse(arguments, optionMap, options)", span="351-351"];
m1_141 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="SetParserStateIfNeeded(options, parser.PostParsingState)", span="354-354"];
m1_148 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="hadError |= !optionMap.EnforceRules()", span="373-373"];
m1_131 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="optionMap.SetDefaults()", span="336-336"];
m1_145 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="valueMapper.CanReceiveValues", span="364-364"];
m1_146 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="!valueMapper.MapValueItem(argument)", span="366-366"];
m1_134 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="arguments.MoveNext()", span="340-340"];
m1_135 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="var argument = arguments.Current", span="342-342"];
m1_144 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="arguments.MoveNext()", span="361-361"];
m1_136 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="string.IsNullOrEmpty(argument)", span="343-343"];
m1_137 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="348-348"];
m1_138 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="parser != null", span="349-349"];
m1_140 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="352-352"];
m1_143 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="359-359"];
m1_142 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="hadError = true", span="355-355"];
m1_147 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="hadError = true", span="368-368"];
m1_149 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="return !hadError;", span="375-375"];
m1_150 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="TypeConverter.cs", label="Exit CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="332-332"];
m1_188 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m1_153 [cluster="CommandLine.Parsing.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", span="47-47"];
m1_228 [cluster="object.HasHelp()", file="TypeConverter.cs", label="Entry object.HasHelp()", span="39-39"];
m1_95 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="Entry CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="281-281"];
m1_96 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="!options.CanReceiveParserState()", span="283-283"];
m1_98 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="var property = ReflectionHelper.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="288-288"];
m1_99 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="property.GetValue(options, null) == null", span="291-291"];
m1_100 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="property.SetValue(options, new ParserState(), null)", span="294-294"];
m1_101 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="297-297"];
m1_102 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label=errors, span="299-299"];
m1_97 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="return;", span="285-285"];
m1_103 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="parserState.Errors.Add(error)", span="301-301"];
m1_104 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="TypeConverter.cs", label="Exit CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="281-281"];
m1_11 [cluster="CommandLine.Infrastructure.Assumes.NotNull<T>(T, string, string)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.Assumes.NotNull<T>(T, string, string)", span="40-40"];
m1_157 [cluster="CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.ArgumentParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="99-99"];
m1_223 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="TypeConverter.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m1_109 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TypeConverter.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m1_20 [cluster="CommandLine.Parser.Parser(bool)", file="TypeConverter.cs", label="Entry CommandLine.Parser.Parser(bool)", span="95-95"];
m1_21 [cluster="CommandLine.Parser.Parser(bool)", file="TypeConverter.cs", label="Exit CommandLine.Parser.Parser(bool)", span="95-95"];
m1_152 [cluster="CommandLine.Parsing.OptionMap.SetDefaults()", file="TypeConverter.cs", label="Entry CommandLine.Parsing.OptionMap.SetDefaults()", span="166-166"];
m1_230 [cluster="object.HasVerbs()", file="TypeConverter.cs", label="Entry object.HasVerbs()", span="34-34"];
m1_83 [cluster="System.GC.SuppressFinalize(object)", file="TypeConverter.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m1_38 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="161-161"];
m1_39 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="163-163"];
m1_40 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="164-164"];
m1_41 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="165-165"];
m1_43 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="var result = DoParseArgumentsVerbs(args, options, ref verbInstance)", span="169-169"];
m1_44 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, result ? verbInstance : null)", span="171-171"];
m1_42 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="object verbInstance = null", span="167-167"];
m1_45 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="return result;", span="173-173"];
m1_46 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="TypeConverter.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="161-161"];
m1_92 [cluster="string.IsNullOrEmpty(string)", file="TypeConverter.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_105 [cluster="object.CanReceiveParserState()", file="TypeConverter.cs", label="Entry object.CanReceiveParserState()", span="49-49"];
m1_48 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m1_243 [cluster="CommandLine.ParserSettings.Dispose()", file="TypeConverter.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="235-235"];
m1_12 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="TypeConverter.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m1_186 [cluster="CommandLine.Parsing.OptionInfo.GetValue(object)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.OptionInfo.GetValue(object)", span="142-142"];
m1_79 [cluster="CommandLine.Parser.Dispose()", file="TypeConverter.cs", label="Entry CommandLine.Parser.Dispose()", span="260-260"];
m1_80 [cluster="CommandLine.Parser.Dispose()", file="TypeConverter.cs", label="Dispose(true)", span="262-262"];
m1_81 [cluster="CommandLine.Parser.Dispose()", file="TypeConverter.cs", label="GC.SuppressFinalize(this)", span="264-264"];
m1_82 [cluster="CommandLine.Parser.Dispose()", file="TypeConverter.cs", label="Exit CommandLine.Parser.Dispose()", span="260-260"];
m1_158 [cluster="CommandLine.Parsing.ValueMapper.MapValueItem(string)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.ValueMapper.MapValueItem(string)", span="70-70"];
m1_182 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="Entry CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="488-488"];
m1_216 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="string helpText", span="490-490"];
m1_217 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="verb == null", span="491-491"];
m1_218 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="493-493"];
m1_219 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="497-497"];
m1_220 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="_settings.HelpWriter != null", span="500-500"];
m1_221 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="_settings.HelpWriter.Write(helpText)", span="502-502"];
m1_222 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="TypeConverter.cs", label="Exit CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="488-488"];
m1_107 [cluster="CommandLine.ParserState.ParserState()", file="TypeConverter.cs", label="Entry CommandLine.ParserState.ParserState()", span="34-34"];
m1_110 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="TypeConverter.cs", label="Entry CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="305-305"];
m1_111 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="TypeConverter.cs", label="return settings.CaseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;", span="307-307"];
m1_112 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="TypeConverter.cs", label="Exit CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="305-305"];
m1_187 [cluster="CommandLine.Parsing.OptionInfo.CreateInstance(object)", file="TypeConverter.cs", label="Entry CommandLine.Parsing.OptionInfo.CreateInstance(object)", span="147-147"];
m1_215 [cluster="string.Compare(string, string, System.StringComparison)", file="TypeConverter.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m1_31 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="523-523"];
m1_236 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label=_disposed, span="525-525"];
m1_238 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label=disposing, span="530-530"];
m1_237 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label="return;", span="527-527"];
m1_239 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label="_settings != null", span="532-532"];
m1_240 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label="_settings.Dispose()", span="534-534"];
m1_241 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label="_disposed = true", span="537-537"];
m1_242 [cluster="CommandLine.Parser.Dispose(bool)", file="TypeConverter.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="523-523"];
m1_127 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="108-108"];
m1_63 [cluster="System.Action.Invoke()", file="TypeConverter.cs", label="Entry System.Action.Invoke()", span="0-0"];
m1_61 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="TypeConverter.cs", label="Entry CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="506-506"];
m1_224 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="TypeConverter.cs", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="508-510"];
m1_226 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="TypeConverter.cs", label="_settings.HelpWriter.Write(\r\n                HelpText.AutoBuild(\r\n                    options,\r\n                    current => HelpText.DefaultParsingErrorsHandler(options, current),\r\n                    options.HasVerbs()))", span="516-520"];
m1_225 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="TypeConverter.cs", label="return;", span="512-512"];
m1_227 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="TypeConverter.cs", label="Exit CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="506-506"];
m1_184 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="Entry CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", span="458-458"];
m1_202 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="var helpWriter = _settings.HelpWriter", span="460-460"];
m1_203 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="helpInfo != null && helpWriter != null", span="461-461"];
m1_204 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="string.Compare(args[0], helpInfo.Right.LongName, GetStringComparison(_settings)) == 0", span="463-463"];
m1_205 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="var verb = args.FirstOrDefault()", span="466-466"];
m1_207 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="var verbOption = optionMap[verb]", span="469-469"];
m1_209 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="verbOption.GetValue(options) == null", span="472-472"];
m1_210 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="verbOption.CreateInstance(options)", span="475-475"];
m1_211 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", span="480-480"];
m1_213 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="return false;", span="485-485"];
m1_206 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="verb != null", span="467-467"];
m1_208 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="verbOption != null", span="470-470"];
m1_212 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="return true;", span="481-481"];
m1_214 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", file="TypeConverter.cs", label="Exit CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Parsing.OptionMap)", span="458-458"];
m1_155 [cluster="CommandLine.Parsing.StringArrayEnumerator.MoveNext()", file="TypeConverter.cs", label="Entry CommandLine.Parsing.StringArrayEnumerator.MoveNext()", span="93-93"];
m1_94 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="TypeConverter.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m1_128 [cluster="System.IO.TextWriter.Write(string)", file="TypeConverter.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m1_93 [cluster="CommandLine.Infrastructure.ReflectionHelper.RetrieveOptionProperty<TAttribute>(object, string)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.RetrieveOptionProperty<TAttribute>(object, string)", span="199-199"];
m1_244 [file="TypeConverter.cs", label="CommandLine.Parser", span=""];
m1_245 [file="TypeConverter.cs", label=object, span=""];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_51 -> m0_54  [color=darkseagreen4, key=1, label="?", style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_15 -> m0_13  [color=blue, key=0, style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_16 -> m0_21  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_16 -> m0_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_16 -> m0_25  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_16 -> m0_28  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_16 -> m0_31  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_16 -> m0_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_16 -> m0_16  [color=darkorchid, key=3, label="method methodReturn string ", style=bold];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_20  [key=0, style=solid];
m0_17 -> m0_22  [key=0, style=solid];
m0_17 -> m0_24  [key=0, style=solid];
m0_17 -> m0_27  [key=0, style=solid];
m0_17 -> m0_30  [key=0, style=solid];
m0_17 -> m0_33  [key=0, style=solid];
m0_17 -> m0_35  [key=0, style=solid];
m0_19 -> m0_37  [key=0, style=solid];
m0_19 -> m0_39  [key=2, style=dotted];
m0_21 -> m0_37  [key=0, style=solid];
m0_21 -> m0_39  [key=2, style=dotted];
m0_23 -> m0_37  [key=0, style=solid];
m0_23 -> m0_39  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_34 -> m0_37  [key=0, style=solid];
m0_34 -> m0_39  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_33 -> m0_34  [key=0, style=solid];
m0_35 -> m0_36  [key=0, style=solid];
m0_26 -> m0_37  [key=0, style=solid];
m0_26 -> m0_40  [key=2, style=dotted];
m0_26 -> m0_39  [key=2, style=dotted];
m0_29 -> m0_37  [key=0, style=solid];
m0_29 -> m0_40  [key=2, style=dotted];
m0_29 -> m0_39  [key=2, style=dotted];
m0_32 -> m0_37  [key=0, style=solid];
m0_32 -> m0_40  [key=2, style=dotted];
m0_32 -> m0_39  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_37 -> m0_16  [color=blue, key=0, style=bold];
m0_38 -> m0_37  [key=0, style=solid];
m0_38 -> m0_41  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_47  [key=2, style=dotted];
m0_43 -> m0_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m0_43 -> m0_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_48  [key=2, style=dotted];
m0_44 -> m0_49  [key=2, style=dotted];
m0_44 -> m0_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_58  [key=2, style=dotted];
m0_54 -> m0_59  [key=2, style=dotted];
m0_54 -> m0_49  [key=2, style=dotted];
m0_54 -> m0_50  [key=2, style=dotted];
m0_54 -> m0_54  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_50  [key=2, style=dotted];
m0_46 -> m0_42  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_49  [key=2, style=dotted];
m0_52 -> m0_50  [key=2, style=dotted];
m0_52 -> m0_52  [color=darkseagreen4, key=1, label=e, style=dashed];
m0_52 -> m0_55  [color=darkseagreen4, key=1, label=names, style=dashed];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_55  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_60  [key=2, style=dotted];
m0_55 -> m0_61  [key=2, style=dotted];
m0_55 -> m0_62  [key=2, style=dotted];
m0_55 -> m0_63  [key=2, style=dotted];
m0_55 -> m0_64  [key=2, style=dotted];
m0_55 -> m0_65  [key=2, style=dotted];
m0_55 -> m0_66  [key=2, style=dotted];
m0_56 -> m0_51  [color=blue, key=0, style=bold];
m0_67 -> m0_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_16  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_11  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_19  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_3  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_13  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_66  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_64 -> m1_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_64 -> m1_69  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_64 -> m1_70  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_64 -> m1_71  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_64 -> m1_72  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m1_64 -> m1_74  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m1_64 -> m1_76  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_11  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_11  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_11  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_76  [key=0, style=solid];
m1_69 -> m1_47  [key=2, style=dotted];
m1_69 -> m1_69  [color=darkseagreen4, key=1, label=verbInstance, style=dashed];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_48  [key=2, style=dotted];
m1_70 -> m1_49  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_61  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_74  [key=0, style=solid];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_63  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_48  [key=2, style=dotted];
m1_76 -> m1_49  [key=2, style=dotted];
m1_68 -> m1_69  [key=0, style=solid];
m1_73 -> m1_75  [key=0, style=solid];
m1_73 -> m1_62  [key=2, style=dotted];
m1_75 -> m1_78  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_78 -> m1_64  [color=blue, key=0, style=bold];
m1_125 -> m1_190  [key=0, style=solid];
m1_125 -> m1_191  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_125 -> m1_192  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m1_125 -> m1_193  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m1_125 -> m1_195  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m1_125 -> m1_196  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m1_190 -> m1_191  [key=0, style=solid];
m1_190 -> m1_193  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m1_190 -> m1_196  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_198  [key=0, style=solid];
m1_191 -> m1_193  [color=darkseagreen4, key=1, label=arg, style=dashed];
m1_191 -> m1_196  [color=darkseagreen4, key=1, label=arg, style=dashed];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_195  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_195  [key=0, style=solid];
m1_193 -> m1_200  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_191  [key=0, style=solid];
m1_195 -> m1_92  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_191  [key=0, style=solid];
m1_196 -> m1_201  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_194 -> m1_199  [key=0, style=solid];
m1_197 -> m1_199  [key=0, style=solid];
m1_199 -> m1_125  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=2, style=dotted];
m1_30 -> m1_28  [color=blue, key=0, style=bold];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_84 -> m1_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_84 -> m1_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_84 -> m1_90  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [key=0, style=solid];
m1_86 -> m1_92  [key=2, style=dotted];
m1_87 -> m1_91  [key=0, style=solid];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_93  [key=2, style=dotted];
m1_88 -> m1_90  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_94  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_91  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m1_91 -> m1_84  [color=blue, key=0, style=bold];
m1_37 -> m1_113  [key=0, style=solid];
m1_37 -> m1_116  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_37 -> m1_118  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_37 -> m1_122  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_124  [key=2, style=dotted];
m1_113 -> m1_115  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_113 -> m1_116  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_113 -> m1_118  [color=darkseagreen4, key=1, label=pair, style=dashed];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_121  [key=0, style=solid];
m1_116 -> m1_125  [key=2, style=dotted];
m1_116 -> m1_126  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_127  [key=2, style=dotted];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_126  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_119  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_122  [key=0, style=solid];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_128  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_121 -> m1_123  [key=0, style=solid];
m1_120 -> m1_123  [key=0, style=solid];
m1_123 -> m1_37  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [color=red, key=0, style=solid];
m1_4 -> m1_6  [color=red, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_4 -> m1_8  [color=red, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_5 -> m1_6  [color=red, key=0, style=solid];
m1_5 -> m1_11  [color=red, key=2, style=dotted];
m1_6 -> m1_7  [color=red, key=0, style=solid];
m1_6 -> m1_8  [color=red, key=0, style=solid];
m1_8 -> m1_9  [color=red, key=0, style=solid];
m1_7 -> m1_10  [color=red, key=0, style=solid];
m1_7 -> m1_12  [color=red, key=2, style=dotted];
m1_9 -> m1_10  [color=red, key=0, style=solid];
m1_10 -> m1_4  [color=blue, key=0, style=bold];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_32 -> m1_35  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_11  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_11  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_37  [key=2, style=dotted];
m1_36 -> m1_32  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_52  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_50 -> m1_53  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_50 -> m1_54  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_50 -> m1_55  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m1_50 -> m1_57  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_11  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_11  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_59  [key=0, style=solid];
m1_53 -> m1_37  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_61  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_63  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_56 -> m1_58  [key=0, style=solid];
m1_56 -> m1_62  [key=2, style=dotted];
m1_58 -> m1_60  [key=0, style=solid];
m1_60 -> m1_50  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=red, key=0, style=solid];
m1_1 -> m1_2  [color=red, key=0, style=solid];
m1_1 -> m1_3  [color=red, key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_232 -> m1_233  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_22 -> m1_25  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_22 -> m1_26  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_22  [color=blue, key=0, style=bold];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_235  [key=2, style=dotted];
m1_234 -> m1_232  [color=blue, key=0, style=bold];
m1_47 -> m1_160  [key=0, style=solid];
m1_47 -> m1_161  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_47 -> m1_162  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_47 -> m1_164  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_47 -> m1_166  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_47 -> m1_167  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_47 -> m1_169  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_47 -> m1_172  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_47 -> m1_174  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_47 -> m1_176  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_47 -> m1_177  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_47 -> m1_179  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_106  [key=2, style=dotted];
m1_160 -> m1_166  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_124  [key=2, style=dotted];
m1_161 -> m1_163  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m1_161 -> m1_164  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m1_161 -> m1_167  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m1_161 -> m1_171  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m1_161 -> m1_172  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m1_161 -> m1_178  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m1_161 -> m1_179  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_166  [key=0, style=solid];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_182  [key=2, style=dotted];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_183  [key=2, style=dotted];
m1_166 -> m1_169  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_169  [key=0, style=solid];
m1_167 -> m1_184  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_185  [key=2, style=dotted];
m1_169 -> m1_174  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m1_169 -> m1_176  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_182  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_186  [key=2, style=dotted];
m1_174 -> m1_177  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m1_174 -> m1_181  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_187  [key=2, style=dotted];
m1_176 -> m1_181  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_188  [key=2, style=dotted];
m1_177 -> m1_189  [key=2, style=dotted];
m1_177 -> m1_126  [key=2, style=dotted];
m1_177 -> m1_180  [color=darkseagreen4, key=1, label=verbResult, style=dashed];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_185  [key=2, style=dotted];
m1_179 -> m1_182  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_165  [key=0, style=solid];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_173  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_180  [key=0, style=solid];
m1_165 -> m1_181  [key=0, style=solid];
m1_168 -> m1_181  [key=0, style=solid];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_174  [key=0, style=solid];
m1_173 -> m1_181  [key=0, style=solid];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_177  [key=0, style=solid];
m1_180 -> m1_181  [key=0, style=solid];
m1_181 -> m1_47  [color=blue, key=0, style=bold];
m1_126 -> m1_129  [key=0, style=solid];
m1_126 -> m1_130  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_126 -> m1_132  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_126 -> m1_133  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_126 -> m1_139  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_126 -> m1_141  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_129 -> m1_130  [key=0, style=solid];
m1_129 -> m1_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_151  [key=2, style=dotted];
m1_130 -> m1_139  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m1_130 -> m1_148  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_153  [key=2, style=dotted];
m1_132 -> m1_145  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m1_132 -> m1_146  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_154  [key=2, style=dotted];
m1_133 -> m1_135  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m1_133 -> m1_139  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m1_133 -> m1_144  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_157  [key=2, style=dotted];
m1_139 -> m1_143  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_95  [key=2, style=dotted];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_159  [key=2, style=dotted];
m1_148 -> m1_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_152  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_134  [key=0, style=solid];
m1_146 -> m1_147  [key=0, style=solid];
m1_146 -> m1_134  [key=0, style=solid];
m1_146 -> m1_158  [key=2, style=dotted];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_148  [key=0, style=solid];
m1_134 -> m1_155  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [color=darkseagreen4, key=1, label=argument, style=dashed];
m1_135 -> m1_146  [color=darkseagreen4, key=1, label=argument, style=dashed];
m1_144 -> m1_134  [key=0, style=solid];
m1_144 -> m1_155  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_134  [key=0, style=solid];
m1_136 -> m1_92  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_156  [key=2, style=dotted];
m1_137 -> m1_139  [color=darkseagreen4, key=1, label=parser, style=dashed];
m1_137 -> m1_141  [color=darkseagreen4, key=1, label=parser, style=dashed];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_145  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_143  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_134  [key=0, style=solid];
m1_142 -> m1_134  [key=0, style=solid];
m1_142 -> m1_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m1_147 -> m1_134  [key=0, style=solid];
m1_147 -> m1_148  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_126  [color=blue, key=0, style=bold];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_95 -> m1_99  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_95 -> m1_100  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_95 -> m1_101  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_95 -> m1_102  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_98  [key=0, style=solid];
m1_96 -> m1_105  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_106  [key=2, style=dotted];
m1_98 -> m1_100  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_98 -> m1_101  [color=darkseagreen4, key=1, label=property, style=dashed];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_101  [key=0, style=solid];
m1_99 -> m1_94  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_107  [key=2, style=dotted];
m1_100 -> m1_108  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_94  [key=2, style=dotted];
m1_101 -> m1_103  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_104  [key=0, style=solid];
m1_97 -> m1_104  [key=0, style=solid];
m1_103 -> m1_102  [key=0, style=solid];
m1_103 -> m1_109  [key=2, style=dotted];
m1_104 -> m1_95  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_20  [color=blue, key=0, style=bold];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_40  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_38 -> m1_41  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_38 -> m1_43  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_38 -> m1_44  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_11  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_11  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_11  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_43  [color=darkseagreen4, key=1, label=verbInstance, style=dashed];
m1_43 -> m1_45  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_48  [key=2, style=dotted];
m1_44 -> m1_49  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_46 -> m1_38  [color=blue, key=0, style=bold];
m1_79 -> m1_80  [key=0, style=solid];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_31  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=2, style=dotted];
m1_82 -> m1_79  [color=blue, key=0, style=bold];
m1_182 -> m1_216  [key=0, style=solid];
m1_182 -> m1_217  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_182 -> m1_218  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_182 -> m1_219  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_216 -> m1_217  [key=0, style=solid];
m1_217 -> m1_218  [key=0, style=solid];
m1_217 -> m1_219  [key=0, style=solid];
m1_218 -> m1_220  [key=0, style=solid];
m1_218 -> m1_223  [key=2, style=dotted];
m1_218 -> m1_221  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_223  [key=2, style=dotted];
m1_219 -> m1_221  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_222  [key=0, style=solid];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_128  [key=2, style=dotted];
m1_222 -> m1_182  [color=blue, key=0, style=bold];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_110  [color=blue, key=0, style=bold];
m1_31 -> m1_236  [key=0, style=solid];
m1_31 -> m1_238  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_238  [key=0, style=solid];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_242  [key=0, style=solid];
m1_237 -> m1_242  [key=0, style=solid];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_241  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_243  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_242 -> m1_31  [color=blue, key=0, style=bold];
m1_61 -> m1_224  [key=0, style=solid];
m1_61 -> m1_226  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_61 -> m1_233  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_226  [key=0, style=solid];
m1_224 -> m1_228  [key=2, style=dotted];
m1_224 -> m1_229  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_230  [key=2, style=dotted];
m1_226 -> m1_231  [key=2, style=dotted];
m1_226 -> m1_128  [key=2, style=dotted];
m1_226 -> m1_232  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_225 -> m1_227  [key=0, style=solid];
m1_227 -> m1_61  [color=blue, key=0, style=bold];
m1_184 -> m1_202  [key=0, style=solid];
m1_184 -> m1_203  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m1_184 -> m1_204  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_184 -> m1_205  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_184 -> m1_207  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionMap", style=dashed];
m1_184 -> m1_209  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_184 -> m1_210  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_184 -> m1_211  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_202 -> m1_203  [key=0, style=solid];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_213  [key=0, style=solid];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_213  [key=0, style=solid];
m1_204 -> m1_110  [key=2, style=dotted];
m1_204 -> m1_215  [key=2, style=dotted];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_48  [key=2, style=dotted];
m1_205 -> m1_207  [color=darkseagreen4, key=1, label=verb, style=dashed];
m1_205 -> m1_211  [color=darkseagreen4, key=1, label=verb, style=dashed];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_209  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m1_207 -> m1_210  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_211  [key=0, style=solid];
m1_209 -> m1_186  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_187  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_182  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_211  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_211  [key=0, style=solid];
m1_212 -> m1_214  [key=0, style=solid];
m1_214 -> m1_184  [color=blue, key=0, style=bold];
m1_244 -> m1_1  [color=red, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_8  [color=red, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_9  [color=red, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_15  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_16  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_17  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_29  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_43  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_53  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_54  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_69  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_71  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_80  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_81  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_114  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_116  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_122  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_137  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_163  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_164  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_166  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_167  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_172  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_177  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_179  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_190  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_202  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_204  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_211  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_220  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_221  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_224  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_226  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_236  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_239  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_240  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_244 -> m1_241  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m1_245 -> m1_233  [color=darkseagreen4, key=1, label=object, style=dashed];
}
