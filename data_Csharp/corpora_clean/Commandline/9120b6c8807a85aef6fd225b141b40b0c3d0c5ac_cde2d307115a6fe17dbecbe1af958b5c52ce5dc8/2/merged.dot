digraph  {
n223 [label=int, span=""];
n224 [label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>", span=""];
n0 [label="Entry CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="23-23", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n1 [label="var collection = source as ICollection<TSource>", span="26-26", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n3 [label="collection.Count != count", span="29-29", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n4 [label="throw errorSelector(collection.Count.CompareTo(count), count);", span="30-30", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n5 [label="return source;", span="31-31", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n6 [label="return ExpectingCountYieldingImpl(source, count, errorSelector);", span="34-34", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n2 [label="collection != null", span="27-27", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n7 [label="Exit CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="23-23", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n10 [label="Entry CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="37-37", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n8 [label="Entry int.CompareTo(int)", span="0-0", cluster="int.CompareTo(int)"];
n9 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)"];
n11 [label="var iterations = 0", span="40-40", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n16 [label="yield return element;", span="48-48", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n12 [label=source, span="41-41", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n14 [label="iterations > count", span="44-44", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n15 [label="throw errorSelector(1, count);", span="46-46", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n17 [label="iterations != count", span="50-50", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n18 [label="throw errorSelector(-1, count);", span="52-52", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n13 [label="iterations++", span="43-43", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n19 [label="Exit CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="37-37", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)"];
n20 [label="Entry CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="60-60", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n21 [label="first == null", span="62-62", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n23 [label="second == null", span="63-63", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n25 [label="resultSelector == null", span="64-64", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n27 [label="return from item1 in first\n                   from item2 in second // TODO buffer to avoid multiple enumerations\n                   select resultSelector(item1, item2);", span="66-68", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n22 [label="throw new ArgumentNullException(''first'');", span="62-62", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n24 [label="throw new ArgumentNullException(''second'');", span="63-63", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n26 [label="throw new ArgumentNullException(''resultSelector'');", span="64-64", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n28 [label="Exit CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="60-60", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)"];
n29 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n30 [label="Entry CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", span="74-74", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)"];
n31 [label="source == null", span="76-76", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)"];
n33 [label="return LinqEnumerable.Concat(LinqEnumerable.Repeat(value, 1), source);", span="78-78", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)"];
n32 [label="throw new ArgumentNullException(''source'');", span="76-76", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)"];
n34 [label="Exit CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", span="74-74", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)"];
n35 [label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0", cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)"];
n36 [label="Entry System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)"];
n37 [label="Entry CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", span="84-84", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)"];
n38 [label="tail == null", span="86-86", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)"];
n40 [label="return tail.Prepend(head);", span="88-88", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)"];
n39 [label="throw new ArgumentNullException(''tail'');", span="86-86", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)"];
n41 [label="Exit CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", span="84-84", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)"];
n42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Prepend<TSource>(TSource)", span="74-74", cluster="System.Collections.Generic.IEnumerable<TSource>.Prepend<TSource>(TSource)"];
n43 [label="Entry CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", span="94-94", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)"];
n44 [label="head == null", span="96-96", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)"];
n46 [label="return LinqEnumerable.Concat(head, LinqEnumerable.Repeat(tail, 1));", span="98-98", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)"];
n45 [label="throw new ArgumentNullException(''head'');", span="96-96", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)"];
n47 [label="Exit CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", span="94-94", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)"];
n48 [label="Entry CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="105-105", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n49 [label="sequence == null", span="107-107", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n51 [label="startIndex < 0", span="108-108", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n53 [label="count < 0", span="109-109", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n55 [label="return ExcludeImpl(sequence, startIndex, count);", span="111-111", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n50 [label="throw new ArgumentNullException(''sequence'');", span="107-107", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n52 [label="throw new ArgumentOutOfRangeException(''startIndex'');", span="108-108", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n54 [label="throw new ArgumentOutOfRangeException(''count'');", span="109-109", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n56 [label="Exit CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="105-105", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n58 [label="Entry CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="114-114", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n57 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
n59 [label="var index = -1", span="116-116", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n63 [label="yield return iter.Current;", span="122-122", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n66 [label="yield return iter.Current;", span="128-128", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n60 [label="var endIndex = startIndex + count", span="117-117", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n61 [label="var iter = sequence.GetEnumerator()", span="118-118", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n62 [label="iter.MoveNext() && ++index < startIndex", span="121-121", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n64 [label="++index < endIndex && iter.MoveNext()", span="124-124", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n68 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()"];
n65 [label="iter.MoveNext()", span="127-127", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n69 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()"];
n67 [label="Exit CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="114-114", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)"];
n70 [label="Entry CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="137-137", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n71 [label="return source.Index(0);", span="139-139", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n72 [label="Exit CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="137-137", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n73 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Index<TSource>(int)", span="147-147", cluster="System.Collections.Generic.IEnumerable<TSource>.Index<TSource>(int)"];
n74 [label="Entry CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", span="147-147", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)"];
n75 [label="return source.Select((item, index) => new KeyValuePair<int, TSource>(startIndex + index, item));", span="149-149", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)"];
n79 [label="new KeyValuePair<int, TSource>(startIndex + index, item)", span="149-149", cluster="lambda expression"];
n76 [label="Exit CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", span="147-147", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)"];
n77 [label="Entry Unk.Select", span="", cluster="Unk.Select"];
n78 [label="Entry lambda expression", span="149-149", cluster="lambda expression"];
n80 [label="Exit lambda expression", span="149-149", cluster="lambda expression"];
n81 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)"];
n82 [label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="156-156", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)"];
n83 [label="return FoldImpl(source, 1, folder, null, null, null);", span="158-158", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)"];
n84 [label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="156-156", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)"];
n85 [label="Entry CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", span="188-188", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n86 [label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", span="165-165", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)"];
n87 [label="return FoldImpl(source, 2, null, folder, null, null);", span="167-167", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)"];
n88 [label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", span="165-165", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)"];
n89 [label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", span="174-174", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)"];
n90 [label="return FoldImpl(source, 3, null, null, folder, null);", span="176-176", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)"];
n91 [label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", span="174-174", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)"];
n92 [label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", span="183-183", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)"];
n93 [label="return FoldImpl(source, 4, null, null, null, folder);", span="185-185", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)"];
n94 [label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", span="183-183", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)"];
n95 [label="source == null", span="194-194", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n97 [label="count == 1 && folder1 == null\n                || count == 2 && folder2 == null\n                || count == 3 && folder3 == null\n                || count == 4 && folder4 == null", span="195-198", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n99 [label="var elements = new T[count]", span="203-203", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n100 [label="AssertCountImpl(source.Index(), count, OnFolderSourceSizeErrorSelector)", span="204-204", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n102 [label=count, span="207-207", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n104 [label="return folder1(elements[0]);", span="209-209", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n106 [label="return folder2(elements[0], elements[1]);", span="210-210", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n108 [label="return folder3(elements[0], elements[1], elements[2]);", span="211-211", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n110 [label="return folder4(elements[0], elements[1], elements[2], elements[3]);", span="212-212", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n96 [label="throw new ArgumentNullException(''source'');", span="194-194", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n98 [label="throw new ArgumentNullException(''folder'');", span="200-200", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n101 [label="elements[e.Key] = e.Value", span="205-205", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n113 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Index<TSource>()", span="137-137", cluster="System.Collections.Generic.IEnumerable<TSource>.Index<TSource>()"];
n103 [label=1, span="209-209", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n105 [label=2, span="210-210", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n107 [label=3, span="211-211", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n109 [label=4, span="212-212", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n111 [label="throw new NotSupportedException();", span="213-213", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n112 [label="Exit CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", span="188-188", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)"];
n117 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()"];
n114 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n115 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)"];
n116 [label="Entry System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", span="0-0", cluster="System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)"];
n118 [label="Entry CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", span="219-219", cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)"];
n119 [label="var message = cmp < 0\n                        ? ''Sequence contains too few elements when exactly {0} {1} expected.''\n                        : ''Sequence contains too many elements when exactly {0} {1} expected.''", span="221-223", cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)"];
n120 [label="return new Exception(string.Format(message, count.ToString(''N0''), count == 1 ? ''was'' : ''were''));", span="224-224", cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)"];
n121 [label="Exit CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", span="219-219", cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)"];
n122 [label="Entry System.Exception.Exception(string)", span="0-0", cluster="System.Exception.Exception(string)"];
n123 [label="Entry int.ToString(string)", span="0-0", cluster="int.ToString(string)"];
n124 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)"];
n125 [label="Entry CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="231-231", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n126 [label="source == null", span="233-233", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n128 [label="action == null", span="234-234", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n130 [label=source, span="236-236", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n131 [label="action(element)", span="238-238", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n127 [label="throw new ArgumentNullException(''source'');", span="233-233", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n129 [label="throw new ArgumentNullException(''action'');", span="234-234", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n132 [label="Exit CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="231-231", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)"];
n133 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)"];
n134 [label="Entry CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="248-248", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n135 [label="source == null", span="250-250", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n137 [label="resultSelector == null", span="251-251", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n139 [label="return PairwiseImpl(source, resultSelector);", span="253-253", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n136 [label="throw new ArgumentNullException(''source'');", span="250-250", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n138 [label="throw new ArgumentNullException(''resultSelector'');", span="251-251", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n140 [label="Exit CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="248-248", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n141 [label="Entry CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="256-256", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n142 [label="Debug.Assert(source != null)", span="258-258", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n146 [label="yield break;", span="264-264", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n149 [label="yield return resultSelector(previous, e.Current);", span="269-269", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n143 [label="Debug.Assert(resultSelector != null)", span="259-259", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n144 [label="var e = source.GetEnumerator()", span="261-261", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n152 [label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0", cluster="System.Diagnostics.Debug.Assert(bool)"];
n145 [label="!e.MoveNext()", span="263-263", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n147 [label="var previous = e.Current", span="266-266", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n148 [label="e.MoveNext()", span="267-267", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n150 [label="previous = e.Current", span="270-270", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n151 [label="Exit CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="256-256", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)"];
n153 [label="Entry CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="279-279", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n154 [label="return ToDelimitedString(source, null);", span="281-281", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n155 [label="Exit CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="279-279", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n156 [label="Entry CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", span="288-288", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)"];
n157 [label="source == null", span="290-290", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)"];
n159 [label="return ToDelimitedStringImpl(source, delimiter, (sb, e) => sb.Append(e));", span="292-292", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)"];
n158 [label="throw new ArgumentNullException(''source'');", span="290-290", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)"];
n160 [label="Exit CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", span="288-288", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)"];
n161 [label="Entry CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", span="295-295", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n162 [label="Entry lambda expression", span="292-292", cluster="lambda expression"];
n163 [label="sb.Append(e)", span="292-292", cluster="lambda expression"];
n164 [label="Exit lambda expression", span="292-292", cluster="lambda expression"];
n165 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)"];
n166 [label="Debug.Assert(source != null)", span="297-297", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n167 [label="Debug.Assert(append != null)", span="298-298", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n168 [label="delimiter = delimiter ?? CultureInfo.CurrentCulture.TextInfo.ListSeparator", span="300-300", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n171 [label=source, span="304-304", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n174 [label="append(sb, value)", span="307-307", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n169 [label="var sb = new StringBuilder()", span="301-301", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n173 [label="sb.Append(delimiter)", span="306-306", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n170 [label="var i = 0", span="302-302", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n177 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()"];
n175 [label="return sb.ToString();", span="310-310", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n172 [label="i++ > 0", span="306-306", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n178 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
n176 [label="Exit CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", span="295-295", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)"];
n179 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n180 [label="Entry CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", span="318-318", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)"];
n181 [label="var e = source.GetEnumerator()", span="320-320", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)"];
n182 [label="return e.MoveNext()\n                    ? Maybe.Just(e.Current)\n                    : Maybe.Nothing<T>();", span="322-324", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)"];
n183 [label="Exit CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", span="318-318", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)"];
n184 [label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)"];
n185 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()"];
n186 [label="Entry CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", span="331-331", cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)"];
n187 [label="var e = source.GetEnumerator()", span="333-333", cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)"];
n188 [label="return e.MoveNext()\n                    ? Maybe.Just(source)\n                    : Maybe.Nothing<IEnumerable<T>>();", span="335-337", cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)"];
n189 [label="Exit CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", span="331-331", cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)"];
n190 [label="Entry CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", span="346-346", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)"];
n191 [label="var e = source.GetEnumerator()", span="348-348", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)"];
n194 [label="yield return e.Current;", span="352-352", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)"];
n192 [label="e.MoveNext()", span="350-350", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)"];
n193 [label="e.MoveNext()", span="351-351", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)"];
n195 [label="throw new ArgumentException(''Source sequence cannot be empty.'', ''source'');", span="354-354", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)"];
n196 [label="Exit CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", span="346-346", cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)"];
n197 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
n198 [label="Entry CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", span="361-361", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)"];
n199 [label="var e = source.GetEnumerator()", span="363-363", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)"];
n202 [label="yield return e.Current;", span="367-367", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)"];
n200 [label="e.MoveNext()", span="365-365", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)"];
n201 [label="e.MoveNext()", span="366-366", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)"];
n203 [label="Exit CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", span="361-361", cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)"];
n204 [label="Entry CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)", span="374-374", cluster="CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)"];
n205 [label="return source.GetType().IsArray ? source : source.ToArray();", span="376-376", cluster="CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)"];
n206 [label="Exit CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)", span="374-374", cluster="CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)"];
n207 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n208 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
n209 [label="Entry CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", span="382-382", cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)"];
n210 [label="source is MaterializedEnumerable<T> || source.GetType().IsArray", span="384-384", cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)"];
n211 [label="return source;", span="386-386", cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)"];
n212 [label="return new MaterializedEnumerable<T>(source);", span="388-388", cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)"];
n213 [label="Exit CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", span="382-382", cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)"];
n214 [label="Entry CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)", span="395-395", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)"];
n215 [label="inner = enumerable as ICollection<T> ?? enumerable.ToArray()", span="397-397", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)"];
n216 [label="Exit CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)", span="395-395", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)"];
n217 [label="Entry CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()", span="400-400", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()"];
n218 [label="return inner.GetEnumerator();", span="402-402", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()"];
n219 [label="Exit CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()", span="400-400", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()"];
n220 [label="Entry CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="405-405", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()"];
n221 [label="return GetEnumerator();", span="407-407", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()"];
n222 [label="Exit CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="405-405", cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()"];
d1 [label="var collection = source as ICollection<TSource>", span="26-26", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d2 [label="collection != null", span="27-27", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d3 [label="collection.Count != count", span="29-29", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d4 [label="throw errorSelector(collection.Count.CompareTo(count), count);", span="30-30", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d5 [label="return source;", span="31-31", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d6 [label="return ExpectingCountYieldingImpl(source, count, errorSelector);", span="34-34", cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d11 [label="var iterations = 0", span="40-40", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d170 [label="var i = 0", span="302-302", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d12 [label=source, span="41-41", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d13 [label="iterations++", span="43-43", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d17 [label="iterations != count", span="50-50", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d16 [label="yield return element;", span="48-48", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d14 [label="iterations > count", span="44-44", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d15 [label="throw errorSelector(1, count);", span="46-46", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d18 [label="throw errorSelector(-1, count);", span="52-52", cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0];
d21 [label="first == null", span="62-62", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0];
d22 [label="throw new ArgumentNullException(''first'');", span="62-62", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0];
d23 [label="second == null", span="63-63", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0];
d24 [label="throw new ArgumentNullException(''second'');", span="63-63", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0];
d25 [label="resultSelector == null", span="64-64", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0];
d26 [label="throw new ArgumentNullException(''resultSelector'');", span="64-64", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0];
d27 [label="return from item1 in first\n                   from item2 in second // TODO buffer to avoid multiple enumerations\n                   select resultSelector(item1, item2);", span="66-68", cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0];
d31 [label="source == null", span="76-76", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", color=green, community=0];
d32 [label="throw new ArgumentNullException(''source'');", span="76-76", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", color=green, community=0];
d33 [label="return LinqEnumerable.Concat(LinqEnumerable.Repeat(value, 1), source);", span="78-78", cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", color=green, community=0];
d38 [label="tail == null", span="86-86", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", color=green, community=0];
d39 [label="throw new ArgumentNullException(''tail'');", span="86-86", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", color=green, community=0];
d40 [label="return tail.Prepend(head);", span="88-88", cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", color=green, community=0];
d44 [label="head == null", span="96-96", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0];
d45 [label="throw new ArgumentNullException(''head'');", span="96-96", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0];
d46 [label="return LinqEnumerable.Concat(head, LinqEnumerable.Repeat(tail, 1));", span="98-98", cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0];
d49 [label="sequence == null", span="107-107", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d50 [label="throw new ArgumentNullException(''sequence'');", span="107-107", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d51 [label="startIndex < 0", span="108-108", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d52 [label="throw new ArgumentOutOfRangeException(''startIndex'');", span="108-108", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d53 [label="count < 0", span="109-109", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d54 [label="throw new ArgumentOutOfRangeException(''count'');", span="109-109", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d55 [label="return ExcludeImpl(sequence, startIndex, count);", span="111-111", cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d59 [label="var index = -1", span="116-116", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d60 [label="var endIndex = startIndex + count", span="117-117", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d62 [label="iter.MoveNext() && ++index < startIndex", span="121-121", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d63 [label="yield return iter.Current;", span="122-122", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d66 [label="yield return iter.Current;", span="128-128", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d61 [label="var iter = sequence.GetEnumerator()", span="118-118", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d64 [label="++index < endIndex && iter.MoveNext()", span="124-124", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d65 [label="iter.MoveNext()", span="127-127", cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0];
d71 [label="return source.Index(0);", span="139-139", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", color=green, community=0];
d75 [label="return source.Select((item, index) => new KeyValuePair<int, TSource>(startIndex + index, item));", span="149-149", cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", color=green, community=0];
d79 [label="new KeyValuePair<int, TSource>(startIndex + index, item)", span="149-149", cluster="lambda expression", color=green, community=0];
d83 [label="return FoldImpl(source, 1, folder, null, null, null);", span="158-158", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", color=green, community=0];
d87 [label="return FoldImpl(source, 2, null, folder, null, null);", span="167-167", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", color=green, community=0];
d90 [label="return FoldImpl(source, 3, null, null, folder, null);", span="176-176", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", color=green, community=0];
d93 [label="return FoldImpl(source, 4, null, null, null, folder);", span="185-185", cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d95 [label="source == null", span="194-194", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d96 [label="throw new ArgumentNullException(''source'');", span="194-194", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d97 [label="count == 1 && folder1 == null\n                || count == 2 && folder2 == null\n                || count == 3 && folder3 == null\n                || count == 4 && folder4 == null", span="195-198", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d98 [label="throw new ArgumentNullException(''folder'');", span="200-200", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d99 [label="var elements = new T[count]", span="203-203", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d100 [label="AssertCountImpl(source.Index(), count, OnFolderSourceSizeErrorSelector)", span="204-204", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d101 [label="elements[e.Key] = e.Value", span="205-205", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d104 [label="return folder1(elements[0]);", span="209-209", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d106 [label="return folder2(elements[0], elements[1]);", span="210-210", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d108 [label="return folder3(elements[0], elements[1], elements[2]);", span="211-211", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d110 [label="return folder4(elements[0], elements[1], elements[2], elements[3]);", span="212-212", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d102 [label=count, span="207-207", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d103 [label=1, span="209-209", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1];
d105 [label=2, span="210-210", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1];
d107 [label=3, span="211-211", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1];
d109 [label=4, span="212-212", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1];
d111 [label="throw new NotSupportedException();", span="213-213", cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0];
d119 [label="var message = cmp < 0\n                        ? ''Sequence contains too few elements when exactly {0} {1} expected.''\n                        : ''Sequence contains too many elements when exactly {0} {1} expected.''", span="221-223", cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", color=green, community=0];
d120 [label="return new Exception(string.Format(message, count.ToString(''N0''), count == 1 ? ''was'' : ''were''));", span="224-224", cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", color=green, community=0];
d126 [label="source == null", span="233-233", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0];
d127 [label="throw new ArgumentNullException(''source'');", span="233-233", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0];
d128 [label="action == null", span="234-234", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0];
d129 [label="throw new ArgumentNullException(''action'');", span="234-234", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0];
d130 [label=source, span="236-236", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0];
d131 [label="action(element)", span="238-238", cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0];
d135 [label="source == null", span="250-250", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d136 [label="throw new ArgumentNullException(''source'');", span="250-250", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d137 [label="resultSelector == null", span="251-251", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d138 [label="throw new ArgumentNullException(''resultSelector'');", span="251-251", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d139 [label="return PairwiseImpl(source, resultSelector);", span="253-253", cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d142 [label="Debug.Assert(source != null)", span="258-258", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d143 [label="Debug.Assert(resultSelector != null)", span="259-259", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d146 [label="yield break;", span="264-264", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d145 [label="!e.MoveNext()", span="263-263", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d147 [label="var previous = e.Current", span="266-266", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d149 [label="yield return resultSelector(previous, e.Current);", span="269-269", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d144 [label="var e = source.GetEnumerator()", span="261-261", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d148 [label="e.MoveNext()", span="267-267", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d150 [label="previous = e.Current", span="270-270", cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0];
d154 [label="return ToDelimitedString(source, null);", span="281-281", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", color=green, community=0];
d157 [label="source == null", span="290-290", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", color=green, community=0];
d158 [label="throw new ArgumentNullException(''source'');", span="290-290", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", color=green, community=0];
d159 [label="return ToDelimitedStringImpl(source, delimiter, (sb, e) => sb.Append(e));", span="292-292", cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", color=green, community=0];
d163 [label="sb.Append(e)", span="292-292", cluster="lambda expression", color=green, community=0];
d166 [label="Debug.Assert(source != null)", span="297-297", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d167 [label="Debug.Assert(append != null)", span="298-298", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d168 [label="delimiter = delimiter ?? CultureInfo.CurrentCulture.TextInfo.ListSeparator", span="300-300", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d169 [label="var sb = new StringBuilder()", span="301-301", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d173 [label="sb.Append(delimiter)", span="306-306", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d171 [label=source, span="304-304", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d174 [label="append(sb, value)", span="307-307", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d172 [label="i++ > 0", span="306-306", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d175 [label="return sb.ToString();", span="310-310", cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0];
d181 [label="var e = source.GetEnumerator()", span="320-320", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0];
d182 [label="return e.MoveNext()\n                    ? Maybe.Just(e.Current)\n                    : Maybe.Nothing<T>();", span="322-324", cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0];
n223 -> n79  [key=1, style=dashed, color=darkseagreen4, label=int];
n223 -> d79  [key=1, style=dashed, color=green, label=int];
n224 -> n215  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>"];
n224 -> n218  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>"];
n224 -> n221  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>"];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n4  [key=1, style=dashed, color=darkseagreen4, label=int];
n0 -> n5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n0 -> n6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n0 -> n0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl"];
n0 -> n10  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl"];
n0 -> n70  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source"];
n0 -> d1  [key=0, style=solid, color=green];
n0 -> d3  [key=1, style=dashed, color=green, label=int];
n0 -> d4  [key=1, style=dashed, color=green, label=int];
n0 -> d5  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
n0 -> d6  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=1, style=dashed, color=darkseagreen4, label=collection];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label=collection];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n7  [key=0, style=solid];
n4 -> n8  [key=2, style=dotted];
n4 -> n9  [key=2, style=dotted];
n5 -> n7  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=0, style=solid];
n7 -> n0  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [key=0, style=bold, color=crimson];
n10 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n10 -> n14  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n15  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n17  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n18  [key=1, style=dashed, color=darkseagreen4, label=int];
n10 -> n0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source"];
n10 -> d11  [key=0, style=solid, color=green];
n10 -> d16  [key=0, style=bold, color=green];
n10 -> d12  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
n10 -> d14  [key=1, style=dashed, color=green, label=int];
n10 -> d15  [key=1, style=dashed, color=green, label=int];
n10 -> d17  [key=1, style=dashed, color=green, label=int];
n10 -> d18  [key=1, style=dashed, color=green, label=int];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=1, style=dashed, color=darkseagreen4, label=iterations];
n11 -> n17  [key=1, style=dashed, color=darkseagreen4, label=iterations];
n11 -> n11  [key=3, color=darkorchid, style=bold, label="Local variable int iterations"];
n16 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n17  [key=0, style=solid];
n12 -> n16  [key=1, style=dashed, color=darkseagreen4, label=element];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n15 -> n19  [key=0, style=solid];
n15 -> n9  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n9  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n13  [key=1, style=dashed, color=darkseagreen4, label=iterations];
n13 -> n17  [key=1, style=dashed, color=darkseagreen4, label=iterations];
n19 -> n10  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSecond>"];
n20 -> n25  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TFirst, TSecond, TResult>"];
n20 -> n27  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TFirst>"];
n20 -> d21  [key=0, style=solid, color=green];
n20 -> d23  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSecond>"];
n20 -> d25  [key=1, style=dashed, color=green, label="System.Func<TFirst, TSecond, TResult>"];
n20 -> d27  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TFirst>"];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n9  [key=2, style=dotted];
n27 -> n27  [key=1, style=dashed, color=darkseagreen4, label=item1];
n22 -> n28  [key=0, style=solid];
n22 -> n29  [key=2, style=dotted];
n24 -> n28  [key=0, style=solid];
n24 -> n29  [key=2, style=dotted];
n26 -> n28  [key=0, style=solid];
n26 -> n29  [key=2, style=dotted];
n28 -> n20  [key=0, style=bold, color=blue];
n30 -> n31  [key=0, style=solid];
n30 -> n33  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n30 -> n37  [key=3, color=darkorchid, style=bold, label="Parameter variable TSource value"];
n30 -> d31  [key=0, style=solid, color=green];
n30 -> d33  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=2, style=dotted];
n33 -> n36  [key=2, style=dotted];
n32 -> n34  [key=0, style=solid];
n32 -> n29  [key=2, style=dotted];
n34 -> n30  [key=0, style=bold, color=blue];
n37 -> n38  [key=0, style=solid];
n37 -> n40  [key=1, style=dashed, color=darkseagreen4, label=T];
n37 -> n30  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<T> Concat"];
n37 -> d38  [key=0, style=solid, color=green];
n37 -> d40  [key=1, style=dashed, color=green, label=T];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=2, style=dotted];
n39 -> n41  [key=0, style=solid];
n39 -> n29  [key=2, style=dotted];
n41 -> n37  [key=0, style=bold, color=blue];
n43 -> n44  [key=0, style=solid];
n43 -> n46  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n43 -> d44  [key=0, style=solid, color=green];
n43 -> d46  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<T>"];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n35  [key=2, style=dotted];
n46 -> n36  [key=2, style=dotted];
n45 -> n47  [key=0, style=solid];
n45 -> n29  [key=2, style=dotted];
n47 -> n43  [key=0, style=bold, color=blue];
n48 -> n49  [key=0, style=solid];
n48 -> n51  [key=1, style=dashed, color=darkseagreen4, label=int];
n48 -> n53  [key=1, style=dashed, color=darkseagreen4, label=int];
n48 -> n55  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n48 -> n58  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<T> Exclude"];
n48 -> d49  [key=0, style=solid, color=green];
n48 -> d51  [key=1, style=dashed, color=green, label=int];
n48 -> d53  [key=1, style=dashed, color=green, label=int];
n48 -> d55  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<T>"];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n55 -> n58  [key=2, style=dotted];
n50 -> n56  [key=0, style=solid];
n50 -> n29  [key=2, style=dotted];
n52 -> n56  [key=0, style=solid];
n52 -> n57  [key=2, style=dotted];
n54 -> n56  [key=0, style=solid];
n54 -> n57  [key=2, style=dotted];
n56 -> n48  [key=0, style=bold, color=blue];
n58 -> n59  [key=0, style=solid];
n58 -> n63  [key=0, style=bold, color=crimson];
n58 -> n66  [key=0, style=bold, color=crimson];
n58 -> n60  [key=1, style=dashed, color=darkseagreen4, label=int];
n58 -> n61  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n58 -> n62  [key=1, style=dashed, color=darkseagreen4, label=int];
n58 -> n48  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n58 -> d59  [key=0, style=solid, color=green];
n58 -> d63  [key=0, style=bold, color=green];
n58 -> d66  [key=0, style=bold, color=green];
n58 -> d60  [key=1, style=dashed, color=green, label=int];
n58 -> d61  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<T>"];
n58 -> d62  [key=1, style=dashed, color=green, label=int];
n59 -> n60  [key=0, style=solid];
n59 -> n62  [key=1, style=dashed, color=darkseagreen4, label=index];
n59 -> n59  [key=3, color=darkorchid, style=bold, label="Local variable int index"];
n63 -> n62  [key=0, style=solid];
n66 -> n63  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n64  [key=1, style=dashed, color=darkseagreen4, label=endIndex];
n61 -> n62  [key=0, style=solid];
n61 -> n68  [key=2, style=dotted];
n61 -> n63  [key=1, style=dashed, color=darkseagreen4, label=iter];
n61 -> n64  [key=1, style=dashed, color=darkseagreen4, label=iter];
n61 -> n65  [key=1, style=dashed, color=darkseagreen4, label=iter];
n61 -> n66  [key=1, style=dashed, color=darkseagreen4, label=iter];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=0, style=solid];
n62 -> n69  [key=2, style=dotted];
n62 -> n62  [key=1, style=dashed, color=darkseagreen4, label=index];
n64 -> n63  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n69  [key=2, style=dotted];
n64 -> n64  [key=1, style=dashed, color=darkseagreen4, label=index];
n65 -> n66  [key=0, style=solid];
n65 -> n67  [key=0, style=solid];
n65 -> n69  [key=2, style=dotted];
n67 -> n58  [key=0, style=bold, color=blue];
n70 -> n71  [key=0, style=solid];
n70 -> n73  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<int, TSource>> Index"];
n70 -> d71  [key=0, style=solid, color=green];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=2, style=dotted];
n72 -> n70  [key=0, style=bold, color=blue];
n73 -> n11  [key=3, color=darkorchid, style=bold, label="Parameter variable int startIndex"];
n73 -> d11  [key=3, color=green, style=bold, label="Parameter variable int startIndex"];
n74 -> n75  [key=0, style=solid];
n74 -> n79  [key=1, style=dashed, color=darkseagreen4, label=int];
n74 -> d75  [key=0, style=solid, color=green];
n74 -> d79  [key=1, style=dashed, color=green, label=int];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [key=2, style=dotted];
n75 -> n78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=2, style=dotted];
n76 -> n74  [key=0, style=bold, color=blue];
n78 -> n79  [key=0, style=solid];
n78 -> d79  [key=0, style=solid, color=green];
n80 -> n78  [key=0, style=bold, color=blue];
n82 -> n83  [key=0, style=solid];
n82 -> n85  [key=3, color=darkorchid, style=bold, label="method methodReturn TResult Fold"];
n82 -> d83  [key=0, style=solid, color=green];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=2, style=dotted];
n84 -> n82  [key=0, style=bold, color=blue];
n85 -> n95  [key=0, style=solid];
n85 -> n97  [key=1, style=dashed, color=darkseagreen4, label=int];
n85 -> n99  [key=1, style=dashed, color=darkseagreen4, label=int];
n85 -> n100  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n85 -> n102  [key=1, style=dashed, color=darkseagreen4, label=int];
n85 -> n104  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T, TResult>"];
n85 -> n106  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T, T, TResult>"];
n85 -> n108  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T, T, T, TResult>"];
n85 -> n110  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T, T, T, T, TResult>"];
n85 -> n82  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> source"];
n85 -> n86  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> source"];
n85 -> n89  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> source"];
n85 -> n92  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<T> source"];
n85 -> n83  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n85 -> n87  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n85 -> n90  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n85 -> n93  [key=3, color=darkorchid, style=bold, label="Parameter variable int count"];
n85 -> d83  [key=3, color=green, style=bold, label="Parameter variable int count"];
n85 -> d87  [key=3, color=green, style=bold, label="Parameter variable int count"];
n85 -> d90  [key=3, color=green, style=bold, label="Parameter variable int count"];
n85 -> d93  [key=3, color=green, style=bold, label="Parameter variable int count"];
n85 -> d95  [key=0, style=solid, color=green];
n85 -> d97  [key=1, style=dashed, color=green, label=int];
n85 -> d99  [key=1, style=dashed, color=green, label=int];
n85 -> d100  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<T>"];
n85 -> d102  [key=1, style=dashed, color=green, label=int];
n85 -> d104  [key=1, style=dashed, color=green, label="System.Func<T, TResult>"];
n85 -> d106  [key=1, style=dashed, color=green, label="System.Func<T, T, TResult>"];
n85 -> d108  [key=1, style=dashed, color=green, label="System.Func<T, T, T, TResult>"];
n85 -> d110  [key=1, style=dashed, color=green, label="System.Func<T, T, T, T, TResult>"];
n86 -> n87  [key=0, style=solid];
n86 -> n85  [key=3, color=darkorchid, style=bold, label="method methodReturn TResult Fold"];
n86 -> d87  [key=0, style=solid, color=green];
n87 -> n88  [key=0, style=solid];
n87 -> n85  [key=2, style=dotted];
n88 -> n86  [key=0, style=bold, color=blue];
n89 -> n90  [key=0, style=solid];
n89 -> n85  [key=3, color=darkorchid, style=bold, label="method methodReturn TResult Fold"];
n89 -> d90  [key=0, style=solid, color=green];
n90 -> n91  [key=0, style=solid];
n90 -> n85  [key=2, style=dotted];
n91 -> n89  [key=0, style=bold, color=blue];
n92 -> n93  [key=0, style=solid];
n92 -> n85  [key=3, color=darkorchid, style=bold, label="method methodReturn TResult Fold"];
n92 -> d93  [key=0, style=solid, color=green];
n93 -> n94  [key=0, style=solid];
n93 -> n85  [key=2, style=dotted];
n94 -> n92  [key=0, style=bold, color=blue];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [key=1, style=dashed, color=darkseagreen4, label=elements];
n99 -> n104  [key=1, style=dashed, color=darkseagreen4, label=elements];
n99 -> n106  [key=1, style=dashed, color=darkseagreen4, label=elements];
n99 -> n108  [key=1, style=dashed, color=darkseagreen4, label=elements];
n99 -> n110  [key=1, style=dashed, color=darkseagreen4, label=elements];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=0, style=solid];
n100 -> n113  [key=2, style=dotted];
n100 -> n0  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n105  [key=0, style=solid];
n102 -> n107  [key=0, style=solid];
n102 -> n109  [key=0, style=solid];
n102 -> n111  [key=0, style=solid];
n104 -> n112  [key=0, style=solid];
n104 -> n114  [key=2, style=dotted];
n106 -> n112  [key=0, style=solid];
n106 -> n9  [key=2, style=dotted];
n108 -> n112  [key=0, style=solid];
n108 -> n115  [key=2, style=dotted];
n110 -> n112  [key=0, style=solid];
n110 -> n116  [key=2, style=dotted];
n96 -> n112  [key=0, style=solid];
n96 -> n29  [key=2, style=dotted];
n98 -> n112  [key=0, style=solid];
n98 -> n29  [key=2, style=dotted];
n101 -> n100  [key=0, style=solid];
n101 -> n101  [key=1, style=dashed, color=darkseagreen4, label=e];
n103 -> n104  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n117  [key=2, style=dotted];
n112 -> n85  [key=0, style=bold, color=blue];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=1, style=dashed, color=darkseagreen4, label=int];
n118 -> d119  [key=0, style=solid, color=green];
n118 -> d120  [key=1, style=dashed, color=green, label=int];
n119 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n122  [key=2, style=dotted];
n120 -> n123  [key=2, style=dotted];
n120 -> n124  [key=2, style=dotted];
n121 -> n118  [key=0, style=bold, color=blue];
n125 -> n126  [key=0, style=solid];
n125 -> n128  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
n125 -> n130  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n125 -> n131  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
n125 -> d126  [key=0, style=solid, color=green];
n125 -> d128  [key=1, style=dashed, color=green, label="System.Action<T>"];
n125 -> d130  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<T>"];
n125 -> d131  [key=1, style=dashed, color=green, label="System.Action<T>"];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n128 -> n130  [key=0, style=solid];
n130 -> n131  [key=0, style=solid];
n130 -> n132  [key=0, style=solid];
n131 -> n130  [key=0, style=solid];
n131 -> n133  [key=2, style=dotted];
n127 -> n132  [key=0, style=solid];
n127 -> n29  [key=2, style=dotted];
n129 -> n132  [key=0, style=solid];
n129 -> n29  [key=2, style=dotted];
n132 -> n125  [key=0, style=bold, color=blue];
n134 -> n135  [key=0, style=solid];
n134 -> n137  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TSource, TResult>"];
n134 -> n139  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n134 -> n141  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<TResult> Pairwise"];
n134 -> d135  [key=0, style=solid, color=green];
n134 -> d137  [key=1, style=dashed, color=green, label="System.Func<TSource, TSource, TResult>"];
n134 -> d139  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
n135 -> n136  [key=0, style=solid];
n135 -> n137  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n141  [key=2, style=dotted];
n136 -> n140  [key=0, style=solid];
n136 -> n29  [key=2, style=dotted];
n138 -> n140  [key=0, style=solid];
n138 -> n29  [key=2, style=dotted];
n140 -> n134  [key=0, style=bold, color=blue];
n141 -> n142  [key=0, style=solid];
n141 -> n146  [key=0, style=bold, color=crimson];
n141 -> n149  [key=0, style=bold, color=crimson];
n141 -> n143  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TSource, TResult>"];
n141 -> n144  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n141 -> n134  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<TSource, TSource, TResult> resultSelector"];
n141 -> d142  [key=0, style=solid, color=green];
n141 -> d146  [key=0, style=bold, color=green];
n141 -> d149  [key=0, style=bold, color=green];
n141 -> d143  [key=1, style=dashed, color=green, label="System.Func<TSource, TSource, TResult>"];
n141 -> d144  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
n142 -> n143  [key=0, style=solid];
n142 -> n152  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n149 -> n9  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n152  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n68  [key=2, style=dotted];
n144 -> n147  [key=1, style=dashed, color=darkseagreen4, label=e];
n144 -> n148  [key=1, style=dashed, color=darkseagreen4, label=e];
n144 -> n149  [key=1, style=dashed, color=darkseagreen4, label=e];
n144 -> n150  [key=1, style=dashed, color=darkseagreen4, label=e];
n145 -> n146  [key=0, style=solid];
n145 -> n147  [key=0, style=solid];
n145 -> n69  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [key=1, style=dashed, color=darkseagreen4, label=previous];
n148 -> n149  [key=0, style=solid];
n148 -> n151  [key=0, style=solid];
n148 -> n69  [key=2, style=dotted];
n150 -> n148  [key=0, style=solid];
n151 -> n141  [key=0, style=bold, color=blue];
n153 -> n154  [key=0, style=solid];
n153 -> n156  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToDelimitedString"];
n153 -> d154  [key=0, style=solid, color=green];
n154 -> n155  [key=0, style=solid];
n154 -> n156  [key=2, style=dotted];
n155 -> n153  [key=0, style=bold, color=blue];
n156 -> n157  [key=0, style=solid];
n156 -> n159  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
n156 -> n153  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source"];
n156 -> n87  [key=3, color=darkorchid, style=bold, label="Parameter variable string delimiter"];
n156 -> n161  [key=3, color=darkorchid, style=bold, label="method methodReturn string ToDelimitedString"];
n156 -> d87  [key=3, color=green, style=bold, label="Parameter variable string delimiter"];
n156 -> d157  [key=0, style=solid, color=green];
n156 -> d159  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
n157 -> n158  [key=0, style=solid];
n157 -> n159  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [key=2, style=dotted];
n159 -> n162  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n158 -> n160  [key=0, style=solid];
n158 -> n29  [key=2, style=dotted];
n160 -> n156  [key=0, style=bold, color=blue];
n161 -> n166  [key=0, style=solid];
n161 -> n167  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>"];
n161 -> n168  [key=1, style=dashed, color=darkseagreen4, label=string];
n161 -> n171  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n161 -> n174  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>"];
n161 -> n156  [key=3, color=darkorchid, style=bold, label="Parameter variable string delimiter"];
n161 -> n159  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder> append"];
n161 -> d159  [key=3, color=green, style=bold, label="Parameter variable System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder> append"];
n161 -> d166  [key=0, style=solid, color=green];
n161 -> d167  [key=1, style=dashed, color=green, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>"];
n161 -> d168  [key=1, style=dashed, color=green, label=string];
n161 -> d171  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<T>"];
n161 -> d174  [key=1, style=dashed, color=green, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>"];
n162 -> n163  [key=0, style=solid];
n162 -> d163  [key=0, style=solid, color=green];
n163 -> n164  [key=0, style=solid];
n163 -> n165  [key=2, style=dotted];
n164 -> n162  [key=0, style=bold, color=blue];
n166 -> n167  [key=0, style=solid];
n166 -> n152  [key=2, style=dotted];
n167 -> n168  [key=0, style=solid];
n167 -> n152  [key=2, style=dotted];
n168 -> n169  [key=0, style=solid];
n168 -> n168  [key=1, style=dashed, color=darkseagreen4, label=string];
n168 -> n173  [key=1, style=dashed, color=darkseagreen4, label=string];
n171 -> n172  [key=0, style=solid];
n171 -> n175  [key=0, style=solid];
n171 -> n174  [key=1, style=dashed, color=darkseagreen4, label=value];
n174 -> n171  [key=0, style=solid];
n174 -> n9  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n169 -> n177  [key=2, style=dotted];
n169 -> n173  [key=1, style=dashed, color=darkseagreen4, label=sb];
n169 -> n174  [key=1, style=dashed, color=darkseagreen4, label=sb];
n169 -> n175  [key=1, style=dashed, color=darkseagreen4, label=sb];
n173 -> n174  [key=0, style=solid];
n173 -> n178  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n172  [key=1, style=dashed, color=darkseagreen4, label=i];
n170 -> n11  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n175 -> n176  [key=0, style=solid];
n175 -> n179  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n174  [key=0, style=solid];
n172 -> n172  [key=1, style=dashed, color=darkseagreen4, label=i];
n176 -> n161  [key=0, style=bold, color=blue];
n180 -> n181  [key=0, style=solid];
n180 -> d181  [key=0, style=solid, color=green];
n181 -> n182  [key=0, style=solid];
n181 -> n68  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n182 -> n69  [key=2, style=dotted];
n182 -> n184  [key=2, style=dotted];
n182 -> n185  [key=2, style=dotted];
n183 -> n180  [key=0, style=bold, color=blue];
n186 -> n187  [key=0, style=solid];
n186 -> n188  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n187 -> n188  [key=0, style=solid];
n187 -> n68  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n69  [key=2, style=dotted];
n188 -> n184  [key=2, style=dotted];
n188 -> n185  [key=2, style=dotted];
n189 -> n186  [key=0, style=bold, color=blue];
n190 -> n191  [key=0, style=solid];
n190 -> n194  [key=0, style=bold, color=crimson];
n191 -> n192  [key=0, style=solid];
n191 -> n68  [key=2, style=dotted];
n191 -> n193  [key=1, style=dashed, color=darkseagreen4, label=e];
n191 -> n194  [key=1, style=dashed, color=darkseagreen4, label=e];
n194 -> n193  [key=0, style=solid];
n192 -> n193  [key=0, style=solid];
n192 -> n195  [key=0, style=solid];
n192 -> n69  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n193 -> n196  [key=0, style=solid];
n193 -> n69  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n197  [key=2, style=dotted];
n196 -> n190  [key=0, style=bold, color=blue];
n198 -> n199  [key=0, style=solid];
n198 -> n202  [key=0, style=bold, color=crimson];
n199 -> n200  [key=0, style=solid];
n199 -> n68  [key=2, style=dotted];
n199 -> n201  [key=1, style=dashed, color=darkseagreen4, label=e];
n199 -> n202  [key=1, style=dashed, color=darkseagreen4, label=e];
n202 -> n201  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n203  [key=0, style=solid];
n200 -> n69  [key=2, style=dotted];
n201 -> n202  [key=0, style=solid];
n201 -> n203  [key=0, style=solid];
n201 -> n69  [key=2, style=dotted];
n203 -> n198  [key=0, style=bold, color=blue];
n204 -> n205  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n207  [key=2, style=dotted];
n205 -> n208  [key=2, style=dotted];
n206 -> n204  [key=0, style=bold, color=blue];
n209 -> n210  [key=0, style=solid];
n209 -> n211  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n209 -> n212  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<T>"];
n209 -> n209  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.Generic.IEnumerable<T> Materialize"];
n210 -> n211  [key=0, style=solid];
n210 -> n212  [key=0, style=solid];
n210 -> n207  [key=2, style=dotted];
n211 -> n213  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n214  [key=2, style=dotted];
n213 -> n209  [key=0, style=bold, color=blue];
n214 -> n215  [key=0, style=solid];
n215 -> n216  [key=0, style=solid];
n215 -> n208  [key=2, style=dotted];
n216 -> n214  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n218 -> n68  [key=2, style=dotted];
n219 -> n217  [key=0, style=bold, color=blue];
n220 -> n221  [key=0, style=solid];
n220 -> n217  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator"];
n221 -> n222  [key=0, style=solid];
n221 -> n217  [key=2, style=dotted];
n222 -> n220  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid, color=green];
d1 -> d3  [key=1, style=dashed, color=green, label=collection];
d1 -> d4  [key=1, style=dashed, color=green, label=collection];
d2 -> d3  [key=0, style=solid, color=green];
d2 -> d6  [key=0, style=solid, color=green];
d3 -> d4  [key=0, style=solid, color=green];
d3 -> d5  [key=0, style=solid, color=green];
d4 -> n7  [key=0, style=solid, color=green];
d4 -> n8  [key=2, style=dotted, color=green];
d4 -> n9  [key=2, style=dotted, color=green];
d5 -> n7  [key=0, style=solid, color=green];
d6 -> n7  [key=0, style=solid, color=green];
d6 -> n10  [key=2, style=dotted, color=green];
d11 -> d11  [key=3, color=green, style=bold, label="Local variable int iterations"];
d11 -> d12  [key=0, style=solid, color=green];
d11 -> d13  [key=1, style=dashed, color=green, label=iterations];
d11 -> d17  [key=1, style=dashed, color=green, label=iterations];
d170 -> d11  [key=3, color=green, style=bold, label="Local variable int i"];
d170 -> d171  [key=0, style=solid, color=green];
d170 -> d172  [key=1, style=dashed, color=green, label=i];
d12 -> d16  [key=1, style=dashed, color=green, label=element];
d12 -> d13  [key=0, style=solid, color=green];
d12 -> d17  [key=0, style=solid, color=green];
d13 -> d14  [key=0, style=solid, color=green];
d13 -> d17  [key=1, style=dashed, color=green, label=iterations];
d13 -> d13  [key=1, style=dashed, color=green, label=iterations];
d17 -> d18  [key=0, style=solid, color=green];
d17 -> n19  [key=0, style=solid, color=green];
d16 -> d12  [key=0, style=solid, color=green];
d14 -> d16  [key=0, style=solid, color=green];
d14 -> d15  [key=0, style=solid, color=green];
d15 -> n19  [key=0, style=solid, color=green];
d15 -> n9  [key=2, style=dotted, color=green];
d18 -> n19  [key=0, style=solid, color=green];
d18 -> n9  [key=2, style=dotted, color=green];
d21 -> d22  [key=0, style=solid, color=green];
d21 -> d23  [key=0, style=solid, color=green];
d22 -> n28  [key=0, style=solid, color=green];
d22 -> n29  [key=2, style=dotted, color=green];
d23 -> d24  [key=0, style=solid, color=green];
d23 -> d25  [key=0, style=solid, color=green];
d24 -> n28  [key=0, style=solid, color=green];
d24 -> n29  [key=2, style=dotted, color=green];
d25 -> d26  [key=0, style=solid, color=green];
d25 -> d27  [key=0, style=solid, color=green];
d26 -> n28  [key=0, style=solid, color=green];
d26 -> n29  [key=2, style=dotted, color=green];
d27 -> d27  [key=1, style=dashed, color=green, label=item1];
d27 -> n28  [key=0, style=solid, color=green];
d27 -> n9  [key=2, style=dotted, color=green];
d31 -> d32  [key=0, style=solid, color=green];
d31 -> d33  [key=0, style=solid, color=green];
d32 -> n34  [key=0, style=solid, color=green];
d32 -> n29  [key=2, style=dotted, color=green];
d33 -> n34  [key=0, style=solid, color=green];
d33 -> n35  [key=2, style=dotted, color=green];
d33 -> n36  [key=2, style=dotted, color=green];
d38 -> d39  [key=0, style=solid, color=green];
d38 -> d40  [key=0, style=solid, color=green];
d39 -> n41  [key=0, style=solid, color=green];
d39 -> n29  [key=2, style=dotted, color=green];
d40 -> n41  [key=0, style=solid, color=green];
d40 -> n42  [key=2, style=dotted, color=green];
d44 -> d45  [key=0, style=solid, color=green];
d44 -> d46  [key=0, style=solid, color=green];
d45 -> n47  [key=0, style=solid, color=green];
d45 -> n29  [key=2, style=dotted, color=green];
d46 -> n47  [key=0, style=solid, color=green];
d46 -> n35  [key=2, style=dotted, color=green];
d46 -> n36  [key=2, style=dotted, color=green];
d49 -> d50  [key=0, style=solid, color=green];
d49 -> d51  [key=0, style=solid, color=green];
d50 -> n56  [key=0, style=solid, color=green];
d50 -> n29  [key=2, style=dotted, color=green];
d51 -> d52  [key=0, style=solid, color=green];
d51 -> d53  [key=0, style=solid, color=green];
d52 -> n56  [key=0, style=solid, color=green];
d52 -> n57  [key=2, style=dotted, color=green];
d53 -> d54  [key=0, style=solid, color=green];
d53 -> d55  [key=0, style=solid, color=green];
d54 -> n56  [key=0, style=solid, color=green];
d54 -> n57  [key=2, style=dotted, color=green];
d55 -> n56  [key=0, style=solid, color=green];
d55 -> n58  [key=2, style=dotted, color=green];
d59 -> d59  [key=3, color=green, style=bold, label="Local variable int index"];
d59 -> d60  [key=0, style=solid, color=green];
d59 -> d62  [key=1, style=dashed, color=green, label=index];
d60 -> d61  [key=0, style=solid, color=green];
d60 -> d64  [key=1, style=dashed, color=green, label=endIndex];
d62 -> d63  [key=0, style=solid, color=green];
d62 -> d62  [key=1, style=dashed, color=green, label=index];
d62 -> d64  [key=0, style=solid, color=green];
d62 -> n69  [key=2, style=dotted, color=green];
d63 -> d62  [key=0, style=solid, color=green];
d66 -> d63  [key=0, style=solid, color=green];
d61 -> d63  [key=1, style=dashed, color=green, label=iter];
d61 -> d66  [key=1, style=dashed, color=green, label=iter];
d61 -> d62  [key=0, style=solid, color=green];
d61 -> n68  [key=2, style=dotted, color=green];
d61 -> d64  [key=1, style=dashed, color=green, label=iter];
d61 -> d65  [key=1, style=dashed, color=green, label=iter];
d64 -> d63  [key=0, style=solid, color=green];
d64 -> d64  [key=1, style=dashed, color=green, label=index];
d64 -> d65  [key=0, style=solid, color=green];
d64 -> n69  [key=2, style=dotted, color=green];
d65 -> d66  [key=0, style=solid, color=green];
d65 -> n67  [key=0, style=solid, color=green];
d65 -> n69  [key=2, style=dotted, color=green];
d71 -> n72  [key=0, style=solid, color=green];
d71 -> n73  [key=2, style=dotted, color=green];
d75 -> n76  [key=0, style=solid, color=green];
d75 -> n77  [key=2, style=dotted, color=green];
d75 -> n78  [key=1, style=dashed, color=green, label="lambda expression"];
d79 -> n80  [key=0, style=solid, color=green];
d79 -> n81  [key=2, style=dotted, color=green];
d83 -> n84  [key=0, style=solid, color=green];
d83 -> n85  [key=2, style=dotted, color=green];
d87 -> n88  [key=0, style=solid, color=green];
d87 -> n85  [key=2, style=dotted, color=green];
d90 -> n91  [key=0, style=solid, color=green];
d90 -> n85  [key=2, style=dotted, color=green];
d93 -> n94  [key=0, style=solid, color=green];
d93 -> n85  [key=2, style=dotted, color=green];
d95 -> d96  [key=0, style=solid, color=green];
d95 -> d97  [key=0, style=solid, color=green];
d96 -> n112  [key=0, style=solid, color=green];
d96 -> n29  [key=2, style=dotted, color=green];
d97 -> d98  [key=0, style=solid, color=green];
d97 -> d99  [key=0, style=solid, color=green];
d98 -> n112  [key=0, style=solid, color=green];
d98 -> n29  [key=2, style=dotted, color=green];
d99 -> d100  [key=0, style=solid, color=green];
d99 -> d101  [key=1, style=dashed, color=green, label=elements];
d99 -> d104  [key=1, style=dashed, color=green, label=elements];
d99 -> d106  [key=1, style=dashed, color=green, label=elements];
d99 -> d108  [key=1, style=dashed, color=green, label=elements];
d99 -> d110  [key=1, style=dashed, color=green, label=elements];
d100 -> d101  [key=0, style=solid, color=green];
d100 -> d102  [key=0, style=solid, color=green];
d100 -> n113  [key=2, style=dotted, color=green];
d100 -> n0  [key=2, style=dotted, color=green];
d101 -> d100  [key=0, style=solid, color=green];
d101 -> d101  [key=1, style=dashed, color=green, label=e];
d104 -> n112  [key=0, style=solid, color=green];
d104 -> n114  [key=2, style=dotted, color=green];
d106 -> n112  [key=0, style=solid, color=green];
d106 -> n9  [key=2, style=dotted, color=green];
d108 -> n112  [key=0, style=solid, color=green];
d108 -> n115  [key=2, style=dotted, color=green];
d110 -> n112  [key=0, style=solid, color=green];
d110 -> n116  [key=2, style=dotted, color=green];
d102 -> d103  [key=0, style=solid, color=green];
d102 -> d105  [key=0, style=solid, color=green];
d102 -> d107  [key=0, style=solid, color=green];
d102 -> d109  [key=0, style=solid, color=green];
d102 -> d111  [key=0, style=solid, color=green];
d103 -> d104  [key=0, style=solid, color=green];
d105 -> d106  [key=0, style=solid, color=green];
d107 -> d108  [key=0, style=solid, color=green];
d109 -> d110  [key=0, style=solid, color=green];
d111 -> n112  [key=0, style=solid, color=green];
d111 -> n117  [key=2, style=dotted, color=green];
d119 -> d120  [key=0, style=solid, color=green];
d120 -> n121  [key=0, style=solid, color=green];
d120 -> n122  [key=2, style=dotted, color=green];
d120 -> n123  [key=2, style=dotted, color=green];
d120 -> n124  [key=2, style=dotted, color=green];
d126 -> d127  [key=0, style=solid, color=green];
d126 -> d128  [key=0, style=solid, color=green];
d127 -> n132  [key=0, style=solid, color=green];
d127 -> n29  [key=2, style=dotted, color=green];
d128 -> d129  [key=0, style=solid, color=green];
d128 -> d130  [key=0, style=solid, color=green];
d129 -> n132  [key=0, style=solid, color=green];
d129 -> n29  [key=2, style=dotted, color=green];
d130 -> d131  [key=0, style=solid, color=green];
d130 -> n132  [key=0, style=solid, color=green];
d131 -> d130  [key=0, style=solid, color=green];
d131 -> n133  [key=2, style=dotted, color=green];
d135 -> d136  [key=0, style=solid, color=green];
d135 -> d137  [key=0, style=solid, color=green];
d136 -> n140  [key=0, style=solid, color=green];
d136 -> n29  [key=2, style=dotted, color=green];
d137 -> d138  [key=0, style=solid, color=green];
d137 -> d139  [key=0, style=solid, color=green];
d138 -> n140  [key=0, style=solid, color=green];
d138 -> n29  [key=2, style=dotted, color=green];
d139 -> n140  [key=0, style=solid, color=green];
d139 -> n141  [key=2, style=dotted, color=green];
d142 -> d143  [key=0, style=solid, color=green];
d142 -> n152  [key=2, style=dotted, color=green];
d143 -> d144  [key=0, style=solid, color=green];
d143 -> n152  [key=2, style=dotted, color=green];
d146 -> d147  [key=0, style=solid, color=green];
d145 -> d146  [key=0, style=solid, color=green];
d145 -> d147  [key=0, style=solid, color=green];
d145 -> n69  [key=2, style=dotted, color=green];
d147 -> d149  [key=1, style=dashed, color=green, label=previous];
d147 -> d148  [key=0, style=solid, color=green];
d149 -> d150  [key=0, style=solid, color=green];
d149 -> n9  [key=2, style=dotted, color=green];
d144 -> d149  [key=1, style=dashed, color=green, label=e];
d144 -> d145  [key=0, style=solid, color=green];
d144 -> n68  [key=2, style=dotted, color=green];
d144 -> d147  [key=1, style=dashed, color=green, label=e];
d144 -> d148  [key=1, style=dashed, color=green, label=e];
d144 -> d150  [key=1, style=dashed, color=green, label=e];
d148 -> d149  [key=0, style=solid, color=green];
d148 -> n151  [key=0, style=solid, color=green];
d148 -> n69  [key=2, style=dotted, color=green];
d150 -> d148  [key=0, style=solid, color=green];
d154 -> n155  [key=0, style=solid, color=green];
d154 -> n156  [key=2, style=dotted, color=green];
d157 -> d158  [key=0, style=solid, color=green];
d157 -> d159  [key=0, style=solid, color=green];
d158 -> n160  [key=0, style=solid, color=green];
d158 -> n29  [key=2, style=dotted, color=green];
d159 -> n160  [key=0, style=solid, color=green];
d159 -> n161  [key=2, style=dotted, color=green];
d159 -> n162  [key=1, style=dashed, color=green, label="lambda expression"];
d163 -> n164  [key=0, style=solid, color=green];
d163 -> n165  [key=2, style=dotted, color=green];
d166 -> d167  [key=0, style=solid, color=green];
d166 -> n152  [key=2, style=dotted, color=green];
d167 -> d168  [key=0, style=solid, color=green];
d167 -> n152  [key=2, style=dotted, color=green];
d168 -> d168  [key=1, style=dashed, color=green, label=string];
d168 -> d169  [key=0, style=solid, color=green];
d168 -> d173  [key=1, style=dashed, color=green, label=string];
d169 -> d174  [key=1, style=dashed, color=green, label=sb];
d169 -> d170  [key=0, style=solid, color=green];
d169 -> n177  [key=2, style=dotted, color=green];
d169 -> d173  [key=1, style=dashed, color=green, label=sb];
d169 -> d175  [key=1, style=dashed, color=green, label=sb];
d173 -> d174  [key=0, style=solid, color=green];
d173 -> n178  [key=2, style=dotted, color=green];
d171 -> d172  [key=0, style=solid, color=green];
d171 -> d175  [key=0, style=solid, color=green];
d171 -> d174  [key=1, style=dashed, color=green, label=value];
d174 -> d171  [key=0, style=solid, color=green];
d174 -> n9  [key=2, style=dotted, color=green];
d172 -> d174  [key=0, style=solid, color=green];
d172 -> d173  [key=0, style=solid, color=green];
d172 -> d172  [key=1, style=dashed, color=green, label=i];
d175 -> n176  [key=0, style=solid, color=green];
d175 -> n179  [key=2, style=dotted, color=green];
d181 -> d182  [key=0, style=solid, color=green];
d181 -> n68  [key=2, style=dotted, color=green];
d182 -> n183  [key=0, style=solid, color=green];
d182 -> n69  [key=2, style=dotted, color=green];
d182 -> n184  [key=2, style=dotted, color=green];
d182 -> n185  [key=2, style=dotted, color=green];
}
