digraph  {
n223 [label=int, span=""];
n224 [label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>", span=""];
n0 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="Entry CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="23-23"];
n1 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="var collection = source as ICollection<TSource>", span="26-26"];
n3 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="collection.Count != count", span="29-29"];
n4 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="throw errorSelector(collection.Count.CompareTo(count), count);", span="30-30"];
n5 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="return source;", span="31-31"];
n6 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="return ExpectingCountYieldingImpl(source, count, errorSelector);", span="34-34"];
n2 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="collection != null", span="27-27"];
n7 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="Exit CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="23-23"];
n10 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="Entry CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="37-37"];
n8 [cluster="int.CompareTo(int)", label="Entry int.CompareTo(int)", span="0-0"];
n9 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
n11 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="var iterations = 0", span="40-40"];
n16 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="yield return element;", span="48-48"];
n12 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label=source, span="41-41"];
n14 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="iterations > count", span="44-44"];
n15 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="throw errorSelector(1, count);", span="46-46"];
n17 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="iterations != count", span="50-50"];
n18 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="throw errorSelector(-1, count);", span="52-52"];
n13 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="iterations++", span="43-43"];
n19 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", label="Exit CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", span="37-37"];
n20 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="Entry CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="60-60"];
n21 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="first == null", span="62-62"];
n23 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="second == null", span="63-63"];
n25 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="resultSelector == null", span="64-64"];
n27 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="return from item1 in first\n                   from item2 in second // TODO buffer to avoid multiple enumerations\n                   select resultSelector(item1, item2);", span="66-68"];
n22 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="throw new ArgumentNullException(''first'');", span="62-62"];
n24 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="throw new ArgumentNullException(''second'');", span="63-63"];
n26 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="throw new ArgumentNullException(''resultSelector'');", span="64-64"];
n28 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", label="Exit CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", span="60-60"];
n29 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n30 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", label="Entry CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", span="74-74"];
n31 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", label="source == null", span="76-76"];
n33 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", label="return LinqEnumerable.Concat(LinqEnumerable.Repeat(value, 1), source);", span="78-78"];
n32 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", label="throw new ArgumentNullException(''source'');", span="76-76"];
n34 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", label="Exit CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", span="74-74"];
n35 [cluster="System.Linq.Enumerable.Repeat<TResult>(TResult, int)", label="Entry System.Linq.Enumerable.Repeat<TResult>(TResult, int)", span="0-0"];
n36 [cluster="System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Linq.Enumerable.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n37 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", span="84-84"];
n38 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", label="tail == null", span="86-86"];
n40 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", label="return tail.Prepend(head);", span="88-88"];
n39 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", label="throw new ArgumentNullException(''tail'');", span="86-86"];
n41 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", span="84-84"];
n42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Prepend<TSource>(TSource)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Prepend<TSource>(TSource)", span="74-74"];
n43 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", label="Entry CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", span="94-94"];
n44 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", label="head == null", span="96-96"];
n46 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", label="return LinqEnumerable.Concat(head, LinqEnumerable.Repeat(tail, 1));", span="98-98"];
n45 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", label="throw new ArgumentNullException(''head'');", span="96-96"];
n47 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", label="Exit CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", span="94-94"];
n48 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="Entry CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="105-105"];
n49 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="sequence == null", span="107-107"];
n51 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="startIndex < 0", span="108-108"];
n53 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="count < 0", span="109-109"];
n55 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="return ExcludeImpl(sequence, startIndex, count);", span="111-111"];
n50 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="throw new ArgumentNullException(''sequence'');", span="107-107"];
n52 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="throw new ArgumentOutOfRangeException(''startIndex'');", span="108-108"];
n54 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="throw new ArgumentOutOfRangeException(''count'');", span="109-109"];
n56 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="Exit CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="105-105"];
n58 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="Entry CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="114-114"];
n57 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n59 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="var index = -1", span="116-116"];
n63 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="yield return iter.Current;", span="122-122"];
n66 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="yield return iter.Current;", span="128-128"];
n60 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="var endIndex = startIndex + count", span="117-117"];
n61 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="var iter = sequence.GetEnumerator()", span="118-118"];
n62 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="iter.MoveNext() && ++index < startIndex", span="121-121"];
n64 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="++index < endIndex && iter.MoveNext()", span="124-124"];
n68 [cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0"];
n65 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="iter.MoveNext()", span="127-127"];
n69 [cluster="System.Collections.IEnumerator.MoveNext()", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
n67 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", label="Exit CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", span="114-114"];
n70 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="137-137"];
n71 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="return source.Index(0);", span="139-139"];
n72 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Exit CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="137-137"];
n73 [cluster="System.Collections.Generic.IEnumerable<TSource>.Index<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Index<TSource>(int)", span="147-147"];
n74 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", label="Entry CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", span="147-147"];
n75 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", label="return source.Select((item, index) => new KeyValuePair<int, TSource>(startIndex + index, item));", span="149-149"];
n79 [cluster="lambda expression", label="new KeyValuePair<int, TSource>(startIndex + index, item)", span="149-149"];
n76 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", label="Exit CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", span="147-147"];
n77 [cluster="Unk.Select", label="Entry Unk.Select", span=""];
n78 [cluster="lambda expression", label="Entry lambda expression", span="149-149"];
n80 [cluster="lambda expression", label="Exit lambda expression", span="149-149"];
n81 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
n82 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="156-156"];
n83 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", label="return FoldImpl(source, 1, folder, null, null, null);", span="158-158"];
n84 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", span="156-156"];
n85 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="Entry CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", span="188-188"];
n86 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", span="165-165"];
n87 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", label="return FoldImpl(source, 2, null, folder, null, null);", span="167-167"];
n88 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", span="165-165"];
n89 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", span="174-174"];
n90 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", label="return FoldImpl(source, 3, null, null, folder, null);", span="176-176"];
n91 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", span="174-174"];
n92 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", label="Entry CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", span="183-183"];
n93 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", label="return FoldImpl(source, 4, null, null, null, folder);", span="185-185"];
n94 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", label="Exit CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", span="183-183"];
n95 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="source == null", span="194-194"];
n97 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="count == 1 && folder1 == null\n                || count == 2 && folder2 == null\n                || count == 3 && folder3 == null\n                || count == 4 && folder4 == null", span="195-198"];
n99 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="var elements = new T[count]", span="203-203"];
n100 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="AssertCountImpl(source.Index(), count, OnFolderSourceSizeErrorSelector)", span="204-204"];
n102 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label=count, span="207-207"];
n104 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="return folder1(elements[0]);", span="209-209"];
n106 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="return folder2(elements[0], elements[1]);", span="210-210"];
n108 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="return folder3(elements[0], elements[1], elements[2]);", span="211-211"];
n110 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="return folder4(elements[0], elements[1], elements[2], elements[3]);", span="212-212"];
n96 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="throw new ArgumentNullException(''source'');", span="194-194"];
n98 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="throw new ArgumentNullException(''folder'');", span="200-200"];
n101 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="elements[e.Key] = e.Value", span="205-205"];
n113 [cluster="System.Collections.Generic.IEnumerable<TSource>.Index<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Index<TSource>()", span="137-137"];
n103 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label=1, span="209-209"];
n105 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label=2, span="210-210"];
n107 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label=3, span="211-211"];
n109 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label=4, span="212-212"];
n111 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="throw new NotSupportedException();", span="213-213"];
n112 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", label="Exit CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", span="188-188"];
n117 [cluster="System.NotSupportedException.NotSupportedException()", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
n114 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n115 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
n116 [cluster="System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", label="Entry System.Func<T1, T2, T3, T4, TResult>.Invoke(T1, T2, T3, T4)", span="0-0"];
n118 [cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", label="Entry CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", span="219-219"];
n119 [cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", label="var message = cmp < 0\n                        ? ''Sequence contains too few elements when exactly {0} {1} expected.''\n                        : ''Sequence contains too many elements when exactly {0} {1} expected.''", span="221-223"];
n120 [cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", label="return new Exception(string.Format(message, count.ToString(''N0''), count == 1 ? ''was'' : ''were''));", span="224-224"];
n121 [cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", label="Exit CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", span="219-219"];
n122 [cluster="System.Exception.Exception(string)", label="Entry System.Exception.Exception(string)", span="0-0"];
n123 [cluster="int.ToString(string)", label="Entry int.ToString(string)", span="0-0"];
n124 [cluster="string.Format(string, object, object)", label="Entry string.Format(string, object, object)", span="0-0"];
n125 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label="Entry CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="231-231"];
n126 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label="source == null", span="233-233"];
n128 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label="action == null", span="234-234"];
n130 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label=source, span="236-236"];
n131 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label="action(element)", span="238-238"];
n127 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label="throw new ArgumentNullException(''source'');", span="233-233"];
n129 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label="throw new ArgumentNullException(''action'');", span="234-234"];
n132 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", label="Exit CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", span="231-231"];
n133 [cluster="System.Action<T>.Invoke(T)", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
n134 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Entry CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="248-248"];
n135 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="source == null", span="250-250"];
n137 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="resultSelector == null", span="251-251"];
n139 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="return PairwiseImpl(source, resultSelector);", span="253-253"];
n136 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="throw new ArgumentNullException(''source'');", span="250-250"];
n138 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="throw new ArgumentNullException(''resultSelector'');", span="251-251"];
n140 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Exit CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="248-248"];
n141 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Entry CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="256-256"];
n142 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Debug.Assert(source != null)", span="258-258"];
n146 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="yield break;", span="264-264"];
n149 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="yield return resultSelector(previous, e.Current);", span="269-269"];
n143 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Debug.Assert(resultSelector != null)", span="259-259"];
n144 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="var e = source.GetEnumerator()", span="261-261"];
n152 [cluster="System.Diagnostics.Debug.Assert(bool)", label="Entry System.Diagnostics.Debug.Assert(bool)", span="0-0"];
n145 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="!e.MoveNext()", span="263-263"];
n147 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="var previous = e.Current", span="266-266"];
n148 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="e.MoveNext()", span="267-267"];
n150 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="previous = e.Current", span="270-270"];
n151 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", label="Exit CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="256-256"];
n153 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="279-279"];
n154 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="return ToDelimitedString(source, null);", span="281-281"];
n155 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Exit CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="279-279"];
n156 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", label="Entry CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", span="288-288"];
n157 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", label="source == null", span="290-290"];
n159 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", label="return ToDelimitedStringImpl(source, delimiter, (sb, e) => sb.Append(e));", span="292-292"];
n158 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", label="throw new ArgumentNullException(''source'');", span="290-290"];
n160 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", label="Exit CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", span="288-288"];
n161 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="Entry CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", span="295-295"];
n162 [cluster="lambda expression", label="Entry lambda expression", span="292-292"];
n163 [cluster="lambda expression", label="sb.Append(e)", span="292-292"];
n164 [cluster="lambda expression", label="Exit lambda expression", span="292-292"];
n165 [cluster="System.Text.StringBuilder.Append(object)", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
n166 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="Debug.Assert(source != null)", span="297-297"];
n167 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="Debug.Assert(append != null)", span="298-298"];
n168 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="delimiter = delimiter ?? CultureInfo.CurrentCulture.TextInfo.ListSeparator", span="300-300"];
n171 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label=source, span="304-304"];
n174 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="append(sb, value)", span="307-307"];
n169 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="var sb = new StringBuilder()", span="301-301"];
n173 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="sb.Append(delimiter)", span="306-306"];
n170 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="var i = 0", span="302-302"];
n177 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n175 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="return sb.ToString();", span="310-310"];
n172 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="i++ > 0", span="306-306"];
n178 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n176 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", label="Exit CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", span="295-295"];
n179 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n180 [cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", span="318-318"];
n181 [cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", label="var e = source.GetEnumerator()", span="320-320"];
n182 [cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", label="return e.MoveNext()\n                    ? Maybe.Just(e.Current)\n                    : Maybe.Nothing<T>();", span="322-324"];
n183 [cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", span="318-318"];
n184 [cluster="CSharpx.Maybe.Just<T>(T)", label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80"];
n185 [cluster="CSharpx.Maybe.Nothing<T>()", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
n186 [cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", span="331-331"];
n187 [cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", label="var e = source.GetEnumerator()", span="333-333"];
n188 [cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", label="return e.MoveNext()\n                    ? Maybe.Just(source)\n                    : Maybe.Nothing<IEnumerable<T>>();", span="335-337"];
n189 [cluster="CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.ToMaybe<T>(System.Collections.Generic.IEnumerable<T>)", span="331-331"];
n190 [cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", span="346-346"];
n191 [cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", label="var e = source.GetEnumerator()", span="348-348"];
n194 [cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", label="yield return e.Current;", span="352-352"];
n192 [cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", label="e.MoveNext()", span="350-350"];
n193 [cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", label="e.MoveNext()", span="351-351"];
n195 [cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", label="throw new ArgumentException(''Source sequence cannot be empty.'', ''source'');", span="354-354"];
n196 [cluster="CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.Tail<T>(System.Collections.Generic.IEnumerable<T>)", span="346-346"];
n197 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n198 [cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", span="361-361"];
n199 [cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", label="var e = source.GetEnumerator()", span="363-363"];
n202 [cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", label="yield return e.Current;", span="367-367"];
n200 [cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", label="e.MoveNext()", span="365-365"];
n201 [cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", label="e.MoveNext()", span="366-366"];
n203 [cluster="CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.TailNoFail<T>(System.Collections.Generic.IEnumerable<T>)", span="361-361"];
n204 [cluster="CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)", span="374-374"];
n205 [cluster="CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)", label="return source.GetType().IsArray ? source : source.ToArray();", span="376-376"];
n206 [cluster="CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.Memorize<T>(System.Collections.Generic.IEnumerable<T>)", span="374-374"];
n207 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n208 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n209 [cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", span="382-382"];
n210 [cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", label="source is MaterializedEnumerable<T> || source.GetType().IsArray", span="384-384"];
n211 [cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", label="return source;", span="386-386"];
n212 [cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", label="return new MaterializedEnumerable<T>(source);", span="388-388"];
n213 [cluster="CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.Materialize<T>(System.Collections.Generic.IEnumerable<T>)", span="382-382"];
n214 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)", label="Entry CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)", span="395-395"];
n215 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)", label="inner = enumerable as ICollection<T> ?? enumerable.ToArray()", span="397-397"];
n216 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)", label="Exit CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.MaterializedEnumerable(System.Collections.Generic.IEnumerable<T>)", span="395-395"];
n217 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()", label="Entry CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()", span="400-400"];
n218 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()", label="return inner.GetEnumerator();", span="402-402"];
n219 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()", label="Exit CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.GetEnumerator()", span="400-400"];
n220 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", label="Entry CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="405-405"];
n221 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", label="return GetEnumerator();", span="407-407"];
n222 [cluster="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", label="Exit CSharpx.EnumerableExtensions.MaterializedEnumerable<T>.System.Collections.IEnumerable.GetEnumerator()", span="405-405"];
d1 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: var collection = source as ICollection<TSource>", span="26-26"];
d2 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: collection != null", span="27-27"];
d3 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: collection.Count != count", span="29-29"];
d4 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: throw errorSelector(collection.Count.CompareTo(count), count);", span="30-30"];
d5 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: return source;", span="31-31"];
d6 [cluster="CSharpx.EnumerableExtensions.AssertCountImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: return ExpectingCountYieldingImpl(source, count, errorSelector);", span="34-34"];
d11 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: var iterations = 0", span="40-40"];
d170 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="0: var i = 0", span="302-302"];
d12 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: source", span="41-41"];
d13 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: iterations++", span="43-43"];
d17 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: iterations != count", span="50-50"];
d16 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: yield return element;", span="48-48"];
d14 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: iterations > count", span="44-44"];
d15 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: throw errorSelector(1, count);", span="46-46"];
d18 [cluster="CSharpx.EnumerableExtensions.ExpectingCountYieldingImpl<TSource>(System.Collections.Generic.IEnumerable<TSource>, int, System.Func<int, int, System.Exception>)", color=green, community=0, label="0: throw errorSelector(-1, count);", span="52-52"];
d21 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0, label="1: first == null", span="62-62"];
d22 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0, label="1: throw new ArgumentNullException(''first'');", span="62-62"];
d23 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0, label="0: second == null", span="63-63"];
d24 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0, label="1: throw new ArgumentNullException(''second'');", span="63-63"];
d25 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0, label="0: resultSelector == null", span="64-64"];
d26 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0, label="0: throw new ArgumentNullException(''resultSelector'');", span="64-64"];
d27 [cluster="CSharpx.EnumerableExtensions.Cartesian<TFirst, TSecond, TResult>(System.Collections.Generic.IEnumerable<TFirst>, System.Collections.Generic.IEnumerable<TSecond>, System.Func<TFirst, TSecond, TResult>)", color=green, community=0, label="0: return from item1 in first\n                   from item2 in second // TODO buffer to avoid multiple enumerations\n                   select resultSelector(item1, item2);", span="66-68"];
d31 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", color=green, community=0, label="1: source == null", span="76-76"];
d32 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", color=green, community=0, label="1: throw new ArgumentNullException(''source'');", span="76-76"];
d33 [cluster="CSharpx.EnumerableExtensions.Prepend<TSource>(System.Collections.Generic.IEnumerable<TSource>, TSource)", color=green, community=0, label="1: return LinqEnumerable.Concat(LinqEnumerable.Repeat(value, 1), source);", span="78-78"];
d38 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, label="1: tail == null", span="86-86"];
d39 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, label="1: throw new ArgumentNullException(''tail'');", span="86-86"];
d40 [cluster="CSharpx.EnumerableExtensions.Concat<T>(T, System.Collections.Generic.IEnumerable<T>)", color=green, community=0, label="1: return tail.Prepend(head);", span="88-88"];
d44 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0, label="0: head == null", span="96-96"];
d45 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0, label="1: throw new ArgumentNullException(''head'');", span="96-96"];
d46 [cluster="CSharpx.EnumerableExtensions.Concat<T>(System.Collections.Generic.IEnumerable<T>, T)", color=green, community=0, label="0: return LinqEnumerable.Concat(head, LinqEnumerable.Repeat(tail, 1));", span="98-98"];
d49 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: sequence == null", span="107-107"];
d50 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: throw new ArgumentNullException(''sequence'');", span="107-107"];
d51 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: startIndex < 0", span="108-108"];
d52 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: throw new ArgumentOutOfRangeException(''startIndex'');", span="108-108"];
d53 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: count < 0", span="109-109"];
d54 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: throw new ArgumentOutOfRangeException(''count'');", span="109-109"];
d55 [cluster="CSharpx.EnumerableExtensions.Exclude<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: return ExcludeImpl(sequence, startIndex, count);", span="111-111"];
d59 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: var index = -1", span="116-116"];
d60 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: var endIndex = startIndex + count", span="117-117"];
d62 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: iter.MoveNext() && ++index < startIndex", span="121-121"];
d63 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: yield return iter.Current;", span="122-122"];
d66 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: yield return iter.Current;", span="128-128"];
d61 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: var iter = sequence.GetEnumerator()", span="118-118"];
d64 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: ++index < endIndex && iter.MoveNext()", span="124-124"];
d65 [cluster="CSharpx.EnumerableExtensions.ExcludeImpl<T>(System.Collections.Generic.IEnumerable<T>, int, int)", color=green, community=0, label="1: iter.MoveNext()", span="127-127"];
d71 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>)", color=green, community=0, label="0: return source.Index(0);", span="139-139"];
d75 [cluster="CSharpx.EnumerableExtensions.Index<TSource>(System.Collections.Generic.IEnumerable<TSource>, int)", color=green, community=0, label="1: return source.Select((item, index) => new KeyValuePair<int, TSource>(startIndex + index, item));", span="149-149"];
d79 [cluster="lambda expression", color=green, community=0, label="1: new KeyValuePair<int, TSource>(startIndex + index, item)", span="149-149"];
d83 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, TResult>)", color=green, community=0, label="1: return FoldImpl(source, 1, folder, null, null, null);", span="158-158"];
d87 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, TResult>)", color=green, community=0, label="1: return FoldImpl(source, 2, null, folder, null, null);", span="167-167"];
d90 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, TResult>)", color=green, community=0, label="1: return FoldImpl(source, 3, null, null, folder, null);", span="176-176"];
d93 [cluster="CSharpx.EnumerableExtensions.Fold<T, TResult>(System.Collections.Generic.IEnumerable<T>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: return FoldImpl(source, 4, null, null, null, folder);", span="185-185"];
d95 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: source == null", span="194-194"];
d96 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: throw new ArgumentNullException(''source'');", span="194-194"];
d97 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: count == 1 && folder1 == null\n                || count == 2 && folder2 == null\n                || count == 3 && folder3 == null\n                || count == 4 && folder4 == null", span="195-198"];
d98 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: throw new ArgumentNullException(''folder'');", span="200-200"];
d99 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="0: var elements = new T[count]", span="203-203"];
d100 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="0: AssertCountImpl(source.Index(), count, OnFolderSourceSizeErrorSelector)", span="204-204"];
d101 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="0: elements[e.Key] = e.Value", span="205-205"];
d104 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: return folder1(elements[0]);", span="209-209"];
d106 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: return folder2(elements[0], elements[1]);", span="210-210"];
d108 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: return folder3(elements[0], elements[1], elements[2]);", span="211-211"];
d110 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: return folder4(elements[0], elements[1], elements[2], elements[3]);", span="212-212"];
d102 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: count", span="207-207"];
d103 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1, label="1: 1", span="209-209"];
d105 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1, label="1: 2", span="210-210"];
d107 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1, label="1: 3", span="211-211"];
d109 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=1, label="1: 4", span="212-212"];
d111 [cluster="CSharpx.EnumerableExtensions.FoldImpl<T, TResult>(System.Collections.Generic.IEnumerable<T>, int, System.Func<T, TResult>, System.Func<T, T, TResult>, System.Func<T, T, T, TResult>, System.Func<T, T, T, T, TResult>)", color=green, community=0, label="1: throw new NotSupportedException();", span="213-213"];
d119 [cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", color=green, community=0, label="1: var message = cmp < 0\n                        ? ''Sequence contains too few elements when exactly {0} {1} expected.''\n                        : ''Sequence contains too many elements when exactly {0} {1} expected.''", span="221-223"];
d120 [cluster="CSharpx.EnumerableExtensions.OnFolderSourceSizeError(int, int)", color=green, community=0, label="0: return new Exception(string.Format(message, count.ToString(''N0''), count == 1 ? ''was'' : ''were''));", span="224-224"];
d126 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0, label="1: source == null", span="233-233"];
d127 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0, label="1: throw new ArgumentNullException(''source'');", span="233-233"];
d128 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0, label="1: action == null", span="234-234"];
d129 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0, label="1: throw new ArgumentNullException(''action'');", span="234-234"];
d130 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0, label="1: source", span="236-236"];
d131 [cluster="CSharpx.EnumerableExtensions.ForEach<T>(System.Collections.Generic.IEnumerable<T>, System.Action<T>)", color=green, community=0, label="1: action(element)", span="238-238"];
d135 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: source == null", span="250-250"];
d136 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: throw new ArgumentNullException(''source'');", span="250-250"];
d137 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="1: resultSelector == null", span="251-251"];
d138 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: throw new ArgumentNullException(''resultSelector'');", span="251-251"];
d139 [cluster="CSharpx.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: return PairwiseImpl(source, resultSelector);", span="253-253"];
d142 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: Debug.Assert(source != null)", span="258-258"];
d143 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: Debug.Assert(resultSelector != null)", span="259-259"];
d146 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: yield break;", span="264-264"];
d145 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: !e.MoveNext()", span="263-263"];
d147 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: var previous = e.Current", span="266-266"];
d149 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: yield return resultSelector(previous, e.Current);", span="269-269"];
d144 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: var e = source.GetEnumerator()", span="261-261"];
d148 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: e.MoveNext()", span="267-267"];
d150 [cluster="CSharpx.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", color=green, community=0, label="0: previous = e.Current", span="270-270"];
d154 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>)", color=green, community=0, label="1: return ToDelimitedString(source, null);", span="281-281"];
d157 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", color=green, community=0, label="1: source == null", span="290-290"];
d158 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", color=green, community=0, label="1: throw new ArgumentNullException(''source'');", span="290-290"];
d159 [cluster="CSharpx.EnumerableExtensions.ToDelimitedString<TSource>(System.Collections.Generic.IEnumerable<TSource>, string)", color=green, community=0, label="0: return ToDelimitedStringImpl(source, delimiter, (sb, e) => sb.Append(e));", span="292-292"];
d163 [cluster="lambda expression", color=green, community=0, label="0: sb.Append(e)", span="292-292"];
d166 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="0: Debug.Assert(source != null)", span="297-297"];
d167 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="1: Debug.Assert(append != null)", span="298-298"];
d168 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="1: delimiter = delimiter ?? CultureInfo.CurrentCulture.TextInfo.ListSeparator", span="300-300"];
d169 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="0: var sb = new StringBuilder()", span="301-301"];
d173 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="1: sb.Append(delimiter)", span="306-306"];
d171 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="1: source", span="304-304"];
d174 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="0: append(sb, value)", span="307-307"];
d172 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="1: i++ > 0", span="306-306"];
d175 [cluster="CSharpx.EnumerableExtensions.ToDelimitedStringImpl<T>(System.Collections.Generic.IEnumerable<T>, string, System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>)", color=green, community=0, label="0: return sb.ToString();", span="310-310"];
d181 [cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, label="1: var e = source.GetEnumerator()", span="320-320"];
d182 [cluster="CSharpx.EnumerableExtensions.TryHead<T>(System.Collections.Generic.IEnumerable<T>)", color=green, community=0, label="1: return e.MoveNext()\n                    ? Maybe.Just(e.Current)\n                    : Maybe.Nothing<T>();", span="322-324"];
n223 -> n79  [color=darkseagreen4, key=1, label=int, style=dashed];
n223 -> d79  [color=green, key=1, label=int, style=dashed];
n224 -> n215  [color=darkseagreen4, key=1, label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>", style=dashed];
n224 -> n218  [color=darkseagreen4, key=1, label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>", style=dashed];
n224 -> n221  [color=darkseagreen4, key=1, label="CSharpx.EnumerableExtensions.MaterializedEnumerable<T>", style=dashed];
n0 -> n1  [key=0, style=solid];
n0 -> n3  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n4  [color=darkseagreen4, key=1, label=int, style=dashed];
n0 -> n5  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n0 -> n6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n0 -> n0  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl", style=bold];
n0 -> n10  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<TSource> AssertCountImpl", style=bold];
n0 -> n70  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source", style=bold];
n0 -> d1  [color=green, key=0, style=solid];
n0 -> d3  [color=green, key=1, label=int, style=dashed];
n0 -> d4  [color=green, key=1, label=int, style=dashed];
n0 -> d5  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n0 -> d6  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [color=darkseagreen4, key=1, label=collection, style=dashed];
n1 -> n4  [color=darkseagreen4, key=1, label=collection, style=dashed];
n3 -> n4  [key=0, style=solid];
n3 -> n5  [key=0, style=solid];
n4 -> n7  [key=0, style=solid];
n4 -> n8  [key=2, style=dotted];
n4 -> n9  [key=2, style=dotted];
n5 -> n7  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n10  [key=2, style=dotted];
n2 -> n3  [key=0, style=solid];
n2 -> n6  [key=0, style=solid];
n7 -> n0  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n16  [color=crimson, key=0, style=bold];
n10 -> n12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n10 -> n14  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n15  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n17  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n18  [color=darkseagreen4, key=1, label=int, style=dashed];
n10 -> n0  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source", style=bold];
n10 -> d11  [color=green, key=0, style=solid];
n10 -> d16  [color=green, key=0, style=bold];
n10 -> d12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n10 -> d14  [color=green, key=1, label=int, style=dashed];
n10 -> d15  [color=green, key=1, label=int, style=dashed];
n10 -> d17  [color=green, key=1, label=int, style=dashed];
n10 -> d18  [color=green, key=1, label=int, style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [color=darkseagreen4, key=1, label=iterations, style=dashed];
n11 -> n17  [color=darkseagreen4, key=1, label=iterations, style=dashed];
n11 -> n11  [color=darkorchid, key=3, label="Local variable int iterations", style=bold];
n16 -> n12  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n17  [key=0, style=solid];
n12 -> n16  [color=darkseagreen4, key=1, label=element, style=dashed];
n14 -> n15  [key=0, style=solid];
n14 -> n16  [key=0, style=solid];
n15 -> n19  [key=0, style=solid];
n15 -> n9  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n19  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n18 -> n9  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n13 -> n13  [color=darkseagreen4, key=1, label=iterations, style=dashed];
n13 -> n17  [color=darkseagreen4, key=1, label=iterations, style=dashed];
n19 -> n10  [color=blue, key=0, style=bold];
n20 -> n21  [key=0, style=solid];
n20 -> n23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSecond>", style=dashed];
n20 -> n25  [color=darkseagreen4, key=1, label="System.Func<TFirst, TSecond, TResult>", style=dashed];
n20 -> n27  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TFirst>", style=dashed];
n20 -> d21  [color=green, key=0, style=solid];
n20 -> d23  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSecond>", style=dashed];
n20 -> d25  [color=green, key=1, label="System.Func<TFirst, TSecond, TResult>", style=dashed];
n20 -> d27  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TFirst>", style=dashed];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=0, style=solid];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [key=0, style=solid];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n27 -> n28  [key=0, style=solid];
n27 -> n9  [key=2, style=dotted];
n27 -> n27  [color=darkseagreen4, key=1, label=item1, style=dashed];
n22 -> n28  [key=0, style=solid];
n22 -> n29  [key=2, style=dotted];
n24 -> n28  [key=0, style=solid];
n24 -> n29  [key=2, style=dotted];
n26 -> n28  [key=0, style=solid];
n26 -> n29  [key=2, style=dotted];
n28 -> n20  [color=blue, key=0, style=bold];
n30 -> n31  [key=0, style=solid];
n30 -> n33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n30 -> n37  [color=darkorchid, key=3, label="Parameter variable TSource value", style=bold];
n30 -> d31  [color=green, key=0, style=solid];
n30 -> d33  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n33  [key=0, style=solid];
n33 -> n34  [key=0, style=solid];
n33 -> n35  [key=2, style=dotted];
n33 -> n36  [key=2, style=dotted];
n32 -> n34  [key=0, style=solid];
n32 -> n29  [key=2, style=dotted];
n34 -> n30  [color=blue, key=0, style=bold];
n37 -> n38  [key=0, style=solid];
n37 -> n40  [color=darkseagreen4, key=1, label=T, style=dashed];
n37 -> n30  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<T> Concat", style=bold];
n37 -> d38  [color=green, key=0, style=solid];
n37 -> d40  [color=green, key=1, label=T, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=2, style=dotted];
n39 -> n41  [key=0, style=solid];
n39 -> n29  [key=2, style=dotted];
n41 -> n37  [color=blue, key=0, style=bold];
n43 -> n44  [key=0, style=solid];
n43 -> n46  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n43 -> d44  [color=green, key=0, style=solid];
n43 -> d46  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n46 -> n35  [key=2, style=dotted];
n46 -> n36  [key=2, style=dotted];
n45 -> n47  [key=0, style=solid];
n45 -> n29  [key=2, style=dotted];
n47 -> n43  [color=blue, key=0, style=bold];
n48 -> n49  [key=0, style=solid];
n48 -> n51  [color=darkseagreen4, key=1, label=int, style=dashed];
n48 -> n53  [color=darkseagreen4, key=1, label=int, style=dashed];
n48 -> n55  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n48 -> n58  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<T> Exclude", style=bold];
n48 -> d49  [color=green, key=0, style=solid];
n48 -> d51  [color=green, key=1, label=int, style=dashed];
n48 -> d53  [color=green, key=1, label=int, style=dashed];
n48 -> d55  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n51  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n55  [key=0, style=solid];
n55 -> n56  [key=0, style=solid];
n55 -> n58  [key=2, style=dotted];
n50 -> n56  [key=0, style=solid];
n50 -> n29  [key=2, style=dotted];
n52 -> n56  [key=0, style=solid];
n52 -> n57  [key=2, style=dotted];
n54 -> n56  [key=0, style=solid];
n54 -> n57  [key=2, style=dotted];
n56 -> n48  [color=blue, key=0, style=bold];
n58 -> n59  [key=0, style=solid];
n58 -> n63  [color=crimson, key=0, style=bold];
n58 -> n66  [color=crimson, key=0, style=bold];
n58 -> n60  [color=darkseagreen4, key=1, label=int, style=dashed];
n58 -> n61  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n58 -> n62  [color=darkseagreen4, key=1, label=int, style=dashed];
n58 -> n48  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
n58 -> d59  [color=green, key=0, style=solid];
n58 -> d63  [color=green, key=0, style=bold];
n58 -> d66  [color=green, key=0, style=bold];
n58 -> d60  [color=green, key=1, label=int, style=dashed];
n58 -> d61  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n58 -> d62  [color=green, key=1, label=int, style=dashed];
n59 -> n60  [key=0, style=solid];
n59 -> n62  [color=darkseagreen4, key=1, label=index, style=dashed];
n59 -> n59  [color=darkorchid, key=3, label="Local variable int index", style=bold];
n63 -> n62  [key=0, style=solid];
n66 -> n63  [key=0, style=solid];
n60 -> n61  [key=0, style=solid];
n60 -> n64  [color=darkseagreen4, key=1, label=endIndex, style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n68  [key=2, style=dotted];
n61 -> n63  [color=darkseagreen4, key=1, label=iter, style=dashed];
n61 -> n64  [color=darkseagreen4, key=1, label=iter, style=dashed];
n61 -> n65  [color=darkseagreen4, key=1, label=iter, style=dashed];
n61 -> n66  [color=darkseagreen4, key=1, label=iter, style=dashed];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=0, style=solid];
n62 -> n69  [key=2, style=dotted];
n62 -> n62  [color=darkseagreen4, key=1, label=index, style=dashed];
n64 -> n63  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n69  [key=2, style=dotted];
n64 -> n64  [color=darkseagreen4, key=1, label=index, style=dashed];
n65 -> n66  [key=0, style=solid];
n65 -> n67  [key=0, style=solid];
n65 -> n69  [key=2, style=dotted];
n67 -> n58  [color=blue, key=0, style=bold];
n70 -> n71  [key=0, style=solid];
n70 -> n73  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<int, TSource>> Index", style=bold];
n70 -> d71  [color=green, key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n73  [key=2, style=dotted];
n72 -> n70  [color=blue, key=0, style=bold];
n73 -> n11  [color=darkorchid, key=3, label="Parameter variable int startIndex", style=bold];
n73 -> d11  [color=green, key=3, label="Parameter variable int startIndex", style=bold];
n74 -> n75  [key=0, style=solid];
n74 -> n79  [color=darkseagreen4, key=1, label=int, style=dashed];
n74 -> d75  [color=green, key=0, style=solid];
n74 -> d79  [color=green, key=1, label=int, style=dashed];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [key=2, style=dotted];
n75 -> n78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n79 -> n80  [key=0, style=solid];
n79 -> n81  [key=2, style=dotted];
n76 -> n74  [color=blue, key=0, style=bold];
n78 -> n79  [key=0, style=solid];
n78 -> d79  [color=green, key=0, style=solid];
n80 -> n78  [color=blue, key=0, style=bold];
n82 -> n83  [key=0, style=solid];
n82 -> n85  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
n82 -> d83  [color=green, key=0, style=solid];
n83 -> n84  [key=0, style=solid];
n83 -> n85  [key=2, style=dotted];
n84 -> n82  [color=blue, key=0, style=bold];
n85 -> n95  [key=0, style=solid];
n85 -> n97  [color=darkseagreen4, key=1, label=int, style=dashed];
n85 -> n99  [color=darkseagreen4, key=1, label=int, style=dashed];
n85 -> n100  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n85 -> n102  [color=darkseagreen4, key=1, label=int, style=dashed];
n85 -> n104  [color=darkseagreen4, key=1, label="System.Func<T, TResult>", style=dashed];
n85 -> n106  [color=darkseagreen4, key=1, label="System.Func<T, T, TResult>", style=dashed];
n85 -> n108  [color=darkseagreen4, key=1, label="System.Func<T, T, T, TResult>", style=dashed];
n85 -> n110  [color=darkseagreen4, key=1, label="System.Func<T, T, T, T, TResult>", style=dashed];
n85 -> n82  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
n85 -> n86  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
n85 -> n89  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
n85 -> n92  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<T> source", style=bold];
n85 -> n83  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
n85 -> n87  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
n85 -> n90  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
n85 -> n93  [color=darkorchid, key=3, label="Parameter variable int count", style=bold];
n85 -> d83  [color=green, key=3, label="Parameter variable int count", style=bold];
n85 -> d87  [color=green, key=3, label="Parameter variable int count", style=bold];
n85 -> d90  [color=green, key=3, label="Parameter variable int count", style=bold];
n85 -> d93  [color=green, key=3, label="Parameter variable int count", style=bold];
n85 -> d95  [color=green, key=0, style=solid];
n85 -> d97  [color=green, key=1, label=int, style=dashed];
n85 -> d99  [color=green, key=1, label=int, style=dashed];
n85 -> d100  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n85 -> d102  [color=green, key=1, label=int, style=dashed];
n85 -> d104  [color=green, key=1, label="System.Func<T, TResult>", style=dashed];
n85 -> d106  [color=green, key=1, label="System.Func<T, T, TResult>", style=dashed];
n85 -> d108  [color=green, key=1, label="System.Func<T, T, T, TResult>", style=dashed];
n85 -> d110  [color=green, key=1, label="System.Func<T, T, T, T, TResult>", style=dashed];
n86 -> n87  [key=0, style=solid];
n86 -> n85  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
n86 -> d87  [color=green, key=0, style=solid];
n87 -> n88  [key=0, style=solid];
n87 -> n85  [key=2, style=dotted];
n88 -> n86  [color=blue, key=0, style=bold];
n89 -> n90  [key=0, style=solid];
n89 -> n85  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
n89 -> d90  [color=green, key=0, style=solid];
n90 -> n91  [key=0, style=solid];
n90 -> n85  [key=2, style=dotted];
n91 -> n89  [color=blue, key=0, style=bold];
n92 -> n93  [key=0, style=solid];
n92 -> n85  [color=darkorchid, key=3, label="method methodReturn TResult Fold", style=bold];
n92 -> d93  [color=green, key=0, style=solid];
n93 -> n94  [key=0, style=solid];
n93 -> n85  [key=2, style=dotted];
n94 -> n92  [color=blue, key=0, style=bold];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=0, style=solid];
n97 -> n98  [key=0, style=solid];
n97 -> n99  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n99 -> n101  [color=darkseagreen4, key=1, label=elements, style=dashed];
n99 -> n104  [color=darkseagreen4, key=1, label=elements, style=dashed];
n99 -> n106  [color=darkseagreen4, key=1, label=elements, style=dashed];
n99 -> n108  [color=darkseagreen4, key=1, label=elements, style=dashed];
n99 -> n110  [color=darkseagreen4, key=1, label=elements, style=dashed];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=0, style=solid];
n100 -> n113  [key=2, style=dotted];
n100 -> n0  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n102 -> n105  [key=0, style=solid];
n102 -> n107  [key=0, style=solid];
n102 -> n109  [key=0, style=solid];
n102 -> n111  [key=0, style=solid];
n104 -> n112  [key=0, style=solid];
n104 -> n114  [key=2, style=dotted];
n106 -> n112  [key=0, style=solid];
n106 -> n9  [key=2, style=dotted];
n108 -> n112  [key=0, style=solid];
n108 -> n115  [key=2, style=dotted];
n110 -> n112  [key=0, style=solid];
n110 -> n116  [key=2, style=dotted];
n96 -> n112  [key=0, style=solid];
n96 -> n29  [key=2, style=dotted];
n98 -> n112  [key=0, style=solid];
n98 -> n29  [key=2, style=dotted];
n101 -> n100  [key=0, style=solid];
n101 -> n101  [color=darkseagreen4, key=1, label=e, style=dashed];
n103 -> n104  [key=0, style=solid];
n105 -> n106  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n111 -> n112  [key=0, style=solid];
n111 -> n117  [key=2, style=dotted];
n112 -> n85  [color=blue, key=0, style=bold];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [color=darkseagreen4, key=1, label=int, style=dashed];
n118 -> d119  [color=green, key=0, style=solid];
n118 -> d120  [color=green, key=1, label=int, style=dashed];
n119 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n122  [key=2, style=dotted];
n120 -> n123  [key=2, style=dotted];
n120 -> n124  [key=2, style=dotted];
n121 -> n118  [color=blue, key=0, style=bold];
n125 -> n126  [key=0, style=solid];
n125 -> n128  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
n125 -> n130  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n125 -> n131  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
n125 -> d126  [color=green, key=0, style=solid];
n125 -> d128  [color=green, key=1, label="System.Action<T>", style=dashed];
n125 -> d130  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n125 -> d131  [color=green, key=1, label="System.Action<T>", style=dashed];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=0, style=solid];
n128 -> n129  [key=0, style=solid];
n128 -> n130  [key=0, style=solid];
n130 -> n131  [key=0, style=solid];
n130 -> n132  [key=0, style=solid];
n131 -> n130  [key=0, style=solid];
n131 -> n133  [key=2, style=dotted];
n127 -> n132  [key=0, style=solid];
n127 -> n29  [key=2, style=dotted];
n129 -> n132  [key=0, style=solid];
n129 -> n29  [key=2, style=dotted];
n132 -> n125  [color=blue, key=0, style=bold];
n134 -> n135  [key=0, style=solid];
n134 -> n137  [color=darkseagreen4, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
n134 -> n139  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n134 -> n141  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<TResult> Pairwise", style=bold];
n134 -> d135  [color=green, key=0, style=solid];
n134 -> d137  [color=green, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
n134 -> d139  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n135 -> n136  [key=0, style=solid];
n135 -> n137  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n141  [key=2, style=dotted];
n136 -> n140  [key=0, style=solid];
n136 -> n29  [key=2, style=dotted];
n138 -> n140  [key=0, style=solid];
n138 -> n29  [key=2, style=dotted];
n140 -> n134  [color=blue, key=0, style=bold];
n141 -> n142  [key=0, style=solid];
n141 -> n146  [color=crimson, key=0, style=bold];
n141 -> n149  [color=crimson, key=0, style=bold];
n141 -> n143  [color=darkseagreen4, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
n141 -> n144  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n141 -> n134  [color=darkorchid, key=3, label="Parameter variable System.Func<TSource, TSource, TResult> resultSelector", style=bold];
n141 -> d142  [color=green, key=0, style=solid];
n141 -> d146  [color=green, key=0, style=bold];
n141 -> d149  [color=green, key=0, style=bold];
n141 -> d143  [color=green, key=1, label="System.Func<TSource, TSource, TResult>", style=dashed];
n141 -> d144  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n142 -> n143  [key=0, style=solid];
n142 -> n152  [key=2, style=dotted];
n146 -> n147  [key=0, style=solid];
n149 -> n150  [key=0, style=solid];
n149 -> n9  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
n143 -> n152  [key=2, style=dotted];
n144 -> n145  [key=0, style=solid];
n144 -> n68  [key=2, style=dotted];
n144 -> n147  [color=darkseagreen4, key=1, label=e, style=dashed];
n144 -> n148  [color=darkseagreen4, key=1, label=e, style=dashed];
n144 -> n149  [color=darkseagreen4, key=1, label=e, style=dashed];
n144 -> n150  [color=darkseagreen4, key=1, label=e, style=dashed];
n145 -> n146  [key=0, style=solid];
n145 -> n147  [key=0, style=solid];
n145 -> n69  [key=2, style=dotted];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [color=darkseagreen4, key=1, label=previous, style=dashed];
n148 -> n149  [key=0, style=solid];
n148 -> n151  [key=0, style=solid];
n148 -> n69  [key=2, style=dotted];
n150 -> n148  [key=0, style=solid];
n151 -> n141  [color=blue, key=0, style=bold];
n153 -> n154  [key=0, style=solid];
n153 -> n156  [color=darkorchid, key=3, label="method methodReturn string ToDelimitedString", style=bold];
n153 -> d154  [color=green, key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n154 -> n156  [key=2, style=dotted];
n155 -> n153  [color=blue, key=0, style=bold];
n156 -> n157  [key=0, style=solid];
n156 -> n159  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n156 -> n153  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<TSource> source", style=bold];
n156 -> n87  [color=darkorchid, key=3, label="Parameter variable string delimiter", style=bold];
n156 -> n161  [color=darkorchid, key=3, label="method methodReturn string ToDelimitedString", style=bold];
n156 -> d87  [color=green, key=3, label="Parameter variable string delimiter", style=bold];
n156 -> d157  [color=green, key=0, style=solid];
n156 -> d159  [color=green, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
n157 -> n158  [key=0, style=solid];
n157 -> n159  [key=0, style=solid];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [key=2, style=dotted];
n159 -> n162  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n158 -> n160  [key=0, style=solid];
n158 -> n29  [key=2, style=dotted];
n160 -> n156  [color=blue, key=0, style=bold];
n161 -> n166  [key=0, style=solid];
n161 -> n167  [color=darkseagreen4, key=1, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>", style=dashed];
n161 -> n168  [color=darkseagreen4, key=1, label=string, style=dashed];
n161 -> n171  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n161 -> n174  [color=darkseagreen4, key=1, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>", style=dashed];
n161 -> n156  [color=darkorchid, key=3, label="Parameter variable string delimiter", style=bold];
n161 -> n159  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder> append", style=bold];
n161 -> d159  [color=green, key=3, label="Parameter variable System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder> append", style=bold];
n161 -> d166  [color=green, key=0, style=solid];
n161 -> d167  [color=green, key=1, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>", style=dashed];
n161 -> d168  [color=green, key=1, label=string, style=dashed];
n161 -> d171  [color=green, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n161 -> d174  [color=green, key=1, label="System.Func<System.Text.StringBuilder, T, System.Text.StringBuilder>", style=dashed];
n162 -> n163  [key=0, style=solid];
n162 -> d163  [color=green, key=0, style=solid];
n163 -> n164  [key=0, style=solid];
n163 -> n165  [key=2, style=dotted];
n164 -> n162  [color=blue, key=0, style=bold];
n166 -> n167  [key=0, style=solid];
n166 -> n152  [key=2, style=dotted];
n167 -> n168  [key=0, style=solid];
n167 -> n152  [key=2, style=dotted];
n168 -> n169  [key=0, style=solid];
n168 -> n168  [color=darkseagreen4, key=1, label=string, style=dashed];
n168 -> n173  [color=darkseagreen4, key=1, label=string, style=dashed];
n171 -> n172  [key=0, style=solid];
n171 -> n175  [key=0, style=solid];
n171 -> n174  [color=darkseagreen4, key=1, label=value, style=dashed];
n174 -> n171  [key=0, style=solid];
n174 -> n9  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n169 -> n177  [key=2, style=dotted];
n169 -> n173  [color=darkseagreen4, key=1, label=sb, style=dashed];
n169 -> n174  [color=darkseagreen4, key=1, label=sb, style=dashed];
n169 -> n175  [color=darkseagreen4, key=1, label=sb, style=dashed];
n173 -> n174  [key=0, style=solid];
n173 -> n178  [key=2, style=dotted];
n170 -> n171  [key=0, style=solid];
n170 -> n172  [color=darkseagreen4, key=1, label=i, style=dashed];
n170 -> n11  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n175 -> n176  [key=0, style=solid];
n175 -> n179  [key=2, style=dotted];
n172 -> n173  [key=0, style=solid];
n172 -> n174  [key=0, style=solid];
n172 -> n172  [color=darkseagreen4, key=1, label=i, style=dashed];
n176 -> n161  [color=blue, key=0, style=bold];
n180 -> n181  [key=0, style=solid];
n180 -> d181  [color=green, key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n181 -> n68  [key=2, style=dotted];
n182 -> n183  [key=0, style=solid];
n182 -> n69  [key=2, style=dotted];
n182 -> n184  [key=2, style=dotted];
n182 -> n185  [key=2, style=dotted];
n183 -> n180  [color=blue, key=0, style=bold];
n186 -> n187  [key=0, style=solid];
n186 -> n188  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n187 -> n188  [key=0, style=solid];
n187 -> n68  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n69  [key=2, style=dotted];
n188 -> n184  [key=2, style=dotted];
n188 -> n185  [key=2, style=dotted];
n189 -> n186  [color=blue, key=0, style=bold];
n190 -> n191  [key=0, style=solid];
n190 -> n194  [color=crimson, key=0, style=bold];
n191 -> n192  [key=0, style=solid];
n191 -> n68  [key=2, style=dotted];
n191 -> n193  [color=darkseagreen4, key=1, label=e, style=dashed];
n191 -> n194  [color=darkseagreen4, key=1, label=e, style=dashed];
n194 -> n193  [key=0, style=solid];
n192 -> n193  [key=0, style=solid];
n192 -> n195  [key=0, style=solid];
n192 -> n69  [key=2, style=dotted];
n193 -> n194  [key=0, style=solid];
n193 -> n196  [key=0, style=solid];
n193 -> n69  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n197  [key=2, style=dotted];
n196 -> n190  [color=blue, key=0, style=bold];
n198 -> n199  [key=0, style=solid];
n198 -> n202  [color=crimson, key=0, style=bold];
n199 -> n200  [key=0, style=solid];
n199 -> n68  [key=2, style=dotted];
n199 -> n201  [color=darkseagreen4, key=1, label=e, style=dashed];
n199 -> n202  [color=darkseagreen4, key=1, label=e, style=dashed];
n202 -> n201  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n203  [key=0, style=solid];
n200 -> n69  [key=2, style=dotted];
n201 -> n202  [key=0, style=solid];
n201 -> n203  [key=0, style=solid];
n201 -> n69  [key=2, style=dotted];
n203 -> n198  [color=blue, key=0, style=bold];
n204 -> n205  [key=0, style=solid];
n205 -> n206  [key=0, style=solid];
n205 -> n207  [key=2, style=dotted];
n205 -> n208  [key=2, style=dotted];
n206 -> n204  [color=blue, key=0, style=bold];
n209 -> n210  [key=0, style=solid];
n209 -> n211  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n209 -> n212  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<T>", style=dashed];
n209 -> n209  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<T> Materialize", style=bold];
n210 -> n211  [key=0, style=solid];
n210 -> n212  [key=0, style=solid];
n210 -> n207  [key=2, style=dotted];
n211 -> n213  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n214  [key=2, style=dotted];
n213 -> n209  [color=blue, key=0, style=bold];
n214 -> n215  [key=0, style=solid];
n215 -> n216  [key=0, style=solid];
n215 -> n208  [key=2, style=dotted];
n216 -> n214  [color=blue, key=0, style=bold];
n217 -> n218  [key=0, style=solid];
n218 -> n219  [key=0, style=solid];
n218 -> n68  [key=2, style=dotted];
n219 -> n217  [color=blue, key=0, style=bold];
n220 -> n221  [key=0, style=solid];
n220 -> n217  [color=darkorchid, key=3, label="method methodReturn System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator", style=bold];
n221 -> n222  [key=0, style=solid];
n221 -> n217  [key=2, style=dotted];
n222 -> n220  [color=blue, key=0, style=bold];
d1 -> d2  [color=green, key=0, style=solid];
d1 -> d3  [color=green, key=1, label=collection, style=dashed];
d1 -> d4  [color=green, key=1, label=collection, style=dashed];
d2 -> d3  [color=green, key=0, style=solid];
d2 -> d6  [color=green, key=0, style=solid];
d3 -> d4  [color=green, key=0, style=solid];
d3 -> d5  [color=green, key=0, style=solid];
d4 -> n7  [color=green, key=0, style=solid];
d4 -> n8  [color=green, key=2, style=dotted];
d4 -> n9  [color=green, key=2, style=dotted];
d5 -> n7  [color=green, key=0, style=solid];
d6 -> n7  [color=green, key=0, style=solid];
d6 -> n10  [color=green, key=2, style=dotted];
d11 -> d11  [color=green, key=3, label="Local variable int iterations", style=bold];
d11 -> d12  [color=green, key=0, style=solid];
d11 -> d13  [color=green, key=1, label=iterations, style=dashed];
d11 -> d17  [color=green, key=1, label=iterations, style=dashed];
d170 -> d11  [color=green, key=3, label="Local variable int i", style=bold];
d170 -> d171  [color=green, key=0, style=solid];
d170 -> d172  [color=green, key=1, label=i, style=dashed];
d12 -> d16  [color=green, key=1, label=element, style=dashed];
d12 -> d13  [color=green, key=0, style=solid];
d12 -> d17  [color=green, key=0, style=solid];
d13 -> d14  [color=green, key=0, style=solid];
d13 -> d17  [color=green, key=1, label=iterations, style=dashed];
d13 -> d13  [color=green, key=1, label=iterations, style=dashed];
d17 -> d18  [color=green, key=0, style=solid];
d17 -> n19  [color=green, key=0, style=solid];
d16 -> d12  [color=green, key=0, style=solid];
d14 -> d16  [color=green, key=0, style=solid];
d14 -> d15  [color=green, key=0, style=solid];
d15 -> n19  [color=green, key=0, style=solid];
d15 -> n9  [color=green, key=2, style=dotted];
d18 -> n19  [color=green, key=0, style=solid];
d18 -> n9  [color=green, key=2, style=dotted];
d21 -> d22  [color=green, key=0, style=solid];
d21 -> d23  [color=green, key=0, style=solid];
d22 -> n28  [color=green, key=0, style=solid];
d22 -> n29  [color=green, key=2, style=dotted];
d23 -> d24  [color=green, key=0, style=solid];
d23 -> d25  [color=green, key=0, style=solid];
d24 -> n28  [color=green, key=0, style=solid];
d24 -> n29  [color=green, key=2, style=dotted];
d25 -> d26  [color=green, key=0, style=solid];
d25 -> d27  [color=green, key=0, style=solid];
d26 -> n28  [color=green, key=0, style=solid];
d26 -> n29  [color=green, key=2, style=dotted];
d27 -> d27  [color=green, key=1, label=item1, style=dashed];
d27 -> n28  [color=green, key=0, style=solid];
d27 -> n9  [color=green, key=2, style=dotted];
d31 -> d32  [color=green, key=0, style=solid];
d31 -> d33  [color=green, key=0, style=solid];
d32 -> n34  [color=green, key=0, style=solid];
d32 -> n29  [color=green, key=2, style=dotted];
d33 -> n34  [color=green, key=0, style=solid];
d33 -> n35  [color=green, key=2, style=dotted];
d33 -> n36  [color=green, key=2, style=dotted];
d38 -> d39  [color=green, key=0, style=solid];
d38 -> d40  [color=green, key=0, style=solid];
d39 -> n41  [color=green, key=0, style=solid];
d39 -> n29  [color=green, key=2, style=dotted];
d40 -> n41  [color=green, key=0, style=solid];
d40 -> n42  [color=green, key=2, style=dotted];
d44 -> d45  [color=green, key=0, style=solid];
d44 -> d46  [color=green, key=0, style=solid];
d45 -> n47  [color=green, key=0, style=solid];
d45 -> n29  [color=green, key=2, style=dotted];
d46 -> n47  [color=green, key=0, style=solid];
d46 -> n35  [color=green, key=2, style=dotted];
d46 -> n36  [color=green, key=2, style=dotted];
d49 -> d50  [color=green, key=0, style=solid];
d49 -> d51  [color=green, key=0, style=solid];
d50 -> n56  [color=green, key=0, style=solid];
d50 -> n29  [color=green, key=2, style=dotted];
d51 -> d52  [color=green, key=0, style=solid];
d51 -> d53  [color=green, key=0, style=solid];
d52 -> n56  [color=green, key=0, style=solid];
d52 -> n57  [color=green, key=2, style=dotted];
d53 -> d54  [color=green, key=0, style=solid];
d53 -> d55  [color=green, key=0, style=solid];
d54 -> n56  [color=green, key=0, style=solid];
d54 -> n57  [color=green, key=2, style=dotted];
d55 -> n56  [color=green, key=0, style=solid];
d55 -> n58  [color=green, key=2, style=dotted];
d59 -> d59  [color=green, key=3, label="Local variable int index", style=bold];
d59 -> d60  [color=green, key=0, style=solid];
d59 -> d62  [color=green, key=1, label=index, style=dashed];
d60 -> d61  [color=green, key=0, style=solid];
d60 -> d64  [color=green, key=1, label=endIndex, style=dashed];
d62 -> d63  [color=green, key=0, style=solid];
d62 -> d62  [color=green, key=1, label=index, style=dashed];
d62 -> d64  [color=green, key=0, style=solid];
d62 -> n69  [color=green, key=2, style=dotted];
d63 -> d62  [color=green, key=0, style=solid];
d66 -> d63  [color=green, key=0, style=solid];
d61 -> d63  [color=green, key=1, label=iter, style=dashed];
d61 -> d66  [color=green, key=1, label=iter, style=dashed];
d61 -> d62  [color=green, key=0, style=solid];
d61 -> n68  [color=green, key=2, style=dotted];
d61 -> d64  [color=green, key=1, label=iter, style=dashed];
d61 -> d65  [color=green, key=1, label=iter, style=dashed];
d64 -> d63  [color=green, key=0, style=solid];
d64 -> d64  [color=green, key=1, label=index, style=dashed];
d64 -> d65  [color=green, key=0, style=solid];
d64 -> n69  [color=green, key=2, style=dotted];
d65 -> d66  [color=green, key=0, style=solid];
d65 -> n67  [color=green, key=0, style=solid];
d65 -> n69  [color=green, key=2, style=dotted];
d71 -> n72  [color=green, key=0, style=solid];
d71 -> n73  [color=green, key=2, style=dotted];
d75 -> n76  [color=green, key=0, style=solid];
d75 -> n77  [color=green, key=2, style=dotted];
d75 -> n78  [color=green, key=1, label="lambda expression", style=dashed];
d79 -> n80  [color=green, key=0, style=solid];
d79 -> n81  [color=green, key=2, style=dotted];
d83 -> n84  [color=green, key=0, style=solid];
d83 -> n85  [color=green, key=2, style=dotted];
d87 -> n88  [color=green, key=0, style=solid];
d87 -> n85  [color=green, key=2, style=dotted];
d90 -> n91  [color=green, key=0, style=solid];
d90 -> n85  [color=green, key=2, style=dotted];
d93 -> n94  [color=green, key=0, style=solid];
d93 -> n85  [color=green, key=2, style=dotted];
d95 -> d96  [color=green, key=0, style=solid];
d95 -> d97  [color=green, key=0, style=solid];
d96 -> n112  [color=green, key=0, style=solid];
d96 -> n29  [color=green, key=2, style=dotted];
d97 -> d98  [color=green, key=0, style=solid];
d97 -> d99  [color=green, key=0, style=solid];
d98 -> n112  [color=green, key=0, style=solid];
d98 -> n29  [color=green, key=2, style=dotted];
d99 -> d100  [color=green, key=0, style=solid];
d99 -> d101  [color=green, key=1, label=elements, style=dashed];
d99 -> d104  [color=green, key=1, label=elements, style=dashed];
d99 -> d106  [color=green, key=1, label=elements, style=dashed];
d99 -> d108  [color=green, key=1, label=elements, style=dashed];
d99 -> d110  [color=green, key=1, label=elements, style=dashed];
d100 -> d101  [color=green, key=0, style=solid];
d100 -> d102  [color=green, key=0, style=solid];
d100 -> n113  [color=green, key=2, style=dotted];
d100 -> n0  [color=green, key=2, style=dotted];
d101 -> d100  [color=green, key=0, style=solid];
d101 -> d101  [color=green, key=1, label=e, style=dashed];
d104 -> n112  [color=green, key=0, style=solid];
d104 -> n114  [color=green, key=2, style=dotted];
d106 -> n112  [color=green, key=0, style=solid];
d106 -> n9  [color=green, key=2, style=dotted];
d108 -> n112  [color=green, key=0, style=solid];
d108 -> n115  [color=green, key=2, style=dotted];
d110 -> n112  [color=green, key=0, style=solid];
d110 -> n116  [color=green, key=2, style=dotted];
d102 -> d103  [color=green, key=0, style=solid];
d102 -> d105  [color=green, key=0, style=solid];
d102 -> d107  [color=green, key=0, style=solid];
d102 -> d109  [color=green, key=0, style=solid];
d102 -> d111  [color=green, key=0, style=solid];
d103 -> d104  [color=green, key=0, style=solid];
d105 -> d106  [color=green, key=0, style=solid];
d107 -> d108  [color=green, key=0, style=solid];
d109 -> d110  [color=green, key=0, style=solid];
d111 -> n112  [color=green, key=0, style=solid];
d111 -> n117  [color=green, key=2, style=dotted];
d119 -> d120  [color=green, key=0, style=solid];
d120 -> n121  [color=green, key=0, style=solid];
d120 -> n122  [color=green, key=2, style=dotted];
d120 -> n123  [color=green, key=2, style=dotted];
d120 -> n124  [color=green, key=2, style=dotted];
d126 -> d127  [color=green, key=0, style=solid];
d126 -> d128  [color=green, key=0, style=solid];
d127 -> n132  [color=green, key=0, style=solid];
d127 -> n29  [color=green, key=2, style=dotted];
d128 -> d129  [color=green, key=0, style=solid];
d128 -> d130  [color=green, key=0, style=solid];
d129 -> n132  [color=green, key=0, style=solid];
d129 -> n29  [color=green, key=2, style=dotted];
d130 -> d131  [color=green, key=0, style=solid];
d130 -> n132  [color=green, key=0, style=solid];
d131 -> d130  [color=green, key=0, style=solid];
d131 -> n133  [color=green, key=2, style=dotted];
d135 -> d136  [color=green, key=0, style=solid];
d135 -> d137  [color=green, key=0, style=solid];
d136 -> n140  [color=green, key=0, style=solid];
d136 -> n29  [color=green, key=2, style=dotted];
d137 -> d138  [color=green, key=0, style=solid];
d137 -> d139  [color=green, key=0, style=solid];
d138 -> n140  [color=green, key=0, style=solid];
d138 -> n29  [color=green, key=2, style=dotted];
d139 -> n140  [color=green, key=0, style=solid];
d139 -> n141  [color=green, key=2, style=dotted];
d142 -> d143  [color=green, key=0, style=solid];
d142 -> n152  [color=green, key=2, style=dotted];
d143 -> d144  [color=green, key=0, style=solid];
d143 -> n152  [color=green, key=2, style=dotted];
d146 -> d147  [color=green, key=0, style=solid];
d145 -> d146  [color=green, key=0, style=solid];
d145 -> d147  [color=green, key=0, style=solid];
d145 -> n69  [color=green, key=2, style=dotted];
d147 -> d149  [color=green, key=1, label=previous, style=dashed];
d147 -> d148  [color=green, key=0, style=solid];
d149 -> d150  [color=green, key=0, style=solid];
d149 -> n9  [color=green, key=2, style=dotted];
d144 -> d149  [color=green, key=1, label=e, style=dashed];
d144 -> d145  [color=green, key=0, style=solid];
d144 -> n68  [color=green, key=2, style=dotted];
d144 -> d147  [color=green, key=1, label=e, style=dashed];
d144 -> d148  [color=green, key=1, label=e, style=dashed];
d144 -> d150  [color=green, key=1, label=e, style=dashed];
d148 -> d149  [color=green, key=0, style=solid];
d148 -> n151  [color=green, key=0, style=solid];
d148 -> n69  [color=green, key=2, style=dotted];
d150 -> d148  [color=green, key=0, style=solid];
d154 -> n155  [color=green, key=0, style=solid];
d154 -> n156  [color=green, key=2, style=dotted];
d157 -> d158  [color=green, key=0, style=solid];
d157 -> d159  [color=green, key=0, style=solid];
d158 -> n160  [color=green, key=0, style=solid];
d158 -> n29  [color=green, key=2, style=dotted];
d159 -> n160  [color=green, key=0, style=solid];
d159 -> n161  [color=green, key=2, style=dotted];
d159 -> n162  [color=green, key=1, label="lambda expression", style=dashed];
d163 -> n164  [color=green, key=0, style=solid];
d163 -> n165  [color=green, key=2, style=dotted];
d166 -> d167  [color=green, key=0, style=solid];
d166 -> n152  [color=green, key=2, style=dotted];
d167 -> d168  [color=green, key=0, style=solid];
d167 -> n152  [color=green, key=2, style=dotted];
d168 -> d168  [color=green, key=1, label=string, style=dashed];
d168 -> d169  [color=green, key=0, style=solid];
d168 -> d173  [color=green, key=1, label=string, style=dashed];
d169 -> d174  [color=green, key=1, label=sb, style=dashed];
d169 -> d170  [color=green, key=0, style=solid];
d169 -> n177  [color=green, key=2, style=dotted];
d169 -> d173  [color=green, key=1, label=sb, style=dashed];
d169 -> d175  [color=green, key=1, label=sb, style=dashed];
d173 -> d174  [color=green, key=0, style=solid];
d173 -> n178  [color=green, key=2, style=dotted];
d171 -> d172  [color=green, key=0, style=solid];
d171 -> d175  [color=green, key=0, style=solid];
d171 -> d174  [color=green, key=1, label=value, style=dashed];
d174 -> d171  [color=green, key=0, style=solid];
d174 -> n9  [color=green, key=2, style=dotted];
d172 -> d174  [color=green, key=0, style=solid];
d172 -> d173  [color=green, key=0, style=solid];
d172 -> d172  [color=green, key=1, label=i, style=dashed];
d175 -> n176  [color=green, key=0, style=solid];
d175 -> n179  [color=green, key=2, style=dotted];
d181 -> d182  [color=green, key=0, style=solid];
d181 -> n68  [color=green, key=2, style=dotted];
d182 -> n183  [color=green, key=0, style=solid];
d182 -> n69  [color=green, key=2, style=dotted];
d182 -> n184  [color=green, key=2, style=dotted];
d182 -> n185  [color=green, key=2, style=dotted];
}
