digraph  {
n704 [label="CommandLine.HelpOptionAttribute", span=""];
n705 [label="CommandLine.OptionAttribute", span=""];
n706 [label="CommandLine.OptionListAttribute", span=""];
n707 [label="CommandLine.ValueListAttribute", span=""];
n708 [label="CommandLine.ArgumentParser", span=""];
n709 [label="CommandLine.BadOptionInfo", span=""];
n710 [label="CommandLine.LongOptionParser", span=""];
n711 [label="CommandLine.OneCharStringEnumerator", span=""];
n712 [label="CommandLine.OptionGroupParser", span=""];
n713 [label="CommandLine.OptionInfo", span=""];
n714 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n715 [label="CommandLine.OptionMap", span=""];
n716 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n717 [label="CommandLine.ParsingError", span=""];
n718 [label="CommandLine.PostParsingState", span=""];
n719 [label="CommandLine.StringArrayEnumerator", span=""];
n720 [label="CommandLine.TargetWrapper", span=""];
n721 [label="CommandLine.CommandLineOptionsBase", span=""];
n722 [label="CommandLine.CommandLineParserSettings", span=""];
n723 [label="CommandLine.CommandLineParser", span=""];
n0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124"];
n1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", color=red, community=0, label="6: HelpText = DEFAULT_HELP_TEXT", span="127-127"];
n2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124"];
n3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
n4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, label="1: ShortName = shortName", span="138-138"];
n5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, label="1: LongName = longName", span="139-139"];
n6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0, label="1: HelpText = DEFAULT_HELP_TEXT", span="140-140"];
n7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
n8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154"];
n9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="1: text = null", span="157-157"];
n10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="2: var method = pair.Left", span="159-159"];
n13 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="0: text = (string)method.Invoke(target, null)", span="163-163"];
n11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="2: !CheckMethodSignature(method)", span="160-160"];
n12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0, label="1: throw new MemberAccessException();", span="161-161"];
n15 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166"];
n14 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154"];
n17 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
n16 [cluster="System.MemberAccessException.MemberAccessException()", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
n18 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0, label="0: return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="168-168"];
n19 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166"];
n20 [cluster="System.Reflection.MethodBase.GetParameters()", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
n21 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182"];
n22 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182"];
n23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
n24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="2: !string.IsNullOrEmpty(shortName)", span="206-206"];
n25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="2: _uniqueName = shortName", span="207-207"];
n26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="2: !string.IsNullOrEmpty(longName)", span="208-208"];
n27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="2: _uniqueName = longName", span="209-209"];
n30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="1: base.ShortName = shortName", span="214-214"];
n31 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="6: base.LongName = longName", span="215-215"];
n33 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="2: _uniqueName == null", span="211-211"];
n29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0, label="1: throw new InvalidOperationException();", span="212-212"];
n32 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
n34 [cluster="System.InvalidOperationException.InvalidOperationException()", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
n35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258"];
n36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=red, community=0, label="6: Separator = ':'", span="261-261"];
n37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258"];
n38 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270"];
n39 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=red, community=0, label="6: Separator = separator", span="273-273"];
n40 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270"];
n41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294"];
n42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=red, community=0, label="6: MaximumElements = -1", span="296-296"];
n43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294"];
n44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
n45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="2: concreteType == null", span="307-307"];
n47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="2: !typeof(IList<string>).IsAssignableFrom(concreteType)", span="310-310"];
n49 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="6: _concreteType = concreteType", span="313-313"];
n46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="1: throw new ArgumentNullException(''concreteType'');", span="308-308"];
n48 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0, label="3: throw new CommandLineParserException(''The types are incompatible.'');", span="311-311"];
n52 [cluster="System.Type.IsAssignableFrom(System.Type)", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
n50 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
n53 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1519-1519"];
n51 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
n55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="1: Type concreteType", span="330-330"];
n56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="2: var property = GetProperty(target, out concreteType)", span="331-331"];
n59 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="2: property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="336-336"];
n60 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="0: return (IList<string>)property.GetValue(target, null);", span="338-338"];
n57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="2: property == null || concreteType == null", span="333-333"];
n62 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355"];
n58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0, label="6: return null;", span="334-334"];
n63 [cluster="System.Activator.CreateInstance(System.Type)", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
n64 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n61 [cluster="CommandLine.ValueListAttribute.GetReference(object)", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
n65 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341"];
n67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="2: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="343-343"];
n68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: list == null || list.Count == 0", span="344-344"];
n75 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1859-1859"];
n70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="2: list.Count > 1", span="347-347"];
n72 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: var pairZero = list[0]", span="350-350"];
n69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: return null;", span="345-345"];
n71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: throw new InvalidOperationException();", span="348-348"];
n73 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0, label="1: return pairZero.Right;", span="352-352"];
n74 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341"];
n76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: concreteType = null", span="357-357"];
n77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="2: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="359-359"];
n78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: list == null || list.Count == 0", span="360-360"];
n80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: list.Count > 1", span="363-363"];
n82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: var pairZero = list[0]", span="366-366"];
n79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: return null;", span="361-361"];
n81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: throw new InvalidOperationException();", span="364-364"];
n83 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: concreteType = pairZero.Right.ConcreteType", span="367-367"];
n84 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0, label="1: return pairZero.Left;", span="369-369"];
n85 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355"];
n86 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="385-385"];
n87 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=red, community=0, label="0: this.PostParsingState = new List<ParsingError>()", span="387-387"];
n88 [cluster="CommandLine.ArgumentParser.ArgumentParser()", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="385-385"];
n89 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n90 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390"];
n91 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390"];
n92 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394"];
n93 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=red, community=0, label="2: this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="398-398"];
n94 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394"];
n95 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269"];
n96 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
n97 [cluster="CommandLine.ArgumentParser.Create(string, bool)", label="Entry CommandLine.ArgumentParser.Create(string, bool)", span="401-401"];
n98 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, label="1: argument.Equals(''-'', StringComparison.InvariantCulture)", span="403-403"];
n100 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, label="1: argument[0] == '-' && argument[1] == '-'", span="406-406"];
n101 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, label="2: return new LongOptionParser(ignoreUnknownArguments);", span="407-407"];
n102 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, label="2: argument[0] == '-'", span="409-409"];
n103 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, label="2: return new OptionGroupParser(ignoreUnknownArguments);", span="410-410"];
n99 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, label="1: return null;", span="404-404"];
n106 [cluster="string.Equals(string, System.StringComparison)", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
n104 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0, label="1: return null;", span="412-412"];
n105 [cluster="CommandLine.ArgumentParser.Create(string, bool)", label="Exit CommandLine.ArgumentParser.Create(string, bool)", span="401-401"];
n108 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", label="Entry CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="712-712"];
n107 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", label="Entry CommandLine.LongOptionParser.LongOptionParser(bool)", span="539-539"];
n109 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="415-415"];
n110 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="2: argument.Length > 0", span="417-417"];
n111 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="0: return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="418-418"];
n112 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0, label="6: return true;", span="420-420"];
n113 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="415-415"];
n114 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="430-430"];
n115 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="2: IList<string> list = new List<string>()", span="432-432"];
n116 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="2: ae.MoveNext()", span="434-434"];
n117 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="2: IsInputValue(ae.Current)", span="436-436"];
n118 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="2: list.Add(ae.Current)", span="437-437"];
n119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="2: !ae.MovePrevious()", span="441-441"];
n121 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="1: return list;", span="444-444"];
n123 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="528-528"];
n124 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n120 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0, label="3: throw new CommandLineParserException();", span="442-442"];
n125 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="530-530"];
n122 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="430-430"];
n126 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1515-1515"];
n127 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="447-447"];
n128 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=red, community=0, label="0: return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="449-449"];
n129 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="447-447"];
n130 [cluster="string.Compare(string, string, bool)", label="Entry string.Compare(string, string, bool)", span="0-0"];
n131 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="452-452"];
n132 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=red, community=0, label="0: return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="454-454"];
n133 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="452-452"];
n134 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="457-457"];
n135 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=red, community=0, label="2: return BooleanToParserState(value, false);", span="459-459"];
n136 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="457-457"];
n137 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="462-462"];
n138 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="1: value && !addMoveNextIfTrue", span="464-464"];
n140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="1: value", span="467-467"];
n139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="6: return ParserState.Success;", span="465-465"];
n141 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="6: return ParserState.Success | ParserState.MoveOnNextElement;", span="468-468"];
n142 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0, label="6: return ParserState.Failure;", span="470-470"];
n143 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="462-462"];
n144 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="473-473"];
n145 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, label="0: !option.IsAttributeArrayCompatible", span="475-475"];
n146 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0, label="3: throw new CommandLineParserException();", span="476-476"];
n147 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="473-473"];
n148 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="479-479"];
n149 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, label="0: !option.IsArray && option.IsAttributeArrayCompatible", span="481-481"];
n150 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0, label="3: throw new CommandLineParserException();", span="482-482"];
n151 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="479-479"];
n152 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="491-491"];
n153 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="491-491"];
n154 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="495-495"];
n155 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, label="1: ShortName = shortName", span="497-497"];
n156 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0, label="6: LongName = longName", span="498-498"];
n157 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="495-495"];
n158 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="523-523"];
n159 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="523-523"];
n160 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="528-528"];
n161 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="530-530"];
n162 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", color=red, community=0, label="6: _ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="541-541"];
n163 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", label="Exit CommandLine.LongOptionParser.LongOptionParser(bool)", span="539-539"];
n164 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="544-544"];
n165 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: var parts = argumentEnumerator.Current.Substring(2).Split(new[] { '=' }, 2)", span="546-546"];
n166 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: var option = map[parts[0]]", span="547-547"];
n173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="559-559"];
n177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="3: valueSetting = option.SetValue(parts[1], options)", span="566-566"];
n182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="575-575"];
n184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: valueSetting = option.SetValue(items, options)", span="578-578"];
n189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="3: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="588-588"];
n194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="597-597"];
n195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: valueSetting = option.SetValue(items, options)", span="599-599"];
n201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: valueSetting = option.SetValue(true, options)", span="611-611"];
n206 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n207 [cluster="string.Split(char[], int)", label="Entry string.Split(char[], int)", span="0-0"];
n175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: parts.Length == 2", span="562-562"];
n183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: items.Insert(0, parts[1])", span="576-576"];
n199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: parts.Length == 2", span="608-608"];
n167 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: bool valueSetting", span="548-548"];
n168 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: option == null", span="550-550"];
n170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: option.IsDefined = true", span="553-553"];
n171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="555-555"];
n172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !option.IsBoolean", span="557-557"];
n176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !option.IsArray", span="564-564"];
n179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="568-568"];
n181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="573-573"];
n186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="580-580"];
n188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !option.IsArray", span="586-586"];
n191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="590-590"];
n193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="595-595"];
n197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="601-601"];
n203 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: this.DefineOptionThatViolatesFormat(option)", span="613-613"];
n169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="551-551"];
n174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ParserState.Failure;", span="560-560"];
n178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="567-567"];
n208 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="860-860"];
n180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="570-570"];
n209 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
n185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="579-579"];
n210 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="871-871"];
n187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="582-582"];
n190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="589-589"];
n192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="592-592"];
n196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="600-600"];
n198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="604-604"];
n200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ParserState.Failure;", span="609-609"];
n202 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="612-612"];
n211 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="954-954"];
n204 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="615-615"];
n205 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="544-544"];
n212 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="625-625"];
n213 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, label="1: Assumes.NotNullOrEmpty(value, ''value'')", span="627-627"];
n214 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, label="1: _data = value", span="629-629"];
n217 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1844-1844"];
n215 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0, label="6: _index = -1", span="630-630"];
n216 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="625-625"];
n218 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="669-669"];
n219 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=red, community=0, label="1: _index = -1", span="671-671"];
n220 [cluster="CommandLine.OneCharStringEnumerator.Reset()", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="669-669"];
n221 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="674-674"];
n222 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="2: _index < (_data.Length - 1)", span="676-676"];
n223 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="1: _index++", span="678-678"];
n226 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="1: _index = _data.Length", span="682-682"];
n224 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="1: _currentElement = _data.Substring(_index, 1)", span="679-679"];
n225 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="1: return true;", span="680-680"];
n229 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n227 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0, label="2: return false;", span="684-684"];
n228 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="674-674"];
n230 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="687-687"];
n231 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="1: _index == -1", span="689-689"];
n232 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="2: throw new InvalidOperationException();", span="690-690"];
n233 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="1: _index > _data.Length", span="692-692"];
n234 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="1: throw new InvalidOperationException();", span="693-693"];
n235 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0, label="0: return _data.Substring(_index + 1);", span="695-695"];
n236 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="687-687"];
n237 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="698-698"];
n238 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=red, community=0, label="6: throw new NotSupportedException();", span="700-700"];
n239 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="698-698"];
n240 [cluster="System.NotSupportedException.NotSupportedException()", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
n241 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="703-703"];
n242 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="703-703"];
n243 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", color=red, community=0, label="2: _ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="714-714"];
n244 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", label="Exit CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="712-712"];
n245 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="717-717"];
n246 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="719-719"];
n248 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: var option = map[group.Current]", span="722-722"];
n254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="3: argumentEnumerator.IsLast && group.IsLast", span="732-732"];
n259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="740-740"];
n264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="749-749"];
n266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: valueSetting = option.SetValue(items, options)", span="752-752"];
n270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="3: !argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="759-759"];
n273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="765-765"];
n278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="774-774"];
n279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: valueSetting = option.SetValue(items, options)", span="776-776"];
n283 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !@group.IsLast && map[@group.Next] == null", span="784-784"];
n285 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !option.SetValue(true, options)", span="787-787"];
n247 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: group.MoveNext()", span="720-720"];
n257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !group.IsLast", span="736-736"];
n265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: items.Insert(0, @group.GetRemainingFromNext())", span="750-750"];
n287 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Success;", span="791-791"];
n249 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: option == null", span="723-723"];
n251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: option.IsDefined = true", span="726-726"];
n252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="728-728"];
n253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !option.IsBoolean", span="730-730"];
n258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !option.IsArray", span="738-738"];
n261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="742-742"];
n263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="747-747"];
n268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="754-754"];
n272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !option.IsArray", span="763-763"];
n275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="767-767"];
n277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="772-772"];
n281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: this.DefineOptionThatViolatesFormat(option)", span="778-778"];
n250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="724-724"];
n255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ParserState.Failure;", span="733-733"];
n256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: bool valueSetting", span="735-735"];
n260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="741-741"];
n262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="744-744"];
n267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="753-753"];
n269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="756-756"];
n271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ParserState.Failure;", span="760-760"];
n274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="766-766"];
n276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="769-769"];
n280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: !valueSetting", span="777-777"];
n282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="780-780"];
n284 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="1: return ParserState.Failure;", span="785-785"];
n286 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0, label="2: return ParserState.Failure;", span="788-788"];
n288 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="717-717"];
n289 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="809-809"];
n290 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: attribute != null", span="811-811"];
n291 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _required = attribute.Required", span="813-813"];
n292 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _helpText = attribute.HelpText", span="814-814"];
n293 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _shortName = attribute.ShortName", span="815-815"];
n294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _longName = attribute.LongName", span="816-816"];
n295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="817-817"];
n296 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _defaultValue = attribute.DefaultValue", span="818-818"];
n297 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="2: _hasDefaultValue = attribute.HasDefaultValue", span="819-819"];
n298 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="2: _attribute = attribute", span="820-820"];
n300 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="6: property != null", span="825-825"];
n301 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: _property = property", span="826-826"];
n299 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="1: throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="823-823"];
n302 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0, label="2: throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="828-828"];
n303 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="809-809"];
n304 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
n305 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="839-839"];
n306 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="841-841"];
n308 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: var map = new OptionMap(list.Count, settings)", span="844-844"];
n312 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: map.RawOptions = target", span="852-852"];
n307 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: list != null", span="842-842"];
n309 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: list", span="846-846"];
n314 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="6: return null;", span="857-857"];
n316 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1082-1082"];
n311 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="849-849"];
n313 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: return map;", span="854-854"];
n310 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: pair != null && pair.Right != null", span="848-848"];
n315 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="839-839"];
n317 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="1: _attribute is OptionListAttribute", span="862-862"];
n318 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="2: return SetValueList(value, options);", span="863-863"];
n320 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="2: return SetNullableValue(value, options);", span="866-866"];
n321 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="2: return SetValueScalar(value, options);", span="868-868"];
n319 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0, label="2: ReflectionUtil.IsNullableType(_property.PropertyType)", span="865-865"];
n324 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1956-1956"];
n322 [cluster="CommandLine.OptionInfo.SetValue(string, object)", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="860-860"];
n325 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="932-932"];
n326 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="896-896"];
n323 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="964-964"];
n327 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="2: Type elementType = _property.PropertyType.GetElementType()", span="873-873"];
n328 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="2: Array array = Array.CreateInstance(elementType, values.Count)", span="874-874"];
n332 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="2: array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="883-883"];
n333 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="2: _property.SetValue(options, array, null)", span="884-884"];
n339 [cluster="System.Type.GetElementType()", label="Entry System.Type.GetElementType()", span="0-0"];
n329 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: int i = 0", span="876-876"];
n340 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n330 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="2: i < array.Length", span="876-876"];
n336 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="2: i++", span="876-876"];
n331 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: _setValueLock", span="880-880"];
n337 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: return true;", span="893-893"];
n341 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n342 [cluster="System.Array.SetValue(object, int)", label="Entry System.Array.SetValue(object, int)", span="0-0"];
n334 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: FormatException", span="887-887"];
n335 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0, label="1: return false;", span="889-889"];
n338 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="871-871"];
n343 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: _property.PropertyType.IsEnum", span="900-900"];
n345 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: _property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="904-904"];
n347 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="2: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="912-912"];
n344 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="2: _setValueLock", span="902-902"];
n346 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: _setValueLock", span="909-909"];
n348 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: InvalidCastException", span="916-916"];
n350 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: FormatException", span="920-920"];
n352 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: ArgumentException", span="924-924"];
n354 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: return true;", span="929-929"];
n356 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n349 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: return false;", span="918-918"];
n351 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="1: return false;", span="922-922"];
n353 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0, label="2: return false;", span="926-926"];
n355 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="896-896"];
n357 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="1: var nc = new NullableConverter(_property.PropertyType)", span="934-934"];
n359 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="2: _property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="941-941"];
n358 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="1: _setValueLock", span="938-938"];
n364 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
n360 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="1: Exception", span="946-946"];
n362 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="1: return true;", span="951-951"];
n365 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
n361 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0, label="2: return false;", span="948-948"];
n363 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="932-932"];
n366 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, label="1: _setValueLock", span="956-956"];
n367 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, label="1: _property.SetValue(options, value, null)", span="958-958"];
n368 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0, label="2: return true;", span="960-960"];
n369 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="954-954"];
n370 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="2: _setValueLock", span="966-966"];
n371 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: _property.SetValue(options, new List<string>(), null)", span="968-968"];
n372 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="2: var fieldRef = (IList<string>)_property.GetValue(options, null)", span="970-970"];
n373 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="971-971"];
n376 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="2: fieldRef.Add(values[i])", span="975-975"];
n374 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="2: int i = 0", span="973-973"];
n380 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n375 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="0: i < values.Length", span="973-973"];
n377 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="1: i++", span="973-973"];
n378 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0, label="5: return true;", span="978-978"];
n379 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="964-964"];
n381 [cluster="CommandLine.OptionInfo.SetDefault(object)", label="Entry CommandLine.OptionInfo.SetDefault(object)", span="982-982"];
n382 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, label="3: _hasDefaultValue", span="984-984"];
n384 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, label="2: _property.SetValue(options, _defaultValue, null)", span="990-990"];
n383 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, label="2: _setValueLock", span="986-986"];
n387 [cluster="CommandLine.OptionInfo.SetDefault(object)", label="Exit CommandLine.OptionInfo.SetDefault(object)", span="982-982"];
n385 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, label="3: Exception", span="992-992"];
n386 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0, label="6: throw new CommandLineParserException(''Bad default value.'', e);", span="994-994"];
n388 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1524-1524"];
n389 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1065-1065"];
n390 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=red, community=0, label="6: BadOption = option", span="1067-1067"];
n391 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1065-1065"];
n392 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1072-1072"];
n393 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=red, community=0, label="1: ++_count", span="1072-1072"];
n394 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1072-1072"];
n395 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: _settings = settings", span="1084-1084"];
n400 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: _names = new Dictionary<string, string>(capacity, comparer)", span="1092-1092"];
n401 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: _map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1093-1093"];
n403 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: _mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1098-1098"];
n396 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="1: IEqualityComparer<string> comparer", span="1086-1086"];
n397 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: _settings.CaseSensitive", span="1087-1087"];
n398 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: comparer = StringComparer.Ordinal", span="1088-1088"];
n399 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="0: comparer = StringComparer.OrdinalIgnoreCase", span="1090-1090"];
n405 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
n402 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0, label="2: _settings.MutuallyExclusive", span="1095-1095"];
n404 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1082-1082"];
n406 [cluster="CommandLine.OptionMap.EnforceRules()", label="Entry CommandLine.OptionMap.EnforceRules()", span="1132-1132"];
n407 [cluster="CommandLine.OptionMap.EnforceRules()", color=red, community=0, label="0: return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1134-1134"];
n408 [cluster="CommandLine.OptionMap.EnforceRules()", label="Exit CommandLine.OptionMap.EnforceRules()", span="1132-1132"];
n409 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1161-1161"];
n410 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1145-1145"];
n411 [cluster="CommandLine.OptionMap.SetDefaults()", label="Entry CommandLine.OptionMap.SetDefaults()", span="1137-1137"];
n412 [cluster="CommandLine.OptionMap.SetDefaults()", color=red, community=0, label="2: _map.Values", span="1139-1139"];
n413 [cluster="CommandLine.OptionMap.SetDefaults()", color=red, community=0, label="2: option.SetDefault(this.RawOptions)", span="1141-1141"];
n414 [cluster="CommandLine.OptionMap.SetDefaults()", label="Exit CommandLine.OptionMap.SetDefaults()", span="1137-1137"];
n415 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="1: bool requiredRulesAllMet = true", span="1147-1147"];
n416 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="1: _map.Values", span="1148-1148"];
n420 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="0: return requiredRulesAllMet;", span="1158-1158"];
n417 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="2: option.Required && !option.IsDefined", span="1150-1150"];
n418 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="1: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1152-1152"];
n419 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0, label="2: requiredRulesAllMet = false", span="1153-1153"];
n422 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199"];
n421 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1145-1145"];
n423 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="1: !_settings.MutuallyExclusive", span="1163-1163"];
n424 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="2: return true;", span="1164-1164"];
n425 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="0: _map.Values", span="1166-1166"];
n426 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="1: option.IsDefined && option.MutuallyExclusiveSet != null", span="1168-1168"];
n428 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=1, label="2: _mutuallyExclusiveSetMap.Values", span="1173-1173"];
n427 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="2: BuildMutuallyExclusiveMap(option)", span="1169-1169"];
n434 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1186-1186"];
n429 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="1: info.Occurrence > 1", span="1175-1175"];
n432 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="2: return true;", span="1183-1183"];
n430 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="1: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1178-1178"];
n431 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0, label="2: return false;", span="1179-1179"];
n433 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1161-1161"];
n435 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="2: var setName = option.MutuallyExclusiveSet", span="1188-1188"];
n437 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="2: _mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1193-1193"];
n436 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="2: !_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1190-1190"];
n438 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0, label="2: _mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1196-1196"];
n440 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
n441 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
n439 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1186-1186"];
n442 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="2: var commandLineOptionsBase = options as CommandLineOptionsBase", span="1201-1201"];
n445 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="1: var error = new ParsingError {\r\n                BadOption = {\r\n                    ShortName = option.ShortName, \r\n                    LongName = option.LongName\r\n                }\r\n            }", span="1205-1210"];
n446 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="1: required != null", span="1212-1212"];
n447 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="2: error.ViolatesRequired = required.Value", span="1212-1212"];
n448 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="2: mutualExclusiveness != null", span="1213-1213"];
n449 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="2: error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1213-1213"];
n443 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="1: commandLineOptionsBase == null", span="1202-1202"];
n450 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="1: (commandLineOptionsBase).InternalLastPostParsingState.Errors.Add(error)", span="1215-1215"];
n444 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0, label="1: return;", span="1203-1203"];
n452 [cluster="CommandLine.ParsingError.ParsingError()", label="Entry CommandLine.ParsingError.ParsingError()", span="1264-1264"];
n451 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199"];
n453 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224"];
n454 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, label="6: _left = left", span="1226-1226"];
n455 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0, label="1: _right = right", span="1227-1227"];
n456 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224"];
n457 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240"];
n458 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, label="1: int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1242-1242"];
n459 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, label="1: int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1243-1243"];
n462 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
n460 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0, label="2: return leftHash ^ rightHash;", span="1245-1245"];
n461 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240"];
n463 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248"];
n464 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="2: var other = obj as Pair<TLeft, TRight>", span="1250-1250"];
n465 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="1: other == null", span="1252-1252"];
n467 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="1: return Equals(_left, other._left) && Equals(_right, other._right);", span="1255-1255"];
n466 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0, label="6: return false;", span="1253-1253"];
n468 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248"];
n469 [cluster="object.Equals(object, object)", label="Entry object.Equals(object, object)", span="0-0"];
n470 [cluster="CommandLine.ParsingError.ParsingError()", color=red, community=0, label="2: this.BadOption = new BadOptionInfo()", span="1266-1266"];
n471 [cluster="CommandLine.ParsingError.ParsingError()", label="Exit CommandLine.ParsingError.ParsingError()", span="1264-1264"];
n472 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0, label="6: this.BadOption = new BadOptionInfo(shortName, longName)", span="1273-1273"];
n473 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0, label="0: this.ViolatesFormat = format", span="1275-1275"];
n474 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269"];
n475 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1317-1317"];
n476 [cluster="CommandLine.PostParsingState.PostParsingState()", color=red, community=0, label="2: Errors = new List<ParsingError>()", span="1319-1319"];
n477 [cluster="CommandLine.PostParsingState.PostParsingState()", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1317-1317"];
n478 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1337-1337"];
n479 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="1: Assumes.NotNull(value, ''value'')", span="1339-1339"];
n480 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="6: _data = value", span="1341-1341"];
n482 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="1: _endIndex = value.Length", span="1343-1343"];
n484 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1837-1837"];
n481 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0, label="6: _index = -1", span="1342-1342"];
n483 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1337-1337"];
n485 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1387-1387"];
n486 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=red, community=0, label="1: _index = -1", span="1389-1389"];
n487 [cluster="CommandLine.StringArrayEnumerator.Reset()", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1387-1387"];
n488 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1392-1392"];
n489 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="1: _index < _endIndex", span="1394-1394"];
n490 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="1: _index++", span="1396-1396"];
n492 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="1: return false;", span="1399-1399"];
n491 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0, label="0: return _index < _endIndex;", span="1397-1397"];
n493 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1392-1392"];
n494 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1402-1402"];
n495 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=red, community=0, label="2: throw new NotSupportedException();", span="1404-1404"];
n496 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1402-1402"];
n497 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1407-1407"];
n498 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: _index <= 0", span="1409-1409"];
n499 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: throw new InvalidOperationException();", span="1411-1411"];
n500 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: _index <= _endIndex", span="1413-1413"];
n501 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: _index--", span="1415-1415"];
n503 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="1: return false;", span="1418-1418"];
n502 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0, label="2: return _index <= _endIndex;", span="1416-1416"];
n504 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1407-1407"];
n505 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1421-1421"];
n506 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1421-1421"];
n507 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1432-1432"];
n508 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="2: _target = target", span="1434-1434"];
n509 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="1: _vla = ValueListAttribute.GetAttribute(_target)", span="1435-1435"];
n510 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="1: IsValueListDefined", span="1436-1436"];
n511 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0, label="1: _valueList = ValueListAttribute.GetReference(_target)", span="1437-1437"];
n512 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1432-1432"];
n513 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1442-1442"];
n514 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="1: _vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1444-1444"];
n517 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="1: _valueList.Add(item)", span="1449-1449"];
n515 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="2: return false;", span="1445-1445"];
n516 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="1: this", span="1447-1447"];
n518 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0, label="2: return true;", span="1452-1452"];
n519 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1442-1442"];
n520 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
n521 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
n522 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488"];
n523 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488"];
n524 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1496-1496"];
n525 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=red, community=0, label="6: LastPostParsingState = new PostParsingState()", span="1498-1498"];
n526 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1496-1496"];
n527 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1515-1515"];
n528 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1519-1519"];
n529 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1524-1524"];
n530 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1529-1529"];
n531 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1529-1529"];
n532 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545"];
n533 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545"];
n534 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555"];
n535 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=red, community=0, label="6: CaseSensitive = caseSensitive", span="1557-1557"];
n536 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555"];
n537 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
n538 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=red, community=0, label="1: HelpWriter = helpWriter", span="1569-1569"];
n539 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
n540 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1579-1579"];
n541 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, label="6: CaseSensitive = caseSensitive", span="1581-1581"];
n542 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0, label="1: HelpWriter = helpWriter", span="1582-1582"];
n543 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1579-1579"];
n544 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1591-1591"];
n545 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, label="6: CaseSensitive = caseSensitive", span="1593-1593"];
n546 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0, label="1: MutuallyExclusive = mutuallyExclusive", span="1594-1594"];
n547 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1591-1591"];
n548 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1605-1605"];
n549 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, label="1: CaseSensitive = caseSensitive", span="1607-1607"];
n550 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, label="6: MutuallyExclusive = mutuallyExclusive", span="1608-1608"];
n551 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0, label="1: HelpWriter = helpWriter", span="1609-1609"];
n552 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1605-1605"];
n553 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1621-1621"];
n554 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, label="1: CaseSensitive = caseSensitive", span="1623-1623"];
n555 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, label="1: MutuallyExclusive = mutuallyExclusive", span="1624-1624"];
n556 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, label="6: HelpWriter = helpWriter", span="1625-1625"];
n557 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0, label="1: IgnoreUnknownArguments = ignoreUnknownArguments", span="1626-1626"];
n558 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1621-1621"];
n559 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1675-1675"];
n560 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=red, community=0, label="6: _settings = new CommandLineParserSettings(false, false, Console.Error)", span="1677-1677"];
n561 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1675-1675"];
n562 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683"];
n563 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=red, community=0, label="2: _settings = new CommandLineParserSettings()", span="1685-1685"];
n564 [cluster="CommandLine.CommandLineParser.CommandLineParser()", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683"];
n565 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
n566 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, label="6: Assumes.NotNull(settings, ''settings'')", span="1696-1696"];
n567 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0, label="3: _settings = settings", span="1698-1698"];
n568 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
n569 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719"];
n570 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=red, community=0, label="2: return ParseArguments(args, options, _settings.HelpWriter);", span="1721-1721"];
n571 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719"];
n572 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1737-1737"];
n573 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="2: Assumes.NotNull(args, ''args'')", span="1739-1739"];
n574 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="2: Assumes.NotNull(options, ''options'')", span="1740-1740"];
n575 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="2: var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1742-1742"];
n576 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: pair != null && helpWriter != null", span="1744-1744"];
n577 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="2: ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1746-1746"];
n579 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1749-1749"];
n580 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: helpWriter.Write(helpText)", span="1750-1750"];
n583 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="2: return DoParseArguments(args, options);", span="1756-1756"];
n585 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1885-1885"];
n578 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: string helpText", span="1748-1748"];
n582 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="1: return true;", span="1753-1753"];
n586 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1802-1802"];
n587 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1759-1759"];
n581 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0, label="2: return false;", span="1751-1751"];
n588 [cluster="System.IO.TextWriter.Write(string)", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
n584 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1737-1737"];
n589 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: bool hadError = false", span="1761-1761"];
n590 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: var optionMap = OptionInfo.CreateMap(options, _settings)", span="1762-1762"];
n592 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: var target = new TargetWrapper(options)", span="1764-1764"];
n593 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1766-1766"];
n599 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="3: ParserState result = parser.Parse(arguments, optionMap, options)", span="1775-1775"];
n601 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1778-1778"];
n608 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: hadError |= !optionMap.EnforceRules()", span="1797-1797"];
n591 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="3: optionMap.SetDefaults()", span="1763-1763"];
n605 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: target.IsValueListDefined", span="1786-1786"];
n606 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: !target.AddValueItemIfAllowed(argument)", span="1788-1788"];
n594 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: arguments.MoveNext()", span="1767-1767"];
n595 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: string argument = arguments.Current", span="1769-1769"];
n604 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: arguments.MoveNext()", span="1784-1784"];
n596 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="1: !string.IsNullOrEmpty(argument)", span="1770-1770"];
n597 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="1: ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="1772-1772"];
n598 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: parser != null", span="1773-1773"];
n600 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: (result & ParserState.Failure) == ParserState.Failure", span="1776-1776"];
n603 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: (result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1783-1783"];
n602 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="1: hadError = true", span="1779-1779"];
n611 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1825-1825"];
n607 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: hadError = true", span="1790-1790"];
n609 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0, label="2: return !hadError;", span="1799-1799"];
n610 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1759-1759"];
n612 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="2: bool caseSensitive = _settings.CaseSensitive", span="1804-1804"];
n614 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="2: i < args.Length", span="1806-1806"];
n615 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="2: !string.IsNullOrEmpty(helpOption.ShortName)", span="1808-1808"];
n616 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="2: ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1810-1810"];
n618 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="2: !string.IsNullOrEmpty(helpOption.LongName)", span="1814-1814"];
n619 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="2: ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1816-1816"];
n613 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: int i = 0", span="1806-1806"];
n621 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: i++", span="1806-1806"];
n622 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="1: return false;", span="1821-1821"];
n617 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="2: return true;", span="1811-1811"];
n620 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0, label="0: return true;", span="1817-1817"];
n623 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1802-1802"];
n624 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0, label="0: var commandLineOptionsBase = options as CommandLineOptionsBase", span="1827-1827"];
n626 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0, label="0: (commandLineOptionsBase).InternalLastPostParsingState.Errors.AddRange(state)", span="1829-1829"];
n625 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0, label="0: commandLineOptionsBase != null", span="1828-1828"];
n627 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1825-1825"];
n628 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
n629 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, label="2: value == null", span="1840-1840"];
n630 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0, label="0: throw new ArgumentNullException(paramName);", span="1841-1841"];
n631 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1837-1837"];
n632 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, label="0: string.IsNullOrEmpty(value)", span="1846-1846"];
n633 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0, label="0: throw new ArgumentException(paramName);", span="1847-1847"];
n634 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1844-1844"];
n635 [cluster="System.ArgumentException.ArgumentException(string)", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
n636 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1850-1850"];
n637 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, label="2: array.Length == 0", span="1852-1852"];
n638 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0, label="2: throw new ArgumentOutOfRangeException(paramName);", span="1853-1853"];
n639 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1850-1850"];
n640 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n641 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1862-1862"];
n642 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: target != null", span="1863-1863"];
n643 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="1: var propertiesInfo = target.GetType().GetProperties()", span="1865-1865"];
n650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1876-1876"];
n651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: return list;", span="1882-1882"];
n644 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="4: propertiesInfo", span="1867-1867"];
n653 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n654 [cluster="System.Type.GetProperties()", label="Entry System.Type.GetProperties()", span="0-0"];
n645 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: property != null && (property.CanRead && property.CanWrite)", span="1869-1869"];
n646 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: var setMethod = property.GetSetMethod()", span="1871-1871"];
n648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1874-1874"];
n647 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: setMethod != null && !setMethod.IsStatic", span="1872-1872"];
n655 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
n649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, label="2: attribute != null", span="1875-1875"];
n656 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
n652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1859-1859"];
n657 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="2: var info = target.GetType().GetMethods()", span="1888-1888"];
n658 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="1: info", span="1890-1890"];
n665 [cluster="System.Type.GetMethods()", label="Entry System.Type.GetMethods()", span="0-0"];
n659 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="2: !method.IsStatic", span="1892-1892"];
n663 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="2: return null;", span="1901-1901"];
n660 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="2: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1894-1895"];
n662 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="2: return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1897-1897"];
n661 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, label="2: attribute != null", span="1896-1896"];
n664 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1885-1885"];
n666 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1904-1904"];
n667 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="2: var info = target.GetType().GetMethods()", span="1907-1907"];
n668 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="1: info", span="1909-1909"];
n669 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="2: !method.IsStatic", span="1911-1911"];
n673 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="1: return null;", span="1920-1920"];
n670 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="1: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1913-1914"];
n671 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="2: attribute != null", span="1915-1915"];
n672 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, label="2: return (TAttribute)attribute;", span="1916-1916"];
n674 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1904-1904"];
n675 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1923-1923"];
n676 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="2: IList<TAttribute> list = new List<TAttribute>()", span="1926-1926"];
n677 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="1: var info = target.GetType().GetProperties()", span="1927-1927"];
n684 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="2: list.Add((TAttribute)attribute)", span="1938-1938"];
n685 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="2: return list;", span="1943-1943"];
n678 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="4: info", span="1929-1929"];
n679 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="2: property != null && (property.CanRead && property.CanWrite)", span="1931-1931"];
n680 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="2: var setMethod = property.GetSetMethod()", span="1933-1933"];
n682 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="2: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1936-1936"];
n681 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="2: setMethod != null && !setMethod.IsStatic", span="1934-1934"];
n683 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, label="1: attribute != null", span="1937-1937"];
n686 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1923-1923"];
n687 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", label="Entry CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1946-1946"];
n688 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, label="1: Assembly assemblyFromWhichToPullInformation = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="1949-1949"];
n689 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, label="1: object[] a = assemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="1951-1951"];
n694 [cluster="System.Reflection.Assembly.GetEntryAssembly()", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
n695 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
n690 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, label="1: a == null || a.Length <= 0", span="1952-1952"];
n696 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
n692 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, label="0: return (TAttribute)a[0];", span="1953-1953"];
n691 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0, label="0: return null;", span="1952-1952"];
n693 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", label="Exit CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1946-1946"];
n697 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=red, community=0, label="6: return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="1958-1958"];
n698 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1956-1956"];
n699 [cluster="System.Type.GetGenericTypeDefinition()", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
n700 [cluster="CommandLine.StringUtil.Spaces(int)", label="Entry CommandLine.StringUtil.Spaces(int)", span="1964-1964"];
n701 [cluster="CommandLine.StringUtil.Spaces(int)", color=red, community=0, label="1: return new String(' ', count);", span="1966-1966"];
n702 [cluster="CommandLine.StringUtil.Spaces(int)", label="Exit CommandLine.StringUtil.Spaces(int)", span="1964-1964"];
n703 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
d1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", color=green, community=0, label="1: HelpText = DEFAULT_HELP_TEXT", span="127-127"];
d4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="1: ShortName = shortName", span="138-138"];
d5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="1: LongName = longName", span="139-139"];
d6 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, label="2: HelpText = DEFAULT_HELP_TEXT", span="140-140"];
d9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="2: text = null", span="157-157"];
d10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="0: var method = pair.Left", span="159-159"];
d11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="1: !CheckMethodSignature(method)", span="160-160"];
d13 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="0: text = (string)method.Invoke(target, null)", span="163-163"];
d12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0, label="2: throw new MemberAccessException();", span="161-161"];
d18 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0, label="2: return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="168-168"];
d24 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="2: !string.IsNullOrEmpty(shortName)", span="206-206"];
d25 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="2: _uniqueName = shortName", span="207-207"];
d26 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="2: !string.IsNullOrEmpty(longName)", span="208-208"];
d28 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="1: _uniqueName == null", span="211-211"];
d27 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="6: _uniqueName = longName", span="209-209"];
d30 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="1: base.ShortName = shortName", span="214-214"];
d31 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="6: base.LongName = longName", span="215-215"];
d29 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, label="6: throw new InvalidOperationException();", span="212-212"];
d36 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=green, community=0, label="6: Separator = ':'", span="261-261"];
d39 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0, label="2: Separator = separator", span="273-273"];
d42 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0, label="1: MaximumElements = -1", span="296-296"];
d45 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="2: concreteType == null", span="307-307"];
d46 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="3: throw new ArgumentNullException(''concreteType'');", span="308-308"];
d47 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="6: !typeof(IList<string>).IsAssignableFrom(concreteType)", span="310-310"];
d48 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="1: throw new CommandLineParserException(''The types are incompatible.'');", span="311-311"];
d49 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0, label="2: _concreteType = concreteType", span="313-313"];
d55 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="2: Type concreteType", span="330-330"];
d56 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="2: var property = GetProperty(target, out concreteType)", span="331-331"];
d57 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="0: property == null || concreteType == null", span="333-333"];
d59 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="6: property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="336-336"];
d60 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="2: return (IList<string>)property.GetValue(target, null);", span="338-338"];
d58 [cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0, label="1: return null;", span="334-334"];
d67 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="2: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="343-343"];
d68 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: list == null || list.Count == 0", span="344-344"];
d70 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: list.Count > 1", span="347-347"];
d72 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: var pairZero = list[0]", span="350-350"];
d69 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: return null;", span="345-345"];
d71 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="1: throw new InvalidOperationException();", span="348-348"];
d73 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0, label="2: return pairZero.Right;", span="352-352"];
d76 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: concreteType = null", span="357-357"];
d77 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="359-359"];
d78 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: list == null || list.Count == 0", span="360-360"];
d80 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: list.Count > 1", span="363-363"];
d82 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: var pairZero = list[0]", span="366-366"];
d79 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: return null;", span="361-361"];
d81 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="1: throw new InvalidOperationException();", span="364-364"];
d83 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="0: concreteType = pairZero.Right.ConcreteType", span="367-367"];
d84 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0, label="2: return pairZero.Left;", span="369-369"];
d87 [cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0, label="2: this.PostParsingState = new List<ParsingError>()", span="387-387"];
d93 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0, label="1: this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="396-396"];
d98 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="1: StringUtil.IsNumeric(argument)", span="401-401"];
d99 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="1: return null;", span="402-402"];
d100 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="1: argument.Equals(''-'', StringComparison.InvariantCulture)", span="404-404"];
d108 [cluster="CommandLine.StringUtil.IsNumeric(string)", label="Entry CommandLine.StringUtil.IsNumeric(string)", span="1968-1968"];
d101 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="2: return null;", span="405-405"];
d102 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="2: argument[0] == '-' && argument[1] == '-'", span="407-407"];
d103 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="2: return new LongOptionParser(ignoreUnknownArguments);", span="408-408"];
d104 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="1: argument[0] == '-'", span="410-410"];
d105 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="1: return new OptionGroupParser(ignoreUnknownArguments);", span="411-411"];
d106 [cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0, label="6: return null;", span="413-413"];
d113 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="2: StringUtil.IsNumeric(argument)", span="418-418"];
d114 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="0: return true;", span="419-419"];
d115 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="1: argument.Length > 0", span="421-421"];
d116 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="2: return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="422-422"];
d117 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0, label="2: return true;", span="424-424"];
d422 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="2: bool requiredRulesAllMet = true", span="1150-1150"];
d120 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="2: IList<string> list = new List<string>()", span="436-436"];
d121 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="1: ae.MoveNext()", span="438-438"];
d123 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="2: list.Add(ae.Current)", span="441-441"];
d126 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="2: return list;", span="448-448"];
d122 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="3: IsInputValue(ae.Current)", span="440-440"];
d124 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="0: !ae.MovePrevious()", span="445-445"];
d125 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0, label="0: throw new CommandLineParserException();", span="446-446"];
d133 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0, label="2: return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="453-453"];
d137 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, label="1: return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="458-458"];
d140 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0, label="6: return BooleanToParserState(value, false);", span="463-463"];
d143 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="1: value && !addMoveNextIfTrue", span="468-468"];
d144 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="6: return ParserState.Success;", span="469-469"];
d145 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="6: value", span="471-471"];
d146 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="0: return ParserState.Success | ParserState.MoveOnNextElement;", span="472-472"];
d147 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="3: return ParserState.Failure;", span="474-474"];
d150 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="0: !option.IsAttributeArrayCompatible", span="479-479"];
d151 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0, label="3: throw new CommandLineParserException();", span="480-480"];
d154 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="1: !option.IsArray && option.IsAttributeArrayCompatible", span="485-485"];
d155 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0, label="6: throw new CommandLineParserException();", span="486-486"];
d160 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="6: ShortName = shortName", span="501-501"];
d161 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0, label="2: LongName = longName", span="502-502"];
d167 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", color=green, community=0, label="2: _ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="545-545"];
d170 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: var parts = argumentEnumerator.Current.Substring(2).Split(new[] { '=' }, 2)", span="550-550"];
d171 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: var option = map[parts[0]]", span="551-551"];
d178 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="3: parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="563-563"];
d180 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: parts.Length == 2", span="566-566"];
d182 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: valueSetting = option.SetValue(parts[1], options)", span="570-570"];
d188 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: items.Insert(0, parts[1])", span="580-580"];
d204 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: parts.Length == 2", span="611-611"];
d172 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: bool valueSetting", span="552-552"];
d173 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: option == null", span="554-554"];
d175 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: option.IsDefined = true", span="557-557"];
d176 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="559-559"];
d177 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !option.IsBoolean", span="561-561"];
d181 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !option.IsArray", span="568-568"];
d184 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="572-572"];
d186 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="577-577"];
d189 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: valueSetting = option.SetValue(items, options)", span="582-582"];
d191 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="3: this.DefineOptionThatViolatesFormat(option)", span="584-584"];
d193 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !option.IsArray", span="590-590"];
d194 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="592-592"];
d196 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="594-594"];
d198 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="599-599"];
d200 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: valueSetting = option.SetValue(items, options)", span="603-603"];
d202 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="605-605"];
d206 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: valueSetting = option.SetValue(true, options)", span="614-614"];
d208 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="616-616"];
d179 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ParserState.Failure;", span="564-564"];
d183 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !valueSetting", span="571-571"];
d185 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="574-574"];
d187 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="579-579"];
d190 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !valueSetting", span="583-583"];
d192 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="586-586"];
d195 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !valueSetting", span="593-593"];
d197 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="596-596"];
d199 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="601-601"];
d201 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !valueSetting", span="604-604"];
d203 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="607-607"];
d207 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: !valueSetting", span="615-615"];
d209 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="618-618"];
d205 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ParserState.Failure;", span="612-612"];
d174 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="555-555"];
d218 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="1: Assumes.NotNullOrEmpty(value, ''value'')", span="630-630"];
d219 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="6: _data = value", span="632-632"];
d220 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0, label="1: _index = -1", span="633-633"];
d224 [cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0, label="2: _index = -1", span="674-674"];
d227 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="1: _index < (_data.Length - 1)", span="679-679"];
d228 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="1: _index++", span="681-681"];
d231 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="1: _index = _data.Length", span="685-685"];
d229 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="1: _currentElement = _data.Substring(_index, 1)", span="682-682"];
d232 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="2: return false;", span="687-687"];
d230 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0, label="1: return true;", span="683-683"];
d236 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="2: _index == -1", span="692-692"];
d237 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="1: throw new InvalidOperationException();", span="693-693"];
d238 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="1: _index > _data.Length", span="695-695"];
d239 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="0: throw new InvalidOperationException();", span="696-696"];
d240 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0, label="6: return _data.Substring(_index + 1);", span="698-698"];
d243 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0, label="2: throw new NotSupportedException();", span="703-703"];
d248 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", color=green, community=0, label="2: _ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="717-717"];
d251 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="722-722"];
d252 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: group.MoveNext()", span="723-723"];
d253 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: var option = map[group.Current]", span="725-725"];
d259 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="3: argumentEnumerator.IsLast && group.IsLast", span="735-735"];
d262 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !group.IsLast", span="739-739"];
d264 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="743-743"];
d270 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: items.Insert(0, @group.GetRemainingFromNext())", span="753-753"];
d288 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !@group.IsLast && map[@group.Next] == null", span="787-787"];
d254 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: option == null", span="726-726"];
d256 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: option.IsDefined = true", span="729-729"];
d257 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="731-731"];
d258 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !option.IsBoolean", span="733-733"];
d263 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !option.IsArray", span="741-741"];
d266 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="745-745"];
d268 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="750-750"];
d271 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: valueSetting = option.SetValue(items, options)", span="755-755"];
d273 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="3: this.DefineOptionThatViolatesFormat(option)", span="757-757"];
d277 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !option.IsArray", span="766-766"];
d278 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="768-768"];
d280 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: this.DefineOptionThatViolatesFormat(option)", span="770-770"];
d282 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="775-775"];
d284 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: valueSetting = option.SetValue(items, options)", span="779-779"];
d286 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: this.DefineOptionThatViolatesFormat(option)", span="781-781"];
d290 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !option.SetValue(true, options)", span="790-790"];
d260 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ParserState.Failure;", span="736-736"];
d261 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: bool valueSetting", span="738-738"];
d265 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !valueSetting", span="744-744"];
d267 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting);", span="747-747"];
d269 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="752-752"];
d272 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !valueSetting", span="756-756"];
d274 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="759-759"];
d275 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="762-762"];
d276 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ParserState.Failure;", span="763-763"];
d279 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: !valueSetting", span="769-769"];
d281 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="772-772"];
d283 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="777-777"];
d285 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: !valueSetting", span="780-780"];
d287 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ArgumentParser.BooleanToParserState(valueSetting);", span="783-783"];
d289 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="788-788"];
d291 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return ParserState.Failure;", span="791-791"];
d292 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="2: return ParserState.Success;", span="794-794"];
d255 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0, label="1: return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="727-727"];
d295 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: attribute != null", span="814-814"];
d296 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: _required = attribute.Required", span="816-816"];
d304 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="826-826"];
d297 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: _helpText = attribute.HelpText", span="817-817"];
d298 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: _shortName = attribute.ShortName", span="818-818"];
d299 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: _longName = attribute.LongName", span="819-819"];
d300 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: _mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="820-820"];
d301 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="2: _defaultValue = attribute.DefaultValue", span="821-821"];
d302 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="2: _hasDefaultValue = attribute.HasDefaultValue", span="822-822"];
d303 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="6: _attribute = attribute", span="823-823"];
d305 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: property != null", span="828-828"];
d306 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="2: _property = property", span="829-829"];
d307 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0, label="1: throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="831-831"];
d311 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="844-844"];
d312 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: list != null", span="845-845"];
d313 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="6: var map = new OptionMap(list.Count, settings)", span="847-847"];
d314 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: list", span="849-849"];
d316 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="852-852"];
d317 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: map.RawOptions = target", span="855-855"];
d318 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: return map;", span="857-857"];
d319 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: return null;", span="860-860"];
d315 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: pair != null && pair.Right != null", span="851-851"];
d322 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="2: _attribute is OptionListAttribute", span="865-865"];
d323 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="2: return SetValueList(value, options);", span="866-866"];
d324 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="2: ReflectionUtil.IsNullableType(_property.PropertyType)", span="868-868"];
d325 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="2: return SetNullableValue(value, options);", span="869-869"];
d326 [cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0, label="2: return SetValueScalar(value, options);", span="871-871"];
d332 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: Type elementType = _property.PropertyType.GetElementType()", span="876-876"];
d333 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: Array array = Array.CreateInstance(elementType, values.Count)", span="877-877"];
d337 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="1: array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="885-885"];
d334 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: int i = 0", span="879-879"];
d335 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: i < array.Length", span="879-879"];
d338 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="1: _property.SetValue(options, array, null)", span="886-886"];
d336 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: _setValueLock", span="883-883"];
d339 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: FormatException", span="889-889"];
d341 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: i++", span="879-879"];
d381 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="1: int i = 0", span="977-977"];
d621 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: i < args.Length", span="1806-1806"];
d342 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="1: return true;", span="895-895"];
d340 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0, label="2: return false;", span="891-891"];
d348 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="2: _property.PropertyType.IsEnum", span="902-902"];
d349 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: _setValueLock", span="904-904"];
d351 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: _setValueLock", span="911-911"];
d350 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: _property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="906-906"];
d353 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: InvalidCastException", span="917-917"];
d355 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: FormatException", span="921-921"];
d357 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: ArgumentException", span="925-925"];
d359 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: OverflowException", span="929-929"];
d361 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return true;", span="934-934"];
d352 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: _property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="913-913"];
d354 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return false;", span="919-919"];
d356 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return false;", span="923-923"];
d358 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="2: return false;", span="927-927"];
d360 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0, label="1: return false;", span="931-931"];
d364 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="1: var nc = new NullableConverter(_property.PropertyType)", span="939-939"];
d365 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="1: _setValueLock", span="943-943"];
d366 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="1: _property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="945-945"];
d367 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="2: Exception", span="950-950"];
d369 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="1: return true;", span="955-955"];
d368 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0, label="1: return false;", span="952-952"];
d373 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="2: _setValueLock", span="960-960"];
d374 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="2: _property.SetValue(options, value, null)", span="962-962"];
d375 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0, label="0: return true;", span="964-964"];
d377 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="2: _setValueLock", span="970-970"];
d378 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: _property.SetValue(options, new List<string>(), null)", span="972-972"];
d379 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="2: var fieldRef = (IList<string>)_property.GetValue(options, null)", span="974-974"];
d380 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="0: var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="975-975"];
d383 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="1: fieldRef.Add(values[i])", span="979-979"];
d382 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="5: i < values.Length", span="977-977"];
d384 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="2: i++", span="977-977"];
d385 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0, label="3: return true;", span="982-982"];
d389 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="2: _hasDefaultValue", span="988-988"];
d390 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="3: _setValueLock", span="990-990"];
d391 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="6: _property.SetValue(options, _defaultValue, null)", span="994-994"];
d392 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="6: Exception", span="996-996"];
d393 [cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0, label="1: throw new CommandLineParserException(''Bad default value.'', e);", span="998-998"];
d397 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0, label="2: BadOption = option", span="1071-1071"];
d400 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0, label="2: ++_count", span="1076-1076"];
d402 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: _settings = settings", span="1088-1088"];
d403 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: IEqualityComparer<string> comparer", span="1090-1090"];
d407 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: _names = new Dictionary<string, string>(capacity, comparer)", span="1096-1096"];
d405 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: comparer = StringComparer.Ordinal", span="1092-1092"];
d406 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: comparer = StringComparer.OrdinalIgnoreCase", span="1094-1094"];
d408 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="1: _map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1097-1097"];
d409 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: _settings.MutuallyExclusive", span="1099-1099"];
d410 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="0: _mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1101-1101"];
d404 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: _settings.CaseSensitive", span="1091-1091"];
d414 [cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0, label="1: return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1137-1137"];
d419 [cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0, label="1: _map.Values", span="1142-1142"];
d420 [cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0, label="0: option.SetDefault(this.RawOptions)", span="1144-1144"];
d423 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="1: _map.Values", span="1151-1151"];
d427 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="2: return requiredRulesAllMet;", span="1161-1161"];
d424 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="2: option.Required && !option.IsDefined", span="1153-1153"];
d426 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="1: requiredRulesAllMet = false", span="1156-1156"];
d425 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0, label="2: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1155-1155"];
d430 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="0: !_settings.MutuallyExclusive", span="1166-1166"];
d431 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="2: return true;", span="1167-1167"];
d432 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="1: _map.Values", span="1169-1169"];
d433 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="2: option.IsDefined && option.MutuallyExclusiveSet != null", span="1171-1171"];
d434 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="1: BuildMutuallyExclusiveMap(option)", span="1172-1172"];
d435 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="2: _mutuallyExclusiveSetMap.Values", span="1175-1175"];
d436 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="1: info.Occurrence > 1", span="1177-1177"];
d439 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="2: return true;", span="1184-1184"];
d437 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="2: BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1179-1179"];
d438 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0, label="2: return false;", span="1180-1180"];
d442 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="2: var setName = option.MutuallyExclusiveSet", span="1189-1189"];
d443 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="2: !_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1191-1191"];
d444 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="2: _mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1193-1193"];
d445 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0, label="1: _mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1196-1196"];
d449 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="2: var commandLineOptionsBase = options as CommandLineOptionsBase", span="1201-1201"];
d450 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="1: commandLineOptionsBase == null", span="1202-1202"];
d457 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="1: (commandLineOptionsBase).InternalLastPostParsingState.Errors.Add(error)", span="1215-1215"];
d452 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="2: var error = new ParsingError {\r\n                BadOption = {\r\n                    ShortName = option.ShortName, \r\n                    LongName = option.LongName\r\n                }\r\n            }", span="1205-1210"];
d453 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="2: required != null", span="1212-1212"];
d454 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="1: error.ViolatesRequired = required.Value", span="1212-1212"];
d456 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="1: error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1213-1213"];
d455 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="6: mutualExclusiveness != null", span="1213-1213"];
d451 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0, label="1: return;", span="1203-1203"];
d461 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="1: _left = left", span="1226-1226"];
d462 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0, label="1: _right = right", span="1227-1227"];
d465 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="2: int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1242-1242"];
d466 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="2: int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1243-1243"];
d467 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0, label="1: return leftHash ^ rightHash;", span="1245-1245"];
d471 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="1: var other = obj as Pair<TLeft, TRight>", span="1250-1250"];
d472 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="6: other == null", span="1252-1252"];
d474 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="2: return Equals(_left, other._left) && Equals(_right, other._right);", span="1255-1255"];
d473 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0, label="6: return false;", span="1253-1253"];
d477 [cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0, label="0: this.BadOption = new BadOptionInfo()", span="1266-1266"];
d479 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="2: this.BadOption = new BadOptionInfo(shortName, longName)", span="1273-1273"];
d480 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0, label="1: this.ViolatesFormat = format", span="1275-1275"];
d483 [cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0, label="1: Errors = new List<ParsingError>()", span="1319-1319"];
d486 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="6: Assumes.NotNull(value, ''value'')", span="1339-1339"];
d487 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="6: _data = value", span="1341-1341"];
d488 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="1: _index = -1", span="1342-1342"];
d489 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0, label="1: _endIndex = value.Length", span="1343-1343"];
d493 [cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0, label="1: _index = -1", span="1389-1389"];
d496 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="1: _index < _endIndex", span="1394-1394"];
d497 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="0: _index++", span="1396-1396"];
d499 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="2: return false;", span="1399-1399"];
d498 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0, label="1: return _index < _endIndex;", span="1397-1397"];
d502 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0, label="1: throw new NotSupportedException();", span="1404-1404"];
d505 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="1: _index <= 0", span="1409-1409"];
d506 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="1: throw new InvalidOperationException();", span="1411-1411"];
d507 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="1: _index <= _endIndex", span="1413-1413"];
d508 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="2: _index--", span="1415-1415"];
d510 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="2: return false;", span="1418-1418"];
d509 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0, label="1: return _index <= _endIndex;", span="1416-1416"];
d515 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="1: _target = target", span="1434-1434"];
d516 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="1: _vla = ValueListAttribute.GetAttribute(_target)", span="1435-1435"];
d517 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="1: IsValueListDefined", span="1436-1436"];
d518 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0, label="2: _valueList = ValueListAttribute.GetReference(_target)", span="1437-1437"];
d521 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="1: _vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1444-1444"];
d522 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="1: return false;", span="1445-1445"];
d523 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="2: this", span="1447-1447"];
d524 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="6: _valueList.Add(item)", span="1449-1449"];
d525 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0, label="6: return true;", span="1452-1452"];
d532 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0, label="1: LastPostParsingState = new PostParsingState()", span="1498-1498"];
d542 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0, label="6: CaseSensitive = caseSensitive", span="1557-1557"];
d545 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0, label="1: HelpWriter = helpWriter", span="1569-1569"];
d548 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="6: CaseSensitive = caseSensitive", span="1581-1581"];
d549 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0, label="1: HelpWriter = helpWriter", span="1582-1582"];
d552 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="1: CaseSensitive = caseSensitive", span="1593-1593"];
d553 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0, label="6: MutuallyExclusive = mutuallyExclusive", span="1594-1594"];
d556 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="1: CaseSensitive = caseSensitive", span="1607-1607"];
d557 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="1: MutuallyExclusive = mutuallyExclusive", span="1608-1608"];
d558 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0, label="1: HelpWriter = helpWriter", span="1609-1609"];
d561 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, label="6: CaseSensitive = caseSensitive", span="1623-1623"];
d562 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, label="1: MutuallyExclusive = mutuallyExclusive", span="1624-1624"];
d563 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, label="6: HelpWriter = helpWriter", span="1625-1625"];
d564 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0, label="2: IgnoreUnknownArguments = ignoreUnknownArguments", span="1626-1626"];
d567 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=green, community=0, label="6: _settings = new CommandLineParserSettings(false, false, Console.Error)", span="1677-1677"];
d570 [cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0, label="3: _settings = new CommandLineParserSettings()", span="1685-1685"];
d573 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: Assumes.NotNull(settings, ''settings'')", span="1696-1696"];
d574 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0, label="2: _settings = settings", span="1698-1698"];
d577 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0, label="2: return ParseArguments(args, options, _settings.HelpWriter);", span="1721-1721"];
d580 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="2: Assumes.NotNull(args, ''args'')", span="1739-1739"];
d581 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: Assumes.NotNull(options, ''options'')", span="1740-1740"];
d582 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="2: var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1742-1742"];
d583 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: pair != null && helpWriter != null", span="1744-1744"];
d584 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="2: ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1746-1746"];
d586 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1749-1749"];
d590 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: return DoParseArguments(args, options);", span="1756-1756"];
d585 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="1: string helpText", span="1748-1748"];
d589 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="2: return true;", span="1753-1753"];
d587 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="2: helpWriter.Write(helpText)", span="1750-1750"];
d588 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0, label="2: return false;", span="1751-1751"];
d596 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: bool hadError = false", span="1761-1761"];
d597 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: var optionMap = OptionInfo.CreateMap(options, _settings)", span="1762-1762"];
d615 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: hadError |= !optionMap.EnforceRules()", span="1797-1797"];
d598 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: optionMap.SetDefaults()", span="1763-1763"];
d606 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="3: ParserState result = parser.Parse(arguments, optionMap, options)", span="1775-1775"];
d599 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: var target = new TargetWrapper(options)", span="1764-1764"];
d600 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1766-1766"];
d612 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: target.IsValueListDefined", span="1786-1786"];
d613 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: !target.AddValueItemIfAllowed(argument)", span="1788-1788"];
d601 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: arguments.MoveNext()", span="1767-1767"];
d602 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="1: string argument = arguments.Current", span="1769-1769"];
d611 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="1: arguments.MoveNext()", span="1784-1784"];
d604 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="1772-1772"];
d605 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="3: parser != null", span="1773-1773"];
d607 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: (result & ParserState.Failure) == ParserState.Failure", span="1776-1776"];
d610 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: (result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1783-1783"];
d608 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="1: SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1778-1778"];
d609 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: hadError = true", span="1779-1779"];
d614 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: hadError = true", span="1790-1790"];
d616 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: return !hadError;", span="1799-1799"];
d603 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, label="2: !string.IsNullOrEmpty(argument)", span="1770-1770"];
d619 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="2: bool caseSensitive = _settings.CaseSensitive", span="1804-1804"];
d620 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="2: int i = 0", span="1806-1806"];
d623 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="2: ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1810-1810"];
d626 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1816-1816"];
d628 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="2: i++", span="1806-1806"];
d622 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: !string.IsNullOrEmpty(helpOption.ShortName)", span="1808-1808"];
d629 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="1: return false;", span="1821-1821"];
d625 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="2: !string.IsNullOrEmpty(helpOption.LongName)", span="1814-1814"];
d624 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: return true;", span="1811-1811"];
d627 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, label="0: return true;", span="1817-1817"];
d631 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, label="0: var commandLineOptionsBase = options as CommandLineOptionsBase", span="1826-1826"];
d632 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, label="0: commandLineOptionsBase != null", span="1827-1827"];
d633 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, label="2: (commandLineOptionsBase).InternalLastPostParsingState.Errors.AddRange(state)", span="1828-1828"];
d636 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="0: value == null", span="1839-1839"];
d637 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0, label="0: throw new ArgumentNullException(paramName);", span="1840-1840"];
d639 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="0: string.IsNullOrEmpty(value)", span="1845-1845"];
d640 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0, label="2: throw new ArgumentException(paramName);", span="1846-1846"];
d644 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="2: array.Length == 0", span="1851-1851"];
d645 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0, label="2: throw new ArgumentOutOfRangeException(paramName);", span="1852-1852"];
d648 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="1: IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1861-1861"];
d649 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: target != null", span="1862-1862"];
d657 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1875-1875"];
d658 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: return list;", span="1881-1881"];
d650 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: var propertiesInfo = target.GetType().GetProperties()", span="1864-1864"];
d651 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: propertiesInfo", span="1866-1866"];
d655 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1873-1873"];
d656 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="4: attribute != null", span="1874-1874"];
d652 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: property != null && (property.CanRead && property.CanWrite)", span="1868-1868"];
d654 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: setMethod != null && !setMethod.IsStatic", span="1871-1871"];
d653 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, label="2: var setMethod = property.GetSetMethod()", span="1870-1870"];
d664 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="2: var info = target.GetType().GetMethods()", span="1887-1887"];
d665 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="1: info", span="1889-1889"];
d666 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="2: !method.IsStatic", span="1891-1891"];
d668 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="2: attribute != null", span="1895-1895"];
d670 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="2: return null;", span="1900-1900"];
d667 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="2: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1893-1894"];
d669 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, label="2: return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1896-1896"];
d674 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="1: var info = target.GetType().GetMethods()", span="1906-1906"];
d675 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="1: info", span="1908-1908"];
d676 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="2: !method.IsStatic", span="1910-1910"];
d678 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="1: attribute != null", span="1914-1914"];
d680 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="2: return null;", span="1919-1919"];
d677 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="2: Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1912-1913"];
d679 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, label="2: return (TAttribute)attribute;", span="1915-1915"];
d683 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="1: IList<TAttribute> list = new List<TAttribute>()", span="1925-1925"];
d684 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="2: var info = target.GetType().GetProperties()", span="1926-1926"];
d691 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="2: list.Add((TAttribute)attribute)", span="1937-1937"];
d692 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="2: return list;", span="1942-1942"];
d685 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="2: info", span="1928-1928"];
d689 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="2: var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1935-1935"];
d690 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="4: attribute != null", span="1936-1936"];
d686 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="2: property != null && (property.CanRead && property.CanWrite)", span="1930-1930"];
d688 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="1: setMethod != null && !setMethod.IsStatic", span="1933-1933"];
d687 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0, label="1: var setMethod = property.GetSetMethod()", span="1932-1932"];
d695 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, label="1: Assembly assemblyFromWhichToPullInformation = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="1948-1948"];
d696 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, label="1: object[] a = assemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="1950-1950"];
d697 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, label="0: a == null || a.Length <= 0", span="1951-1951"];
d699 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, label="0: return (TAttribute)a[0];", span="1952-1952"];
d698 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0, label="2: return null;", span="1951-1951"];
d704 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0, label="0: return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="1957-1957"];
d708 [cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0, label="2: return new String(' ', count);", span="1965-1965"];
d711 [cluster="CommandLine.StringUtil.IsNumeric(string)", color=green, community=0, label="2: decimal temporary", span="1970-1970"];
d712 [cluster="CommandLine.StringUtil.IsNumeric(string)", color=green, community=0, label="1: return decimal.TryParse(value, out temporary);", span="1971-1971"];
d713 [cluster="CommandLine.StringUtil.IsNumeric(string)", label="Exit CommandLine.StringUtil.IsNumeric(string)", span="1968-1968"];
d714 [cluster="decimal.TryParse(string, out decimal)", label="Entry decimal.TryParse(string, out decimal)", span="0-0"];
m0_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m0_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="65-65"];
m0_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="66-66"];
m0_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''something'', options.StringValue)", span="69-69"];
m0_15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="70-70"];
m0_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="68-68"];
m0_16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63"];
m0_176 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m0_177 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="304-304"];
m0_178 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305"];
m0_179 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="307-307"];
m0_180 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m0_260 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m0_261 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="447-447"];
m0_262 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="448-448"];
m0_263 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="450-450"];
m0_264 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m0_242 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m0_243 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="415-415"];
m0_244 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="416-416"];
m0_246 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096.1024, options.DoubleValue)", span="419-419"];
m0_245 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="418-418"];
m0_247 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m0_284 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m0_285 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="483-483"];
m0_286 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="484-484"];
m0_287 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="486-486"];
m0_288 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m0_0 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m0_1 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44"];
m0_123 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33"];
m0_80 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m0_118 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
m0_254 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m0_255 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="435-435"];
m0_256 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="436-436"];
m0_258 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096.1024, options.DoubleValue)", span="439-439"];
m0_257 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="438-438"];
m0_259 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m0_90 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m0_283 [cluster="float.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
m0_248 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m0_249 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="425-425"];
m0_250 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="426-426"];
m0_252 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096.1024, options.DoubleValue)", span="429-429"];
m0_251 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="428-428"];
m0_253 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m0_91 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m0_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m0_8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] { }, null)", span="59-59"];
m0_9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57"];
m0_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m0_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
m0_74 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
m0_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''data.bin'', options.StringValue)", span="152-152"];
m0_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(FileAccess.ReadWrite, options.FileAccess)", span="153-153"];
m0_78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="154-154"];
m0_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="151-151"];
m0_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m0_224 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m0_225 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="385-385"];
m0_226 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="386-386"];
m0_228 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096, options.IntegerValue)", span="389-389"];
m0_227 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="388-388"];
m0_229 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m0_161 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m0_162 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="277-277"];
m0_163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278"];
m0_164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="280-280"];
m0_165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m0_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m0_30 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="90-90"];
m0_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="91-91"];
m0_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanThree)", span="94-94"];
m0_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanOne)", span="95-95"];
m0_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanTwo)", span="96-96"];
m0_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(65, options.NonBooleanValue)", span="97-97"];
m0_37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="98-98"];
m0_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="93-93"];
m0_38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88"];
m0_67 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m0_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="137-137"];
m0_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''-i=10'' }, options))", span="139-139"];
m0_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="140-140"];
m0_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135"];
m0_278 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m0_279 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="474-474"];
m0_280 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="475-475"];
m0_281 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="477-477"];
m0_282 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m0_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m0_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithOptionList()", span="118-118"];
m0_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="119-120"];
m0_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''string1'', options.SearchKeywords[0])", span="123-123"];
m0_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[0])", span="124-124"];
m0_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringTwo'', options.SearchKeywords[1])", span="125-125"];
m0_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[1])", span="126-126"];
m0_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''stringIII'', options.SearchKeywords[2])", span="127-127"];
m0_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[2])", span="128-128"];
m0_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''test-file.txt'', options.StringValue)", span="129-129"];
m0_63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.StringValue)", span="130-130"];
m0_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="122-122"];
m0_64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116"];
m0_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="58-58"];
m0_191 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m0_192 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="331-331"];
m0_193 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332"];
m0_194 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="334-334"];
m0_195 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m0_6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
m0_151 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m0_152 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263"];
m0_153 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="264-264"];
m0_154 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265"];
m0_156 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="268-268"];
m0_157 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="269-269"];
m0_155 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="267-267"];
m0_158 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m0_218 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m0_219 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="376-376"];
m0_220 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="377-377"];
m0_222 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096, options.IntegerValue)", span="380-380"];
m0_221 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="379-379"];
m0_223 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m0_19 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m0_39 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m0_65 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m0_135 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m0_136 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="241-241"];
m0_137 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="242-242"];
m0_138 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243"];
m0_140 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="246-246"];
m0_141 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''beta'', options.BetaValue)", span="247-247"];
m0_139 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="245-245"];
m0_142 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m0_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m0_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
m0_83 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
m0_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
m0_84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="162-162"];
m0_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
m0_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(10.986, options.DoubleValue)", span="166-166"];
m0_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="165-165"];
m0_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m0_130 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m0_131 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="230-230"];
m0_132 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231"];
m0_133 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="233-233"];
m0_134 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m0_20 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m0_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="76-76"];
m0_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="77-78"];
m0_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''another string'', options.StringValue)", span="81-81"];
m0_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(100, options.IntegerValue)", span="82-82"];
m0_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="83-83"];
m0_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="84-84"];
m0_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="80-80"];
m0_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74"];
m0_202 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m0_203 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="352-352"];
m0_204 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353"];
m0_206 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''parser.xml'', options.StringValue)", span="356-356"];
m0_207 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="357-357"];
m0_208 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(1, options.Items.Count)", span="358-358"];
m0_209 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.Items[0])", span="359-359"];
m0_205 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="355-355"];
m0_210 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m0_143 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683"];
m0_18 [cluster="Unk.AreEqual", file="CommandLineParserFixture.cs", label="Entry Unk.AreEqual", span=""];
m0_41 [cluster="Unk.IsFalse", file="CommandLineParserFixture.cs", label="Entry Unk.IsFalse", span=""];
m0_129 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="63-63"];
m0_145 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m0_146 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="253-253"];
m0_147 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="254-254"];
m0_148 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255"];
m0_149 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="257-257"];
m0_150 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m0_159 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m0_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m0_3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="52-52"];
m0_4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50"];
m0_119 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m0_120 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithBadDefaults()", span="213-213"];
m0_121 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214"];
m0_122 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m0_211 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m0_109 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
m0_196 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m0_197 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="342-342"];
m0_198 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343"];
m0_200 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''-'', options.StringValue)", span="346-346"];
m0_199 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="345-345"];
m0_201 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m0_5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m0_212 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m0_213 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new SimpleOptions()", span="367-367"];
m0_214 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="368-368"];
m0_216 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096, options.IntegerValue)", span="371-371"];
m0_215 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="370-370"];
m0_217 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m0_266 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m0_267 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="456-456"];
m0_268 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="457-457"];
m0_269 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserFailure(result)", span="459-459"];
m0_270 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m0_230 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m0_231 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="394-394"];
m0_232 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="395-395"];
m0_234 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096, options.IntegerValue)", span="398-398"];
m0_233 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="397-397"];
m0_235 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m0_66 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_42 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m0_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="104-104"];
m0_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="105-105"];
m0_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsTrue(options.BooleanTwo)", span="108-108"];
m0_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanOne)", span="109-109"];
m0_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.IsFalse(options.BooleanThree)", span="110-110"];
m0_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.NonBooleanValue)", span="111-111"];
m0_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="112-112"];
m0_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="107-107"];
m0_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102"];
m0_166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m0_167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="286-286"];
m0_168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287"];
m0_169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="289-289"];
m0_170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m0_181 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m0_182 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="313-313"];
m0_183 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314"];
m0_184 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="316-316"];
m0_185 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m0_144 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33"];
m0_236 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m0_237 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="405-405"];
m0_238 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="406-406"];
m0_240 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: Assert.AreEqual(-4096.1024, options.DoubleValue)", span="409-409"];
m0_239 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="1: base.AssertParserSuccess(result)", span="408-408"];
m0_241 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m0_289 [cluster="double.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m0_110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m0_111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaultArray()", span="200-200"];
m0_112 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201"];
m0_114 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(new string[] { ''a'', ''b'', ''c'' }, options.StringArrayValue)", span="204-204"];
m0_115 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(new int[] { 4, 5, 6 }, options.IntegerArrayValue)", span="205-205"];
m0_116 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(new double[] { 1.1, 2.2, 3.3 }, options.DoubleArrayValue)", span="206-206"];
m0_113 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="203-203"];
m0_117 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m0_272 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m0_273 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: var options = new NumberSetOptions()", span="465-465"];
m0_274 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: bool result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="466-466"];
m0_275 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs", label="2: base.AssertParserFailure(result)", span="468-468"];
m0_276 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m0_265 [cluster="short.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
m0_92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m0_93 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
m0_94 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
m0_99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
m0_95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="176-176"];
m0_96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
m0_98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(12.32982, options.NullableDoubleValue)", span="180-180"];
m0_97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="179-179"];
m0_100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m0_271 [cluster="int.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m0_186 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m0_187 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="322-322"];
m0_188 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323"];
m0_189 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="325-325"];
m0_190 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m0_101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m0_102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaults()", span="188-188"];
m0_103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189"];
m0_105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(''str'', options.StringValue)", span="192-192"];
m0_106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(9, options.IntegerValue)", span="193-193"];
m0_107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Assert.AreEqual(true, options.BooleanValue)", span="194-194"];
m0_104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="base.AssertParserSuccess(result)", span="191-191"];
m0_108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m0_277 [cluster="long.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m0_124 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m0_125 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="221-221"];
m0_126 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222"];
m0_127 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="224-224"];
m0_128 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m0_171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m0_172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="295-295"];
m0_173 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="bool result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296"];
m0_174 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="base.AssertParserFailure(result)", span="298-298"];
m0_175 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m0_40 [cluster="Unk.IsTrue", file="CommandLineParserFixture.cs", label="Entry Unk.IsTrue", span=""];
m1_47 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m1_49 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m1_48 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m1_20 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m1_59 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="387-387"];
m1_4 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="95-95"];
m1_5 [cluster="lambda expression", file="Program.cs", label="HelpText.DefaultParsingErrorsHandler(this, current)", span="95-95"];
m1_6 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="95-95"];
m1_52 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m1_7 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="Program.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="852-852"];
m1_55 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m1_57 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_51 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m1_58 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m1_18 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
m1_56 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_54 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_0 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Entry SampleApp.Program.Options.GetUsage()", span="93-93"];
m1_1 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="return HelpText.AutoBuild(this, (HelpText current) => HelpText.DefaultParsingErrorsHandler(this, current));", span="95-95"];
m1_2 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Exit SampleApp.Program.Options.GetUsage()", span="93-93"];
m1_46 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_50 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m1_16 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Entry SampleApp.Program.Options.Options()", span="55-55"];
m1_21 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m1_22 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="173-173"];
m1_24 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="176-176"];
m1_26 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="178-178"];
m1_27 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="179-179"];
m1_29 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="183-183"];
m1_30 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="184-184"];
m1_31 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="185-185"];
m1_32 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="186-186"];
m1_33 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="187-187"];
m1_36 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="191-191"];
m1_41 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="199-199"];
m1_42 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="200-200"];
m1_23 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="174-174"];
m1_25 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="177-177"];
m1_28 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="181-181"];
m1_34 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="189-189"];
m1_40 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="198-198"];
m1_35 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="190-190"];
m1_37 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(op)", span="193-193"];
m1_38 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="194-194"];
m1_39 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="196-196"];
m1_43 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="203-203"];
m1_44 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="204-204"];
m1_45 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m1_53 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m1_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="810-810"];
m1_19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719"];
m1_8 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Entry SampleApp.Program.Main(string[])", span="156-156"];
m1_9 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="161-161"];
m1_11 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="163-163"];
m1_10 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="162-162"];
m1_13 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="166-166"];
m1_12 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="164-164"];
m1_14 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="168-168"];
m1_15 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Exit SampleApp.Program.Main(string[])", span="156-156"];
m1_60 [file="Program.cs", label="SampleApp.Program.Options", span=""];
n704 -> n1  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n704 -> n4  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n704 -> n5  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n704 -> n6  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n704 -> d1  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n704 -> d4  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n704 -> d5  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n704 -> d6  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n705 -> n25  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> n27  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> n28  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> n30  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> n31  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> d25  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> d27  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> d30  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> d31  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n705 -> d28  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n706 -> n36  [color=red, key=1, label="CommandLine.OptionListAttribute", style=dashed];
n706 -> n39  [color=red, key=1, label="CommandLine.OptionListAttribute", style=dashed];
n706 -> d36  [color=green, key=1, label="CommandLine.OptionListAttribute", style=dashed];
n706 -> d39  [color=green, key=1, label="CommandLine.OptionListAttribute", style=dashed];
n707 -> n42  [color=red, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n707 -> n49  [color=red, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n707 -> d42  [color=green, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n707 -> d49  [color=green, key=1, label="CommandLine.ValueListAttribute", style=dashed];
n708 -> n87  [color=red, key=1, label="CommandLine.ArgumentParser", style=dashed];
n708 -> n93  [color=red, key=1, label="CommandLine.ArgumentParser", style=dashed];
n708 -> d87  [color=green, key=1, label="CommandLine.ArgumentParser", style=dashed];
n708 -> d93  [color=green, key=1, label="CommandLine.ArgumentParser", style=dashed];
n709 -> n155  [color=red, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n709 -> n156  [color=red, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n709 -> d160  [color=green, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n709 -> d161  [color=green, key=1, label="CommandLine.BadOptionInfo", style=dashed];
n710 -> n162  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> n169  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> n179  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> n186  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> n191  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> n197  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> n203  [color=red, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> d167  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> d184  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> d191  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> d196  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> d202  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> d208  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n710 -> d174  [color=green, key=1, label="CommandLine.LongOptionParser", style=dashed];
n711 -> n214  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n215  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n219  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n222  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n223  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n224  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n226  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n231  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n233  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> n235  [color=red, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d219  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d220  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d224  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d227  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d228  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d231  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d229  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d236  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d238  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n711 -> d240  [color=green, key=1, label="CommandLine.OneCharStringEnumerator", style=dashed];
n712 -> n243  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> n250  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> n261  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> n268  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> n275  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> n281  [color=red, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> d248  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> d266  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> d273  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> d280  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> d286  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n712 -> d255  [color=green, key=1, label="CommandLine.OptionGroupParser", style=dashed];
n713 -> n291  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n292  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n293  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n294  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n295  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n296  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n297  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n298  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n301  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n317  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n318  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n319  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n320  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n321  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n327  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n331  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n333  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n343  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n344  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n345  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n346  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n347  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n357  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n358  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n359  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n366  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n367  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n370  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n371  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n372  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n373  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n382  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n383  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> n384  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d296  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d297  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d298  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d299  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d300  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d301  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d302  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d303  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d306  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d322  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d323  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d325  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d326  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d324  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d332  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d338  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d336  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d348  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d350  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d352  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d349  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d351  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d364  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d366  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d365  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d373  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d374  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d377  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d378  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d379  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d380  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d389  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d391  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n713 -> d390  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n714 -> n390  [color=red, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n714 -> n393  [color=red, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n714 -> d397  [color=green, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n714 -> d400  [color=green, key=1, label="CommandLine.OptionMap.MutuallyExclusiveInfo", style=dashed];
n715 -> n395  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n397  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n400  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n401  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n402  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n403  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n407  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n412  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n413  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n416  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n418  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n423  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n425  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n427  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n428  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n430  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n436  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n437  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> n438  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d402  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d407  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d408  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d410  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d404  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d409  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d414  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d419  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d420  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d423  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d425  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d430  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d432  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d435  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d434  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d437  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d444  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d443  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n715 -> d445  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n716 -> n454  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> n455  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> n458  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> n459  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> n467  [color=red, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> d461  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> d462  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> d465  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> d466  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n716 -> d474  [color=green, key=1, label="CommandLine.Pair<TLeft, TRight>", style=dashed];
n717 -> n470  [color=red, key=1, label="CommandLine.ParsingError", style=dashed];
n717 -> n472  [color=red, key=1, label="CommandLine.ParsingError", style=dashed];
n717 -> n473  [color=red, key=1, label="CommandLine.ParsingError", style=dashed];
n717 -> d477  [color=green, key=1, label="CommandLine.ParsingError", style=dashed];
n717 -> d479  [color=green, key=1, label="CommandLine.ParsingError", style=dashed];
n717 -> d480  [color=green, key=1, label="CommandLine.ParsingError", style=dashed];
n718 -> n476  [color=red, key=1, label="CommandLine.PostParsingState", style=dashed];
n718 -> d483  [color=green, key=1, label="CommandLine.PostParsingState", style=dashed];
n719 -> n480  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n481  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n482  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n486  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n489  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n490  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n491  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n498  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n500  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n501  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> n502  [color=red, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d487  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d489  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d488  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d493  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d496  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d497  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d498  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d505  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d507  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d508  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n719 -> d509  [color=green, key=1, label="CommandLine.StringArrayEnumerator", style=dashed];
n720 -> n508  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> n509  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> n510  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> n511  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> n514  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> n516  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> n517  [color=red, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> d515  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> d516  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> d517  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> d518  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> d521  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> d524  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n720 -> d523  [color=green, key=1, label="CommandLine.TargetWrapper", style=dashed];
n721 -> n525  [color=red, key=1, label="CommandLine.CommandLineOptionsBase", style=dashed];
n721 -> d532  [color=green, key=1, label="CommandLine.CommandLineOptionsBase", style=dashed];
n722 -> n535  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n538  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n541  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n542  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n545  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n546  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n549  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n550  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n551  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n554  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n555  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n556  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> n557  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d542  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d545  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d548  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d549  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d552  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d553  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d556  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d557  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d558  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d561  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d562  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d563  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n722 -> d564  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n723 -> n560  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n563  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n567  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n570  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n577  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n583  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n590  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n597  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> n612  [color=red, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d567  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d570  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d574  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d577  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d584  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d590  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d597  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d604  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n723 -> d619  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> d1  [color=green, key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n2 -> n0  [color=blue, key=0, style=bold];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n5  [color=red, key=1, label=string, style=dashed];
n3 -> d4  [color=green, key=0, style=solid];
n3 -> d5  [color=green, key=1, label=string, style=dashed];
n4 -> n5  [color=red, key=0, style=solid];
n5 -> n6  [color=red, key=0, style=solid];
n6 -> n7  [color=red, key=0, style=solid];
n7 -> n3  [color=blue, key=0, style=bold];
n8 -> n9  [color=red, key=0, style=solid];
n8 -> n10  [color=red, key=1, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>", style=dashed];
n8 -> n13  [color=red, key=1, label=object, style=dashed];
n8 -> n572  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n8 -> d9  [color=green, key=0, style=solid];
n8 -> d10  [color=green, key=1, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>", style=dashed];
n8 -> d13  [color=green, key=1, label=object, style=dashed];
n9 -> n10  [color=red, key=0, style=solid];
n10 -> n11  [color=red, key=0, style=solid];
n10 -> n13  [color=red, key=1, label=method, style=dashed];
n13 -> n14  [color=red, key=0, style=solid];
n13 -> n17  [color=red, key=2, style=dotted];
n11 -> n12  [color=red, key=0, style=solid];
n11 -> n13  [color=red, key=0, style=solid];
n11 -> n15  [color=red, key=2, style=dotted];
n12 -> n14  [color=red, key=0, style=solid];
n12 -> n16  [color=red, key=2, style=dotted];
n15 -> n18  [color=red, key=0, style=solid];
n15 -> n10  [color=red, key=3, label="Parameter variable System.Reflection.MethodInfo value", style=bold];
n15 -> d10  [color=green, key=3, label="Parameter variable System.Reflection.MethodInfo value", style=bold];
n15 -> d18  [color=green, key=0, style=solid];
n14 -> n8  [color=blue, key=0, style=bold];
n18 -> n19  [color=red, key=0, style=solid];
n18 -> n20  [color=red, key=2, style=dotted];
n19 -> n15  [color=blue, key=0, style=bold];
n21 -> n22  [key=0, style=solid];
n22 -> n21  [color=blue, key=0, style=bold];
n23 -> n24  [color=red, key=0, style=solid];
n23 -> n25  [color=red, key=1, label=string, style=dashed];
n23 -> n26  [color=red, key=1, label=string, style=dashed];
n23 -> n27  [color=red, key=1, label=string, style=dashed];
n23 -> n30  [color=red, key=1, label=string, style=dashed];
n23 -> n31  [color=red, key=1, label=string, style=dashed];
n23 -> d24  [color=green, key=0, style=solid];
n23 -> d25  [color=green, key=1, label=string, style=dashed];
n23 -> d26  [color=green, key=1, label=string, style=dashed];
n23 -> d27  [color=green, key=1, label=string, style=dashed];
n23 -> d30  [color=green, key=1, label=string, style=dashed];
n23 -> d31  [color=green, key=1, label=string, style=dashed];
n24 -> n25  [color=red, key=0, style=solid];
n24 -> n26  [color=red, key=0, style=solid];
n24 -> n33  [color=red, key=2, style=dotted];
n25 -> n28  [color=red, key=0, style=solid];
n26 -> n27  [color=red, key=0, style=solid];
n26 -> n28  [color=red, key=0, style=solid];
n26 -> n33  [color=red, key=2, style=dotted];
n27 -> n28  [color=red, key=0, style=solid];
n30 -> n31  [color=red, key=0, style=solid];
n31 -> n32  [color=red, key=0, style=solid];
n28 -> n29  [color=red, key=0, style=solid];
n28 -> n30  [color=red, key=0, style=solid];
n29 -> n32  [color=red, key=0, style=solid];
n29 -> n34  [color=red, key=2, style=dotted];
n32 -> n23  [color=blue, key=0, style=bold];
n35 -> n36  [color=red, key=0, style=solid];
n35 -> d36  [color=green, key=0, style=solid];
n36 -> n37  [color=red, key=0, style=solid];
n37 -> n35  [color=blue, key=0, style=bold];
n38 -> n39  [color=red, key=0, style=solid];
n38 -> d39  [color=green, key=0, style=solid];
n39 -> n40  [color=red, key=0, style=solid];
n40 -> n38  [color=blue, key=0, style=bold];
n41 -> n42  [color=red, key=0, style=solid];
n41 -> d42  [color=green, key=0, style=solid];
n42 -> n43  [color=red, key=0, style=solid];
n43 -> n41  [color=blue, key=0, style=bold];
n44 -> n45  [color=red, key=0, style=solid];
n44 -> n47  [color=red, key=1, label="System.Type", style=dashed];
n44 -> n49  [color=red, key=1, label="System.Type", style=dashed];
n44 -> d45  [color=green, key=0, style=solid];
n44 -> d47  [color=green, key=1, label="System.Type", style=dashed];
n44 -> d49  [color=green, key=1, label="System.Type", style=dashed];
n45 -> n46  [color=red, key=0, style=solid];
n45 -> n47  [color=red, key=0, style=solid];
n47 -> n48  [color=red, key=0, style=solid];
n47 -> n49  [color=red, key=0, style=solid];
n47 -> n52  [color=red, key=2, style=dotted];
n49 -> n50  [color=red, key=0, style=solid];
n46 -> n50  [color=red, key=0, style=solid];
n46 -> n51  [color=red, key=2, style=dotted];
n48 -> n50  [color=red, key=0, style=solid];
n48 -> n53  [color=red, key=2, style=dotted];
n50 -> n44  [color=blue, key=0, style=bold];
n53 -> n528  [key=0, style=solid];
n54 -> n55  [color=red, key=0, style=solid];
n54 -> n56  [color=red, key=1, label=object, style=dashed];
n54 -> n59  [color=red, key=1, label=object, style=dashed];
n54 -> n60  [color=red, key=1, label=object, style=dashed];
n54 -> n58  [color=red, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
n54 -> d55  [color=green, key=0, style=solid];
n54 -> d56  [color=green, key=1, label=object, style=dashed];
n54 -> d59  [color=green, key=1, label=object, style=dashed];
n54 -> d60  [color=green, key=1, label=object, style=dashed];
n54 -> d58  [color=green, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
n55 -> n56  [color=red, key=0, style=solid];
n56 -> n57  [color=red, key=0, style=solid];
n56 -> n62  [color=red, key=2, style=dotted];
n56 -> n59  [color=red, key=1, label=concreteType, style=dashed];
n56 -> n60  [color=red, key=1, label=property, style=dashed];
n59 -> n60  [color=red, key=0, style=solid];
n59 -> n63  [color=red, key=2, style=dotted];
n59 -> n64  [color=red, key=2, style=dotted];
n60 -> n61  [color=red, key=0, style=solid];
n60 -> n65  [color=red, key=2, style=dotted];
n57 -> n58  [color=red, key=0, style=solid];
n57 -> n59  [color=red, key=0, style=solid];
n62 -> n76  [color=red, key=0, style=solid];
n62 -> n77  [color=red, key=1, label=object, style=dashed];
n62 -> n54  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n62 -> n55  [color=red, key=3, label="Parameter variable System.Type concreteType", style=bold];
n62 -> n58  [color=red, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
n62 -> d55  [color=green, key=3, label="Parameter variable System.Type concreteType", style=bold];
n62 -> d58  [color=green, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
n62 -> d76  [color=green, key=0, style=solid];
n62 -> d77  [color=green, key=1, label=object, style=dashed];
n58 -> n61  [color=red, key=0, style=solid];
n61 -> n54  [color=blue, key=0, style=bold];
n66 -> n67  [color=red, key=0, style=solid];
n66 -> n58  [color=red, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
n66 -> d58  [color=green, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
n66 -> d67  [color=green, key=0, style=solid];
n67 -> n68  [color=red, key=0, style=solid];
n67 -> n75  [color=red, key=2, style=dotted];
n67 -> n70  [color=red, key=1, label=list, style=dashed];
n67 -> n72  [color=red, key=1, label=list, style=dashed];
n68 -> n69  [color=red, key=0, style=solid];
n68 -> n70  [color=red, key=0, style=solid];
n75 -> n641  [color=red, key=0, style=solid];
n75 -> n642  [color=red, key=1, label=object, style=dashed];
n75 -> n643  [color=red, key=1, label=object, style=dashed];
n75 -> n66  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n75 -> n62  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n75 -> n305  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n75 -> d648  [color=green, key=0, style=solid];
n75 -> d649  [color=green, key=1, label=object, style=dashed];
n75 -> d650  [color=green, key=1, label=object, style=dashed];
n70 -> n71  [color=red, key=0, style=solid];
n70 -> n72  [color=red, key=0, style=solid];
n72 -> n73  [color=red, key=0, style=solid];
n69 -> n74  [color=red, key=0, style=solid];
n71 -> n74  [color=red, key=0, style=solid];
n71 -> n34  [color=red, key=2, style=dotted];
n73 -> n74  [color=red, key=0, style=solid];
n74 -> n66  [color=blue, key=0, style=bold];
n76 -> n77  [color=red, key=0, style=solid];
n77 -> n78  [color=red, key=0, style=solid];
n77 -> n75  [color=red, key=2, style=dotted];
n77 -> n80  [color=red, key=1, label=list, style=dashed];
n77 -> n82  [color=red, key=1, label=list, style=dashed];
n78 -> n79  [color=red, key=0, style=solid];
n78 -> n80  [color=red, key=0, style=solid];
n80 -> n81  [color=red, key=0, style=solid];
n80 -> n82  [color=red, key=0, style=solid];
n82 -> n83  [color=red, key=0, style=solid];
n82 -> n84  [color=red, key=1, label=pairZero, style=dashed];
n79 -> n85  [color=red, key=0, style=solid];
n81 -> n85  [color=red, key=0, style=solid];
n81 -> n34  [color=red, key=2, style=dotted];
n83 -> n84  [color=red, key=0, style=solid];
n83 -> n85  [color=red, key=1, label="out System.Type", style=dashed];
n84 -> n85  [color=red, key=0, style=solid];
n85 -> n62  [color=blue, key=0, style=bold];
n86 -> n87  [color=red, key=0, style=solid];
n86 -> d87  [color=green, key=0, style=solid];
n87 -> n88  [color=red, key=0, style=solid];
n87 -> n89  [color=red, key=2, style=dotted];
n88 -> n86  [color=blue, key=0, style=bold];
n90 -> n91  [key=0, style=solid];
n90 -> n164  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n90 -> n245  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n90 -> n593  [color=red, key=3, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator", style=bold];
n90 -> n590  [color=red, key=3, label="Parameter variable CommandLine.OptionMap map", style=bold];
n90 -> n587  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n90 -> d597  [color=green, key=3, label="Parameter variable CommandLine.OptionMap map", style=bold];
n90 -> d600  [color=green, key=3, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator", style=bold];
n91 -> n90  [color=blue, key=0, style=bold];
n92 -> n93  [color=red, key=0, style=solid];
n92 -> n166  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n92 -> n248  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n92 -> d93  [color=green, key=0, style=solid];
n92 -> d171  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n92 -> d253  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n93 -> n94  [color=red, key=0, style=solid];
n93 -> n95  [color=red, key=2, style=dotted];
n93 -> n96  [color=red, key=2, style=dotted];
n94 -> n92  [color=blue, key=0, style=bold];
n95 -> n472  [color=red, key=0, style=solid];
n95 -> n473  [color=red, key=1, label=bool, style=dashed];
n95 -> d479  [color=green, key=0, style=solid];
n95 -> d480  [color=green, key=1, label=bool, style=dashed];
n97 -> n98  [color=red, key=0, style=solid];
n97 -> n100  [color=red, key=1, label=string, style=dashed];
n97 -> n101  [color=red, key=1, label=bool, style=dashed];
n97 -> n102  [color=red, key=1, label=string, style=dashed];
n97 -> n103  [color=red, key=1, label=bool, style=dashed];
n97 -> n58  [color=red, key=3, label="method methodReturn CommandLine.ArgumentParser Create", style=bold];
n97 -> n595  [color=red, key=3, label="Parameter variable string argument", style=bold];
n97 -> d58  [color=green, key=3, label="method methodReturn CommandLine.ArgumentParser Create", style=bold];
n97 -> d98  [color=green, key=0, style=solid];
n97 -> d100  [color=green, key=1, label=string, style=dashed];
n97 -> d102  [color=green, key=1, label=string, style=dashed];
n97 -> d103  [color=green, key=1, label=bool, style=dashed];
n97 -> d104  [color=green, key=1, label=string, style=dashed];
n97 -> d105  [color=green, key=1, label=bool, style=dashed];
n97 -> d602  [color=green, key=3, label="Parameter variable string argument", style=bold];
n98 -> n99  [color=red, key=0, style=solid];
n98 -> n100  [color=red, key=0, style=solid];
n98 -> n106  [color=red, key=2, style=dotted];
n100 -> n101  [color=red, key=0, style=solid];
n100 -> n102  [color=red, key=0, style=solid];
n101 -> n105  [color=red, key=0, style=solid];
n101 -> n107  [color=red, key=2, style=dotted];
n102 -> n103  [color=red, key=0, style=solid];
n102 -> n104  [color=red, key=0, style=solid];
n103 -> n105  [color=red, key=0, style=solid];
n103 -> n108  [color=red, key=2, style=dotted];
n99 -> n105  [color=red, key=0, style=solid];
n104 -> n105  [color=red, key=0, style=solid];
n105 -> n97  [color=blue, key=0, style=bold];
n108 -> n243  [color=red, key=0, style=solid];
n108 -> d248  [color=green, key=0, style=solid];
n107 -> n162  [color=red, key=0, style=solid];
n107 -> d167  [color=green, key=0, style=solid];
n109 -> n110  [color=red, key=0, style=solid];
n109 -> n111  [color=red, key=1, label=string, style=dashed];
n109 -> n112  [color=red, key=3, label="method methodReturn bool IsInputValue", style=bold];
n109 -> d113  [color=green, key=0, style=solid];
n109 -> d115  [color=green, key=1, label=string, style=dashed];
n109 -> d116  [color=green, key=1, label=string, style=dashed];
n109 -> d114  [color=green, key=3, label="method methodReturn bool IsInputValue", style=bold];
n110 -> n111  [color=red, key=0, style=solid];
n110 -> n112  [color=red, key=0, style=solid];
n111 -> n113  [color=red, key=0, style=solid];
n111 -> n106  [color=red, key=2, style=dotted];
n112 -> n113  [color=red, key=0, style=solid];
n113 -> n109  [color=blue, key=0, style=bold];
n114 -> n115  [color=red, key=0, style=solid];
n114 -> n116  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n117  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n118  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n119  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> n164  [color=darkorchid, key=3, label="Parameter variable CommandLine.IArgumentEnumerator ae", style=bold];
n114 -> n245  [color=darkorchid, key=3, label="Parameter variable CommandLine.IArgumentEnumerator ae", style=bold];
n114 -> d120  [color=green, key=0, style=solid];
n114 -> d121  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> d122  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> d123  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n114 -> d124  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n115 -> n116  [color=red, key=0, style=solid];
n115 -> n89  [color=red, key=2, style=dotted];
n115 -> n118  [color=red, key=1, label=list, style=dashed];
n115 -> n121  [color=red, key=1, label=list, style=dashed];
n116 -> n117  [color=red, key=0, style=solid];
n116 -> n119  [color=red, key=0, style=solid];
n116 -> n123  [color=red, key=2, style=dotted];
n117 -> n118  [color=red, key=0, style=solid];
n117 -> n119  [color=red, key=0, style=solid];
n117 -> n109  [color=red, key=2, style=dotted];
n118 -> n116  [color=red, key=0, style=solid];
n118 -> n124  [color=red, key=2, style=dotted];
n119 -> n120  [color=red, key=0, style=solid];
n119 -> n121  [color=red, key=0, style=solid];
n119 -> n125  [color=red, key=2, style=dotted];
n121 -> n122  [color=red, key=0, style=solid];
n123 -> n160  [key=0, style=solid];
n123 -> n221  [color=darkorchid, key=3, label="method methodReturn bool MoveNext", style=bold];
n123 -> n488  [color=darkorchid, key=3, label="method methodReturn bool MoveNext", style=bold];
n120 -> n122  [color=red, key=0, style=solid];
n120 -> n126  [color=red, key=2, style=dotted];
n125 -> n161  [key=0, style=solid];
n125 -> n237  [color=darkorchid, key=3, label="method methodReturn bool MovePrevious", style=bold];
n125 -> n497  [color=darkorchid, key=3, label="method methodReturn bool MovePrevious", style=bold];
n122 -> n114  [color=blue, key=0, style=bold];
n126 -> n527  [key=0, style=solid];
n127 -> n128  [color=red, key=0, style=solid];
n127 -> n612  [color=red, key=3, label="Parameter variable bool caseSensitive", style=bold];
n127 -> d133  [color=green, key=0, style=solid];
n127 -> d619  [color=green, key=3, label="Parameter variable bool caseSensitive", style=bold];
n128 -> n129  [color=red, key=0, style=solid];
n128 -> n130  [color=red, key=2, style=dotted];
n129 -> n127  [color=blue, key=0, style=bold];
n131 -> n132  [color=red, key=0, style=solid];
n131 -> n612  [color=red, key=3, label="Parameter variable bool caseSensitive", style=bold];
n131 -> d137  [color=green, key=0, style=solid];
n131 -> d619  [color=green, key=3, label="Parameter variable bool caseSensitive", style=bold];
n132 -> n133  [color=red, key=0, style=solid];
n132 -> n130  [color=red, key=2, style=dotted];
n133 -> n131  [color=blue, key=0, style=bold];
n134 -> n135  [color=red, key=0, style=solid];
n134 -> n137  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n134 -> n167  [color=red, key=3, label="Parameter variable bool value", style=bold];
n134 -> n256  [color=red, key=3, label="Parameter variable bool value", style=bold];
n134 -> d140  [color=green, key=0, style=solid];
n134 -> d172  [color=green, key=3, label="Parameter variable bool value", style=bold];
n134 -> d261  [color=green, key=3, label="Parameter variable bool value", style=bold];
n135 -> n136  [color=red, key=0, style=solid];
n135 -> n137  [color=red, key=2, style=dotted];
n136 -> n134  [color=blue, key=0, style=bold];
n137 -> n138  [color=red, key=0, style=solid];
n137 -> n140  [color=red, key=1, label=bool, style=dashed];
n137 -> n134  [color=darkorchid, key=3, label="Parameter variable bool value", style=bold];
n137 -> n167  [color=red, key=3, label="Parameter variable bool value", style=bold];
n137 -> n256  [color=red, key=3, label="Parameter variable bool value", style=bold];
n137 -> n112  [color=red, key=3, label="Parameter variable bool addMoveNextIfTrue", style=bold];
n137 -> n139  [color=red, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n137 -> n141  [color=red, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n137 -> n142  [color=red, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n137 -> d114  [color=green, key=3, label="Parameter variable bool addMoveNextIfTrue", style=bold];
n137 -> d143  [color=green, key=0, style=solid];
n137 -> d145  [color=green, key=1, label=bool, style=dashed];
n137 -> d144  [color=green, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n137 -> d146  [color=green, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n137 -> d147  [color=green, key=3, label="method methodReturn CommandLine.ParserState BooleanToParserState", style=bold];
n137 -> d172  [color=green, key=3, label="Parameter variable bool value", style=bold];
n137 -> d261  [color=green, key=3, label="Parameter variable bool value", style=bold];
n138 -> n139  [color=red, key=0, style=solid];
n138 -> n140  [color=red, key=0, style=solid];
n140 -> n141  [color=red, key=0, style=solid];
n140 -> n142  [color=red, key=0, style=solid];
n139 -> n143  [color=red, key=0, style=solid];
n141 -> n143  [color=red, key=0, style=solid];
n142 -> n143  [color=red, key=0, style=solid];
n143 -> n137  [color=blue, key=0, style=bold];
n144 -> n145  [color=red, key=0, style=solid];
n144 -> n166  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n144 -> n248  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n144 -> d150  [color=green, key=0, style=solid];
n144 -> d171  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n144 -> d253  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n145 -> n146  [color=red, key=0, style=solid];
n145 -> n147  [color=red, key=0, style=solid];
n146 -> n147  [color=red, key=0, style=solid];
n146 -> n126  [color=red, key=2, style=dotted];
n147 -> n144  [color=blue, key=0, style=bold];
n148 -> n149  [color=red, key=0, style=solid];
n148 -> n166  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n148 -> n248  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n148 -> d154  [color=green, key=0, style=solid];
n148 -> d171  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n148 -> d253  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n149 -> n150  [color=red, key=0, style=solid];
n149 -> n151  [color=red, key=0, style=solid];
n150 -> n151  [color=red, key=0, style=solid];
n150 -> n126  [color=red, key=2, style=dotted];
n151 -> n148  [color=blue, key=0, style=bold];
n152 -> n153  [key=0, style=solid];
n153 -> n152  [color=blue, key=0, style=bold];
n154 -> n155  [color=red, key=0, style=solid];
n154 -> n156  [color=red, key=1, label=string, style=dashed];
n154 -> d160  [color=green, key=0, style=solid];
n154 -> d161  [color=green, key=1, label=string, style=dashed];
n155 -> n156  [color=red, key=0, style=solid];
n156 -> n157  [color=red, key=0, style=solid];
n157 -> n154  [color=blue, key=0, style=bold];
n158 -> n159  [key=0, style=solid];
n158 -> n230  [color=darkorchid, key=3, label="method methodReturn string GetRemainingFromNext", style=bold];
n158 -> n494  [color=darkorchid, key=3, label="method methodReturn string GetRemainingFromNext", style=bold];
n159 -> n158  [color=blue, key=0, style=bold];
n160 -> n123  [color=blue, key=0, style=bold];
n161 -> n125  [color=blue, key=0, style=bold];
n162 -> n163  [color=red, key=0, style=solid];
n163 -> n107  [color=blue, key=0, style=bold];
n164 -> n165  [color=red, key=0, style=solid];
n164 -> n166  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n164 -> n173  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> n177  [color=red, key=1, label=object, style=dashed];
n164 -> n182  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> n184  [color=red, key=1, label=object, style=dashed];
n164 -> n189  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> n194  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> n195  [color=red, key=1, label=object, style=dashed];
n164 -> n201  [color=red, key=1, label=object, style=dashed];
n164 -> n90  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n164 -> n142  [color=red, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n164 -> n134  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n164 -> n137  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n164 -> d147  [color=green, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n164 -> d170  [color=green, key=0, style=solid];
n164 -> d171  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n164 -> d178  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> d182  [color=green, key=1, label=object, style=dashed];
n164 -> d187  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> d189  [color=green, key=1, label=object, style=dashed];
n164 -> d194  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> d199  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n164 -> d200  [color=green, key=1, label=object, style=dashed];
n164 -> d206  [color=green, key=1, label=object, style=dashed];
n165 -> n166  [color=red, key=0, style=solid];
n165 -> n206  [color=red, key=2, style=dotted];
n165 -> n207  [color=red, key=2, style=dotted];
n165 -> n173  [color=red, key=1, label=parts, style=dashed];
n165 -> n175  [color=red, key=1, label=parts, style=dashed];
n165 -> n177  [color=red, key=1, label=parts, style=dashed];
n165 -> n183  [color=red, key=1, label=parts, style=dashed];
n165 -> n199  [color=red, key=1, label=parts, style=dashed];
n166 -> n167  [color=red, key=0, style=solid];
n166 -> n168  [color=red, key=1, label=option, style=dashed];
n166 -> n170  [color=red, key=1, label=option, style=dashed];
n166 -> n171  [color=red, key=1, label=option, style=dashed];
n166 -> n172  [color=red, key=1, label=option, style=dashed];
n166 -> n176  [color=red, key=1, label=option, style=dashed];
n166 -> n177  [color=red, key=1, label=option, style=dashed];
n166 -> n179  [color=red, key=1, label=option, style=dashed];
n166 -> n181  [color=red, key=1, label=option, style=dashed];
n166 -> n184  [color=red, key=1, label=option, style=dashed];
n166 -> n186  [color=red, key=1, label=option, style=dashed];
n166 -> n188  [color=red, key=1, label=option, style=dashed];
n166 -> n189  [color=red, key=1, label=option, style=dashed];
n166 -> n191  [color=red, key=1, label=option, style=dashed];
n166 -> n193  [color=red, key=1, label=option, style=dashed];
n166 -> n195  [color=red, key=1, label=option, style=dashed];
n166 -> n197  [color=red, key=1, label=option, style=dashed];
n166 -> n201  [color=red, key=1, label=option, style=dashed];
n166 -> n203  [color=red, key=1, label=option, style=dashed];
n173 -> n174  [color=red, key=0, style=solid];
n173 -> n175  [color=red, key=0, style=solid];
n173 -> n109  [color=red, key=2, style=dotted];
n177 -> n178  [color=red, key=0, style=solid];
n177 -> n208  [color=red, key=2, style=dotted];
n177 -> n180  [color=red, key=1, label=valueSetting, style=dashed];
n182 -> n183  [color=red, key=0, style=solid];
n182 -> n114  [color=red, key=2, style=dotted];
n182 -> n184  [color=red, key=1, label=items, style=dashed];
n184 -> n185  [color=red, key=0, style=solid];
n184 -> n210  [color=red, key=2, style=dotted];
n184 -> n187  [color=red, key=1, label=valueSetting, style=dashed];
n189 -> n190  [color=red, key=0, style=solid];
n189 -> n208  [color=red, key=2, style=dotted];
n189 -> n192  [color=red, key=1, label=valueSetting, style=dashed];
n194 -> n195  [color=red, key=0, style=solid];
n194 -> n114  [color=red, key=2, style=dotted];
n195 -> n196  [color=red, key=0, style=solid];
n195 -> n210  [color=red, key=2, style=dotted];
n195 -> n198  [color=red, key=1, label=valueSetting, style=dashed];
n201 -> n202  [color=red, key=0, style=solid];
n201 -> n211  [color=red, key=2, style=dotted];
n201 -> n204  [color=red, key=1, label=valueSetting, style=dashed];
n175 -> n176  [color=red, key=0, style=solid];
n175 -> n188  [color=red, key=0, style=solid];
n183 -> n184  [color=red, key=0, style=solid];
n183 -> n209  [color=red, key=2, style=dotted];
n199 -> n200  [color=red, key=0, style=solid];
n199 -> n201  [color=red, key=0, style=solid];
n167 -> n168  [color=red, key=0, style=solid];
n167 -> n208  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n167 -> n210  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n167 -> n211  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n168 -> n169  [color=red, key=0, style=solid];
n168 -> n170  [color=red, key=0, style=solid];
n170 -> n171  [color=red, key=0, style=solid];
n171 -> n172  [color=red, key=0, style=solid];
n171 -> n148  [color=red, key=2, style=dotted];
n172 -> n173  [color=red, key=0, style=solid];
n172 -> n199  [color=red, key=0, style=solid];
n176 -> n177  [color=red, key=0, style=solid];
n176 -> n181  [color=red, key=0, style=solid];
n179 -> n180  [color=red, key=0, style=solid];
n179 -> n92  [color=red, key=2, style=dotted];
n181 -> n182  [color=red, key=0, style=solid];
n181 -> n144  [color=red, key=2, style=dotted];
n186 -> n187  [color=red, key=0, style=solid];
n186 -> n92  [color=red, key=2, style=dotted];
n188 -> n189  [color=red, key=0, style=solid];
n188 -> n193  [color=red, key=0, style=solid];
n191 -> n192  [color=red, key=0, style=solid];
n191 -> n92  [color=red, key=2, style=dotted];
n193 -> n194  [color=red, key=0, style=solid];
n193 -> n144  [color=red, key=2, style=dotted];
n197 -> n198  [color=red, key=0, style=solid];
n197 -> n92  [color=red, key=2, style=dotted];
n203 -> n204  [color=red, key=0, style=solid];
n203 -> n92  [color=red, key=2, style=dotted];
n169 -> n205  [color=red, key=0, style=solid];
n174 -> n205  [color=red, key=0, style=solid];
n178 -> n179  [color=red, key=0, style=solid];
n178 -> n180  [color=red, key=0, style=solid];
n208 -> n317  [color=red, key=0, style=solid];
n208 -> n318  [color=red, key=1, label=string, style=dashed];
n208 -> n320  [color=red, key=1, label=string, style=dashed];
n208 -> n321  [color=red, key=1, label=string, style=dashed];
n208 -> n164  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n208 -> n245  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n208 -> n158  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n208 -> n323  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
n208 -> n325  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
n208 -> n326  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
n208 -> d322  [color=green, key=0, style=solid];
n208 -> d323  [color=green, key=1, label=string, style=dashed];
n208 -> d325  [color=green, key=1, label=string, style=dashed];
n208 -> d326  [color=green, key=1, label=string, style=dashed];
n180 -> n205  [color=red, key=0, style=solid];
n180 -> n134  [color=red, key=2, style=dotted];
n185 -> n186  [color=red, key=0, style=solid];
n185 -> n187  [color=red, key=0, style=solid];
n210 -> n327  [color=red, key=0, style=solid];
n210 -> n328  [color=red, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n210 -> n332  [color=red, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n210 -> n333  [color=red, key=1, label=object, style=dashed];
n210 -> n182  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> n194  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> n264  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> n278  [color=red, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> n164  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n210 -> n245  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n210 -> n112  [color=red, key=3, label="method methodReturn bool SetValue", style=bold];
n210 -> d114  [color=green, key=3, label="method methodReturn bool SetValue", style=bold];
n210 -> d187  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> d199  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> d269  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> d283  [color=green, key=3, label="Parameter variable System.Collections.Generic.IList<string> values", style=bold];
n210 -> d332  [color=green, key=0, style=solid];
n210 -> d333  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n210 -> d337  [color=green, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n210 -> d338  [color=green, key=1, label=object, style=dashed];
n187 -> n205  [color=red, key=0, style=solid];
n187 -> n134  [color=red, key=2, style=dotted];
n190 -> n191  [color=red, key=0, style=solid];
n190 -> n192  [color=red, key=0, style=solid];
n192 -> n205  [color=red, key=0, style=solid];
n192 -> n137  [color=red, key=2, style=dotted];
n196 -> n197  [color=red, key=0, style=solid];
n196 -> n198  [color=red, key=0, style=solid];
n198 -> n205  [color=red, key=0, style=solid];
n198 -> n134  [color=red, key=2, style=dotted];
n200 -> n205  [color=red, key=0, style=solid];
n202 -> n203  [color=red, key=0, style=solid];
n202 -> n204  [color=red, key=0, style=solid];
n211 -> n366  [color=red, key=0, style=solid];
n211 -> n367  [color=red, key=1, label=bool, style=dashed];
n211 -> n112  [color=red, key=3, label="method methodReturn bool SetValue", style=bold];
n211 -> n164  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n211 -> n245  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n211 -> d114  [color=green, key=3, label="method methodReturn bool SetValue", style=bold];
n211 -> d373  [color=green, key=0, style=solid];
n211 -> d374  [color=green, key=1, label=bool, style=dashed];
n204 -> n205  [color=red, key=0, style=solid];
n204 -> n134  [color=red, key=2, style=dotted];
n205 -> n164  [color=blue, key=0, style=bold];
n212 -> n213  [color=red, key=0, style=solid];
n212 -> n214  [color=red, key=1, label=string, style=dashed];
n212 -> d218  [color=green, key=0, style=solid];
n212 -> d219  [color=green, key=1, label=string, style=dashed];
n213 -> n214  [color=red, key=0, style=solid];
n213 -> n217  [color=red, key=2, style=dotted];
n214 -> n215  [color=red, key=0, style=solid];
n217 -> n632  [color=red, key=0, style=solid];
n217 -> n633  [color=red, key=1, label=string, style=dashed];
n217 -> n212  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n217 -> n213  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n217 -> d218  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n217 -> d639  [color=green, key=0, style=solid];
n217 -> d640  [color=green, key=1, label=string, style=dashed];
n215 -> n216  [color=red, key=0, style=solid];
n216 -> n212  [color=blue, key=0, style=bold];
n218 -> n219  [color=red, key=0, style=solid];
n218 -> d224  [color=green, key=0, style=solid];
n219 -> n220  [color=red, key=0, style=solid];
n220 -> n218  [color=blue, key=0, style=bold];
n221 -> n222  [color=red, key=0, style=solid];
n221 -> n112  [color=red, key=3, label="method methodReturn bool MoveNext", style=bold];
n221 -> d114  [color=green, key=3, label="method methodReturn bool MoveNext", style=bold];
n221 -> d227  [color=green, key=0, style=solid];
n222 -> n223  [color=red, key=0, style=solid];
n222 -> n226  [color=red, key=0, style=solid];
n223 -> n224  [color=red, key=0, style=solid];
n226 -> n227  [color=red, key=0, style=solid];
n224 -> n225  [color=red, key=0, style=solid];
n224 -> n229  [color=red, key=2, style=dotted];
n225 -> n228  [color=red, key=0, style=solid];
n227 -> n228  [color=red, key=0, style=solid];
n228 -> n221  [color=blue, key=0, style=bold];
n230 -> n231  [color=red, key=0, style=solid];
n230 -> d236  [color=green, key=0, style=solid];
n231 -> n232  [color=red, key=0, style=solid];
n231 -> n233  [color=red, key=0, style=solid];
n232 -> n236  [color=red, key=0, style=solid];
n232 -> n34  [color=red, key=2, style=dotted];
n233 -> n234  [color=red, key=0, style=solid];
n233 -> n235  [color=red, key=0, style=solid];
n234 -> n236  [color=red, key=0, style=solid];
n234 -> n34  [color=red, key=2, style=dotted];
n235 -> n236  [color=red, key=0, style=solid];
n235 -> n206  [color=red, key=2, style=dotted];
n236 -> n230  [color=blue, key=0, style=bold];
n237 -> n238  [color=red, key=0, style=solid];
n237 -> d243  [color=green, key=0, style=solid];
n238 -> n239  [color=red, key=0, style=solid];
n238 -> n240  [color=red, key=2, style=dotted];
n239 -> n237  [color=blue, key=0, style=bold];
n241 -> n242  [key=0, style=solid];
n242 -> n241  [color=blue, key=0, style=bold];
n243 -> n244  [color=red, key=0, style=solid];
n244 -> n108  [color=blue, key=0, style=bold];
n245 -> n246  [color=red, key=0, style=solid];
n245 -> n248  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n245 -> n254  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> n259  [color=red, key=1, label=object, style=dashed];
n245 -> n264  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> n266  [color=red, key=1, label=object, style=dashed];
n245 -> n270  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> n273  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> n278  [color=red, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> n279  [color=red, key=1, label=object, style=dashed];
n245 -> n283  [color=red, key=1, label="CommandLine.OptionMap", style=dashed];
n245 -> n285  [color=red, key=1, label=object, style=dashed];
n245 -> n90  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n245 -> n142  [color=red, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n245 -> n134  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n245 -> n137  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n245 -> n139  [color=red, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n245 -> d144  [color=green, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n245 -> d147  [color=green, key=3, label="method methodReturn CommandLine.ParserState Parse", style=bold];
n245 -> d251  [color=green, key=0, style=solid];
n245 -> d253  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n245 -> d259  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> d264  [color=green, key=1, label=object, style=dashed];
n245 -> d269  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> d271  [color=green, key=1, label=object, style=dashed];
n245 -> d275  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> d278  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> d283  [color=green, key=1, label="CommandLine.IArgumentEnumerator", style=dashed];
n245 -> d284  [color=green, key=1, label=object, style=dashed];
n245 -> d288  [color=green, key=1, label="CommandLine.OptionMap", style=dashed];
n245 -> d290  [color=green, key=1, label=object, style=dashed];
n246 -> n247  [color=red, key=0, style=solid];
n246 -> n212  [color=red, key=2, style=dotted];
n246 -> n206  [color=red, key=2, style=dotted];
n246 -> n248  [color=red, key=1, label=group, style=dashed];
n246 -> n254  [color=red, key=1, label=group, style=dashed];
n246 -> n257  [color=red, key=1, label=group, style=dashed];
n246 -> n259  [color=red, key=1, label=group, style=dashed];
n246 -> n265  [color=red, key=1, label=group, style=dashed];
n246 -> n283  [color=red, key=1, label=group, style=dashed];
n248 -> n249  [color=red, key=0, style=solid];
n248 -> n251  [color=red, key=1, label=option, style=dashed];
n248 -> n252  [color=red, key=1, label=option, style=dashed];
n248 -> n253  [color=red, key=1, label=option, style=dashed];
n248 -> n258  [color=red, key=1, label=option, style=dashed];
n248 -> n259  [color=red, key=1, label=option, style=dashed];
n248 -> n261  [color=red, key=1, label=option, style=dashed];
n248 -> n263  [color=red, key=1, label=option, style=dashed];
n248 -> n266  [color=red, key=1, label=option, style=dashed];
n248 -> n268  [color=red, key=1, label=option, style=dashed];
n248 -> n272  [color=red, key=1, label=option, style=dashed];
n248 -> n273  [color=red, key=1, label=option, style=dashed];
n248 -> n275  [color=red, key=1, label=option, style=dashed];
n248 -> n277  [color=red, key=1, label=option, style=dashed];
n248 -> n279  [color=red, key=1, label=option, style=dashed];
n248 -> n281  [color=red, key=1, label=option, style=dashed];
n248 -> n285  [color=red, key=1, label=option, style=dashed];
n254 -> n255  [color=red, key=0, style=solid];
n254 -> n256  [color=red, key=0, style=solid];
n259 -> n260  [color=red, key=0, style=solid];
n259 -> n158  [color=red, key=2, style=dotted];
n259 -> n208  [color=red, key=2, style=dotted];
n259 -> n262  [color=red, key=1, label=valueSetting, style=dashed];
n264 -> n265  [color=red, key=0, style=solid];
n264 -> n114  [color=red, key=2, style=dotted];
n264 -> n266  [color=red, key=1, label=items, style=dashed];
n266 -> n267  [color=red, key=0, style=solid];
n266 -> n210  [color=red, key=2, style=dotted];
n266 -> n269  [color=red, key=1, label=valueSetting, style=dashed];
n270 -> n271  [color=red, key=0, style=solid];
n270 -> n272  [color=red, key=0, style=solid];
n270 -> n109  [color=red, key=2, style=dotted];
n273 -> n274  [color=red, key=0, style=solid];
n273 -> n208  [color=red, key=2, style=dotted];
n273 -> n276  [color=red, key=1, label=valueSetting, style=dashed];
n278 -> n279  [color=red, key=0, style=solid];
n278 -> n114  [color=red, key=2, style=dotted];
n279 -> n280  [color=red, key=0, style=solid];
n279 -> n210  [color=red, key=2, style=dotted];
n279 -> n282  [color=red, key=1, label=valueSetting, style=dashed];
n283 -> n284  [color=red, key=0, style=solid];
n283 -> n285  [color=red, key=0, style=solid];
n285 -> n286  [color=red, key=0, style=solid];
n285 -> n247  [color=red, key=0, style=solid];
n285 -> n211  [color=red, key=2, style=dotted];
n247 -> n248  [color=red, key=0, style=solid];
n247 -> n287  [color=red, key=0, style=solid];
n247 -> n123  [color=red, key=2, style=dotted];
n257 -> n258  [color=red, key=0, style=solid];
n257 -> n270  [color=red, key=0, style=solid];
n265 -> n266  [color=red, key=0, style=solid];
n265 -> n158  [color=red, key=2, style=dotted];
n265 -> n209  [color=red, key=2, style=dotted];
n287 -> n288  [color=red, key=0, style=solid];
n249 -> n250  [color=red, key=0, style=solid];
n249 -> n251  [color=red, key=0, style=solid];
n251 -> n252  [color=red, key=0, style=solid];
n252 -> n253  [color=red, key=0, style=solid];
n252 -> n148  [color=red, key=2, style=dotted];
n253 -> n254  [color=red, key=0, style=solid];
n253 -> n283  [color=red, key=0, style=solid];
n258 -> n259  [color=red, key=0, style=solid];
n258 -> n263  [color=red, key=0, style=solid];
n261 -> n262  [color=red, key=0, style=solid];
n261 -> n92  [color=red, key=2, style=dotted];
n263 -> n264  [color=red, key=0, style=solid];
n263 -> n144  [color=red, key=2, style=dotted];
n268 -> n269  [color=red, key=0, style=solid];
n268 -> n92  [color=red, key=2, style=dotted];
n272 -> n273  [color=red, key=0, style=solid];
n272 -> n277  [color=red, key=0, style=solid];
n275 -> n276  [color=red, key=0, style=solid];
n275 -> n92  [color=red, key=2, style=dotted];
n277 -> n278  [color=red, key=0, style=solid];
n277 -> n144  [color=red, key=2, style=dotted];
n281 -> n282  [color=red, key=0, style=solid];
n281 -> n92  [color=red, key=2, style=dotted];
n250 -> n288  [color=red, key=0, style=solid];
n255 -> n288  [color=red, key=0, style=solid];
n256 -> n257  [color=red, key=0, style=solid];
n256 -> n208  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n256 -> n210  [color=red, key=3, label="Local variable bool valueSetting", style=bold];
n260 -> n261  [color=red, key=0, style=solid];
n260 -> n262  [color=red, key=0, style=solid];
n262 -> n288  [color=red, key=0, style=solid];
n262 -> n134  [color=red, key=2, style=dotted];
n267 -> n268  [color=red, key=0, style=solid];
n267 -> n269  [color=red, key=0, style=solid];
n269 -> n288  [color=red, key=0, style=solid];
n269 -> n137  [color=red, key=2, style=dotted];
n271 -> n288  [color=red, key=0, style=solid];
n274 -> n275  [color=red, key=0, style=solid];
n274 -> n276  [color=red, key=0, style=solid];
n276 -> n288  [color=red, key=0, style=solid];
n276 -> n137  [color=red, key=2, style=dotted];
n280 -> n281  [color=red, key=0, style=solid];
n280 -> n282  [color=red, key=0, style=solid];
n282 -> n288  [color=red, key=0, style=solid];
n282 -> n134  [color=red, key=2, style=dotted];
n284 -> n288  [color=red, key=0, style=solid];
n286 -> n288  [color=red, key=0, style=solid];
n288 -> n245  [color=blue, key=0, style=bold];
n289 -> n290  [color=red, key=0, style=solid];
n289 -> n291  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n292  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n293  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n294  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n295  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n296  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n297  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n298  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> n300  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n289 -> n301  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n289 -> d295  [color=green, key=0, style=solid];
n289 -> d296  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d297  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d298  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d299  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d300  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d301  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d302  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d303  [color=green, key=1, label="CommandLine.OptionAttribute", style=dashed];
n289 -> d305  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n289 -> d306  [color=green, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n290 -> n291  [color=red, key=0, style=solid];
n290 -> n299  [color=red, key=0, style=solid];
n291 -> n292  [color=red, key=0, style=solid];
n292 -> n293  [color=red, key=0, style=solid];
n293 -> n294  [color=red, key=0, style=solid];
n294 -> n295  [color=red, key=0, style=solid];
n295 -> n296  [color=red, key=0, style=solid];
n296 -> n297  [color=red, key=0, style=solid];
n297 -> n298  [color=red, key=0, style=solid];
n298 -> n300  [color=red, key=0, style=solid];
n300 -> n301  [color=red, key=0, style=solid];
n300 -> n302  [color=red, key=0, style=solid];
n301 -> n303  [color=red, key=0, style=solid];
n299 -> n303  [color=red, key=0, style=solid];
n299 -> n304  [color=red, key=2, style=dotted];
n302 -> n303  [color=red, key=0, style=solid];
n302 -> n304  [color=red, key=2, style=dotted];
n303 -> n289  [color=blue, key=0, style=bold];
n305 -> n306  [color=red, key=0, style=solid];
n305 -> n308  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n305 -> n312  [color=red, key=1, label=object, style=dashed];
n305 -> n58  [color=red, key=3, label="method methodReturn CommandLine.OptionMap CreateMap", style=bold];
n305 -> n587  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n305 -> d58  [color=green, key=3, label="method methodReturn CommandLine.OptionMap CreateMap", style=bold];
n305 -> d311  [color=green, key=0, style=solid];
n305 -> d313  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n305 -> d317  [color=green, key=1, label=object, style=dashed];
n306 -> n307  [color=red, key=0, style=solid];
n306 -> n75  [color=red, key=2, style=dotted];
n306 -> n308  [color=red, key=1, label=list, style=dashed];
n306 -> n309  [color=red, key=1, label=list, style=dashed];
n308 -> n309  [color=red, key=0, style=solid];
n308 -> n316  [color=red, key=2, style=dotted];
n308 -> n311  [color=red, key=1, label=map, style=dashed];
n308 -> n312  [color=red, key=1, label=map, style=dashed];
n308 -> n313  [color=red, key=1, label=map, style=dashed];
n312 -> n313  [color=red, key=0, style=solid];
n307 -> n308  [color=red, key=0, style=solid];
n307 -> n314  [color=red, key=0, style=solid];
n309 -> n310  [color=red, key=0, style=solid];
n309 -> n312  [color=red, key=0, style=solid];
n309 -> n311  [color=red, key=1, label=pair, style=dashed];
n314 -> n315  [color=red, key=0, style=solid];
n316 -> n395  [color=red, key=0, style=solid];
n316 -> n400  [color=red, key=1, label=int, style=dashed];
n316 -> n401  [color=red, key=1, label=int, style=dashed];
n316 -> n403  [color=red, key=1, label=int, style=dashed];
n316 -> d402  [color=green, key=0, style=solid];
n316 -> d407  [color=green, key=1, label=int, style=dashed];
n316 -> d408  [color=green, key=1, label=int, style=dashed];
n316 -> d410  [color=green, key=1, label=int, style=dashed];
n311 -> n309  [color=red, key=0, style=solid];
n311 -> n289  [color=red, key=2, style=dotted];
n313 -> n315  [color=red, key=0, style=solid];
n310 -> n311  [color=red, key=0, style=solid];
n310 -> n309  [color=red, key=0, style=solid];
n315 -> n305  [color=blue, key=0, style=bold];
n317 -> n318  [color=red, key=0, style=solid];
n317 -> n319  [color=red, key=0, style=solid];
n318 -> n322  [color=red, key=0, style=solid];
n318 -> n323  [color=red, key=2, style=dotted];
n320 -> n322  [color=red, key=0, style=solid];
n320 -> n325  [color=red, key=2, style=dotted];
n321 -> n322  [color=red, key=0, style=solid];
n321 -> n326  [color=red, key=2, style=dotted];
n319 -> n320  [color=red, key=0, style=solid];
n319 -> n321  [color=red, key=0, style=solid];
n319 -> n324  [color=red, key=2, style=dotted];
n324 -> n697  [color=red, key=0, style=solid];
n324 -> d704  [color=green, key=0, style=solid];
n322 -> n208  [color=blue, key=0, style=bold];
n325 -> n357  [color=red, key=0, style=solid];
n325 -> n359  [color=red, key=1, label=string, style=dashed];
n325 -> n208  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n325 -> n112  [color=red, key=3, label="method methodReturn bool SetNullableValue", style=bold];
n325 -> d114  [color=green, key=3, label="method methodReturn bool SetNullableValue", style=bold];
n325 -> d364  [color=green, key=0, style=solid];
n325 -> d366  [color=green, key=1, label=string, style=dashed];
n326 -> n343  [color=red, key=0, style=solid];
n326 -> n345  [color=red, key=1, label=string, style=dashed];
n326 -> n347  [color=red, key=1, label=string, style=dashed];
n326 -> n208  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n326 -> n112  [color=red, key=3, label="method methodReturn bool SetValueScalar", style=bold];
n326 -> d114  [color=green, key=3, label="method methodReturn bool SetValueScalar", style=bold];
n326 -> d348  [color=green, key=0, style=solid];
n326 -> d350  [color=green, key=1, label=string, style=dashed];
n326 -> d352  [color=green, key=1, label=string, style=dashed];
n323 -> n370  [color=red, key=0, style=solid];
n323 -> n371  [color=red, key=1, label=object, style=dashed];
n323 -> n372  [color=red, key=1, label=object, style=dashed];
n323 -> n373  [color=red, key=1, label=string, style=dashed];
n323 -> n208  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n323 -> n112  [color=red, key=3, label="method methodReturn bool SetValueList", style=bold];
n323 -> d114  [color=green, key=3, label="method methodReturn bool SetValueList", style=bold];
n323 -> d377  [color=green, key=0, style=solid];
n323 -> d378  [color=green, key=1, label=object, style=dashed];
n323 -> d379  [color=green, key=1, label=object, style=dashed];
n323 -> d380  [color=green, key=1, label=string, style=dashed];
n327 -> n328  [color=red, key=0, style=solid];
n327 -> n339  [color=red, key=2, style=dotted];
n327 -> n332  [color=red, key=1, label=elementType, style=dashed];
n328 -> n329  [color=red, key=0, style=solid];
n328 -> n340  [color=red, key=2, style=dotted];
n328 -> n330  [color=red, key=1, label=array, style=dashed];
n328 -> n332  [color=red, key=1, label=array, style=dashed];
n328 -> n333  [color=red, key=1, label=array, style=dashed];
n332 -> n333  [color=red, key=0, style=solid];
n332 -> n341  [color=red, key=2, style=dotted];
n332 -> n342  [color=red, key=2, style=dotted];
n333 -> n334  [color=red, key=0, style=solid];
n333 -> n336  [color=red, key=0, style=solid];
n333 -> n64  [color=red, key=2, style=dotted];
n329 -> n330  [color=red, key=0, style=solid];
n329 -> n332  [color=red, key=1, label=i, style=dashed];
n329 -> n336  [color=red, key=1, label=i, style=dashed];
n329 -> n329  [color=red, key=3, label="Local variable int i", style=bold];
n330 -> n331  [color=red, key=0, style=solid];
n330 -> n337  [color=red, key=0, style=solid];
n336 -> n330  [color=red, key=0, style=solid];
n336 -> n336  [color=red, key=1, label=i, style=dashed];
n331 -> n332  [color=red, key=0, style=solid];
n337 -> n338  [color=red, key=0, style=solid];
n334 -> n335  [color=red, key=0, style=solid];
n335 -> n338  [color=red, key=0, style=solid];
n338 -> n210  [color=blue, key=0, style=bold];
n343 -> n344  [color=red, key=0, style=solid];
n343 -> n346  [color=red, key=0, style=solid];
n345 -> n348  [color=red, key=0, style=solid];
n345 -> n350  [color=red, key=0, style=solid];
n345 -> n352  [color=red, key=0, style=solid];
n345 -> n354  [color=red, key=0, style=solid];
n345 -> n356  [color=red, key=2, style=dotted];
n345 -> n64  [color=red, key=2, style=dotted];
n347 -> n348  [color=red, key=0, style=solid];
n347 -> n350  [color=red, key=0, style=solid];
n347 -> n352  [color=red, key=0, style=solid];
n347 -> n354  [color=red, key=0, style=solid];
n347 -> n341  [color=red, key=2, style=dotted];
n347 -> n64  [color=red, key=2, style=dotted];
n344 -> n345  [color=red, key=0, style=solid];
n346 -> n347  [color=red, key=0, style=solid];
n348 -> n349  [color=red, key=0, style=solid];
n350 -> n351  [color=red, key=0, style=solid];
n352 -> n353  [color=red, key=0, style=solid];
n354 -> n355  [color=red, key=0, style=solid];
n349 -> n355  [color=red, key=0, style=solid];
n351 -> n355  [color=red, key=0, style=solid];
n353 -> n355  [color=red, key=0, style=solid];
n355 -> n326  [color=blue, key=0, style=bold];
n357 -> n358  [color=red, key=0, style=solid];
n357 -> n364  [color=red, key=2, style=dotted];
n357 -> n359  [color=red, key=1, label=nc, style=dashed];
n359 -> n360  [color=red, key=0, style=solid];
n359 -> n362  [color=red, key=0, style=solid];
n359 -> n365  [color=red, key=2, style=dotted];
n359 -> n64  [color=red, key=2, style=dotted];
n358 -> n359  [color=red, key=0, style=solid];
n360 -> n361  [color=red, key=0, style=solid];
n362 -> n363  [color=red, key=0, style=solid];
n361 -> n363  [color=red, key=0, style=solid];
n363 -> n325  [color=blue, key=0, style=bold];
n366 -> n367  [color=red, key=0, style=solid];
n367 -> n368  [color=red, key=0, style=solid];
n367 -> n64  [color=red, key=2, style=dotted];
n368 -> n369  [color=red, key=0, style=solid];
n369 -> n211  [color=blue, key=0, style=bold];
n370 -> n371  [color=red, key=0, style=solid];
n371 -> n372  [color=red, key=0, style=solid];
n371 -> n89  [color=red, key=2, style=dotted];
n371 -> n64  [color=red, key=2, style=dotted];
n372 -> n373  [color=red, key=0, style=solid];
n372 -> n65  [color=red, key=2, style=dotted];
n372 -> n376  [color=red, key=1, label=fieldRef, style=dashed];
n373 -> n374  [color=red, key=0, style=solid];
n373 -> n380  [color=red, key=2, style=dotted];
n373 -> n375  [color=red, key=1, label=values, style=dashed];
n373 -> n376  [color=red, key=1, label=values, style=dashed];
n376 -> n377  [color=red, key=0, style=solid];
n376 -> n124  [color=red, key=2, style=dotted];
n374 -> n375  [color=red, key=0, style=solid];
n374 -> n376  [color=red, key=1, label=i, style=dashed];
n374 -> n377  [color=red, key=1, label=i, style=dashed];
n374 -> n329  [color=red, key=3, label="Local variable int i", style=bold];
n375 -> n376  [color=red, key=0, style=solid];
n375 -> n378  [color=red, key=0, style=solid];
n377 -> n375  [color=red, key=0, style=solid];
n377 -> n377  [color=red, key=1, label=i, style=dashed];
n378 -> n379  [color=red, key=0, style=solid];
n379 -> n323  [color=blue, key=0, style=bold];
n381 -> n382  [color=red, key=0, style=solid];
n381 -> n384  [color=red, key=1, label=object, style=dashed];
n381 -> d389  [color=green, key=0, style=solid];
n381 -> d391  [color=green, key=1, label=object, style=dashed];
n382 -> n383  [color=red, key=0, style=solid];
n382 -> n387  [color=red, key=0, style=solid];
n384 -> n385  [color=red, key=0, style=solid];
n384 -> n387  [color=red, key=0, style=solid];
n384 -> n64  [color=red, key=2, style=dotted];
n383 -> n384  [color=red, key=0, style=solid];
n387 -> n381  [color=blue, key=0, style=bold];
n385 -> n386  [color=red, key=0, style=solid];
n386 -> n387  [color=red, key=0, style=solid];
n386 -> n388  [color=red, key=2, style=dotted];
n388 -> n529  [key=0, style=solid];
n389 -> n390  [color=red, key=0, style=solid];
n389 -> d397  [color=green, key=0, style=solid];
n390 -> n391  [color=red, key=0, style=solid];
n391 -> n389  [color=blue, key=0, style=bold];
n392 -> n393  [color=red, key=0, style=solid];
n392 -> d400  [color=green, key=0, style=solid];
n393 -> n394  [color=red, key=0, style=solid];
n394 -> n392  [color=blue, key=0, style=bold];
n395 -> n396  [color=red, key=0, style=solid];
n400 -> n401  [color=red, key=0, style=solid];
n400 -> n405  [color=red, key=2, style=dotted];
n401 -> n402  [color=red, key=0, style=solid];
n401 -> n405  [color=red, key=2, style=dotted];
n403 -> n404  [color=red, key=0, style=solid];
n403 -> n405  [color=red, key=2, style=dotted];
n396 -> n397  [color=red, key=0, style=solid];
n397 -> n398  [color=red, key=0, style=solid];
n397 -> n399  [color=red, key=0, style=solid];
n398 -> n400  [color=red, key=0, style=solid];
n398 -> n401  [color=red, key=1, label=comparer, style=dashed];
n399 -> n400  [color=red, key=0, style=solid];
n399 -> n401  [color=red, key=1, label=comparer, style=dashed];
n402 -> n403  [color=red, key=0, style=solid];
n402 -> n404  [color=red, key=0, style=solid];
n404 -> n316  [color=blue, key=0, style=bold];
n406 -> n407  [color=red, key=0, style=solid];
n406 -> d414  [color=green, key=0, style=solid];
n407 -> n408  [color=red, key=0, style=solid];
n407 -> n409  [color=red, key=2, style=dotted];
n407 -> n410  [color=red, key=2, style=dotted];
n408 -> n406  [color=blue, key=0, style=bold];
n409 -> n423  [color=red, key=0, style=solid];
n409 -> n112  [color=red, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
n409 -> d114  [color=green, key=3, label="method methodReturn bool EnforceMutuallyExclusiveMap", style=bold];
n409 -> d430  [color=green, key=0, style=solid];
n410 -> n415  [color=red, key=0, style=solid];
n410 -> d422  [color=green, key=0, style=solid];
n411 -> n412  [color=red, key=0, style=solid];
n411 -> d419  [color=green, key=0, style=solid];
n412 -> n413  [color=red, key=0, style=solid];
n412 -> n414  [color=red, key=0, style=solid];
n413 -> n412  [color=red, key=0, style=solid];
n413 -> n381  [color=red, key=2, style=dotted];
n414 -> n411  [color=blue, key=0, style=bold];
n415 -> n416  [color=red, key=0, style=solid];
n415 -> n420  [color=red, key=1, label=requiredRulesAllMet, style=dashed];
n415 -> n112  [color=red, key=3, label="Local variable bool requiredRulesAllMet", style=bold];
n416 -> n417  [color=red, key=0, style=solid];
n416 -> n420  [color=red, key=0, style=solid];
n416 -> n418  [color=red, key=1, label=option, style=dashed];
n420 -> n421  [color=red, key=0, style=solid];
n417 -> n418  [color=red, key=0, style=solid];
n417 -> n416  [color=red, key=0, style=solid];
n418 -> n419  [color=red, key=0, style=solid];
n418 -> n422  [color=red, key=2, style=dotted];
n419 -> n416  [color=red, key=0, style=solid];
n419 -> n420  [color=red, key=1, label=requiredRulesAllMet, style=dashed];
n422 -> n442  [color=red, key=0, style=solid];
n422 -> n445  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n422 -> n446  [color=red, key=1, label="bool?", style=dashed];
n422 -> n447  [color=red, key=1, label="bool?", style=dashed];
n422 -> n448  [color=red, key=1, label="bool?", style=dashed];
n422 -> n449  [color=red, key=1, label="bool?", style=dashed];
n422 -> n416  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n422 -> n112  [color=red, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n422 -> n58  [color=red, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n422 -> d58  [color=green, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n422 -> d114  [color=green, key=3, label="Parameter variable bool? mutualExclusiveness", style=bold];
n422 -> d423  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n422 -> d449  [color=green, key=0, style=solid];
n422 -> d452  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n422 -> d453  [color=green, key=1, label="bool?", style=dashed];
n422 -> d454  [color=green, key=1, label="bool?", style=dashed];
n422 -> d455  [color=green, key=1, label="bool?", style=dashed];
n422 -> d456  [color=green, key=1, label="bool?", style=dashed];
n421 -> n410  [color=blue, key=0, style=bold];
n423 -> n424  [color=red, key=0, style=solid];
n423 -> n425  [color=red, key=0, style=solid];
n424 -> n433  [color=red, key=0, style=solid];
n425 -> n426  [color=red, key=0, style=solid];
n425 -> n428  [color=red, key=0, style=solid];
n425 -> n427  [color=red, key=1, label=option, style=dashed];
n426 -> n427  [color=red, key=0, style=solid];
n426 -> n425  [color=red, key=0, style=solid];
n428 -> n429  [color=red, key=0, style=solid];
n428 -> n432  [color=red, key=0, style=solid];
n428 -> n430  [color=red, key=1, label=info, style=dashed];
n427 -> n425  [color=red, key=0, style=solid];
n427 -> n434  [color=red, key=2, style=dotted];
n434 -> n435  [color=red, key=0, style=solid];
n434 -> n437  [color=red, key=1, label="CommandLine.OptionInfo", style=dashed];
n434 -> n425  [color=red, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n434 -> d432  [color=green, key=3, label="Parameter variable CommandLine.OptionInfo option", style=bold];
n434 -> d442  [color=green, key=0, style=solid];
n434 -> d444  [color=green, key=1, label="CommandLine.OptionInfo", style=dashed];
n429 -> n430  [color=red, key=0, style=solid];
n429 -> n428  [color=red, key=0, style=solid];
n432 -> n433  [color=red, key=0, style=solid];
n430 -> n431  [color=red, key=0, style=solid];
n430 -> n422  [color=red, key=2, style=dotted];
n431 -> n433  [color=red, key=0, style=solid];
n433 -> n409  [color=blue, key=0, style=bold];
n435 -> n436  [color=red, key=0, style=solid];
n435 -> n437  [color=red, key=1, label=setName, style=dashed];
n435 -> n438  [color=red, key=1, label=setName, style=dashed];
n437 -> n438  [color=red, key=0, style=solid];
n437 -> n389  [color=red, key=2, style=dotted];
n437 -> n441  [color=red, key=2, style=dotted];
n436 -> n437  [color=red, key=0, style=solid];
n436 -> n438  [color=red, key=0, style=solid];
n436 -> n440  [color=red, key=2, style=dotted];
n438 -> n439  [color=red, key=0, style=solid];
n438 -> n392  [color=red, key=2, style=dotted];
n439 -> n434  [color=blue, key=0, style=bold];
n442 -> n443  [color=red, key=0, style=solid];
n442 -> n450  [color=red, key=1, label=commandLineOptionsBase, style=dashed];
n445 -> n446  [color=red, key=0, style=solid];
n445 -> n452  [color=red, key=2, style=dotted];
n445 -> n447  [color=red, key=1, label=error, style=dashed];
n445 -> n449  [color=red, key=1, label=error, style=dashed];
n445 -> n450  [color=red, key=1, label=error, style=dashed];
n446 -> n447  [color=red, key=0, style=solid];
n446 -> n448  [color=red, key=0, style=solid];
n447 -> n448  [color=red, key=0, style=solid];
n448 -> n449  [color=red, key=0, style=solid];
n448 -> n450  [color=red, key=0, style=solid];
n449 -> n450  [color=red, key=0, style=solid];
n443 -> n444  [color=red, key=0, style=solid];
n443 -> n445  [color=red, key=0, style=solid];
n450 -> n451  [color=red, key=0, style=solid];
n450 -> n96  [color=red, key=2, style=dotted];
n444 -> n451  [color=red, key=0, style=solid];
n452 -> n470  [color=red, key=0, style=solid];
n452 -> d477  [color=green, key=0, style=solid];
n451 -> n422  [color=blue, key=0, style=bold];
n453 -> n454  [color=red, key=0, style=solid];
n453 -> n455  [color=red, key=1, label=TRight, style=dashed];
n453 -> d461  [color=green, key=0, style=solid];
n453 -> d462  [color=green, key=1, label=TRight, style=dashed];
n454 -> n455  [color=red, key=0, style=solid];
n455 -> n456  [color=red, key=0, style=solid];
n456 -> n453  [color=blue, key=0, style=bold];
n457 -> n458  [color=red, key=0, style=solid];
n457 -> d465  [color=green, key=0, style=solid];
n458 -> n459  [color=red, key=0, style=solid];
n458 -> n462  [color=red, key=2, style=dotted];
n458 -> n460  [color=red, key=1, label=leftHash, style=dashed];
n459 -> n460  [color=red, key=0, style=solid];
n459 -> n462  [color=red, key=2, style=dotted];
n460 -> n461  [color=red, key=0, style=solid];
n461 -> n457  [color=blue, key=0, style=bold];
n463 -> n464  [color=red, key=0, style=solid];
n463 -> d471  [color=green, key=0, style=solid];
n464 -> n465  [color=red, key=0, style=solid];
n464 -> n467  [color=red, key=1, label=other, style=dashed];
n465 -> n466  [color=red, key=0, style=solid];
n465 -> n467  [color=red, key=0, style=solid];
n467 -> n468  [color=red, key=0, style=solid];
n467 -> n469  [color=red, key=2, style=dotted];
n466 -> n468  [color=red, key=0, style=solid];
n468 -> n463  [color=blue, key=0, style=bold];
n470 -> n471  [color=red, key=0, style=solid];
n470 -> n152  [color=red, key=2, style=dotted];
n471 -> n452  [color=blue, key=0, style=bold];
n472 -> n473  [color=red, key=0, style=solid];
n472 -> n154  [color=red, key=2, style=dotted];
n473 -> n474  [color=red, key=0, style=solid];
n474 -> n95  [color=blue, key=0, style=bold];
n475 -> n476  [color=red, key=0, style=solid];
n475 -> d483  [color=green, key=0, style=solid];
n476 -> n477  [color=red, key=0, style=solid];
n476 -> n89  [color=red, key=2, style=dotted];
n477 -> n475  [color=blue, key=0, style=bold];
n478 -> n479  [color=red, key=0, style=solid];
n478 -> n480  [color=red, key=1, label="string[]", style=dashed];
n478 -> n482  [color=red, key=1, label="string[]", style=dashed];
n478 -> d486  [color=green, key=0, style=solid];
n478 -> d487  [color=green, key=1, label="string[]", style=dashed];
n478 -> d489  [color=green, key=1, label="string[]", style=dashed];
n479 -> n480  [color=red, key=0, style=solid];
n479 -> n484  [color=red, key=2, style=dotted];
n480 -> n481  [color=red, key=0, style=solid];
n482 -> n483  [color=red, key=0, style=solid];
n484 -> n629  [color=red, key=0, style=solid];
n484 -> n630  [color=red, key=1, label=string, style=dashed];
n484 -> n478  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
n484 -> n565  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
n484 -> n572  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
n484 -> n213  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n484 -> n566  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n484 -> n573  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n484 -> n574  [color=red, key=3, label="Parameter variable string paramName", style=bold];
n484 -> d218  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n484 -> d573  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n484 -> d580  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n484 -> d581  [color=green, key=3, label="Parameter variable string paramName", style=bold];
n484 -> d636  [color=green, key=0, style=solid];
n484 -> d637  [color=green, key=1, label=string, style=dashed];
n481 -> n482  [color=red, key=0, style=solid];
n483 -> n478  [color=blue, key=0, style=bold];
n485 -> n486  [color=red, key=0, style=solid];
n485 -> d493  [color=green, key=0, style=solid];
n486 -> n487  [color=red, key=0, style=solid];
n487 -> n485  [color=blue, key=0, style=bold];
n488 -> n489  [color=red, key=0, style=solid];
n488 -> d496  [color=green, key=0, style=solid];
n489 -> n490  [color=red, key=0, style=solid];
n489 -> n492  [color=red, key=0, style=solid];
n490 -> n491  [color=red, key=0, style=solid];
n492 -> n493  [color=red, key=0, style=solid];
n491 -> n493  [color=red, key=0, style=solid];
n493 -> n488  [color=blue, key=0, style=bold];
n494 -> n495  [color=red, key=0, style=solid];
n494 -> d502  [color=green, key=0, style=solid];
n495 -> n496  [color=red, key=0, style=solid];
n495 -> n240  [color=red, key=2, style=dotted];
n496 -> n494  [color=blue, key=0, style=bold];
n497 -> n498  [color=red, key=0, style=solid];
n497 -> d505  [color=green, key=0, style=solid];
n498 -> n499  [color=red, key=0, style=solid];
n498 -> n500  [color=red, key=0, style=solid];
n499 -> n504  [color=red, key=0, style=solid];
n499 -> n34  [color=red, key=2, style=dotted];
n500 -> n501  [color=red, key=0, style=solid];
n500 -> n503  [color=red, key=0, style=solid];
n501 -> n502  [color=red, key=0, style=solid];
n503 -> n504  [color=red, key=0, style=solid];
n502 -> n504  [color=red, key=0, style=solid];
n504 -> n497  [color=blue, key=0, style=bold];
n505 -> n506  [key=0, style=solid];
n506 -> n505  [color=blue, key=0, style=bold];
n507 -> n508  [color=red, key=0, style=solid];
n507 -> d515  [color=green, key=0, style=solid];
n508 -> n509  [color=red, key=0, style=solid];
n509 -> n510  [color=red, key=0, style=solid];
n509 -> n66  [color=red, key=2, style=dotted];
n510 -> n511  [color=red, key=0, style=solid];
n510 -> n512  [color=red, key=0, style=solid];
n511 -> n512  [color=red, key=0, style=solid];
n511 -> n54  [color=red, key=2, style=dotted];
n512 -> n507  [color=blue, key=0, style=bold];
n513 -> n514  [color=red, key=0, style=solid];
n513 -> n517  [color=red, key=1, label=string, style=dashed];
n513 -> n112  [color=red, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
n513 -> n595  [color=red, key=3, label="Parameter variable string item", style=bold];
n513 -> d114  [color=green, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
n513 -> d521  [color=green, key=0, style=solid];
n513 -> d524  [color=green, key=1, label=string, style=dashed];
n513 -> d602  [color=green, key=3, label="Parameter variable string item", style=bold];
n514 -> n515  [color=red, key=0, style=solid];
n514 -> n516  [color=red, key=0, style=solid];
n517 -> n518  [color=red, key=0, style=solid];
n517 -> n124  [color=red, key=2, style=dotted];
n515 -> n519  [color=red, key=0, style=solid];
n516 -> n517  [color=red, key=0, style=solid];
n518 -> n519  [color=red, key=0, style=solid];
n519 -> n513  [color=blue, key=0, style=bold];
n520 -> n521  [key=0, style=solid];
n520 -> n569  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n521 -> n520  [color=blue, key=0, style=bold];
n522 -> n523  [key=0, style=solid];
n522 -> n572  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n523 -> n522  [color=blue, key=0, style=bold];
n524 -> n525  [color=red, key=0, style=solid];
n524 -> d532  [color=green, key=0, style=solid];
n525 -> n526  [color=red, key=0, style=solid];
n525 -> n475  [color=red, key=2, style=dotted];
n526 -> n524  [color=blue, key=0, style=bold];
n527 -> n126  [color=blue, key=0, style=bold];
n528 -> n53  [color=blue, key=0, style=bold];
n529 -> n388  [color=blue, key=0, style=bold];
n530 -> n531  [key=0, style=solid];
n531 -> n530  [color=blue, key=0, style=bold];
n532 -> n533  [key=0, style=solid];
n533 -> n532  [color=blue, key=0, style=bold];
n534 -> n535  [color=red, key=0, style=solid];
n534 -> d542  [color=green, key=0, style=solid];
n535 -> n536  [color=red, key=0, style=solid];
n536 -> n534  [color=blue, key=0, style=bold];
n537 -> n538  [color=red, key=0, style=solid];
n537 -> d545  [color=green, key=0, style=solid];
n538 -> n539  [color=red, key=0, style=solid];
n539 -> n537  [color=blue, key=0, style=bold];
n540 -> n541  [color=red, key=0, style=solid];
n540 -> n542  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n540 -> d548  [color=green, key=0, style=solid];
n540 -> d549  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n541 -> n542  [color=red, key=0, style=solid];
n542 -> n543  [color=red, key=0, style=solid];
n543 -> n540  [color=blue, key=0, style=bold];
n544 -> n545  [color=red, key=0, style=solid];
n544 -> n546  [color=red, key=1, label=bool, style=dashed];
n544 -> d552  [color=green, key=0, style=solid];
n544 -> d553  [color=green, key=1, label=bool, style=dashed];
n545 -> n546  [color=red, key=0, style=solid];
n546 -> n547  [color=red, key=0, style=solid];
n547 -> n544  [color=blue, key=0, style=bold];
n548 -> n549  [color=red, key=0, style=solid];
n548 -> n550  [color=red, key=1, label=bool, style=dashed];
n548 -> n551  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n548 -> d556  [color=green, key=0, style=solid];
n548 -> d557  [color=green, key=1, label=bool, style=dashed];
n548 -> d558  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n549 -> n550  [color=red, key=0, style=solid];
n550 -> n551  [color=red, key=0, style=solid];
n551 -> n552  [color=red, key=0, style=solid];
n552 -> n548  [color=blue, key=0, style=bold];
n553 -> n554  [color=red, key=0, style=solid];
n553 -> n555  [color=red, key=1, label=bool, style=dashed];
n553 -> n556  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n553 -> n557  [color=red, key=1, label=bool, style=dashed];
n553 -> d561  [color=green, key=0, style=solid];
n553 -> d562  [color=green, key=1, label=bool, style=dashed];
n553 -> d563  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n553 -> d564  [color=green, key=1, label=bool, style=dashed];
n554 -> n555  [color=red, key=0, style=solid];
n555 -> n556  [color=red, key=0, style=solid];
n556 -> n557  [color=red, key=0, style=solid];
n557 -> n558  [color=red, key=0, style=solid];
n558 -> n553  [color=blue, key=0, style=bold];
n559 -> n560  [color=red, key=0, style=solid];
n559 -> d567  [color=green, key=0, style=solid];
n560 -> n561  [color=red, key=0, style=solid];
n560 -> n548  [color=red, key=2, style=dotted];
n561 -> n559  [color=blue, key=0, style=bold];
n562 -> n563  [color=red, key=0, style=solid];
n562 -> d570  [color=green, key=0, style=solid];
n563 -> n564  [color=red, key=0, style=solid];
n563 -> n532  [color=red, key=2, style=dotted];
n564 -> n562  [color=blue, key=0, style=bold];
n565 -> n566  [color=red, key=0, style=solid];
n565 -> n567  [color=red, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n565 -> d573  [color=green, key=0, style=solid];
n565 -> d574  [color=green, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
n566 -> n567  [color=red, key=0, style=solid];
n566 -> n484  [color=red, key=2, style=dotted];
n567 -> n568  [color=red, key=0, style=solid];
n568 -> n565  [color=blue, key=0, style=bold];
n569 -> n570  [color=red, key=0, style=solid];
n569 -> n520  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n569 -> n572  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n569 -> d577  [color=green, key=0, style=solid];
n570 -> n571  [color=red, key=0, style=solid];
n570 -> n572  [color=red, key=2, style=dotted];
n571 -> n569  [color=blue, key=0, style=bold];
n572 -> n573  [color=red, key=0, style=solid];
n572 -> n574  [color=red, key=1, label=object, style=dashed];
n572 -> n575  [color=red, key=1, label=object, style=dashed];
n572 -> n576  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n572 -> n577  [color=red, key=1, label="string[]", style=dashed];
n572 -> n579  [color=red, key=1, label=object, style=dashed];
n572 -> n580  [color=red, key=1, label="System.IO.TextWriter", style=dashed];
n572 -> n583  [color=red, key=1, label="string[]", style=dashed];
n572 -> n522  [color=darkorchid, key=3, label="Parameter variable System.IO.TextWriter helpWriter", style=bold];
n572 -> n569  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n572 -> n112  [color=red, key=3, label="method methodReturn bool ParseArguments", style=bold];
n572 -> n587  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
n572 -> d114  [color=green, key=3, label="method methodReturn bool ParseArguments", style=bold];
n572 -> d580  [color=green, key=0, style=solid];
n572 -> d581  [color=green, key=1, label=object, style=dashed];
n572 -> d582  [color=green, key=1, label=object, style=dashed];
n572 -> d583  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n572 -> d584  [color=green, key=1, label="string[]", style=dashed];
n572 -> d586  [color=green, key=1, label=object, style=dashed];
n572 -> d587  [color=green, key=1, label="System.IO.TextWriter", style=dashed];
n572 -> d590  [color=green, key=1, label="string[]", style=dashed];
n573 -> n574  [color=red, key=0, style=solid];
n573 -> n484  [color=red, key=2, style=dotted];
n574 -> n575  [color=red, key=0, style=solid];
n574 -> n484  [color=red, key=2, style=dotted];
n575 -> n576  [color=red, key=0, style=solid];
n575 -> n585  [color=red, key=2, style=dotted];
n575 -> n577  [color=red, key=1, label=pair, style=dashed];
n575 -> n579  [color=red, key=1, label=pair, style=dashed];
n576 -> n577  [color=red, key=0, style=solid];
n576 -> n583  [color=red, key=0, style=solid];
n577 -> n578  [color=red, key=0, style=solid];
n577 -> n582  [color=red, key=0, style=solid];
n577 -> n586  [color=red, key=2, style=dotted];
n577 -> n587  [color=red, key=2, style=dotted];
n579 -> n580  [color=red, key=0, style=solid];
n579 -> n8  [color=red, key=2, style=dotted];
n580 -> n581  [color=red, key=0, style=solid];
n580 -> n588  [color=red, key=2, style=dotted];
n583 -> n584  [color=red, key=0, style=solid];
n583 -> n587  [color=red, key=2, style=dotted];
n585 -> n657  [color=red, key=0, style=solid];
n585 -> n572  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
n585 -> n58  [color=red, key=3, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
n585 -> d58  [color=green, key=3, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
n585 -> d664  [color=green, key=0, style=solid];
n578 -> n579  [color=red, key=0, style=solid];
n582 -> n584  [color=red, key=0, style=solid];
n586 -> n612  [color=red, key=0, style=solid];
n586 -> n614  [color=red, key=1, label="string[]", style=dashed];
n586 -> n615  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n586 -> n616  [color=red, key=1, label="string[]", style=dashed];
n586 -> n618  [color=red, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n586 -> n619  [color=red, key=1, label="string[]", style=dashed];
n586 -> n572  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
n586 -> n112  [color=red, key=3, label="method methodReturn bool ParseHelp", style=bold];
n586 -> d114  [color=green, key=3, label="method methodReturn bool ParseHelp", style=bold];
n586 -> d619  [color=green, key=0, style=solid];
n586 -> d621  [color=green, key=1, label="string[]", style=dashed];
n586 -> d622  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n586 -> d623  [color=green, key=1, label="string[]", style=dashed];
n586 -> d625  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
n586 -> d626  [color=green, key=1, label="string[]", style=dashed];
n587 -> n589  [color=red, key=0, style=solid];
n587 -> n590  [color=red, key=1, label=object, style=dashed];
n587 -> n592  [color=red, key=1, label=object, style=dashed];
n587 -> n593  [color=red, key=1, label="string[]", style=dashed];
n587 -> n599  [color=red, key=1, label=object, style=dashed];
n587 -> n601  [color=red, key=1, label=object, style=dashed];
n587 -> n572  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n587 -> d596  [color=green, key=0, style=solid];
n587 -> d597  [color=green, key=1, label=object, style=dashed];
n587 -> d599  [color=green, key=1, label=object, style=dashed];
n587 -> d600  [color=green, key=1, label="string[]", style=dashed];
n587 -> d606  [color=green, key=1, label=object, style=dashed];
n587 -> d608  [color=green, key=1, label=object, style=dashed];
n581 -> n584  [color=red, key=0, style=solid];
n584 -> n572  [color=blue, key=0, style=bold];
n589 -> n590  [color=red, key=0, style=solid];
n589 -> n608  [color=red, key=1, label=hadError, style=dashed];
n590 -> n591  [color=red, key=0, style=solid];
n590 -> n305  [color=red, key=2, style=dotted];
n590 -> n599  [color=red, key=1, label=optionMap, style=dashed];
n590 -> n608  [color=red, key=1, label=optionMap, style=dashed];
n592 -> n593  [color=red, key=0, style=solid];
n592 -> n507  [color=red, key=2, style=dotted];
n592 -> n605  [color=red, key=1, label=target, style=dashed];
n592 -> n606  [color=red, key=1, label=target, style=dashed];
n593 -> n594  [color=red, key=0, style=solid];
n593 -> n478  [color=red, key=2, style=dotted];
n593 -> n595  [color=red, key=1, label=arguments, style=dashed];
n593 -> n599  [color=red, key=1, label=arguments, style=dashed];
n593 -> n604  [color=red, key=1, label=arguments, style=dashed];
n599 -> n600  [color=red, key=0, style=solid];
n599 -> n90  [color=red, key=2, style=dotted];
n599 -> n603  [color=red, key=1, label=result, style=dashed];
n601 -> n602  [color=red, key=0, style=solid];
n601 -> n611  [color=red, key=2, style=dotted];
n608 -> n609  [color=red, key=0, style=solid];
n608 -> n406  [color=red, key=2, style=dotted];
n608 -> n608  [color=red, key=1, label=hadError, style=dashed];
n591 -> n592  [color=red, key=0, style=solid];
n591 -> n411  [color=red, key=2, style=dotted];
n605 -> n606  [color=red, key=0, style=solid];
n605 -> n594  [color=red, key=0, style=solid];
n606 -> n607  [color=red, key=0, style=solid];
n606 -> n594  [color=red, key=0, style=solid];
n606 -> n513  [color=red, key=2, style=dotted];
n594 -> n595  [color=red, key=0, style=solid];
n594 -> n608  [color=red, key=0, style=solid];
n594 -> n123  [color=red, key=2, style=dotted];
n595 -> n596  [color=red, key=0, style=solid];
n595 -> n597  [color=red, key=1, label=argument, style=dashed];
n595 -> n606  [color=red, key=1, label=argument, style=dashed];
n604 -> n594  [color=red, key=0, style=solid];
n604 -> n123  [color=red, key=2, style=dotted];
n596 -> n597  [color=red, key=0, style=solid];
n596 -> n594  [color=red, key=0, style=solid];
n596 -> n33  [color=red, key=2, style=dotted];
n597 -> n598  [color=red, key=0, style=solid];
n597 -> n97  [color=red, key=2, style=dotted];
n597 -> n599  [color=red, key=1, label=parser, style=dashed];
n597 -> n601  [color=red, key=1, label=parser, style=dashed];
n598 -> n599  [color=red, key=0, style=solid];
n598 -> n605  [color=red, key=0, style=solid];
n600 -> n601  [color=red, key=0, style=solid];
n600 -> n603  [color=red, key=0, style=solid];
n603 -> n604  [color=red, key=0, style=solid];
n603 -> n594  [color=red, key=0, style=solid];
n602 -> n594  [color=red, key=0, style=solid];
n602 -> n608  [color=red, key=1, label=hadError, style=dashed];
n611 -> n624  [color=red, key=0, style=solid];
n611 -> n626  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
n611 -> n587  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
n611 -> d631  [color=green, key=0, style=solid];
n611 -> d633  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
n607 -> n594  [color=red, key=0, style=solid];
n607 -> n608  [color=red, key=1, label=hadError, style=dashed];
n609 -> n610  [color=red, key=0, style=solid];
n610 -> n587  [color=blue, key=0, style=bold];
n612 -> n613  [color=red, key=0, style=solid];
n612 -> n616  [color=red, key=1, label=caseSensitive, style=dashed];
n612 -> n619  [color=red, key=1, label=caseSensitive, style=dashed];
n614 -> n615  [color=red, key=0, style=solid];
n614 -> n622  [color=red, key=0, style=solid];
n614 -> n329  [color=red, key=3, label="Local variable int i", style=bold];
n615 -> n616  [color=red, key=0, style=solid];
n615 -> n618  [color=red, key=0, style=solid];
n615 -> n33  [color=red, key=2, style=dotted];
n616 -> n617  [color=red, key=0, style=solid];
n616 -> n618  [color=red, key=0, style=solid];
n616 -> n127  [color=red, key=2, style=dotted];
n618 -> n619  [color=red, key=0, style=solid];
n618 -> n621  [color=red, key=0, style=solid];
n618 -> n33  [color=red, key=2, style=dotted];
n619 -> n620  [color=red, key=0, style=solid];
n619 -> n621  [color=red, key=0, style=solid];
n619 -> n131  [color=red, key=2, style=dotted];
n613 -> n614  [color=red, key=0, style=solid];
n613 -> n616  [color=red, key=1, label=i, style=dashed];
n613 -> n619  [color=red, key=1, label=i, style=dashed];
n613 -> n621  [color=red, key=1, label=i, style=dashed];
n621 -> n614  [color=red, key=0, style=solid];
n621 -> n621  [color=red, key=1, label=i, style=dashed];
n622 -> n623  [color=red, key=0, style=solid];
n617 -> n623  [color=red, key=0, style=solid];
n620 -> n623  [color=red, key=0, style=solid];
n623 -> n586  [color=blue, key=0, style=bold];
n624 -> n625  [color=red, key=0, style=solid];
n624 -> n626  [color=red, key=1, label=commandLineOptionsBase, style=dashed];
n626 -> n627  [color=red, key=0, style=solid];
n626 -> n628  [color=red, key=2, style=dotted];
n625 -> n626  [color=red, key=0, style=solid];
n625 -> n627  [color=red, key=0, style=solid];
n627 -> n611  [color=blue, key=0, style=bold];
n629 -> n630  [color=red, key=0, style=solid];
n629 -> n631  [color=red, key=0, style=solid];
n630 -> n631  [color=red, key=0, style=solid];
n630 -> n51  [color=red, key=2, style=dotted];
n631 -> n484  [color=blue, key=0, style=bold];
n632 -> n633  [color=red, key=0, style=solid];
n632 -> n634  [color=red, key=0, style=solid];
n632 -> n33  [color=red, key=2, style=dotted];
n633 -> n634  [color=red, key=0, style=solid];
n633 -> n635  [color=red, key=2, style=dotted];
n634 -> n217  [color=blue, key=0, style=bold];
n636 -> n637  [color=red, key=0, style=solid];
n636 -> n638  [color=red, key=1, label=string, style=dashed];
n636 -> d644  [color=green, key=0, style=solid];
n636 -> d645  [color=green, key=1, label=string, style=dashed];
n637 -> n638  [color=red, key=0, style=solid];
n637 -> n639  [color=red, key=0, style=solid];
n638 -> n639  [color=red, key=0, style=solid];
n638 -> n640  [color=red, key=2, style=dotted];
n639 -> n636  [color=blue, key=0, style=bold];
n641 -> n642  [color=red, key=0, style=solid];
n641 -> n89  [color=red, key=2, style=dotted];
n641 -> n650  [color=red, key=1, label=list, style=dashed];
n641 -> n651  [color=red, key=1, label=list, style=dashed];
n642 -> n643  [color=red, key=0, style=solid];
n642 -> n651  [color=red, key=0, style=solid];
n643 -> n644  [color=red, key=0, style=solid];
n643 -> n653  [color=red, key=2, style=dotted];
n643 -> n654  [color=red, key=2, style=dotted];
n650 -> n644  [color=red, key=0, style=solid];
n650 -> n453  [color=red, key=2, style=dotted];
n650 -> n124  [color=red, key=2, style=dotted];
n651 -> n652  [color=red, key=0, style=solid];
n644 -> n645  [color=red, key=0, style=solid];
n644 -> n651  [color=red, key=0, style=solid];
n644 -> n646  [color=red, key=1, label=property, style=dashed];
n644 -> n648  [color=red, key=1, label=property, style=dashed];
n644 -> n650  [color=red, key=1, label=property, style=dashed];
n645 -> n646  [color=red, key=0, style=solid];
n645 -> n644  [color=red, key=0, style=solid];
n646 -> n647  [color=red, key=0, style=solid];
n646 -> n655  [color=red, key=2, style=dotted];
n648 -> n649  [color=red, key=0, style=solid];
n648 -> n656  [color=red, key=2, style=dotted];
n648 -> n650  [color=red, key=1, label=attribute, style=dashed];
n647 -> n648  [color=red, key=0, style=solid];
n647 -> n644  [color=red, key=0, style=solid];
n649 -> n650  [color=red, key=0, style=solid];
n649 -> n644  [color=red, key=0, style=solid];
n652 -> n75  [color=blue, key=0, style=bold];
n657 -> n658  [color=red, key=0, style=solid];
n657 -> n653  [color=red, key=2, style=dotted];
n657 -> n665  [color=red, key=2, style=dotted];
n658 -> n659  [color=red, key=0, style=solid];
n658 -> n663  [color=red, key=0, style=solid];
n658 -> n660  [color=red, key=1, label=method, style=dashed];
n658 -> n662  [color=red, key=1, label=method, style=dashed];
n659 -> n660  [color=red, key=0, style=solid];
n659 -> n658  [color=red, key=0, style=solid];
n663 -> n664  [color=red, key=0, style=solid];
n660 -> n661  [color=red, key=0, style=solid];
n660 -> n656  [color=red, key=2, style=dotted];
n660 -> n662  [color=red, key=1, label=attribute, style=dashed];
n662 -> n664  [color=red, key=0, style=solid];
n662 -> n453  [color=red, key=2, style=dotted];
n661 -> n662  [color=red, key=0, style=solid];
n661 -> n658  [color=red, key=0, style=solid];
n664 -> n585  [color=blue, key=0, style=bold];
n666 -> n667  [color=red, key=0, style=solid];
n666 -> n670  [color=red, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n666 -> n58  [color=red, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n666 -> d58  [color=green, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n666 -> d674  [color=green, key=0, style=solid];
n666 -> d677  [color=green, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
n667 -> n668  [color=red, key=0, style=solid];
n667 -> n653  [color=red, key=2, style=dotted];
n667 -> n665  [color=red, key=2, style=dotted];
n668 -> n669  [color=red, key=0, style=solid];
n668 -> n673  [color=red, key=0, style=solid];
n668 -> n670  [color=red, key=1, label=method, style=dashed];
n669 -> n670  [color=red, key=0, style=solid];
n669 -> n668  [color=red, key=0, style=solid];
n673 -> n674  [color=red, key=0, style=solid];
n670 -> n671  [color=red, key=0, style=solid];
n670 -> n656  [color=red, key=2, style=dotted];
n670 -> n672  [color=red, key=1, label=attribute, style=dashed];
n671 -> n672  [color=red, key=0, style=solid];
n671 -> n668  [color=red, key=0, style=solid];
n672 -> n674  [color=red, key=0, style=solid];
n674 -> n666  [color=blue, key=0, style=bold];
n675 -> n676  [color=red, key=0, style=solid];
n675 -> n677  [color=red, key=1, label=object, style=dashed];
n675 -> d683  [color=green, key=0, style=solid];
n675 -> d684  [color=green, key=1, label=object, style=dashed];
n676 -> n677  [color=red, key=0, style=solid];
n676 -> n89  [color=red, key=2, style=dotted];
n676 -> n684  [color=red, key=1, label=list, style=dashed];
n676 -> n685  [color=red, key=1, label=list, style=dashed];
n677 -> n678  [color=red, key=0, style=solid];
n677 -> n653  [color=red, key=2, style=dotted];
n677 -> n654  [color=red, key=2, style=dotted];
n684 -> n678  [color=red, key=0, style=solid];
n684 -> n124  [color=red, key=2, style=dotted];
n685 -> n686  [color=red, key=0, style=solid];
n678 -> n679  [color=red, key=0, style=solid];
n678 -> n685  [color=red, key=0, style=solid];
n678 -> n680  [color=red, key=1, label=property, style=dashed];
n678 -> n682  [color=red, key=1, label=property, style=dashed];
n679 -> n680  [color=red, key=0, style=solid];
n679 -> n678  [color=red, key=0, style=solid];
n680 -> n681  [color=red, key=0, style=solid];
n680 -> n655  [color=red, key=2, style=dotted];
n682 -> n683  [color=red, key=0, style=solid];
n682 -> n656  [color=red, key=2, style=dotted];
n682 -> n684  [color=red, key=1, label=attribute, style=dashed];
n681 -> n682  [color=red, key=0, style=solid];
n681 -> n678  [color=red, key=0, style=solid];
n683 -> n684  [color=red, key=0, style=solid];
n683 -> n678  [color=red, key=0, style=solid];
n686 -> n675  [color=blue, key=0, style=bold];
n687 -> n688  [color=red, key=0, style=solid];
n687 -> n58  [color=red, key=3, label="method methodReturn TAttribute GetAttribute", style=bold];
n687 -> d58  [color=green, key=3, label="method methodReturn TAttribute GetAttribute", style=bold];
n687 -> d695  [color=green, key=0, style=solid];
n688 -> n689  [color=red, key=0, style=solid];
n688 -> n694  [color=red, key=2, style=dotted];
n688 -> n695  [color=red, key=2, style=dotted];
n689 -> n690  [color=red, key=0, style=solid];
n689 -> n696  [color=red, key=2, style=dotted];
n689 -> n692  [color=red, key=1, label=a, style=dashed];
n690 -> n691  [color=red, key=0, style=solid];
n690 -> n692  [color=red, key=0, style=solid];
n692 -> n693  [color=red, key=0, style=solid];
n691 -> n693  [color=red, key=0, style=solid];
n693 -> n687  [color=blue, key=0, style=bold];
n697 -> n698  [color=red, key=0, style=solid];
n697 -> n699  [color=red, key=2, style=dotted];
n698 -> n324  [color=blue, key=0, style=bold];
n700 -> n701  [color=red, key=0, style=solid];
n700 -> d708  [color=green, key=0, style=solid];
n701 -> n702  [color=red, key=0, style=solid];
n701 -> n703  [color=red, key=2, style=dotted];
n702 -> n700  [color=blue, key=0, style=bold];
d1 -> n2  [color=green, key=0, style=solid];
d4 -> d5  [color=green, key=0, style=solid];
d5 -> d6  [color=green, key=0, style=solid];
d6 -> n7  [color=green, key=0, style=solid];
d9 -> d10  [color=green, key=0, style=solid];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d13  [color=green, key=1, label=method, style=dashed];
d11 -> d13  [color=green, key=0, style=solid];
d11 -> d12  [color=green, key=0, style=solid];
d11 -> n15  [color=green, key=2, style=dotted];
d13 -> n14  [color=green, key=0, style=solid];
d13 -> n17  [color=green, key=2, style=dotted];
d12 -> n14  [color=green, key=0, style=solid];
d12 -> n16  [color=green, key=2, style=dotted];
d18 -> n19  [color=green, key=0, style=solid];
d18 -> n20  [color=green, key=2, style=dotted];
d24 -> d25  [color=green, key=0, style=solid];
d24 -> d26  [color=green, key=0, style=solid];
d24 -> n33  [color=green, key=2, style=dotted];
d25 -> d28  [color=green, key=0, style=solid];
d26 -> d27  [color=green, key=0, style=solid];
d26 -> d28  [color=green, key=0, style=solid];
d26 -> n33  [color=green, key=2, style=dotted];
d28 -> d30  [color=green, key=0, style=solid];
d28 -> d29  [color=green, key=0, style=solid];
d27 -> d28  [color=green, key=0, style=solid];
d30 -> d31  [color=green, key=0, style=solid];
d31 -> n32  [color=green, key=0, style=solid];
d29 -> n32  [color=green, key=0, style=solid];
d29 -> n34  [color=green, key=2, style=dotted];
d36 -> n37  [color=green, key=0, style=solid];
d39 -> n40  [color=green, key=0, style=solid];
d42 -> n43  [color=green, key=0, style=solid];
d45 -> d46  [color=green, key=0, style=solid];
d45 -> d47  [color=green, key=0, style=solid];
d46 -> n50  [color=green, key=0, style=solid];
d46 -> n51  [color=green, key=2, style=dotted];
d47 -> d48  [color=green, key=0, style=solid];
d47 -> d49  [color=green, key=0, style=solid];
d47 -> n52  [color=green, key=2, style=dotted];
d48 -> n50  [color=green, key=0, style=solid];
d48 -> n53  [color=green, key=2, style=dotted];
d49 -> n50  [color=green, key=0, style=solid];
d55 -> d56  [color=green, key=0, style=solid];
d56 -> d57  [color=green, key=0, style=solid];
d56 -> n62  [color=green, key=2, style=dotted];
d56 -> d59  [color=green, key=1, label=concreteType, style=dashed];
d56 -> d60  [color=green, key=1, label=property, style=dashed];
d57 -> d59  [color=green, key=0, style=solid];
d57 -> d58  [color=green, key=0, style=solid];
d59 -> d60  [color=green, key=0, style=solid];
d59 -> n63  [color=green, key=2, style=dotted];
d59 -> n64  [color=green, key=2, style=dotted];
d60 -> n61  [color=green, key=0, style=solid];
d60 -> n65  [color=green, key=2, style=dotted];
d58 -> n61  [color=green, key=0, style=solid];
d67 -> d68  [color=green, key=0, style=solid];
d67 -> n75  [color=green, key=2, style=dotted];
d67 -> d70  [color=green, key=1, label=list, style=dashed];
d67 -> d72  [color=green, key=1, label=list, style=dashed];
d68 -> d69  [color=green, key=0, style=solid];
d68 -> d70  [color=green, key=0, style=solid];
d70 -> d71  [color=green, key=0, style=solid];
d70 -> d72  [color=green, key=0, style=solid];
d72 -> d73  [color=green, key=0, style=solid];
d69 -> n74  [color=green, key=0, style=solid];
d71 -> n74  [color=green, key=0, style=solid];
d71 -> n34  [color=green, key=2, style=dotted];
d73 -> n74  [color=green, key=0, style=solid];
d76 -> d77  [color=green, key=0, style=solid];
d77 -> d78  [color=green, key=0, style=solid];
d77 -> n75  [color=green, key=2, style=dotted];
d77 -> d80  [color=green, key=1, label=list, style=dashed];
d77 -> d82  [color=green, key=1, label=list, style=dashed];
d78 -> d79  [color=green, key=0, style=solid];
d78 -> d80  [color=green, key=0, style=solid];
d80 -> d81  [color=green, key=0, style=solid];
d80 -> d82  [color=green, key=0, style=solid];
d82 -> d83  [color=green, key=0, style=solid];
d82 -> d84  [color=green, key=1, label=pairZero, style=dashed];
d79 -> n85  [color=green, key=0, style=solid];
d81 -> n85  [color=green, key=0, style=solid];
d81 -> n34  [color=green, key=2, style=dotted];
d83 -> d84  [color=green, key=0, style=solid];
d83 -> n85  [color=green, key=1, label="out System.Type", style=dashed];
d84 -> n85  [color=green, key=0, style=solid];
d87 -> n88  [color=green, key=0, style=solid];
d87 -> n89  [color=green, key=2, style=dotted];
d93 -> n94  [color=green, key=0, style=solid];
d93 -> n95  [color=green, key=2, style=dotted];
d93 -> n96  [color=green, key=2, style=dotted];
d98 -> d99  [color=green, key=0, style=solid];
d98 -> d100  [color=green, key=0, style=solid];
d98 -> d108  [color=green, key=2, style=dotted];
d99 -> n105  [color=green, key=0, style=solid];
d100 -> d101  [color=green, key=0, style=solid];
d100 -> d102  [color=green, key=0, style=solid];
d100 -> n106  [color=green, key=2, style=dotted];
d108 -> d711  [color=green, key=0, style=solid];
d108 -> d712  [color=green, key=1, label=string, style=dashed];
d108 -> n97  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d108 -> n109  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d101 -> n105  [color=green, key=0, style=solid];
d102 -> d103  [color=green, key=0, style=solid];
d102 -> d104  [color=green, key=0, style=solid];
d103 -> n105  [color=green, key=0, style=solid];
d103 -> n107  [color=green, key=2, style=dotted];
d104 -> d105  [color=green, key=0, style=solid];
d104 -> d106  [color=green, key=0, style=solid];
d105 -> n105  [color=green, key=0, style=solid];
d105 -> n108  [color=green, key=2, style=dotted];
d106 -> n105  [color=green, key=0, style=solid];
d113 -> d114  [color=green, key=0, style=solid];
d113 -> d115  [color=green, key=0, style=solid];
d113 -> d108  [color=green, key=2, style=dotted];
d114 -> n113  [color=green, key=0, style=solid];
d115 -> d116  [color=green, key=0, style=solid];
d115 -> d117  [color=green, key=0, style=solid];
d116 -> n113  [color=green, key=0, style=solid];
d116 -> n106  [color=green, key=2, style=dotted];
d117 -> n113  [color=green, key=0, style=solid];
d422 -> d114  [color=green, key=3, label="Local variable bool requiredRulesAllMet", style=bold];
d422 -> d423  [color=green, key=0, style=solid];
d422 -> d427  [color=green, key=1, label=requiredRulesAllMet, style=dashed];
d120 -> d121  [color=green, key=0, style=solid];
d120 -> n89  [color=green, key=2, style=dotted];
d120 -> d123  [color=green, key=1, label=list, style=dashed];
d120 -> d126  [color=green, key=1, label=list, style=dashed];
d121 -> d122  [color=green, key=0, style=solid];
d121 -> d124  [color=green, key=0, style=solid];
d121 -> n123  [color=green, key=2, style=dotted];
d123 -> d121  [color=green, key=0, style=solid];
d123 -> n124  [color=green, key=2, style=dotted];
d126 -> n122  [color=green, key=0, style=solid];
d122 -> d123  [color=green, key=0, style=solid];
d122 -> d124  [color=green, key=0, style=solid];
d122 -> n109  [color=green, key=2, style=dotted];
d124 -> d125  [color=green, key=0, style=solid];
d124 -> d126  [color=green, key=0, style=solid];
d124 -> n125  [color=green, key=2, style=dotted];
d125 -> n122  [color=green, key=0, style=solid];
d125 -> n126  [color=green, key=2, style=dotted];
d133 -> n129  [color=green, key=0, style=solid];
d133 -> n130  [color=green, key=2, style=dotted];
d137 -> n133  [color=green, key=0, style=solid];
d137 -> n130  [color=green, key=2, style=dotted];
d140 -> n136  [color=green, key=0, style=solid];
d140 -> n137  [color=green, key=2, style=dotted];
d143 -> d144  [color=green, key=0, style=solid];
d143 -> d145  [color=green, key=0, style=solid];
d144 -> n143  [color=green, key=0, style=solid];
d145 -> d146  [color=green, key=0, style=solid];
d145 -> d147  [color=green, key=0, style=solid];
d146 -> n143  [color=green, key=0, style=solid];
d147 -> n143  [color=green, key=0, style=solid];
d150 -> d151  [color=green, key=0, style=solid];
d150 -> n147  [color=green, key=0, style=solid];
d151 -> n147  [color=green, key=0, style=solid];
d151 -> n126  [color=green, key=2, style=dotted];
d154 -> d155  [color=green, key=0, style=solid];
d154 -> n151  [color=green, key=0, style=solid];
d155 -> n151  [color=green, key=0, style=solid];
d155 -> n126  [color=green, key=2, style=dotted];
d160 -> d161  [color=green, key=0, style=solid];
d161 -> n157  [color=green, key=0, style=solid];
d167 -> n163  [color=green, key=0, style=solid];
d170 -> d171  [color=green, key=0, style=solid];
d170 -> n206  [color=green, key=2, style=dotted];
d170 -> n207  [color=green, key=2, style=dotted];
d170 -> d178  [color=green, key=1, label=parts, style=dashed];
d170 -> d180  [color=green, key=1, label=parts, style=dashed];
d170 -> d182  [color=green, key=1, label=parts, style=dashed];
d170 -> d188  [color=green, key=1, label=parts, style=dashed];
d170 -> d204  [color=green, key=1, label=parts, style=dashed];
d171 -> d172  [color=green, key=0, style=solid];
d171 -> d173  [color=green, key=1, label=option, style=dashed];
d171 -> d175  [color=green, key=1, label=option, style=dashed];
d171 -> d176  [color=green, key=1, label=option, style=dashed];
d171 -> d177  [color=green, key=1, label=option, style=dashed];
d171 -> d181  [color=green, key=1, label=option, style=dashed];
d171 -> d182  [color=green, key=1, label=option, style=dashed];
d171 -> d184  [color=green, key=1, label=option, style=dashed];
d171 -> d186  [color=green, key=1, label=option, style=dashed];
d171 -> d189  [color=green, key=1, label=option, style=dashed];
d171 -> d191  [color=green, key=1, label=option, style=dashed];
d171 -> d193  [color=green, key=1, label=option, style=dashed];
d171 -> d194  [color=green, key=1, label=option, style=dashed];
d171 -> d196  [color=green, key=1, label=option, style=dashed];
d171 -> d198  [color=green, key=1, label=option, style=dashed];
d171 -> d200  [color=green, key=1, label=option, style=dashed];
d171 -> d202  [color=green, key=1, label=option, style=dashed];
d171 -> d206  [color=green, key=1, label=option, style=dashed];
d171 -> d208  [color=green, key=1, label=option, style=dashed];
d178 -> d179  [color=green, key=0, style=solid];
d178 -> d180  [color=green, key=0, style=solid];
d178 -> n109  [color=green, key=2, style=dotted];
d180 -> d181  [color=green, key=0, style=solid];
d180 -> d193  [color=green, key=0, style=solid];
d182 -> d183  [color=green, key=0, style=solid];
d182 -> n208  [color=green, key=2, style=dotted];
d182 -> d185  [color=green, key=1, label=valueSetting, style=dashed];
d188 -> d189  [color=green, key=0, style=solid];
d188 -> n209  [color=green, key=2, style=dotted];
d204 -> d206  [color=green, key=0, style=solid];
d204 -> d205  [color=green, key=0, style=solid];
d172 -> d173  [color=green, key=0, style=solid];
d172 -> n208  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d172 -> n210  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d172 -> n211  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d173 -> d174  [color=green, key=0, style=solid];
d173 -> d175  [color=green, key=0, style=solid];
d175 -> d176  [color=green, key=0, style=solid];
d176 -> d177  [color=green, key=0, style=solid];
d176 -> n148  [color=green, key=2, style=dotted];
d177 -> d178  [color=green, key=0, style=solid];
d177 -> d204  [color=green, key=0, style=solid];
d181 -> d182  [color=green, key=0, style=solid];
d181 -> d186  [color=green, key=0, style=solid];
d184 -> d185  [color=green, key=0, style=solid];
d184 -> n92  [color=green, key=2, style=dotted];
d186 -> d187  [color=green, key=0, style=solid];
d186 -> n144  [color=green, key=2, style=dotted];
d189 -> d190  [color=green, key=0, style=solid];
d189 -> n210  [color=green, key=2, style=dotted];
d189 -> d192  [color=green, key=1, label=valueSetting, style=dashed];
d191 -> d192  [color=green, key=0, style=solid];
d191 -> n92  [color=green, key=2, style=dotted];
d193 -> d194  [color=green, key=0, style=solid];
d193 -> d198  [color=green, key=0, style=solid];
d194 -> d195  [color=green, key=0, style=solid];
d194 -> n208  [color=green, key=2, style=dotted];
d194 -> d197  [color=green, key=1, label=valueSetting, style=dashed];
d196 -> d197  [color=green, key=0, style=solid];
d196 -> n92  [color=green, key=2, style=dotted];
d198 -> d199  [color=green, key=0, style=solid];
d198 -> n144  [color=green, key=2, style=dotted];
d200 -> d201  [color=green, key=0, style=solid];
d200 -> n210  [color=green, key=2, style=dotted];
d200 -> d203  [color=green, key=1, label=valueSetting, style=dashed];
d202 -> d203  [color=green, key=0, style=solid];
d202 -> n92  [color=green, key=2, style=dotted];
d206 -> d207  [color=green, key=0, style=solid];
d206 -> n211  [color=green, key=2, style=dotted];
d206 -> d209  [color=green, key=1, label=valueSetting, style=dashed];
d208 -> d209  [color=green, key=0, style=solid];
d208 -> n92  [color=green, key=2, style=dotted];
d179 -> n205  [color=green, key=0, style=solid];
d183 -> d184  [color=green, key=0, style=solid];
d183 -> d185  [color=green, key=0, style=solid];
d185 -> n205  [color=green, key=0, style=solid];
d185 -> n134  [color=green, key=2, style=dotted];
d187 -> d188  [color=green, key=0, style=solid];
d187 -> n114  [color=green, key=2, style=dotted];
d187 -> d189  [color=green, key=1, label=items, style=dashed];
d190 -> d191  [color=green, key=0, style=solid];
d190 -> d192  [color=green, key=0, style=solid];
d192 -> n205  [color=green, key=0, style=solid];
d192 -> n134  [color=green, key=2, style=dotted];
d195 -> d196  [color=green, key=0, style=solid];
d195 -> d197  [color=green, key=0, style=solid];
d197 -> n205  [color=green, key=0, style=solid];
d197 -> n137  [color=green, key=2, style=dotted];
d199 -> d200  [color=green, key=0, style=solid];
d199 -> n114  [color=green, key=2, style=dotted];
d201 -> d202  [color=green, key=0, style=solid];
d201 -> d203  [color=green, key=0, style=solid];
d203 -> n205  [color=green, key=0, style=solid];
d203 -> n134  [color=green, key=2, style=dotted];
d207 -> d208  [color=green, key=0, style=solid];
d207 -> d209  [color=green, key=0, style=solid];
d209 -> n205  [color=green, key=0, style=solid];
d209 -> n134  [color=green, key=2, style=dotted];
d205 -> n205  [color=green, key=0, style=solid];
d174 -> n205  [color=green, key=0, style=solid];
d218 -> d219  [color=green, key=0, style=solid];
d218 -> n217  [color=green, key=2, style=dotted];
d219 -> d220  [color=green, key=0, style=solid];
d220 -> n216  [color=green, key=0, style=solid];
d224 -> n220  [color=green, key=0, style=solid];
d227 -> d228  [color=green, key=0, style=solid];
d227 -> d231  [color=green, key=0, style=solid];
d228 -> d229  [color=green, key=0, style=solid];
d231 -> d232  [color=green, key=0, style=solid];
d229 -> d230  [color=green, key=0, style=solid];
d229 -> n229  [color=green, key=2, style=dotted];
d232 -> n228  [color=green, key=0, style=solid];
d230 -> n228  [color=green, key=0, style=solid];
d236 -> d237  [color=green, key=0, style=solid];
d236 -> d238  [color=green, key=0, style=solid];
d237 -> n236  [color=green, key=0, style=solid];
d237 -> n34  [color=green, key=2, style=dotted];
d238 -> d239  [color=green, key=0, style=solid];
d238 -> d240  [color=green, key=0, style=solid];
d239 -> n236  [color=green, key=0, style=solid];
d239 -> n34  [color=green, key=2, style=dotted];
d240 -> n236  [color=green, key=0, style=solid];
d240 -> n206  [color=green, key=2, style=dotted];
d243 -> n239  [color=green, key=0, style=solid];
d243 -> n240  [color=green, key=2, style=dotted];
d248 -> n244  [color=green, key=0, style=solid];
d251 -> d252  [color=green, key=0, style=solid];
d251 -> n212  [color=green, key=2, style=dotted];
d251 -> n206  [color=green, key=2, style=dotted];
d251 -> d253  [color=green, key=1, label=group, style=dashed];
d251 -> d259  [color=green, key=1, label=group, style=dashed];
d251 -> d262  [color=green, key=1, label=group, style=dashed];
d251 -> d264  [color=green, key=1, label=group, style=dashed];
d251 -> d270  [color=green, key=1, label=group, style=dashed];
d251 -> d288  [color=green, key=1, label=group, style=dashed];
d252 -> d253  [color=green, key=0, style=solid];
d252 -> d292  [color=green, key=0, style=solid];
d252 -> n123  [color=green, key=2, style=dotted];
d253 -> d254  [color=green, key=0, style=solid];
d253 -> d256  [color=green, key=1, label=option, style=dashed];
d253 -> d257  [color=green, key=1, label=option, style=dashed];
d253 -> d258  [color=green, key=1, label=option, style=dashed];
d253 -> d263  [color=green, key=1, label=option, style=dashed];
d253 -> d264  [color=green, key=1, label=option, style=dashed];
d253 -> d266  [color=green, key=1, label=option, style=dashed];
d253 -> d268  [color=green, key=1, label=option, style=dashed];
d253 -> d271  [color=green, key=1, label=option, style=dashed];
d253 -> d273  [color=green, key=1, label=option, style=dashed];
d253 -> d277  [color=green, key=1, label=option, style=dashed];
d253 -> d278  [color=green, key=1, label=option, style=dashed];
d253 -> d280  [color=green, key=1, label=option, style=dashed];
d253 -> d282  [color=green, key=1, label=option, style=dashed];
d253 -> d284  [color=green, key=1, label=option, style=dashed];
d253 -> d286  [color=green, key=1, label=option, style=dashed];
d253 -> d290  [color=green, key=1, label=option, style=dashed];
d259 -> d260  [color=green, key=0, style=solid];
d259 -> d261  [color=green, key=0, style=solid];
d262 -> d275  [color=green, key=0, style=solid];
d262 -> d263  [color=green, key=0, style=solid];
d264 -> d265  [color=green, key=0, style=solid];
d264 -> n158  [color=green, key=2, style=dotted];
d264 -> n208  [color=green, key=2, style=dotted];
d264 -> d267  [color=green, key=1, label=valueSetting, style=dashed];
d270 -> d271  [color=green, key=0, style=solid];
d270 -> n158  [color=green, key=2, style=dotted];
d270 -> n209  [color=green, key=2, style=dotted];
d288 -> d289  [color=green, key=0, style=solid];
d288 -> d290  [color=green, key=0, style=solid];
d254 -> d255  [color=green, key=0, style=solid];
d254 -> d256  [color=green, key=0, style=solid];
d256 -> d257  [color=green, key=0, style=solid];
d257 -> d258  [color=green, key=0, style=solid];
d257 -> n148  [color=green, key=2, style=dotted];
d258 -> d259  [color=green, key=0, style=solid];
d258 -> d288  [color=green, key=0, style=solid];
d263 -> d264  [color=green, key=0, style=solid];
d263 -> d268  [color=green, key=0, style=solid];
d266 -> d267  [color=green, key=0, style=solid];
d266 -> n92  [color=green, key=2, style=dotted];
d268 -> d269  [color=green, key=0, style=solid];
d268 -> n144  [color=green, key=2, style=dotted];
d271 -> d272  [color=green, key=0, style=solid];
d271 -> n210  [color=green, key=2, style=dotted];
d271 -> d274  [color=green, key=1, label=valueSetting, style=dashed];
d273 -> d274  [color=green, key=0, style=solid];
d273 -> n92  [color=green, key=2, style=dotted];
d277 -> d278  [color=green, key=0, style=solid];
d277 -> d282  [color=green, key=0, style=solid];
d278 -> d279  [color=green, key=0, style=solid];
d278 -> n208  [color=green, key=2, style=dotted];
d278 -> d281  [color=green, key=1, label=valueSetting, style=dashed];
d280 -> d281  [color=green, key=0, style=solid];
d280 -> n92  [color=green, key=2, style=dotted];
d282 -> d283  [color=green, key=0, style=solid];
d282 -> n144  [color=green, key=2, style=dotted];
d284 -> d285  [color=green, key=0, style=solid];
d284 -> n210  [color=green, key=2, style=dotted];
d284 -> d287  [color=green, key=1, label=valueSetting, style=dashed];
d286 -> d287  [color=green, key=0, style=solid];
d286 -> n92  [color=green, key=2, style=dotted];
d290 -> d291  [color=green, key=0, style=solid];
d290 -> d252  [color=green, key=0, style=solid];
d290 -> n211  [color=green, key=2, style=dotted];
d260 -> n288  [color=green, key=0, style=solid];
d261 -> d262  [color=green, key=0, style=solid];
d261 -> n208  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d261 -> n210  [color=green, key=3, label="Local variable bool valueSetting", style=bold];
d265 -> d266  [color=green, key=0, style=solid];
d265 -> d267  [color=green, key=0, style=solid];
d267 -> n288  [color=green, key=0, style=solid];
d267 -> n134  [color=green, key=2, style=dotted];
d269 -> d270  [color=green, key=0, style=solid];
d269 -> n114  [color=green, key=2, style=dotted];
d269 -> d271  [color=green, key=1, label=items, style=dashed];
d272 -> d273  [color=green, key=0, style=solid];
d272 -> d274  [color=green, key=0, style=solid];
d274 -> n288  [color=green, key=0, style=solid];
d274 -> n137  [color=green, key=2, style=dotted];
d275 -> d276  [color=green, key=0, style=solid];
d275 -> d277  [color=green, key=0, style=solid];
d275 -> n109  [color=green, key=2, style=dotted];
d276 -> n288  [color=green, key=0, style=solid];
d279 -> d280  [color=green, key=0, style=solid];
d279 -> d281  [color=green, key=0, style=solid];
d281 -> n288  [color=green, key=0, style=solid];
d281 -> n137  [color=green, key=2, style=dotted];
d283 -> d284  [color=green, key=0, style=solid];
d283 -> n114  [color=green, key=2, style=dotted];
d285 -> d286  [color=green, key=0, style=solid];
d285 -> d287  [color=green, key=0, style=solid];
d287 -> n288  [color=green, key=0, style=solid];
d287 -> n134  [color=green, key=2, style=dotted];
d289 -> n288  [color=green, key=0, style=solid];
d291 -> n288  [color=green, key=0, style=solid];
d292 -> n288  [color=green, key=0, style=solid];
d255 -> n288  [color=green, key=0, style=solid];
d295 -> d296  [color=green, key=0, style=solid];
d295 -> d304  [color=green, key=0, style=solid];
d296 -> d297  [color=green, key=0, style=solid];
d304 -> n303  [color=green, key=0, style=solid];
d304 -> n304  [color=green, key=2, style=dotted];
d297 -> d298  [color=green, key=0, style=solid];
d298 -> d299  [color=green, key=0, style=solid];
d299 -> d300  [color=green, key=0, style=solid];
d300 -> d301  [color=green, key=0, style=solid];
d301 -> d302  [color=green, key=0, style=solid];
d302 -> d303  [color=green, key=0, style=solid];
d303 -> d305  [color=green, key=0, style=solid];
d305 -> d306  [color=green, key=0, style=solid];
d305 -> d307  [color=green, key=0, style=solid];
d306 -> n303  [color=green, key=0, style=solid];
d307 -> n303  [color=green, key=0, style=solid];
d307 -> n304  [color=green, key=2, style=dotted];
d311 -> d312  [color=green, key=0, style=solid];
d311 -> n75  [color=green, key=2, style=dotted];
d311 -> d313  [color=green, key=1, label=list, style=dashed];
d311 -> d314  [color=green, key=1, label=list, style=dashed];
d312 -> d313  [color=green, key=0, style=solid];
d312 -> d319  [color=green, key=0, style=solid];
d313 -> d314  [color=green, key=0, style=solid];
d313 -> n316  [color=green, key=2, style=dotted];
d313 -> d316  [color=green, key=1, label=map, style=dashed];
d313 -> d317  [color=green, key=1, label=map, style=dashed];
d313 -> d318  [color=green, key=1, label=map, style=dashed];
d314 -> d317  [color=green, key=0, style=solid];
d314 -> d315  [color=green, key=0, style=solid];
d314 -> d316  [color=green, key=1, label=pair, style=dashed];
d316 -> d314  [color=green, key=0, style=solid];
d316 -> n289  [color=green, key=2, style=dotted];
d317 -> d318  [color=green, key=0, style=solid];
d318 -> n315  [color=green, key=0, style=solid];
d319 -> n315  [color=green, key=0, style=solid];
d315 -> d314  [color=green, key=0, style=solid];
d315 -> d316  [color=green, key=0, style=solid];
d322 -> d323  [color=green, key=0, style=solid];
d322 -> d324  [color=green, key=0, style=solid];
d323 -> n322  [color=green, key=0, style=solid];
d323 -> n323  [color=green, key=2, style=dotted];
d324 -> d325  [color=green, key=0, style=solid];
d324 -> d326  [color=green, key=0, style=solid];
d324 -> n324  [color=green, key=2, style=dotted];
d325 -> n322  [color=green, key=0, style=solid];
d325 -> n325  [color=green, key=2, style=dotted];
d326 -> n322  [color=green, key=0, style=solid];
d326 -> n326  [color=green, key=2, style=dotted];
d332 -> d333  [color=green, key=0, style=solid];
d332 -> n339  [color=green, key=2, style=dotted];
d332 -> d337  [color=green, key=1, label=elementType, style=dashed];
d333 -> d334  [color=green, key=0, style=solid];
d333 -> n340  [color=green, key=2, style=dotted];
d333 -> d335  [color=green, key=1, label=array, style=dashed];
d333 -> d337  [color=green, key=1, label=array, style=dashed];
d333 -> d338  [color=green, key=1, label=array, style=dashed];
d337 -> d338  [color=green, key=0, style=solid];
d337 -> n341  [color=green, key=2, style=dotted];
d337 -> n342  [color=green, key=2, style=dotted];
d334 -> d337  [color=green, key=1, label=i, style=dashed];
d334 -> d334  [color=green, key=3, label="Local variable int i", style=bold];
d334 -> d335  [color=green, key=0, style=solid];
d334 -> d341  [color=green, key=1, label=i, style=dashed];
d335 -> d336  [color=green, key=0, style=solid];
d335 -> d342  [color=green, key=0, style=solid];
d338 -> d339  [color=green, key=0, style=solid];
d338 -> d341  [color=green, key=0, style=solid];
d338 -> n64  [color=green, key=2, style=dotted];
d336 -> d337  [color=green, key=0, style=solid];
d339 -> d340  [color=green, key=0, style=solid];
d341 -> d335  [color=green, key=0, style=solid];
d341 -> d341  [color=green, key=1, label=i, style=dashed];
d381 -> d334  [color=green, key=3, label="Local variable int i", style=bold];
d381 -> d383  [color=green, key=1, label=i, style=dashed];
d381 -> d382  [color=green, key=0, style=solid];
d381 -> d384  [color=green, key=1, label=i, style=dashed];
d621 -> d334  [color=green, key=3, label="Local variable int i", style=bold];
d621 -> d622  [color=green, key=0, style=solid];
d621 -> d629  [color=green, key=0, style=solid];
d342 -> n338  [color=green, key=0, style=solid];
d340 -> n338  [color=green, key=0, style=solid];
d348 -> d349  [color=green, key=0, style=solid];
d348 -> d351  [color=green, key=0, style=solid];
d349 -> d350  [color=green, key=0, style=solid];
d351 -> d352  [color=green, key=0, style=solid];
d350 -> d353  [color=green, key=0, style=solid];
d350 -> d355  [color=green, key=0, style=solid];
d350 -> d357  [color=green, key=0, style=solid];
d350 -> d359  [color=green, key=0, style=solid];
d350 -> d361  [color=green, key=0, style=solid];
d350 -> n356  [color=green, key=2, style=dotted];
d350 -> n64  [color=green, key=2, style=dotted];
d353 -> d354  [color=green, key=0, style=solid];
d355 -> d356  [color=green, key=0, style=solid];
d357 -> d358  [color=green, key=0, style=solid];
d359 -> d360  [color=green, key=0, style=solid];
d361 -> n355  [color=green, key=0, style=solid];
d352 -> d353  [color=green, key=0, style=solid];
d352 -> d355  [color=green, key=0, style=solid];
d352 -> d357  [color=green, key=0, style=solid];
d352 -> d359  [color=green, key=0, style=solid];
d352 -> d361  [color=green, key=0, style=solid];
d352 -> n341  [color=green, key=2, style=dotted];
d352 -> n64  [color=green, key=2, style=dotted];
d354 -> n355  [color=green, key=0, style=solid];
d356 -> n355  [color=green, key=0, style=solid];
d358 -> n355  [color=green, key=0, style=solid];
d360 -> n355  [color=green, key=0, style=solid];
d364 -> d365  [color=green, key=0, style=solid];
d364 -> n364  [color=green, key=2, style=dotted];
d364 -> d366  [color=green, key=1, label=nc, style=dashed];
d365 -> d366  [color=green, key=0, style=solid];
d366 -> d367  [color=green, key=0, style=solid];
d366 -> d369  [color=green, key=0, style=solid];
d366 -> n365  [color=green, key=2, style=dotted];
d366 -> n64  [color=green, key=2, style=dotted];
d367 -> d368  [color=green, key=0, style=solid];
d369 -> n363  [color=green, key=0, style=solid];
d368 -> n363  [color=green, key=0, style=solid];
d373 -> d374  [color=green, key=0, style=solid];
d374 -> d375  [color=green, key=0, style=solid];
d374 -> n64  [color=green, key=2, style=dotted];
d375 -> n369  [color=green, key=0, style=solid];
d377 -> d378  [color=green, key=0, style=solid];
d378 -> d379  [color=green, key=0, style=solid];
d378 -> n89  [color=green, key=2, style=dotted];
d378 -> n64  [color=green, key=2, style=dotted];
d379 -> d380  [color=green, key=0, style=solid];
d379 -> n65  [color=green, key=2, style=dotted];
d379 -> d383  [color=green, key=1, label=fieldRef, style=dashed];
d380 -> d381  [color=green, key=0, style=solid];
d380 -> n380  [color=green, key=2, style=dotted];
d380 -> d382  [color=green, key=1, label=values, style=dashed];
d380 -> d383  [color=green, key=1, label=values, style=dashed];
d383 -> d384  [color=green, key=0, style=solid];
d383 -> n124  [color=green, key=2, style=dotted];
d382 -> d383  [color=green, key=0, style=solid];
d382 -> d385  [color=green, key=0, style=solid];
d384 -> d382  [color=green, key=0, style=solid];
d384 -> d384  [color=green, key=1, label=i, style=dashed];
d385 -> n379  [color=green, key=0, style=solid];
d389 -> d390  [color=green, key=0, style=solid];
d389 -> n387  [color=green, key=0, style=solid];
d390 -> d391  [color=green, key=0, style=solid];
d391 -> d392  [color=green, key=0, style=solid];
d391 -> n387  [color=green, key=0, style=solid];
d391 -> n64  [color=green, key=2, style=dotted];
d392 -> d393  [color=green, key=0, style=solid];
d393 -> n387  [color=green, key=0, style=solid];
d393 -> n388  [color=green, key=2, style=dotted];
d397 -> n391  [color=green, key=0, style=solid];
d400 -> n394  [color=green, key=0, style=solid];
d402 -> d403  [color=green, key=0, style=solid];
d403 -> d404  [color=green, key=0, style=solid];
d407 -> d408  [color=green, key=0, style=solid];
d407 -> n405  [color=green, key=2, style=dotted];
d405 -> d407  [color=green, key=0, style=solid];
d405 -> d408  [color=green, key=1, label=comparer, style=dashed];
d406 -> d407  [color=green, key=0, style=solid];
d406 -> d408  [color=green, key=1, label=comparer, style=dashed];
d408 -> d409  [color=green, key=0, style=solid];
d408 -> n405  [color=green, key=2, style=dotted];
d409 -> d410  [color=green, key=0, style=solid];
d409 -> n404  [color=green, key=0, style=solid];
d410 -> n404  [color=green, key=0, style=solid];
d410 -> n405  [color=green, key=2, style=dotted];
d404 -> d405  [color=green, key=0, style=solid];
d404 -> d406  [color=green, key=0, style=solid];
d414 -> n408  [color=green, key=0, style=solid];
d414 -> n409  [color=green, key=2, style=dotted];
d414 -> n410  [color=green, key=2, style=dotted];
d419 -> d420  [color=green, key=0, style=solid];
d419 -> n414  [color=green, key=0, style=solid];
d420 -> d419  [color=green, key=0, style=solid];
d420 -> n381  [color=green, key=2, style=dotted];
d423 -> d424  [color=green, key=0, style=solid];
d423 -> d427  [color=green, key=0, style=solid];
d423 -> d425  [color=green, key=1, label=option, style=dashed];
d427 -> n421  [color=green, key=0, style=solid];
d424 -> d423  [color=green, key=0, style=solid];
d424 -> d425  [color=green, key=0, style=solid];
d426 -> d423  [color=green, key=0, style=solid];
d426 -> d427  [color=green, key=1, label=requiredRulesAllMet, style=dashed];
d425 -> d426  [color=green, key=0, style=solid];
d425 -> n422  [color=green, key=2, style=dotted];
d430 -> d431  [color=green, key=0, style=solid];
d430 -> d432  [color=green, key=0, style=solid];
d431 -> n433  [color=green, key=0, style=solid];
d432 -> d433  [color=green, key=0, style=solid];
d432 -> d435  [color=green, key=0, style=solid];
d432 -> d434  [color=green, key=1, label=option, style=dashed];
d433 -> d432  [color=green, key=0, style=solid];
d433 -> d434  [color=green, key=0, style=solid];
d434 -> d432  [color=green, key=0, style=solid];
d434 -> n434  [color=green, key=2, style=dotted];
d435 -> d436  [color=green, key=0, style=solid];
d435 -> d439  [color=green, key=0, style=solid];
d435 -> d437  [color=green, key=1, label=info, style=dashed];
d436 -> d435  [color=green, key=0, style=solid];
d436 -> d437  [color=green, key=0, style=solid];
d439 -> n433  [color=green, key=0, style=solid];
d437 -> d438  [color=green, key=0, style=solid];
d437 -> n422  [color=green, key=2, style=dotted];
d438 -> n433  [color=green, key=0, style=solid];
d442 -> d443  [color=green, key=0, style=solid];
d442 -> d444  [color=green, key=1, label=setName, style=dashed];
d442 -> d445  [color=green, key=1, label=setName, style=dashed];
d443 -> d444  [color=green, key=0, style=solid];
d443 -> d445  [color=green, key=0, style=solid];
d443 -> n440  [color=green, key=2, style=dotted];
d444 -> d445  [color=green, key=0, style=solid];
d444 -> n389  [color=green, key=2, style=dotted];
d444 -> n441  [color=green, key=2, style=dotted];
d445 -> n439  [color=green, key=0, style=solid];
d445 -> n392  [color=green, key=2, style=dotted];
d449 -> d450  [color=green, key=0, style=solid];
d449 -> d457  [color=green, key=1, label=commandLineOptionsBase, style=dashed];
d450 -> d452  [color=green, key=0, style=solid];
d450 -> d451  [color=green, key=0, style=solid];
d457 -> n451  [color=green, key=0, style=solid];
d457 -> n96  [color=green, key=2, style=dotted];
d452 -> d453  [color=green, key=0, style=solid];
d452 -> n452  [color=green, key=2, style=dotted];
d452 -> d454  [color=green, key=1, label=error, style=dashed];
d452 -> d456  [color=green, key=1, label=error, style=dashed];
d452 -> d457  [color=green, key=1, label=error, style=dashed];
d453 -> d454  [color=green, key=0, style=solid];
d453 -> d455  [color=green, key=0, style=solid];
d454 -> d455  [color=green, key=0, style=solid];
d456 -> d457  [color=green, key=0, style=solid];
d455 -> d456  [color=green, key=0, style=solid];
d455 -> d457  [color=green, key=0, style=solid];
d451 -> n451  [color=green, key=0, style=solid];
d461 -> d462  [color=green, key=0, style=solid];
d462 -> n456  [color=green, key=0, style=solid];
d465 -> d466  [color=green, key=0, style=solid];
d465 -> n462  [color=green, key=2, style=dotted];
d465 -> d467  [color=green, key=1, label=leftHash, style=dashed];
d466 -> d467  [color=green, key=0, style=solid];
d466 -> n462  [color=green, key=2, style=dotted];
d467 -> n461  [color=green, key=0, style=solid];
d471 -> d472  [color=green, key=0, style=solid];
d471 -> d474  [color=green, key=1, label=other, style=dashed];
d472 -> d473  [color=green, key=0, style=solid];
d472 -> d474  [color=green, key=0, style=solid];
d474 -> n468  [color=green, key=0, style=solid];
d474 -> n469  [color=green, key=2, style=dotted];
d473 -> n468  [color=green, key=0, style=solid];
d477 -> n471  [color=green, key=0, style=solid];
d477 -> n152  [color=green, key=2, style=dotted];
d479 -> d480  [color=green, key=0, style=solid];
d479 -> n154  [color=green, key=2, style=dotted];
d480 -> n474  [color=green, key=0, style=solid];
d483 -> n477  [color=green, key=0, style=solid];
d483 -> n89  [color=green, key=2, style=dotted];
d486 -> d487  [color=green, key=0, style=solid];
d486 -> n484  [color=green, key=2, style=dotted];
d487 -> d488  [color=green, key=0, style=solid];
d488 -> d489  [color=green, key=0, style=solid];
d489 -> n483  [color=green, key=0, style=solid];
d493 -> n487  [color=green, key=0, style=solid];
d496 -> d497  [color=green, key=0, style=solid];
d496 -> d499  [color=green, key=0, style=solid];
d497 -> d498  [color=green, key=0, style=solid];
d499 -> n493  [color=green, key=0, style=solid];
d498 -> n493  [color=green, key=0, style=solid];
d502 -> n496  [color=green, key=0, style=solid];
d502 -> n240  [color=green, key=2, style=dotted];
d505 -> d506  [color=green, key=0, style=solid];
d505 -> d507  [color=green, key=0, style=solid];
d506 -> n504  [color=green, key=0, style=solid];
d506 -> n34  [color=green, key=2, style=dotted];
d507 -> d508  [color=green, key=0, style=solid];
d507 -> d510  [color=green, key=0, style=solid];
d508 -> d509  [color=green, key=0, style=solid];
d510 -> n504  [color=green, key=0, style=solid];
d509 -> n504  [color=green, key=0, style=solid];
d515 -> d516  [color=green, key=0, style=solid];
d516 -> d517  [color=green, key=0, style=solid];
d516 -> n66  [color=green, key=2, style=dotted];
d517 -> d518  [color=green, key=0, style=solid];
d517 -> n512  [color=green, key=0, style=solid];
d518 -> n512  [color=green, key=0, style=solid];
d518 -> n54  [color=green, key=2, style=dotted];
d521 -> d522  [color=green, key=0, style=solid];
d521 -> d523  [color=green, key=0, style=solid];
d522 -> n519  [color=green, key=0, style=solid];
d523 -> d524  [color=green, key=0, style=solid];
d524 -> d525  [color=green, key=0, style=solid];
d524 -> n124  [color=green, key=2, style=dotted];
d525 -> n519  [color=green, key=0, style=solid];
d532 -> n526  [color=green, key=0, style=solid];
d532 -> n475  [color=green, key=2, style=dotted];
d542 -> n536  [color=green, key=0, style=solid];
d545 -> n539  [color=green, key=0, style=solid];
d548 -> d549  [color=green, key=0, style=solid];
d549 -> n543  [color=green, key=0, style=solid];
d552 -> d553  [color=green, key=0, style=solid];
d553 -> n547  [color=green, key=0, style=solid];
d556 -> d557  [color=green, key=0, style=solid];
d557 -> d558  [color=green, key=0, style=solid];
d558 -> n552  [color=green, key=0, style=solid];
d561 -> d562  [color=green, key=0, style=solid];
d562 -> d563  [color=green, key=0, style=solid];
d563 -> d564  [color=green, key=0, style=solid];
d564 -> n558  [color=green, key=0, style=solid];
d567 -> n561  [color=green, key=0, style=solid];
d567 -> n548  [color=green, key=2, style=dotted];
d570 -> n564  [color=green, key=0, style=solid];
d570 -> n532  [color=green, key=2, style=dotted];
d573 -> d574  [color=green, key=0, style=solid];
d573 -> n484  [color=green, key=2, style=dotted];
d574 -> n568  [color=green, key=0, style=solid];
d577 -> n571  [color=green, key=0, style=solid];
d577 -> n572  [color=green, key=2, style=dotted];
d580 -> d581  [color=green, key=0, style=solid];
d580 -> n484  [color=green, key=2, style=dotted];
d581 -> d582  [color=green, key=0, style=solid];
d581 -> n484  [color=green, key=2, style=dotted];
d582 -> d583  [color=green, key=0, style=solid];
d582 -> n585  [color=green, key=2, style=dotted];
d582 -> d584  [color=green, key=1, label=pair, style=dashed];
d582 -> d586  [color=green, key=1, label=pair, style=dashed];
d583 -> d584  [color=green, key=0, style=solid];
d583 -> d590  [color=green, key=0, style=solid];
d584 -> d585  [color=green, key=0, style=solid];
d584 -> d589  [color=green, key=0, style=solid];
d584 -> n586  [color=green, key=2, style=dotted];
d584 -> n587  [color=green, key=2, style=dotted];
d586 -> d587  [color=green, key=0, style=solid];
d586 -> n8  [color=green, key=2, style=dotted];
d590 -> n584  [color=green, key=0, style=solid];
d590 -> n587  [color=green, key=2, style=dotted];
d585 -> d586  [color=green, key=0, style=solid];
d589 -> n584  [color=green, key=0, style=solid];
d587 -> d588  [color=green, key=0, style=solid];
d587 -> n588  [color=green, key=2, style=dotted];
d588 -> n584  [color=green, key=0, style=solid];
d596 -> d597  [color=green, key=0, style=solid];
d596 -> d615  [color=green, key=1, label=hadError, style=dashed];
d597 -> d598  [color=green, key=0, style=solid];
d597 -> n305  [color=green, key=2, style=dotted];
d597 -> d606  [color=green, key=1, label=optionMap, style=dashed];
d597 -> d615  [color=green, key=1, label=optionMap, style=dashed];
d615 -> d615  [color=green, key=1, label=hadError, style=dashed];
d615 -> d616  [color=green, key=0, style=solid];
d615 -> n406  [color=green, key=2, style=dotted];
d598 -> d599  [color=green, key=0, style=solid];
d598 -> n411  [color=green, key=2, style=dotted];
d606 -> d607  [color=green, key=0, style=solid];
d606 -> n90  [color=green, key=2, style=dotted];
d606 -> d610  [color=green, key=1, label=result, style=dashed];
d599 -> d600  [color=green, key=0, style=solid];
d599 -> n507  [color=green, key=2, style=dotted];
d599 -> d612  [color=green, key=1, label=target, style=dashed];
d599 -> d613  [color=green, key=1, label=target, style=dashed];
d600 -> d601  [color=green, key=0, style=solid];
d600 -> n478  [color=green, key=2, style=dotted];
d600 -> d602  [color=green, key=1, label=arguments, style=dashed];
d600 -> d606  [color=green, key=1, label=arguments, style=dashed];
d600 -> d611  [color=green, key=1, label=arguments, style=dashed];
d612 -> d613  [color=green, key=0, style=solid];
d612 -> d601  [color=green, key=0, style=solid];
d613 -> d614  [color=green, key=0, style=solid];
d613 -> d601  [color=green, key=0, style=solid];
d613 -> n513  [color=green, key=2, style=dotted];
d601 -> d615  [color=green, key=0, style=solid];
d601 -> d602  [color=green, key=0, style=solid];
d601 -> n123  [color=green, key=2, style=dotted];
d602 -> d613  [color=green, key=1, label=argument, style=dashed];
d602 -> d603  [color=green, key=0, style=solid];
d602 -> d604  [color=green, key=1, label=argument, style=dashed];
d611 -> d601  [color=green, key=0, style=solid];
d611 -> n123  [color=green, key=2, style=dotted];
d604 -> d606  [color=green, key=1, label=parser, style=dashed];
d604 -> d608  [color=green, key=1, label=parser, style=dashed];
d604 -> d605  [color=green, key=0, style=solid];
d604 -> n97  [color=green, key=2, style=dotted];
d605 -> d606  [color=green, key=0, style=solid];
d605 -> d612  [color=green, key=0, style=solid];
d607 -> d608  [color=green, key=0, style=solid];
d607 -> d610  [color=green, key=0, style=solid];
d610 -> d601  [color=green, key=0, style=solid];
d610 -> d611  [color=green, key=0, style=solid];
d608 -> d609  [color=green, key=0, style=solid];
d608 -> n611  [color=green, key=2, style=dotted];
d609 -> d615  [color=green, key=1, label=hadError, style=dashed];
d609 -> d601  [color=green, key=0, style=solid];
d614 -> d615  [color=green, key=1, label=hadError, style=dashed];
d614 -> d601  [color=green, key=0, style=solid];
d616 -> n610  [color=green, key=0, style=solid];
d603 -> d601  [color=green, key=0, style=solid];
d603 -> d604  [color=green, key=0, style=solid];
d603 -> n33  [color=green, key=2, style=dotted];
d619 -> d620  [color=green, key=0, style=solid];
d619 -> d623  [color=green, key=1, label=caseSensitive, style=dashed];
d619 -> d626  [color=green, key=1, label=caseSensitive, style=dashed];
d620 -> d621  [color=green, key=0, style=solid];
d620 -> d623  [color=green, key=1, label=i, style=dashed];
d620 -> d626  [color=green, key=1, label=i, style=dashed];
d620 -> d628  [color=green, key=1, label=i, style=dashed];
d623 -> d624  [color=green, key=0, style=solid];
d623 -> d625  [color=green, key=0, style=solid];
d623 -> n127  [color=green, key=2, style=dotted];
d626 -> d627  [color=green, key=0, style=solid];
d626 -> d628  [color=green, key=0, style=solid];
d626 -> n131  [color=green, key=2, style=dotted];
d628 -> d621  [color=green, key=0, style=solid];
d628 -> d628  [color=green, key=1, label=i, style=dashed];
d622 -> d623  [color=green, key=0, style=solid];
d622 -> d625  [color=green, key=0, style=solid];
d622 -> n33  [color=green, key=2, style=dotted];
d629 -> n623  [color=green, key=0, style=solid];
d625 -> d626  [color=green, key=0, style=solid];
d625 -> d628  [color=green, key=0, style=solid];
d625 -> n33  [color=green, key=2, style=dotted];
d624 -> n623  [color=green, key=0, style=solid];
d627 -> n623  [color=green, key=0, style=solid];
d631 -> d632  [color=green, key=0, style=solid];
d631 -> d633  [color=green, key=1, label=commandLineOptionsBase, style=dashed];
d632 -> d633  [color=green, key=0, style=solid];
d632 -> n627  [color=green, key=0, style=solid];
d633 -> n627  [color=green, key=0, style=solid];
d633 -> n628  [color=green, key=2, style=dotted];
d636 -> d637  [color=green, key=0, style=solid];
d636 -> n631  [color=green, key=0, style=solid];
d637 -> n631  [color=green, key=0, style=solid];
d637 -> n51  [color=green, key=2, style=dotted];
d639 -> d640  [color=green, key=0, style=solid];
d639 -> n634  [color=green, key=0, style=solid];
d639 -> n33  [color=green, key=2, style=dotted];
d640 -> n634  [color=green, key=0, style=solid];
d640 -> n635  [color=green, key=2, style=dotted];
d644 -> d645  [color=green, key=0, style=solid];
d644 -> n639  [color=green, key=0, style=solid];
d645 -> n639  [color=green, key=0, style=solid];
d645 -> n640  [color=green, key=2, style=dotted];
d648 -> d649  [color=green, key=0, style=solid];
d648 -> n89  [color=green, key=2, style=dotted];
d648 -> d657  [color=green, key=1, label=list, style=dashed];
d648 -> d658  [color=green, key=1, label=list, style=dashed];
d649 -> d650  [color=green, key=0, style=solid];
d649 -> d658  [color=green, key=0, style=solid];
d657 -> d651  [color=green, key=0, style=solid];
d657 -> n453  [color=green, key=2, style=dotted];
d657 -> n124  [color=green, key=2, style=dotted];
d658 -> n652  [color=green, key=0, style=solid];
d650 -> d651  [color=green, key=0, style=solid];
d650 -> n653  [color=green, key=2, style=dotted];
d650 -> n654  [color=green, key=2, style=dotted];
d651 -> d657  [color=green, key=1, label=property, style=dashed];
d651 -> d658  [color=green, key=0, style=solid];
d651 -> d652  [color=green, key=0, style=solid];
d651 -> d653  [color=green, key=1, label=property, style=dashed];
d651 -> d655  [color=green, key=1, label=property, style=dashed];
d655 -> d657  [color=green, key=1, label=attribute, style=dashed];
d655 -> d656  [color=green, key=0, style=solid];
d655 -> n656  [color=green, key=2, style=dotted];
d656 -> d657  [color=green, key=0, style=solid];
d656 -> d651  [color=green, key=0, style=solid];
d652 -> d651  [color=green, key=0, style=solid];
d652 -> d653  [color=green, key=0, style=solid];
d654 -> d651  [color=green, key=0, style=solid];
d654 -> d655  [color=green, key=0, style=solid];
d653 -> d654  [color=green, key=0, style=solid];
d653 -> n655  [color=green, key=2, style=dotted];
d664 -> d665  [color=green, key=0, style=solid];
d664 -> n653  [color=green, key=2, style=dotted];
d664 -> n665  [color=green, key=2, style=dotted];
d665 -> d666  [color=green, key=0, style=solid];
d665 -> d670  [color=green, key=0, style=solid];
d665 -> d667  [color=green, key=1, label=method, style=dashed];
d665 -> d669  [color=green, key=1, label=method, style=dashed];
d666 -> d665  [color=green, key=0, style=solid];
d666 -> d667  [color=green, key=0, style=solid];
d668 -> d665  [color=green, key=0, style=solid];
d668 -> d669  [color=green, key=0, style=solid];
d670 -> n664  [color=green, key=0, style=solid];
d667 -> d668  [color=green, key=0, style=solid];
d667 -> n656  [color=green, key=2, style=dotted];
d667 -> d669  [color=green, key=1, label=attribute, style=dashed];
d669 -> n664  [color=green, key=0, style=solid];
d669 -> n453  [color=green, key=2, style=dotted];
d674 -> d675  [color=green, key=0, style=solid];
d674 -> n653  [color=green, key=2, style=dotted];
d674 -> n665  [color=green, key=2, style=dotted];
d675 -> d676  [color=green, key=0, style=solid];
d675 -> d680  [color=green, key=0, style=solid];
d675 -> d677  [color=green, key=1, label=method, style=dashed];
d676 -> d675  [color=green, key=0, style=solid];
d676 -> d677  [color=green, key=0, style=solid];
d678 -> d675  [color=green, key=0, style=solid];
d678 -> d679  [color=green, key=0, style=solid];
d680 -> n674  [color=green, key=0, style=solid];
d677 -> d678  [color=green, key=0, style=solid];
d677 -> n656  [color=green, key=2, style=dotted];
d677 -> d679  [color=green, key=1, label=attribute, style=dashed];
d679 -> n674  [color=green, key=0, style=solid];
d683 -> d684  [color=green, key=0, style=solid];
d683 -> n89  [color=green, key=2, style=dotted];
d683 -> d691  [color=green, key=1, label=list, style=dashed];
d683 -> d692  [color=green, key=1, label=list, style=dashed];
d684 -> d685  [color=green, key=0, style=solid];
d684 -> n653  [color=green, key=2, style=dotted];
d684 -> n654  [color=green, key=2, style=dotted];
d691 -> d685  [color=green, key=0, style=solid];
d691 -> n124  [color=green, key=2, style=dotted];
d692 -> n686  [color=green, key=0, style=solid];
d685 -> d692  [color=green, key=0, style=solid];
d685 -> d686  [color=green, key=0, style=solid];
d685 -> d687  [color=green, key=1, label=property, style=dashed];
d685 -> d689  [color=green, key=1, label=property, style=dashed];
d689 -> d691  [color=green, key=1, label=attribute, style=dashed];
d689 -> d690  [color=green, key=0, style=solid];
d689 -> n656  [color=green, key=2, style=dotted];
d690 -> d691  [color=green, key=0, style=solid];
d690 -> d685  [color=green, key=0, style=solid];
d686 -> d685  [color=green, key=0, style=solid];
d686 -> d687  [color=green, key=0, style=solid];
d688 -> d685  [color=green, key=0, style=solid];
d688 -> d689  [color=green, key=0, style=solid];
d687 -> d688  [color=green, key=0, style=solid];
d687 -> n655  [color=green, key=2, style=dotted];
d695 -> d696  [color=green, key=0, style=solid];
d695 -> n694  [color=green, key=2, style=dotted];
d695 -> n695  [color=green, key=2, style=dotted];
d696 -> d697  [color=green, key=0, style=solid];
d696 -> n696  [color=green, key=2, style=dotted];
d696 -> d699  [color=green, key=1, label=a, style=dashed];
d697 -> d698  [color=green, key=0, style=solid];
d697 -> d699  [color=green, key=0, style=solid];
d699 -> n693  [color=green, key=0, style=solid];
d698 -> n693  [color=green, key=0, style=solid];
d704 -> n698  [color=green, key=0, style=solid];
d704 -> n699  [color=green, key=2, style=dotted];
d708 -> n702  [color=green, key=0, style=solid];
d708 -> n703  [color=green, key=2, style=dotted];
d711 -> d712  [color=green, key=0, style=solid];
d712 -> d713  [color=green, key=0, style=solid];
d712 -> d714  [color=green, key=2, style=dotted];
d713 -> d108  [color=blue, key=0, style=bold];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_5  [key=2, style=dotted];
m0_11 -> m0_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_11 -> m0_15  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_6  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_16 -> m0_10  [color=blue, key=0, style=bold];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_91  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_6  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_129  [key=2, style=dotted];
m0_180 -> m0_176  [color=blue, key=0, style=bold];
m0_260 -> m0_261  [color=green, key=0, style=solid];
m0_261 -> m0_262  [color=green, key=0, style=solid];
m0_261 -> m0_91  [color=green, key=2, style=dotted];
m0_262 -> m0_263  [color=green, key=0, style=solid];
m0_262 -> m0_265  [color=green, key=2, style=dotted];
m0_262 -> m0_6  [color=green, key=2, style=dotted];
m0_263 -> m0_264  [color=green, key=0, style=solid];
m0_263 -> m0_129  [color=green, key=2, style=dotted];
m0_264 -> m0_260  [color=blue, key=0, style=bold];
m0_242 -> m0_243  [color=green, key=0, style=solid];
m0_243 -> m0_244  [color=green, key=0, style=solid];
m0_243 -> m0_91  [color=green, key=2, style=dotted];
m0_243 -> m0_246  [color=green, key=1, label=options, style=dashed];
m0_244 -> m0_245  [color=green, key=0, style=solid];
m0_244 -> m0_6  [color=green, key=2, style=dotted];
m0_246 -> m0_247  [color=green, key=0, style=solid];
m0_246 -> m0_18  [color=green, key=2, style=dotted];
m0_245 -> m0_246  [color=green, key=0, style=solid];
m0_245 -> m0_17  [color=green, key=2, style=dotted];
m0_247 -> m0_242  [color=blue, key=0, style=bold];
m0_284 -> m0_285  [color=green, key=0, style=solid];
m0_285 -> m0_286  [color=green, key=0, style=solid];
m0_285 -> m0_91  [color=green, key=2, style=dotted];
m0_286 -> m0_287  [color=green, key=0, style=solid];
m0_286 -> m0_289  [color=green, key=2, style=dotted];
m0_286 -> m0_6  [color=green, key=2, style=dotted];
m0_287 -> m0_288  [color=green, key=0, style=solid];
m0_287 -> m0_129  [color=green, key=2, style=dotted];
m0_288 -> m0_284  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_254 -> m0_255  [color=green, key=0, style=solid];
m0_255 -> m0_256  [color=green, key=0, style=solid];
m0_255 -> m0_91  [color=green, key=2, style=dotted];
m0_255 -> m0_258  [color=green, key=1, label=options, style=dashed];
m0_256 -> m0_257  [color=green, key=0, style=solid];
m0_256 -> m0_6  [color=green, key=2, style=dotted];
m0_258 -> m0_259  [color=green, key=0, style=solid];
m0_258 -> m0_18  [color=green, key=2, style=dotted];
m0_257 -> m0_258  [color=green, key=0, style=solid];
m0_257 -> m0_17  [color=green, key=2, style=dotted];
m0_259 -> m0_254  [color=blue, key=0, style=bold];
m0_248 -> m0_249  [color=green, key=0, style=solid];
m0_249 -> m0_250  [color=green, key=0, style=solid];
m0_249 -> m0_91  [color=green, key=2, style=dotted];
m0_249 -> m0_252  [color=green, key=1, label=options, style=dashed];
m0_250 -> m0_251  [color=green, key=0, style=solid];
m0_250 -> m0_6  [color=green, key=2, style=dotted];
m0_252 -> m0_253  [color=green, key=0, style=solid];
m0_252 -> m0_18  [color=green, key=2, style=dotted];
m0_251 -> m0_252  [color=green, key=0, style=solid];
m0_251 -> m0_17  [color=green, key=2, style=dotted];
m0_253 -> m0_248  [color=blue, key=0, style=bold];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_6  [key=2, style=dotted];
m0_9 -> m0_7  [color=blue, key=0, style=bold];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_80  [key=2, style=dotted];
m0_73 -> m0_76  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_73 -> m0_77  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_73 -> m0_78  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_6  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_18  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_18  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_19  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_17  [key=2, style=dotted];
m0_79 -> m0_72  [color=blue, key=0, style=bold];
m0_224 -> m0_225  [color=green, key=0, style=solid];
m0_225 -> m0_226  [color=green, key=0, style=solid];
m0_225 -> m0_91  [color=green, key=2, style=dotted];
m0_225 -> m0_228  [color=green, key=1, label=options, style=dashed];
m0_226 -> m0_227  [color=green, key=0, style=solid];
m0_226 -> m0_6  [color=green, key=2, style=dotted];
m0_228 -> m0_229  [color=green, key=0, style=solid];
m0_228 -> m0_18  [color=green, key=2, style=dotted];
m0_227 -> m0_228  [color=green, key=0, style=solid];
m0_227 -> m0_17  [color=green, key=2, style=dotted];
m0_229 -> m0_224  [color=blue, key=0, style=bold];
m0_161 -> m0_162  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_6  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_129  [key=2, style=dotted];
m0_165 -> m0_161  [color=blue, key=0, style=bold];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_39  [key=2, style=dotted];
m0_30 -> m0_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_30 -> m0_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_6  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_40  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_18  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_19  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_17  [key=2, style=dotted];
m0_38 -> m0_29  [color=blue, key=0, style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_5  [key=2, style=dotted];
m0_68 -> m0_70  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_6  [key=2, style=dotted];
m0_69 -> m0_41  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_19  [key=2, style=dotted];
m0_71 -> m0_67  [color=blue, key=0, style=bold];
m0_278 -> m0_279  [color=green, key=0, style=solid];
m0_279 -> m0_280  [color=green, key=0, style=solid];
m0_279 -> m0_91  [color=green, key=2, style=dotted];
m0_280 -> m0_281  [color=green, key=0, style=solid];
m0_280 -> m0_283  [color=green, key=2, style=dotted];
m0_280 -> m0_6  [color=green, key=2, style=dotted];
m0_281 -> m0_282  [color=green, key=0, style=solid];
m0_281 -> m0_129  [color=green, key=2, style=dotted];
m0_282 -> m0_278  [color=blue, key=0, style=bold];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_65  [key=2, style=dotted];
m0_53 -> m0_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_59  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_53 -> m0_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_6  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_18  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_66  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_18  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_66  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_18  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_66  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_18  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_66  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_17  [key=2, style=dotted];
m0_64 -> m0_52  [color=blue, key=0, style=bold];
m0_191 -> m0_192  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_91  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_6  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_129  [key=2, style=dotted];
m0_195 -> m0_191  [color=blue, key=0, style=bold];
m0_151 -> m0_152  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_159  [key=2, style=dotted];
m0_152 -> n534  [key=2, style=dotted];
m0_152 -> m0_154  [color=darkseagreen4, key=1, label=local, style=dashed];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_144  [key=2, style=dotted];
m0_153 -> m0_156  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_153 -> m0_157  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_6  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_18  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_18  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_17  [key=2, style=dotted];
m0_158 -> m0_151  [color=blue, key=0, style=bold];
m0_218 -> m0_219  [color=green, key=0, style=solid];
m0_219 -> m0_220  [color=green, key=0, style=solid];
m0_219 -> m0_91  [color=green, key=2, style=dotted];
m0_219 -> m0_222  [color=green, key=1, label=options, style=dashed];
m0_220 -> m0_221  [color=green, key=0, style=solid];
m0_220 -> m0_6  [color=green, key=2, style=dotted];
m0_222 -> m0_223  [color=green, key=0, style=solid];
m0_222 -> m0_18  [color=green, key=2, style=dotted];
m0_221 -> m0_222  [color=green, key=0, style=solid];
m0_221 -> m0_17  [color=green, key=2, style=dotted];
m0_223 -> m0_218  [color=blue, key=0, style=bold];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_143  [key=2, style=dotted];
m0_136 -> m0_138  [color=darkseagreen4, key=1, label=local, style=dashed];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_144  [key=2, style=dotted];
m0_137 -> m0_140  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_137 -> m0_141  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_6  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_18  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_18  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_17  [key=2, style=dotted];
m0_142 -> m0_135  [color=blue, key=0, style=bold];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_88  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_90  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_91  [key=2, style=dotted];
m0_84 -> m0_87  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_6  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_18  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_17  [key=2, style=dotted];
m0_89 -> m0_81  [color=blue, key=0, style=bold];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_5  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_6  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_129  [key=2, style=dotted];
m0_134 -> m0_130  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_5  [key=2, style=dotted];
m0_21 -> m0_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_21 -> m0_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_6  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_18  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_18  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_18  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_19  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_17  [key=2, style=dotted];
m0_28 -> m0_20  [color=blue, key=0, style=bold];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_211  [key=2, style=dotted];
m0_203 -> m0_206  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_203 -> m0_207  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_203 -> m0_208  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_203 -> m0_209  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_6  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_18  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_18  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_18  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_18  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_17  [key=2, style=dotted];
m0_210 -> m0_202  [color=blue, key=0, style=bold];
m0_145 -> m0_146  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_143  [key=2, style=dotted];
m0_146 -> m0_148  [color=darkseagreen4, key=1, label=local, style=dashed];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_144  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_6  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_129  [key=2, style=dotted];
m0_150 -> m0_145  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_2  [color=blue, key=0, style=bold];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_6  [key=2, style=dotted];
m0_122 -> m0_119  [color=blue, key=0, style=bold];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_5  [key=2, style=dotted];
m0_197 -> m0_200  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_6  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_18  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_17  [key=2, style=dotted];
m0_201 -> m0_196  [color=blue, key=0, style=bold];
m0_212 -> m0_213  [color=green, key=0, style=solid];
m0_212 -> m0_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_31  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_44  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_54  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_69  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_74  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_75  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_85  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_96  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_97  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_103  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_104  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_112  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_113  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_121  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_126  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_127  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_132  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_133  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_139  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_149  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_155  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_163  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_164  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_168  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_169  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_173  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_174  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_178  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_179  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_183  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_184  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_188  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_189  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_193  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_194  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_198  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_199  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_204  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_205  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_214  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_215  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_220  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_221  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_226  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_227  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_232  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_233  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_238  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_239  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_244  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_245  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_250  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_251  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_256  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_257  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_262  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_263  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_268  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_269  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_274  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_275  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_280  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_281  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_286  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_212 -> m0_287  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m0_213 -> m0_214  [color=green, key=0, style=solid];
m0_213 -> m0_5  [color=green, key=2, style=dotted];
m0_213 -> m0_216  [color=green, key=1, label=options, style=dashed];
m0_214 -> m0_215  [color=green, key=0, style=solid];
m0_214 -> m0_6  [color=green, key=2, style=dotted];
m0_216 -> m0_217  [color=green, key=0, style=solid];
m0_216 -> m0_18  [color=green, key=2, style=dotted];
m0_215 -> m0_216  [color=green, key=0, style=solid];
m0_215 -> m0_17  [color=green, key=2, style=dotted];
m0_217 -> m0_212  [color=blue, key=0, style=bold];
m0_266 -> m0_267  [color=green, key=0, style=solid];
m0_267 -> m0_268  [color=green, key=0, style=solid];
m0_267 -> m0_91  [color=green, key=2, style=dotted];
m0_268 -> m0_269  [color=green, key=0, style=solid];
m0_268 -> m0_271  [color=green, key=2, style=dotted];
m0_268 -> m0_6  [color=green, key=2, style=dotted];
m0_269 -> m0_270  [color=green, key=0, style=solid];
m0_269 -> m0_129  [color=green, key=2, style=dotted];
m0_270 -> m0_266  [color=blue, key=0, style=bold];
m0_230 -> m0_231  [color=green, key=0, style=solid];
m0_231 -> m0_232  [color=green, key=0, style=solid];
m0_231 -> m0_91  [color=green, key=2, style=dotted];
m0_231 -> m0_234  [color=green, key=1, label=options, style=dashed];
m0_232 -> m0_233  [color=green, key=0, style=solid];
m0_232 -> m0_6  [color=green, key=2, style=dotted];
m0_234 -> m0_235  [color=green, key=0, style=solid];
m0_234 -> m0_18  [color=green, key=2, style=dotted];
m0_233 -> m0_234  [color=green, key=0, style=solid];
m0_233 -> m0_17  [color=green, key=2, style=dotted];
m0_235 -> m0_230  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_39  [key=2, style=dotted];
m0_43 -> m0_46  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_48  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_49  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_43 -> m0_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_6  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_40  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_41  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_41  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_18  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_19  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_17  [key=2, style=dotted];
m0_51 -> m0_42  [color=blue, key=0, style=bold];
m0_166 -> m0_167  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_91  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_6  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_129  [key=2, style=dotted];
m0_170 -> m0_166  [color=blue, key=0, style=bold];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_91  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_6  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_129  [key=2, style=dotted];
m0_185 -> m0_181  [color=blue, key=0, style=bold];
m0_236 -> m0_237  [color=green, key=0, style=solid];
m0_237 -> m0_238  [color=green, key=0, style=solid];
m0_237 -> m0_91  [color=green, key=2, style=dotted];
m0_237 -> m0_240  [color=green, key=1, label=options, style=dashed];
m0_238 -> m0_239  [color=green, key=0, style=solid];
m0_238 -> m0_6  [color=green, key=2, style=dotted];
m0_240 -> m0_241  [color=green, key=0, style=solid];
m0_240 -> m0_18  [color=green, key=2, style=dotted];
m0_239 -> m0_240  [color=green, key=0, style=solid];
m0_239 -> m0_17  [color=green, key=2, style=dotted];
m0_241 -> m0_236  [color=blue, key=0, style=bold];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_118  [key=2, style=dotted];
m0_111 -> m0_114  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_111 -> m0_115  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_111 -> m0_116  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_6  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_18  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_18  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_18  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_17  [key=2, style=dotted];
m0_117 -> m0_110  [color=blue, key=0, style=bold];
m0_272 -> m0_273  [color=green, key=0, style=solid];
m0_273 -> m0_274  [color=green, key=0, style=solid];
m0_273 -> m0_91  [color=green, key=2, style=dotted];
m0_274 -> m0_275  [color=green, key=0, style=solid];
m0_274 -> m0_277  [color=green, key=2, style=dotted];
m0_274 -> m0_6  [color=green, key=2, style=dotted];
m0_275 -> m0_276  [color=green, key=0, style=solid];
m0_275 -> m0_129  [color=green, key=2, style=dotted];
m0_276 -> m0_272  [color=blue, key=0, style=bold];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_99  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_90  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_91  [key=2, style=dotted];
m0_95 -> m0_98  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_6  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_18  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_17  [key=2, style=dotted];
m0_100 -> m0_92  [color=blue, key=0, style=bold];
m0_186 -> m0_187  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_91  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_6  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_129  [key=2, style=dotted];
m0_190 -> m0_186  [color=blue, key=0, style=bold];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_109  [key=2, style=dotted];
m0_102 -> m0_105  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_102 -> m0_106  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_102 -> m0_107  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_6  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_18  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_18  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_18  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_17  [key=2, style=dotted];
m0_108 -> m0_101  [color=blue, key=0, style=bold];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_5  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_6  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_129  [key=2, style=dotted];
m0_128 -> m0_124  [color=blue, key=0, style=bold];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_91  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_6  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_129  [key=2, style=dotted];
m0_175 -> m0_171  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_26  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_27  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_29  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_30  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_31  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_32  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_33  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_36  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_41  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_42  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_21 -> m1_9  [color=darkorchid, key=3, label="Parameter variable SampleApp.Program.Options options", style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_47  [key=2, style=dotted];
m1_24 -> m1_48  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_48  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_48  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_50  [key=2, style=dotted];
m1_30 -> m1_51  [key=2, style=dotted];
m1_30 -> m1_48  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_48  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_52  [key=2, style=dotted];
m1_32 -> m1_51  [key=2, style=dotted];
m1_32 -> m1_48  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_40  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=0, style=solid];
m1_41 -> m1_57  [key=2, style=dotted];
m1_42 -> m1_45  [key=0, style=solid];
m1_42 -> m1_58  [key=2, style=dotted];
m1_42 -> m1_59  [key=2, style=dotted];
m1_23 -> m1_25  [key=0, style=solid];
m1_23 -> m1_46  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_49  [key=2, style=dotted];
m1_28 -> m1_27  [key=0, style=solid];
m1_28 -> m1_48  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_53  [key=2, style=dotted];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_34 -> m1_38  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_34 -> m1_39  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_49  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_54  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_54  [key=2, style=dotted];
m1_38 -> m1_36  [key=0, style=solid];
m1_38 -> m1_54  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_55  [key=2, style=dotted];
m1_39 -> m1_56  [key=2, style=dotted];
m1_39 -> m1_46  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_59  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=2, style=dotted];
m1_45 -> m1_21  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_16  [key=2, style=dotted];
m1_9 -> m1_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_9 -> m1_13  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_11 -> m1_19  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> n565  [key=2, style=dotted];
m1_10 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_21  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_20  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_8  [color=blue, key=0, style=bold];
m1_60 -> m1_1  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m1_60 -> m1_5  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
}
