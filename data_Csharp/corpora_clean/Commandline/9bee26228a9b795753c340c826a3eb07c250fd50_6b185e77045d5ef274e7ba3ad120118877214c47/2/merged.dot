digraph  {
n704 [label="CommandLine.HelpOptionAttribute", span=""];
n705 [label="CommandLine.OptionAttribute", span=""];
n706 [label="CommandLine.OptionListAttribute", span=""];
n707 [label="CommandLine.ValueListAttribute", span=""];
n708 [label="CommandLine.ArgumentParser", span=""];
n709 [label="CommandLine.BadOptionInfo", span=""];
n710 [label="CommandLine.LongOptionParser", span=""];
n711 [label="CommandLine.OneCharStringEnumerator", span=""];
n712 [label="CommandLine.OptionGroupParser", span=""];
n713 [label="CommandLine.OptionInfo", span=""];
n714 [label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
n715 [label="CommandLine.OptionMap", span=""];
n716 [label="CommandLine.Pair<TLeft, TRight>", span=""];
n717 [label="CommandLine.ParsingError", span=""];
n718 [label="CommandLine.PostParsingState", span=""];
n719 [label="CommandLine.StringArrayEnumerator", span=""];
n720 [label="CommandLine.TargetWrapper", span=""];
n721 [label="CommandLine.CommandLineOptionsBase", span=""];
n722 [label="CommandLine.CommandLineParserSettings", span=""];
n723 [label="CommandLine.CommandLineParser", span=""];
n0 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n1 [label="HelpText = DEFAULT_HELP_TEXT", span="127-127", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", color=red, community=0];
n2 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()"];
n3 [label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)"];
n4 [label="ShortName = shortName", span="138-138", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0];
n5 [label="LongName = longName", span="139-139", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0];
n6 [label="HelpText = DEFAULT_HELP_TEXT", span="140-140", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=red, community=0];
n7 [label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)"];
n8 [label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n9 [label="text = null", span="157-157", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0];
n10 [label="var method = pair.Left", span="159-159", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0];
n13 [label="text = (string)method.Invoke(target, null)", span="163-163", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0];
n11 [label="!CheckMethodSignature(method)", span="160-160", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0];
n12 [label="throw new MemberAccessException();", span="161-161", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=red, community=0];
n15 [label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n14 [label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)"];
n17 [label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0", cluster="System.Reflection.MethodBase.Invoke(object, object[])"];
n16 [label="Entry System.MemberAccessException.MemberAccessException()", span="0-0", cluster="System.MemberAccessException.MemberAccessException()"];
n18 [label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="168-168", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=red, community=0];
n19 [label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)"];
n20 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()"];
n21 [label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)"];
n22 [label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182", cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)"];
n23 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n24 [label="!string.IsNullOrEmpty(shortName)", span="206-206", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n25 [label="_uniqueName = shortName", span="207-207", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n26 [label="!string.IsNullOrEmpty(longName)", span="208-208", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n27 [label="_uniqueName = longName", span="209-209", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n30 [label="base.ShortName = shortName", span="214-214", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n31 [label="base.LongName = longName", span="215-215", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n33 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n28 [label="_uniqueName == null", span="211-211", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n29 [label="throw new InvalidOperationException();", span="212-212", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=red, community=0];
n32 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)"];
n34 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()"];
n35 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)"];
n36 [label="Separator = ':'", span="261-261", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=red, community=0];
n37 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)"];
n38 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)"];
n39 [label="Separator = separator", span="273-273", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=red, community=0];
n40 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)"];
n41 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294", cluster="CommandLine.ValueListAttribute.ValueListAttribute()"];
n42 [label="MaximumElements = -1", span="296-296", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=red, community=0];
n43 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294", cluster="CommandLine.ValueListAttribute.ValueListAttribute()"];
n44 [label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n45 [label="concreteType == null", span="307-307", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0];
n47 [label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="310-310", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0];
n49 [label="_concreteType = concreteType", span="313-313", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0];
n46 [label="throw new ArgumentNullException(''concreteType'');", span="308-308", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0];
n48 [label="throw new CommandLineParserException(''The types are incompatible.'');", span="311-311", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=red, community=0];
n52 [label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0", cluster="System.Type.IsAssignableFrom(System.Type)"];
n50 [label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)"];
n53 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1519-1519", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)"];
n51 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n54 [label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n55 [label="Type concreteType", span="330-330", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0];
n56 [label="var property = GetProperty(target, out concreteType)", span="331-331", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0];
n59 [label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="336-336", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0];
n60 [label="return (IList<string>)property.GetValue(target, null);", span="338-338", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0];
n57 [label="property == null || concreteType == null", span="333-333", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0];
n62 [label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n58 [label="return null;", span="334-334", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=red, community=0];
n63 [label="Entry System.Activator.CreateInstance(System.Type)", span="0-0", cluster="System.Activator.CreateInstance(System.Type)"];
n64 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])"];
n61 [label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="328-328", cluster="CommandLine.ValueListAttribute.GetReference(object)"];
n65 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])"];
n66 [label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n67 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="343-343", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0];
n68 [label="list == null || list.Count == 0", span="344-344", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0];
n75 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1859-1859", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n70 [label="list.Count > 1", span="347-347", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0];
n72 [label="var pairZero = list[0]", span="350-350", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0];
n69 [label="return null;", span="345-345", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0];
n71 [label="throw new InvalidOperationException();", span="348-348", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0];
n73 [label="return pairZero.Right;", span="352-352", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=red, community=0];
n74 [label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341", cluster="CommandLine.ValueListAttribute.GetAttribute(object)"];
n76 [label="concreteType = null", span="357-357", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n77 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="359-359", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n78 [label="list == null || list.Count == 0", span="360-360", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n80 [label="list.Count > 1", span="363-363", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n82 [label="var pairZero = list[0]", span="366-366", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n79 [label="return null;", span="361-361", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n81 [label="throw new InvalidOperationException();", span="364-364", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n83 [label="concreteType = pairZero.Right.ConcreteType", span="367-367", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n84 [label="return pairZero.Left;", span="369-369", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=red, community=0];
n85 [label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)"];
n86 [label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="385-385", cluster="CommandLine.ArgumentParser.ArgumentParser()"];
n87 [label="this.PostParsingState = new List<ParsingError>()", span="387-387", cluster="CommandLine.ArgumentParser.ArgumentParser()", color=red, community=0];
n88 [label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="385-385", cluster="CommandLine.ArgumentParser.ArgumentParser()"];
n89 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()"];
n90 [label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n91 [label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390", cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n92 [label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)"];
n93 [label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="398-398", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=red, community=0];
n94 [label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)"];
n95 [label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)"];
n96 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)"];
n97 [label="Entry CommandLine.ArgumentParser.Create(string, bool)", span="401-401", cluster="CommandLine.ArgumentParser.Create(string, bool)"];
n98 [label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="403-403", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0];
n100 [label="argument[0] == '-' && argument[1] == '-'", span="406-406", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0];
n101 [label="return new LongOptionParser(ignoreUnknownArguments);", span="407-407", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0];
n102 [label="argument[0] == '-'", span="409-409", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0];
n103 [label="return new OptionGroupParser(ignoreUnknownArguments);", span="410-410", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0];
n99 [label="return null;", span="404-404", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0];
n106 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)"];
n104 [label="return null;", span="412-412", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=red, community=0];
n105 [label="Exit CommandLine.ArgumentParser.Create(string, bool)", span="401-401", cluster="CommandLine.ArgumentParser.Create(string, bool)"];
n108 [label="Entry CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="712-712", cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)"];
n107 [label="Entry CommandLine.LongOptionParser.LongOptionParser(bool)", span="539-539", cluster="CommandLine.LongOptionParser.LongOptionParser(bool)"];
n109 [label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="415-415", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n110 [label="argument.Length > 0", span="417-417", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0];
n111 [label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="418-418", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0];
n112 [label="return true;", span="420-420", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=red, community=0];
n113 [label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="415-415", cluster="CommandLine.ArgumentParser.IsInputValue(string)"];
n114 [label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="430-430", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n115 [label="IList<string> list = new List<string>()", span="432-432", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n116 [label="ae.MoveNext()", span="434-434", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n117 [label="IsInputValue(ae.Current)", span="436-436", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n118 [label="list.Add(ae.Current)", span="437-437", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n119 [label="!ae.MovePrevious()", span="441-441", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n121 [label="return list;", span="444-444", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n123 [label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="528-528", cluster="CommandLine.IArgumentEnumerator.MoveNext()"];
n124 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)"];
n120 [label="throw new CommandLineParserException();", span="442-442", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=red, community=0];
n125 [label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="530-530", cluster="CommandLine.IArgumentEnumerator.MovePrevious()"];
n122 [label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="430-430", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)"];
n126 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1515-1515", cluster="CommandLine.CommandLineParserException.CommandLineParserException()"];
n127 [label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="447-447", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)"];
n128 [label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="449-449", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=red, community=0];
n129 [label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="447-447", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)"];
n130 [label="Entry string.Compare(string, string, bool)", span="0-0", cluster="string.Compare(string, string, bool)"];
n131 [label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="452-452", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)"];
n132 [label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="454-454", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=red, community=0];
n133 [label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="452-452", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)"];
n134 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="457-457", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)"];
n135 [label="return BooleanToParserState(value, false);", span="459-459", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=red, community=0];
n136 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="457-457", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)"];
n137 [label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="462-462", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n138 [label="value && !addMoveNextIfTrue", span="464-464", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n140 [label=value, span="467-467", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n139 [label="return ParserState.Success;", span="465-465", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n141 [label="return ParserState.Success | ParserState.MoveOnNextElement;", span="468-468", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n142 [label="return ParserState.Failure;", span="470-470", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=red, community=0];
n143 [label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="462-462", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)"];
n144 [label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="473-473", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n145 [label="!option.IsAttributeArrayCompatible", span="475-475", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0];
n146 [label="throw new CommandLineParserException();", span="476-476", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=red, community=0];
n147 [label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="473-473", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)"];
n148 [label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="479-479", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
n149 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="481-481", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0];
n150 [label="throw new CommandLineParserException();", span="482-482", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=red, community=0];
n151 [label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="479-479", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)"];
n152 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="491-491", cluster="CommandLine.BadOptionInfo.BadOptionInfo()"];
n153 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="491-491", cluster="CommandLine.BadOptionInfo.BadOptionInfo()"];
n154 [label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="495-495", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)"];
n155 [label="ShortName = shortName", span="497-497", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0];
n156 [label="LongName = longName", span="498-498", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=red, community=0];
n157 [label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="495-495", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)"];
n158 [label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="523-523", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()"];
n159 [label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="523-523", cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()"];
n160 [label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="528-528", cluster="CommandLine.IArgumentEnumerator.MoveNext()"];
n161 [label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="530-530", cluster="CommandLine.IArgumentEnumerator.MovePrevious()"];
n162 [label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="541-541", cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", color=red, community=0];
n163 [label="Exit CommandLine.LongOptionParser.LongOptionParser(bool)", span="539-539", cluster="CommandLine.LongOptionParser.LongOptionParser(bool)"];
n164 [label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="544-544", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n165 [label="var parts = argumentEnumerator.Current.Substring(2).Split(new[] { '=' }, 2)", span="546-546", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n166 [label="var option = map[parts[0]]", span="547-547", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n173 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="559-559", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n177 [label="valueSetting = option.SetValue(parts[1], options)", span="566-566", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n182 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="575-575", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n184 [label="valueSetting = option.SetValue(items, options)", span="578-578", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n189 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="588-588", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n194 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="597-597", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n195 [label="valueSetting = option.SetValue(items, options)", span="599-599", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n201 [label="valueSetting = option.SetValue(true, options)", span="611-611", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n206 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n207 [label="Entry string.Split(char[], int)", span="0-0", cluster="string.Split(char[], int)"];
n175 [label="parts.Length == 2", span="562-562", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n183 [label="items.Insert(0, parts[1])", span="576-576", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n199 [label="parts.Length == 2", span="608-608", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n167 [label="bool valueSetting", span="548-548", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n168 [label="option == null", span="550-550", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n170 [label="option.IsDefined = true", span="553-553", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n171 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="555-555", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n172 [label="!option.IsBoolean", span="557-557", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n176 [label="!option.IsArray", span="564-564", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n179 [label="this.DefineOptionThatViolatesFormat(option)", span="568-568", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n181 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="573-573", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n186 [label="this.DefineOptionThatViolatesFormat(option)", span="580-580", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n188 [label="!option.IsArray", span="586-586", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n191 [label="this.DefineOptionThatViolatesFormat(option)", span="590-590", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n193 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="595-595", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n197 [label="this.DefineOptionThatViolatesFormat(option)", span="601-601", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n203 [label="this.DefineOptionThatViolatesFormat(option)", span="613-613", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n169 [label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="551-551", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n174 [label="return ParserState.Failure;", span="560-560", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n178 [label="!valueSetting", span="567-567", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n208 [label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="860-860", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n180 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="570-570", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n209 [label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0", cluster="System.Collections.Generic.IList<T>.Insert(int, T)"];
n185 [label="!valueSetting", span="579-579", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n210 [label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="871-871", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n187 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="582-582", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n190 [label="!valueSetting", span="589-589", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n192 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="592-592", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n196 [label="!valueSetting", span="600-600", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n198 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="604-604", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n200 [label="return ParserState.Failure;", span="609-609", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n202 [label="!valueSetting", span="612-612", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n211 [label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="954-954", cluster="CommandLine.OptionInfo.SetValue(bool, object)"];
n204 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="615-615", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n205 [label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="544-544", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n212 [label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="625-625", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)"];
n213 [label="Assumes.NotNullOrEmpty(value, ''value'')", span="627-627", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0];
n214 [label="_data = value", span="629-629", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0];
n217 [label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1844-1844", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)"];
n215 [label="_index = -1", span="630-630", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=red, community=0];
n216 [label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="625-625", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)"];
n218 [label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="669-669", cluster="CommandLine.OneCharStringEnumerator.Reset()"];
n219 [label="_index = -1", span="671-671", cluster="CommandLine.OneCharStringEnumerator.Reset()", color=red, community=0];
n220 [label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="669-669", cluster="CommandLine.OneCharStringEnumerator.Reset()"];
n221 [label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="674-674", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n222 [label="_index < (_data.Length - 1)", span="676-676", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0];
n223 [label="_index++", span="678-678", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0];
n226 [label="_index = _data.Length", span="682-682", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0];
n224 [label="_currentElement = _data.Substring(_index, 1)", span="679-679", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0];
n225 [label="return true;", span="680-680", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0];
n229 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n227 [label="return false;", span="684-684", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=red, community=0];
n228 [label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="674-674", cluster="CommandLine.OneCharStringEnumerator.MoveNext()"];
n230 [label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="687-687", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n231 [label="_index == -1", span="689-689", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0];
n232 [label="throw new InvalidOperationException();", span="690-690", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0];
n233 [label="_index > _data.Length", span="692-692", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0];
n234 [label="throw new InvalidOperationException();", span="693-693", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0];
n235 [label="return _data.Substring(_index + 1);", span="695-695", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=red, community=0];
n236 [label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="687-687", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()"];
n237 [label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="698-698", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()"];
n238 [label="throw new NotSupportedException();", span="700-700", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=red, community=0];
n239 [label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="698-698", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()"];
n240 [label="Entry System.NotSupportedException.NotSupportedException()", span="0-0", cluster="System.NotSupportedException.NotSupportedException()"];
n241 [label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="703-703", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()"];
n242 [label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="703-703", cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()"];
n243 [label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="714-714", cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", color=red, community=0];
n244 [label="Exit CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="712-712", cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)"];
n245 [label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="717-717", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n246 [label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="719-719", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n248 [label="var option = map[group.Current]", span="722-722", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n254 [label="argumentEnumerator.IsLast && group.IsLast", span="732-732", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n259 [label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="740-740", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n264 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="749-749", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n266 [label="valueSetting = option.SetValue(items, options)", span="752-752", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n270 [label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="759-759", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n273 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="765-765", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n278 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="774-774", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n279 [label="valueSetting = option.SetValue(items, options)", span="776-776", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n283 [label="!@group.IsLast && map[@group.Next] == null", span="784-784", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n285 [label="!option.SetValue(true, options)", span="787-787", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n247 [label="group.MoveNext()", span="720-720", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n257 [label="!group.IsLast", span="736-736", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n265 [label="items.Insert(0, @group.GetRemainingFromNext())", span="750-750", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n287 [label="return ParserState.Success;", span="791-791", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n249 [label="option == null", span="723-723", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n251 [label="option.IsDefined = true", span="726-726", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n252 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="728-728", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n253 [label="!option.IsBoolean", span="730-730", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n258 [label="!option.IsArray", span="738-738", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n261 [label="this.DefineOptionThatViolatesFormat(option)", span="742-742", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n263 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="747-747", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n268 [label="this.DefineOptionThatViolatesFormat(option)", span="754-754", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n272 [label="!option.IsArray", span="763-763", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n275 [label="this.DefineOptionThatViolatesFormat(option)", span="767-767", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n277 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="772-772", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n281 [label="this.DefineOptionThatViolatesFormat(option)", span="778-778", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n250 [label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="724-724", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n255 [label="return ParserState.Failure;", span="733-733", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n256 [label="bool valueSetting", span="735-735", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n260 [label="!valueSetting", span="741-741", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n262 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="744-744", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n267 [label="!valueSetting", span="753-753", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n269 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="756-756", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n271 [label="return ParserState.Failure;", span="760-760", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n274 [label="!valueSetting", span="766-766", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n276 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="769-769", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n280 [label="!valueSetting", span="777-777", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n282 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="780-780", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n284 [label="return ParserState.Failure;", span="785-785", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n286 [label="return ParserState.Failure;", span="788-788", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=red, community=0];
n288 [label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="717-717", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)"];
n289 [label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="809-809", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n290 [label="attribute != null", span="811-811", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n291 [label="_required = attribute.Required", span="813-813", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n292 [label="_helpText = attribute.HelpText", span="814-814", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n293 [label="_shortName = attribute.ShortName", span="815-815", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n294 [label="_longName = attribute.LongName", span="816-816", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n295 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="817-817", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n296 [label="_defaultValue = attribute.DefaultValue", span="818-818", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n297 [label="_hasDefaultValue = attribute.HasDefaultValue", span="819-819", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n298 [label="_attribute = attribute", span="820-820", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n300 [label="property != null", span="825-825", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n301 [label="_property = property", span="826-826", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n299 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="823-823", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n302 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="828-828", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=red, community=0];
n303 [label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="809-809", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)"];
n304 [label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string, string)"];
n305 [label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="839-839", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n306 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="841-841", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n308 [label="var map = new OptionMap(list.Count, settings)", span="844-844", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n312 [label="map.RawOptions = target", span="852-852", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n307 [label="list != null", span="842-842", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n309 [label=list, span="846-846", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n314 [label="return null;", span="857-857", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n316 [label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1082-1082", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n311 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="849-849", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n313 [label="return map;", span="854-854", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n310 [label="pair != null && pair.Right != null", span="848-848", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=red, community=0];
n315 [label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="839-839", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)"];
n317 [label="_attribute is OptionListAttribute", span="862-862", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0];
n318 [label="return SetValueList(value, options);", span="863-863", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0];
n320 [label="return SetNullableValue(value, options);", span="866-866", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0];
n321 [label="return SetValueScalar(value, options);", span="868-868", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0];
n319 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="865-865", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=red, community=0];
n324 [label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1956-1956", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)"];
n322 [label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="860-860", cluster="CommandLine.OptionInfo.SetValue(string, object)"];
n325 [label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="932-932", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n326 [label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="896-896", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n323 [label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="964-964", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n327 [label="Type elementType = _property.PropertyType.GetElementType()", span="873-873", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n328 [label="Array array = Array.CreateInstance(elementType, values.Count)", span="874-874", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n332 [label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="883-883", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n333 [label="_property.SetValue(options, array, null)", span="884-884", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n339 [label="Entry System.Type.GetElementType()", span="0-0", cluster="System.Type.GetElementType()"];
n329 [label="int i = 0", span="876-876", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n340 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)"];
n330 [label="i < array.Length", span="876-876", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n336 [label="i++", span="876-876", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n331 [label=_setValueLock, span="880-880", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n337 [label="return true;", span="893-893", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n341 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)"];
n342 [label="Entry System.Array.SetValue(object, int)", span="0-0", cluster="System.Array.SetValue(object, int)"];
n334 [label=FormatException, span="887-887", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n335 [label="return false;", span="889-889", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=red, community=0];
n338 [label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="871-871", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)"];
n343 [label="_property.PropertyType.IsEnum", span="900-900", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n345 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="904-904", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n347 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="912-912", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n344 [label=_setValueLock, span="902-902", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n346 [label=_setValueLock, span="909-909", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n348 [label=InvalidCastException, span="916-916", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n350 [label=FormatException, span="920-920", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n352 [label=ArgumentException, span="924-924", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n354 [label="return true;", span="929-929", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n356 [label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0", cluster="System.Enum.Parse(System.Type, string, bool)"];
n349 [label="return false;", span="918-918", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n351 [label="return false;", span="922-922", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n353 [label="return false;", span="926-926", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=red, community=0];
n355 [label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="896-896", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)"];
n357 [label="var nc = new NullableConverter(_property.PropertyType)", span="934-934", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0];
n359 [label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="941-941", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0];
n358 [label=_setValueLock, span="938-938", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0];
n364 [label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0", cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)"];
n360 [label=Exception, span="946-946", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0];
n362 [label="return true;", span="951-951", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0];
n365 [label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0", cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)"];
n361 [label="return false;", span="948-948", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=red, community=0];
n363 [label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="932-932", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)"];
n366 [label=_setValueLock, span="956-956", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0];
n367 [label="_property.SetValue(options, value, null)", span="958-958", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0];
n368 [label="return true;", span="960-960", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=red, community=0];
n369 [label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="954-954", cluster="CommandLine.OptionInfo.SetValue(bool, object)"];
n370 [label=_setValueLock, span="966-966", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n371 [label="_property.SetValue(options, new List<string>(), null)", span="968-968", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n372 [label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="970-970", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n373 [label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="971-971", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n376 [label="fieldRef.Add(values[i])", span="975-975", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n374 [label="int i = 0", span="973-973", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n380 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
n375 [label="i < values.Length", span="973-973", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n377 [label="i++", span="973-973", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n378 [label="return true;", span="978-978", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=red, community=0];
n379 [label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="964-964", cluster="CommandLine.OptionInfo.SetValueList(string, object)"];
n381 [label="Entry CommandLine.OptionInfo.SetDefault(object)", span="982-982", cluster="CommandLine.OptionInfo.SetDefault(object)"];
n382 [label=_hasDefaultValue, span="984-984", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0];
n384 [label="_property.SetValue(options, _defaultValue, null)", span="990-990", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0];
n383 [label=_setValueLock, span="986-986", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0];
n387 [label="Exit CommandLine.OptionInfo.SetDefault(object)", span="982-982", cluster="CommandLine.OptionInfo.SetDefault(object)"];
n385 [label=Exception, span="992-992", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0];
n386 [label="throw new CommandLineParserException(''Bad default value.'', e);", span="994-994", cluster="CommandLine.OptionInfo.SetDefault(object)", color=red, community=0];
n388 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1524-1524", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)"];
n389 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1065-1065", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)"];
n390 [label="BadOption = option", span="1067-1067", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=red, community=0];
n391 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1065-1065", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)"];
n392 [label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1072-1072", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()"];
n393 [label="++_count", span="1072-1072", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=red, community=0];
n394 [label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1072-1072", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()"];
n395 [label="_settings = settings", span="1084-1084", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n400 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="1092-1092", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n401 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1093-1093", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n403 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1098-1098", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n396 [label="IEqualityComparer<string> comparer", span="1086-1086", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n397 [label="_settings.CaseSensitive", span="1087-1087", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n398 [label="comparer = StringComparer.Ordinal", span="1088-1088", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n399 [label="comparer = StringComparer.OrdinalIgnoreCase", span="1090-1090", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n405 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)"];
n402 [label="_settings.MutuallyExclusive", span="1095-1095", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=red, community=0];
n404 [label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1082-1082", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)"];
n406 [label="Entry CommandLine.OptionMap.EnforceRules()", span="1132-1132", cluster="CommandLine.OptionMap.EnforceRules()"];
n407 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1134-1134", cluster="CommandLine.OptionMap.EnforceRules()", color=red, community=0];
n408 [label="Exit CommandLine.OptionMap.EnforceRules()", span="1132-1132", cluster="CommandLine.OptionMap.EnforceRules()"];
n409 [label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1161-1161", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n410 [label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1145-1145", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n411 [label="Entry CommandLine.OptionMap.SetDefaults()", span="1137-1137", cluster="CommandLine.OptionMap.SetDefaults()"];
n412 [label="_map.Values", span="1139-1139", cluster="CommandLine.OptionMap.SetDefaults()", color=red, community=0];
n413 [label="option.SetDefault(this.RawOptions)", span="1141-1141", cluster="CommandLine.OptionMap.SetDefaults()", color=red, community=0];
n414 [label="Exit CommandLine.OptionMap.SetDefaults()", span="1137-1137", cluster="CommandLine.OptionMap.SetDefaults()"];
n415 [label="bool requiredRulesAllMet = true", span="1147-1147", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0];
n416 [label="_map.Values", span="1148-1148", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0];
n420 [label="return requiredRulesAllMet;", span="1158-1158", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0];
n417 [label="option.Required && !option.IsDefined", span="1150-1150", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0];
n418 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1152-1152", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0];
n419 [label="requiredRulesAllMet = false", span="1153-1153", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=red, community=0];
n422 [label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n421 [label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1145-1145", cluster="CommandLine.OptionMap.EnforceRequiredRule()"];
n423 [label="!_settings.MutuallyExclusive", span="1163-1163", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n424 [label="return true;", span="1164-1164", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n425 [label="_map.Values", span="1166-1166", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n426 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1168-1168", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n428 [label="_mutuallyExclusiveSetMap.Values", span="1173-1173", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=1];
n427 [label="BuildMutuallyExclusiveMap(option)", span="1169-1169", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n434 [label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1186-1186", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n429 [label="info.Occurrence > 1", span="1175-1175", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n432 [label="return true;", span="1183-1183", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n430 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1178-1178", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n431 [label="return false;", span="1179-1179", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=red, community=0];
n433 [label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1161-1161", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()"];
n435 [label="var setName = option.MutuallyExclusiveSet", span="1188-1188", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0];
n437 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1193-1193", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0];
n436 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1190-1190", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0];
n438 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1196-1196", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=red, community=0];
n440 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)"];
n441 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)"];
n439 [label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1186-1186", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)"];
n442 [label="var commandLineOptionsBase = options as CommandLineOptionsBase", span="1201-1201", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n445 [label="var error = new ParsingError {\r\n                BadOption = {\r\n                    ShortName = option.ShortName, \r\n                    LongName = option.LongName\r\n                }\r\n            }", span="1205-1210", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n446 [label="required != null", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n447 [label="error.ViolatesRequired = required.Value", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n448 [label="mutualExclusiveness != null", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n449 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n443 [label="commandLineOptionsBase == null", span="1202-1202", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n450 [label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.Add(error)", span="1215-1215", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n444 [label="return;", span="1203-1203", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=red, community=0];
n452 [label="Entry CommandLine.ParsingError.ParsingError()", span="1264-1264", cluster="CommandLine.ParsingError.ParsingError()"];
n451 [label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)"];
n453 [label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)"];
n454 [label="_left = left", span="1226-1226", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0];
n455 [label="_right = right", span="1227-1227", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=red, community=0];
n456 [label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)"];
n457 [label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()"];
n458 [label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1242-1242", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0];
n459 [label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1243-1243", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0];
n462 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
n460 [label="return leftHash ^ rightHash;", span="1245-1245", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=red, community=0];
n461 [label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()"];
n463 [label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n464 [label="var other = obj as Pair<TLeft, TRight>", span="1250-1250", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0];
n465 [label="other == null", span="1252-1252", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0];
n467 [label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1255-1255", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0];
n466 [label="return false;", span="1253-1253", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=red, community=0];
n468 [label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)"];
n469 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)"];
n470 [label="this.BadOption = new BadOptionInfo()", span="1266-1266", cluster="CommandLine.ParsingError.ParsingError()", color=red, community=0];
n471 [label="Exit CommandLine.ParsingError.ParsingError()", span="1264-1264", cluster="CommandLine.ParsingError.ParsingError()"];
n472 [label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1273-1273", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0];
n473 [label="this.ViolatesFormat = format", span="1275-1275", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=red, community=0];
n474 [label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)"];
n475 [label="Entry CommandLine.PostParsingState.PostParsingState()", span="1317-1317", cluster="CommandLine.PostParsingState.PostParsingState()"];
n476 [label="Errors = new List<ParsingError>()", span="1319-1319", cluster="CommandLine.PostParsingState.PostParsingState()", color=red, community=0];
n477 [label="Exit CommandLine.PostParsingState.PostParsingState()", span="1317-1317", cluster="CommandLine.PostParsingState.PostParsingState()"];
n478 [label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1337-1337", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n479 [label="Assumes.NotNull(value, ''value'')", span="1339-1339", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0];
n480 [label="_data = value", span="1341-1341", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0];
n482 [label="_endIndex = value.Length", span="1343-1343", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0];
n484 [label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1837-1837", cluster="CommandLine.Assumes.NotNull<T>(T, string)"];
n481 [label="_index = -1", span="1342-1342", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=red, community=0];
n483 [label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1337-1337", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])"];
n485 [label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1387-1387", cluster="CommandLine.StringArrayEnumerator.Reset()"];
n486 [label="_index = -1", span="1389-1389", cluster="CommandLine.StringArrayEnumerator.Reset()", color=red, community=0];
n487 [label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1387-1387", cluster="CommandLine.StringArrayEnumerator.Reset()"];
n488 [label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1392-1392", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n489 [label="_index < _endIndex", span="1394-1394", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0];
n490 [label="_index++", span="1396-1396", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0];
n492 [label="return false;", span="1399-1399", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0];
n491 [label="return _index < _endIndex;", span="1397-1397", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=red, community=0];
n493 [label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1392-1392", cluster="CommandLine.StringArrayEnumerator.MoveNext()"];
n494 [label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1402-1402", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()"];
n495 [label="throw new NotSupportedException();", span="1404-1404", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=red, community=0];
n496 [label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1402-1402", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()"];
n497 [label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1407-1407", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n498 [label="_index <= 0", span="1409-1409", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0];
n499 [label="throw new InvalidOperationException();", span="1411-1411", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0];
n500 [label="_index <= _endIndex", span="1413-1413", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0];
n501 [label="_index--", span="1415-1415", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0];
n503 [label="return false;", span="1418-1418", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0];
n502 [label="return _index <= _endIndex;", span="1416-1416", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=red, community=0];
n504 [label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1407-1407", cluster="CommandLine.StringArrayEnumerator.MovePrevious()"];
n505 [label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1421-1421", cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()"];
n506 [label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1421-1421", cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()"];
n507 [label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1432-1432", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n508 [label="_target = target", span="1434-1434", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0];
n509 [label="_vla = ValueListAttribute.GetAttribute(_target)", span="1435-1435", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0];
n510 [label=IsValueListDefined, span="1436-1436", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0];
n511 [label="_valueList = ValueListAttribute.GetReference(_target)", span="1437-1437", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=red, community=0];
n512 [label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1432-1432", cluster="CommandLine.TargetWrapper.TargetWrapper(object)"];
n513 [label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1442-1442", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n514 [label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1444-1444", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0];
n517 [label="_valueList.Add(item)", span="1449-1449", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0];
n515 [label="return false;", span="1445-1445", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0];
n516 [label=this, span="1447-1447", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0];
n518 [label="return true;", span="1452-1452", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=red, community=0];
n519 [label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1442-1442", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)"];
n520 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)"];
n521 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)"];
n522 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n523 [label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n524 [label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1496-1496", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()"];
n525 [label="LastPostParsingState = new PostParsingState()", span="1498-1498", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=red, community=0];
n526 [label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1496-1496", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()"];
n527 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1515-1515", cluster="CommandLine.CommandLineParserException.CommandLineParserException()"];
n528 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1519-1519", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)"];
n529 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1524-1524", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)"];
n530 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1529-1529", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)"];
n531 [label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1529-1529", cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)"];
n532 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()"];
n533 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()"];
n534 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)"];
n535 [label="CaseSensitive = caseSensitive", span="1557-1557", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=red, community=0];
n536 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1555-1555", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)"];
n537 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)"];
n538 [label="HelpWriter = helpWriter", span="1569-1569", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=red, community=0];
n539 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)"];
n540 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1579-1579", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)"];
n541 [label="CaseSensitive = caseSensitive", span="1581-1581", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0];
n542 [label="HelpWriter = helpWriter", span="1582-1582", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=red, community=0];
n543 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1579-1579", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)"];
n544 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1591-1591", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)"];
n545 [label="CaseSensitive = caseSensitive", span="1593-1593", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0];
n546 [label="MutuallyExclusive = mutuallyExclusive", span="1594-1594", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=red, community=0];
n547 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1591-1591", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)"];
n548 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1605-1605", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n549 [label="CaseSensitive = caseSensitive", span="1607-1607", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0];
n550 [label="MutuallyExclusive = mutuallyExclusive", span="1608-1608", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0];
n551 [label="HelpWriter = helpWriter", span="1609-1609", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=red, community=0];
n552 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1605-1605", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)"];
n553 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1621-1621", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)"];
n554 [label="CaseSensitive = caseSensitive", span="1623-1623", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0];
n555 [label="MutuallyExclusive = mutuallyExclusive", span="1624-1624", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0];
n556 [label="HelpWriter = helpWriter", span="1625-1625", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0];
n557 [label="IgnoreUnknownArguments = ignoreUnknownArguments", span="1626-1626", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=red, community=0];
n558 [label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1621-1621", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)"];
n559 [label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1675-1675", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n560 [label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="1677-1677", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=red, community=0];
n561 [label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1675-1675", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)"];
n562 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n563 [label="_settings = new CommandLineParserSettings()", span="1685-1685", cluster="CommandLine.CommandLineParser.CommandLineParser()", color=red, community=0];
n564 [label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683", cluster="CommandLine.CommandLineParser.CommandLineParser()"];
n565 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n566 [label="Assumes.NotNull(settings, ''settings'')", span="1696-1696", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0];
n567 [label="_settings = settings", span="1698-1698", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=red, community=0];
n568 [label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)"];
n569 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n570 [label="return ParseArguments(args, options, _settings.HelpWriter);", span="1721-1721", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=red, community=0];
n571 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)"];
n572 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1737-1737", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n573 [label="Assumes.NotNull(args, ''args'')", span="1739-1739", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n574 [label="Assumes.NotNull(options, ''options'')", span="1740-1740", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n575 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1742-1742", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n576 [label="pair != null && helpWriter != null", span="1744-1744", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n577 [label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1746-1746", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n579 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1749-1749", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n580 [label="helpWriter.Write(helpText)", span="1750-1750", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n583 [label="return DoParseArguments(args, options);", span="1756-1756", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n585 [label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1885-1885", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n578 [label="string helpText", span="1748-1748", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n582 [label="return true;", span="1753-1753", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n586 [label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1802-1802", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n587 [label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1759-1759", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n581 [label="return false;", span="1751-1751", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=red, community=0];
n588 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)"];
n584 [label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1737-1737", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)"];
n589 [label="bool hadError = false", span="1761-1761", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n590 [label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1762-1762", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n592 [label="var target = new TargetWrapper(options)", span="1764-1764", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n593 [label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1766-1766", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n599 [label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1775-1775", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n601 [label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1778-1778", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n608 [label="hadError |= !optionMap.EnforceRules()", span="1797-1797", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n591 [label="optionMap.SetDefaults()", span="1763-1763", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n605 [label="target.IsValueListDefined", span="1786-1786", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n606 [label="!target.AddValueItemIfAllowed(argument)", span="1788-1788", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n594 [label="arguments.MoveNext()", span="1767-1767", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n595 [label="string argument = arguments.Current", span="1769-1769", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n604 [label="arguments.MoveNext()", span="1784-1784", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n596 [label="!string.IsNullOrEmpty(argument)", span="1770-1770", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n597 [label="ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="1772-1772", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n598 [label="parser != null", span="1773-1773", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n600 [label="(result & ParserState.Failure) == ParserState.Failure", span="1776-1776", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n603 [label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1783-1783", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n602 [label="hadError = true", span="1779-1779", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n611 [label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1825-1825", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n607 [label="hadError = true", span="1790-1790", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n609 [label="return !hadError;", span="1799-1799", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=red, community=0];
n610 [label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1759-1759", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)"];
n612 [label="bool caseSensitive = _settings.CaseSensitive", span="1804-1804", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n614 [label="i < args.Length", span="1806-1806", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n615 [label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1808-1808", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n616 [label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1810-1810", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n618 [label="!string.IsNullOrEmpty(helpOption.LongName)", span="1814-1814", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n619 [label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1816-1816", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n613 [label="int i = 0", span="1806-1806", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n621 [label="i++", span="1806-1806", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n622 [label="return false;", span="1821-1821", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n617 [label="return true;", span="1811-1811", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n620 [label="return true;", span="1817-1817", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=red, community=0];
n623 [label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1802-1802", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)"];
n624 [label="var commandLineOptionsBase = options as CommandLineOptionsBase", span="1827-1827", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0];
n626 [label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.AddRange(state)", span="1829-1829", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0];
n625 [label="commandLineOptionsBase != null", span="1828-1828", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=red, community=0];
n627 [label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1825-1825", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)"];
n628 [label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0", cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)"];
n629 [label="value == null", span="1840-1840", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0];
n630 [label="throw new ArgumentNullException(paramName);", span="1841-1841", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=red, community=0];
n631 [label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1837-1837", cluster="CommandLine.Assumes.NotNull<T>(T, string)"];
n632 [label="string.IsNullOrEmpty(value)", span="1846-1846", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0];
n633 [label="throw new ArgumentException(paramName);", span="1847-1847", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=red, community=0];
n634 [label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1844-1844", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)"];
n635 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n636 [label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1850-1850", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)"];
n637 [label="array.Length == 0", span="1852-1852", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0];
n638 [label="throw new ArgumentOutOfRangeException(paramName);", span="1853-1853", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=red, community=0];
n639 [label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1850-1850", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)"];
n640 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
n641 [label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1862-1862", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n642 [label="target != null", span="1863-1863", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n643 [label="var propertiesInfo = target.GetType().GetProperties()", span="1865-1865", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n650 [label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1876-1876", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n651 [label="return list;", span="1882-1882", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n644 [label=propertiesInfo, span="1867-1867", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n653 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n654 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()"];
n645 [label="property != null && (property.CanRead && property.CanWrite)", span="1869-1869", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n646 [label="var setMethod = property.GetSetMethod()", span="1871-1871", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n648 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1874-1874", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n647 [label="setMethod != null && !setMethod.IsStatic", span="1872-1872", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n655 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()"];
n649 [label="attribute != null", span="1875-1875", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0];
n656 [label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)"];
n652 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1859-1859", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)"];
n657 [label="var info = target.GetType().GetMethods()", span="1888-1888", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0];
n658 [label=info, span="1890-1890", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0];
n665 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()"];
n659 [label="!method.IsStatic", span="1892-1892", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0];
n663 [label="return null;", span="1901-1901", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0];
n660 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1894-1895", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0];
n662 [label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1897-1897", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0];
n661 [label="attribute != null", span="1896-1896", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0];
n664 [label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1885-1885", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)"];
n666 [label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1904-1904", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n667 [label="var info = target.GetType().GetMethods()", span="1907-1907", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0];
n668 [label=info, span="1909-1909", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0];
n669 [label="!method.IsStatic", span="1911-1911", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0];
n673 [label="return null;", span="1920-1920", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0];
n670 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1913-1914", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0];
n671 [label="attribute != null", span="1915-1915", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0];
n672 [label="return (TAttribute)attribute;", span="1916-1916", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0];
n674 [label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1904-1904", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)"];
n675 [label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1923-1923", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n676 [label="IList<TAttribute> list = new List<TAttribute>()", span="1926-1926", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n677 [label="var info = target.GetType().GetProperties()", span="1927-1927", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n684 [label="list.Add((TAttribute)attribute)", span="1938-1938", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n685 [label="return list;", span="1943-1943", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n678 [label=info, span="1929-1929", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n679 [label="property != null && (property.CanRead && property.CanWrite)", span="1931-1931", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n680 [label="var setMethod = property.GetSetMethod()", span="1933-1933", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n682 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1936-1936", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n681 [label="setMethod != null && !setMethod.IsStatic", span="1934-1934", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n683 [label="attribute != null", span="1937-1937", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0];
n686 [label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1923-1923", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)"];
n687 [label="Entry CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1946-1946", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()"];
n688 [label="Assembly assemblyFromWhichToPullInformation = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="1949-1949", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0];
n689 [label="object[] a = assemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="1951-1951", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0];
n694 [label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetEntryAssembly()"];
n695 [label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0", cluster="System.Reflection.Assembly.GetExecutingAssembly()"];
n690 [label="a == null || a.Length <= 0", span="1952-1952", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0];
n696 [label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)"];
n692 [label="return (TAttribute)a[0];", span="1953-1953", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0];
n691 [label="return null;", span="1952-1952", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=red, community=0];
n693 [label="Exit CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1946-1946", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()"];
n697 [label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="1958-1958", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=red, community=0];
n698 [label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1956-1956", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)"];
n699 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()"];
n700 [label="Entry CommandLine.StringUtil.Spaces(int)", span="1964-1964", cluster="CommandLine.StringUtil.Spaces(int)"];
n701 [label="return new String(' ', count);", span="1966-1966", cluster="CommandLine.StringUtil.Spaces(int)", color=red, community=0];
n702 [label="Exit CommandLine.StringUtil.Spaces(int)", span="1964-1964", cluster="CommandLine.StringUtil.Spaces(int)"];
n703 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
d1 [label="HelpText = DEFAULT_HELP_TEXT", span="127-127", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", color=green, community=0];
d4 [label="ShortName = shortName", span="138-138", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0];
d5 [label="LongName = longName", span="139-139", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0];
d6 [label="HelpText = DEFAULT_HELP_TEXT", span="140-140", cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0];
d9 [label="text = null", span="157-157", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0];
d10 [label="var method = pair.Left", span="159-159", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0];
d11 [label="!CheckMethodSignature(method)", span="160-160", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0];
d13 [label="text = (string)method.Invoke(target, null)", span="163-163", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0];
d12 [label="throw new MemberAccessException();", span="161-161", cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", color=green, community=0];
d18 [label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="168-168", cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", color=green, community=0];
d24 [label="!string.IsNullOrEmpty(shortName)", span="206-206", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d25 [label="_uniqueName = shortName", span="207-207", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d26 [label="!string.IsNullOrEmpty(longName)", span="208-208", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d28 [label="_uniqueName == null", span="211-211", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d27 [label="_uniqueName = longName", span="209-209", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d30 [label="base.ShortName = shortName", span="214-214", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d31 [label="base.LongName = longName", span="215-215", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d29 [label="throw new InvalidOperationException();", span="212-212", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0];
d36 [label="Separator = ':'", span="261-261", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=green, community=0];
d39 [label="Separator = separator", span="273-273", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", color=green, community=0];
d42 [label="MaximumElements = -1", span="296-296", cluster="CommandLine.ValueListAttribute.ValueListAttribute()", color=green, community=0];
d45 [label="concreteType == null", span="307-307", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0];
d46 [label="throw new ArgumentNullException(''concreteType'');", span="308-308", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0];
d47 [label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="310-310", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0];
d48 [label="throw new CommandLineParserException(''The types are incompatible.'');", span="311-311", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0];
d49 [label="_concreteType = concreteType", span="313-313", cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", color=green, community=0];
d55 [label="Type concreteType", span="330-330", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0];
d56 [label="var property = GetProperty(target, out concreteType)", span="331-331", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0];
d57 [label="property == null || concreteType == null", span="333-333", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0];
d59 [label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="336-336", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0];
d60 [label="return (IList<string>)property.GetValue(target, null);", span="338-338", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0];
d58 [label="return null;", span="334-334", cluster="CommandLine.ValueListAttribute.GetReference(object)", color=green, community=0];
d67 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="343-343", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0];
d68 [label="list == null || list.Count == 0", span="344-344", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0];
d70 [label="list.Count > 1", span="347-347", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0];
d72 [label="var pairZero = list[0]", span="350-350", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0];
d69 [label="return null;", span="345-345", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0];
d71 [label="throw new InvalidOperationException();", span="348-348", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0];
d73 [label="return pairZero.Right;", span="352-352", cluster="CommandLine.ValueListAttribute.GetAttribute(object)", color=green, community=0];
d76 [label="concreteType = null", span="357-357", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d77 [label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="359-359", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d78 [label="list == null || list.Count == 0", span="360-360", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d80 [label="list.Count > 1", span="363-363", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d82 [label="var pairZero = list[0]", span="366-366", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d79 [label="return null;", span="361-361", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d81 [label="throw new InvalidOperationException();", span="364-364", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d83 [label="concreteType = pairZero.Right.ConcreteType", span="367-367", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d84 [label="return pairZero.Left;", span="369-369", cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", color=green, community=0];
d87 [label="this.PostParsingState = new List<ParsingError>()", span="387-387", cluster="CommandLine.ArgumentParser.ArgumentParser()", color=green, community=0];
d93 [label="this.PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="396-396", cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", color=green, community=0];
d98 [label="StringUtil.IsNumeric(argument)", span="401-401", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d99 [label="return null;", span="402-402", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d100 [label="argument.Equals(''-'', StringComparison.InvariantCulture)", span="404-404", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d108 [label="Entry CommandLine.StringUtil.IsNumeric(string)", span="1968-1968", cluster="CommandLine.StringUtil.IsNumeric(string)"];
d101 [label="return null;", span="405-405", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d102 [label="argument[0] == '-' && argument[1] == '-'", span="407-407", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d103 [label="return new LongOptionParser(ignoreUnknownArguments);", span="408-408", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d104 [label="argument[0] == '-'", span="410-410", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d105 [label="return new OptionGroupParser(ignoreUnknownArguments);", span="411-411", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d106 [label="return null;", span="413-413", cluster="CommandLine.ArgumentParser.Create(string, bool)", color=green, community=0];
d113 [label="StringUtil.IsNumeric(argument)", span="418-418", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0];
d114 [label="return true;", span="419-419", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0];
d115 [label="argument.Length > 0", span="421-421", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0];
d116 [label="return argument.Equals(''-'', StringComparison.InvariantCulture) || argument[0] != '-';", span="422-422", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0];
d117 [label="return true;", span="424-424", cluster="CommandLine.ArgumentParser.IsInputValue(string)", color=green, community=0];
d422 [label="bool requiredRulesAllMet = true", span="1150-1150", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0];
d120 [label="IList<string> list = new List<string>()", span="436-436", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0];
d121 [label="ae.MoveNext()", span="438-438", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0];
d123 [label="list.Add(ae.Current)", span="441-441", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0];
d126 [label="return list;", span="448-448", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0];
d122 [label="IsInputValue(ae.Current)", span="440-440", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0];
d124 [label="!ae.MovePrevious()", span="445-445", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0];
d125 [label="throw new CommandLineParserException();", span="446-446", cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", color=green, community=0];
d133 [label="return string.Compare(argument, ''-'' + option, !caseSensitive) == 0;", span="453-453", cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", color=green, community=0];
d137 [label="return string.Compare(argument, ''--'' + option, !caseSensitive) == 0;", span="458-458", cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0];
d140 [label="return BooleanToParserState(value, false);", span="463-463", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", color=green, community=0];
d143 [label="value && !addMoveNextIfTrue", span="468-468", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0];
d144 [label="return ParserState.Success;", span="469-469", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0];
d145 [label=value, span="471-471", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0];
d146 [label="return ParserState.Success | ParserState.MoveOnNextElement;", span="472-472", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0];
d147 [label="return ParserState.Failure;", span="474-474", cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0];
d150 [label="!option.IsAttributeArrayCompatible", span="479-479", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0];
d151 [label="throw new CommandLineParserException();", span="480-480", cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", color=green, community=0];
d154 [label="!option.IsArray && option.IsAttributeArrayCompatible", span="485-485", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0];
d155 [label="throw new CommandLineParserException();", span="486-486", cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", color=green, community=0];
d160 [label="ShortName = shortName", span="501-501", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0];
d161 [label="LongName = longName", span="502-502", cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", color=green, community=0];
d167 [label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="545-545", cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", color=green, community=0];
d170 [label="var parts = argumentEnumerator.Current.Substring(2).Split(new[] { '=' }, 2)", span="550-550", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d171 [label="var option = map[parts[0]]", span="551-551", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d178 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="563-563", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d180 [label="parts.Length == 2", span="566-566", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d182 [label="valueSetting = option.SetValue(parts[1], options)", span="570-570", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d188 [label="items.Insert(0, parts[1])", span="580-580", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d204 [label="parts.Length == 2", span="611-611", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d172 [label="bool valueSetting", span="552-552", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d173 [label="option == null", span="554-554", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d175 [label="option.IsDefined = true", span="557-557", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d176 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="559-559", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d177 [label="!option.IsBoolean", span="561-561", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d181 [label="!option.IsArray", span="568-568", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d184 [label="this.DefineOptionThatViolatesFormat(option)", span="572-572", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d186 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="577-577", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d189 [label="valueSetting = option.SetValue(items, options)", span="582-582", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d191 [label="this.DefineOptionThatViolatesFormat(option)", span="584-584", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d193 [label="!option.IsArray", span="590-590", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d194 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="592-592", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d196 [label="this.DefineOptionThatViolatesFormat(option)", span="594-594", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d198 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="599-599", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d200 [label="valueSetting = option.SetValue(items, options)", span="603-603", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d202 [label="this.DefineOptionThatViolatesFormat(option)", span="605-605", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d206 [label="valueSetting = option.SetValue(true, options)", span="614-614", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d208 [label="this.DefineOptionThatViolatesFormat(option)", span="616-616", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d179 [label="return ParserState.Failure;", span="564-564", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d183 [label="!valueSetting", span="571-571", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d185 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="574-574", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d187 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="579-579", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d190 [label="!valueSetting", span="583-583", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d192 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="586-586", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d195 [label="!valueSetting", span="593-593", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d197 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="596-596", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d199 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="601-601", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d201 [label="!valueSetting", span="604-604", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d203 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="607-607", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d207 [label="!valueSetting", span="615-615", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d209 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="618-618", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d205 [label="return ParserState.Failure;", span="612-612", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d174 [label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="555-555", cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d218 [label="Assumes.NotNullOrEmpty(value, ''value'')", span="630-630", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0];
d219 [label="_data = value", span="632-632", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0];
d220 [label="_index = -1", span="633-633", cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", color=green, community=0];
d224 [label="_index = -1", span="674-674", cluster="CommandLine.OneCharStringEnumerator.Reset()", color=green, community=0];
d227 [label="_index < (_data.Length - 1)", span="679-679", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0];
d228 [label="_index++", span="681-681", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0];
d231 [label="_index = _data.Length", span="685-685", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0];
d229 [label="_currentElement = _data.Substring(_index, 1)", span="682-682", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0];
d232 [label="return false;", span="687-687", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0];
d230 [label="return true;", span="683-683", cluster="CommandLine.OneCharStringEnumerator.MoveNext()", color=green, community=0];
d236 [label="_index == -1", span="692-692", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0];
d237 [label="throw new InvalidOperationException();", span="693-693", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0];
d238 [label="_index > _data.Length", span="695-695", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0];
d239 [label="throw new InvalidOperationException();", span="696-696", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0];
d240 [label="return _data.Substring(_index + 1);", span="698-698", cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", color=green, community=0];
d243 [label="throw new NotSupportedException();", span="703-703", cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", color=green, community=0];
d248 [label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="717-717", cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", color=green, community=0];
d251 [label="IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="722-722", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d252 [label="group.MoveNext()", span="723-723", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d253 [label="var option = map[group.Current]", span="725-725", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d259 [label="argumentEnumerator.IsLast && group.IsLast", span="735-735", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d262 [label="!group.IsLast", span="739-739", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d264 [label="valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="743-743", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d270 [label="items.Insert(0, @group.GetRemainingFromNext())", span="753-753", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d288 [label="!@group.IsLast && map[@group.Next] == null", span="787-787", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d254 [label="option == null", span="726-726", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d256 [label="option.IsDefined = true", span="729-729", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d257 [label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="731-731", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d258 [label="!option.IsBoolean", span="733-733", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d263 [label="!option.IsArray", span="741-741", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d266 [label="this.DefineOptionThatViolatesFormat(option)", span="745-745", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d268 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="750-750", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d271 [label="valueSetting = option.SetValue(items, options)", span="755-755", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d273 [label="this.DefineOptionThatViolatesFormat(option)", span="757-757", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d277 [label="!option.IsArray", span="766-766", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d278 [label="valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="768-768", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d280 [label="this.DefineOptionThatViolatesFormat(option)", span="770-770", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d282 [label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="775-775", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d284 [label="valueSetting = option.SetValue(items, options)", span="779-779", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d286 [label="this.DefineOptionThatViolatesFormat(option)", span="781-781", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d290 [label="!option.SetValue(true, options)", span="790-790", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d260 [label="return ParserState.Failure;", span="736-736", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d261 [label="bool valueSetting", span="738-738", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d265 [label="!valueSetting", span="744-744", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d267 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="747-747", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d269 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="752-752", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d272 [label="!valueSetting", span="756-756", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d274 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="759-759", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d275 [label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="762-762", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d276 [label="return ParserState.Failure;", span="763-763", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d279 [label="!valueSetting", span="769-769", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d281 [label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="772-772", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d283 [label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="777-777", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d285 [label="!valueSetting", span="780-780", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d287 [label="return ArgumentParser.BooleanToParserState(valueSetting);", span="783-783", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d289 [label="return ParserState.Failure;", span="788-788", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d291 [label="return ParserState.Failure;", span="791-791", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d292 [label="return ParserState.Success;", span="794-794", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d255 [label="return _ignoreUnkwnownArguments ? ParserState.MoveOnNextElement : ParserState.Failure;", span="727-727", cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", color=green, community=0];
d295 [label="attribute != null", span="814-814", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d296 [label="_required = attribute.Required", span="816-816", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d304 [label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="826-826", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d297 [label="_helpText = attribute.HelpText", span="817-817", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d298 [label="_shortName = attribute.ShortName", span="818-818", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d299 [label="_longName = attribute.LongName", span="819-819", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d300 [label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="820-820", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d301 [label="_defaultValue = attribute.DefaultValue", span="821-821", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d302 [label="_hasDefaultValue = attribute.HasDefaultValue", span="822-822", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d303 [label="_attribute = attribute", span="823-823", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d305 [label="property != null", span="828-828", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d306 [label="_property = property", span="829-829", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d307 [label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="831-831", cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", color=green, community=0];
d311 [label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="844-844", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d312 [label="list != null", span="845-845", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d313 [label="var map = new OptionMap(list.Count, settings)", span="847-847", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d314 [label=list, span="849-849", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d316 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="852-852", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d317 [label="map.RawOptions = target", span="855-855", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d318 [label="return map;", span="857-857", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d319 [label="return null;", span="860-860", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d315 [label="pair != null && pair.Right != null", span="851-851", cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", color=green, community=0];
d322 [label="_attribute is OptionListAttribute", span="865-865", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0];
d323 [label="return SetValueList(value, options);", span="866-866", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0];
d324 [label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="868-868", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0];
d325 [label="return SetNullableValue(value, options);", span="869-869", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0];
d326 [label="return SetValueScalar(value, options);", span="871-871", cluster="CommandLine.OptionInfo.SetValue(string, object)", color=green, community=0];
d332 [label="Type elementType = _property.PropertyType.GetElementType()", span="876-876", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d333 [label="Array array = Array.CreateInstance(elementType, values.Count)", span="877-877", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d337 [label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="885-885", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d334 [label="int i = 0", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d335 [label="i < array.Length", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d338 [label="_property.SetValue(options, array, null)", span="886-886", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d336 [label=_setValueLock, span="883-883", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d339 [label=FormatException, span="889-889", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d341 [label="i++", span="879-879", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d381 [label="int i = 0", span="977-977", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d621 [label="i < args.Length", span="1806-1806", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d342 [label="return true;", span="895-895", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d340 [label="return false;", span="891-891", cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", color=green, community=0];
d348 [label="_property.PropertyType.IsEnum", span="902-902", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d349 [label=_setValueLock, span="904-904", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d351 [label=_setValueLock, span="911-911", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d350 [label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="906-906", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d353 [label=InvalidCastException, span="917-917", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d355 [label=FormatException, span="921-921", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d357 [label=ArgumentException, span="925-925", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d359 [label=OverflowException, span="929-929", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d361 [label="return true;", span="934-934", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d352 [label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="913-913", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d354 [label="return false;", span="919-919", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d356 [label="return false;", span="923-923", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d358 [label="return false;", span="927-927", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d360 [label="return false;", span="931-931", cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", color=green, community=0];
d364 [label="var nc = new NullableConverter(_property.PropertyType)", span="939-939", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0];
d365 [label=_setValueLock, span="943-943", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0];
d366 [label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="945-945", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0];
d367 [label=Exception, span="950-950", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0];
d369 [label="return true;", span="955-955", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0];
d368 [label="return false;", span="952-952", cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", color=green, community=0];
d373 [label=_setValueLock, span="960-960", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0];
d374 [label="_property.SetValue(options, value, null)", span="962-962", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0];
d375 [label="return true;", span="964-964", cluster="CommandLine.OptionInfo.SetValue(bool, object)", color=green, community=0];
d377 [label=_setValueLock, span="970-970", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d378 [label="_property.SetValue(options, new List<string>(), null)", span="972-972", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d379 [label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="974-974", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d380 [label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="975-975", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d383 [label="fieldRef.Add(values[i])", span="979-979", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d382 [label="i < values.Length", span="977-977", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d384 [label="i++", span="977-977", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d385 [label="return true;", span="982-982", cluster="CommandLine.OptionInfo.SetValueList(string, object)", color=green, community=0];
d389 [label=_hasDefaultValue, span="988-988", cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0];
d390 [label=_setValueLock, span="990-990", cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0];
d391 [label="_property.SetValue(options, _defaultValue, null)", span="994-994", cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0];
d392 [label=Exception, span="996-996", cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0];
d393 [label="throw new CommandLineParserException(''Bad default value.'', e);", span="998-998", cluster="CommandLine.OptionInfo.SetDefault(object)", color=green, community=0];
d397 [label="BadOption = option", span="1071-1071", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", color=green, community=0];
d400 [label="++_count", span="1076-1076", cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", color=green, community=0];
d402 [label="_settings = settings", span="1088-1088", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d403 [label="IEqualityComparer<string> comparer", span="1090-1090", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d407 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="1096-1096", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d405 [label="comparer = StringComparer.Ordinal", span="1092-1092", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d406 [label="comparer = StringComparer.OrdinalIgnoreCase", span="1094-1094", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d408 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="1097-1097", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d409 [label="_settings.MutuallyExclusive", span="1099-1099", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d410 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="1101-1101", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d404 [label="_settings.CaseSensitive", span="1091-1091", cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", color=green, community=0];
d414 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="1137-1137", cluster="CommandLine.OptionMap.EnforceRules()", color=green, community=0];
d419 [label="_map.Values", span="1142-1142", cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0];
d420 [label="option.SetDefault(this.RawOptions)", span="1144-1144", cluster="CommandLine.OptionMap.SetDefaults()", color=green, community=0];
d423 [label="_map.Values", span="1151-1151", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0];
d427 [label="return requiredRulesAllMet;", span="1161-1161", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0];
d424 [label="option.Required && !option.IsDefined", span="1153-1153", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0];
d426 [label="requiredRulesAllMet = false", span="1156-1156", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0];
d425 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, option, true, null)", span="1155-1155", cluster="CommandLine.OptionMap.EnforceRequiredRule()", color=green, community=0];
d430 [label="!_settings.MutuallyExclusive", span="1166-1166", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d431 [label="return true;", span="1167-1167", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d432 [label="_map.Values", span="1169-1169", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d433 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="1171-1171", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d434 [label="BuildMutuallyExclusiveMap(option)", span="1172-1172", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d435 [label="_mutuallyExclusiveSetMap.Values", span="1175-1175", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d436 [label="info.Occurrence > 1", span="1177-1177", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d439 [label="return true;", span="1184-1184", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d437 [label="BuildAndSetPostParsingStateIfNeeded(this.RawOptions, info.BadOption, null, true)", span="1179-1179", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d438 [label="return false;", span="1180-1180", cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", color=green, community=0];
d442 [label="var setName = option.MutuallyExclusiveSet", span="1189-1189", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0];
d443 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="1191-1191", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0];
d444 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="1193-1193", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0];
d445 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="1196-1196", cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", color=green, community=0];
d449 [label="var commandLineOptionsBase = options as CommandLineOptionsBase", span="1201-1201", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d450 [label="commandLineOptionsBase == null", span="1202-1202", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d457 [label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.Add(error)", span="1215-1215", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d452 [label="var error = new ParsingError {\r\n                BadOption = {\r\n                    ShortName = option.ShortName, \r\n                    LongName = option.LongName\r\n                }\r\n            }", span="1205-1210", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d453 [label="required != null", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d454 [label="error.ViolatesRequired = required.Value", span="1212-1212", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d456 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d455 [label="mutualExclusiveness != null", span="1213-1213", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d451 [label="return;", span="1203-1203", cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", color=green, community=0];
d461 [label="_left = left", span="1226-1226", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0];
d462 [label="_right = right", span="1227-1227", cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", color=green, community=0];
d465 [label="int leftHash = (_left == null ? 0 : _left.GetHashCode())", span="1242-1242", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0];
d466 [label="int rightHash = (_right == null ? 0 : _right.GetHashCode())", span="1243-1243", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0];
d467 [label="return leftHash ^ rightHash;", span="1245-1245", cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", color=green, community=0];
d471 [label="var other = obj as Pair<TLeft, TRight>", span="1250-1250", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0];
d472 [label="other == null", span="1252-1252", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0];
d474 [label="return Equals(_left, other._left) && Equals(_right, other._right);", span="1255-1255", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0];
d473 [label="return false;", span="1253-1253", cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", color=green, community=0];
d477 [label="this.BadOption = new BadOptionInfo()", span="1266-1266", cluster="CommandLine.ParsingError.ParsingError()", color=green, community=0];
d479 [label="this.BadOption = new BadOptionInfo(shortName, longName)", span="1273-1273", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0];
d480 [label="this.ViolatesFormat = format", span="1275-1275", cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", color=green, community=0];
d483 [label="Errors = new List<ParsingError>()", span="1319-1319", cluster="CommandLine.PostParsingState.PostParsingState()", color=green, community=0];
d486 [label="Assumes.NotNull(value, ''value'')", span="1339-1339", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0];
d487 [label="_data = value", span="1341-1341", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0];
d488 [label="_index = -1", span="1342-1342", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0];
d489 [label="_endIndex = value.Length", span="1343-1343", cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", color=green, community=0];
d493 [label="_index = -1", span="1389-1389", cluster="CommandLine.StringArrayEnumerator.Reset()", color=green, community=0];
d496 [label="_index < _endIndex", span="1394-1394", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0];
d497 [label="_index++", span="1396-1396", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0];
d499 [label="return false;", span="1399-1399", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0];
d498 [label="return _index < _endIndex;", span="1397-1397", cluster="CommandLine.StringArrayEnumerator.MoveNext()", color=green, community=0];
d502 [label="throw new NotSupportedException();", span="1404-1404", cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", color=green, community=0];
d505 [label="_index <= 0", span="1409-1409", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0];
d506 [label="throw new InvalidOperationException();", span="1411-1411", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0];
d507 [label="_index <= _endIndex", span="1413-1413", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0];
d508 [label="_index--", span="1415-1415", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0];
d510 [label="return false;", span="1418-1418", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0];
d509 [label="return _index <= _endIndex;", span="1416-1416", cluster="CommandLine.StringArrayEnumerator.MovePrevious()", color=green, community=0];
d515 [label="_target = target", span="1434-1434", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0];
d516 [label="_vla = ValueListAttribute.GetAttribute(_target)", span="1435-1435", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0];
d517 [label=IsValueListDefined, span="1436-1436", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0];
d518 [label="_valueList = ValueListAttribute.GetReference(_target)", span="1437-1437", cluster="CommandLine.TargetWrapper.TargetWrapper(object)", color=green, community=0];
d521 [label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="1444-1444", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0];
d522 [label="return false;", span="1445-1445", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0];
d523 [label=this, span="1447-1447", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0];
d524 [label="_valueList.Add(item)", span="1449-1449", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0];
d525 [label="return true;", span="1452-1452", cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", color=green, community=0];
d532 [label="LastPostParsingState = new PostParsingState()", span="1498-1498", cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", color=green, community=0];
d542 [label="CaseSensitive = caseSensitive", span="1557-1557", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", color=green, community=0];
d545 [label="HelpWriter = helpWriter", span="1569-1569", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", color=green, community=0];
d548 [label="CaseSensitive = caseSensitive", span="1581-1581", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0];
d549 [label="HelpWriter = helpWriter", span="1582-1582", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", color=green, community=0];
d552 [label="CaseSensitive = caseSensitive", span="1593-1593", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0];
d553 [label="MutuallyExclusive = mutuallyExclusive", span="1594-1594", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", color=green, community=0];
d556 [label="CaseSensitive = caseSensitive", span="1607-1607", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0];
d557 [label="MutuallyExclusive = mutuallyExclusive", span="1608-1608", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0];
d558 [label="HelpWriter = helpWriter", span="1609-1609", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", color=green, community=0];
d561 [label="CaseSensitive = caseSensitive", span="1623-1623", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0];
d562 [label="MutuallyExclusive = mutuallyExclusive", span="1624-1624", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0];
d563 [label="HelpWriter = helpWriter", span="1625-1625", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0];
d564 [label="IgnoreUnknownArguments = ignoreUnknownArguments", span="1626-1626", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", color=green, community=0];
d567 [label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="1677-1677", cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", color=green, community=0];
d570 [label="_settings = new CommandLineParserSettings()", span="1685-1685", cluster="CommandLine.CommandLineParser.CommandLineParser()", color=green, community=0];
d573 [label="Assumes.NotNull(settings, ''settings'')", span="1696-1696", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0];
d574 [label="_settings = settings", span="1698-1698", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", color=green, community=0];
d577 [label="return ParseArguments(args, options, _settings.HelpWriter);", span="1721-1721", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", color=green, community=0];
d580 [label="Assumes.NotNull(args, ''args'')", span="1739-1739", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d581 [label="Assumes.NotNull(options, ''options'')", span="1740-1740", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d582 [label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="1742-1742", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d583 [label="pair != null && helpWriter != null", span="1744-1744", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d584 [label="ParseHelp(args, pair.Right) || !DoParseArguments(args, options)", span="1746-1746", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d586 [label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="1749-1749", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d590 [label="return DoParseArguments(args, options);", span="1756-1756", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d585 [label="string helpText", span="1748-1748", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d589 [label="return true;", span="1753-1753", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d587 [label="helpWriter.Write(helpText)", span="1750-1750", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d588 [label="return false;", span="1751-1751", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", color=green, community=0];
d596 [label="bool hadError = false", span="1761-1761", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d597 [label="var optionMap = OptionInfo.CreateMap(options, _settings)", span="1762-1762", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d615 [label="hadError |= !optionMap.EnforceRules()", span="1797-1797", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d598 [label="optionMap.SetDefaults()", span="1763-1763", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d606 [label="ParserState result = parser.Parse(arguments, optionMap, options)", span="1775-1775", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d599 [label="var target = new TargetWrapper(options)", span="1764-1764", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d600 [label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="1766-1766", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d612 [label="target.IsValueListDefined", span="1786-1786", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d613 [label="!target.AddValueItemIfAllowed(argument)", span="1788-1788", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d601 [label="arguments.MoveNext()", span="1767-1767", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d602 [label="string argument = arguments.Current", span="1769-1769", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d611 [label="arguments.MoveNext()", span="1784-1784", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d604 [label="ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="1772-1772", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d605 [label="parser != null", span="1773-1773", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d607 [label="(result & ParserState.Failure) == ParserState.Failure", span="1776-1776", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d610 [label="(result & ParserState.MoveOnNextElement) == ParserState.MoveOnNextElement", span="1783-1783", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d608 [label="SetPostParsingStateIfNeeded(options, parser.PostParsingState)", span="1778-1778", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d609 [label="hadError = true", span="1779-1779", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d614 [label="hadError = true", span="1790-1790", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d616 [label="return !hadError;", span="1799-1799", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d603 [label="!string.IsNullOrEmpty(argument)", span="1770-1770", cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0];
d619 [label="bool caseSensitive = _settings.CaseSensitive", span="1804-1804", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d620 [label="int i = 0", span="1806-1806", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d623 [label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="1810-1810", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d626 [label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="1816-1816", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d628 [label="i++", span="1806-1806", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d622 [label="!string.IsNullOrEmpty(helpOption.ShortName)", span="1808-1808", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d629 [label="return false;", span="1821-1821", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d625 [label="!string.IsNullOrEmpty(helpOption.LongName)", span="1814-1814", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d624 [label="return true;", span="1811-1811", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d627 [label="return true;", span="1817-1817", cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0];
d631 [label="var commandLineOptionsBase = options as CommandLineOptionsBase", span="1826-1826", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0];
d632 [label="commandLineOptionsBase != null", span="1827-1827", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0];
d633 [label="(commandLineOptionsBase).InternalLastPostParsingState.Errors.AddRange(state)", span="1828-1828", cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0];
d636 [label="value == null", span="1839-1839", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0];
d637 [label="throw new ArgumentNullException(paramName);", span="1840-1840", cluster="CommandLine.Assumes.NotNull<T>(T, string)", color=green, community=0];
d639 [label="string.IsNullOrEmpty(value)", span="1845-1845", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0];
d640 [label="throw new ArgumentException(paramName);", span="1846-1846", cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", color=green, community=0];
d644 [label="array.Length == 0", span="1851-1851", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0];
d645 [label="throw new ArgumentOutOfRangeException(paramName);", span="1852-1852", cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", color=green, community=0];
d648 [label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="1861-1861", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d649 [label="target != null", span="1862-1862", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d657 [label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="1875-1875", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d658 [label="return list;", span="1881-1881", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d650 [label="var propertiesInfo = target.GetType().GetProperties()", span="1864-1864", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d651 [label=propertiesInfo, span="1866-1866", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d655 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1873-1873", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d656 [label="attribute != null", span="1874-1874", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d652 [label="property != null && (property.CanRead && property.CanWrite)", span="1868-1868", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d654 [label="setMethod != null && !setMethod.IsStatic", span="1871-1871", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d653 [label="var setMethod = property.GetSetMethod()", span="1870-1870", cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0];
d664 [label="var info = target.GetType().GetMethods()", span="1887-1887", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0];
d665 [label=info, span="1889-1889", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0];
d666 [label="!method.IsStatic", span="1891-1891", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0];
d668 [label="attribute != null", span="1895-1895", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0];
d670 [label="return null;", span="1900-1900", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0];
d667 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1893-1894", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0];
d669 [label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="1896-1896", cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0];
d674 [label="var info = target.GetType().GetMethods()", span="1906-1906", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0];
d675 [label=info, span="1908-1908", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0];
d676 [label="!method.IsStatic", span="1910-1910", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0];
d678 [label="attribute != null", span="1914-1914", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0];
d680 [label="return null;", span="1919-1919", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0];
d677 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="1912-1913", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0];
d679 [label="return (TAttribute)attribute;", span="1915-1915", cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0];
d683 [label="IList<TAttribute> list = new List<TAttribute>()", span="1925-1925", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d684 [label="var info = target.GetType().GetProperties()", span="1926-1926", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d691 [label="list.Add((TAttribute)attribute)", span="1937-1937", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d692 [label="return list;", span="1942-1942", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d685 [label=info, span="1928-1928", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d689 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="1935-1935", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d690 [label="attribute != null", span="1936-1936", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d686 [label="property != null && (property.CanRead && property.CanWrite)", span="1930-1930", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d688 [label="setMethod != null && !setMethod.IsStatic", span="1933-1933", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d687 [label="var setMethod = property.GetSetMethod()", span="1932-1932", cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=green, community=0];
d695 [label="Assembly assemblyFromWhichToPullInformation = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="1948-1948", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0];
d696 [label="object[] a = assemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="1950-1950", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0];
d697 [label="a == null || a.Length <= 0", span="1951-1951", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0];
d699 [label="return (TAttribute)a[0];", span="1952-1952", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0];
d698 [label="return null;", span="1951-1951", cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", color=green, community=0];
d704 [label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="1957-1957", cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", color=green, community=0];
d708 [label="return new String(' ', count);", span="1965-1965", cluster="CommandLine.StringUtil.Spaces(int)", color=green, community=0];
d711 [label="decimal temporary", span="1970-1970", cluster="CommandLine.StringUtil.IsNumeric(string)", color=green, community=0];
d712 [label="return decimal.TryParse(value, out temporary);", span="1971-1971", cluster="CommandLine.StringUtil.IsNumeric(string)", color=green, community=0];
d713 [label="Exit CommandLine.StringUtil.IsNumeric(string)", span="1968-1968", cluster="CommandLine.StringUtil.IsNumeric(string)"];
d714 [label="Entry decimal.TryParse(string, out decimal)", span="0-0", cluster="decimal.TryParse(string, out decimal)"];
m0_10 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_11 [label="var options = new SimpleOptions()", span="65-65", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_12 [label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="66-66", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_14 [label="Assert.AreEqual(''something'', options.StringValue)", span="69-69", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_15 [label="Console.WriteLine(options)", span="70-70", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_13 [label="base.AssertParserSuccess(result)", span="68-68", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_16 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="63-63", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs"];
m0_176 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_177 [label="var options = new NumberSetOptions()", span="304-304", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_178 [label="bool result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_179 [label="base.AssertParserFailure(result)", span="307-307", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_180 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_260 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_261 [label="var options = new NumberSetOptions()", span="447-447", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_262 [label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="448-448", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_263 [label="base.AssertParserFailure(result)", span="450-450", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_264 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445", cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_242 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m0_243 [label="var options = new NumberSetOptions()", span="415-415", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_244 [label="bool result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="416-416", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_246 [label="Assert.AreEqual(-4096.1024, options.DoubleValue)", span="419-419", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_245 [label="base.AssertParserSuccess(result)", span="418-418", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_247 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m0_284 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_285 [label="var options = new NumberSetOptions()", span="483-483", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_286 [label="bool result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="484-484", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_287 [label="base.AssertParserFailure(result)", span="486-486", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_288 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481", cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_0 [label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44", cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs"];
m0_1 [label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="44-44", cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs"];
m0_123 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m0_80 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs"];
m0_118 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_254 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m0_255 [label="var options = new NumberSetOptions()", span="435-435", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_256 [label="bool result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="436-436", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_258 [label="Assert.AreEqual(-4096.1024, options.DoubleValue)", span="439-439", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_257 [label="base.AssertParserSuccess(result)", span="438-438", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_259 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m0_90 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs"];
m0_283 [label="Entry float.ToString(System.IFormatProvider)", span="0-0", cluster="float.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m0_248 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m0_249 [label="var options = new NumberSetOptions()", span="425-425", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_250 [label="bool result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="426-426", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_252 [label="Assert.AreEqual(-4096.1024, options.DoubleValue)", span="429-429", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_251 [label="base.AssertParserSuccess(result)", span="428-428", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_253 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m0_91 [label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs"];
m0_7 [label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m0_8 [label="base.Parser.ParseArguments(new string[] { }, null)", span="59-59", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m0_9 [label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="57-57", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs"];
m0_72 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_73 [label="var options = new SimpleOptionsWithEnum()", span="147-147", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_74 [label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_76 [label="Assert.AreEqual(''data.bin'', options.StringValue)", span="152-152", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_77 [label="Assert.AreEqual(FileAccess.ReadWrite, options.FileAccess)", span="153-153", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_78 [label="Console.WriteLine(options)", span="154-154", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_75 [label="base.AssertParserSuccess(result)", span="151-151", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_79 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145", cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs"];
m0_224 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m0_225 [label="var options = new NumberSetOptions()", span="385-385", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_226 [label="bool result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="386-386", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_228 [label="Assert.AreEqual(-4096, options.IntegerValue)", span="389-389", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_227 [label="base.AssertParserSuccess(result)", span="388-388", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_229 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs"];
m0_161 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_162 [label="var options = new SimpleOptions()", span="277-277", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_163 [label="bool result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_164 [label="base.AssertParserFailure(result)", span="280-280", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_165 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_29 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_30 [label="var options = new BooleanSetOptions()", span="90-90", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_31 [label="bool result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="91-91", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_33 [label="Assert.IsTrue(options.BooleanThree)", span="94-94", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_34 [label="Assert.IsTrue(options.BooleanOne)", span="95-95", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_35 [label="Assert.IsFalse(options.BooleanTwo)", span="96-96", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_36 [label="Assert.AreEqual(65, options.NonBooleanValue)", span="97-97", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_37 [label="Console.WriteLine(options)", span="98-98", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_32 [label="base.AssertParserSuccess(result)", span="93-93", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_38 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="88-88", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs"];
m0_67 [label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_68 [label="var options = new SimpleOptions()", span="137-137", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_69 [label="Assert.IsFalse(base.Parser.ParseArguments(new string[] { ''-i=10'' }, options))", span="139-139", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_70 [label="Console.WriteLine(options)", span="140-140", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_71 [label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="135-135", cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs"];
m0_278 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_279 [label="var options = new NumberSetOptions()", span="474-474", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_280 [label="bool result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="475-475", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_281 [label="base.AssertParserFailure(result)", span="477-477", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_282 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472", cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_52 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_53 [label="var options = new SimpleOptionsWithOptionList()", span="118-118", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_54 [label="bool result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="119-120", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_56 [label="Assert.AreEqual(''string1'', options.SearchKeywords[0])", span="123-123", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_57 [label="Console.WriteLine(options.SearchKeywords[0])", span="124-124", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_58 [label="Assert.AreEqual(''stringTwo'', options.SearchKeywords[1])", span="125-125", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_59 [label="Console.WriteLine(options.SearchKeywords[1])", span="126-126", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_60 [label="Assert.AreEqual(''stringIII'', options.SearchKeywords[2])", span="127-127", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_61 [label="Console.WriteLine(options.SearchKeywords[2])", span="128-128", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_62 [label="Assert.AreEqual(''test-file.txt'', options.StringValue)", span="129-129", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_63 [label="Console.WriteLine(options.StringValue)", span="130-130", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_55 [label="base.AssertParserSuccess(result)", span="122-122", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_64 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="116-116", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs"];
m0_17 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", span="58-58", cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserSuccess(bool)", file="CommandLineParserFixture.cs"];
m0_191 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_192 [label="var options = new NumberSetOptions()", span="331-331", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_193 [label="bool result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_194 [label="base.AssertParserFailure(result)", span="334-334", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_195 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_6 [label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473", cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs"];
m0_151 [label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_152 [label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_153 [label="var options = new MixedCaseOptions()", span="264-264", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_154 [label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_156 [label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="268-268", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_157 [label="Assert.AreEqual(''beta'', options.BetaValue)", span="269-269", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_155 [label="base.AssertParserSuccess(result)", span="267-267", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_158 [label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261", cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_218 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m0_219 [label="var options = new NumberSetOptions()", span="376-376", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_220 [label="bool result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="377-377", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_222 [label="Assert.AreEqual(-4096, options.IntegerValue)", span="380-380", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_221 [label="base.AssertParserSuccess(result)", span="379-379", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_223 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs"];
m0_19 [label="Entry System.Console.WriteLine(object)", span="0-0", cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs"];
m0_39 [label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35", cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs"];
m0_65 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs"];
m0_135 [label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_136 [label="ICommandLineParser local = new CommandLineParser()", span="241-241", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_137 [label="var options = new MixedCaseOptions()", span="242-242", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_138 [label="bool result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_140 [label="Assert.AreEqual(''alfa'', options.AlfaValue)", span="246-246", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_141 [label="Assert.AreEqual(''beta'', options.BetaValue)", span="247-247", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_139 [label="base.AssertParserSuccess(result)", span="245-245", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_142 [label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239", cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs"];
m0_81 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_82 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_83 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_88 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_84 [label="var options = new NumberSetOptions()", span="162-162", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_85 [label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_87 [label="Assert.AreEqual(10.986, options.DoubleValue)", span="166-166", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_86 [label="base.AssertParserSuccess(result)", span="165-165", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_89 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs"];
m0_130 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_131 [label="var options = new SimpleOptions()", span="230-230", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_132 [label="bool result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_133 [label="base.AssertParserFailure(result)", span="233-233", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_134 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_20 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_21 [label="var options = new SimpleOptions()", span="76-76", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_22 [label="bool result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="77-78", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_24 [label="Assert.AreEqual(''another string'', options.StringValue)", span="81-81", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_25 [label="Assert.AreEqual(100, options.IntegerValue)", span="82-82", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_26 [label="Assert.AreEqual(true, options.BooleanValue)", span="83-83", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_27 [label="Console.WriteLine(options)", span="84-84", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_23 [label="base.AssertParserSuccess(result)", span="80-80", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_28 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="74-74", cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs"];
m0_202 [label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_203 [label="var options = new SimpleOptionsWithValueList()", span="352-352", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_204 [label="bool result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_206 [label="Assert.AreEqual(''parser.xml'', options.StringValue)", span="356-356", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_207 [label="Assert.AreEqual(true, options.BooleanValue)", span="357-357", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_208 [label="Assert.AreEqual(1, options.Items.Count)", span="358-358", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_209 [label="Assert.AreEqual(''-'', options.Items[0])", span="359-359", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_205 [label="base.AssertParserSuccess(result)", span="355-355", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_210 [label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs"];
m0_143 [label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1683-1683", cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs"];
m0_18 [label="Entry Unk.AreEqual", span="", cluster="Unk.AreEqual", file="CommandLineParserFixture.cs"];
m0_41 [label="Entry Unk.IsFalse", span="", cluster="Unk.IsFalse", file="CommandLineParserFixture.cs"];
m0_129 [label="Entry CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", span="63-63", cluster="CommandLine.Tests.CommandLineParserBaseFixture.AssertParserFailure(bool)", file="CommandLineParserFixture.cs"];
m0_145 [label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_146 [label="ICommandLineParser local = new CommandLineParser()", span="253-253", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_147 [label="var options = new MixedCaseOptions()", span="254-254", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_148 [label="bool result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_149 [label="base.AssertParserFailure(result)", span="257-257", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_150 [label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251", cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs"];
m0_159 [label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694", cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs"];
m0_2 [label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m0_3 [label="base.Parser.ParseArguments(null, new SimpleOptions())", span="52-52", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m0_4 [label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="50-50", cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs"];
m0_119 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m0_120 [label="var options = new SimpleOptionsWithBadDefaults()", span="213-213", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m0_121 [label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m0_122 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs"];
m0_211 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs"];
m0_109 [label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_196 [label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_197 [label="var options = new SimpleOptions()", span="342-342", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_198 [label="bool result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_200 [label="Assert.AreEqual(''-'', options.StringValue)", span="346-346", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_199 [label="base.AssertParserSuccess(result)", span="345-345", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_201 [label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340", cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs"];
m0_5 [label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs"];
m0_212 [label="CommandLine.Tests.CommandLineParserFixture", span="", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m0_213 [label="var options = new SimpleOptions()", span="367-367", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_214 [label="bool result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="368-368", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_216 [label="Assert.AreEqual(-4096, options.IntegerValue)", span="371-371", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_215 [label="base.AssertParserSuccess(result)", span="370-370", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_217 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs"];
m0_266 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_267 [label="var options = new NumberSetOptions()", span="456-456", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_268 [label="bool result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="457-457", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_269 [label="base.AssertParserFailure(result)", span="459-459", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_270 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454", cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_230 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m0_231 [label="var options = new NumberSetOptions()", span="394-394", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_232 [label="bool result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="395-395", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_234 [label="Assert.AreEqual(-4096, options.IntegerValue)", span="398-398", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_233 [label="base.AssertParserSuccess(result)", span="397-397", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_235 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs"];
m0_66 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs"];
m0_42 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_43 [label="var options = new BooleanSetOptions()", span="104-104", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_44 [label="bool result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="105-105", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_46 [label="Assert.IsTrue(options.BooleanTwo)", span="108-108", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_47 [label="Assert.IsFalse(options.BooleanOne)", span="109-109", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_48 [label="Assert.IsFalse(options.BooleanThree)", span="110-110", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_49 [label="Assert.AreEqual(9, options.NonBooleanValue)", span="111-111", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_50 [label="Console.WriteLine(options)", span="112-112", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_45 [label="base.AssertParserSuccess(result)", span="107-107", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_51 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="102-102", cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs"];
m0_166 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_167 [label="var options = new NumberSetOptions()", span="286-286", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_168 [label="bool result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_169 [label="base.AssertParserFailure(result)", span="289-289", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_170 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_181 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_182 [label="var options = new NumberSetOptions()", span="313-313", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_183 [label="bool result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_184 [label="base.AssertParserFailure(result)", span="316-316", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_185 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_144 [label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33", cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs"];
m0_236 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m0_237 [label="var options = new NumberSetOptions()", span="405-405", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_238 [label="bool result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="406-406", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_240 [label="Assert.AreEqual(-4096.1024, options.DoubleValue)", span="409-409", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_239 [label="base.AssertParserSuccess(result)", span="408-408", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_241 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403", cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs"];
m0_289 [label="Entry double.ToString(System.IFormatProvider)", span="0-0", cluster="double.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m0_110 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_111 [label="var options = new SimpleOptionsWithDefaultArray()", span="200-200", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_112 [label="bool result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_114 [label="Assert.AreEqual(new string[] { ''a'', ''b'', ''c'' }, options.StringArrayValue)", span="204-204", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_115 [label="Assert.AreEqual(new int[] { 4, 5, 6 }, options.IntegerArrayValue)", span="205-205", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_116 [label="Assert.AreEqual(new double[] { 1.1, 2.2, 3.3 }, options.DoubleArrayValue)", span="206-206", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_113 [label="base.AssertParserSuccess(result)", span="203-203", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_117 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs"];
m0_272 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_273 [label="var options = new NumberSetOptions()", span="465-465", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_274 [label="bool result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="466-466", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_275 [label="base.AssertParserFailure(result)", span="468-468", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", color=green, community=0, file="CommandLineParserFixture.cs"];
m0_276 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463", cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs"];
m0_265 [label="Entry short.ToString(System.IFormatProvider)", span="0-0", cluster="short.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m0_92 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_93 [label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_94 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_99 [label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_95 [label="var options = new NumberSetOptions()", span="176-176", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_96 [label="bool result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_98 [label="Assert.AreEqual(12.32982, options.NullableDoubleValue)", span="180-180", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_97 [label="base.AssertParserSuccess(result)", span="179-179", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_100 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172", cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs"];
m0_271 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m0_186 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_187 [label="var options = new NumberSetOptions()", span="322-322", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_188 [label="bool result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_189 [label="base.AssertParserFailure(result)", span="325-325", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_190 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_101 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_102 [label="var options = new SimpleOptionsWithDefaults()", span="188-188", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_103 [label="bool result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_105 [label="Assert.AreEqual(''str'', options.StringValue)", span="192-192", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_106 [label="Assert.AreEqual(9, options.IntegerValue)", span="193-193", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_107 [label="Assert.AreEqual(true, options.BooleanValue)", span="194-194", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_104 [label="base.AssertParserSuccess(result)", span="191-191", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_108 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186", cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs"];
m0_277 [label="Entry long.ToString(System.IFormatProvider)", span="0-0", cluster="long.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs"];
m0_124 [label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_125 [label="var options = new SimpleOptions()", span="221-221", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_126 [label="bool result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_127 [label="base.AssertParserFailure(result)", span="224-224", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_128 [label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219", cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs"];
m0_171 [label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_172 [label="var options = new NumberSetOptions()", span="295-295", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_173 [label="bool result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_174 [label="base.AssertParserFailure(result)", span="298-298", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_175 [label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293", cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs"];
m0_40 [label="Entry Unk.IsTrue", span="", cluster="Unk.IsTrue", file="CommandLineParserFixture.cs"];
m1_47 [label="Entry System.Nullable<T>.ToString()", span="0-0", cluster="System.Nullable<T>.ToString()", file="Program.cs"];
m1_49 [label="Entry System.Console.WriteLine()", span="0-0", cluster="System.Console.WriteLine()", file="Program.cs"];
m1_48 [label="Entry System.Console.WriteLine(string, object)", span="0-0", cluster="System.Console.WriteLine(string, object)", file="Program.cs"];
m1_20 [label="Entry System.Environment.Exit(int)", span="0-0", cluster="System.Environment.Exit(int)", file="Program.cs"];
m1_59 [label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="387-387", cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs"];
m1_4 [label="Entry lambda expression", span="95-95", cluster="lambda expression", file="Program.cs"];
m1_5 [label="HelpText.DefaultParsingErrorsHandler(this, current)", span="95-95", cluster="lambda expression", file="Program.cs"];
m1_6 [label="Exit lambda expression", span="95-95", cluster="lambda expression", file="Program.cs"];
m1_52 [label="Entry System.Enum.ToString()", span="0-0", cluster="System.Enum.ToString()", file="Program.cs"];
m1_7 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="852-852", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="Program.cs"];
m1_55 [label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0", cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs"];
m1_57 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="Program.cs"];
m1_51 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()", file="Program.cs"];
m1_58 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="Program.cs"];
m1_18 [label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566", cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs"];
m1_56 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="Program.cs"];
m1_54 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="Program.cs"];
m1_0 [label="Entry SampleApp.Program.Options.GetUsage()", span="93-93", cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs"];
m1_1 [label="return HelpText.AutoBuild(this, (HelpText current) => HelpText.DefaultParsingErrorsHandler(this, current));", span="95-95", cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs"];
m1_2 [label="Exit SampleApp.Program.Options.GetUsage()", span="93-93", cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs"];
m1_46 [label="Entry System.Console.WriteLine(string)", span="0-0", cluster="System.Console.WriteLine(string)", file="Program.cs"];
m1_50 [label="Entry bool.ToString()", span="0-0", cluster="bool.ToString()", file="Program.cs"];
m1_16 [label="Entry SampleApp.Program.Options.Options()", span="55-55", cluster="SampleApp.Program.Options.Options()", file="Program.cs"];
m1_21 [label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_22 [label="options.VerboseLevel == null", span="173-173", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_24 [label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="176-176", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_26 [label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="178-178", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_27 [label="options.DefinitionFiles", span="179-179", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_29 [label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="183-183", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_30 [label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="184-184", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_31 [label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="185-185", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_32 [label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="186-186", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_33 [label="options.AllowedOperators != null", span="187-187", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_36 [label="options.AllowedOperators", span="191-191", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_41 [label="!string.IsNullOrEmpty(options.OutputFile)", span="199-199", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_42 [label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="200-200", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_23 [label="Console.WriteLine(''verbose [off]'')", span="174-174", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_25 [label="Console.WriteLine()", span="177-177", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_28 [label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="181-181", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_34 [label="var builder = new StringBuilder()", span="189-189", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_40 [label="Console.WriteLine()", span="198-198", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_35 [label="builder.Append(''  allowed operators: '')", span="190-190", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_37 [label="builder.Append(op)", span="193-193", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_38 [label="builder.Append('', '')", span="194-194", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_39 [label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="196-196", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_43 [label="_headingInfo.WriteMessage(''elaborated data:'')", span="203-203", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_44 [label="Console.WriteLine(''[...]'')", span="204-204", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_45 [label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171", cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs"];
m1_53 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs"];
m1_3 [label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="810-810", cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="Program.cs"];
m1_19 [label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1719-1719", cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs"];
m1_8 [label="Entry SampleApp.Program.Main(string[])", span="156-156", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_9 [label="var options = new Options()", span="161-161", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_11 [label="!parser.ParseArguments(args, options)", span="163-163", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_10 [label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="162-162", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_13 [label="DoCoreTask(options)", span="166-166", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_12 [label="Environment.Exit(1)", span="164-164", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_14 [label="Environment.Exit(0)", span="168-168", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_15 [label="Exit SampleApp.Program.Main(string[])", span="156-156", cluster="SampleApp.Program.Main(string[])", file="Program.cs"];
m1_60 [label="SampleApp.Program.Options", span="", file="Program.cs"];
n704 -> n1  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
n704 -> n4  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
n704 -> n5  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
n704 -> n6  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
n704 -> d1  [key=1, style=dashed, color=green, label="CommandLine.HelpOptionAttribute"];
n704 -> d4  [key=1, style=dashed, color=green, label="CommandLine.HelpOptionAttribute"];
n704 -> d5  [key=1, style=dashed, color=green, label="CommandLine.HelpOptionAttribute"];
n704 -> d6  [key=1, style=dashed, color=green, label="CommandLine.HelpOptionAttribute"];
n705 -> n25  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n705 -> n27  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n705 -> n28  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n705 -> n30  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n705 -> n31  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n705 -> d25  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n705 -> d27  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n705 -> d30  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n705 -> d31  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n705 -> d28  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n706 -> n36  [key=1, style=dashed, color=red, label="CommandLine.OptionListAttribute"];
n706 -> n39  [key=1, style=dashed, color=red, label="CommandLine.OptionListAttribute"];
n706 -> d36  [key=1, style=dashed, color=green, label="CommandLine.OptionListAttribute"];
n706 -> d39  [key=1, style=dashed, color=green, label="CommandLine.OptionListAttribute"];
n707 -> n42  [key=1, style=dashed, color=red, label="CommandLine.ValueListAttribute"];
n707 -> n49  [key=1, style=dashed, color=red, label="CommandLine.ValueListAttribute"];
n707 -> d42  [key=1, style=dashed, color=green, label="CommandLine.ValueListAttribute"];
n707 -> d49  [key=1, style=dashed, color=green, label="CommandLine.ValueListAttribute"];
n708 -> n87  [key=1, style=dashed, color=red, label="CommandLine.ArgumentParser"];
n708 -> n93  [key=1, style=dashed, color=red, label="CommandLine.ArgumentParser"];
n708 -> d87  [key=1, style=dashed, color=green, label="CommandLine.ArgumentParser"];
n708 -> d93  [key=1, style=dashed, color=green, label="CommandLine.ArgumentParser"];
n709 -> n155  [key=1, style=dashed, color=red, label="CommandLine.BadOptionInfo"];
n709 -> n156  [key=1, style=dashed, color=red, label="CommandLine.BadOptionInfo"];
n709 -> d160  [key=1, style=dashed, color=green, label="CommandLine.BadOptionInfo"];
n709 -> d161  [key=1, style=dashed, color=green, label="CommandLine.BadOptionInfo"];
n710 -> n162  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
n710 -> n169  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
n710 -> n179  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
n710 -> n186  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
n710 -> n191  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
n710 -> n197  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
n710 -> n203  [key=1, style=dashed, color=red, label="CommandLine.LongOptionParser"];
n710 -> d167  [key=1, style=dashed, color=green, label="CommandLine.LongOptionParser"];
n710 -> d184  [key=1, style=dashed, color=green, label="CommandLine.LongOptionParser"];
n710 -> d191  [key=1, style=dashed, color=green, label="CommandLine.LongOptionParser"];
n710 -> d196  [key=1, style=dashed, color=green, label="CommandLine.LongOptionParser"];
n710 -> d202  [key=1, style=dashed, color=green, label="CommandLine.LongOptionParser"];
n710 -> d208  [key=1, style=dashed, color=green, label="CommandLine.LongOptionParser"];
n710 -> d174  [key=1, style=dashed, color=green, label="CommandLine.LongOptionParser"];
n711 -> n214  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n215  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n219  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n222  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n223  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n224  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n226  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n231  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n233  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> n235  [key=1, style=dashed, color=red, label="CommandLine.OneCharStringEnumerator"];
n711 -> d219  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d220  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d224  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d227  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d228  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d231  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d229  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d236  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d238  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n711 -> d240  [key=1, style=dashed, color=green, label="CommandLine.OneCharStringEnumerator"];
n712 -> n243  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
n712 -> n250  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
n712 -> n261  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
n712 -> n268  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
n712 -> n275  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
n712 -> n281  [key=1, style=dashed, color=red, label="CommandLine.OptionGroupParser"];
n712 -> d248  [key=1, style=dashed, color=green, label="CommandLine.OptionGroupParser"];
n712 -> d266  [key=1, style=dashed, color=green, label="CommandLine.OptionGroupParser"];
n712 -> d273  [key=1, style=dashed, color=green, label="CommandLine.OptionGroupParser"];
n712 -> d280  [key=1, style=dashed, color=green, label="CommandLine.OptionGroupParser"];
n712 -> d286  [key=1, style=dashed, color=green, label="CommandLine.OptionGroupParser"];
n712 -> d255  [key=1, style=dashed, color=green, label="CommandLine.OptionGroupParser"];
n713 -> n291  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n292  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n293  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n294  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n295  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n296  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n297  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n298  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n301  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n317  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n318  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n319  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n320  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n321  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n327  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n331  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n333  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n343  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n344  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n345  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n346  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n347  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n357  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n358  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n359  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n366  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n367  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n370  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n371  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n372  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n373  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n382  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n383  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> n384  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n713 -> d296  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d297  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d298  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d299  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d300  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d301  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d302  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d303  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d306  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d322  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d323  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d325  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d326  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d324  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d332  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d338  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d336  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d348  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d350  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d352  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d349  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d351  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d364  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d366  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d365  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d373  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d374  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d377  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d378  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d379  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d380  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d389  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d391  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n713 -> d390  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n714 -> n390  [key=1, style=dashed, color=red, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
n714 -> n393  [key=1, style=dashed, color=red, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
n714 -> d397  [key=1, style=dashed, color=green, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
n714 -> d400  [key=1, style=dashed, color=green, label="CommandLine.OptionMap.MutuallyExclusiveInfo"];
n715 -> n395  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n397  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n400  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n401  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n402  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n403  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n407  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n412  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n413  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n416  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n418  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n423  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n425  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n427  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n428  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n430  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n436  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n437  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> n438  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n715 -> d402  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d407  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d408  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d410  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d404  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d409  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d414  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d419  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d420  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d423  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d425  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d430  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d432  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d435  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d434  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d437  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d444  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d443  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n715 -> d445  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n716 -> n454  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> n455  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> n458  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> n459  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> n467  [key=1, style=dashed, color=red, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> d461  [key=1, style=dashed, color=green, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> d462  [key=1, style=dashed, color=green, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> d465  [key=1, style=dashed, color=green, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> d466  [key=1, style=dashed, color=green, label="CommandLine.Pair<TLeft, TRight>"];
n716 -> d474  [key=1, style=dashed, color=green, label="CommandLine.Pair<TLeft, TRight>"];
n717 -> n470  [key=1, style=dashed, color=red, label="CommandLine.ParsingError"];
n717 -> n472  [key=1, style=dashed, color=red, label="CommandLine.ParsingError"];
n717 -> n473  [key=1, style=dashed, color=red, label="CommandLine.ParsingError"];
n717 -> d477  [key=1, style=dashed, color=green, label="CommandLine.ParsingError"];
n717 -> d479  [key=1, style=dashed, color=green, label="CommandLine.ParsingError"];
n717 -> d480  [key=1, style=dashed, color=green, label="CommandLine.ParsingError"];
n718 -> n476  [key=1, style=dashed, color=red, label="CommandLine.PostParsingState"];
n718 -> d483  [key=1, style=dashed, color=green, label="CommandLine.PostParsingState"];
n719 -> n480  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n481  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n482  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n486  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n489  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n490  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n491  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n498  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n500  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n501  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> n502  [key=1, style=dashed, color=red, label="CommandLine.StringArrayEnumerator"];
n719 -> d487  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d489  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d488  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d493  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d496  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d497  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d498  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d505  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d507  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d508  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n719 -> d509  [key=1, style=dashed, color=green, label="CommandLine.StringArrayEnumerator"];
n720 -> n508  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
n720 -> n509  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
n720 -> n510  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
n720 -> n511  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
n720 -> n514  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
n720 -> n516  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
n720 -> n517  [key=1, style=dashed, color=red, label="CommandLine.TargetWrapper"];
n720 -> d515  [key=1, style=dashed, color=green, label="CommandLine.TargetWrapper"];
n720 -> d516  [key=1, style=dashed, color=green, label="CommandLine.TargetWrapper"];
n720 -> d517  [key=1, style=dashed, color=green, label="CommandLine.TargetWrapper"];
n720 -> d518  [key=1, style=dashed, color=green, label="CommandLine.TargetWrapper"];
n720 -> d521  [key=1, style=dashed, color=green, label="CommandLine.TargetWrapper"];
n720 -> d524  [key=1, style=dashed, color=green, label="CommandLine.TargetWrapper"];
n720 -> d523  [key=1, style=dashed, color=green, label="CommandLine.TargetWrapper"];
n721 -> n525  [key=1, style=dashed, color=red, label="CommandLine.CommandLineOptionsBase"];
n721 -> d532  [key=1, style=dashed, color=green, label="CommandLine.CommandLineOptionsBase"];
n722 -> n535  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n538  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n541  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n542  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n545  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n546  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n549  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n550  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n551  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n554  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n555  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n556  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> n557  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n722 -> d542  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d545  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d548  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d549  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d552  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d553  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d556  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d557  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d558  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d561  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d562  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d563  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n722 -> d564  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n723 -> n560  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n563  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n567  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n570  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n577  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n583  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n590  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n597  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> n612  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParser"];
n723 -> d567  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d570  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d574  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d577  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d584  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d590  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d597  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d604  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n723 -> d619  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParser"];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> d1  [key=0, style=solid, color=green];
n1 -> n2  [key=0, style=solid, color=red];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n5  [key=1, style=dashed, color=red, label=string];
n3 -> d4  [key=0, style=solid, color=green];
n3 -> d5  [key=1, style=dashed, color=green, label=string];
n4 -> n5  [key=0, style=solid, color=red];
n5 -> n6  [key=0, style=solid, color=red];
n6 -> n7  [key=0, style=solid, color=red];
n7 -> n3  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid, color=red];
n8 -> n10  [key=1, style=dashed, color=red, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>"];
n8 -> n13  [key=1, style=dashed, color=red, label=object];
n8 -> n572  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n8 -> d9  [key=0, style=solid, color=green];
n8 -> d10  [key=1, style=dashed, color=green, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>"];
n8 -> d13  [key=1, style=dashed, color=green, label=object];
n9 -> n10  [key=0, style=solid, color=red];
n10 -> n11  [key=0, style=solid, color=red];
n10 -> n13  [key=1, style=dashed, color=red, label=method];
n13 -> n14  [key=0, style=solid, color=red];
n13 -> n17  [key=2, style=dotted, color=red];
n11 -> n12  [key=0, style=solid, color=red];
n11 -> n13  [key=0, style=solid, color=red];
n11 -> n15  [key=2, style=dotted, color=red];
n12 -> n14  [key=0, style=solid, color=red];
n12 -> n16  [key=2, style=dotted, color=red];
n15 -> n18  [key=0, style=solid, color=red];
n15 -> n10  [key=3, color=red, style=bold, label="Parameter variable System.Reflection.MethodInfo value"];
n15 -> d10  [key=3, color=green, style=bold, label="Parameter variable System.Reflection.MethodInfo value"];
n15 -> d18  [key=0, style=solid, color=green];
n14 -> n8  [key=0, style=bold, color=blue];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n20  [key=2, style=dotted, color=red];
n19 -> n15  [key=0, style=bold, color=blue];
n21 -> n22  [key=0, style=solid];
n22 -> n21  [key=0, style=bold, color=blue];
n23 -> n24  [key=0, style=solid, color=red];
n23 -> n25  [key=1, style=dashed, color=red, label=string];
n23 -> n26  [key=1, style=dashed, color=red, label=string];
n23 -> n27  [key=1, style=dashed, color=red, label=string];
n23 -> n30  [key=1, style=dashed, color=red, label=string];
n23 -> n31  [key=1, style=dashed, color=red, label=string];
n23 -> d24  [key=0, style=solid, color=green];
n23 -> d25  [key=1, style=dashed, color=green, label=string];
n23 -> d26  [key=1, style=dashed, color=green, label=string];
n23 -> d27  [key=1, style=dashed, color=green, label=string];
n23 -> d30  [key=1, style=dashed, color=green, label=string];
n23 -> d31  [key=1, style=dashed, color=green, label=string];
n24 -> n25  [key=0, style=solid, color=red];
n24 -> n26  [key=0, style=solid, color=red];
n24 -> n33  [key=2, style=dotted, color=red];
n25 -> n28  [key=0, style=solid, color=red];
n26 -> n27  [key=0, style=solid, color=red];
n26 -> n28  [key=0, style=solid, color=red];
n26 -> n33  [key=2, style=dotted, color=red];
n27 -> n28  [key=0, style=solid, color=red];
n30 -> n31  [key=0, style=solid, color=red];
n31 -> n32  [key=0, style=solid, color=red];
n28 -> n29  [key=0, style=solid, color=red];
n28 -> n30  [key=0, style=solid, color=red];
n29 -> n32  [key=0, style=solid, color=red];
n29 -> n34  [key=2, style=dotted, color=red];
n32 -> n23  [key=0, style=bold, color=blue];
n35 -> n36  [key=0, style=solid, color=red];
n35 -> d36  [key=0, style=solid, color=green];
n36 -> n37  [key=0, style=solid, color=red];
n37 -> n35  [key=0, style=bold, color=blue];
n38 -> n39  [key=0, style=solid, color=red];
n38 -> d39  [key=0, style=solid, color=green];
n39 -> n40  [key=0, style=solid, color=red];
n40 -> n38  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid, color=red];
n41 -> d42  [key=0, style=solid, color=green];
n42 -> n43  [key=0, style=solid, color=red];
n43 -> n41  [key=0, style=bold, color=blue];
n44 -> n45  [key=0, style=solid, color=red];
n44 -> n47  [key=1, style=dashed, color=red, label="System.Type"];
n44 -> n49  [key=1, style=dashed, color=red, label="System.Type"];
n44 -> d45  [key=0, style=solid, color=green];
n44 -> d47  [key=1, style=dashed, color=green, label="System.Type"];
n44 -> d49  [key=1, style=dashed, color=green, label="System.Type"];
n45 -> n46  [key=0, style=solid, color=red];
n45 -> n47  [key=0, style=solid, color=red];
n47 -> n48  [key=0, style=solid, color=red];
n47 -> n49  [key=0, style=solid, color=red];
n47 -> n52  [key=2, style=dotted, color=red];
n49 -> n50  [key=0, style=solid, color=red];
n46 -> n50  [key=0, style=solid, color=red];
n46 -> n51  [key=2, style=dotted, color=red];
n48 -> n50  [key=0, style=solid, color=red];
n48 -> n53  [key=2, style=dotted, color=red];
n50 -> n44  [key=0, style=bold, color=blue];
n53 -> n528  [key=0, style=solid];
n54 -> n55  [key=0, style=solid, color=red];
n54 -> n56  [key=1, style=dashed, color=red, label=object];
n54 -> n59  [key=1, style=dashed, color=red, label=object];
n54 -> n60  [key=1, style=dashed, color=red, label=object];
n54 -> n58  [key=3, color=red, style=bold, label="method methodReturn System.Collections.Generic.IList<string> GetReference"];
n54 -> d55  [key=0, style=solid, color=green];
n54 -> d56  [key=1, style=dashed, color=green, label=object];
n54 -> d59  [key=1, style=dashed, color=green, label=object];
n54 -> d60  [key=1, style=dashed, color=green, label=object];
n54 -> d58  [key=3, color=green, style=bold, label="method methodReturn System.Collections.Generic.IList<string> GetReference"];
n55 -> n56  [key=0, style=solid, color=red];
n56 -> n57  [key=0, style=solid, color=red];
n56 -> n62  [key=2, style=dotted, color=red];
n56 -> n59  [key=1, style=dashed, color=red, label=concreteType];
n56 -> n60  [key=1, style=dashed, color=red, label=property];
n59 -> n60  [key=0, style=solid, color=red];
n59 -> n63  [key=2, style=dotted, color=red];
n59 -> n64  [key=2, style=dotted, color=red];
n60 -> n61  [key=0, style=solid, color=red];
n60 -> n65  [key=2, style=dotted, color=red];
n57 -> n58  [key=0, style=solid, color=red];
n57 -> n59  [key=0, style=solid, color=red];
n62 -> n76  [key=0, style=solid, color=red];
n62 -> n77  [key=1, style=dashed, color=red, label=object];
n62 -> n54  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n62 -> n55  [key=3, color=red, style=bold, label="Parameter variable System.Type concreteType"];
n62 -> n58  [key=3, color=red, style=bold, label="method methodReturn System.Reflection.PropertyInfo GetProperty"];
n62 -> d55  [key=3, color=green, style=bold, label="Parameter variable System.Type concreteType"];
n62 -> d58  [key=3, color=green, style=bold, label="method methodReturn System.Reflection.PropertyInfo GetProperty"];
n62 -> d76  [key=0, style=solid, color=green];
n62 -> d77  [key=1, style=dashed, color=green, label=object];
n58 -> n61  [key=0, style=solid, color=red];
n61 -> n54  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid, color=red];
n66 -> n58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ValueListAttribute GetAttribute"];
n66 -> d58  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ValueListAttribute GetAttribute"];
n66 -> d67  [key=0, style=solid, color=green];
n67 -> n68  [key=0, style=solid, color=red];
n67 -> n75  [key=2, style=dotted, color=red];
n67 -> n70  [key=1, style=dashed, color=red, label=list];
n67 -> n72  [key=1, style=dashed, color=red, label=list];
n68 -> n69  [key=0, style=solid, color=red];
n68 -> n70  [key=0, style=solid, color=red];
n75 -> n641  [key=0, style=solid, color=red];
n75 -> n642  [key=1, style=dashed, color=red, label=object];
n75 -> n643  [key=1, style=dashed, color=red, label=object];
n75 -> n66  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n75 -> n62  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n75 -> n305  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n75 -> d648  [key=0, style=solid, color=green];
n75 -> d649  [key=1, style=dashed, color=green, label=object];
n75 -> d650  [key=1, style=dashed, color=green, label=object];
n70 -> n71  [key=0, style=solid, color=red];
n70 -> n72  [key=0, style=solid, color=red];
n72 -> n73  [key=0, style=solid, color=red];
n69 -> n74  [key=0, style=solid, color=red];
n71 -> n74  [key=0, style=solid, color=red];
n71 -> n34  [key=2, style=dotted, color=red];
n73 -> n74  [key=0, style=solid, color=red];
n74 -> n66  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid, color=red];
n77 -> n78  [key=0, style=solid, color=red];
n77 -> n75  [key=2, style=dotted, color=red];
n77 -> n80  [key=1, style=dashed, color=red, label=list];
n77 -> n82  [key=1, style=dashed, color=red, label=list];
n78 -> n79  [key=0, style=solid, color=red];
n78 -> n80  [key=0, style=solid, color=red];
n80 -> n81  [key=0, style=solid, color=red];
n80 -> n82  [key=0, style=solid, color=red];
n82 -> n83  [key=0, style=solid, color=red];
n82 -> n84  [key=1, style=dashed, color=red, label=pairZero];
n79 -> n85  [key=0, style=solid, color=red];
n81 -> n85  [key=0, style=solid, color=red];
n81 -> n34  [key=2, style=dotted, color=red];
n83 -> n84  [key=0, style=solid, color=red];
n83 -> n85  [key=1, style=dashed, color=red, label="out System.Type"];
n84 -> n85  [key=0, style=solid, color=red];
n85 -> n62  [key=0, style=bold, color=blue];
n86 -> n87  [key=0, style=solid, color=red];
n86 -> d87  [key=0, style=solid, color=green];
n87 -> n88  [key=0, style=solid, color=red];
n87 -> n89  [key=2, style=dotted, color=red];
n88 -> n86  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n90 -> n164  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n90 -> n245  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n90 -> n593  [key=3, color=red, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator"];
n90 -> n590  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionMap map"];
n90 -> n587  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n90 -> d597  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionMap map"];
n90 -> d600  [key=3, color=green, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator argumentEnumerator"];
n91 -> n90  [key=0, style=bold, color=blue];
n92 -> n93  [key=0, style=solid, color=red];
n92 -> n166  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n92 -> n248  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n92 -> d93  [key=0, style=solid, color=green];
n92 -> d171  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n92 -> d253  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n93 -> n94  [key=0, style=solid, color=red];
n93 -> n95  [key=2, style=dotted, color=red];
n93 -> n96  [key=2, style=dotted, color=red];
n94 -> n92  [key=0, style=bold, color=blue];
n95 -> n472  [key=0, style=solid, color=red];
n95 -> n473  [key=1, style=dashed, color=red, label=bool];
n95 -> d479  [key=0, style=solid, color=green];
n95 -> d480  [key=1, style=dashed, color=green, label=bool];
n97 -> n98  [key=0, style=solid, color=red];
n97 -> n100  [key=1, style=dashed, color=red, label=string];
n97 -> n101  [key=1, style=dashed, color=red, label=bool];
n97 -> n102  [key=1, style=dashed, color=red, label=string];
n97 -> n103  [key=1, style=dashed, color=red, label=bool];
n97 -> n58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ArgumentParser Create"];
n97 -> n595  [key=3, color=red, style=bold, label="Parameter variable string argument"];
n97 -> d58  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ArgumentParser Create"];
n97 -> d98  [key=0, style=solid, color=green];
n97 -> d100  [key=1, style=dashed, color=green, label=string];
n97 -> d102  [key=1, style=dashed, color=green, label=string];
n97 -> d103  [key=1, style=dashed, color=green, label=bool];
n97 -> d104  [key=1, style=dashed, color=green, label=string];
n97 -> d105  [key=1, style=dashed, color=green, label=bool];
n97 -> d602  [key=3, color=green, style=bold, label="Parameter variable string argument"];
n98 -> n99  [key=0, style=solid, color=red];
n98 -> n100  [key=0, style=solid, color=red];
n98 -> n106  [key=2, style=dotted, color=red];
n100 -> n101  [key=0, style=solid, color=red];
n100 -> n102  [key=0, style=solid, color=red];
n101 -> n105  [key=0, style=solid, color=red];
n101 -> n107  [key=2, style=dotted, color=red];
n102 -> n103  [key=0, style=solid, color=red];
n102 -> n104  [key=0, style=solid, color=red];
n103 -> n105  [key=0, style=solid, color=red];
n103 -> n108  [key=2, style=dotted, color=red];
n99 -> n105  [key=0, style=solid, color=red];
n104 -> n105  [key=0, style=solid, color=red];
n105 -> n97  [key=0, style=bold, color=blue];
n108 -> n243  [key=0, style=solid, color=red];
n108 -> d248  [key=0, style=solid, color=green];
n107 -> n162  [key=0, style=solid, color=red];
n107 -> d167  [key=0, style=solid, color=green];
n109 -> n110  [key=0, style=solid, color=red];
n109 -> n111  [key=1, style=dashed, color=red, label=string];
n109 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool IsInputValue"];
n109 -> d113  [key=0, style=solid, color=green];
n109 -> d115  [key=1, style=dashed, color=green, label=string];
n109 -> d116  [key=1, style=dashed, color=green, label=string];
n109 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool IsInputValue"];
n110 -> n111  [key=0, style=solid, color=red];
n110 -> n112  [key=0, style=solid, color=red];
n111 -> n113  [key=0, style=solid, color=red];
n111 -> n106  [key=2, style=dotted, color=red];
n112 -> n113  [key=0, style=solid, color=red];
n113 -> n109  [key=0, style=bold, color=blue];
n114 -> n115  [key=0, style=solid, color=red];
n114 -> n116  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n114 -> n117  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n114 -> n118  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n114 -> n119  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n114 -> n164  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator ae"];
n114 -> n245  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.IArgumentEnumerator ae"];
n114 -> d120  [key=0, style=solid, color=green];
n114 -> d121  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n114 -> d122  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n114 -> d123  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n114 -> d124  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n115 -> n116  [key=0, style=solid, color=red];
n115 -> n89  [key=2, style=dotted, color=red];
n115 -> n118  [key=1, style=dashed, color=red, label=list];
n115 -> n121  [key=1, style=dashed, color=red, label=list];
n116 -> n117  [key=0, style=solid, color=red];
n116 -> n119  [key=0, style=solid, color=red];
n116 -> n123  [key=2, style=dotted, color=red];
n117 -> n118  [key=0, style=solid, color=red];
n117 -> n119  [key=0, style=solid, color=red];
n117 -> n109  [key=2, style=dotted, color=red];
n118 -> n116  [key=0, style=solid, color=red];
n118 -> n124  [key=2, style=dotted, color=red];
n119 -> n120  [key=0, style=solid, color=red];
n119 -> n121  [key=0, style=solid, color=red];
n119 -> n125  [key=2, style=dotted, color=red];
n121 -> n122  [key=0, style=solid, color=red];
n123 -> n160  [key=0, style=solid];
n123 -> n221  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
n123 -> n488  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MoveNext"];
n120 -> n122  [key=0, style=solid, color=red];
n120 -> n126  [key=2, style=dotted, color=red];
n125 -> n161  [key=0, style=solid];
n125 -> n237  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MovePrevious"];
n125 -> n497  [key=3, color=darkorchid, style=bold, label="method methodReturn bool MovePrevious"];
n122 -> n114  [key=0, style=bold, color=blue];
n126 -> n527  [key=0, style=solid];
n127 -> n128  [key=0, style=solid, color=red];
n127 -> n612  [key=3, color=red, style=bold, label="Parameter variable bool caseSensitive"];
n127 -> d133  [key=0, style=solid, color=green];
n127 -> d619  [key=3, color=green, style=bold, label="Parameter variable bool caseSensitive"];
n128 -> n129  [key=0, style=solid, color=red];
n128 -> n130  [key=2, style=dotted, color=red];
n129 -> n127  [key=0, style=bold, color=blue];
n131 -> n132  [key=0, style=solid, color=red];
n131 -> n612  [key=3, color=red, style=bold, label="Parameter variable bool caseSensitive"];
n131 -> d137  [key=0, style=solid, color=green];
n131 -> d619  [key=3, color=green, style=bold, label="Parameter variable bool caseSensitive"];
n132 -> n133  [key=0, style=solid, color=red];
n132 -> n130  [key=2, style=dotted, color=red];
n133 -> n131  [key=0, style=bold, color=blue];
n134 -> n135  [key=0, style=solid, color=red];
n134 -> n137  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n134 -> n167  [key=3, color=red, style=bold, label="Parameter variable bool value"];
n134 -> n256  [key=3, color=red, style=bold, label="Parameter variable bool value"];
n134 -> d140  [key=0, style=solid, color=green];
n134 -> d172  [key=3, color=green, style=bold, label="Parameter variable bool value"];
n134 -> d261  [key=3, color=green, style=bold, label="Parameter variable bool value"];
n135 -> n136  [key=0, style=solid, color=red];
n135 -> n137  [key=2, style=dotted, color=red];
n136 -> n134  [key=0, style=bold, color=blue];
n137 -> n138  [key=0, style=solid, color=red];
n137 -> n140  [key=1, style=dashed, color=red, label=bool];
n137 -> n134  [key=3, color=darkorchid, style=bold, label="Parameter variable bool value"];
n137 -> n167  [key=3, color=red, style=bold, label="Parameter variable bool value"];
n137 -> n256  [key=3, color=red, style=bold, label="Parameter variable bool value"];
n137 -> n112  [key=3, color=red, style=bold, label="Parameter variable bool addMoveNextIfTrue"];
n137 -> n139  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> n141  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> n142  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> d114  [key=3, color=green, style=bold, label="Parameter variable bool addMoveNextIfTrue"];
n137 -> d143  [key=0, style=solid, color=green];
n137 -> d145  [key=1, style=dashed, color=green, label=bool];
n137 -> d144  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> d146  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> d147  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ParserState BooleanToParserState"];
n137 -> d172  [key=3, color=green, style=bold, label="Parameter variable bool value"];
n137 -> d261  [key=3, color=green, style=bold, label="Parameter variable bool value"];
n138 -> n139  [key=0, style=solid, color=red];
n138 -> n140  [key=0, style=solid, color=red];
n140 -> n141  [key=0, style=solid, color=red];
n140 -> n142  [key=0, style=solid, color=red];
n139 -> n143  [key=0, style=solid, color=red];
n141 -> n143  [key=0, style=solid, color=red];
n142 -> n143  [key=0, style=solid, color=red];
n143 -> n137  [key=0, style=bold, color=blue];
n144 -> n145  [key=0, style=solid, color=red];
n144 -> n166  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n144 -> n248  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n144 -> d150  [key=0, style=solid, color=green];
n144 -> d171  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n144 -> d253  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n145 -> n146  [key=0, style=solid, color=red];
n145 -> n147  [key=0, style=solid, color=red];
n146 -> n147  [key=0, style=solid, color=red];
n146 -> n126  [key=2, style=dotted, color=red];
n147 -> n144  [key=0, style=bold, color=blue];
n148 -> n149  [key=0, style=solid, color=red];
n148 -> n166  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n148 -> n248  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n148 -> d154  [key=0, style=solid, color=green];
n148 -> d171  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n148 -> d253  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n149 -> n150  [key=0, style=solid, color=red];
n149 -> n151  [key=0, style=solid, color=red];
n150 -> n151  [key=0, style=solid, color=red];
n150 -> n126  [key=2, style=dotted, color=red];
n151 -> n148  [key=0, style=bold, color=blue];
n152 -> n153  [key=0, style=solid];
n153 -> n152  [key=0, style=bold, color=blue];
n154 -> n155  [key=0, style=solid, color=red];
n154 -> n156  [key=1, style=dashed, color=red, label=string];
n154 -> d160  [key=0, style=solid, color=green];
n154 -> d161  [key=1, style=dashed, color=green, label=string];
n155 -> n156  [key=0, style=solid, color=red];
n156 -> n157  [key=0, style=solid, color=red];
n157 -> n154  [key=0, style=bold, color=blue];
n158 -> n159  [key=0, style=solid];
n158 -> n230  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetRemainingFromNext"];
n158 -> n494  [key=3, color=darkorchid, style=bold, label="method methodReturn string GetRemainingFromNext"];
n159 -> n158  [key=0, style=bold, color=blue];
n160 -> n123  [key=0, style=bold, color=blue];
n161 -> n125  [key=0, style=bold, color=blue];
n162 -> n163  [key=0, style=solid, color=red];
n163 -> n107  [key=0, style=bold, color=blue];
n164 -> n165  [key=0, style=solid, color=red];
n164 -> n166  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n164 -> n173  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n164 -> n177  [key=1, style=dashed, color=red, label=object];
n164 -> n182  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n164 -> n184  [key=1, style=dashed, color=red, label=object];
n164 -> n189  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n164 -> n194  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n164 -> n195  [key=1, style=dashed, color=red, label=object];
n164 -> n201  [key=1, style=dashed, color=red, label=object];
n164 -> n90  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n164 -> n142  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n164 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n164 -> n137  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n164 -> d147  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n164 -> d170  [key=0, style=solid, color=green];
n164 -> d171  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n164 -> d178  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n164 -> d182  [key=1, style=dashed, color=green, label=object];
n164 -> d187  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n164 -> d189  [key=1, style=dashed, color=green, label=object];
n164 -> d194  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n164 -> d199  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n164 -> d200  [key=1, style=dashed, color=green, label=object];
n164 -> d206  [key=1, style=dashed, color=green, label=object];
n165 -> n166  [key=0, style=solid, color=red];
n165 -> n206  [key=2, style=dotted, color=red];
n165 -> n207  [key=2, style=dotted, color=red];
n165 -> n173  [key=1, style=dashed, color=red, label=parts];
n165 -> n175  [key=1, style=dashed, color=red, label=parts];
n165 -> n177  [key=1, style=dashed, color=red, label=parts];
n165 -> n183  [key=1, style=dashed, color=red, label=parts];
n165 -> n199  [key=1, style=dashed, color=red, label=parts];
n166 -> n167  [key=0, style=solid, color=red];
n166 -> n168  [key=1, style=dashed, color=red, label=option];
n166 -> n170  [key=1, style=dashed, color=red, label=option];
n166 -> n171  [key=1, style=dashed, color=red, label=option];
n166 -> n172  [key=1, style=dashed, color=red, label=option];
n166 -> n176  [key=1, style=dashed, color=red, label=option];
n166 -> n177  [key=1, style=dashed, color=red, label=option];
n166 -> n179  [key=1, style=dashed, color=red, label=option];
n166 -> n181  [key=1, style=dashed, color=red, label=option];
n166 -> n184  [key=1, style=dashed, color=red, label=option];
n166 -> n186  [key=1, style=dashed, color=red, label=option];
n166 -> n188  [key=1, style=dashed, color=red, label=option];
n166 -> n189  [key=1, style=dashed, color=red, label=option];
n166 -> n191  [key=1, style=dashed, color=red, label=option];
n166 -> n193  [key=1, style=dashed, color=red, label=option];
n166 -> n195  [key=1, style=dashed, color=red, label=option];
n166 -> n197  [key=1, style=dashed, color=red, label=option];
n166 -> n201  [key=1, style=dashed, color=red, label=option];
n166 -> n203  [key=1, style=dashed, color=red, label=option];
n173 -> n174  [key=0, style=solid, color=red];
n173 -> n175  [key=0, style=solid, color=red];
n173 -> n109  [key=2, style=dotted, color=red];
n177 -> n178  [key=0, style=solid, color=red];
n177 -> n208  [key=2, style=dotted, color=red];
n177 -> n180  [key=1, style=dashed, color=red, label=valueSetting];
n182 -> n183  [key=0, style=solid, color=red];
n182 -> n114  [key=2, style=dotted, color=red];
n182 -> n184  [key=1, style=dashed, color=red, label=items];
n184 -> n185  [key=0, style=solid, color=red];
n184 -> n210  [key=2, style=dotted, color=red];
n184 -> n187  [key=1, style=dashed, color=red, label=valueSetting];
n189 -> n190  [key=0, style=solid, color=red];
n189 -> n208  [key=2, style=dotted, color=red];
n189 -> n192  [key=1, style=dashed, color=red, label=valueSetting];
n194 -> n195  [key=0, style=solid, color=red];
n194 -> n114  [key=2, style=dotted, color=red];
n195 -> n196  [key=0, style=solid, color=red];
n195 -> n210  [key=2, style=dotted, color=red];
n195 -> n198  [key=1, style=dashed, color=red, label=valueSetting];
n201 -> n202  [key=0, style=solid, color=red];
n201 -> n211  [key=2, style=dotted, color=red];
n201 -> n204  [key=1, style=dashed, color=red, label=valueSetting];
n175 -> n176  [key=0, style=solid, color=red];
n175 -> n188  [key=0, style=solid, color=red];
n183 -> n184  [key=0, style=solid, color=red];
n183 -> n209  [key=2, style=dotted, color=red];
n199 -> n200  [key=0, style=solid, color=red];
n199 -> n201  [key=0, style=solid, color=red];
n167 -> n168  [key=0, style=solid, color=red];
n167 -> n208  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
n167 -> n210  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
n167 -> n211  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
n168 -> n169  [key=0, style=solid, color=red];
n168 -> n170  [key=0, style=solid, color=red];
n170 -> n171  [key=0, style=solid, color=red];
n171 -> n172  [key=0, style=solid, color=red];
n171 -> n148  [key=2, style=dotted, color=red];
n172 -> n173  [key=0, style=solid, color=red];
n172 -> n199  [key=0, style=solid, color=red];
n176 -> n177  [key=0, style=solid, color=red];
n176 -> n181  [key=0, style=solid, color=red];
n179 -> n180  [key=0, style=solid, color=red];
n179 -> n92  [key=2, style=dotted, color=red];
n181 -> n182  [key=0, style=solid, color=red];
n181 -> n144  [key=2, style=dotted, color=red];
n186 -> n187  [key=0, style=solid, color=red];
n186 -> n92  [key=2, style=dotted, color=red];
n188 -> n189  [key=0, style=solid, color=red];
n188 -> n193  [key=0, style=solid, color=red];
n191 -> n192  [key=0, style=solid, color=red];
n191 -> n92  [key=2, style=dotted, color=red];
n193 -> n194  [key=0, style=solid, color=red];
n193 -> n144  [key=2, style=dotted, color=red];
n197 -> n198  [key=0, style=solid, color=red];
n197 -> n92  [key=2, style=dotted, color=red];
n203 -> n204  [key=0, style=solid, color=red];
n203 -> n92  [key=2, style=dotted, color=red];
n169 -> n205  [key=0, style=solid, color=red];
n174 -> n205  [key=0, style=solid, color=red];
n178 -> n179  [key=0, style=solid, color=red];
n178 -> n180  [key=0, style=solid, color=red];
n208 -> n317  [key=0, style=solid, color=red];
n208 -> n318  [key=1, style=dashed, color=red, label=string];
n208 -> n320  [key=1, style=dashed, color=red, label=string];
n208 -> n321  [key=1, style=dashed, color=red, label=string];
n208 -> n164  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n208 -> n245  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n208 -> n158  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n208 -> n323  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n208 -> n325  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n208 -> n326  [key=3, color=darkorchid, style=bold, label="method methodReturn bool SetValue"];
n208 -> d322  [key=0, style=solid, color=green];
n208 -> d323  [key=1, style=dashed, color=green, label=string];
n208 -> d325  [key=1, style=dashed, color=green, label=string];
n208 -> d326  [key=1, style=dashed, color=green, label=string];
n180 -> n205  [key=0, style=solid, color=red];
n180 -> n134  [key=2, style=dotted, color=red];
n185 -> n186  [key=0, style=solid, color=red];
n185 -> n187  [key=0, style=solid, color=red];
n210 -> n327  [key=0, style=solid, color=red];
n210 -> n328  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<string>"];
n210 -> n332  [key=1, style=dashed, color=red, label="System.Collections.Generic.IList<string>"];
n210 -> n333  [key=1, style=dashed, color=red, label=object];
n210 -> n182  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> n194  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> n264  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> n278  [key=3, color=red, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> n164  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n210 -> n245  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n210 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool SetValue"];
n210 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool SetValue"];
n210 -> d187  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> d199  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> d269  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> d283  [key=3, color=green, style=bold, label="Parameter variable System.Collections.Generic.IList<string> values"];
n210 -> d332  [key=0, style=solid, color=green];
n210 -> d333  [key=1, style=dashed, color=green, label="System.Collections.Generic.IList<string>"];
n210 -> d337  [key=1, style=dashed, color=green, label="System.Collections.Generic.IList<string>"];
n210 -> d338  [key=1, style=dashed, color=green, label=object];
n187 -> n205  [key=0, style=solid, color=red];
n187 -> n134  [key=2, style=dotted, color=red];
n190 -> n191  [key=0, style=solid, color=red];
n190 -> n192  [key=0, style=solid, color=red];
n192 -> n205  [key=0, style=solid, color=red];
n192 -> n137  [key=2, style=dotted, color=red];
n196 -> n197  [key=0, style=solid, color=red];
n196 -> n198  [key=0, style=solid, color=red];
n198 -> n205  [key=0, style=solid, color=red];
n198 -> n134  [key=2, style=dotted, color=red];
n200 -> n205  [key=0, style=solid, color=red];
n202 -> n203  [key=0, style=solid, color=red];
n202 -> n204  [key=0, style=solid, color=red];
n211 -> n366  [key=0, style=solid, color=red];
n211 -> n367  [key=1, style=dashed, color=red, label=bool];
n211 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool SetValue"];
n211 -> n164  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n211 -> n245  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n211 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool SetValue"];
n211 -> d373  [key=0, style=solid, color=green];
n211 -> d374  [key=1, style=dashed, color=green, label=bool];
n204 -> n205  [key=0, style=solid, color=red];
n204 -> n134  [key=2, style=dotted, color=red];
n205 -> n164  [key=0, style=bold, color=blue];
n212 -> n213  [key=0, style=solid, color=red];
n212 -> n214  [key=1, style=dashed, color=red, label=string];
n212 -> d218  [key=0, style=solid, color=green];
n212 -> d219  [key=1, style=dashed, color=green, label=string];
n213 -> n214  [key=0, style=solid, color=red];
n213 -> n217  [key=2, style=dotted, color=red];
n214 -> n215  [key=0, style=solid, color=red];
n217 -> n632  [key=0, style=solid, color=red];
n217 -> n633  [key=1, style=dashed, color=red, label=string];
n217 -> n212  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n217 -> n213  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
n217 -> d218  [key=3, color=green, style=bold, label="Parameter variable string paramName"];
n217 -> d639  [key=0, style=solid, color=green];
n217 -> d640  [key=1, style=dashed, color=green, label=string];
n215 -> n216  [key=0, style=solid, color=red];
n216 -> n212  [key=0, style=bold, color=blue];
n218 -> n219  [key=0, style=solid, color=red];
n218 -> d224  [key=0, style=solid, color=green];
n219 -> n220  [key=0, style=solid, color=red];
n220 -> n218  [key=0, style=bold, color=blue];
n221 -> n222  [key=0, style=solid, color=red];
n221 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool MoveNext"];
n221 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool MoveNext"];
n221 -> d227  [key=0, style=solid, color=green];
n222 -> n223  [key=0, style=solid, color=red];
n222 -> n226  [key=0, style=solid, color=red];
n223 -> n224  [key=0, style=solid, color=red];
n226 -> n227  [key=0, style=solid, color=red];
n224 -> n225  [key=0, style=solid, color=red];
n224 -> n229  [key=2, style=dotted, color=red];
n225 -> n228  [key=0, style=solid, color=red];
n227 -> n228  [key=0, style=solid, color=red];
n228 -> n221  [key=0, style=bold, color=blue];
n230 -> n231  [key=0, style=solid, color=red];
n230 -> d236  [key=0, style=solid, color=green];
n231 -> n232  [key=0, style=solid, color=red];
n231 -> n233  [key=0, style=solid, color=red];
n232 -> n236  [key=0, style=solid, color=red];
n232 -> n34  [key=2, style=dotted, color=red];
n233 -> n234  [key=0, style=solid, color=red];
n233 -> n235  [key=0, style=solid, color=red];
n234 -> n236  [key=0, style=solid, color=red];
n234 -> n34  [key=2, style=dotted, color=red];
n235 -> n236  [key=0, style=solid, color=red];
n235 -> n206  [key=2, style=dotted, color=red];
n236 -> n230  [key=0, style=bold, color=blue];
n237 -> n238  [key=0, style=solid, color=red];
n237 -> d243  [key=0, style=solid, color=green];
n238 -> n239  [key=0, style=solid, color=red];
n238 -> n240  [key=2, style=dotted, color=red];
n239 -> n237  [key=0, style=bold, color=blue];
n241 -> n242  [key=0, style=solid];
n242 -> n241  [key=0, style=bold, color=blue];
n243 -> n244  [key=0, style=solid, color=red];
n244 -> n108  [key=0, style=bold, color=blue];
n245 -> n246  [key=0, style=solid, color=red];
n245 -> n248  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n245 -> n254  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n245 -> n259  [key=1, style=dashed, color=red, label=object];
n245 -> n264  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n245 -> n266  [key=1, style=dashed, color=red, label=object];
n245 -> n270  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n245 -> n273  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n245 -> n278  [key=1, style=dashed, color=red, label="CommandLine.IArgumentEnumerator"];
n245 -> n279  [key=1, style=dashed, color=red, label=object];
n245 -> n283  [key=1, style=dashed, color=red, label="CommandLine.OptionMap"];
n245 -> n285  [key=1, style=dashed, color=red, label=object];
n245 -> n90  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n245 -> n142  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n245 -> n134  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n245 -> n137  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n245 -> n139  [key=3, color=red, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n245 -> d144  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n245 -> d147  [key=3, color=green, style=bold, label="method methodReturn CommandLine.ParserState Parse"];
n245 -> d251  [key=0, style=solid, color=green];
n245 -> d253  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n245 -> d259  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n245 -> d264  [key=1, style=dashed, color=green, label=object];
n245 -> d269  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n245 -> d271  [key=1, style=dashed, color=green, label=object];
n245 -> d275  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n245 -> d278  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n245 -> d283  [key=1, style=dashed, color=green, label="CommandLine.IArgumentEnumerator"];
n245 -> d284  [key=1, style=dashed, color=green, label=object];
n245 -> d288  [key=1, style=dashed, color=green, label="CommandLine.OptionMap"];
n245 -> d290  [key=1, style=dashed, color=green, label=object];
n246 -> n247  [key=0, style=solid, color=red];
n246 -> n212  [key=2, style=dotted, color=red];
n246 -> n206  [key=2, style=dotted, color=red];
n246 -> n248  [key=1, style=dashed, color=red, label=group];
n246 -> n254  [key=1, style=dashed, color=red, label=group];
n246 -> n257  [key=1, style=dashed, color=red, label=group];
n246 -> n259  [key=1, style=dashed, color=red, label=group];
n246 -> n265  [key=1, style=dashed, color=red, label=group];
n246 -> n283  [key=1, style=dashed, color=red, label=group];
n248 -> n249  [key=0, style=solid, color=red];
n248 -> n251  [key=1, style=dashed, color=red, label=option];
n248 -> n252  [key=1, style=dashed, color=red, label=option];
n248 -> n253  [key=1, style=dashed, color=red, label=option];
n248 -> n258  [key=1, style=dashed, color=red, label=option];
n248 -> n259  [key=1, style=dashed, color=red, label=option];
n248 -> n261  [key=1, style=dashed, color=red, label=option];
n248 -> n263  [key=1, style=dashed, color=red, label=option];
n248 -> n266  [key=1, style=dashed, color=red, label=option];
n248 -> n268  [key=1, style=dashed, color=red, label=option];
n248 -> n272  [key=1, style=dashed, color=red, label=option];
n248 -> n273  [key=1, style=dashed, color=red, label=option];
n248 -> n275  [key=1, style=dashed, color=red, label=option];
n248 -> n277  [key=1, style=dashed, color=red, label=option];
n248 -> n279  [key=1, style=dashed, color=red, label=option];
n248 -> n281  [key=1, style=dashed, color=red, label=option];
n248 -> n285  [key=1, style=dashed, color=red, label=option];
n254 -> n255  [key=0, style=solid, color=red];
n254 -> n256  [key=0, style=solid, color=red];
n259 -> n260  [key=0, style=solid, color=red];
n259 -> n158  [key=2, style=dotted, color=red];
n259 -> n208  [key=2, style=dotted, color=red];
n259 -> n262  [key=1, style=dashed, color=red, label=valueSetting];
n264 -> n265  [key=0, style=solid, color=red];
n264 -> n114  [key=2, style=dotted, color=red];
n264 -> n266  [key=1, style=dashed, color=red, label=items];
n266 -> n267  [key=0, style=solid, color=red];
n266 -> n210  [key=2, style=dotted, color=red];
n266 -> n269  [key=1, style=dashed, color=red, label=valueSetting];
n270 -> n271  [key=0, style=solid, color=red];
n270 -> n272  [key=0, style=solid, color=red];
n270 -> n109  [key=2, style=dotted, color=red];
n273 -> n274  [key=0, style=solid, color=red];
n273 -> n208  [key=2, style=dotted, color=red];
n273 -> n276  [key=1, style=dashed, color=red, label=valueSetting];
n278 -> n279  [key=0, style=solid, color=red];
n278 -> n114  [key=2, style=dotted, color=red];
n279 -> n280  [key=0, style=solid, color=red];
n279 -> n210  [key=2, style=dotted, color=red];
n279 -> n282  [key=1, style=dashed, color=red, label=valueSetting];
n283 -> n284  [key=0, style=solid, color=red];
n283 -> n285  [key=0, style=solid, color=red];
n285 -> n286  [key=0, style=solid, color=red];
n285 -> n247  [key=0, style=solid, color=red];
n285 -> n211  [key=2, style=dotted, color=red];
n247 -> n248  [key=0, style=solid, color=red];
n247 -> n287  [key=0, style=solid, color=red];
n247 -> n123  [key=2, style=dotted, color=red];
n257 -> n258  [key=0, style=solid, color=red];
n257 -> n270  [key=0, style=solid, color=red];
n265 -> n266  [key=0, style=solid, color=red];
n265 -> n158  [key=2, style=dotted, color=red];
n265 -> n209  [key=2, style=dotted, color=red];
n287 -> n288  [key=0, style=solid, color=red];
n249 -> n250  [key=0, style=solid, color=red];
n249 -> n251  [key=0, style=solid, color=red];
n251 -> n252  [key=0, style=solid, color=red];
n252 -> n253  [key=0, style=solid, color=red];
n252 -> n148  [key=2, style=dotted, color=red];
n253 -> n254  [key=0, style=solid, color=red];
n253 -> n283  [key=0, style=solid, color=red];
n258 -> n259  [key=0, style=solid, color=red];
n258 -> n263  [key=0, style=solid, color=red];
n261 -> n262  [key=0, style=solid, color=red];
n261 -> n92  [key=2, style=dotted, color=red];
n263 -> n264  [key=0, style=solid, color=red];
n263 -> n144  [key=2, style=dotted, color=red];
n268 -> n269  [key=0, style=solid, color=red];
n268 -> n92  [key=2, style=dotted, color=red];
n272 -> n273  [key=0, style=solid, color=red];
n272 -> n277  [key=0, style=solid, color=red];
n275 -> n276  [key=0, style=solid, color=red];
n275 -> n92  [key=2, style=dotted, color=red];
n277 -> n278  [key=0, style=solid, color=red];
n277 -> n144  [key=2, style=dotted, color=red];
n281 -> n282  [key=0, style=solid, color=red];
n281 -> n92  [key=2, style=dotted, color=red];
n250 -> n288  [key=0, style=solid, color=red];
n255 -> n288  [key=0, style=solid, color=red];
n256 -> n257  [key=0, style=solid, color=red];
n256 -> n208  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
n256 -> n210  [key=3, color=red, style=bold, label="Local variable bool valueSetting"];
n260 -> n261  [key=0, style=solid, color=red];
n260 -> n262  [key=0, style=solid, color=red];
n262 -> n288  [key=0, style=solid, color=red];
n262 -> n134  [key=2, style=dotted, color=red];
n267 -> n268  [key=0, style=solid, color=red];
n267 -> n269  [key=0, style=solid, color=red];
n269 -> n288  [key=0, style=solid, color=red];
n269 -> n137  [key=2, style=dotted, color=red];
n271 -> n288  [key=0, style=solid, color=red];
n274 -> n275  [key=0, style=solid, color=red];
n274 -> n276  [key=0, style=solid, color=red];
n276 -> n288  [key=0, style=solid, color=red];
n276 -> n137  [key=2, style=dotted, color=red];
n280 -> n281  [key=0, style=solid, color=red];
n280 -> n282  [key=0, style=solid, color=red];
n282 -> n288  [key=0, style=solid, color=red];
n282 -> n134  [key=2, style=dotted, color=red];
n284 -> n288  [key=0, style=solid, color=red];
n286 -> n288  [key=0, style=solid, color=red];
n288 -> n245  [key=0, style=bold, color=blue];
n289 -> n290  [key=0, style=solid, color=red];
n289 -> n291  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n292  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n293  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n294  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n295  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n296  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n297  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n298  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
n289 -> n300  [key=1, style=dashed, color=red, label="System.Reflection.PropertyInfo"];
n289 -> n301  [key=1, style=dashed, color=red, label="System.Reflection.PropertyInfo"];
n289 -> d295  [key=0, style=solid, color=green];
n289 -> d296  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d297  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d298  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d299  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d300  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d301  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d302  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d303  [key=1, style=dashed, color=green, label="CommandLine.OptionAttribute"];
n289 -> d305  [key=1, style=dashed, color=green, label="System.Reflection.PropertyInfo"];
n289 -> d306  [key=1, style=dashed, color=green, label="System.Reflection.PropertyInfo"];
n290 -> n291  [key=0, style=solid, color=red];
n290 -> n299  [key=0, style=solid, color=red];
n291 -> n292  [key=0, style=solid, color=red];
n292 -> n293  [key=0, style=solid, color=red];
n293 -> n294  [key=0, style=solid, color=red];
n294 -> n295  [key=0, style=solid, color=red];
n295 -> n296  [key=0, style=solid, color=red];
n296 -> n297  [key=0, style=solid, color=red];
n297 -> n298  [key=0, style=solid, color=red];
n298 -> n300  [key=0, style=solid, color=red];
n300 -> n301  [key=0, style=solid, color=red];
n300 -> n302  [key=0, style=solid, color=red];
n301 -> n303  [key=0, style=solid, color=red];
n299 -> n303  [key=0, style=solid, color=red];
n299 -> n304  [key=2, style=dotted, color=red];
n302 -> n303  [key=0, style=solid, color=red];
n302 -> n304  [key=2, style=dotted, color=red];
n303 -> n289  [key=0, style=bold, color=blue];
n305 -> n306  [key=0, style=solid, color=red];
n305 -> n308  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n305 -> n312  [key=1, style=dashed, color=red, label=object];
n305 -> n58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.OptionMap CreateMap"];
n305 -> n587  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n305 -> d58  [key=3, color=green, style=bold, label="method methodReturn CommandLine.OptionMap CreateMap"];
n305 -> d311  [key=0, style=solid, color=green];
n305 -> d313  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n305 -> d317  [key=1, style=dashed, color=green, label=object];
n306 -> n307  [key=0, style=solid, color=red];
n306 -> n75  [key=2, style=dotted, color=red];
n306 -> n308  [key=1, style=dashed, color=red, label=list];
n306 -> n309  [key=1, style=dashed, color=red, label=list];
n308 -> n309  [key=0, style=solid, color=red];
n308 -> n316  [key=2, style=dotted, color=red];
n308 -> n311  [key=1, style=dashed, color=red, label=map];
n308 -> n312  [key=1, style=dashed, color=red, label=map];
n308 -> n313  [key=1, style=dashed, color=red, label=map];
n312 -> n313  [key=0, style=solid, color=red];
n307 -> n308  [key=0, style=solid, color=red];
n307 -> n314  [key=0, style=solid, color=red];
n309 -> n310  [key=0, style=solid, color=red];
n309 -> n312  [key=0, style=solid, color=red];
n309 -> n311  [key=1, style=dashed, color=red, label=pair];
n314 -> n315  [key=0, style=solid, color=red];
n316 -> n395  [key=0, style=solid, color=red];
n316 -> n400  [key=1, style=dashed, color=red, label=int];
n316 -> n401  [key=1, style=dashed, color=red, label=int];
n316 -> n403  [key=1, style=dashed, color=red, label=int];
n316 -> d402  [key=0, style=solid, color=green];
n316 -> d407  [key=1, style=dashed, color=green, label=int];
n316 -> d408  [key=1, style=dashed, color=green, label=int];
n316 -> d410  [key=1, style=dashed, color=green, label=int];
n311 -> n309  [key=0, style=solid, color=red];
n311 -> n289  [key=2, style=dotted, color=red];
n313 -> n315  [key=0, style=solid, color=red];
n310 -> n311  [key=0, style=solid, color=red];
n310 -> n309  [key=0, style=solid, color=red];
n315 -> n305  [key=0, style=bold, color=blue];
n317 -> n318  [key=0, style=solid, color=red];
n317 -> n319  [key=0, style=solid, color=red];
n318 -> n322  [key=0, style=solid, color=red];
n318 -> n323  [key=2, style=dotted, color=red];
n320 -> n322  [key=0, style=solid, color=red];
n320 -> n325  [key=2, style=dotted, color=red];
n321 -> n322  [key=0, style=solid, color=red];
n321 -> n326  [key=2, style=dotted, color=red];
n319 -> n320  [key=0, style=solid, color=red];
n319 -> n321  [key=0, style=solid, color=red];
n319 -> n324  [key=2, style=dotted, color=red];
n324 -> n697  [key=0, style=solid, color=red];
n324 -> d704  [key=0, style=solid, color=green];
n322 -> n208  [key=0, style=bold, color=blue];
n325 -> n357  [key=0, style=solid, color=red];
n325 -> n359  [key=1, style=dashed, color=red, label=string];
n325 -> n208  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n325 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool SetNullableValue"];
n325 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool SetNullableValue"];
n325 -> d364  [key=0, style=solid, color=green];
n325 -> d366  [key=1, style=dashed, color=green, label=string];
n326 -> n343  [key=0, style=solid, color=red];
n326 -> n345  [key=1, style=dashed, color=red, label=string];
n326 -> n347  [key=1, style=dashed, color=red, label=string];
n326 -> n208  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n326 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool SetValueScalar"];
n326 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool SetValueScalar"];
n326 -> d348  [key=0, style=solid, color=green];
n326 -> d350  [key=1, style=dashed, color=green, label=string];
n326 -> d352  [key=1, style=dashed, color=green, label=string];
n323 -> n370  [key=0, style=solid, color=red];
n323 -> n371  [key=1, style=dashed, color=red, label=object];
n323 -> n372  [key=1, style=dashed, color=red, label=object];
n323 -> n373  [key=1, style=dashed, color=red, label=string];
n323 -> n208  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n323 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool SetValueList"];
n323 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool SetValueList"];
n323 -> d377  [key=0, style=solid, color=green];
n323 -> d378  [key=1, style=dashed, color=green, label=object];
n323 -> d379  [key=1, style=dashed, color=green, label=object];
n323 -> d380  [key=1, style=dashed, color=green, label=string];
n327 -> n328  [key=0, style=solid, color=red];
n327 -> n339  [key=2, style=dotted, color=red];
n327 -> n332  [key=1, style=dashed, color=red, label=elementType];
n328 -> n329  [key=0, style=solid, color=red];
n328 -> n340  [key=2, style=dotted, color=red];
n328 -> n330  [key=1, style=dashed, color=red, label=array];
n328 -> n332  [key=1, style=dashed, color=red, label=array];
n328 -> n333  [key=1, style=dashed, color=red, label=array];
n332 -> n333  [key=0, style=solid, color=red];
n332 -> n341  [key=2, style=dotted, color=red];
n332 -> n342  [key=2, style=dotted, color=red];
n333 -> n334  [key=0, style=solid, color=red];
n333 -> n336  [key=0, style=solid, color=red];
n333 -> n64  [key=2, style=dotted, color=red];
n329 -> n330  [key=0, style=solid, color=red];
n329 -> n332  [key=1, style=dashed, color=red, label=i];
n329 -> n336  [key=1, style=dashed, color=red, label=i];
n329 -> n329  [key=3, color=red, style=bold, label="Local variable int i"];
n330 -> n331  [key=0, style=solid, color=red];
n330 -> n337  [key=0, style=solid, color=red];
n336 -> n330  [key=0, style=solid, color=red];
n336 -> n336  [key=1, style=dashed, color=red, label=i];
n331 -> n332  [key=0, style=solid, color=red];
n337 -> n338  [key=0, style=solid, color=red];
n334 -> n335  [key=0, style=solid, color=red];
n335 -> n338  [key=0, style=solid, color=red];
n338 -> n210  [key=0, style=bold, color=blue];
n343 -> n344  [key=0, style=solid, color=red];
n343 -> n346  [key=0, style=solid, color=red];
n345 -> n348  [key=0, style=solid, color=red];
n345 -> n350  [key=0, style=solid, color=red];
n345 -> n352  [key=0, style=solid, color=red];
n345 -> n354  [key=0, style=solid, color=red];
n345 -> n356  [key=2, style=dotted, color=red];
n345 -> n64  [key=2, style=dotted, color=red];
n347 -> n348  [key=0, style=solid, color=red];
n347 -> n350  [key=0, style=solid, color=red];
n347 -> n352  [key=0, style=solid, color=red];
n347 -> n354  [key=0, style=solid, color=red];
n347 -> n341  [key=2, style=dotted, color=red];
n347 -> n64  [key=2, style=dotted, color=red];
n344 -> n345  [key=0, style=solid, color=red];
n346 -> n347  [key=0, style=solid, color=red];
n348 -> n349  [key=0, style=solid, color=red];
n350 -> n351  [key=0, style=solid, color=red];
n352 -> n353  [key=0, style=solid, color=red];
n354 -> n355  [key=0, style=solid, color=red];
n349 -> n355  [key=0, style=solid, color=red];
n351 -> n355  [key=0, style=solid, color=red];
n353 -> n355  [key=0, style=solid, color=red];
n355 -> n326  [key=0, style=bold, color=blue];
n357 -> n358  [key=0, style=solid, color=red];
n357 -> n364  [key=2, style=dotted, color=red];
n357 -> n359  [key=1, style=dashed, color=red, label=nc];
n359 -> n360  [key=0, style=solid, color=red];
n359 -> n362  [key=0, style=solid, color=red];
n359 -> n365  [key=2, style=dotted, color=red];
n359 -> n64  [key=2, style=dotted, color=red];
n358 -> n359  [key=0, style=solid, color=red];
n360 -> n361  [key=0, style=solid, color=red];
n362 -> n363  [key=0, style=solid, color=red];
n361 -> n363  [key=0, style=solid, color=red];
n363 -> n325  [key=0, style=bold, color=blue];
n366 -> n367  [key=0, style=solid, color=red];
n367 -> n368  [key=0, style=solid, color=red];
n367 -> n64  [key=2, style=dotted, color=red];
n368 -> n369  [key=0, style=solid, color=red];
n369 -> n211  [key=0, style=bold, color=blue];
n370 -> n371  [key=0, style=solid, color=red];
n371 -> n372  [key=0, style=solid, color=red];
n371 -> n89  [key=2, style=dotted, color=red];
n371 -> n64  [key=2, style=dotted, color=red];
n372 -> n373  [key=0, style=solid, color=red];
n372 -> n65  [key=2, style=dotted, color=red];
n372 -> n376  [key=1, style=dashed, color=red, label=fieldRef];
n373 -> n374  [key=0, style=solid, color=red];
n373 -> n380  [key=2, style=dotted, color=red];
n373 -> n375  [key=1, style=dashed, color=red, label=values];
n373 -> n376  [key=1, style=dashed, color=red, label=values];
n376 -> n377  [key=0, style=solid, color=red];
n376 -> n124  [key=2, style=dotted, color=red];
n374 -> n375  [key=0, style=solid, color=red];
n374 -> n376  [key=1, style=dashed, color=red, label=i];
n374 -> n377  [key=1, style=dashed, color=red, label=i];
n374 -> n329  [key=3, color=red, style=bold, label="Local variable int i"];
n375 -> n376  [key=0, style=solid, color=red];
n375 -> n378  [key=0, style=solid, color=red];
n377 -> n375  [key=0, style=solid, color=red];
n377 -> n377  [key=1, style=dashed, color=red, label=i];
n378 -> n379  [key=0, style=solid, color=red];
n379 -> n323  [key=0, style=bold, color=blue];
n381 -> n382  [key=0, style=solid, color=red];
n381 -> n384  [key=1, style=dashed, color=red, label=object];
n381 -> d389  [key=0, style=solid, color=green];
n381 -> d391  [key=1, style=dashed, color=green, label=object];
n382 -> n383  [key=0, style=solid, color=red];
n382 -> n387  [key=0, style=solid, color=red];
n384 -> n385  [key=0, style=solid, color=red];
n384 -> n387  [key=0, style=solid, color=red];
n384 -> n64  [key=2, style=dotted, color=red];
n383 -> n384  [key=0, style=solid, color=red];
n387 -> n381  [key=0, style=bold, color=blue];
n385 -> n386  [key=0, style=solid, color=red];
n386 -> n387  [key=0, style=solid, color=red];
n386 -> n388  [key=2, style=dotted, color=red];
n388 -> n529  [key=0, style=solid];
n389 -> n390  [key=0, style=solid, color=red];
n389 -> d397  [key=0, style=solid, color=green];
n390 -> n391  [key=0, style=solid, color=red];
n391 -> n389  [key=0, style=bold, color=blue];
n392 -> n393  [key=0, style=solid, color=red];
n392 -> d400  [key=0, style=solid, color=green];
n393 -> n394  [key=0, style=solid, color=red];
n394 -> n392  [key=0, style=bold, color=blue];
n395 -> n396  [key=0, style=solid, color=red];
n400 -> n401  [key=0, style=solid, color=red];
n400 -> n405  [key=2, style=dotted, color=red];
n401 -> n402  [key=0, style=solid, color=red];
n401 -> n405  [key=2, style=dotted, color=red];
n403 -> n404  [key=0, style=solid, color=red];
n403 -> n405  [key=2, style=dotted, color=red];
n396 -> n397  [key=0, style=solid, color=red];
n397 -> n398  [key=0, style=solid, color=red];
n397 -> n399  [key=0, style=solid, color=red];
n398 -> n400  [key=0, style=solid, color=red];
n398 -> n401  [key=1, style=dashed, color=red, label=comparer];
n399 -> n400  [key=0, style=solid, color=red];
n399 -> n401  [key=1, style=dashed, color=red, label=comparer];
n402 -> n403  [key=0, style=solid, color=red];
n402 -> n404  [key=0, style=solid, color=red];
n404 -> n316  [key=0, style=bold, color=blue];
n406 -> n407  [key=0, style=solid, color=red];
n406 -> d414  [key=0, style=solid, color=green];
n407 -> n408  [key=0, style=solid, color=red];
n407 -> n409  [key=2, style=dotted, color=red];
n407 -> n410  [key=2, style=dotted, color=red];
n408 -> n406  [key=0, style=bold, color=blue];
n409 -> n423  [key=0, style=solid, color=red];
n409 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool EnforceMutuallyExclusiveMap"];
n409 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool EnforceMutuallyExclusiveMap"];
n409 -> d430  [key=0, style=solid, color=green];
n410 -> n415  [key=0, style=solid, color=red];
n410 -> d422  [key=0, style=solid, color=green];
n411 -> n412  [key=0, style=solid, color=red];
n411 -> d419  [key=0, style=solid, color=green];
n412 -> n413  [key=0, style=solid, color=red];
n412 -> n414  [key=0, style=solid, color=red];
n413 -> n412  [key=0, style=solid, color=red];
n413 -> n381  [key=2, style=dotted, color=red];
n414 -> n411  [key=0, style=bold, color=blue];
n415 -> n416  [key=0, style=solid, color=red];
n415 -> n420  [key=1, style=dashed, color=red, label=requiredRulesAllMet];
n415 -> n112  [key=3, color=red, style=bold, label="Local variable bool requiredRulesAllMet"];
n416 -> n417  [key=0, style=solid, color=red];
n416 -> n420  [key=0, style=solid, color=red];
n416 -> n418  [key=1, style=dashed, color=red, label=option];
n420 -> n421  [key=0, style=solid, color=red];
n417 -> n418  [key=0, style=solid, color=red];
n417 -> n416  [key=0, style=solid, color=red];
n418 -> n419  [key=0, style=solid, color=red];
n418 -> n422  [key=2, style=dotted, color=red];
n419 -> n416  [key=0, style=solid, color=red];
n419 -> n420  [key=1, style=dashed, color=red, label=requiredRulesAllMet];
n422 -> n442  [key=0, style=solid, color=red];
n422 -> n445  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n422 -> n446  [key=1, style=dashed, color=red, label="bool?"];
n422 -> n447  [key=1, style=dashed, color=red, label="bool?"];
n422 -> n448  [key=1, style=dashed, color=red, label="bool?"];
n422 -> n449  [key=1, style=dashed, color=red, label="bool?"];
n422 -> n416  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n422 -> n112  [key=3, color=red, style=bold, label="Parameter variable bool? mutualExclusiveness"];
n422 -> n58  [key=3, color=red, style=bold, label="Parameter variable bool? mutualExclusiveness"];
n422 -> d58  [key=3, color=green, style=bold, label="Parameter variable bool? mutualExclusiveness"];
n422 -> d114  [key=3, color=green, style=bold, label="Parameter variable bool? mutualExclusiveness"];
n422 -> d423  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n422 -> d449  [key=0, style=solid, color=green];
n422 -> d452  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n422 -> d453  [key=1, style=dashed, color=green, label="bool?"];
n422 -> d454  [key=1, style=dashed, color=green, label="bool?"];
n422 -> d455  [key=1, style=dashed, color=green, label="bool?"];
n422 -> d456  [key=1, style=dashed, color=green, label="bool?"];
n421 -> n410  [key=0, style=bold, color=blue];
n423 -> n424  [key=0, style=solid, color=red];
n423 -> n425  [key=0, style=solid, color=red];
n424 -> n433  [key=0, style=solid, color=red];
n425 -> n426  [key=0, style=solid, color=red];
n425 -> n428  [key=0, style=solid, color=red];
n425 -> n427  [key=1, style=dashed, color=red, label=option];
n426 -> n427  [key=0, style=solid, color=red];
n426 -> n425  [key=0, style=solid, color=red];
n428 -> n429  [key=0, style=solid, color=red];
n428 -> n432  [key=0, style=solid, color=red];
n428 -> n430  [key=1, style=dashed, color=red, label=info];
n427 -> n425  [key=0, style=solid, color=red];
n427 -> n434  [key=2, style=dotted, color=red];
n434 -> n435  [key=0, style=solid, color=red];
n434 -> n437  [key=1, style=dashed, color=red, label="CommandLine.OptionInfo"];
n434 -> n425  [key=3, color=red, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n434 -> d432  [key=3, color=green, style=bold, label="Parameter variable CommandLine.OptionInfo option"];
n434 -> d442  [key=0, style=solid, color=green];
n434 -> d444  [key=1, style=dashed, color=green, label="CommandLine.OptionInfo"];
n429 -> n430  [key=0, style=solid, color=red];
n429 -> n428  [key=0, style=solid, color=red];
n432 -> n433  [key=0, style=solid, color=red];
n430 -> n431  [key=0, style=solid, color=red];
n430 -> n422  [key=2, style=dotted, color=red];
n431 -> n433  [key=0, style=solid, color=red];
n433 -> n409  [key=0, style=bold, color=blue];
n435 -> n436  [key=0, style=solid, color=red];
n435 -> n437  [key=1, style=dashed, color=red, label=setName];
n435 -> n438  [key=1, style=dashed, color=red, label=setName];
n437 -> n438  [key=0, style=solid, color=red];
n437 -> n389  [key=2, style=dotted, color=red];
n437 -> n441  [key=2, style=dotted, color=red];
n436 -> n437  [key=0, style=solid, color=red];
n436 -> n438  [key=0, style=solid, color=red];
n436 -> n440  [key=2, style=dotted, color=red];
n438 -> n439  [key=0, style=solid, color=red];
n438 -> n392  [key=2, style=dotted, color=red];
n439 -> n434  [key=0, style=bold, color=blue];
n442 -> n443  [key=0, style=solid, color=red];
n442 -> n450  [key=1, style=dashed, color=red, label=commandLineOptionsBase];
n445 -> n446  [key=0, style=solid, color=red];
n445 -> n452  [key=2, style=dotted, color=red];
n445 -> n447  [key=1, style=dashed, color=red, label=error];
n445 -> n449  [key=1, style=dashed, color=red, label=error];
n445 -> n450  [key=1, style=dashed, color=red, label=error];
n446 -> n447  [key=0, style=solid, color=red];
n446 -> n448  [key=0, style=solid, color=red];
n447 -> n448  [key=0, style=solid, color=red];
n448 -> n449  [key=0, style=solid, color=red];
n448 -> n450  [key=0, style=solid, color=red];
n449 -> n450  [key=0, style=solid, color=red];
n443 -> n444  [key=0, style=solid, color=red];
n443 -> n445  [key=0, style=solid, color=red];
n450 -> n451  [key=0, style=solid, color=red];
n450 -> n96  [key=2, style=dotted, color=red];
n444 -> n451  [key=0, style=solid, color=red];
n452 -> n470  [key=0, style=solid, color=red];
n452 -> d477  [key=0, style=solid, color=green];
n451 -> n422  [key=0, style=bold, color=blue];
n453 -> n454  [key=0, style=solid, color=red];
n453 -> n455  [key=1, style=dashed, color=red, label=TRight];
n453 -> d461  [key=0, style=solid, color=green];
n453 -> d462  [key=1, style=dashed, color=green, label=TRight];
n454 -> n455  [key=0, style=solid, color=red];
n455 -> n456  [key=0, style=solid, color=red];
n456 -> n453  [key=0, style=bold, color=blue];
n457 -> n458  [key=0, style=solid, color=red];
n457 -> d465  [key=0, style=solid, color=green];
n458 -> n459  [key=0, style=solid, color=red];
n458 -> n462  [key=2, style=dotted, color=red];
n458 -> n460  [key=1, style=dashed, color=red, label=leftHash];
n459 -> n460  [key=0, style=solid, color=red];
n459 -> n462  [key=2, style=dotted, color=red];
n460 -> n461  [key=0, style=solid, color=red];
n461 -> n457  [key=0, style=bold, color=blue];
n463 -> n464  [key=0, style=solid, color=red];
n463 -> d471  [key=0, style=solid, color=green];
n464 -> n465  [key=0, style=solid, color=red];
n464 -> n467  [key=1, style=dashed, color=red, label=other];
n465 -> n466  [key=0, style=solid, color=red];
n465 -> n467  [key=0, style=solid, color=red];
n467 -> n468  [key=0, style=solid, color=red];
n467 -> n469  [key=2, style=dotted, color=red];
n466 -> n468  [key=0, style=solid, color=red];
n468 -> n463  [key=0, style=bold, color=blue];
n470 -> n471  [key=0, style=solid, color=red];
n470 -> n152  [key=2, style=dotted, color=red];
n471 -> n452  [key=0, style=bold, color=blue];
n472 -> n473  [key=0, style=solid, color=red];
n472 -> n154  [key=2, style=dotted, color=red];
n473 -> n474  [key=0, style=solid, color=red];
n474 -> n95  [key=0, style=bold, color=blue];
n475 -> n476  [key=0, style=solid, color=red];
n475 -> d483  [key=0, style=solid, color=green];
n476 -> n477  [key=0, style=solid, color=red];
n476 -> n89  [key=2, style=dotted, color=red];
n477 -> n475  [key=0, style=bold, color=blue];
n478 -> n479  [key=0, style=solid, color=red];
n478 -> n480  [key=1, style=dashed, color=red, label="string[]"];
n478 -> n482  [key=1, style=dashed, color=red, label="string[]"];
n478 -> d486  [key=0, style=solid, color=green];
n478 -> d487  [key=1, style=dashed, color=green, label="string[]"];
n478 -> d489  [key=1, style=dashed, color=green, label="string[]"];
n479 -> n480  [key=0, style=solid, color=red];
n479 -> n484  [key=2, style=dotted, color=red];
n480 -> n481  [key=0, style=solid, color=red];
n482 -> n483  [key=0, style=solid, color=red];
n484 -> n629  [key=0, style=solid, color=red];
n484 -> n630  [key=1, style=dashed, color=red, label=string];
n484 -> n478  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
n484 -> n565  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
n484 -> n572  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
n484 -> n213  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
n484 -> n566  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
n484 -> n573  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
n484 -> n574  [key=3, color=red, style=bold, label="Parameter variable string paramName"];
n484 -> d218  [key=3, color=green, style=bold, label="Parameter variable string paramName"];
n484 -> d573  [key=3, color=green, style=bold, label="Parameter variable string paramName"];
n484 -> d580  [key=3, color=green, style=bold, label="Parameter variable string paramName"];
n484 -> d581  [key=3, color=green, style=bold, label="Parameter variable string paramName"];
n484 -> d636  [key=0, style=solid, color=green];
n484 -> d637  [key=1, style=dashed, color=green, label=string];
n481 -> n482  [key=0, style=solid, color=red];
n483 -> n478  [key=0, style=bold, color=blue];
n485 -> n486  [key=0, style=solid, color=red];
n485 -> d493  [key=0, style=solid, color=green];
n486 -> n487  [key=0, style=solid, color=red];
n487 -> n485  [key=0, style=bold, color=blue];
n488 -> n489  [key=0, style=solid, color=red];
n488 -> d496  [key=0, style=solid, color=green];
n489 -> n490  [key=0, style=solid, color=red];
n489 -> n492  [key=0, style=solid, color=red];
n490 -> n491  [key=0, style=solid, color=red];
n492 -> n493  [key=0, style=solid, color=red];
n491 -> n493  [key=0, style=solid, color=red];
n493 -> n488  [key=0, style=bold, color=blue];
n494 -> n495  [key=0, style=solid, color=red];
n494 -> d502  [key=0, style=solid, color=green];
n495 -> n496  [key=0, style=solid, color=red];
n495 -> n240  [key=2, style=dotted, color=red];
n496 -> n494  [key=0, style=bold, color=blue];
n497 -> n498  [key=0, style=solid, color=red];
n497 -> d505  [key=0, style=solid, color=green];
n498 -> n499  [key=0, style=solid, color=red];
n498 -> n500  [key=0, style=solid, color=red];
n499 -> n504  [key=0, style=solid, color=red];
n499 -> n34  [key=2, style=dotted, color=red];
n500 -> n501  [key=0, style=solid, color=red];
n500 -> n503  [key=0, style=solid, color=red];
n501 -> n502  [key=0, style=solid, color=red];
n503 -> n504  [key=0, style=solid, color=red];
n502 -> n504  [key=0, style=solid, color=red];
n504 -> n497  [key=0, style=bold, color=blue];
n505 -> n506  [key=0, style=solid];
n506 -> n505  [key=0, style=bold, color=blue];
n507 -> n508  [key=0, style=solid, color=red];
n507 -> d515  [key=0, style=solid, color=green];
n508 -> n509  [key=0, style=solid, color=red];
n509 -> n510  [key=0, style=solid, color=red];
n509 -> n66  [key=2, style=dotted, color=red];
n510 -> n511  [key=0, style=solid, color=red];
n510 -> n512  [key=0, style=solid, color=red];
n511 -> n512  [key=0, style=solid, color=red];
n511 -> n54  [key=2, style=dotted, color=red];
n512 -> n507  [key=0, style=bold, color=blue];
n513 -> n514  [key=0, style=solid, color=red];
n513 -> n517  [key=1, style=dashed, color=red, label=string];
n513 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool AddValueItemIfAllowed"];
n513 -> n595  [key=3, color=red, style=bold, label="Parameter variable string item"];
n513 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool AddValueItemIfAllowed"];
n513 -> d521  [key=0, style=solid, color=green];
n513 -> d524  [key=1, style=dashed, color=green, label=string];
n513 -> d602  [key=3, color=green, style=bold, label="Parameter variable string item"];
n514 -> n515  [key=0, style=solid, color=red];
n514 -> n516  [key=0, style=solid, color=red];
n517 -> n518  [key=0, style=solid, color=red];
n517 -> n124  [key=2, style=dotted, color=red];
n515 -> n519  [key=0, style=solid, color=red];
n516 -> n517  [key=0, style=solid, color=red];
n518 -> n519  [key=0, style=solid, color=red];
n519 -> n513  [key=0, style=bold, color=blue];
n520 -> n521  [key=0, style=solid];
n520 -> n569  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n521 -> n520  [key=0, style=bold, color=blue];
n522 -> n523  [key=0, style=solid];
n522 -> n572  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n523 -> n522  [key=0, style=bold, color=blue];
n524 -> n525  [key=0, style=solid, color=red];
n524 -> d532  [key=0, style=solid, color=green];
n525 -> n526  [key=0, style=solid, color=red];
n525 -> n475  [key=2, style=dotted, color=red];
n526 -> n524  [key=0, style=bold, color=blue];
n527 -> n126  [key=0, style=bold, color=blue];
n528 -> n53  [key=0, style=bold, color=blue];
n529 -> n388  [key=0, style=bold, color=blue];
n530 -> n531  [key=0, style=solid];
n531 -> n530  [key=0, style=bold, color=blue];
n532 -> n533  [key=0, style=solid];
n533 -> n532  [key=0, style=bold, color=blue];
n534 -> n535  [key=0, style=solid, color=red];
n534 -> d542  [key=0, style=solid, color=green];
n535 -> n536  [key=0, style=solid, color=red];
n536 -> n534  [key=0, style=bold, color=blue];
n537 -> n538  [key=0, style=solid, color=red];
n537 -> d545  [key=0, style=solid, color=green];
n538 -> n539  [key=0, style=solid, color=red];
n539 -> n537  [key=0, style=bold, color=blue];
n540 -> n541  [key=0, style=solid, color=red];
n540 -> n542  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
n540 -> d548  [key=0, style=solid, color=green];
n540 -> d549  [key=1, style=dashed, color=green, label="System.IO.TextWriter"];
n541 -> n542  [key=0, style=solid, color=red];
n542 -> n543  [key=0, style=solid, color=red];
n543 -> n540  [key=0, style=bold, color=blue];
n544 -> n545  [key=0, style=solid, color=red];
n544 -> n546  [key=1, style=dashed, color=red, label=bool];
n544 -> d552  [key=0, style=solid, color=green];
n544 -> d553  [key=1, style=dashed, color=green, label=bool];
n545 -> n546  [key=0, style=solid, color=red];
n546 -> n547  [key=0, style=solid, color=red];
n547 -> n544  [key=0, style=bold, color=blue];
n548 -> n549  [key=0, style=solid, color=red];
n548 -> n550  [key=1, style=dashed, color=red, label=bool];
n548 -> n551  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
n548 -> d556  [key=0, style=solid, color=green];
n548 -> d557  [key=1, style=dashed, color=green, label=bool];
n548 -> d558  [key=1, style=dashed, color=green, label="System.IO.TextWriter"];
n549 -> n550  [key=0, style=solid, color=red];
n550 -> n551  [key=0, style=solid, color=red];
n551 -> n552  [key=0, style=solid, color=red];
n552 -> n548  [key=0, style=bold, color=blue];
n553 -> n554  [key=0, style=solid, color=red];
n553 -> n555  [key=1, style=dashed, color=red, label=bool];
n553 -> n556  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
n553 -> n557  [key=1, style=dashed, color=red, label=bool];
n553 -> d561  [key=0, style=solid, color=green];
n553 -> d562  [key=1, style=dashed, color=green, label=bool];
n553 -> d563  [key=1, style=dashed, color=green, label="System.IO.TextWriter"];
n553 -> d564  [key=1, style=dashed, color=green, label=bool];
n554 -> n555  [key=0, style=solid, color=red];
n555 -> n556  [key=0, style=solid, color=red];
n556 -> n557  [key=0, style=solid, color=red];
n557 -> n558  [key=0, style=solid, color=red];
n558 -> n553  [key=0, style=bold, color=blue];
n559 -> n560  [key=0, style=solid, color=red];
n559 -> d567  [key=0, style=solid, color=green];
n560 -> n561  [key=0, style=solid, color=red];
n560 -> n548  [key=2, style=dotted, color=red];
n561 -> n559  [key=0, style=bold, color=blue];
n562 -> n563  [key=0, style=solid, color=red];
n562 -> d570  [key=0, style=solid, color=green];
n563 -> n564  [key=0, style=solid, color=red];
n563 -> n532  [key=2, style=dotted, color=red];
n564 -> n562  [key=0, style=bold, color=blue];
n565 -> n566  [key=0, style=solid, color=red];
n565 -> n567  [key=1, style=dashed, color=red, label="CommandLine.CommandLineParserSettings"];
n565 -> d573  [key=0, style=solid, color=green];
n565 -> d574  [key=1, style=dashed, color=green, label="CommandLine.CommandLineParserSettings"];
n566 -> n567  [key=0, style=solid, color=red];
n566 -> n484  [key=2, style=dotted, color=red];
n567 -> n568  [key=0, style=solid, color=red];
n568 -> n565  [key=0, style=bold, color=blue];
n569 -> n570  [key=0, style=solid, color=red];
n569 -> n520  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n569 -> n572  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n569 -> d577  [key=0, style=solid, color=green];
n570 -> n571  [key=0, style=solid, color=red];
n570 -> n572  [key=2, style=dotted, color=red];
n571 -> n569  [key=0, style=bold, color=blue];
n572 -> n573  [key=0, style=solid, color=red];
n572 -> n574  [key=1, style=dashed, color=red, label=object];
n572 -> n575  [key=1, style=dashed, color=red, label=object];
n572 -> n576  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
n572 -> n577  [key=1, style=dashed, color=red, label="string[]"];
n572 -> n579  [key=1, style=dashed, color=red, label=object];
n572 -> n580  [key=1, style=dashed, color=red, label="System.IO.TextWriter"];
n572 -> n583  [key=1, style=dashed, color=red, label="string[]"];
n572 -> n522  [key=3, color=darkorchid, style=bold, label="Parameter variable System.IO.TextWriter helpWriter"];
n572 -> n569  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n572 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool ParseArguments"];
n572 -> n587  [key=3, color=darkorchid, style=bold, label="method methodReturn bool ParseArguments"];
n572 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool ParseArguments"];
n572 -> d580  [key=0, style=solid, color=green];
n572 -> d581  [key=1, style=dashed, color=green, label=object];
n572 -> d582  [key=1, style=dashed, color=green, label=object];
n572 -> d583  [key=1, style=dashed, color=green, label="System.IO.TextWriter"];
n572 -> d584  [key=1, style=dashed, color=green, label="string[]"];
n572 -> d586  [key=1, style=dashed, color=green, label=object];
n572 -> d587  [key=1, style=dashed, color=green, label="System.IO.TextWriter"];
n572 -> d590  [key=1, style=dashed, color=green, label="string[]"];
n573 -> n574  [key=0, style=solid, color=red];
n573 -> n484  [key=2, style=dotted, color=red];
n574 -> n575  [key=0, style=solid, color=red];
n574 -> n484  [key=2, style=dotted, color=red];
n575 -> n576  [key=0, style=solid, color=red];
n575 -> n585  [key=2, style=dotted, color=red];
n575 -> n577  [key=1, style=dashed, color=red, label=pair];
n575 -> n579  [key=1, style=dashed, color=red, label=pair];
n576 -> n577  [key=0, style=solid, color=red];
n576 -> n583  [key=0, style=solid, color=red];
n577 -> n578  [key=0, style=solid, color=red];
n577 -> n582  [key=0, style=solid, color=red];
n577 -> n586  [key=2, style=dotted, color=red];
n577 -> n587  [key=2, style=dotted, color=red];
n579 -> n580  [key=0, style=solid, color=red];
n579 -> n8  [key=2, style=dotted, color=red];
n580 -> n581  [key=0, style=solid, color=red];
n580 -> n588  [key=2, style=dotted, color=red];
n583 -> n584  [key=0, style=solid, color=red];
n583 -> n587  [key=2, style=dotted, color=red];
n585 -> n657  [key=0, style=solid, color=red];
n585 -> n572  [key=3, color=darkorchid, style=bold, label="Parameter variable object target"];
n585 -> n58  [key=3, color=red, style=bold, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod"];
n585 -> d58  [key=3, color=green, style=bold, label="method methodReturn CommandLine.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod"];
n585 -> d664  [key=0, style=solid, color=green];
n578 -> n579  [key=0, style=solid, color=red];
n582 -> n584  [key=0, style=solid, color=red];
n586 -> n612  [key=0, style=solid, color=red];
n586 -> n614  [key=1, style=dashed, color=red, label="string[]"];
n586 -> n615  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
n586 -> n616  [key=1, style=dashed, color=red, label="string[]"];
n586 -> n618  [key=1, style=dashed, color=red, label="CommandLine.HelpOptionAttribute"];
n586 -> n619  [key=1, style=dashed, color=red, label="string[]"];
n586 -> n572  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] args"];
n586 -> n112  [key=3, color=red, style=bold, label="method methodReturn bool ParseHelp"];
n586 -> d114  [key=3, color=green, style=bold, label="method methodReturn bool ParseHelp"];
n586 -> d619  [key=0, style=solid, color=green];
n586 -> d621  [key=1, style=dashed, color=green, label="string[]"];
n586 -> d622  [key=1, style=dashed, color=green, label="CommandLine.HelpOptionAttribute"];
n586 -> d623  [key=1, style=dashed, color=green, label="string[]"];
n586 -> d625  [key=1, style=dashed, color=green, label="CommandLine.HelpOptionAttribute"];
n586 -> d626  [key=1, style=dashed, color=green, label="string[]"];
n587 -> n589  [key=0, style=solid, color=red];
n587 -> n590  [key=1, style=dashed, color=red, label=object];
n587 -> n592  [key=1, style=dashed, color=red, label=object];
n587 -> n593  [key=1, style=dashed, color=red, label="string[]"];
n587 -> n599  [key=1, style=dashed, color=red, label=object];
n587 -> n601  [key=1, style=dashed, color=red, label=object];
n587 -> n572  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n587 -> d596  [key=0, style=solid, color=green];
n587 -> d597  [key=1, style=dashed, color=green, label=object];
n587 -> d599  [key=1, style=dashed, color=green, label=object];
n587 -> d600  [key=1, style=dashed, color=green, label="string[]"];
n587 -> d606  [key=1, style=dashed, color=green, label=object];
n587 -> d608  [key=1, style=dashed, color=green, label=object];
n581 -> n584  [key=0, style=solid, color=red];
n584 -> n572  [key=0, style=bold, color=blue];
n589 -> n590  [key=0, style=solid, color=red];
n589 -> n608  [key=1, style=dashed, color=red, label=hadError];
n590 -> n591  [key=0, style=solid, color=red];
n590 -> n305  [key=2, style=dotted, color=red];
n590 -> n599  [key=1, style=dashed, color=red, label=optionMap];
n590 -> n608  [key=1, style=dashed, color=red, label=optionMap];
n592 -> n593  [key=0, style=solid, color=red];
n592 -> n507  [key=2, style=dotted, color=red];
n592 -> n605  [key=1, style=dashed, color=red, label=target];
n592 -> n606  [key=1, style=dashed, color=red, label=target];
n593 -> n594  [key=0, style=solid, color=red];
n593 -> n478  [key=2, style=dotted, color=red];
n593 -> n595  [key=1, style=dashed, color=red, label=arguments];
n593 -> n599  [key=1, style=dashed, color=red, label=arguments];
n593 -> n604  [key=1, style=dashed, color=red, label=arguments];
n599 -> n600  [key=0, style=solid, color=red];
n599 -> n90  [key=2, style=dotted, color=red];
n599 -> n603  [key=1, style=dashed, color=red, label=result];
n601 -> n602  [key=0, style=solid, color=red];
n601 -> n611  [key=2, style=dotted, color=red];
n608 -> n609  [key=0, style=solid, color=red];
n608 -> n406  [key=2, style=dotted, color=red];
n608 -> n608  [key=1, style=dashed, color=red, label=hadError];
n591 -> n592  [key=0, style=solid, color=red];
n591 -> n411  [key=2, style=dotted, color=red];
n605 -> n606  [key=0, style=solid, color=red];
n605 -> n594  [key=0, style=solid, color=red];
n606 -> n607  [key=0, style=solid, color=red];
n606 -> n594  [key=0, style=solid, color=red];
n606 -> n513  [key=2, style=dotted, color=red];
n594 -> n595  [key=0, style=solid, color=red];
n594 -> n608  [key=0, style=solid, color=red];
n594 -> n123  [key=2, style=dotted, color=red];
n595 -> n596  [key=0, style=solid, color=red];
n595 -> n597  [key=1, style=dashed, color=red, label=argument];
n595 -> n606  [key=1, style=dashed, color=red, label=argument];
n604 -> n594  [key=0, style=solid, color=red];
n604 -> n123  [key=2, style=dotted, color=red];
n596 -> n597  [key=0, style=solid, color=red];
n596 -> n594  [key=0, style=solid, color=red];
n596 -> n33  [key=2, style=dotted, color=red];
n597 -> n598  [key=0, style=solid, color=red];
n597 -> n97  [key=2, style=dotted, color=red];
n597 -> n599  [key=1, style=dashed, color=red, label=parser];
n597 -> n601  [key=1, style=dashed, color=red, label=parser];
n598 -> n599  [key=0, style=solid, color=red];
n598 -> n605  [key=0, style=solid, color=red];
n600 -> n601  [key=0, style=solid, color=red];
n600 -> n603  [key=0, style=solid, color=red];
n603 -> n604  [key=0, style=solid, color=red];
n603 -> n594  [key=0, style=solid, color=red];
n602 -> n594  [key=0, style=solid, color=red];
n602 -> n608  [key=1, style=dashed, color=red, label=hadError];
n611 -> n624  [key=0, style=solid, color=red];
n611 -> n626  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>"];
n611 -> n587  [key=3, color=darkorchid, style=bold, label="Parameter variable object options"];
n611 -> d631  [key=0, style=solid, color=green];
n611 -> d633  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>"];
n607 -> n594  [key=0, style=solid, color=red];
n607 -> n608  [key=1, style=dashed, color=red, label=hadError];
n609 -> n610  [key=0, style=solid, color=red];
n610 -> n587  [key=0, style=bold, color=blue];
n612 -> n613  [key=0, style=solid, color=red];
n612 -> n616  [key=1, style=dashed, color=red, label=caseSensitive];
n612 -> n619  [key=1, style=dashed, color=red, label=caseSensitive];
n614 -> n615  [key=0, style=solid, color=red];
n614 -> n622  [key=0, style=solid, color=red];
n614 -> n329  [key=3, color=red, style=bold, label="Local variable int i"];
n615 -> n616  [key=0, style=solid, color=red];
n615 -> n618  [key=0, style=solid, color=red];
n615 -> n33  [key=2, style=dotted, color=red];
n616 -> n617  [key=0, style=solid, color=red];
n616 -> n618  [key=0, style=solid, color=red];
n616 -> n127  [key=2, style=dotted, color=red];
n618 -> n619  [key=0, style=solid, color=red];
n618 -> n621  [key=0, style=solid, color=red];
n618 -> n33  [key=2, style=dotted, color=red];
n619 -> n620  [key=0, style=solid, color=red];
n619 -> n621  [key=0, style=solid, color=red];
n619 -> n131  [key=2, style=dotted, color=red];
n613 -> n614  [key=0, style=solid, color=red];
n613 -> n616  [key=1, style=dashed, color=red, label=i];
n613 -> n619  [key=1, style=dashed, color=red, label=i];
n613 -> n621  [key=1, style=dashed, color=red, label=i];
n621 -> n614  [key=0, style=solid, color=red];
n621 -> n621  [key=1, style=dashed, color=red, label=i];
n622 -> n623  [key=0, style=solid, color=red];
n617 -> n623  [key=0, style=solid, color=red];
n620 -> n623  [key=0, style=solid, color=red];
n623 -> n586  [key=0, style=bold, color=blue];
n624 -> n625  [key=0, style=solid, color=red];
n624 -> n626  [key=1, style=dashed, color=red, label=commandLineOptionsBase];
n626 -> n627  [key=0, style=solid, color=red];
n626 -> n628  [key=2, style=dotted, color=red];
n625 -> n626  [key=0, style=solid, color=red];
n625 -> n627  [key=0, style=solid, color=red];
n627 -> n611  [key=0, style=bold, color=blue];
n629 -> n630  [key=0, style=solid, color=red];
n629 -> n631  [key=0, style=solid, color=red];
n630 -> n631  [key=0, style=solid, color=red];
n630 -> n51  [key=2, style=dotted, color=red];
n631 -> n484  [key=0, style=bold, color=blue];
n632 -> n633  [key=0, style=solid, color=red];
n632 -> n634  [key=0, style=solid, color=red];
n632 -> n33  [key=2, style=dotted, color=red];
n633 -> n634  [key=0, style=solid, color=red];
n633 -> n635  [key=2, style=dotted, color=red];
n634 -> n217  [key=0, style=bold, color=blue];
n636 -> n637  [key=0, style=solid, color=red];
n636 -> n638  [key=1, style=dashed, color=red, label=string];
n636 -> d644  [key=0, style=solid, color=green];
n636 -> d645  [key=1, style=dashed, color=green, label=string];
n637 -> n638  [key=0, style=solid, color=red];
n637 -> n639  [key=0, style=solid, color=red];
n638 -> n639  [key=0, style=solid, color=red];
n638 -> n640  [key=2, style=dotted, color=red];
n639 -> n636  [key=0, style=bold, color=blue];
n641 -> n642  [key=0, style=solid, color=red];
n641 -> n89  [key=2, style=dotted, color=red];
n641 -> n650  [key=1, style=dashed, color=red, label=list];
n641 -> n651  [key=1, style=dashed, color=red, label=list];
n642 -> n643  [key=0, style=solid, color=red];
n642 -> n651  [key=0, style=solid, color=red];
n643 -> n644  [key=0, style=solid, color=red];
n643 -> n653  [key=2, style=dotted, color=red];
n643 -> n654  [key=2, style=dotted, color=red];
n650 -> n644  [key=0, style=solid, color=red];
n650 -> n453  [key=2, style=dotted, color=red];
n650 -> n124  [key=2, style=dotted, color=red];
n651 -> n652  [key=0, style=solid, color=red];
n644 -> n645  [key=0, style=solid, color=red];
n644 -> n651  [key=0, style=solid, color=red];
n644 -> n646  [key=1, style=dashed, color=red, label=property];
n644 -> n648  [key=1, style=dashed, color=red, label=property];
n644 -> n650  [key=1, style=dashed, color=red, label=property];
n645 -> n646  [key=0, style=solid, color=red];
n645 -> n644  [key=0, style=solid, color=red];
n646 -> n647  [key=0, style=solid, color=red];
n646 -> n655  [key=2, style=dotted, color=red];
n648 -> n649  [key=0, style=solid, color=red];
n648 -> n656  [key=2, style=dotted, color=red];
n648 -> n650  [key=1, style=dashed, color=red, label=attribute];
n647 -> n648  [key=0, style=solid, color=red];
n647 -> n644  [key=0, style=solid, color=red];
n649 -> n650  [key=0, style=solid, color=red];
n649 -> n644  [key=0, style=solid, color=red];
n652 -> n75  [key=0, style=bold, color=blue];
n657 -> n658  [key=0, style=solid, color=red];
n657 -> n653  [key=2, style=dotted, color=red];
n657 -> n665  [key=2, style=dotted, color=red];
n658 -> n659  [key=0, style=solid, color=red];
n658 -> n663  [key=0, style=solid, color=red];
n658 -> n660  [key=1, style=dashed, color=red, label=method];
n658 -> n662  [key=1, style=dashed, color=red, label=method];
n659 -> n660  [key=0, style=solid, color=red];
n659 -> n658  [key=0, style=solid, color=red];
n663 -> n664  [key=0, style=solid, color=red];
n660 -> n661  [key=0, style=solid, color=red];
n660 -> n656  [key=2, style=dotted, color=red];
n660 -> n662  [key=1, style=dashed, color=red, label=attribute];
n662 -> n664  [key=0, style=solid, color=red];
n662 -> n453  [key=2, style=dotted, color=red];
n661 -> n662  [key=0, style=solid, color=red];
n661 -> n658  [key=0, style=solid, color=red];
n664 -> n585  [key=0, style=bold, color=blue];
n666 -> n667  [key=0, style=solid, color=red];
n666 -> n670  [key=3, color=red, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
n666 -> n58  [key=3, color=red, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
n666 -> d58  [key=3, color=green, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
n666 -> d674  [key=0, style=solid, color=green];
n666 -> d677  [key=3, color=green, style=bold, label="method methodReturn TAttribute RetrieveMethodAttributeOnly"];
n667 -> n668  [key=0, style=solid, color=red];
n667 -> n653  [key=2, style=dotted, color=red];
n667 -> n665  [key=2, style=dotted, color=red];
n668 -> n669  [key=0, style=solid, color=red];
n668 -> n673  [key=0, style=solid, color=red];
n668 -> n670  [key=1, style=dashed, color=red, label=method];
n669 -> n670  [key=0, style=solid, color=red];
n669 -> n668  [key=0, style=solid, color=red];
n673 -> n674  [key=0, style=solid, color=red];
n670 -> n671  [key=0, style=solid, color=red];
n670 -> n656  [key=2, style=dotted, color=red];
n670 -> n672  [key=1, style=dashed, color=red, label=attribute];
n671 -> n672  [key=0, style=solid, color=red];
n671 -> n668  [key=0, style=solid, color=red];
n672 -> n674  [key=0, style=solid, color=red];
n674 -> n666  [key=0, style=bold, color=blue];
n675 -> n676  [key=0, style=solid, color=red];
n675 -> n677  [key=1, style=dashed, color=red, label=object];
n675 -> d683  [key=0, style=solid, color=green];
n675 -> d684  [key=1, style=dashed, color=green, label=object];
n676 -> n677  [key=0, style=solid, color=red];
n676 -> n89  [key=2, style=dotted, color=red];
n676 -> n684  [key=1, style=dashed, color=red, label=list];
n676 -> n685  [key=1, style=dashed, color=red, label=list];
n677 -> n678  [key=0, style=solid, color=red];
n677 -> n653  [key=2, style=dotted, color=red];
n677 -> n654  [key=2, style=dotted, color=red];
n684 -> n678  [key=0, style=solid, color=red];
n684 -> n124  [key=2, style=dotted, color=red];
n685 -> n686  [key=0, style=solid, color=red];
n678 -> n679  [key=0, style=solid, color=red];
n678 -> n685  [key=0, style=solid, color=red];
n678 -> n680  [key=1, style=dashed, color=red, label=property];
n678 -> n682  [key=1, style=dashed, color=red, label=property];
n679 -> n680  [key=0, style=solid, color=red];
n679 -> n678  [key=0, style=solid, color=red];
n680 -> n681  [key=0, style=solid, color=red];
n680 -> n655  [key=2, style=dotted, color=red];
n682 -> n683  [key=0, style=solid, color=red];
n682 -> n656  [key=2, style=dotted, color=red];
n682 -> n684  [key=1, style=dashed, color=red, label=attribute];
n681 -> n682  [key=0, style=solid, color=red];
n681 -> n678  [key=0, style=solid, color=red];
n683 -> n684  [key=0, style=solid, color=red];
n683 -> n678  [key=0, style=solid, color=red];
n686 -> n675  [key=0, style=bold, color=blue];
n687 -> n688  [key=0, style=solid, color=red];
n687 -> n58  [key=3, color=red, style=bold, label="method methodReturn TAttribute GetAttribute"];
n687 -> d58  [key=3, color=green, style=bold, label="method methodReturn TAttribute GetAttribute"];
n687 -> d695  [key=0, style=solid, color=green];
n688 -> n689  [key=0, style=solid, color=red];
n688 -> n694  [key=2, style=dotted, color=red];
n688 -> n695  [key=2, style=dotted, color=red];
n689 -> n690  [key=0, style=solid, color=red];
n689 -> n696  [key=2, style=dotted, color=red];
n689 -> n692  [key=1, style=dashed, color=red, label=a];
n690 -> n691  [key=0, style=solid, color=red];
n690 -> n692  [key=0, style=solid, color=red];
n692 -> n693  [key=0, style=solid, color=red];
n691 -> n693  [key=0, style=solid, color=red];
n693 -> n687  [key=0, style=bold, color=blue];
n697 -> n698  [key=0, style=solid, color=red];
n697 -> n699  [key=2, style=dotted, color=red];
n698 -> n324  [key=0, style=bold, color=blue];
n700 -> n701  [key=0, style=solid, color=red];
n700 -> d708  [key=0, style=solid, color=green];
n701 -> n702  [key=0, style=solid, color=red];
n701 -> n703  [key=2, style=dotted, color=red];
n702 -> n700  [key=0, style=bold, color=blue];
d1 -> n2  [key=0, style=solid, color=green];
d4 -> d5  [key=0, style=solid, color=green];
d5 -> d6  [key=0, style=solid, color=green];
d6 -> n7  [key=0, style=solid, color=green];
d9 -> d10  [key=0, style=solid, color=green];
d10 -> d11  [key=0, style=solid, color=green];
d10 -> d13  [key=1, style=dashed, color=green, label=method];
d11 -> d13  [key=0, style=solid, color=green];
d11 -> d12  [key=0, style=solid, color=green];
d11 -> n15  [key=2, style=dotted, color=green];
d13 -> n14  [key=0, style=solid, color=green];
d13 -> n17  [key=2, style=dotted, color=green];
d12 -> n14  [key=0, style=solid, color=green];
d12 -> n16  [key=2, style=dotted, color=green];
d18 -> n19  [key=0, style=solid, color=green];
d18 -> n20  [key=2, style=dotted, color=green];
d24 -> d25  [key=0, style=solid, color=green];
d24 -> d26  [key=0, style=solid, color=green];
d24 -> n33  [key=2, style=dotted, color=green];
d25 -> d28  [key=0, style=solid, color=green];
d26 -> d27  [key=0, style=solid, color=green];
d26 -> d28  [key=0, style=solid, color=green];
d26 -> n33  [key=2, style=dotted, color=green];
d28 -> d30  [key=0, style=solid, color=green];
d28 -> d29  [key=0, style=solid, color=green];
d27 -> d28  [key=0, style=solid, color=green];
d30 -> d31  [key=0, style=solid, color=green];
d31 -> n32  [key=0, style=solid, color=green];
d29 -> n32  [key=0, style=solid, color=green];
d29 -> n34  [key=2, style=dotted, color=green];
d36 -> n37  [key=0, style=solid, color=green];
d39 -> n40  [key=0, style=solid, color=green];
d42 -> n43  [key=0, style=solid, color=green];
d45 -> d46  [key=0, style=solid, color=green];
d45 -> d47  [key=0, style=solid, color=green];
d46 -> n50  [key=0, style=solid, color=green];
d46 -> n51  [key=2, style=dotted, color=green];
d47 -> d48  [key=0, style=solid, color=green];
d47 -> d49  [key=0, style=solid, color=green];
d47 -> n52  [key=2, style=dotted, color=green];
d48 -> n50  [key=0, style=solid, color=green];
d48 -> n53  [key=2, style=dotted, color=green];
d49 -> n50  [key=0, style=solid, color=green];
d55 -> d56  [key=0, style=solid, color=green];
d56 -> d57  [key=0, style=solid, color=green];
d56 -> n62  [key=2, style=dotted, color=green];
d56 -> d59  [key=1, style=dashed, color=green, label=concreteType];
d56 -> d60  [key=1, style=dashed, color=green, label=property];
d57 -> d59  [key=0, style=solid, color=green];
d57 -> d58  [key=0, style=solid, color=green];
d59 -> d60  [key=0, style=solid, color=green];
d59 -> n63  [key=2, style=dotted, color=green];
d59 -> n64  [key=2, style=dotted, color=green];
d60 -> n61  [key=0, style=solid, color=green];
d60 -> n65  [key=2, style=dotted, color=green];
d58 -> n61  [key=0, style=solid, color=green];
d67 -> d68  [key=0, style=solid, color=green];
d67 -> n75  [key=2, style=dotted, color=green];
d67 -> d70  [key=1, style=dashed, color=green, label=list];
d67 -> d72  [key=1, style=dashed, color=green, label=list];
d68 -> d69  [key=0, style=solid, color=green];
d68 -> d70  [key=0, style=solid, color=green];
d70 -> d71  [key=0, style=solid, color=green];
d70 -> d72  [key=0, style=solid, color=green];
d72 -> d73  [key=0, style=solid, color=green];
d69 -> n74  [key=0, style=solid, color=green];
d71 -> n74  [key=0, style=solid, color=green];
d71 -> n34  [key=2, style=dotted, color=green];
d73 -> n74  [key=0, style=solid, color=green];
d76 -> d77  [key=0, style=solid, color=green];
d77 -> d78  [key=0, style=solid, color=green];
d77 -> n75  [key=2, style=dotted, color=green];
d77 -> d80  [key=1, style=dashed, color=green, label=list];
d77 -> d82  [key=1, style=dashed, color=green, label=list];
d78 -> d79  [key=0, style=solid, color=green];
d78 -> d80  [key=0, style=solid, color=green];
d80 -> d81  [key=0, style=solid, color=green];
d80 -> d82  [key=0, style=solid, color=green];
d82 -> d83  [key=0, style=solid, color=green];
d82 -> d84  [key=1, style=dashed, color=green, label=pairZero];
d79 -> n85  [key=0, style=solid, color=green];
d81 -> n85  [key=0, style=solid, color=green];
d81 -> n34  [key=2, style=dotted, color=green];
d83 -> d84  [key=0, style=solid, color=green];
d83 -> n85  [key=1, style=dashed, color=green, label="out System.Type"];
d84 -> n85  [key=0, style=solid, color=green];
d87 -> n88  [key=0, style=solid, color=green];
d87 -> n89  [key=2, style=dotted, color=green];
d93 -> n94  [key=0, style=solid, color=green];
d93 -> n95  [key=2, style=dotted, color=green];
d93 -> n96  [key=2, style=dotted, color=green];
d98 -> d99  [key=0, style=solid, color=green];
d98 -> d100  [key=0, style=solid, color=green];
d98 -> d108  [key=2, style=dotted, color=green];
d99 -> n105  [key=0, style=solid, color=green];
d100 -> d101  [key=0, style=solid, color=green];
d100 -> d102  [key=0, style=solid, color=green];
d100 -> n106  [key=2, style=dotted, color=green];
d108 -> d711  [key=0, style=solid, color=green];
d108 -> d712  [key=1, style=dashed, color=green, label=string];
d108 -> n97  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d108 -> n109  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d101 -> n105  [key=0, style=solid, color=green];
d102 -> d103  [key=0, style=solid, color=green];
d102 -> d104  [key=0, style=solid, color=green];
d103 -> n105  [key=0, style=solid, color=green];
d103 -> n107  [key=2, style=dotted, color=green];
d104 -> d105  [key=0, style=solid, color=green];
d104 -> d106  [key=0, style=solid, color=green];
d105 -> n105  [key=0, style=solid, color=green];
d105 -> n108  [key=2, style=dotted, color=green];
d106 -> n105  [key=0, style=solid, color=green];
d113 -> d114  [key=0, style=solid, color=green];
d113 -> d115  [key=0, style=solid, color=green];
d113 -> d108  [key=2, style=dotted, color=green];
d114 -> n113  [key=0, style=solid, color=green];
d115 -> d116  [key=0, style=solid, color=green];
d115 -> d117  [key=0, style=solid, color=green];
d116 -> n113  [key=0, style=solid, color=green];
d116 -> n106  [key=2, style=dotted, color=green];
d117 -> n113  [key=0, style=solid, color=green];
d422 -> d114  [key=3, color=green, style=bold, label="Local variable bool requiredRulesAllMet"];
d422 -> d423  [key=0, style=solid, color=green];
d422 -> d427  [key=1, style=dashed, color=green, label=requiredRulesAllMet];
d120 -> d121  [key=0, style=solid, color=green];
d120 -> n89  [key=2, style=dotted, color=green];
d120 -> d123  [key=1, style=dashed, color=green, label=list];
d120 -> d126  [key=1, style=dashed, color=green, label=list];
d121 -> d122  [key=0, style=solid, color=green];
d121 -> d124  [key=0, style=solid, color=green];
d121 -> n123  [key=2, style=dotted, color=green];
d123 -> d121  [key=0, style=solid, color=green];
d123 -> n124  [key=2, style=dotted, color=green];
d126 -> n122  [key=0, style=solid, color=green];
d122 -> d123  [key=0, style=solid, color=green];
d122 -> d124  [key=0, style=solid, color=green];
d122 -> n109  [key=2, style=dotted, color=green];
d124 -> d125  [key=0, style=solid, color=green];
d124 -> d126  [key=0, style=solid, color=green];
d124 -> n125  [key=2, style=dotted, color=green];
d125 -> n122  [key=0, style=solid, color=green];
d125 -> n126  [key=2, style=dotted, color=green];
d133 -> n129  [key=0, style=solid, color=green];
d133 -> n130  [key=2, style=dotted, color=green];
d137 -> n133  [key=0, style=solid, color=green];
d137 -> n130  [key=2, style=dotted, color=green];
d140 -> n136  [key=0, style=solid, color=green];
d140 -> n137  [key=2, style=dotted, color=green];
d143 -> d144  [key=0, style=solid, color=green];
d143 -> d145  [key=0, style=solid, color=green];
d144 -> n143  [key=0, style=solid, color=green];
d145 -> d146  [key=0, style=solid, color=green];
d145 -> d147  [key=0, style=solid, color=green];
d146 -> n143  [key=0, style=solid, color=green];
d147 -> n143  [key=0, style=solid, color=green];
d150 -> d151  [key=0, style=solid, color=green];
d150 -> n147  [key=0, style=solid, color=green];
d151 -> n147  [key=0, style=solid, color=green];
d151 -> n126  [key=2, style=dotted, color=green];
d154 -> d155  [key=0, style=solid, color=green];
d154 -> n151  [key=0, style=solid, color=green];
d155 -> n151  [key=0, style=solid, color=green];
d155 -> n126  [key=2, style=dotted, color=green];
d160 -> d161  [key=0, style=solid, color=green];
d161 -> n157  [key=0, style=solid, color=green];
d167 -> n163  [key=0, style=solid, color=green];
d170 -> d171  [key=0, style=solid, color=green];
d170 -> n206  [key=2, style=dotted, color=green];
d170 -> n207  [key=2, style=dotted, color=green];
d170 -> d178  [key=1, style=dashed, color=green, label=parts];
d170 -> d180  [key=1, style=dashed, color=green, label=parts];
d170 -> d182  [key=1, style=dashed, color=green, label=parts];
d170 -> d188  [key=1, style=dashed, color=green, label=parts];
d170 -> d204  [key=1, style=dashed, color=green, label=parts];
d171 -> d172  [key=0, style=solid, color=green];
d171 -> d173  [key=1, style=dashed, color=green, label=option];
d171 -> d175  [key=1, style=dashed, color=green, label=option];
d171 -> d176  [key=1, style=dashed, color=green, label=option];
d171 -> d177  [key=1, style=dashed, color=green, label=option];
d171 -> d181  [key=1, style=dashed, color=green, label=option];
d171 -> d182  [key=1, style=dashed, color=green, label=option];
d171 -> d184  [key=1, style=dashed, color=green, label=option];
d171 -> d186  [key=1, style=dashed, color=green, label=option];
d171 -> d189  [key=1, style=dashed, color=green, label=option];
d171 -> d191  [key=1, style=dashed, color=green, label=option];
d171 -> d193  [key=1, style=dashed, color=green, label=option];
d171 -> d194  [key=1, style=dashed, color=green, label=option];
d171 -> d196  [key=1, style=dashed, color=green, label=option];
d171 -> d198  [key=1, style=dashed, color=green, label=option];
d171 -> d200  [key=1, style=dashed, color=green, label=option];
d171 -> d202  [key=1, style=dashed, color=green, label=option];
d171 -> d206  [key=1, style=dashed, color=green, label=option];
d171 -> d208  [key=1, style=dashed, color=green, label=option];
d178 -> d179  [key=0, style=solid, color=green];
d178 -> d180  [key=0, style=solid, color=green];
d178 -> n109  [key=2, style=dotted, color=green];
d180 -> d181  [key=0, style=solid, color=green];
d180 -> d193  [key=0, style=solid, color=green];
d182 -> d183  [key=0, style=solid, color=green];
d182 -> n208  [key=2, style=dotted, color=green];
d182 -> d185  [key=1, style=dashed, color=green, label=valueSetting];
d188 -> d189  [key=0, style=solid, color=green];
d188 -> n209  [key=2, style=dotted, color=green];
d204 -> d206  [key=0, style=solid, color=green];
d204 -> d205  [key=0, style=solid, color=green];
d172 -> d173  [key=0, style=solid, color=green];
d172 -> n208  [key=3, color=green, style=bold, label="Local variable bool valueSetting"];
d172 -> n210  [key=3, color=green, style=bold, label="Local variable bool valueSetting"];
d172 -> n211  [key=3, color=green, style=bold, label="Local variable bool valueSetting"];
d173 -> d174  [key=0, style=solid, color=green];
d173 -> d175  [key=0, style=solid, color=green];
d175 -> d176  [key=0, style=solid, color=green];
d176 -> d177  [key=0, style=solid, color=green];
d176 -> n148  [key=2, style=dotted, color=green];
d177 -> d178  [key=0, style=solid, color=green];
d177 -> d204  [key=0, style=solid, color=green];
d181 -> d182  [key=0, style=solid, color=green];
d181 -> d186  [key=0, style=solid, color=green];
d184 -> d185  [key=0, style=solid, color=green];
d184 -> n92  [key=2, style=dotted, color=green];
d186 -> d187  [key=0, style=solid, color=green];
d186 -> n144  [key=2, style=dotted, color=green];
d189 -> d190  [key=0, style=solid, color=green];
d189 -> n210  [key=2, style=dotted, color=green];
d189 -> d192  [key=1, style=dashed, color=green, label=valueSetting];
d191 -> d192  [key=0, style=solid, color=green];
d191 -> n92  [key=2, style=dotted, color=green];
d193 -> d194  [key=0, style=solid, color=green];
d193 -> d198  [key=0, style=solid, color=green];
d194 -> d195  [key=0, style=solid, color=green];
d194 -> n208  [key=2, style=dotted, color=green];
d194 -> d197  [key=1, style=dashed, color=green, label=valueSetting];
d196 -> d197  [key=0, style=solid, color=green];
d196 -> n92  [key=2, style=dotted, color=green];
d198 -> d199  [key=0, style=solid, color=green];
d198 -> n144  [key=2, style=dotted, color=green];
d200 -> d201  [key=0, style=solid, color=green];
d200 -> n210  [key=2, style=dotted, color=green];
d200 -> d203  [key=1, style=dashed, color=green, label=valueSetting];
d202 -> d203  [key=0, style=solid, color=green];
d202 -> n92  [key=2, style=dotted, color=green];
d206 -> d207  [key=0, style=solid, color=green];
d206 -> n211  [key=2, style=dotted, color=green];
d206 -> d209  [key=1, style=dashed, color=green, label=valueSetting];
d208 -> d209  [key=0, style=solid, color=green];
d208 -> n92  [key=2, style=dotted, color=green];
d179 -> n205  [key=0, style=solid, color=green];
d183 -> d184  [key=0, style=solid, color=green];
d183 -> d185  [key=0, style=solid, color=green];
d185 -> n205  [key=0, style=solid, color=green];
d185 -> n134  [key=2, style=dotted, color=green];
d187 -> d188  [key=0, style=solid, color=green];
d187 -> n114  [key=2, style=dotted, color=green];
d187 -> d189  [key=1, style=dashed, color=green, label=items];
d190 -> d191  [key=0, style=solid, color=green];
d190 -> d192  [key=0, style=solid, color=green];
d192 -> n205  [key=0, style=solid, color=green];
d192 -> n134  [key=2, style=dotted, color=green];
d195 -> d196  [key=0, style=solid, color=green];
d195 -> d197  [key=0, style=solid, color=green];
d197 -> n205  [key=0, style=solid, color=green];
d197 -> n137  [key=2, style=dotted, color=green];
d199 -> d200  [key=0, style=solid, color=green];
d199 -> n114  [key=2, style=dotted, color=green];
d201 -> d202  [key=0, style=solid, color=green];
d201 -> d203  [key=0, style=solid, color=green];
d203 -> n205  [key=0, style=solid, color=green];
d203 -> n134  [key=2, style=dotted, color=green];
d207 -> d208  [key=0, style=solid, color=green];
d207 -> d209  [key=0, style=solid, color=green];
d209 -> n205  [key=0, style=solid, color=green];
d209 -> n134  [key=2, style=dotted, color=green];
d205 -> n205  [key=0, style=solid, color=green];
d174 -> n205  [key=0, style=solid, color=green];
d218 -> d219  [key=0, style=solid, color=green];
d218 -> n217  [key=2, style=dotted, color=green];
d219 -> d220  [key=0, style=solid, color=green];
d220 -> n216  [key=0, style=solid, color=green];
d224 -> n220  [key=0, style=solid, color=green];
d227 -> d228  [key=0, style=solid, color=green];
d227 -> d231  [key=0, style=solid, color=green];
d228 -> d229  [key=0, style=solid, color=green];
d231 -> d232  [key=0, style=solid, color=green];
d229 -> d230  [key=0, style=solid, color=green];
d229 -> n229  [key=2, style=dotted, color=green];
d232 -> n228  [key=0, style=solid, color=green];
d230 -> n228  [key=0, style=solid, color=green];
d236 -> d237  [key=0, style=solid, color=green];
d236 -> d238  [key=0, style=solid, color=green];
d237 -> n236  [key=0, style=solid, color=green];
d237 -> n34  [key=2, style=dotted, color=green];
d238 -> d239  [key=0, style=solid, color=green];
d238 -> d240  [key=0, style=solid, color=green];
d239 -> n236  [key=0, style=solid, color=green];
d239 -> n34  [key=2, style=dotted, color=green];
d240 -> n236  [key=0, style=solid, color=green];
d240 -> n206  [key=2, style=dotted, color=green];
d243 -> n239  [key=0, style=solid, color=green];
d243 -> n240  [key=2, style=dotted, color=green];
d248 -> n244  [key=0, style=solid, color=green];
d251 -> d252  [key=0, style=solid, color=green];
d251 -> n212  [key=2, style=dotted, color=green];
d251 -> n206  [key=2, style=dotted, color=green];
d251 -> d253  [key=1, style=dashed, color=green, label=group];
d251 -> d259  [key=1, style=dashed, color=green, label=group];
d251 -> d262  [key=1, style=dashed, color=green, label=group];
d251 -> d264  [key=1, style=dashed, color=green, label=group];
d251 -> d270  [key=1, style=dashed, color=green, label=group];
d251 -> d288  [key=1, style=dashed, color=green, label=group];
d252 -> d253  [key=0, style=solid, color=green];
d252 -> d292  [key=0, style=solid, color=green];
d252 -> n123  [key=2, style=dotted, color=green];
d253 -> d254  [key=0, style=solid, color=green];
d253 -> d256  [key=1, style=dashed, color=green, label=option];
d253 -> d257  [key=1, style=dashed, color=green, label=option];
d253 -> d258  [key=1, style=dashed, color=green, label=option];
d253 -> d263  [key=1, style=dashed, color=green, label=option];
d253 -> d264  [key=1, style=dashed, color=green, label=option];
d253 -> d266  [key=1, style=dashed, color=green, label=option];
d253 -> d268  [key=1, style=dashed, color=green, label=option];
d253 -> d271  [key=1, style=dashed, color=green, label=option];
d253 -> d273  [key=1, style=dashed, color=green, label=option];
d253 -> d277  [key=1, style=dashed, color=green, label=option];
d253 -> d278  [key=1, style=dashed, color=green, label=option];
d253 -> d280  [key=1, style=dashed, color=green, label=option];
d253 -> d282  [key=1, style=dashed, color=green, label=option];
d253 -> d284  [key=1, style=dashed, color=green, label=option];
d253 -> d286  [key=1, style=dashed, color=green, label=option];
d253 -> d290  [key=1, style=dashed, color=green, label=option];
d259 -> d260  [key=0, style=solid, color=green];
d259 -> d261  [key=0, style=solid, color=green];
d262 -> d275  [key=0, style=solid, color=green];
d262 -> d263  [key=0, style=solid, color=green];
d264 -> d265  [key=0, style=solid, color=green];
d264 -> n158  [key=2, style=dotted, color=green];
d264 -> n208  [key=2, style=dotted, color=green];
d264 -> d267  [key=1, style=dashed, color=green, label=valueSetting];
d270 -> d271  [key=0, style=solid, color=green];
d270 -> n158  [key=2, style=dotted, color=green];
d270 -> n209  [key=2, style=dotted, color=green];
d288 -> d289  [key=0, style=solid, color=green];
d288 -> d290  [key=0, style=solid, color=green];
d254 -> d255  [key=0, style=solid, color=green];
d254 -> d256  [key=0, style=solid, color=green];
d256 -> d257  [key=0, style=solid, color=green];
d257 -> d258  [key=0, style=solid, color=green];
d257 -> n148  [key=2, style=dotted, color=green];
d258 -> d259  [key=0, style=solid, color=green];
d258 -> d288  [key=0, style=solid, color=green];
d263 -> d264  [key=0, style=solid, color=green];
d263 -> d268  [key=0, style=solid, color=green];
d266 -> d267  [key=0, style=solid, color=green];
d266 -> n92  [key=2, style=dotted, color=green];
d268 -> d269  [key=0, style=solid, color=green];
d268 -> n144  [key=2, style=dotted, color=green];
d271 -> d272  [key=0, style=solid, color=green];
d271 -> n210  [key=2, style=dotted, color=green];
d271 -> d274  [key=1, style=dashed, color=green, label=valueSetting];
d273 -> d274  [key=0, style=solid, color=green];
d273 -> n92  [key=2, style=dotted, color=green];
d277 -> d278  [key=0, style=solid, color=green];
d277 -> d282  [key=0, style=solid, color=green];
d278 -> d279  [key=0, style=solid, color=green];
d278 -> n208  [key=2, style=dotted, color=green];
d278 -> d281  [key=1, style=dashed, color=green, label=valueSetting];
d280 -> d281  [key=0, style=solid, color=green];
d280 -> n92  [key=2, style=dotted, color=green];
d282 -> d283  [key=0, style=solid, color=green];
d282 -> n144  [key=2, style=dotted, color=green];
d284 -> d285  [key=0, style=solid, color=green];
d284 -> n210  [key=2, style=dotted, color=green];
d284 -> d287  [key=1, style=dashed, color=green, label=valueSetting];
d286 -> d287  [key=0, style=solid, color=green];
d286 -> n92  [key=2, style=dotted, color=green];
d290 -> d291  [key=0, style=solid, color=green];
d290 -> d252  [key=0, style=solid, color=green];
d290 -> n211  [key=2, style=dotted, color=green];
d260 -> n288  [key=0, style=solid, color=green];
d261 -> d262  [key=0, style=solid, color=green];
d261 -> n208  [key=3, color=green, style=bold, label="Local variable bool valueSetting"];
d261 -> n210  [key=3, color=green, style=bold, label="Local variable bool valueSetting"];
d265 -> d266  [key=0, style=solid, color=green];
d265 -> d267  [key=0, style=solid, color=green];
d267 -> n288  [key=0, style=solid, color=green];
d267 -> n134  [key=2, style=dotted, color=green];
d269 -> d270  [key=0, style=solid, color=green];
d269 -> n114  [key=2, style=dotted, color=green];
d269 -> d271  [key=1, style=dashed, color=green, label=items];
d272 -> d273  [key=0, style=solid, color=green];
d272 -> d274  [key=0, style=solid, color=green];
d274 -> n288  [key=0, style=solid, color=green];
d274 -> n137  [key=2, style=dotted, color=green];
d275 -> d276  [key=0, style=solid, color=green];
d275 -> d277  [key=0, style=solid, color=green];
d275 -> n109  [key=2, style=dotted, color=green];
d276 -> n288  [key=0, style=solid, color=green];
d279 -> d280  [key=0, style=solid, color=green];
d279 -> d281  [key=0, style=solid, color=green];
d281 -> n288  [key=0, style=solid, color=green];
d281 -> n137  [key=2, style=dotted, color=green];
d283 -> d284  [key=0, style=solid, color=green];
d283 -> n114  [key=2, style=dotted, color=green];
d285 -> d286  [key=0, style=solid, color=green];
d285 -> d287  [key=0, style=solid, color=green];
d287 -> n288  [key=0, style=solid, color=green];
d287 -> n134  [key=2, style=dotted, color=green];
d289 -> n288  [key=0, style=solid, color=green];
d291 -> n288  [key=0, style=solid, color=green];
d292 -> n288  [key=0, style=solid, color=green];
d255 -> n288  [key=0, style=solid, color=green];
d295 -> d296  [key=0, style=solid, color=green];
d295 -> d304  [key=0, style=solid, color=green];
d296 -> d297  [key=0, style=solid, color=green];
d304 -> n303  [key=0, style=solid, color=green];
d304 -> n304  [key=2, style=dotted, color=green];
d297 -> d298  [key=0, style=solid, color=green];
d298 -> d299  [key=0, style=solid, color=green];
d299 -> d300  [key=0, style=solid, color=green];
d300 -> d301  [key=0, style=solid, color=green];
d301 -> d302  [key=0, style=solid, color=green];
d302 -> d303  [key=0, style=solid, color=green];
d303 -> d305  [key=0, style=solid, color=green];
d305 -> d306  [key=0, style=solid, color=green];
d305 -> d307  [key=0, style=solid, color=green];
d306 -> n303  [key=0, style=solid, color=green];
d307 -> n303  [key=0, style=solid, color=green];
d307 -> n304  [key=2, style=dotted, color=green];
d311 -> d312  [key=0, style=solid, color=green];
d311 -> n75  [key=2, style=dotted, color=green];
d311 -> d313  [key=1, style=dashed, color=green, label=list];
d311 -> d314  [key=1, style=dashed, color=green, label=list];
d312 -> d313  [key=0, style=solid, color=green];
d312 -> d319  [key=0, style=solid, color=green];
d313 -> d314  [key=0, style=solid, color=green];
d313 -> n316  [key=2, style=dotted, color=green];
d313 -> d316  [key=1, style=dashed, color=green, label=map];
d313 -> d317  [key=1, style=dashed, color=green, label=map];
d313 -> d318  [key=1, style=dashed, color=green, label=map];
d314 -> d317  [key=0, style=solid, color=green];
d314 -> d315  [key=0, style=solid, color=green];
d314 -> d316  [key=1, style=dashed, color=green, label=pair];
d316 -> d314  [key=0, style=solid, color=green];
d316 -> n289  [key=2, style=dotted, color=green];
d317 -> d318  [key=0, style=solid, color=green];
d318 -> n315  [key=0, style=solid, color=green];
d319 -> n315  [key=0, style=solid, color=green];
d315 -> d314  [key=0, style=solid, color=green];
d315 -> d316  [key=0, style=solid, color=green];
d322 -> d323  [key=0, style=solid, color=green];
d322 -> d324  [key=0, style=solid, color=green];
d323 -> n322  [key=0, style=solid, color=green];
d323 -> n323  [key=2, style=dotted, color=green];
d324 -> d325  [key=0, style=solid, color=green];
d324 -> d326  [key=0, style=solid, color=green];
d324 -> n324  [key=2, style=dotted, color=green];
d325 -> n322  [key=0, style=solid, color=green];
d325 -> n325  [key=2, style=dotted, color=green];
d326 -> n322  [key=0, style=solid, color=green];
d326 -> n326  [key=2, style=dotted, color=green];
d332 -> d333  [key=0, style=solid, color=green];
d332 -> n339  [key=2, style=dotted, color=green];
d332 -> d337  [key=1, style=dashed, color=green, label=elementType];
d333 -> d334  [key=0, style=solid, color=green];
d333 -> n340  [key=2, style=dotted, color=green];
d333 -> d335  [key=1, style=dashed, color=green, label=array];
d333 -> d337  [key=1, style=dashed, color=green, label=array];
d333 -> d338  [key=1, style=dashed, color=green, label=array];
d337 -> d338  [key=0, style=solid, color=green];
d337 -> n341  [key=2, style=dotted, color=green];
d337 -> n342  [key=2, style=dotted, color=green];
d334 -> d337  [key=1, style=dashed, color=green, label=i];
d334 -> d334  [key=3, color=green, style=bold, label="Local variable int i"];
d334 -> d335  [key=0, style=solid, color=green];
d334 -> d341  [key=1, style=dashed, color=green, label=i];
d335 -> d336  [key=0, style=solid, color=green];
d335 -> d342  [key=0, style=solid, color=green];
d338 -> d339  [key=0, style=solid, color=green];
d338 -> d341  [key=0, style=solid, color=green];
d338 -> n64  [key=2, style=dotted, color=green];
d336 -> d337  [key=0, style=solid, color=green];
d339 -> d340  [key=0, style=solid, color=green];
d341 -> d335  [key=0, style=solid, color=green];
d341 -> d341  [key=1, style=dashed, color=green, label=i];
d381 -> d334  [key=3, color=green, style=bold, label="Local variable int i"];
d381 -> d383  [key=1, style=dashed, color=green, label=i];
d381 -> d382  [key=0, style=solid, color=green];
d381 -> d384  [key=1, style=dashed, color=green, label=i];
d621 -> d334  [key=3, color=green, style=bold, label="Local variable int i"];
d621 -> d622  [key=0, style=solid, color=green];
d621 -> d629  [key=0, style=solid, color=green];
d342 -> n338  [key=0, style=solid, color=green];
d340 -> n338  [key=0, style=solid, color=green];
d348 -> d349  [key=0, style=solid, color=green];
d348 -> d351  [key=0, style=solid, color=green];
d349 -> d350  [key=0, style=solid, color=green];
d351 -> d352  [key=0, style=solid, color=green];
d350 -> d353  [key=0, style=solid, color=green];
d350 -> d355  [key=0, style=solid, color=green];
d350 -> d357  [key=0, style=solid, color=green];
d350 -> d359  [key=0, style=solid, color=green];
d350 -> d361  [key=0, style=solid, color=green];
d350 -> n356  [key=2, style=dotted, color=green];
d350 -> n64  [key=2, style=dotted, color=green];
d353 -> d354  [key=0, style=solid, color=green];
d355 -> d356  [key=0, style=solid, color=green];
d357 -> d358  [key=0, style=solid, color=green];
d359 -> d360  [key=0, style=solid, color=green];
d361 -> n355  [key=0, style=solid, color=green];
d352 -> d353  [key=0, style=solid, color=green];
d352 -> d355  [key=0, style=solid, color=green];
d352 -> d357  [key=0, style=solid, color=green];
d352 -> d359  [key=0, style=solid, color=green];
d352 -> d361  [key=0, style=solid, color=green];
d352 -> n341  [key=2, style=dotted, color=green];
d352 -> n64  [key=2, style=dotted, color=green];
d354 -> n355  [key=0, style=solid, color=green];
d356 -> n355  [key=0, style=solid, color=green];
d358 -> n355  [key=0, style=solid, color=green];
d360 -> n355  [key=0, style=solid, color=green];
d364 -> d365  [key=0, style=solid, color=green];
d364 -> n364  [key=2, style=dotted, color=green];
d364 -> d366  [key=1, style=dashed, color=green, label=nc];
d365 -> d366  [key=0, style=solid, color=green];
d366 -> d367  [key=0, style=solid, color=green];
d366 -> d369  [key=0, style=solid, color=green];
d366 -> n365  [key=2, style=dotted, color=green];
d366 -> n64  [key=2, style=dotted, color=green];
d367 -> d368  [key=0, style=solid, color=green];
d369 -> n363  [key=0, style=solid, color=green];
d368 -> n363  [key=0, style=solid, color=green];
d373 -> d374  [key=0, style=solid, color=green];
d374 -> d375  [key=0, style=solid, color=green];
d374 -> n64  [key=2, style=dotted, color=green];
d375 -> n369  [key=0, style=solid, color=green];
d377 -> d378  [key=0, style=solid, color=green];
d378 -> d379  [key=0, style=solid, color=green];
d378 -> n89  [key=2, style=dotted, color=green];
d378 -> n64  [key=2, style=dotted, color=green];
d379 -> d380  [key=0, style=solid, color=green];
d379 -> n65  [key=2, style=dotted, color=green];
d379 -> d383  [key=1, style=dashed, color=green, label=fieldRef];
d380 -> d381  [key=0, style=solid, color=green];
d380 -> n380  [key=2, style=dotted, color=green];
d380 -> d382  [key=1, style=dashed, color=green, label=values];
d380 -> d383  [key=1, style=dashed, color=green, label=values];
d383 -> d384  [key=0, style=solid, color=green];
d383 -> n124  [key=2, style=dotted, color=green];
d382 -> d383  [key=0, style=solid, color=green];
d382 -> d385  [key=0, style=solid, color=green];
d384 -> d382  [key=0, style=solid, color=green];
d384 -> d384  [key=1, style=dashed, color=green, label=i];
d385 -> n379  [key=0, style=solid, color=green];
d389 -> d390  [key=0, style=solid, color=green];
d389 -> n387  [key=0, style=solid, color=green];
d390 -> d391  [key=0, style=solid, color=green];
d391 -> d392  [key=0, style=solid, color=green];
d391 -> n387  [key=0, style=solid, color=green];
d391 -> n64  [key=2, style=dotted, color=green];
d392 -> d393  [key=0, style=solid, color=green];
d393 -> n387  [key=0, style=solid, color=green];
d393 -> n388  [key=2, style=dotted, color=green];
d397 -> n391  [key=0, style=solid, color=green];
d400 -> n394  [key=0, style=solid, color=green];
d402 -> d403  [key=0, style=solid, color=green];
d403 -> d404  [key=0, style=solid, color=green];
d407 -> d408  [key=0, style=solid, color=green];
d407 -> n405  [key=2, style=dotted, color=green];
d405 -> d407  [key=0, style=solid, color=green];
d405 -> d408  [key=1, style=dashed, color=green, label=comparer];
d406 -> d407  [key=0, style=solid, color=green];
d406 -> d408  [key=1, style=dashed, color=green, label=comparer];
d408 -> d409  [key=0, style=solid, color=green];
d408 -> n405  [key=2, style=dotted, color=green];
d409 -> d410  [key=0, style=solid, color=green];
d409 -> n404  [key=0, style=solid, color=green];
d410 -> n404  [key=0, style=solid, color=green];
d410 -> n405  [key=2, style=dotted, color=green];
d404 -> d405  [key=0, style=solid, color=green];
d404 -> d406  [key=0, style=solid, color=green];
d414 -> n408  [key=0, style=solid, color=green];
d414 -> n409  [key=2, style=dotted, color=green];
d414 -> n410  [key=2, style=dotted, color=green];
d419 -> d420  [key=0, style=solid, color=green];
d419 -> n414  [key=0, style=solid, color=green];
d420 -> d419  [key=0, style=solid, color=green];
d420 -> n381  [key=2, style=dotted, color=green];
d423 -> d424  [key=0, style=solid, color=green];
d423 -> d427  [key=0, style=solid, color=green];
d423 -> d425  [key=1, style=dashed, color=green, label=option];
d427 -> n421  [key=0, style=solid, color=green];
d424 -> d423  [key=0, style=solid, color=green];
d424 -> d425  [key=0, style=solid, color=green];
d426 -> d423  [key=0, style=solid, color=green];
d426 -> d427  [key=1, style=dashed, color=green, label=requiredRulesAllMet];
d425 -> d426  [key=0, style=solid, color=green];
d425 -> n422  [key=2, style=dotted, color=green];
d430 -> d431  [key=0, style=solid, color=green];
d430 -> d432  [key=0, style=solid, color=green];
d431 -> n433  [key=0, style=solid, color=green];
d432 -> d433  [key=0, style=solid, color=green];
d432 -> d435  [key=0, style=solid, color=green];
d432 -> d434  [key=1, style=dashed, color=green, label=option];
d433 -> d432  [key=0, style=solid, color=green];
d433 -> d434  [key=0, style=solid, color=green];
d434 -> d432  [key=0, style=solid, color=green];
d434 -> n434  [key=2, style=dotted, color=green];
d435 -> d436  [key=0, style=solid, color=green];
d435 -> d439  [key=0, style=solid, color=green];
d435 -> d437  [key=1, style=dashed, color=green, label=info];
d436 -> d435  [key=0, style=solid, color=green];
d436 -> d437  [key=0, style=solid, color=green];
d439 -> n433  [key=0, style=solid, color=green];
d437 -> d438  [key=0, style=solid, color=green];
d437 -> n422  [key=2, style=dotted, color=green];
d438 -> n433  [key=0, style=solid, color=green];
d442 -> d443  [key=0, style=solid, color=green];
d442 -> d444  [key=1, style=dashed, color=green, label=setName];
d442 -> d445  [key=1, style=dashed, color=green, label=setName];
d443 -> d444  [key=0, style=solid, color=green];
d443 -> d445  [key=0, style=solid, color=green];
d443 -> n440  [key=2, style=dotted, color=green];
d444 -> d445  [key=0, style=solid, color=green];
d444 -> n389  [key=2, style=dotted, color=green];
d444 -> n441  [key=2, style=dotted, color=green];
d445 -> n439  [key=0, style=solid, color=green];
d445 -> n392  [key=2, style=dotted, color=green];
d449 -> d450  [key=0, style=solid, color=green];
d449 -> d457  [key=1, style=dashed, color=green, label=commandLineOptionsBase];
d450 -> d452  [key=0, style=solid, color=green];
d450 -> d451  [key=0, style=solid, color=green];
d457 -> n451  [key=0, style=solid, color=green];
d457 -> n96  [key=2, style=dotted, color=green];
d452 -> d453  [key=0, style=solid, color=green];
d452 -> n452  [key=2, style=dotted, color=green];
d452 -> d454  [key=1, style=dashed, color=green, label=error];
d452 -> d456  [key=1, style=dashed, color=green, label=error];
d452 -> d457  [key=1, style=dashed, color=green, label=error];
d453 -> d454  [key=0, style=solid, color=green];
d453 -> d455  [key=0, style=solid, color=green];
d454 -> d455  [key=0, style=solid, color=green];
d456 -> d457  [key=0, style=solid, color=green];
d455 -> d456  [key=0, style=solid, color=green];
d455 -> d457  [key=0, style=solid, color=green];
d451 -> n451  [key=0, style=solid, color=green];
d461 -> d462  [key=0, style=solid, color=green];
d462 -> n456  [key=0, style=solid, color=green];
d465 -> d466  [key=0, style=solid, color=green];
d465 -> n462  [key=2, style=dotted, color=green];
d465 -> d467  [key=1, style=dashed, color=green, label=leftHash];
d466 -> d467  [key=0, style=solid, color=green];
d466 -> n462  [key=2, style=dotted, color=green];
d467 -> n461  [key=0, style=solid, color=green];
d471 -> d472  [key=0, style=solid, color=green];
d471 -> d474  [key=1, style=dashed, color=green, label=other];
d472 -> d473  [key=0, style=solid, color=green];
d472 -> d474  [key=0, style=solid, color=green];
d474 -> n468  [key=0, style=solid, color=green];
d474 -> n469  [key=2, style=dotted, color=green];
d473 -> n468  [key=0, style=solid, color=green];
d477 -> n471  [key=0, style=solid, color=green];
d477 -> n152  [key=2, style=dotted, color=green];
d479 -> d480  [key=0, style=solid, color=green];
d479 -> n154  [key=2, style=dotted, color=green];
d480 -> n474  [key=0, style=solid, color=green];
d483 -> n477  [key=0, style=solid, color=green];
d483 -> n89  [key=2, style=dotted, color=green];
d486 -> d487  [key=0, style=solid, color=green];
d486 -> n484  [key=2, style=dotted, color=green];
d487 -> d488  [key=0, style=solid, color=green];
d488 -> d489  [key=0, style=solid, color=green];
d489 -> n483  [key=0, style=solid, color=green];
d493 -> n487  [key=0, style=solid, color=green];
d496 -> d497  [key=0, style=solid, color=green];
d496 -> d499  [key=0, style=solid, color=green];
d497 -> d498  [key=0, style=solid, color=green];
d499 -> n493  [key=0, style=solid, color=green];
d498 -> n493  [key=0, style=solid, color=green];
d502 -> n496  [key=0, style=solid, color=green];
d502 -> n240  [key=2, style=dotted, color=green];
d505 -> d506  [key=0, style=solid, color=green];
d505 -> d507  [key=0, style=solid, color=green];
d506 -> n504  [key=0, style=solid, color=green];
d506 -> n34  [key=2, style=dotted, color=green];
d507 -> d508  [key=0, style=solid, color=green];
d507 -> d510  [key=0, style=solid, color=green];
d508 -> d509  [key=0, style=solid, color=green];
d510 -> n504  [key=0, style=solid, color=green];
d509 -> n504  [key=0, style=solid, color=green];
d515 -> d516  [key=0, style=solid, color=green];
d516 -> d517  [key=0, style=solid, color=green];
d516 -> n66  [key=2, style=dotted, color=green];
d517 -> d518  [key=0, style=solid, color=green];
d517 -> n512  [key=0, style=solid, color=green];
d518 -> n512  [key=0, style=solid, color=green];
d518 -> n54  [key=2, style=dotted, color=green];
d521 -> d522  [key=0, style=solid, color=green];
d521 -> d523  [key=0, style=solid, color=green];
d522 -> n519  [key=0, style=solid, color=green];
d523 -> d524  [key=0, style=solid, color=green];
d524 -> d525  [key=0, style=solid, color=green];
d524 -> n124  [key=2, style=dotted, color=green];
d525 -> n519  [key=0, style=solid, color=green];
d532 -> n526  [key=0, style=solid, color=green];
d532 -> n475  [key=2, style=dotted, color=green];
d542 -> n536  [key=0, style=solid, color=green];
d545 -> n539  [key=0, style=solid, color=green];
d548 -> d549  [key=0, style=solid, color=green];
d549 -> n543  [key=0, style=solid, color=green];
d552 -> d553  [key=0, style=solid, color=green];
d553 -> n547  [key=0, style=solid, color=green];
d556 -> d557  [key=0, style=solid, color=green];
d557 -> d558  [key=0, style=solid, color=green];
d558 -> n552  [key=0, style=solid, color=green];
d561 -> d562  [key=0, style=solid, color=green];
d562 -> d563  [key=0, style=solid, color=green];
d563 -> d564  [key=0, style=solid, color=green];
d564 -> n558  [key=0, style=solid, color=green];
d567 -> n561  [key=0, style=solid, color=green];
d567 -> n548  [key=2, style=dotted, color=green];
d570 -> n564  [key=0, style=solid, color=green];
d570 -> n532  [key=2, style=dotted, color=green];
d573 -> d574  [key=0, style=solid, color=green];
d573 -> n484  [key=2, style=dotted, color=green];
d574 -> n568  [key=0, style=solid, color=green];
d577 -> n571  [key=0, style=solid, color=green];
d577 -> n572  [key=2, style=dotted, color=green];
d580 -> d581  [key=0, style=solid, color=green];
d580 -> n484  [key=2, style=dotted, color=green];
d581 -> d582  [key=0, style=solid, color=green];
d581 -> n484  [key=2, style=dotted, color=green];
d582 -> d583  [key=0, style=solid, color=green];
d582 -> n585  [key=2, style=dotted, color=green];
d582 -> d584  [key=1, style=dashed, color=green, label=pair];
d582 -> d586  [key=1, style=dashed, color=green, label=pair];
d583 -> d584  [key=0, style=solid, color=green];
d583 -> d590  [key=0, style=solid, color=green];
d584 -> d585  [key=0, style=solid, color=green];
d584 -> d589  [key=0, style=solid, color=green];
d584 -> n586  [key=2, style=dotted, color=green];
d584 -> n587  [key=2, style=dotted, color=green];
d586 -> d587  [key=0, style=solid, color=green];
d586 -> n8  [key=2, style=dotted, color=green];
d590 -> n584  [key=0, style=solid, color=green];
d590 -> n587  [key=2, style=dotted, color=green];
d585 -> d586  [key=0, style=solid, color=green];
d589 -> n584  [key=0, style=solid, color=green];
d587 -> d588  [key=0, style=solid, color=green];
d587 -> n588  [key=2, style=dotted, color=green];
d588 -> n584  [key=0, style=solid, color=green];
d596 -> d597  [key=0, style=solid, color=green];
d596 -> d615  [key=1, style=dashed, color=green, label=hadError];
d597 -> d598  [key=0, style=solid, color=green];
d597 -> n305  [key=2, style=dotted, color=green];
d597 -> d606  [key=1, style=dashed, color=green, label=optionMap];
d597 -> d615  [key=1, style=dashed, color=green, label=optionMap];
d615 -> d615  [key=1, style=dashed, color=green, label=hadError];
d615 -> d616  [key=0, style=solid, color=green];
d615 -> n406  [key=2, style=dotted, color=green];
d598 -> d599  [key=0, style=solid, color=green];
d598 -> n411  [key=2, style=dotted, color=green];
d606 -> d607  [key=0, style=solid, color=green];
d606 -> n90  [key=2, style=dotted, color=green];
d606 -> d610  [key=1, style=dashed, color=green, label=result];
d599 -> d600  [key=0, style=solid, color=green];
d599 -> n507  [key=2, style=dotted, color=green];
d599 -> d612  [key=1, style=dashed, color=green, label=target];
d599 -> d613  [key=1, style=dashed, color=green, label=target];
d600 -> d601  [key=0, style=solid, color=green];
d600 -> n478  [key=2, style=dotted, color=green];
d600 -> d602  [key=1, style=dashed, color=green, label=arguments];
d600 -> d606  [key=1, style=dashed, color=green, label=arguments];
d600 -> d611  [key=1, style=dashed, color=green, label=arguments];
d612 -> d613  [key=0, style=solid, color=green];
d612 -> d601  [key=0, style=solid, color=green];
d613 -> d614  [key=0, style=solid, color=green];
d613 -> d601  [key=0, style=solid, color=green];
d613 -> n513  [key=2, style=dotted, color=green];
d601 -> d615  [key=0, style=solid, color=green];
d601 -> d602  [key=0, style=solid, color=green];
d601 -> n123  [key=2, style=dotted, color=green];
d602 -> d613  [key=1, style=dashed, color=green, label=argument];
d602 -> d603  [key=0, style=solid, color=green];
d602 -> d604  [key=1, style=dashed, color=green, label=argument];
d611 -> d601  [key=0, style=solid, color=green];
d611 -> n123  [key=2, style=dotted, color=green];
d604 -> d606  [key=1, style=dashed, color=green, label=parser];
d604 -> d608  [key=1, style=dashed, color=green, label=parser];
d604 -> d605  [key=0, style=solid, color=green];
d604 -> n97  [key=2, style=dotted, color=green];
d605 -> d606  [key=0, style=solid, color=green];
d605 -> d612  [key=0, style=solid, color=green];
d607 -> d608  [key=0, style=solid, color=green];
d607 -> d610  [key=0, style=solid, color=green];
d610 -> d601  [key=0, style=solid, color=green];
d610 -> d611  [key=0, style=solid, color=green];
d608 -> d609  [key=0, style=solid, color=green];
d608 -> n611  [key=2, style=dotted, color=green];
d609 -> d615  [key=1, style=dashed, color=green, label=hadError];
d609 -> d601  [key=0, style=solid, color=green];
d614 -> d615  [key=1, style=dashed, color=green, label=hadError];
d614 -> d601  [key=0, style=solid, color=green];
d616 -> n610  [key=0, style=solid, color=green];
d603 -> d601  [key=0, style=solid, color=green];
d603 -> d604  [key=0, style=solid, color=green];
d603 -> n33  [key=2, style=dotted, color=green];
d619 -> d620  [key=0, style=solid, color=green];
d619 -> d623  [key=1, style=dashed, color=green, label=caseSensitive];
d619 -> d626  [key=1, style=dashed, color=green, label=caseSensitive];
d620 -> d621  [key=0, style=solid, color=green];
d620 -> d623  [key=1, style=dashed, color=green, label=i];
d620 -> d626  [key=1, style=dashed, color=green, label=i];
d620 -> d628  [key=1, style=dashed, color=green, label=i];
d623 -> d624  [key=0, style=solid, color=green];
d623 -> d625  [key=0, style=solid, color=green];
d623 -> n127  [key=2, style=dotted, color=green];
d626 -> d627  [key=0, style=solid, color=green];
d626 -> d628  [key=0, style=solid, color=green];
d626 -> n131  [key=2, style=dotted, color=green];
d628 -> d621  [key=0, style=solid, color=green];
d628 -> d628  [key=1, style=dashed, color=green, label=i];
d622 -> d623  [key=0, style=solid, color=green];
d622 -> d625  [key=0, style=solid, color=green];
d622 -> n33  [key=2, style=dotted, color=green];
d629 -> n623  [key=0, style=solid, color=green];
d625 -> d626  [key=0, style=solid, color=green];
d625 -> d628  [key=0, style=solid, color=green];
d625 -> n33  [key=2, style=dotted, color=green];
d624 -> n623  [key=0, style=solid, color=green];
d627 -> n623  [key=0, style=solid, color=green];
d631 -> d632  [key=0, style=solid, color=green];
d631 -> d633  [key=1, style=dashed, color=green, label=commandLineOptionsBase];
d632 -> d633  [key=0, style=solid, color=green];
d632 -> n627  [key=0, style=solid, color=green];
d633 -> n627  [key=0, style=solid, color=green];
d633 -> n628  [key=2, style=dotted, color=green];
d636 -> d637  [key=0, style=solid, color=green];
d636 -> n631  [key=0, style=solid, color=green];
d637 -> n631  [key=0, style=solid, color=green];
d637 -> n51  [key=2, style=dotted, color=green];
d639 -> d640  [key=0, style=solid, color=green];
d639 -> n634  [key=0, style=solid, color=green];
d639 -> n33  [key=2, style=dotted, color=green];
d640 -> n634  [key=0, style=solid, color=green];
d640 -> n635  [key=2, style=dotted, color=green];
d644 -> d645  [key=0, style=solid, color=green];
d644 -> n639  [key=0, style=solid, color=green];
d645 -> n639  [key=0, style=solid, color=green];
d645 -> n640  [key=2, style=dotted, color=green];
d648 -> d649  [key=0, style=solid, color=green];
d648 -> n89  [key=2, style=dotted, color=green];
d648 -> d657  [key=1, style=dashed, color=green, label=list];
d648 -> d658  [key=1, style=dashed, color=green, label=list];
d649 -> d650  [key=0, style=solid, color=green];
d649 -> d658  [key=0, style=solid, color=green];
d657 -> d651  [key=0, style=solid, color=green];
d657 -> n453  [key=2, style=dotted, color=green];
d657 -> n124  [key=2, style=dotted, color=green];
d658 -> n652  [key=0, style=solid, color=green];
d650 -> d651  [key=0, style=solid, color=green];
d650 -> n653  [key=2, style=dotted, color=green];
d650 -> n654  [key=2, style=dotted, color=green];
d651 -> d657  [key=1, style=dashed, color=green, label=property];
d651 -> d658  [key=0, style=solid, color=green];
d651 -> d652  [key=0, style=solid, color=green];
d651 -> d653  [key=1, style=dashed, color=green, label=property];
d651 -> d655  [key=1, style=dashed, color=green, label=property];
d655 -> d657  [key=1, style=dashed, color=green, label=attribute];
d655 -> d656  [key=0, style=solid, color=green];
d655 -> n656  [key=2, style=dotted, color=green];
d656 -> d657  [key=0, style=solid, color=green];
d656 -> d651  [key=0, style=solid, color=green];
d652 -> d651  [key=0, style=solid, color=green];
d652 -> d653  [key=0, style=solid, color=green];
d654 -> d651  [key=0, style=solid, color=green];
d654 -> d655  [key=0, style=solid, color=green];
d653 -> d654  [key=0, style=solid, color=green];
d653 -> n655  [key=2, style=dotted, color=green];
d664 -> d665  [key=0, style=solid, color=green];
d664 -> n653  [key=2, style=dotted, color=green];
d664 -> n665  [key=2, style=dotted, color=green];
d665 -> d666  [key=0, style=solid, color=green];
d665 -> d670  [key=0, style=solid, color=green];
d665 -> d667  [key=1, style=dashed, color=green, label=method];
d665 -> d669  [key=1, style=dashed, color=green, label=method];
d666 -> d665  [key=0, style=solid, color=green];
d666 -> d667  [key=0, style=solid, color=green];
d668 -> d665  [key=0, style=solid, color=green];
d668 -> d669  [key=0, style=solid, color=green];
d670 -> n664  [key=0, style=solid, color=green];
d667 -> d668  [key=0, style=solid, color=green];
d667 -> n656  [key=2, style=dotted, color=green];
d667 -> d669  [key=1, style=dashed, color=green, label=attribute];
d669 -> n664  [key=0, style=solid, color=green];
d669 -> n453  [key=2, style=dotted, color=green];
d674 -> d675  [key=0, style=solid, color=green];
d674 -> n653  [key=2, style=dotted, color=green];
d674 -> n665  [key=2, style=dotted, color=green];
d675 -> d676  [key=0, style=solid, color=green];
d675 -> d680  [key=0, style=solid, color=green];
d675 -> d677  [key=1, style=dashed, color=green, label=method];
d676 -> d675  [key=0, style=solid, color=green];
d676 -> d677  [key=0, style=solid, color=green];
d678 -> d675  [key=0, style=solid, color=green];
d678 -> d679  [key=0, style=solid, color=green];
d680 -> n674  [key=0, style=solid, color=green];
d677 -> d678  [key=0, style=solid, color=green];
d677 -> n656  [key=2, style=dotted, color=green];
d677 -> d679  [key=1, style=dashed, color=green, label=attribute];
d679 -> n674  [key=0, style=solid, color=green];
d683 -> d684  [key=0, style=solid, color=green];
d683 -> n89  [key=2, style=dotted, color=green];
d683 -> d691  [key=1, style=dashed, color=green, label=list];
d683 -> d692  [key=1, style=dashed, color=green, label=list];
d684 -> d685  [key=0, style=solid, color=green];
d684 -> n653  [key=2, style=dotted, color=green];
d684 -> n654  [key=2, style=dotted, color=green];
d691 -> d685  [key=0, style=solid, color=green];
d691 -> n124  [key=2, style=dotted, color=green];
d692 -> n686  [key=0, style=solid, color=green];
d685 -> d692  [key=0, style=solid, color=green];
d685 -> d686  [key=0, style=solid, color=green];
d685 -> d687  [key=1, style=dashed, color=green, label=property];
d685 -> d689  [key=1, style=dashed, color=green, label=property];
d689 -> d691  [key=1, style=dashed, color=green, label=attribute];
d689 -> d690  [key=0, style=solid, color=green];
d689 -> n656  [key=2, style=dotted, color=green];
d690 -> d691  [key=0, style=solid, color=green];
d690 -> d685  [key=0, style=solid, color=green];
d686 -> d685  [key=0, style=solid, color=green];
d686 -> d687  [key=0, style=solid, color=green];
d688 -> d685  [key=0, style=solid, color=green];
d688 -> d689  [key=0, style=solid, color=green];
d687 -> d688  [key=0, style=solid, color=green];
d687 -> n655  [key=2, style=dotted, color=green];
d695 -> d696  [key=0, style=solid, color=green];
d695 -> n694  [key=2, style=dotted, color=green];
d695 -> n695  [key=2, style=dotted, color=green];
d696 -> d697  [key=0, style=solid, color=green];
d696 -> n696  [key=2, style=dotted, color=green];
d696 -> d699  [key=1, style=dashed, color=green, label=a];
d697 -> d698  [key=0, style=solid, color=green];
d697 -> d699  [key=0, style=solid, color=green];
d699 -> n693  [key=0, style=solid, color=green];
d698 -> n693  [key=0, style=solid, color=green];
d704 -> n698  [key=0, style=solid, color=green];
d704 -> n699  [key=2, style=dotted, color=green];
d708 -> n702  [key=0, style=solid, color=green];
d708 -> n703  [key=2, style=dotted, color=green];
d711 -> d712  [key=0, style=solid, color=green];
d712 -> d713  [key=0, style=solid, color=green];
d712 -> d714  [key=2, style=dotted, color=green];
d713 -> d108  [key=0, style=bold, color=blue];
m0_10 -> m0_11  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_5  [key=2, style=dotted];
m0_11 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_11 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_6  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_18  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_19  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_16 -> m0_10  [key=0, style=bold, color=blue];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_91  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_6  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_129  [key=2, style=dotted];
m0_180 -> m0_176  [key=0, style=bold, color=blue];
m0_260 -> m0_261  [key=0, style=solid, color=green];
m0_261 -> m0_262  [key=0, style=solid, color=green];
m0_261 -> m0_91  [key=2, style=dotted, color=green];
m0_262 -> m0_263  [key=0, style=solid, color=green];
m0_262 -> m0_265  [key=2, style=dotted, color=green];
m0_262 -> m0_6  [key=2, style=dotted, color=green];
m0_263 -> m0_264  [key=0, style=solid, color=green];
m0_263 -> m0_129  [key=2, style=dotted, color=green];
m0_264 -> m0_260  [key=0, style=bold, color=blue];
m0_242 -> m0_243  [key=0, style=solid, color=green];
m0_243 -> m0_244  [key=0, style=solid, color=green];
m0_243 -> m0_91  [key=2, style=dotted, color=green];
m0_243 -> m0_246  [key=1, style=dashed, color=green, label=options];
m0_244 -> m0_245  [key=0, style=solid, color=green];
m0_244 -> m0_6  [key=2, style=dotted, color=green];
m0_246 -> m0_247  [key=0, style=solid, color=green];
m0_246 -> m0_18  [key=2, style=dotted, color=green];
m0_245 -> m0_246  [key=0, style=solid, color=green];
m0_245 -> m0_17  [key=2, style=dotted, color=green];
m0_247 -> m0_242  [key=0, style=bold, color=blue];
m0_284 -> m0_285  [key=0, style=solid, color=green];
m0_285 -> m0_286  [key=0, style=solid, color=green];
m0_285 -> m0_91  [key=2, style=dotted, color=green];
m0_286 -> m0_287  [key=0, style=solid, color=green];
m0_286 -> m0_289  [key=2, style=dotted, color=green];
m0_286 -> m0_6  [key=2, style=dotted, color=green];
m0_287 -> m0_288  [key=0, style=solid, color=green];
m0_287 -> m0_129  [key=2, style=dotted, color=green];
m0_288 -> m0_284  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [key=0, style=bold, color=blue];
m0_254 -> m0_255  [key=0, style=solid, color=green];
m0_255 -> m0_256  [key=0, style=solid, color=green];
m0_255 -> m0_91  [key=2, style=dotted, color=green];
m0_255 -> m0_258  [key=1, style=dashed, color=green, label=options];
m0_256 -> m0_257  [key=0, style=solid, color=green];
m0_256 -> m0_6  [key=2, style=dotted, color=green];
m0_258 -> m0_259  [key=0, style=solid, color=green];
m0_258 -> m0_18  [key=2, style=dotted, color=green];
m0_257 -> m0_258  [key=0, style=solid, color=green];
m0_257 -> m0_17  [key=2, style=dotted, color=green];
m0_259 -> m0_254  [key=0, style=bold, color=blue];
m0_248 -> m0_249  [key=0, style=solid, color=green];
m0_249 -> m0_250  [key=0, style=solid, color=green];
m0_249 -> m0_91  [key=2, style=dotted, color=green];
m0_249 -> m0_252  [key=1, style=dashed, color=green, label=options];
m0_250 -> m0_251  [key=0, style=solid, color=green];
m0_250 -> m0_6  [key=2, style=dotted, color=green];
m0_252 -> m0_253  [key=0, style=solid, color=green];
m0_252 -> m0_18  [key=2, style=dotted, color=green];
m0_251 -> m0_252  [key=0, style=solid, color=green];
m0_251 -> m0_17  [key=2, style=dotted, color=green];
m0_253 -> m0_248  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_6  [key=2, style=dotted];
m0_9 -> m0_7  [key=0, style=bold, color=blue];
m0_72 -> m0_73  [key=0, style=solid];
m0_73 -> m0_74  [key=0, style=solid];
m0_73 -> m0_80  [key=2, style=dotted];
m0_73 -> m0_76  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_73 -> m0_77  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_73 -> m0_78  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_6  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_18  [key=2, style=dotted];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_18  [key=2, style=dotted];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_19  [key=2, style=dotted];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_17  [key=2, style=dotted];
m0_79 -> m0_72  [key=0, style=bold, color=blue];
m0_224 -> m0_225  [key=0, style=solid, color=green];
m0_225 -> m0_226  [key=0, style=solid, color=green];
m0_225 -> m0_91  [key=2, style=dotted, color=green];
m0_225 -> m0_228  [key=1, style=dashed, color=green, label=options];
m0_226 -> m0_227  [key=0, style=solid, color=green];
m0_226 -> m0_6  [key=2, style=dotted, color=green];
m0_228 -> m0_229  [key=0, style=solid, color=green];
m0_228 -> m0_18  [key=2, style=dotted, color=green];
m0_227 -> m0_228  [key=0, style=solid, color=green];
m0_227 -> m0_17  [key=2, style=dotted, color=green];
m0_229 -> m0_224  [key=0, style=bold, color=blue];
m0_161 -> m0_162  [key=0, style=solid];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_6  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_129  [key=2, style=dotted];
m0_165 -> m0_161  [key=0, style=bold, color=blue];
m0_29 -> m0_30  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_39  [key=2, style=dotted];
m0_30 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_36  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_30 -> m0_37  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_6  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_40  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_40  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_41  [key=2, style=dotted];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_18  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_19  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_17  [key=2, style=dotted];
m0_38 -> m0_29  [key=0, style=bold, color=blue];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_5  [key=2, style=dotted];
m0_68 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_6  [key=2, style=dotted];
m0_69 -> m0_41  [key=2, style=dotted];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_19  [key=2, style=dotted];
m0_71 -> m0_67  [key=0, style=bold, color=blue];
m0_278 -> m0_279  [key=0, style=solid, color=green];
m0_279 -> m0_280  [key=0, style=solid, color=green];
m0_279 -> m0_91  [key=2, style=dotted, color=green];
m0_280 -> m0_281  [key=0, style=solid, color=green];
m0_280 -> m0_283  [key=2, style=dotted, color=green];
m0_280 -> m0_6  [key=2, style=dotted, color=green];
m0_281 -> m0_282  [key=0, style=solid, color=green];
m0_281 -> m0_129  [key=2, style=dotted, color=green];
m0_282 -> m0_278  [key=0, style=bold, color=blue];
m0_52 -> m0_53  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_65  [key=2, style=dotted];
m0_53 -> m0_56  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_57  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_58  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_59  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_60  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_61  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_62  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_53 -> m0_63  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_6  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_18  [key=2, style=dotted];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_66  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_18  [key=2, style=dotted];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_66  [key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_60 -> m0_18  [key=2, style=dotted];
m0_61 -> m0_62  [key=0, style=solid];
m0_61 -> m0_66  [key=2, style=dotted];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_18  [key=2, style=dotted];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_66  [key=2, style=dotted];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_17  [key=2, style=dotted];
m0_64 -> m0_52  [key=0, style=bold, color=blue];
m0_191 -> m0_192  [key=0, style=solid];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_91  [key=2, style=dotted];
m0_193 -> m0_194  [key=0, style=solid];
m0_193 -> m0_6  [key=2, style=dotted];
m0_194 -> m0_195  [key=0, style=solid];
m0_194 -> m0_129  [key=2, style=dotted];
m0_195 -> m0_191  [key=0, style=bold, color=blue];
m0_151 -> m0_152  [key=0, style=solid];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_159  [key=2, style=dotted];
m0_152 -> n534  [key=2, style=dotted];
m0_152 -> m0_154  [key=1, style=dashed, color=darkseagreen4, label=local];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_144  [key=2, style=dotted];
m0_153 -> m0_156  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_153 -> m0_157  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_6  [key=2, style=dotted];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_18  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_18  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_17  [key=2, style=dotted];
m0_158 -> m0_151  [key=0, style=bold, color=blue];
m0_218 -> m0_219  [key=0, style=solid, color=green];
m0_219 -> m0_220  [key=0, style=solid, color=green];
m0_219 -> m0_91  [key=2, style=dotted, color=green];
m0_219 -> m0_222  [key=1, style=dashed, color=green, label=options];
m0_220 -> m0_221  [key=0, style=solid, color=green];
m0_220 -> m0_6  [key=2, style=dotted, color=green];
m0_222 -> m0_223  [key=0, style=solid, color=green];
m0_222 -> m0_18  [key=2, style=dotted, color=green];
m0_221 -> m0_222  [key=0, style=solid, color=green];
m0_221 -> m0_17  [key=2, style=dotted, color=green];
m0_223 -> m0_218  [key=0, style=bold, color=blue];
m0_135 -> m0_136  [key=0, style=solid];
m0_136 -> m0_137  [key=0, style=solid];
m0_136 -> m0_143  [key=2, style=dotted];
m0_136 -> m0_138  [key=1, style=dashed, color=darkseagreen4, label=local];
m0_137 -> m0_138  [key=0, style=solid];
m0_137 -> m0_144  [key=2, style=dotted];
m0_137 -> m0_140  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_137 -> m0_141  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_6  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_18  [key=2, style=dotted];
m0_141 -> m0_142  [key=0, style=solid];
m0_141 -> m0_18  [key=2, style=dotted];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_17  [key=2, style=dotted];
m0_142 -> m0_135  [key=0, style=bold, color=blue];
m0_81 -> m0_82  [key=0, style=solid];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_88  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_90  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_91  [key=2, style=dotted];
m0_84 -> m0_87  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_6  [key=2, style=dotted];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_18  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_17  [key=2, style=dotted];
m0_89 -> m0_81  [key=0, style=bold, color=blue];
m0_130 -> m0_131  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_5  [key=2, style=dotted];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_6  [key=2, style=dotted];
m0_133 -> m0_134  [key=0, style=solid];
m0_133 -> m0_129  [key=2, style=dotted];
m0_134 -> m0_130  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_5  [key=2, style=dotted];
m0_21 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_21 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_21 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_21 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_6  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_18  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_18  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_18  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_19  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_17  [key=2, style=dotted];
m0_28 -> m0_20  [key=0, style=bold, color=blue];
m0_202 -> m0_203  [key=0, style=solid];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_211  [key=2, style=dotted];
m0_203 -> m0_206  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_203 -> m0_207  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_203 -> m0_208  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_203 -> m0_209  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_6  [key=2, style=dotted];
m0_206 -> m0_207  [key=0, style=solid];
m0_206 -> m0_18  [key=2, style=dotted];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_18  [key=2, style=dotted];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_18  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_18  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_17  [key=2, style=dotted];
m0_210 -> m0_202  [key=0, style=bold, color=blue];
m0_145 -> m0_146  [key=0, style=solid];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_143  [key=2, style=dotted];
m0_146 -> m0_148  [key=1, style=dashed, color=darkseagreen4, label=local];
m0_147 -> m0_148  [key=0, style=solid];
m0_147 -> m0_144  [key=2, style=dotted];
m0_148 -> m0_149  [key=0, style=solid];
m0_148 -> m0_6  [key=2, style=dotted];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_129  [key=2, style=dotted];
m0_150 -> m0_145  [key=0, style=bold, color=blue];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_5  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_4 -> m0_2  [key=0, style=bold, color=blue];
m0_119 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=2, style=dotted];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_6  [key=2, style=dotted];
m0_122 -> m0_119  [key=0, style=bold, color=blue];
m0_196 -> m0_197  [key=0, style=solid];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_5  [key=2, style=dotted];
m0_197 -> m0_200  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_198 -> m0_199  [key=0, style=solid];
m0_198 -> m0_6  [key=2, style=dotted];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_18  [key=2, style=dotted];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_17  [key=2, style=dotted];
m0_201 -> m0_196  [key=0, style=bold, color=blue];
m0_212 -> m0_213  [key=0, style=solid, color=green];
m0_212 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_86  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_96  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_97  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_104  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_112  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_133  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_155  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_163  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_164  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_168  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_169  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_173  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_174  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_178  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_179  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_183  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_184  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_188  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_189  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_193  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_194  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_198  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_199  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_204  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_205  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_214  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_215  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_220  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_221  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_226  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_227  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_232  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_233  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_238  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_239  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_244  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_245  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_250  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_251  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_256  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_257  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_262  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_263  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_268  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_269  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_274  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_275  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_280  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_281  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_286  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_212 -> m0_287  [key=1, style=dashed, color=green, label="CommandLine.Tests.CommandLineParserFixture"];
m0_213 -> m0_214  [key=0, style=solid, color=green];
m0_213 -> m0_5  [key=2, style=dotted, color=green];
m0_213 -> m0_216  [key=1, style=dashed, color=green, label=options];
m0_214 -> m0_215  [key=0, style=solid, color=green];
m0_214 -> m0_6  [key=2, style=dotted, color=green];
m0_216 -> m0_217  [key=0, style=solid, color=green];
m0_216 -> m0_18  [key=2, style=dotted, color=green];
m0_215 -> m0_216  [key=0, style=solid, color=green];
m0_215 -> m0_17  [key=2, style=dotted, color=green];
m0_217 -> m0_212  [key=0, style=bold, color=blue];
m0_266 -> m0_267  [key=0, style=solid, color=green];
m0_267 -> m0_268  [key=0, style=solid, color=green];
m0_267 -> m0_91  [key=2, style=dotted, color=green];
m0_268 -> m0_269  [key=0, style=solid, color=green];
m0_268 -> m0_271  [key=2, style=dotted, color=green];
m0_268 -> m0_6  [key=2, style=dotted, color=green];
m0_269 -> m0_270  [key=0, style=solid, color=green];
m0_269 -> m0_129  [key=2, style=dotted, color=green];
m0_270 -> m0_266  [key=0, style=bold, color=blue];
m0_230 -> m0_231  [key=0, style=solid, color=green];
m0_231 -> m0_232  [key=0, style=solid, color=green];
m0_231 -> m0_91  [key=2, style=dotted, color=green];
m0_231 -> m0_234  [key=1, style=dashed, color=green, label=options];
m0_232 -> m0_233  [key=0, style=solid, color=green];
m0_232 -> m0_6  [key=2, style=dotted, color=green];
m0_234 -> m0_235  [key=0, style=solid, color=green];
m0_234 -> m0_18  [key=2, style=dotted, color=green];
m0_233 -> m0_234  [key=0, style=solid, color=green];
m0_233 -> m0_17  [key=2, style=dotted, color=green];
m0_235 -> m0_230  [key=0, style=bold, color=blue];
m0_42 -> m0_43  [key=0, style=solid];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_39  [key=2, style=dotted];
m0_43 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_47  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_48  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_43 -> m0_50  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_6  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_40  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_41  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_41  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_18  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_19  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_17  [key=2, style=dotted];
m0_51 -> m0_42  [key=0, style=bold, color=blue];
m0_166 -> m0_167  [key=0, style=solid];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_91  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_6  [key=2, style=dotted];
m0_169 -> m0_170  [key=0, style=solid];
m0_169 -> m0_129  [key=2, style=dotted];
m0_170 -> m0_166  [key=0, style=bold, color=blue];
m0_181 -> m0_182  [key=0, style=solid];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_91  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_6  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_129  [key=2, style=dotted];
m0_185 -> m0_181  [key=0, style=bold, color=blue];
m0_236 -> m0_237  [key=0, style=solid, color=green];
m0_237 -> m0_238  [key=0, style=solid, color=green];
m0_237 -> m0_91  [key=2, style=dotted, color=green];
m0_237 -> m0_240  [key=1, style=dashed, color=green, label=options];
m0_238 -> m0_239  [key=0, style=solid, color=green];
m0_238 -> m0_6  [key=2, style=dotted, color=green];
m0_240 -> m0_241  [key=0, style=solid, color=green];
m0_240 -> m0_18  [key=2, style=dotted, color=green];
m0_239 -> m0_240  [key=0, style=solid, color=green];
m0_239 -> m0_17  [key=2, style=dotted, color=green];
m0_241 -> m0_236  [key=0, style=bold, color=blue];
m0_110 -> m0_111  [key=0, style=solid];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_118  [key=2, style=dotted];
m0_111 -> m0_114  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_111 -> m0_115  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_111 -> m0_116  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_6  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_18  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_18  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_18  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_17  [key=2, style=dotted];
m0_117 -> m0_110  [key=0, style=bold, color=blue];
m0_272 -> m0_273  [key=0, style=solid, color=green];
m0_273 -> m0_274  [key=0, style=solid, color=green];
m0_273 -> m0_91  [key=2, style=dotted, color=green];
m0_274 -> m0_275  [key=0, style=solid, color=green];
m0_274 -> m0_277  [key=2, style=dotted, color=green];
m0_274 -> m0_6  [key=2, style=dotted, color=green];
m0_275 -> m0_276  [key=0, style=solid, color=green];
m0_275 -> m0_129  [key=2, style=dotted, color=green];
m0_276 -> m0_272  [key=0, style=bold, color=blue];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_99  [key=1, style=dashed, color=darkseagreen4, label=actualCulture];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_90  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_91  [key=2, style=dotted];
m0_95 -> m0_98  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_6  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_18  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_17  [key=2, style=dotted];
m0_100 -> m0_92  [key=0, style=bold, color=blue];
m0_186 -> m0_187  [key=0, style=solid];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_91  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_6  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_129  [key=2, style=dotted];
m0_190 -> m0_186  [key=0, style=bold, color=blue];
m0_101 -> m0_102  [key=0, style=solid];
m0_102 -> m0_103  [key=0, style=solid];
m0_102 -> m0_109  [key=2, style=dotted];
m0_102 -> m0_105  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_102 -> m0_106  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_102 -> m0_107  [key=1, style=dashed, color=darkseagreen4, label=options];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_6  [key=2, style=dotted];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_18  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_18  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_18  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_17  [key=2, style=dotted];
m0_108 -> m0_101  [key=0, style=bold, color=blue];
m0_124 -> m0_125  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_5  [key=2, style=dotted];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_6  [key=2, style=dotted];
m0_127 -> m0_128  [key=0, style=solid];
m0_127 -> m0_129  [key=2, style=dotted];
m0_128 -> m0_124  [key=0, style=bold, color=blue];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_91  [key=2, style=dotted];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_6  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_129  [key=2, style=dotted];
m0_175 -> m0_171  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_21 -> m1_9  [key=3, color=darkorchid, style=bold, label="Parameter variable SampleApp.Program.Options options"];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_47  [key=2, style=dotted];
m1_24 -> m1_48  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_48  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_48  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_50  [key=2, style=dotted];
m1_30 -> m1_51  [key=2, style=dotted];
m1_30 -> m1_48  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_48  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_52  [key=2, style=dotted];
m1_32 -> m1_51  [key=2, style=dotted];
m1_32 -> m1_48  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_40  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_43  [key=0, style=solid];
m1_41 -> m1_57  [key=2, style=dotted];
m1_42 -> m1_45  [key=0, style=solid];
m1_42 -> m1_58  [key=2, style=dotted];
m1_42 -> m1_59  [key=2, style=dotted];
m1_23 -> m1_25  [key=0, style=solid];
m1_23 -> m1_46  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_49  [key=2, style=dotted];
m1_28 -> m1_27  [key=0, style=solid];
m1_28 -> m1_48  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_53  [key=2, style=dotted];
m1_34 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_34 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_34 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=builder];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_49  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_54  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_54  [key=2, style=dotted];
m1_38 -> m1_36  [key=0, style=solid];
m1_38 -> m1_54  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_55  [key=2, style=dotted];
m1_39 -> m1_56  [key=2, style=dotted];
m1_39 -> m1_46  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_59  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_46  [key=2, style=dotted];
m1_45 -> m1_21  [key=0, style=bold, color=blue];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_16  [key=2, style=dotted];
m1_9 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_9 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=options];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_11 -> m1_19  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> n565  [key=2, style=dotted];
m1_10 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_21  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_20  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_8  [key=0, style=bold, color=blue];
m1_60 -> m1_1  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
m1_60 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="SampleApp.Program.Options"];
}
