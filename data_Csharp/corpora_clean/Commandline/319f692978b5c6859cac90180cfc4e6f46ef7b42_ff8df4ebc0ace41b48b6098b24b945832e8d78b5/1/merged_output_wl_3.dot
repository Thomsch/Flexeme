digraph  {
n0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="17-17"];
n1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Scalar && (spec.Min > 0 || spec.Max > 0);", span="19-19"];
n2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="17-17"];
n4 [cluster="lambda expression", label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Scalar && (spec.Min > 0 || spec.Max > 0)", span="19-19"];
n3 [cluster="lambda expression", label="Entry lambda expression", span="19-19"];
n5 [cluster="lambda expression", label="Exit lambda expression", span="19-19"];
n6 [cluster="System.Type.ToDescriptorKind()", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
n7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="22-22"];
n8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="24-25"];
n9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="22-22"];
n11 [cluster="lambda expression", label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="24-25"];
n10 [cluster="lambda expression", label="Entry lambda expression", span="24-25"];
n12 [cluster="lambda expression", label="Exit lambda expression", span="24-25"];
n13 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70"];
n14 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="75-75"];
n15 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="28-28"];
n16 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="30-30"];
n17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="28-28"];
n19 [cluster="lambda expression", label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="30-30"];
n18 [cluster="lambda expression", label="Entry lambda expression", span="30-30"];
n20 [cluster="lambda expression", label="Exit lambda expression", span="30-30"];
n21 [cluster="CommandLine.Core.Specification.IsOption()", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
n22 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", span="33-33"];
n23 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", color=red, community=0, label="0: return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && spec.Min == 0 || spec.Max == 0;", span="35-36"];
n24 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", span="33-33"];
n26 [cluster="lambda expression", color=red, community=0, label="0: spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && spec.Min == 0 || spec.Max == 0", span="35-36"];
n25 [cluster="lambda expression", label="Entry lambda expression", span="35-36"];
n27 [cluster="lambda expression", label="Exit lambda expression", span="35-36"];
d27 [cluster="CommandLine.Text.Example.GetHashCode()", color=green, community=0, label="0: return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="76-76"];
d41 [label="CommandLine.Text.Example", span=""];
d26 [cluster="CommandLine.Text.Example.GetHashCode()", label="Entry CommandLine.Text.Example.GetHashCode()", span="74-74"];
d28 [cluster="CommandLine.Text.Example.GetHashCode()", label="Exit CommandLine.Text.Example.GetHashCode()", span="74-74"];
d29 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
d32 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", color=green, community=0, label="0: return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="91-93"];
d24 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84"];
d30 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="other == null", span="86-86"];
d33 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84"];
d34 [cluster="string.Equals(string)", label="Entry string.Equals(string)", span="0-0"];
d35 [cluster="Unk.SequenceEqual", label="Entry Unk.SequenceEqual", span=""];
d25 [cluster="object.Equals(object)", label="Entry object.Equals(object)", span="0-0"];
d7 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="this.helpText = helpText", span="24-24"];
d8 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="this.formatStyles = formatStyles", span="25-25"];
d9 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="this.sample = sample", span="26-26"];
d21 [cluster="CommandLine.Text.Example.Equals(object)", label="return Equals(other);", span="64-64"];
d22 [cluster="CommandLine.Text.Example.Equals(object)", label="return base.Equals(obj);", span="67-67"];
d18 [cluster="CommandLine.Text.Example.Equals(object)", label="Entry CommandLine.Text.Example.Equals(object)", span="59-59"];
d19 [cluster="CommandLine.Text.Example.Equals(object)", label="var other = obj as Example", span="61-61"];
d31 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="return false;", span="88-88"];
d0 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18"];
d5 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="sample == null", span="22-22"];
d10 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18"];
d20 [cluster="CommandLine.Text.Example.Equals(object)", label="other != null", span="62-62"];
d23 [cluster="CommandLine.Text.Example.Equals(object)", label="Exit CommandLine.Text.Example.Equals(object)", span="59-59"];
d40 [cluster="CommandLine.UnParserSettings.UnParserSettings()", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
d1 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="string.IsNullOrEmpty(helpText)", span="20-20"];
d3 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="formatStyles == null", span="21-21"];
d6 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="throw new ArgumentNullException(''sample'');", span="22-22"];
d2 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="20-20"];
d4 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="throw new ArgumentNullException(''formatStyles'');", span="21-21"];
d37 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", label="return example.FormatStyles.Any()\r\n                ? example.FormatStyles\r\n                : new[] { new UnParserSettings { Consumed = true } };", span="113-115"];
d11 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d12 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d36 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", label="Entry CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111"];
d38 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", label="Exit CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111"];
d39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_17 [cluster="System.Type.InstanceProperty(string, object)", file="UnParserExtensions.cs", label="Entry System.Type.InstanceProperty(string, object)", span="213-213"];
m2_3 [cluster="System.Type.GetGenericArguments()", file="UnParserExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_13 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="36-36"];
m2_14 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="return typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .InstanceProperty(\r\n                    ''Value'', value);", span="38-41"];
m2_15 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="36-36"];
m2_18 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="44-44"];
m2_19 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="return (bool)typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .StaticMethod(\r\n                    ''get_IsSome'', value);", span="46-49"];
m2_20 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="44-44"];
m2_16 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m2_12 [cluster="System.Type.StaticProperty(string)", file="UnParserExtensions.cs", label="Entry System.Type.StaticProperty(string)", span="198-198"];
m2_4 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="20-20"];
m2_5 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="UnParserExtensions.cs", label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticMethod(\r\n                        ''Some'', value);", span="22-25"];
m2_6 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="UnParserExtensions.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="20-20"];
m2_9 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="28-28"];
m2_10 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="UnParserExtensions.cs", label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticProperty(\r\n                        ''None'');", span="30-33"];
m2_11 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="UnParserExtensions.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="28-28"];
m2_7 [cluster="System.Type.MakeGenericType(params System.Type[])", file="UnParserExtensions.cs", label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0"];
m2_8 [cluster="System.Type.StaticMethod(string, params object[])", file="UnParserExtensions.cs", label="Entry System.Type.StaticMethod(string, params object[])", span="183-183"];
m2_0 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="11-11"];
m2_1 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="UnParserExtensions.cs", label="return type\r\n#if NETSTANDARD1_5\r\n                .GetTypeInfo()\r\n#endif\r\n                .GetGenericArguments()[0];", span="13-17"];
m2_2 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="UnParserExtensions.cs", label="Exit CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="11-11"];
m3_0 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", file="UsageAttribute.cs", label="Entry CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", span="12-12"];
m3_1 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="UsageAttribute.cs", label="1: this.groups = groups", span="14-14"];
m3_2 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", file="UsageAttribute.cs", label="Exit CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", span="12-12"];
m3_3 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="UsageAttribute.cs", label="Entry CommandLine.Text.UsageAttribute.UsageAttribute()", span="17-17"];
m3_4 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="UsageAttribute.cs", label="Exit CommandLine.Text.UsageAttribute.UsageAttribute()", span="17-17"];
m3_5 [file="UsageAttribute.cs", label="CommandLine.Text.UsageAttribute", span=""];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n2 -> n0  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n5 -> n3  [color=blue, key=0, style=bold];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n9 -> n7  [color=blue, key=0, style=bold];
n11 -> n12  [key=0, style=solid];
n11 -> n6  [key=2, style=dotted];
n11 -> n13  [key=2, style=dotted];
n11 -> n14  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n12 -> n10  [color=blue, key=0, style=bold];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n17 -> n15  [color=blue, key=0, style=bold];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n20 -> n18  [color=blue, key=0, style=bold];
n22 -> n23  [color=red, key=0, style=solid];
n23 -> n24  [color=red, key=0, style=solid];
n23 -> n26  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
n24 -> n22  [color=blue, key=0, style=bold];
n26 -> n27  [color=red, key=0, style=solid];
n26 -> n6  [color=red, key=2, style=dotted];
n25 -> n26  [color=red, key=0, style=solid];
n27 -> n25  [color=blue, key=0, style=bold];
d27 -> d28  [color=green, key=0, style=solid];
d27 -> d29  [color=green, key=2, style=dotted];
d41 -> d27  [color=green, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d32  [color=green, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d7  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d8  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d9  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d21  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d22  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d26 -> d27  [color=green, key=0, style=solid];
d28 -> d26  [color=blue, key=0, style=bold];
d32 -> d33  [color=green, key=0, style=solid];
d32 -> d34  [color=green, key=2, style=dotted];
d32 -> d35  [color=green, key=2, style=dotted];
d32 -> d25  [color=green, key=2, style=dotted];
d24 -> d32  [color=green, key=1, label="CommandLine.Text.Example", style=dashed];
d24 -> d30  [key=0, style=solid];
d24 -> d19  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.Example other", style=bold];
d24 -> d31  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d30 -> d32  [color=green, key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d33 -> d24  [color=blue, key=0, style=bold];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d21 -> d24  [key=2, style=dotted];
d21 -> d23  [key=0, style=solid];
d22 -> d25  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d18 -> d24  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d18 -> d22  [color=darkseagreen4, key=1, label=object, style=dashed];
d18 -> d19  [key=0, style=solid];
d19 -> d21  [color=darkseagreen4, key=1, label=other, style=dashed];
d19 -> d20  [key=0, style=solid];
d31 -> d33  [key=0, style=solid];
d0 -> d7  [color=darkseagreen4, key=1, label=string, style=dashed];
d0 -> d8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
d0 -> d9  [color=darkseagreen4, key=1, label=object, style=dashed];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
d0 -> d5  [color=darkseagreen4, key=1, label=object, style=dashed];
d5 -> d7  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d10 -> d0  [color=blue, key=0, style=bold];
d20 -> d21  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d23 -> d18  [color=blue, key=0, style=bold];
d40 -> d0  [color=darkorchid, key=3, label="Field variable System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings> formatStyles", style=bold];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d1 -> d11  [key=2, style=dotted];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d6 -> d10  [key=0, style=solid];
d6 -> d13  [key=2, style=dotted];
d2 -> d10  [key=0, style=solid];
d2 -> d12  [key=2, style=dotted];
d4 -> d10  [key=0, style=solid];
d4 -> d13  [key=2, style=dotted];
d37 -> d40  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d38 -> d36  [color=blue, key=0, style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_0  [key=2, style=dotted];
m2_14 -> m2_7  [key=2, style=dotted];
m2_14 -> m2_17  [key=2, style=dotted];
m2_14 -> m2_1  [color=darkorchid, key=3, label="Parameter variable System.StringComparer nameComparer", style=bold];
m2_14 -> m2_5  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>> tokenizer", style=bold];
m2_15 -> m2_13  [color=blue, key=0, style=bold];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_16  [key=2, style=dotted];
m2_19 -> m2_0  [key=2, style=dotted];
m2_19 -> m2_7  [key=2, style=dotted];
m2_19 -> m2_8  [key=2, style=dotted];
m2_20 -> m2_18  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_7  [key=2, style=dotted];
m2_10 -> m2_12  [key=2, style=dotted];
m2_11 -> m2_9  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_3  [color=blue, key=0, style=bold];
m3_5 -> m3_1  [color=red, key=1, label="CommandLine.Text.UsageAttribute", style=dashed];
}
