digraph  {
n0 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="17-17", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()"];
n1 [label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Scalar && (spec.Min > 0 || spec.Max > 0);", span="19-19", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()"];
n2 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="17-17", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()"];
n4 [label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Scalar && (spec.Min > 0 || spec.Max > 0)", span="19-19", cluster="lambda expression"];
n3 [label="Entry lambda expression", span="19-19", cluster="lambda expression"];
n5 [label="Exit lambda expression", span="19-19", cluster="lambda expression"];
n6 [label="Entry System.Type.ToDescriptorKind()", span="22-22", cluster="System.Type.ToDescriptorKind()"];
n7 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="22-22", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()"];
n8 [label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="24-25", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()"];
n9 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="22-22", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()"];
n11 [label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="24-25", cluster="lambda expression"];
n10 [label="Entry lambda expression", span="24-25", cluster="lambda expression"];
n12 [label="Exit lambda expression", span="24-25", cluster="lambda expression"];
n13 [label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="70-70", cluster="CommandLine.Core.Specification.IsMinNotSpecified()"];
n14 [label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="75-75", cluster="CommandLine.Core.Specification.IsMaxNotSpecified()"];
n15 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="28-28", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()"];
n16 [label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="30-30", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()"];
n17 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="28-28", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()"];
n19 [label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="30-30", cluster="lambda expression"];
n18 [label="Entry lambda expression", span="30-30", cluster="lambda expression"];
n20 [label="Exit lambda expression", span="30-30", cluster="lambda expression"];
n21 [label="Entry CommandLine.Core.Specification.IsOption()", span="11-11", cluster="CommandLine.Core.Specification.IsOption()"];
n22 [label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", span="33-33", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()"];
n23 [label="return spec => spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && spec.Min == 0 || spec.Max == 0;", span="35-36", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", color=red, community=0];
n24 [label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()", span="33-33", cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithZeroRange()"];
n26 [label="spec.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                && spec.Min == 0 || spec.Max == 0", span="35-36", cluster="lambda expression", color=red, community=0];
n25 [label="Entry lambda expression", span="35-36", cluster="lambda expression"];
n27 [label="Exit lambda expression", span="35-36", cluster="lambda expression"];
d27 [label="return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="76-76", cluster="CommandLine.Text.Example.GetHashCode()", color=green, community=0];
d41 [label="CommandLine.Text.Example", span=""];
d26 [label="Entry CommandLine.Text.Example.GetHashCode()", span="74-74", cluster="CommandLine.Text.Example.GetHashCode()"];
d28 [label="Exit CommandLine.Text.Example.GetHashCode()", span="74-74", cluster="CommandLine.Text.Example.GetHashCode()"];
d29 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
d32 [label="return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="91-93", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", color=green, community=0];
d24 [label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d30 [label="other == null", span="86-86", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d33 [label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d34 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)"];
d35 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual"];
d25 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)"];
d7 [label="this.helpText = helpText", span="24-24", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d8 [label="this.formatStyles = formatStyles", span="25-25", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d9 [label="this.sample = sample", span="26-26", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d21 [label="return Equals(other);", span="64-64", cluster="CommandLine.Text.Example.Equals(object)"];
d22 [label="return base.Equals(obj);", span="67-67", cluster="CommandLine.Text.Example.Equals(object)"];
d18 [label="Entry CommandLine.Text.Example.Equals(object)", span="59-59", cluster="CommandLine.Text.Example.Equals(object)"];
d19 [label="var other = obj as Example", span="61-61", cluster="CommandLine.Text.Example.Equals(object)"];
d31 [label="return false;", span="88-88", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d0 [label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d5 [label="sample == null", span="22-22", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d10 [label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d20 [label="other != null", span="62-62", cluster="CommandLine.Text.Example.Equals(object)"];
d23 [label="Exit CommandLine.Text.Example.Equals(object)", span="59-59", cluster="CommandLine.Text.Example.Equals(object)"];
d40 [label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15", cluster="CommandLine.UnParserSettings.UnParserSettings()"];
d1 [label="string.IsNullOrEmpty(helpText)", span="20-20", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d3 [label="formatStyles == null", span="21-21", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d6 [label="throw new ArgumentNullException(''sample'');", span="22-22", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d2 [label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="20-20", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d4 [label="throw new ArgumentNullException(''formatStyles'');", span="21-21", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d37 [label="return example.FormatStyles.Any()\r\n                ? example.FormatStyles\r\n                : new[] { new UnParserSettings { Consumed = true } };", span="113-115", cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)"];
d11 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d12 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d36 [label="Entry CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111", cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)"];
d38 [label="Exit CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111", cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)"];
d39 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
m2_17 [label="Entry System.Type.InstanceProperty(string, object)", span="213-213", cluster="System.Type.InstanceProperty(string, object)", file="UnParserExtensions.cs"];
m2_3 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="UnParserExtensions.cs"];
m2_13 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="36-36", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs"];
m2_14 [label="return typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .InstanceProperty(\r\n                    ''Value'', value);", span="38-41", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs"];
m2_15 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="36-36", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs"];
m2_18 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="44-44", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs"];
m2_19 [label="return (bool)typeof(FSharpOption<>)\r\n                .MakeGenericType(GetUnderlyingType(value.GetType()))\r\n                .StaticMethod(\r\n                    ''get_IsSome'', value);", span="46-49", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs"];
m2_20 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="44-44", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs"];
m2_16 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="UnParserExtensions.cs"];
m2_12 [label="Entry System.Type.StaticProperty(string)", span="198-198", cluster="System.Type.StaticProperty(string)", file="UnParserExtensions.cs"];
m2_4 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="20-20", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="UnParserExtensions.cs"];
m2_5 [label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticMethod(\r\n                        ''Some'', value);", span="22-25", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="UnParserExtensions.cs"];
m2_6 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="20-20", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="UnParserExtensions.cs"];
m2_9 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="28-28", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="UnParserExtensions.cs"];
m2_10 [label="return typeof(FSharpOption<>)\r\n                    .MakeGenericType(type)\r\n                    .StaticProperty(\r\n                        ''None'');", span="30-33", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="UnParserExtensions.cs"];
m2_11 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="28-28", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="UnParserExtensions.cs"];
m2_7 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="UnParserExtensions.cs"];
m2_8 [label="Entry System.Type.StaticMethod(string, params object[])", span="183-183", cluster="System.Type.StaticMethod(string, params object[])", file="UnParserExtensions.cs"];
m2_0 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="11-11", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="UnParserExtensions.cs"];
m2_1 [label="return type\r\n#if NETSTANDARD1_5\r\n                .GetTypeInfo()\r\n#endif\r\n                .GetGenericArguments()[0];", span="13-17", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="UnParserExtensions.cs"];
m2_2 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="11-11", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="UnParserExtensions.cs"];
m3_0 [label="Entry CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", span="12-12", cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", file="UsageAttribute.cs"];
m3_1 [label="this.groups = groups", span="14-14", cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="UsageAttribute.cs"];
m3_2 [label="Exit CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", span="12-12", cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", file="UsageAttribute.cs"];
m3_3 [label="Entry CommandLine.Text.UsageAttribute.UsageAttribute()", span="17-17", cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="UsageAttribute.cs"];
m3_4 [label="Exit CommandLine.Text.UsageAttribute.UsageAttribute()", span="17-17", cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="UsageAttribute.cs"];
m3_5 [label="CommandLine.Text.UsageAttribute", span="", file="UsageAttribute.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n2 -> n0  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n4 -> n6  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n5 -> n3  [key=0, style=bold, color=blue];
n7 -> n8  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n9 -> n7  [key=0, style=bold, color=blue];
n11 -> n12  [key=0, style=solid];
n11 -> n6  [key=2, style=dotted];
n11 -> n13  [key=2, style=dotted];
n11 -> n14  [key=2, style=dotted];
n10 -> n11  [key=0, style=solid];
n12 -> n10  [key=0, style=bold, color=blue];
n15 -> n16  [key=0, style=solid];
n16 -> n17  [key=0, style=solid];
n16 -> n19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n17 -> n15  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n21  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n20 -> n18  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid, color=red];
n23 -> n24  [key=0, style=solid, color=red];
n23 -> n26  [key=1, style=dashed, color=red, label="CommandLine.Core.Specification"];
n24 -> n22  [key=0, style=bold, color=blue];
n26 -> n27  [key=0, style=solid, color=red];
n26 -> n6  [key=2, style=dotted, color=red];
n25 -> n26  [key=0, style=solid, color=red];
n27 -> n25  [key=0, style=bold, color=blue];
d27 -> d28  [key=0, style=solid, color=green];
d27 -> d29  [key=2, style=dotted, color=green];
d41 -> d27  [key=1, style=dashed, color=green, label="CommandLine.Text.Example"];
d41 -> d32  [key=1, style=dashed, color=green, label="CommandLine.Text.Example"];
d41 -> d7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d26 -> d27  [key=0, style=solid, color=green];
d28 -> d26  [key=0, style=bold, color=blue];
d32 -> d33  [key=0, style=solid, color=green];
d32 -> d34  [key=2, style=dotted, color=green];
d32 -> d35  [key=2, style=dotted, color=green];
d32 -> d25  [key=2, style=dotted, color=green];
d24 -> d32  [key=1, style=dashed, color=green, label="CommandLine.Text.Example"];
d24 -> d30  [key=0, style=solid];
d24 -> d19  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.Example other"];
d24 -> d31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d30 -> d32  [key=0, style=solid, color=green];
d30 -> d31  [key=0, style=solid];
d33 -> d24  [key=0, style=bold, color=blue];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d21 -> d24  [key=2, style=dotted];
d21 -> d23  [key=0, style=solid];
d22 -> d25  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d18 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d18 -> d22  [key=1, style=dashed, color=darkseagreen4, label=object];
d18 -> d19  [key=0, style=solid];
d19 -> d21  [key=1, style=dashed, color=darkseagreen4, label=other];
d19 -> d20  [key=0, style=solid];
d31 -> d33  [key=0, style=solid];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>"];
d0 -> d9  [key=1, style=dashed, color=darkseagreen4, label=object];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>"];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label=object];
d5 -> d7  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d10 -> d0  [key=0, style=bold, color=blue];
d20 -> d21  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d23 -> d18  [key=0, style=bold, color=blue];
d40 -> d0  [key=3, color=darkorchid, style=bold, label="Field variable System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings> formatStyles"];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d1 -> d11  [key=2, style=dotted];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d6 -> d10  [key=0, style=solid];
d6 -> d13  [key=2, style=dotted];
d2 -> d10  [key=0, style=solid];
d2 -> d12  [key=2, style=dotted];
d4 -> d10  [key=0, style=solid];
d4 -> d13  [key=2, style=dotted];
d37 -> d40  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d38 -> d36  [key=0, style=bold, color=blue];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_0  [key=2, style=dotted];
m2_14 -> m2_7  [key=2, style=dotted];
m2_14 -> m2_17  [key=2, style=dotted];
m2_14 -> m2_1  [key=3, color=darkorchid, style=bold, label="Parameter variable System.StringComparer nameComparer"];
m2_14 -> m2_5  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>> tokenizer"];
m2_15 -> m2_13  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_16  [key=2, style=dotted];
m2_19 -> m2_0  [key=2, style=dotted];
m2_19 -> m2_7  [key=2, style=dotted];
m2_19 -> m2_8  [key=2, style=dotted];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_5 -> m2_8  [key=2, style=dotted];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_7  [key=2, style=dotted];
m2_10 -> m2_12  [key=2, style=dotted];
m2_11 -> m2_9  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid, color=red];
m3_1 -> m3_2  [key=0, style=solid, color=red];
m3_2 -> m3_0  [key=0, style=bold, color=blue];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_3  [key=0, style=bold, color=blue];
m3_5 -> m3_1  [key=1, style=dashed, color=red, label="CommandLine.Text.UsageAttribute"];
}
