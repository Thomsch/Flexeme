digraph  {
n368 [label="CommandLine.Text.HelpText", span=""];
n369 [label=auto, span=""];
n370 [label="CommandLine.ParserResult<T>", span=""];
n371 [label=pr, span=""];
n372 [label="CommandLine.Text.HelpText", span=""];
n373 [label="System.Func<CommandLine.Error, string>", span=""];
n374 [label=int, span=""];
n375 [label=text, span=""];
n376 [label=string, span=""];
n377 [label=maxLength, span=""];
n378 [label=remainingSpace, span=""];
n379 [label=int, span=""];
n380 [label="CommandLine.Core.Specification", span=""];
n381 [label=optionHelpText, span=""];
n382 [label="CommandLine.Core.OptionSpecification", span=""];
n383 [label="CommandLine.Core.ValueSpecification", span=""];
n0 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="34-34"];
n1 [cluster="CommandLine.Text.HelpText.HelpText()", label="Exit CommandLine.Text.HelpText.HelpText()", span="34-34"];
n2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="46-46"];
n3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="46-46"];
n4 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
n5 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="57-57"];
n6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="68-68"];
n7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="68-68"];
n8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="80-80"];
n9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="80-80"];
n10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
n11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="sentenceBuilder == null", span="95-95"];
n13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="heading == null", span="96-96"];
n15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="copyright == null", span="97-97"];
n19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.sentenceBuilder = sentenceBuilder", span="102-102"];
n20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.heading = heading", span="103-103"];
n21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.copyright = copyright", span="104-104"];
n12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''sentenceBuilder'');", span="95-95"];
n14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''heading'');", span="96-96"];
n16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''copyright'');", span="97-97"];
n17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="99-99"];
n18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="100-100"];
n24 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
n22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="93-93"];
n23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="193-193"];
n26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="198-203"];
n28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="207-207"];
n29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="errors = ((NotParsed<T>)parserResult).Errors", span="209-209"];
n31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto = onError(auto)", span="213-213"];
n34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="(verbsIndex && parserResult.TypeInfo.Multiple.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="223-223"];
n36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddVerbs(parserResult.TypeInfo.Multiple.ToArray())", span="226-226"];
n37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddOptions(parserResult)", span="229-229"];
n27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="var errors = Enumerable.Empty<Error>()", span="205-205"];
n32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="217-218"];
n51 [cluster="lambda expression", label="license.AddToHelpText(auto, true)", span="218-218"];
n33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="220-221"];
n55 [cluster="lambda expression", label="usage.AddToHelpText(auto, true)", span="221-221"];
n35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="auto.AddDashesToOption = false", span="225-225"];
n38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="return auto;", span="231-231"];
n40 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="FilterMeaningfulErrors(errors).Any()", span="211-211"];
n41 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="448-448"];
n42 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
n43 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n44 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
n45 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
n50 [cluster="lambda expression", label="Entry lambda expression", span="218-218"];
n54 [cluster="lambda expression", label="Entry lambda expression", span="221-221"];
n46 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n57 [cluster="lambda expression", label="Entry lambda expression", span="223-223"];
n49 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="329-329"];
n47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n48 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="346-346"];
n39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="193-193"];
n52 [cluster="lambda expression", label="Exit lambda expression", span="218-218"];
n53 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
n56 [cluster="lambda expression", label="Exit lambda expression", span="221-221"];
n58 [cluster="lambda expression", label="e.Tag == ErrorType.NoVerbSelectedError", span="223-223"];
n59 [cluster="lambda expression", label="Exit lambda expression", span="223-223"];
n60 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="244-244"];
n61 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="parserResult.Tag != ParserResultType.NotParsed", span="246-246"];
n63 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var errors = ((NotParsed<T>)parserResult).Errors", span="249-249"];
n67 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="255-255"];
n85 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="255-255"];
n70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current))\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="259-261"];
n92 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="261-261"];
n62 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="247-247"];
n64 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="251-251"];
n66 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="254-254"];
n68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="257-257"];
n65 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="252-252"];
n78 [cluster="lambda expression", label="Entry lambda expression", span="251-251"];
n81 [cluster="lambda expression", label="Entry lambda expression", span="254-254"];
n69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="258-258"];
n74 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
n75 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
n76 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
n77 [cluster="CommandLine.TypeInfo.Create(System.Type)", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
n89 [cluster="lambda expression", label="DefaultParsingErrorsHandler(pr, current)", span="260-260"];
n71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="244-244"];
n88 [cluster="lambda expression", label="Entry lambda expression", span="260-260"];
n91 [cluster="lambda expression", label="Entry lambda expression", span="261-261"];
n84 [cluster="lambda expression", label="Entry lambda expression", span="255-255"];
n73 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="309-309"];
n72 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n79 [cluster="lambda expression", label="e.Tag == ErrorType.VersionRequestedError", span="251-251"];
n80 [cluster="lambda expression", label="Exit lambda expression", span="251-251"];
n82 [cluster="lambda expression", label="e.Tag == ErrorType.HelpVerbRequestedError", span="254-254"];
n83 [cluster="lambda expression", label="Exit lambda expression", span="254-254"];
n86 [cluster="lambda expression", label="Exit lambda expression", span="255-255"];
n87 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="269-269"];
n90 [cluster="lambda expression", label="Exit lambda expression", span="260-260"];
n93 [cluster="lambda expression", label="Exit lambda expression", span="261-261"];
n94 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="parserResult == null", span="271-271"];
n96 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current == null", span="272-272"];
n98 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="274-274"];
n99 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="275-275"];
n100 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="277-280"];
n102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="282-282"];
n103 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="284-285"];
n105 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="288-289"];
n116 [cluster="lambda expression", label="current.AddPreOptionsLine(line)", span="289-289"];
n106 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="291-291"];
n95 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''parserResult'');", span="271-271"];
n97 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''current'');", span="272-272"];
n108 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
n101 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="string.IsNullOrEmpty(errors)", span="281-281"];
n109 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="396-396"];
n104 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="286-287"];
n110 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n111 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n112 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
n113 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
n114 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
n115 [cluster="lambda expression", label="Entry lambda expression", span="289-289"];
n107 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="269-269"];
n117 [cluster="lambda expression", label="Exit lambda expression", span="289-289"];
n118 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="299-299"];
n119 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="return info.ToString();", span="301-301"];
n120 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="299-299"];
n121 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="430-430"];
n122 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="311-311"];
n123 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="309-309"];
n124 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="558-558"];
n125 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="319-319"];
n126 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="return AddLine(postOptionsHelp, value);", span="321-321"];
n127 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="319-319"];
n128 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="664-664"];
n129 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="result == null", span="332-332"];
n131 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Single),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="334-337"];
n130 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="332-332"];
n132 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="329-329"];
n133 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="489-489"];
n134 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="520-520"];
n135 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types == null", span="348-348"];
n137 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types.Length == 0", span="349-349"];
n139 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="351-354"];
n136 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentNullException(''types'');", span="348-348"];
n138 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="349-349"];
n140 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="346-346"];
n142 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="508-508"];
n141 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n143 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="363-363"];
n144 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="result == null", span="365-365"];
n146 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Single),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="367-370"];
n145 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="365-365"];
n147 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="363-363"];
n148 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="380-380"];
n149 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types == null", span="382-382"];
n151 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types.Length == 0", span="383-383"];
n153 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="385-385"];
n150 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentNullException(''types'');", span="382-382"];
n152 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="383-383"];
n154 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="380-380"];
n155 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="parserResult == null", span="402-402"];
n157 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="404-405"];
n161 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="410-418"];
n173 [cluster="lambda expression", label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="415-416"];
n162 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="420-423"];
n156 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="throw new ArgumentNullException(''parserResult'');", span="402-402"];
n158 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors.Empty()", span="406-406"];
n159 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return string.Empty;", span="407-407"];
n160 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var text = new StringBuilder()", span="409-409"];
n164 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n174 [cluster="lambda expression", label="text.AppendLine(line.ToString())", span="417-417"];
n165 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n166 [cluster="Unk.ForEach", label="Entry Unk.ForEach", span=""];
n169 [cluster="lambda expression", label="Entry lambda expression", span="411-411"];
n172 [cluster="lambda expression", label="Entry lambda expression", span="413-418"];
n163 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="396-396"];
n167 [cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57"];
n168 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n170 [cluster="lambda expression", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="411-411"];
n171 [cluster="lambda expression", label="Exit lambda expression", span="411-411"];
n176 [cluster="System.Text.StringBuilder.StringBuilder(string)", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
n177 [cluster="int.Spaces()", label="Entry int.Spaces()", span="30-30"];
n178 [cluster="Unk.formatError", label="Entry Unk.formatError", span=""];
n179 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n175 [cluster="lambda expression", label="Exit lambda expression", span="413-418"];
n180 [cluster="System.Text.StringBuilder.AppendLine(string)", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
n181 [cluster="CommandLine.Text.HelpText.ToString()", label="int ExtraLength = 10", span="432-432"];
n182 [cluster="CommandLine.Text.HelpText.ToString()", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="433-445"];
n183 [cluster="CommandLine.Text.HelpText.ToString()", label="Exit CommandLine.Text.HelpText.ToString()", span="430-430"];
n184 [cluster="string.SafeLength()", label="Entry string.SafeLength()", span="40-40"];
n185 [cluster="System.Text.StringBuilder.SafeLength()", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
n186 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
n187 [cluster="System.Text.StringBuilder.SafeToString()", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
n188 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="450-450"];
n189 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="448-448"];
n190 [cluster="lambda expression", label="Entry lambda expression", span="450-450"];
n191 [cluster="lambda expression", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="450-450"];
n192 [cluster="lambda expression", label="Exit lambda expression", span="450-450"];
n193 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="453-453"];
n194 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="455-455"];
n196 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var words = value.Split(' ')", span="459-459"];
n199 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length < (maximumLength - wordBuffer)", span="462-462"];
n200 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i])", span="464-464"];
n202 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="466-466"];
n203 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append('' '')", span="468-468"];
n205 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length >= maximumLength && wordBuffer == 0", span="472-472"];
n206 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i].Substring(0, maximumLength))", span="474-474"];
n207 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer = maximumLength", span="475-475"];
n209 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="481-481"];
n210 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="482-482"];
n211 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value.Length > maximumLength", span="484-484"];
n212 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(value)", span="486-486"];
n195 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var wordBuffer = 0", span="458-458"];
n201 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer += words[i].Length", span="465-465"];
n197 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var i = 0", span="460-460"];
n214 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n198 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i < words.Length", span="460-460"];
n208 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i++", span="460-460"];
n204 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer++", span="469-469"];
n215 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n216 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
n217 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n213 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="453-453"];
n218 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="491-491"];
n219 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="492-494"];
n223 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
n220 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="495-497"];
n224 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="538-538"];
n225 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="548-548"];
n226 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n221 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="498-500"];
n227 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n228 [cluster="lambda expression", label="Entry lambda expression", span="497-497"];
n222 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="489-489"];
n229 [cluster="lambda expression", label="v.Index", span="497-497"];
n230 [cluster="lambda expression", label="Exit lambda expression", span="497-497"];
n231 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="510-517"];
n232 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="508-508"];
n233 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
n234 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
n235 [cluster="Unk.Concat", label="Entry Unk.Concat", span=""];
n236 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var maxLength = GetMaxLength(specifications)", span="525-525"];
n238 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var remainingSpace = maximumLength - (maxLength + 6)", span="529-529"];
n239 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="531-533"];
n244 [cluster="lambda expression", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="533-533"];
n237 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="527-527"];
n242 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="671-671"];
n240 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="return this;", span="535-535"];
n243 [cluster="lambda expression", label="Entry lambda expression", span="532-533"];
n241 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="520-520"];
n245 [cluster="lambda expression", label="Exit lambda expression", span="532-533"];
n246 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="565-565"];
n247 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="540-545"];
n248 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="538-538"];
n249 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="550-555"];
n250 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="548-548"];
n251 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="AddLine(preOptionsHelp, value, maximumLength)", span="560-560"];
n252 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="return this;", span="562-562"];
n253 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="558-558"];
n254 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''  '')", span="567-567"];
n255 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="568-572"];
n291 [cluster="lambda expression", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="571-571"];
n295 [cluster="lambda expression", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="572-572"];
n256 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="574-576"];
n257 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var optionHelpText = specification.HelpText", span="578-578"];
n258 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="580-580"];
n259 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="581-581"];
n260 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="583-584"];
n261 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.Required", span="586-586"];
n262 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="587-587"];
n268 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="597-597"];
n271 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="601-601"];
n274 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="607-607"];
n275 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="609-609"];
n276 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer = widthOfHelpText", span="610-610"];
n279 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="618-619"];
n280 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText.Length > widthOfHelpText", span="621-621"];
n284 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
n290 [cluster="lambda expression", label="Entry lambda expression", span="571-571"];
n294 [cluster="lambda expression", label="Entry lambda expression", span="572-572"];
n285 [cluster="string.PadRight(int)", label="Entry string.PadRight(int)", span="0-0"];
n286 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n298 [cluster="lambda expression", label="Entry lambda expression", span="584-584"];
n299 [cluster="lambda expression", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="584-584"];
n263 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="!string.IsNullOrEmpty(optionHelpText)", span="589-589"];
n265 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var words = optionHelpText.Split(' ')", span="594-594"];
n278 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="617-617"];
n281 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="624-627"];
n287 [cluster="string.FormatInvariant(params object[])", label="Entry string.FormatInvariant(params object[])", span="20-20"];
n264 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var wordBuffer = 0", span="593-593"];
n270 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer += words[i].Length", span="600-600"];
n266 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var i = 0", span="595-595"];
n267 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i < words.Length", span="595-595"];
n269 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i])", span="599-599"];
n277 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i++", span="595-595"];
n273 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer++", span="604-604"];
n272 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append('' '')", span="603-603"];
n288 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n289 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
n282 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="return this;", span="629-629"];
n283 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="565-565"];
n292 [cluster="lambda expression", label="Exit lambda expression", span="571-571"];
n293 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="632-632"];
n296 [cluster="lambda expression", label="Exit lambda expression", span="572-572"];
n297 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="652-652"];
n300 [cluster="lambda expression", label="Exit lambda expression", span="584-584"];
n301 [cluster="string.FormatLocal(params object[])", label="Entry string.FormatLocal(params object[])", span="25-25"];
n302 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="634-649"];
n306 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="638-642"];
n312 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="645-648"];
n303 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="632-632"];
n304 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
n305 [cluster="lambda expression", label="Entry lambda expression", span="638-642"];
n311 [cluster="lambda expression", label="Entry lambda expression", span="645-648"];
n307 [cluster="lambda expression", label="Exit lambda expression", span="638-642"];
n308 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
n309 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
n310 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
n313 [cluster="lambda expression", label="Exit lambda expression", span="645-648"];
n314 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="654-661"];
n317 [cluster="lambda expression", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="657-657"];
n321 [cluster="lambda expression", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="658-658"];
n315 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="652-652"];
n316 [cluster="lambda expression", label="Entry lambda expression", span="657-657"];
n320 [cluster="lambda expression", label="Entry lambda expression", span="658-658"];
n318 [cluster="lambda expression", label="Exit lambda expression", span="657-657"];
n319 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
n322 [cluster="lambda expression", label="Exit lambda expression", span="658-658"];
n323 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="AddLine(builder, value, MaximumDisplayWidth)", span="666-666"];
n324 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="return this;", span="668-668"];
n325 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="664-664"];
n326 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="673-681"];
n327 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="671-671"];
n328 [cluster="Unk.Aggregate", label="Entry Unk.Aggregate", span=""];
n329 [cluster="lambda expression", label="Entry lambda expression", span="674-681"];
n330 [cluster="lambda expression", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="676-678"];
n331 [cluster="lambda expression", label="return Math.Max(length, specLength);", span="680-680"];
n333 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="685-685"];
n334 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="720-720"];
n332 [cluster="lambda expression", label="Exit lambda expression", span="674-681"];
n335 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
n336 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var specLength = 0", span="687-687"];
n337 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasShort = spec.ShortName.Length > 0", span="689-689"];
n338 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasLong = spec.LongName.Length > 0", span="690-690"];
n340 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="spec.MetaValue.Length > 0", span="693-693"];
n341 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="694-694"];
n348 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += spec.LongName.Length", span="707-707"];
n343 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="698-698"];
n353 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="715-715"];
n354 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="return specLength;", span="717-717"];
n342 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasShort, span="696-696"];
n352 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="hasShort && hasLong", span="714-714"];
n339 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var metaLength = 0", span="692-692"];
n347 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasLong, span="705-705"];
n346 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="702-702"];
n351 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="711-711"];
n344 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="699-699"];
n345 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="700-700"];
n349 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="708-708"];
n350 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="709-709"];
n355 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="685-685"];
n356 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var specLength = 0", span="722-722"];
n357 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var hasMeta = spec.MetaName.Length > 0", span="724-724"];
n359 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="spec.MetaValue.Length > 0", span="727-727"];
n360 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="728-728"];
n362 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="731-731"];
n363 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="733-733"];
n358 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var metaLength = 0", span="726-726"];
n361 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label=hasMeta, span="730-730"];
n364 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += metaLength", span="735-735"];
n367 [cluster="T.ToStringInvariant<T>()", label="Entry T.ToStringInvariant<T>()", span="15-15"];
n365 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="return specLength;", span="737-737"];
n366 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="720-720"];
d5 [cluster="CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", color=green, community=0, label="8: return string.Compare(\r\n                argument,\r\n                ToOption(option),\r\n                caseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase) == 0;", span="45-48"];
d4 [cluster="CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", label="Entry CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", span="43-43"];
d6 [cluster="CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", label="Exit CommandLine.Parsing.ArgumentParser.CompareShort(string, char?, bool)", span="43-43"];
d7 [cluster="CommandLine.Parsing.ArgumentParser.ToOption(char?)", label="Entry CommandLine.Parsing.ArgumentParser.ToOption(char?)", span="181-181"];
d8 [cluster="string.Compare(string, string, System.StringComparison)", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
d10 [cluster="CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", color=green, community=0, label="18: return string.Compare(\r\n                argument,\r\n                ToOption(option),\r\n                caseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase) == 0;", span="53-56"];
d9 [cluster="CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", label="Entry CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", span="51-51"];
d11 [cluster="CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", label="Exit CommandLine.Parsing.ArgumentParser.CompareLong(string, string, bool)", span="51-51"];
d12 [cluster="CommandLine.Parsing.ArgumentParser.ToOption(string)", label="Entry CommandLine.Parsing.ArgumentParser.ToOption(string)", span="176-176"];
d16 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", color=green, community=0, label="24: IsDash(argument)", span="66-66"];
d13 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="Entry CommandLine.Parsing.ArgumentParser.Create(string, bool)", span="59-59"];
d14 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="argument.IsNumeric()", span="61-61"];
d17 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="return null;", span="68-68"];
d18 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", color=green, community=0, label="24: IsLongOption(argument)", span="71-71"];
d25 [cluster="CommandLine.Parsing.ArgumentParser.IsDash(string)", label="Entry CommandLine.Parsing.ArgumentParser.IsDash(string)", span="186-186"];
d19 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="return new LongOptionParser(ignoreUnknownArguments);", span="73-73"];
d20 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", color=green, community=0, label="24: IsShortOption(argument)", span="76-76"];
d26 [cluster="CommandLine.Parsing.ArgumentParser.IsLongOption(string)", label="Entry CommandLine.Parsing.ArgumentParser.IsLongOption(string)", span="196-196"];
d21 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="return new OptionGroupParser(ignoreUnknownArguments);", span="78-78"];
d22 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="return null;", span="81-81"];
d28 [cluster="CommandLine.Parsing.ArgumentParser.IsShortOption(string)", label="Entry CommandLine.Parsing.ArgumentParser.IsShortOption(string)", span="191-191"];
d34 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", color=green, community=0, label="24: return IsDash(argument) || !IsShortOption(argument);", span="93-93"];
d30 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", label="Entry CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84"];
d33 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", label="argument.Length > 0", span="91-91"];
d36 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", label="Exit CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84"];
d78 [cluster="CommandLine.Parsing.ArgumentParser.ToOption(string)", color=green, community=0, label="18: return string.Concat(''--'', value);", span="178-178"];
d79 [cluster="CommandLine.Parsing.ArgumentParser.ToOption(string)", label="Exit CommandLine.Parsing.ArgumentParser.ToOption(string)", span="176-176"];
d81 [cluster="CommandLine.Parsing.ArgumentParser.ToOption(char?)", color=green, community=0, label="8: return string.Concat(''-'', value);", span="183-183"];
d82 [cluster="CommandLine.Parsing.ArgumentParser.ToOption(char?)", label="Exit CommandLine.Parsing.ArgumentParser.ToOption(char?)", span="181-181"];
d83 [cluster="string.Concat(object, object)", label="Entry string.Concat(object, object)", span="0-0"];
d84 [cluster="CommandLine.Parsing.ArgumentParser.IsDash(string)", color=green, community=0, label="24: return string.CompareOrdinal(value, ''-'') == 0;", span="188-188"];
d85 [cluster="CommandLine.Parsing.ArgumentParser.IsDash(string)", label="Exit CommandLine.Parsing.ArgumentParser.IsDash(string)", span="186-186"];
d86 [cluster="string.CompareOrdinal(string, string)", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
d87 [cluster="CommandLine.Parsing.ArgumentParser.IsShortOption(string)", color=green, community=0, label="24: return value[0] == '-';", span="193-193"];
d88 [cluster="CommandLine.Parsing.ArgumentParser.IsShortOption(string)", label="Exit CommandLine.Parsing.ArgumentParser.IsShortOption(string)", span="191-191"];
d89 [cluster="CommandLine.Parsing.ArgumentParser.IsLongOption(string)", color=green, community=0, label="37: return value[0] == '-' && value[1] == '-';", span="198-198"];
d90 [cluster="CommandLine.Parsing.ArgumentParser.IsLongOption(string)", label="Exit CommandLine.Parsing.ArgumentParser.IsLongOption(string)", span="196-196"];
d23 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="Exit CommandLine.Parsing.ArgumentParser.Create(string, bool)", span="59-59"];
d15 [cluster="CommandLine.Parsing.ArgumentParser.Create(string, bool)", label="return null;", span="63-63"];
d24 [cluster="string.IsNumeric()", label="Entry string.IsNumeric()", span="39-39"];
d27 [cluster="CommandLine.Parsing.LongOptionParser.LongOptionParser(bool)", label="Entry CommandLine.Parsing.LongOptionParser.LongOptionParser(bool)", span="30-30"];
d29 [cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", label="Entry CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="30-30"];
d45 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="IsInputValue(ae.Current)", span="117-117"];
d31 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", label="argument.IsNumeric()", span="86-86"];
d32 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", label="return true;", span="88-88"];
d35 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", label="return true;", span="96-96"];
d42 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="Entry CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="111-111"];
d44 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="ae.MoveNext()", span="115-115"];
d46 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="list.Add(ae.Current)", span="119-119"];
d47 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="!ae.MovePrevious()", span="127-127"];
d39 [cluster="CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="Entry CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="106-106"];
d40 [cluster="CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="return GetNextInputValues(ae);", span="108-108"];
d50 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="Exit CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="111-111"];
d43 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="IList<string> list = new List<string>()", span="113-113"];
d51 [cluster="CommandLine.Parsing.IArgumentEnumerator.MoveNext()", label="Entry CommandLine.Parsing.IArgumentEnumerator.MoveNext()", span="34-34"];
d52 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
d48 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="throw new ParserException();", span="129-129"];
d49 [cluster="CommandLine.Parsing.ArgumentParser.GetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="return list;", span="132-132"];
d53 [cluster="CommandLine.Parsing.IArgumentEnumerator.MovePrevious()", label="Entry CommandLine.Parsing.IArgumentEnumerator.MovePrevious()", span="36-36"];
d41 [cluster="CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", label="Exit CommandLine.Parsing.ArgumentParser.InternalWrapperOfGetNextInputValues(CommandLine.Parsing.IArgumentEnumerator)", span="106-106"];
d3 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d54 [cluster="CommandLine.ParserException.ParserException()", label="Entry CommandLine.ParserException.ParserException()", span="40-40"];
d1 [cluster="CommandLine.Parsing.ArgumentParser.ArgumentParser()", label="PostParsingState = new List<ParsingError>()", span="35-35"];
d67 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", label="throw new ParserException();", span="159-159"];
d71 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", label="throw new ParserException();", span="167-167"];
d91 [label="CommandLine.Parsing.ArgumentParser", span=""];
d0 [cluster="CommandLine.Parsing.ArgumentParser.ArgumentParser()", label="Entry CommandLine.Parsing.ArgumentParser.ArgumentParser()", span="33-33"];
d2 [cluster="CommandLine.Parsing.ArgumentParser.ArgumentParser()", label="Exit CommandLine.Parsing.ArgumentParser.ArgumentParser()", span="33-33"];
d66 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", label="!option.IsAttributeArrayCompatible", span="157-157"];
d68 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", label="Exit CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", span="155-155"];
d70 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", label="!option.IsArray && option.IsAttributeArrayCompatible", span="165-165"];
d72 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", label="Exit CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163"];
d74 [cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", label="PostParsingState.Add(new ParsingError(option.ShortName, option.LongName, true))", span="173-173"];
d65 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", span="155-155"];
d69 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163"];
d73 [cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", label="Entry CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171"];
d75 [cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", label="Exit CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171"];
d76 [cluster="CommandLine.ParsingError.ParsingError(char?, string, bool)", label="Entry CommandLine.ParsingError.ParsingError(char?, string, bool)", span="36-36"];
d77 [cluster="System.Collections.Generic.List<T>.Add(T)", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m1_15 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="LongOptionParser.cs", label="Entry CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="29-29"];
m1_16 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="LongOptionParser.cs", label="return new string(' ', value);", span="31-31"];
m1_17 [cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="LongOptionParser.cs", label="Exit CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="29-29"];
m1_12 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="LongOptionParser.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="24-24"];
m1_13 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="LongOptionParser.cs", label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="26-26"];
m1_14 [cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="LongOptionParser.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="24-24"];
m1_21 [cluster="string.CompareOrdinal(string, string)", file="LongOptionParser.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m1_7 [cluster="System.Convert.ToString(object, System.IFormatProvider)", file="LongOptionParser.cs", label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0"];
m1_18 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="LongOptionParser.cs", label="Entry CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="34-34"];
m1_19 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="LongOptionParser.cs", label="return string.CompareOrdinal(strA, strB) == 0;", span="36-36"];
m1_20 [cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="LongOptionParser.cs", label="Exit CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="34-34"];
m1_8 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="LongOptionParser.cs", label="Entry CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="19-19"];
m1_9 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="LongOptionParser.cs", label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="21-21"];
m1_10 [cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="LongOptionParser.cs", label="Exit CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="19-19"];
m1_0 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="LongOptionParser.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="9-9"];
m1_1 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="LongOptionParser.cs", label="return new string(c, 1);", span="11-11"];
m1_2 [cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="LongOptionParser.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="9-9"];
m1_4 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="LongOptionParser.cs", label="Entry CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="14-14"];
m1_5 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="LongOptionParser.cs", label="return Convert.ToString(value, CultureInfo.InvariantCulture);", span="16-16"];
m1_6 [cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="LongOptionParser.cs", label="Exit CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="14-14"];
m1_11 [cluster="string.Format(System.IFormatProvider, string, params object[])", file="LongOptionParser.cs", label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0"];
m2_0 [cluster="CommandLine.Tests.MyClass.MyClass()", file="MyClass.cs", label="Entry CommandLine.Tests.MyClass.MyClass()", span="5-5"];
m2_1 [cluster="CommandLine.Tests.MyClass.MyClass()", file="MyClass.cs", label="Exit CommandLine.Tests.MyClass.MyClass()", span="5-5"];
m3_9 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.CreateOptionInfo()", span="78-78"];
m3_10 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionAttribute.cs", label="return new OptionInfo(ShortName, LongName);", span="80-80"];
m3_11 [cluster="CommandLine.OptionAttribute.CreateOptionInfo()", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.CreateOptionInfo()", span="78-78"];
m3_12 [cluster="CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", file="OptionAttribute.cs", label="Entry CommandLine.Parsing.OptionInfo.OptionInfo(char?, string)", span="78-78"];
m3_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="50-50"];
m3_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="50-50"];
m3_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="69-69"];
m3_8 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="69-69"];
m3_0 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="41-41"];
m3_1 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="AutoLongName = true", span="43-43"];
m3_2 [cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="41-41"];
m3_5 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="59-59"];
m3_6 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="59-59"];
m3_13 [file="OptionAttribute.cs", label="CommandLine.OptionAttribute", span=""];
m4_52 [cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165"];
m4_58 [cluster="CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="180-180"];
m4_51 [cluster="CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.GetRemainingFromNext()", span="38-38"];
m4_47 [cluster="CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="38-38"];
m4_3 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="38-38"];
m4_4 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: IArgumentEnumerator group = new OneCharStringEnumerator(argumentEnumerator.Current.Substring(1))", span="40-40"];
m4_6 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: var option = map[group.Current]", span="43-43"];
m4_12 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="44: argumentEnumerator.IsLast && group.IsLast", span="55-55"];
m4_17 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: valueSetting = option.SetValue(group.GetRemainingFromNext(), options)", span="65-65"];
m4_22 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="76-76"];
m4_24 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="valueSetting = option.SetValue(items, options)", span="79-79"];
m4_28 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="!argumentEnumerator.IsLast && !ArgumentParser.IsInputValue(argumentEnumerator.Next)", span="88-88"];
m4_31 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: valueSetting = option.SetValue(argumentEnumerator.Next, options)", span="96-96"];
m4_36 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="46: var items = ArgumentParser.GetNextInputValues(argumentEnumerator)", span="107-107"];
m4_37 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: valueSetting = option.SetValue(items, options)", span="109-109"];
m4_41 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="27: !@group.IsLast && map[@group.Next] == null", span="119-119"];
m4_43 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="!option.SetValue(true, options)", span="124-124"];
m4_5 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="27: group.MoveNext()", span="41-41"];
m4_15 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: !group.IsLast", span="61-61"];
m4_23 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: items.Insert(0, @group.GetRemainingFromNext())", span="77-77"];
m4_45 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return PresentParserState.Success;", span="130-130"];
m4_7 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="option == null", span="44-44"];
m4_9 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="option.IsDefined = true", span="49-49"];
m4_10 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(option)", span="51-51"];
m4_11 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="!option.IsBoolean", span="53-53"];
m4_16 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="!option.IsArray", span="63-63"];
m4_19 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="DefineOptionThatViolatesFormat(option)", span="68-68"];
m4_21 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="74-74"];
m4_26 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="DefineOptionThatViolatesFormat(option)", span="82-82"];
m4_30 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="46: !option.IsArray", span="94-94"];
m4_33 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="44: DefineOptionThatViolatesFormat(option)", span="99-99"];
m4_35 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="4: ArgumentParser.EnsureOptionAttributeIsArrayCompatible(option)", span="105-105"];
m4_39 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="44: DefineOptionThatViolatesFormat(option)", span="112-112"];
m4_8 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return _ignoreUnkwnownArguments ? PresentParserState.MoveOnNextElement : PresentParserState.Failure;", span="46-46"];
m4_13 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return PresentParserState.Failure;", span="57-57"];
m4_14 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="bool valueSetting", span="60-60"];
m4_18 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="!valueSetting", span="66-66"];
m4_20 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return ArgumentParser.BooleanToParserState(valueSetting);", span="71-71"];
m4_25 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="!valueSetting", span="80-80"];
m4_27 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return ArgumentParser.BooleanToParserState(valueSetting, true);", span="85-85"];
m4_29 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return PresentParserState.Failure;", span="90-90"];
m4_32 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: !valueSetting", span="97-97"];
m4_34 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: return ArgumentParser.BooleanToParserState(valueSetting, true);", span="102-102"];
m4_38 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: !valueSetting", span="110-110"];
m4_40 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="OptionGroupParser.cs", label="21: return ArgumentParser.BooleanToParserState(valueSetting);", span="115-115"];
m4_42 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return PresentParserState.Failure;", span="121-121"];
m4_44 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="return PresentParserState.Failure;", span="126-126"];
m4_46 [cluster="CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="OptionGroupParser.cs", label="Exit CommandLine.Parsing.OptionGroupParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", span="38-38"];
m4_53 [cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171"];
m4_59 [cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", span="140-140"];
m4_50 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163"];
m4_61 [cluster="CommandLine.Parsing.OptionInfo.SetValue(bool, object)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.OptionInfo.SetValue(bool, object)", span="201-201"];
m4_0 [cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="33-33"];
m4_1 [cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="OptionGroupParser.cs", label="_ignoreUnkwnownArguments = ignoreUnkwnownArguments", span="35-35"];
m4_2 [cluster="CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", file="OptionGroupParser.cs", label="Exit CommandLine.Parsing.OptionGroupParser.OptionGroupParser(bool)", span="33-33"];
m4_57 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="OptionGroupParser.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m4_60 [cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84"];
m4_49 [cluster="CommandLine.Parsing.IArgumentEnumerator.MoveNext()", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.IArgumentEnumerator.MoveNext()", span="34-34"];
m4_55 [cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.Parsing.OptionInfo)", span="155-155"];
m4_54 [cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="OptionGroupParser.cs", label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", span="135-135"];
m4_48 [cluster="string.Substring(int)", file="OptionGroupParser.cs", label="Entry string.Substring(int)", span="0-0"];
m4_62 [file="OptionGroupParser.cs", label="CommandLine.Parsing.OptionGroupParser", span=""];
m5_0 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionMap.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m5_1 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionMap.cs", label="return from t in tokens\r\n                   where typeLookup(t.Text).MapMaybeOrDefault(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", span="15-17"];
m5_2 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="OptionMap.cs", label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m5_5 [cluster="lambda expression", file="OptionMap.cs", label="Entry lambda expression", span="16-16"];
m5_6 [cluster="lambda expression", file="OptionMap.cs", label="t.IsName() && info.TargetType == TargetType.Switch", span="16-16"];
m5_7 [cluster="lambda expression", file="OptionMap.cs", label="Exit lambda expression", span="16-16"];
m5_8 [cluster="CommandLine.Core.Token.IsName()", file="OptionMap.cs", label="Entry CommandLine.Core.Token.IsName()", span="128-128"];
m5_4 [cluster="Unk.MapMaybeOrDefault", file="OptionMap.cs", label="Entry Unk.MapMaybeOrDefault", span=""];
m5_9 [file="OptionMap.cs", label=t, span=""];
m6_13 [cluster="CommandLine.Core.Specification.IsMinNotSpecified()", file="Parser.cs", label="Entry CommandLine.Core.Specification.IsMinNotSpecified()", span="76-76"];
m6_7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m6_8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24"];
m6_9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="Parser.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m6_18 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="29-29"];
m6_4 [cluster="lambda expression", file="Parser.cs", label="spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0)", span="18-18"];
m6_3 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="18-18"];
m6_5 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="18-18"];
m6_11 [cluster="lambda expression", file="Parser.cs", label="spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max", span="23-24"];
m6_10 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="23-24"];
m6_12 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="23-24"];
m6_19 [cluster="lambda expression", file="Parser.cs", label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29"];
m6_20 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="29-29"];
m6_6 [cluster="System.Type.ToDescriptor()", file="Parser.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m6_15 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m6_16 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29"];
m6_17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="Parser.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m6_21 [cluster="CommandLine.Core.Specification.IsOption()", file="Parser.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m6_0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m6_1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18"];
m6_2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="Parser.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m6_14 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="Parser.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="81-81"];
n368 -> n17  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n18  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n122  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n126  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n131  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n139  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n146  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n153  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n182  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n219  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n231  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n236  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n237  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n239  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n244  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n240  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n247  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n249  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n251  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n252  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n254  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n255  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n291  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n295  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n256  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n258  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n269  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n272  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n275  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n279  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n281  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n282  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n302  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n306  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n312  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n323  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n324  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n326  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n330  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n344  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n368 -> n349  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n369 -> n51  [color=darkseagreen4, key=1, label=auto, style=dashed];
n369 -> n55  [color=darkseagreen4, key=1, label=auto, style=dashed];
n370 -> n85  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n370 -> n92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n371 -> n89  [color=darkseagreen4, key=1, label=pr, style=dashed];
n372 -> n116  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n373 -> n173  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
n374 -> n173  [color=darkseagreen4, key=1, label=int, style=dashed];
n375 -> n174  [color=darkseagreen4, key=1, label=text, style=dashed];
n376 -> n244  [color=darkseagreen4, key=1, label=string, style=dashed];
n377 -> n244  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n378 -> n244  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n379 -> n291  [color=darkseagreen4, key=1, label=int, style=dashed];
n379 -> n295  [color=darkseagreen4, key=1, label=int, style=dashed];
n380 -> n291  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n380 -> n295  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n381 -> n299  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n382 -> n306  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n382 -> n312  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n383 -> n317  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n383 -> n321  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n15  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
n10 -> n20  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n21  [color=darkseagreen4, key=1, label=string, style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n12 -> n22  [key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n14 -> n22  [key=0, style=solid];
n14 -> n23  [key=2, style=dotted];
n16 -> n22  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n24  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n24  [key=2, style=dotted];
n22 -> n10  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n29  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n31  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
n25 -> n34  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n36  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n37  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n0  [key=2, style=dotted];
n26 -> n31  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n32  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n51  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n33  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n55  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n35  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n36  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n37  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n38  [color=darkseagreen4, key=1, label=auto, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n32  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n34  [color=darkseagreen4, key=1, label=errors, style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n43  [key=2, style=dotted];
n31 -> n31  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n51  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n33  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n55  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n35  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n37  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n38  [color=darkseagreen4, key=1, label=auto, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n37  [key=0, style=solid];
n34 -> n42  [key=2, style=dotted];
n34 -> n46  [key=2, style=dotted];
n34 -> n57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n36 -> n38  [key=0, style=solid];
n36 -> n47  [key=2, style=dotted];
n36 -> n48  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n49  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n40  [key=2, style=dotted];
n27 -> n34  [color=darkseagreen4, key=1, label=errors, style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n44  [key=2, style=dotted];
n32 -> n45  [key=2, style=dotted];
n32 -> n50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n51 -> n52  [key=0, style=solid];
n51 -> n53  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n44  [key=2, style=dotted];
n33 -> n45  [key=2, style=dotted];
n33 -> n54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n55 -> n56  [key=0, style=solid];
n55 -> n53  [key=2, style=dotted];
n35 -> n36  [key=0, style=solid];
n38 -> n39  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n30 -> n41  [key=2, style=dotted];
n30 -> n42  [key=2, style=dotted];
n41 -> n188  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n54 -> n55  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n49 -> n129  [key=0, style=solid];
n49 -> n131  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n48 -> n135  [key=0, style=solid];
n48 -> n137  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n48 -> n139  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n39 -> n25  [color=blue, key=0, style=bold];
n52 -> n50  [color=blue, key=0, style=bold];
n56 -> n54  [color=blue, key=0, style=bold];
n58 -> n59  [key=0, style=solid];
n59 -> n57  [color=blue, key=0, style=bold];
n60 -> n61  [key=0, style=solid];
n60 -> n63  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n60 -> n67  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n60 -> n85  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n60 -> n70  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n60 -> n92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n63  [key=0, style=solid];
n63 -> n64  [key=0, style=solid];
n63 -> n66  [color=darkseagreen4, key=1, label=errors, style=dashed];
n63 -> n68  [color=darkseagreen4, key=1, label=errors, style=dashed];
n67 -> n71  [key=0, style=solid];
n67 -> n25  [key=2, style=dotted];
n67 -> n84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n85 -> n86  [key=0, style=solid];
n85 -> n87  [key=2, style=dotted];
n70 -> n71  [key=0, style=solid];
n70 -> n25  [key=2, style=dotted];
n70 -> n88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n70 -> n91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n92 -> n93  [key=0, style=solid];
n92 -> n87  [key=2, style=dotted];
n62 -> n71  [key=0, style=solid];
n62 -> n72  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n66  [key=0, style=solid];
n64 -> n46  [key=2, style=dotted];
n64 -> n78  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n66 -> n67  [key=0, style=solid];
n66 -> n68  [key=0, style=solid];
n66 -> n46  [key=2, style=dotted];
n66 -> n81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n68 -> n69  [key=0, style=solid];
n68 -> n74  [key=2, style=dotted];
n68 -> n75  [key=2, style=dotted];
n68 -> n70  [color=darkseagreen4, key=1, label=err, style=dashed];
n65 -> n71  [key=0, style=solid];
n65 -> n4  [key=2, style=dotted];
n65 -> n73  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n81 -> n82  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n76  [key=2, style=dotted];
n69 -> n77  [key=2, style=dotted];
n69 -> n40  [key=2, style=dotted];
n69 -> n89  [color=darkseagreen4, key=1, label=pr, style=dashed];
n89 -> n90  [key=0, style=solid];
n89 -> n87  [key=2, style=dotted];
n71 -> n60  [color=blue, key=0, style=bold];
n88 -> n89  [key=0, style=solid];
n91 -> n92  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n73 -> n122  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n80 -> n78  [color=blue, key=0, style=bold];
n82 -> n83  [key=0, style=solid];
n83 -> n81  [color=blue, key=0, style=bold];
n86 -> n84  [color=blue, key=0, style=bold];
n87 -> n94  [key=0, style=solid];
n87 -> n96  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n87 -> n98  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n87 -> n99  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n87 -> n100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n87 -> n102  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n87 -> n103  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n87 -> n105  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n87 -> n116  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n87 -> n106  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n90 -> n88  [color=blue, key=0, style=bold];
n93 -> n91  [color=blue, key=0, style=bold];
n94 -> n95  [key=0, style=solid];
n94 -> n96  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n96 -> n98  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n98 -> n100  [key=0, style=solid];
n98 -> n41  [key=2, style=dotted];
n98 -> n108  [key=2, style=dotted];
n99 -> n107  [key=0, style=solid];
n100 -> n101  [key=0, style=solid];
n100 -> n109  [key=2, style=dotted];
n100 -> n104  [color=darkseagreen4, key=1, label=errors, style=dashed];
n102 -> n107  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n103 -> n111  [key=2, style=dotted];
n103 -> n112  [key=2, style=dotted];
n103 -> n73  [key=2, style=dotted];
n105 -> n106  [key=0, style=solid];
n105 -> n114  [key=2, style=dotted];
n105 -> n115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n116 -> n117  [key=0, style=solid];
n116 -> n73  [key=2, style=dotted];
n106 -> n107  [key=0, style=solid];
n95 -> n107  [key=0, style=solid];
n95 -> n23  [key=2, style=dotted];
n97 -> n107  [key=0, style=solid];
n97 -> n23  [key=2, style=dotted];
n101 -> n102  [key=0, style=solid];
n101 -> n103  [key=0, style=solid];
n101 -> n110  [key=2, style=dotted];
n109 -> n155  [key=0, style=solid];
n109 -> n157  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n109 -> n161  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
n109 -> n173  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
n109 -> n162  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
n104 -> n105  [key=0, style=solid];
n104 -> n113  [key=2, style=dotted];
n115 -> n116  [key=0, style=solid];
n107 -> n87  [color=blue, key=0, style=bold];
n117 -> n115  [color=blue, key=0, style=bold];
n118 -> n119  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n121  [key=2, style=dotted];
n120 -> n118  [color=blue, key=0, style=bold];
n121 -> n181  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=2, style=dotted];
n123 -> n73  [color=blue, key=0, style=bold];
n124 -> n251  [key=0, style=solid];
n125 -> n126  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n126 -> n128  [key=2, style=dotted];
n127 -> n125  [color=blue, key=0, style=bold];
n128 -> n323  [key=0, style=solid];
n129 -> n130  [key=0, style=solid];
n129 -> n131  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n131 -> n133  [key=2, style=dotted];
n131 -> n111  [key=2, style=dotted];
n131 -> n134  [key=2, style=dotted];
n130 -> n132  [key=0, style=solid];
n130 -> n23  [key=2, style=dotted];
n132 -> n49  [color=blue, key=0, style=bold];
n133 -> n218  [key=0, style=solid];
n134 -> n236  [key=0, style=solid];
n134 -> n238  [color=darkseagreen4, key=1, label=int, style=dashed];
n134 -> n239  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
n134 -> n244  [color=darkseagreen4, key=1, label=string, style=dashed];
n135 -> n136  [key=0, style=solid];
n135 -> n137  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n139 -> n142  [key=2, style=dotted];
n139 -> n111  [key=2, style=dotted];
n139 -> n134  [key=2, style=dotted];
n136 -> n140  [key=0, style=solid];
n136 -> n23  [key=2, style=dotted];
n138 -> n140  [key=0, style=solid];
n138 -> n141  [key=2, style=dotted];
n140 -> n48  [color=blue, key=0, style=bold];
n142 -> n231  [key=0, style=solid];
n143 -> n144  [key=0, style=solid];
n143 -> n146  [color=darkseagreen4, key=1, label=int, style=dashed];
n144 -> n145  [key=0, style=solid];
n144 -> n146  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n146 -> n133  [key=2, style=dotted];
n146 -> n111  [key=2, style=dotted];
n146 -> n134  [key=2, style=dotted];
n145 -> n147  [key=0, style=solid];
n145 -> n23  [key=2, style=dotted];
n147 -> n143  [color=blue, key=0, style=bold];
n148 -> n149  [key=0, style=solid];
n148 -> n151  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n148 -> n153  [color=darkseagreen4, key=1, label=int, style=dashed];
n149 -> n150  [key=0, style=solid];
n149 -> n151  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n151 -> n153  [key=0, style=solid];
n153 -> n154  [key=0, style=solid];
n153 -> n142  [key=2, style=dotted];
n153 -> n111  [key=2, style=dotted];
n153 -> n134  [key=2, style=dotted];
n150 -> n154  [key=0, style=solid];
n150 -> n23  [key=2, style=dotted];
n152 -> n154  [key=0, style=solid];
n152 -> n141  [key=2, style=dotted];
n154 -> n148  [color=blue, key=0, style=bold];
n155 -> n156  [key=0, style=solid];
n155 -> n157  [key=0, style=solid];
n157 -> n158  [key=0, style=solid];
n157 -> n41  [key=2, style=dotted];
n157 -> n161  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
n157 -> n162  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
n161 -> n162  [key=0, style=solid];
n161 -> n165  [key=2, style=dotted];
n161 -> n166  [key=2, style=dotted];
n161 -> n169  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n161 -> n172  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n173 -> n174  [key=0, style=solid];
n173 -> n176  [key=2, style=dotted];
n173 -> n177  [key=2, style=dotted];
n173 -> n178  [key=2, style=dotted];
n173 -> n179  [key=2, style=dotted];
n162 -> n163  [key=0, style=solid];
n162 -> n74  [key=2, style=dotted];
n162 -> n43  [key=2, style=dotted];
n162 -> n167  [key=2, style=dotted];
n162 -> n168  [key=2, style=dotted];
n156 -> n163  [key=0, style=solid];
n156 -> n23  [key=2, style=dotted];
n158 -> n159  [key=0, style=solid];
n158 -> n160  [key=0, style=solid];
n158 -> n108  [key=2, style=dotted];
n159 -> n163  [key=0, style=solid];
n160 -> n161  [key=0, style=solid];
n160 -> n164  [key=2, style=dotted];
n160 -> n174  [color=darkseagreen4, key=1, label=text, style=dashed];
n160 -> n162  [color=darkseagreen4, key=1, label=text, style=dashed];
n174 -> n175  [key=0, style=solid];
n174 -> n168  [key=2, style=dotted];
n174 -> n180  [key=2, style=dotted];
n169 -> n170  [key=0, style=solid];
n172 -> n173  [key=0, style=solid];
n163 -> n109  [color=blue, key=0, style=bold];
n170 -> n171  [key=0, style=solid];
n171 -> n169  [color=blue, key=0, style=bold];
n175 -> n172  [color=blue, key=0, style=bold];
n181 -> n182  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n182 -> n24  [key=2, style=dotted];
n182 -> n184  [key=2, style=dotted];
n182 -> n185  [key=2, style=dotted];
n182 -> n179  [key=2, style=dotted];
n182 -> n110  [key=2, style=dotted];
n182 -> n186  [key=2, style=dotted];
n182 -> n168  [key=2, style=dotted];
n182 -> n187  [key=2, style=dotted];
n183 -> n121  [color=blue, key=0, style=bold];
n188 -> n189  [key=0, style=solid];
n188 -> n165  [key=2, style=dotted];
n188 -> n190  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n189 -> n41  [color=blue, key=0, style=bold];
n190 -> n191  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n192 -> n190  [color=blue, key=0, style=bold];
n193 -> n194  [key=0, style=solid];
n193 -> n196  [color=darkseagreen4, key=1, label=string, style=dashed];
n193 -> n199  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n200  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n202  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n203  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n205  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n206  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n207  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n209  [color=darkseagreen4, key=1, label=string, style=dashed];
n193 -> n210  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n193 -> n211  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n212  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n194 -> n195  [key=0, style=solid];
n194 -> n186  [key=2, style=dotted];
n196 -> n197  [key=0, style=solid];
n196 -> n214  [key=2, style=dotted];
n196 -> n198  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n199  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n200  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n201  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n202  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n205  [color=darkseagreen4, key=1, label=words, style=dashed];
n196 -> n206  [color=darkseagreen4, key=1, label=words, style=dashed];
n199 -> n200  [key=0, style=solid];
n199 -> n205  [key=0, style=solid];
n200 -> n201  [key=0, style=solid];
n200 -> n179  [key=2, style=dotted];
n202 -> n203  [key=0, style=solid];
n202 -> n208  [key=0, style=solid];
n203 -> n204  [key=0, style=solid];
n203 -> n179  [key=2, style=dotted];
n205 -> n206  [key=0, style=solid];
n205 -> n209  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n215  [key=2, style=dotted];
n206 -> n179  [key=2, style=dotted];
n207 -> n209  [key=0, style=solid];
n209 -> n210  [key=0, style=solid];
n209 -> n216  [key=2, style=dotted];
n209 -> n217  [key=2, style=dotted];
n209 -> n209  [color=darkseagreen4, key=1, label=string, style=dashed];
n209 -> n211  [color=darkseagreen4, key=1, label=string, style=dashed];
n209 -> n212  [color=darkseagreen4, key=1, label=string, style=dashed];
n210 -> n211  [key=0, style=solid];
n210 -> n186  [key=2, style=dotted];
n211 -> n194  [key=0, style=solid];
n211 -> n212  [key=0, style=solid];
n212 -> n213  [key=0, style=solid];
n212 -> n179  [key=2, style=dotted];
n195 -> n196  [key=0, style=solid];
n195 -> n199  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n195 -> n201  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n195 -> n205  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n195 -> n209  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n201 -> n202  [key=0, style=solid];
n201 -> n201  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n201 -> n204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n201 -> n209  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n197 -> n198  [key=0, style=solid];
n197 -> n199  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n200  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n201  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n202  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n205  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n206  [color=darkseagreen4, key=1, label=i, style=dashed];
n197 -> n208  [color=darkseagreen4, key=1, label=i, style=dashed];
n198 -> n199  [key=0, style=solid];
n198 -> n209  [key=0, style=solid];
n208 -> n198  [key=0, style=solid];
n208 -> n208  [color=darkseagreen4, key=1, label=i, style=dashed];
n204 -> n208  [key=0, style=solid];
n204 -> n204  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n204 -> n209  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n213 -> n193  [color=blue, key=0, style=bold];
n218 -> n219  [key=0, style=solid];
n218 -> n223  [key=2, style=dotted];
n218 -> n220  [color=darkseagreen4, key=1, label=specs, style=dashed];
n219 -> n220  [key=0, style=solid];
n219 -> n74  [key=2, style=dotted];
n219 -> n224  [key=2, style=dotted];
n219 -> n225  [key=2, style=dotted];
n219 -> n226  [key=2, style=dotted];
n219 -> n221  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
n220 -> n221  [key=0, style=solid];
n220 -> n74  [key=2, style=dotted];
n220 -> n227  [key=2, style=dotted];
n220 -> n228  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n224 -> n247  [key=0, style=solid];
n225 -> n249  [key=0, style=solid];
n221 -> n222  [key=0, style=solid];
n221 -> n40  [key=2, style=dotted];
n221 -> n226  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n222 -> n133  [color=blue, key=0, style=bold];
n229 -> n230  [key=0, style=solid];
n230 -> n228  [color=blue, key=0, style=bold];
n231 -> n232  [key=0, style=solid];
n231 -> n233  [key=2, style=dotted];
n231 -> n234  [key=2, style=dotted];
n231 -> n224  [key=2, style=dotted];
n231 -> n225  [key=2, style=dotted];
n231 -> n235  [key=2, style=dotted];
n231 -> n231  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
n232 -> n142  [color=blue, key=0, style=bold];
n236 -> n237  [key=0, style=solid];
n236 -> n242  [key=2, style=dotted];
n236 -> n238  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n236 -> n239  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n236 -> n244  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n238 -> n239  [key=0, style=solid];
n238 -> n244  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n239 -> n240  [key=0, style=solid];
n239 -> n114  [key=2, style=dotted];
n239 -> n243  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [key=2, style=dotted];
n237 -> n238  [key=0, style=solid];
n237 -> n24  [key=2, style=dotted];
n242 -> n326  [key=0, style=solid];
n240 -> n241  [key=0, style=solid];
n243 -> n244  [key=0, style=solid];
n241 -> n134  [color=blue, key=0, style=bold];
n245 -> n243  [color=blue, key=0, style=bold];
n246 -> n254  [key=0, style=solid];
n246 -> n255  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n291  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n295  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n256  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n257  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n246 -> n258  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n246 -> n259  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n246 -> n260  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n246 -> n261  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n246 -> n262  [color=darkseagreen4, key=1, label=string, style=dashed];
n246 -> n268  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n271  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n274  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n275  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n276  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n279  [color=darkseagreen4, key=1, label=int, style=dashed];
n246 -> n280  [color=darkseagreen4, key=1, label=int, style=dashed];
n247 -> n248  [key=0, style=solid];
n247 -> n43  [key=2, style=dotted];
n247 -> n234  [key=2, style=dotted];
n248 -> n224  [color=blue, key=0, style=bold];
n249 -> n250  [key=0, style=solid];
n249 -> n43  [key=2, style=dotted];
n249 -> n234  [key=2, style=dotted];
n250 -> n225  [color=blue, key=0, style=bold];
n251 -> n252  [key=0, style=solid];
n251 -> n193  [key=2, style=dotted];
n252 -> n253  [key=0, style=solid];
n253 -> n124  [color=blue, key=0, style=bold];
n254 -> n255  [key=0, style=solid];
n254 -> n179  [key=2, style=dotted];
n255 -> n256  [key=0, style=solid];
n255 -> n24  [key=2, style=dotted];
n255 -> n284  [key=2, style=dotted];
n255 -> n290  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n255 -> n294  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n291 -> n292  [key=0, style=solid];
n291 -> n293  [key=2, style=dotted];
n291 -> n179  [key=2, style=dotted];
n295 -> n296  [key=0, style=solid];
n295 -> n297  [key=2, style=dotted];
n295 -> n179  [key=2, style=dotted];
n256 -> n257  [key=0, style=solid];
n256 -> n168  [key=2, style=dotted];
n256 -> n285  [key=2, style=dotted];
n256 -> n179  [key=2, style=dotted];
n257 -> n258  [key=0, style=solid];
n257 -> n259  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n257 -> n260  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n258 -> n259  [key=0, style=solid];
n258 -> n260  [key=0, style=solid];
n258 -> n42  [key=2, style=dotted];
n259 -> n260  [key=0, style=solid];
n259 -> n286  [key=2, style=dotted];
n259 -> n259  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n260 -> n261  [key=0, style=solid];
n260 -> n45  [key=2, style=dotted];
n260 -> n298  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n260 -> n299  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n260 -> n262  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n260 -> n263  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n260 -> n265  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n260 -> n278  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n260 -> n281  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n261 -> n262  [key=0, style=solid];
n261 -> n263  [key=0, style=solid];
n262 -> n263  [key=0, style=solid];
n262 -> n287  [key=2, style=dotted];
n262 -> n262  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n262 -> n265  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n262 -> n278  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n262 -> n281  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n268 -> n269  [key=0, style=solid];
n268 -> n274  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n271 -> n277  [key=0, style=solid];
n274 -> n275  [key=0, style=solid];
n274 -> n278  [key=0, style=solid];
n275 -> n276  [key=0, style=solid];
n275 -> n215  [key=2, style=dotted];
n275 -> n179  [key=2, style=dotted];
n276 -> n278  [key=0, style=solid];
n279 -> n280  [key=0, style=solid];
n279 -> n289  [key=2, style=dotted];
n279 -> n186  [key=2, style=dotted];
n280 -> n263  [key=0, style=solid];
n280 -> n281  [key=0, style=solid];
n290 -> n291  [key=0, style=solid];
n294 -> n295  [key=0, style=solid];
n298 -> n299  [key=0, style=solid];
n299 -> n300  [key=0, style=solid];
n299 -> n301  [key=2, style=dotted];
n299 -> n299  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n263 -> n264  [key=0, style=solid];
n263 -> n281  [key=0, style=solid];
n263 -> n110  [key=2, style=dotted];
n265 -> n266  [key=0, style=solid];
n265 -> n214  [key=2, style=dotted];
n265 -> n267  [color=darkseagreen4, key=1, label=words, style=dashed];
n265 -> n268  [color=darkseagreen4, key=1, label=words, style=dashed];
n265 -> n269  [color=darkseagreen4, key=1, label=words, style=dashed];
n265 -> n270  [color=darkseagreen4, key=1, label=words, style=dashed];
n265 -> n271  [color=darkseagreen4, key=1, label=words, style=dashed];
n265 -> n274  [color=darkseagreen4, key=1, label=words, style=dashed];
n265 -> n275  [color=darkseagreen4, key=1, label=words, style=dashed];
n278 -> n279  [key=0, style=solid];
n278 -> n216  [key=2, style=dotted];
n278 -> n217  [key=2, style=dotted];
n278 -> n288  [key=2, style=dotted];
n278 -> n278  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n278 -> n280  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n278 -> n281  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n281 -> n282  [key=0, style=solid];
n281 -> n179  [key=2, style=dotted];
n281 -> n186  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n268  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n264 -> n270  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n264 -> n274  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n264 -> n278  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n270 -> n271  [key=0, style=solid];
n270 -> n270  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n270 -> n273  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n270 -> n278  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n266 -> n267  [key=0, style=solid];
n266 -> n268  [color=darkseagreen4, key=1, label=i, style=dashed];
n266 -> n269  [color=darkseagreen4, key=1, label=i, style=dashed];
n266 -> n270  [color=darkseagreen4, key=1, label=i, style=dashed];
n266 -> n271  [color=darkseagreen4, key=1, label=i, style=dashed];
n266 -> n274  [color=darkseagreen4, key=1, label=i, style=dashed];
n266 -> n275  [color=darkseagreen4, key=1, label=i, style=dashed];
n266 -> n277  [color=darkseagreen4, key=1, label=i, style=dashed];
n267 -> n268  [key=0, style=solid];
n267 -> n278  [key=0, style=solid];
n269 -> n270  [key=0, style=solid];
n269 -> n179  [key=2, style=dotted];
n277 -> n267  [key=0, style=solid];
n277 -> n277  [color=darkseagreen4, key=1, label=i, style=dashed];
n273 -> n277  [key=0, style=solid];
n273 -> n273  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n273 -> n278  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n272 -> n273  [key=0, style=solid];
n272 -> n179  [key=2, style=dotted];
n282 -> n283  [key=0, style=solid];
n283 -> n246  [color=blue, key=0, style=bold];
n292 -> n290  [color=blue, key=0, style=bold];
n293 -> n302  [key=0, style=solid];
n293 -> n306  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n293 -> n312  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n296 -> n294  [color=blue, key=0, style=bold];
n297 -> n314  [key=0, style=solid];
n297 -> n317  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n297 -> n321  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n300 -> n298  [color=blue, key=0, style=bold];
n302 -> n303  [key=0, style=solid];
n302 -> n24  [key=2, style=dotted];
n302 -> n304  [key=2, style=dotted];
n302 -> n168  [key=2, style=dotted];
n302 -> n305  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n302 -> n311  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n306 -> n307  [key=0, style=solid];
n306 -> n308  [key=2, style=dotted];
n306 -> n309  [key=2, style=dotted];
n306 -> n310  [key=2, style=dotted];
n306 -> n186  [key=2, style=dotted];
n312 -> n313  [key=0, style=solid];
n312 -> n186  [key=2, style=dotted];
n312 -> n309  [key=2, style=dotted];
n312 -> n310  [key=2, style=dotted];
n303 -> n293  [color=blue, key=0, style=bold];
n305 -> n306  [key=0, style=solid];
n311 -> n312  [key=0, style=solid];
n307 -> n305  [color=blue, key=0, style=bold];
n313 -> n311  [color=blue, key=0, style=bold];
n314 -> n315  [key=0, style=solid];
n314 -> n24  [key=2, style=dotted];
n314 -> n284  [key=2, style=dotted];
n314 -> n310  [key=2, style=dotted];
n314 -> n168  [key=2, style=dotted];
n314 -> n316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n314 -> n320  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n317 -> n318  [key=0, style=solid];
n317 -> n319  [key=2, style=dotted];
n321 -> n322  [key=0, style=solid];
n321 -> n309  [key=2, style=dotted];
n315 -> n297  [color=blue, key=0, style=bold];
n316 -> n317  [key=0, style=solid];
n320 -> n321  [key=0, style=solid];
n318 -> n316  [color=blue, key=0, style=bold];
n322 -> n320  [color=blue, key=0, style=bold];
n323 -> n324  [key=0, style=solid];
n323 -> n193  [key=2, style=dotted];
n324 -> n325  [key=0, style=solid];
n325 -> n128  [color=blue, key=0, style=bold];
n326 -> n327  [key=0, style=solid];
n326 -> n328  [key=2, style=dotted];
n326 -> n329  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n327 -> n242  [color=blue, key=0, style=bold];
n329 -> n330  [key=0, style=solid];
n329 -> n331  [color=darkseagreen4, key=1, label=int, style=dashed];
n330 -> n331  [key=0, style=solid];
n330 -> n333  [key=2, style=dotted];
n330 -> n334  [key=2, style=dotted];
n331 -> n332  [key=0, style=solid];
n331 -> n335  [key=2, style=dotted];
n333 -> n336  [key=0, style=solid];
n333 -> n337  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n333 -> n338  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n333 -> n340  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n333 -> n341  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n333 -> n348  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n334 -> n356  [key=0, style=solid];
n334 -> n357  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n334 -> n359  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n334 -> n360  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n334 -> n362  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n334 -> n363  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n332 -> n329  [color=blue, key=0, style=bold];
n336 -> n337  [key=0, style=solid];
n336 -> n343  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n336 -> n348  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n336 -> n353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n336 -> n354  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n337 -> n338  [key=0, style=solid];
n337 -> n342  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n337 -> n352  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n338 -> n339  [key=0, style=solid];
n338 -> n347  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n338 -> n352  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n340 -> n341  [key=0, style=solid];
n340 -> n342  [key=0, style=solid];
n341 -> n342  [key=0, style=solid];
n341 -> n346  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n341 -> n351  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n348 -> n349  [key=0, style=solid];
n348 -> n348  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n348 -> n350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n348 -> n351  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n343 -> n344  [key=0, style=solid];
n343 -> n343  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n343 -> n345  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n343 -> n346  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n353 -> n354  [key=0, style=solid];
n353 -> n353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n354 -> n355  [key=0, style=solid];
n342 -> n343  [key=0, style=solid];
n342 -> n347  [key=0, style=solid];
n352 -> n353  [key=0, style=solid];
n352 -> n354  [key=0, style=solid];
n339 -> n340  [key=0, style=solid];
n339 -> n346  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n339 -> n351  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n347 -> n348  [key=0, style=solid];
n347 -> n352  [key=0, style=solid];
n346 -> n347  [key=0, style=solid];
n346 -> n346  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n346 -> n348  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n346 -> n353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n346 -> n354  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n351 -> n352  [key=0, style=solid];
n351 -> n351  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n351 -> n353  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n351 -> n354  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n344 -> n345  [key=0, style=solid];
n344 -> n346  [key=0, style=solid];
n345 -> n346  [key=0, style=solid];
n345 -> n345  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n349 -> n350  [key=0, style=solid];
n349 -> n351  [key=0, style=solid];
n350 -> n351  [key=0, style=solid];
n350 -> n350  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n355 -> n333  [color=blue, key=0, style=bold];
n356 -> n357  [key=0, style=solid];
n356 -> n362  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n356 -> n363  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n357 -> n358  [key=0, style=solid];
n357 -> n361  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
n359 -> n360  [key=0, style=solid];
n359 -> n361  [key=0, style=solid];
n360 -> n361  [key=0, style=solid];
n360 -> n364  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n362 -> n364  [key=0, style=solid];
n362 -> n367  [key=2, style=dotted];
n362 -> n362  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n363 -> n364  [key=0, style=solid];
n363 -> n367  [key=2, style=dotted];
n363 -> n363  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n358 -> n359  [key=0, style=solid];
n358 -> n364  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n361 -> n362  [key=0, style=solid];
n361 -> n363  [key=0, style=solid];
n364 -> n365  [key=0, style=solid];
n364 -> n364  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n365 -> n366  [key=0, style=solid];
n366 -> n334  [color=blue, key=0, style=bold];
d5 -> d6  [color=green, key=0, style=solid];
d5 -> d7  [color=green, key=2, style=dotted];
d5 -> d8  [color=green, key=2, style=dotted];
d4 -> d5  [color=green, key=0, style=solid];
d6 -> d4  [color=blue, key=0, style=bold];
d7 -> d81  [color=green, key=0, style=solid];
d7 -> d4  [color=darkorchid, key=3, label="Parameter variable char? value", style=bold];
d10 -> d11  [color=green, key=0, style=solid];
d10 -> d12  [color=green, key=2, style=dotted];
d10 -> d8  [color=green, key=2, style=dotted];
d9 -> d10  [color=green, key=0, style=solid];
d11 -> d9  [color=blue, key=0, style=bold];
d12 -> d78  [color=green, key=0, style=solid];
d12 -> d9  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d16 -> d17  [color=green, key=0, style=solid];
d16 -> d18  [color=green, key=0, style=solid];
d16 -> d25  [color=green, key=2, style=dotted];
d13 -> d16  [color=green, key=1, label=string, style=dashed];
d13 -> d18  [color=green, key=1, label=string, style=dashed];
d13 -> d20  [color=green, key=1, label=string, style=dashed];
d13 -> d14  [key=0, style=solid];
d13 -> d19  [color=darkseagreen4, key=1, label=bool, style=dashed];
d13 -> d21  [color=darkseagreen4, key=1, label=bool, style=dashed];
d13 -> d15  [color=darkorchid, key=3, label="method methodReturn CommandLine.Parsing.ArgumentParser Create", style=bold];
d14 -> d16  [color=green, key=0, style=solid];
d14 -> d15  [key=0, style=solid];
d14 -> d24  [key=2, style=dotted];
d17 -> d23  [key=0, style=solid];
d18 -> d19  [color=green, key=0, style=solid];
d18 -> d20  [color=green, key=0, style=solid];
d18 -> d26  [color=green, key=2, style=dotted];
d25 -> d84  [color=green, key=0, style=solid];
d25 -> d13  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d25 -> d30  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d19 -> d23  [key=0, style=solid];
d19 -> d27  [key=2, style=dotted];
d20 -> d21  [color=green, key=0, style=solid];
d20 -> d22  [color=green, key=0, style=solid];
d20 -> d28  [color=green, key=2, style=dotted];
d26 -> d89  [color=green, key=0, style=solid];
d26 -> d13  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d21 -> d23  [key=0, style=solid];
d21 -> d29  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d28 -> d87  [color=green, key=0, style=solid];
d28 -> d13  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d28 -> d30  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
d34 -> d36  [color=green, key=0, style=solid];
d34 -> d25  [color=green, key=2, style=dotted];
d34 -> d28  [color=green, key=2, style=dotted];
d30 -> d34  [color=green, key=1, label=string, style=dashed];
d30 -> d31  [key=0, style=solid];
d30 -> d33  [color=darkseagreen4, key=1, label=string, style=dashed];
d30 -> d32  [color=darkorchid, key=3, label="method methodReturn bool IsInputValue", style=bold];
d33 -> d34  [color=green, key=0, style=solid];
d33 -> d35  [key=0, style=solid];
d36 -> d30  [color=blue, key=0, style=bold];
d78 -> d79  [color=green, key=0, style=solid];
d78 -> n112  [color=green, key=2, style=dotted];
d79 -> d12  [color=blue, key=0, style=bold];
d81 -> d82  [color=green, key=0, style=solid];
d81 -> d83  [color=green, key=2, style=dotted];
d82 -> d7  [color=blue, key=0, style=bold];
d84 -> d85  [color=green, key=0, style=solid];
d84 -> d86  [color=green, key=2, style=dotted];
d85 -> d25  [color=blue, key=0, style=bold];
d87 -> d88  [color=green, key=0, style=solid];
d88 -> d28  [color=blue, key=0, style=bold];
d89 -> d90  [color=green, key=0, style=solid];
d90 -> d26  [color=blue, key=0, style=bold];
d23 -> d13  [color=blue, key=0, style=bold];
d15 -> d23  [key=0, style=solid];
d45 -> d30  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d45 -> d47  [key=0, style=solid];
d31 -> d33  [key=0, style=solid];
d31 -> d24  [key=2, style=dotted];
d31 -> d32  [key=0, style=solid];
d32 -> d36  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d42 -> d45  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
d42 -> d43  [key=0, style=solid];
d42 -> d44  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
d42 -> d46  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
d42 -> d47  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
d42 -> d39  [color=darkorchid, key=3, label="Parameter variable CommandLine.Parsing.IArgumentEnumerator ae", style=bold];
d44 -> d45  [key=0, style=solid];
d44 -> d47  [key=0, style=solid];
d44 -> d51  [key=2, style=dotted];
d46 -> d44  [key=0, style=solid];
d46 -> d52  [key=2, style=dotted];
d47 -> d48  [key=0, style=solid];
d47 -> d49  [key=0, style=solid];
d47 -> d53  [key=2, style=dotted];
d39 -> d42  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<string> InternalWrapperOfGetNextInputValues", style=bold];
d39 -> d40  [key=0, style=solid];
d40 -> d42  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d50 -> d42  [color=blue, key=0, style=bold];
d43 -> d44  [key=0, style=solid];
d43 -> d46  [color=darkseagreen4, key=1, label=list, style=dashed];
d43 -> d3  [key=2, style=dotted];
d43 -> d49  [color=darkseagreen4, key=1, label=list, style=dashed];
d48 -> d50  [key=0, style=solid];
d48 -> d54  [key=2, style=dotted];
d49 -> d50  [key=0, style=solid];
d41 -> d39  [color=blue, key=0, style=bold];
d1 -> d3  [key=2, style=dotted];
d1 -> d2  [key=0, style=solid];
d67 -> d54  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d71 -> d54  [key=2, style=dotted];
d71 -> d72  [key=0, style=solid];
d91 -> d1  [color=darkseagreen4, key=1, label="CommandLine.Parsing.ArgumentParser", style=dashed];
d91 -> d74  [color=darkseagreen4, key=1, label="CommandLine.Parsing.ArgumentParser", style=dashed];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
d66 -> d67  [key=0, style=solid];
d66 -> d68  [key=0, style=solid];
d68 -> d65  [color=blue, key=0, style=bold];
d70 -> d71  [key=0, style=solid];
d70 -> d72  [key=0, style=solid];
d72 -> d69  [color=blue, key=0, style=bold];
d74 -> d75  [key=0, style=solid];
d74 -> d76  [key=2, style=dotted];
d74 -> d77  [key=2, style=dotted];
d65 -> d66  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d75 -> d73  [color=blue, key=0, style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> n289  [key=2, style=dotted];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_11  [key=2, style=dotted];
m1_14 -> m1_12  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=2, style=dotted];
m1_10 -> m1_8  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> n289  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=2, style=dotted];
m1_6 -> m1_4  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_12  [key=2, style=dotted];
m3_11 -> m3_9  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_3  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_8 -> m3_7  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_5  [color=blue, key=0, style=bold];
m3_13 -> m3_1  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m3_13 -> m3_10  [color=darkseagreen4, key=1, label="CommandLine.OptionAttribute", style=dashed];
m4_3 -> m4_4  [color=red, key=0, style=solid];
m4_3 -> m4_6  [color=red, key=1, label="CommandLine.Parsing.OptionMap", style=dashed];
m4_3 -> m4_12  [color=red, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
m4_3 -> m4_17  [color=red, key=1, label=object, style=dashed];
m4_3 -> m4_22  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
m4_3 -> m4_24  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_3 -> m4_28  [color=darkseagreen4, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
m4_3 -> m4_31  [color=red, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
m4_3 -> m4_36  [color=red, key=1, label="CommandLine.Parsing.IArgumentEnumerator", style=dashed];
m4_3 -> m4_37  [color=red, key=1, label=object, style=dashed];
m4_3 -> m4_41  [color=red, key=1, label="CommandLine.Parsing.OptionMap", style=dashed];
m4_3 -> m4_43  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_3 -> m4_13  [color=darkorchid, key=3, label="method methodReturn CommandLine.Parsing.PresentParserState Parse", style=bold];
m4_3 -> m4_45  [color=darkorchid, key=3, label="method methodReturn CommandLine.Parsing.PresentParserState Parse", style=bold];
m4_4 -> m4_5  [color=red, key=0, style=solid];
m4_4 -> m4_47  [color=red, key=2, style=dotted];
m4_4 -> m4_48  [color=red, key=2, style=dotted];
m4_4 -> m4_6  [color=red, key=1, label=group, style=dashed];
m4_4 -> m4_12  [color=red, key=1, label=group, style=dashed];
m4_4 -> m4_15  [color=red, key=1, label=group, style=dashed];
m4_4 -> m4_17  [color=red, key=1, label=group, style=dashed];
m4_4 -> m4_23  [color=red, key=1, label=group, style=dashed];
m4_4 -> m4_41  [color=red, key=1, label=group, style=dashed];
m4_6 -> m4_7  [color=red, key=0, style=solid];
m4_6 -> m4_9  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_10  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_11  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_16  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_17  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_19  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_21  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_24  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_26  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_30  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_31  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_33  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_35  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_37  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_39  [color=red, key=1, label=option, style=dashed];
m4_6 -> m4_43  [color=red, key=1, label=option, style=dashed];
m4_12 -> m4_13  [color=red, key=0, style=solid];
m4_12 -> m4_14  [color=red, key=0, style=solid];
m4_17 -> m4_18  [color=red, key=0, style=solid];
m4_17 -> m4_51  [color=red, key=2, style=dotted];
m4_17 -> m4_52  [color=red, key=2, style=dotted];
m4_17 -> m4_20  [color=red, key=1, label=valueSetting, style=dashed];
m4_22 -> m4_23  [color=red, key=0, style=solid];
m4_22 -> d42  [key=2, style=dotted];
m4_22 -> m4_24  [color=darkseagreen4, key=1, label=items, style=dashed];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_58  [key=2, style=dotted];
m4_24 -> m4_27  [color=darkseagreen4, key=1, label=valueSetting, style=dashed];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [color=red, key=0, style=solid];
m4_28 -> m4_60  [key=2, style=dotted];
m4_31 -> m4_32  [color=red, key=0, style=solid];
m4_31 -> m4_52  [color=red, key=2, style=dotted];
m4_31 -> m4_34  [color=red, key=1, label=valueSetting, style=dashed];
m4_36 -> m4_37  [color=red, key=0, style=solid];
m4_36 -> d42  [color=red, key=2, style=dotted];
m4_37 -> m4_38  [color=red, key=0, style=solid];
m4_37 -> m4_58  [color=red, key=2, style=dotted];
m4_37 -> m4_40  [color=red, key=1, label=valueSetting, style=dashed];
m4_41 -> m4_42  [color=red, key=0, style=solid];
m4_41 -> m4_43  [color=red, key=0, style=solid];
m4_43 -> m4_44  [key=0, style=solid];
m4_43 -> m4_5  [color=red, key=0, style=solid];
m4_43 -> m4_61  [key=2, style=dotted];
m4_5 -> m4_6  [color=red, key=0, style=solid];
m4_5 -> m4_45  [color=red, key=0, style=solid];
m4_5 -> m4_49  [color=red, key=2, style=dotted];
m4_15 -> m4_16  [color=red, key=0, style=solid];
m4_15 -> m4_28  [color=red, key=0, style=solid];
m4_23 -> m4_24  [color=red, key=0, style=solid];
m4_23 -> m4_51  [color=red, key=2, style=dotted];
m4_23 -> m4_57  [color=red, key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_50  [key=2, style=dotted];
m4_11 -> m4_12  [color=red, key=0, style=solid];
m4_11 -> m4_41  [color=red, key=0, style=solid];
m4_16 -> m4_17  [color=red, key=0, style=solid];
m4_16 -> m4_21  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_53  [key=2, style=dotted];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_55  [key=2, style=dotted];
m4_26 -> m4_27  [key=0, style=solid];
m4_26 -> m4_53  [key=2, style=dotted];
m4_30 -> m4_31  [color=red, key=0, style=solid];
m4_30 -> m4_35  [color=red, key=0, style=solid];
m4_33 -> m4_34  [color=red, key=0, style=solid];
m4_33 -> m4_53  [color=red, key=2, style=dotted];
m4_35 -> m4_36  [color=red, key=0, style=solid];
m4_35 -> m4_55  [color=red, key=2, style=dotted];
m4_39 -> m4_40  [color=red, key=0, style=solid];
m4_39 -> m4_53  [color=red, key=2, style=dotted];
m4_8 -> m4_46  [key=0, style=solid];
m4_13 -> m4_46  [key=0, style=solid];
m4_14 -> m4_15  [color=red, key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_20  [key=0, style=solid];
m4_20 -> m4_46  [key=0, style=solid];
m4_20 -> m4_54  [key=2, style=dotted];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_27  [key=0, style=solid];
m4_27 -> m4_46  [key=0, style=solid];
m4_27 -> m4_59  [key=2, style=dotted];
m4_29 -> m4_46  [key=0, style=solid];
m4_32 -> m4_33  [color=red, key=0, style=solid];
m4_32 -> m4_34  [color=red, key=0, style=solid];
m4_34 -> m4_46  [color=red, key=0, style=solid];
m4_34 -> m4_59  [color=red, key=2, style=dotted];
m4_38 -> m4_39  [color=red, key=0, style=solid];
m4_38 -> m4_40  [color=red, key=0, style=solid];
m4_40 -> m4_46  [color=red, key=0, style=solid];
m4_40 -> m4_54  [color=red, key=2, style=dotted];
m4_42 -> m4_46  [key=0, style=solid];
m4_44 -> m4_46  [key=0, style=solid];
m4_46 -> m4_3  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_62 -> m4_1  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m4_62 -> m4_8  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m4_62 -> m4_19  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m4_62 -> m4_26  [color=darkseagreen4, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m4_62 -> m4_33  [color=red, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m4_62 -> m4_39  [color=red, key=1, label="CommandLine.Parsing.OptionGroupParser", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> n43  [key=2, style=dotted];
m5_1 -> m5_4  [key=2, style=dotted];
m5_1 -> m5_1  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_1 -> m5_5  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1 -> m5_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_8  [key=2, style=dotted];
m5_7 -> m5_5  [color=blue, key=0, style=bold];
m5_9 -> m5_6  [color=darkseagreen4, key=1, label=t, style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_9 -> m6_7  [color=blue, key=0, style=bold];
m6_18 -> m6_19  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_6  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [key=0, style=solid];
m6_11 -> m6_6  [key=2, style=dotted];
m6_11 -> m6_13  [key=2, style=dotted];
m6_11 -> m6_14  [key=2, style=dotted];
m6_10 -> m6_11  [key=0, style=solid];
m6_12 -> m6_10  [color=blue, key=0, style=bold];
m6_19 -> m6_20  [key=0, style=solid];
m6_19 -> m6_21  [key=2, style=dotted];
m6_20 -> m6_18  [color=blue, key=0, style=bold];
m6_15 -> m6_16  [key=0, style=solid];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_17 -> m6_15  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
}
