digraph  {
n13 [label="CommandLine.Tests.ArgumentParserFixture", span=""];
n0 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="41-41"];
n1 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="43-43"];
n2 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="ae.MoveNext()", span="45-45"];
n7 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41"];
n3 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="47-47"];
n5 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", color=red, community=0, label="0: ae.Current.Should().Equal(''two'')", span="50-50"];
n8 [cluster="CommandLine.Internal.StringArrayEnumerator.MoveNext()", label="Entry CommandLine.Internal.StringArrayEnumerator.MoveNext()", span="81-81"];
n4 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="49-49"];
n9 [cluster="Unk.PublicWrapperOfGetNextInputValues", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
n10 [cluster="Unk.ElementsShouldBeEqual", label="Entry Unk.ElementsShouldBeEqual", span=""];
n6 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="41-41"];
n11 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
n12 [cluster="Unk.Equal", label="Entry Unk.Equal", span=""];
d5 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", color=green, community=0, label="0: ae.Current.Should().Equal(''two'')", span="50-50"];
m1_7 [cluster="Unk.Should", file="BaseFixture.cs", label="Entry Unk.Should", span=""];
m1_9 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m1_10 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="0: expected.Length.Should().Equal(actual.Count)", span="50-50"];
m1_12 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i < expected.Length", span="51-51"];
m1_13 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", color=green, community=0, file="BaseFixture.cs", label="0: expected[i].Should().Equal(actual[i])", span="53-53"];
m1_11 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="int i = 0", span="51-51"];
m1_14 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i++", span="51-51"];
m1_15 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m1_0 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m1_1 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="0: expected.Length.Should().Equal(actual.Length)", span="41-41"];
m1_3 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i < expected.Length", span="42-42"];
m1_4 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", color=green, community=0, file="BaseFixture.cs", label="0: expected[i].Should().Equal(actual[i])", span="44-44"];
m1_2 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="int i = 0", span="42-42"];
m1_5 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i++", span="42-42"];
m1_6 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m3_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m3_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="0: Result.Should().Be.False()", span="66-66"];
m3_16 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Result = null", span="67-67"];
m3_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m3_18 [cluster="Unk.False", file="CommandLineParserBaseFixture.cs", label="Entry Unk.False", span=""];
m3_4 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53"];
m3_5 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Parser = new CommandLineParser()", span="55-55"];
m3_6 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53"];
m3_0 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41"];
m3_1 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''en-US'')", span="47-47"];
m3_2 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41"];
m3_7 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m3_13 [cluster="Unk.True", file="CommandLineParserBaseFixture.cs", label="Entry Unk.True", span=""];
m3_3 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserBaseFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m3_8 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m3_9 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", color=green, community=0, file="CommandLineParserBaseFixture.cs", label="0: Result.Should().Be.True()", span="60-60"];
m3_10 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Result = null", span="61-61"];
m3_11 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m3_19 [file="CommandLineParserBaseFixture.cs", label="CommandLine.Tests.CommandLineParserBaseFixture", span=""];
m4_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
m4_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="64-64"];
m4_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="65-65"];
m4_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringValue.Should().Equal(''something'')", span="68-68"];
m4_15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="69-69"];
m4_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="67-67"];
m4_16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
m4_178 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m4_179 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="304-304"];
m4_180 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305"];
m4_181 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="307-307"];
m4_182 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m4_262 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m4_263 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="447-447"];
m4_264 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="448-448"];
m4_265 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="450-450"];
m4_266 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m4_244 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m4_245 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="415-415"];
m4_246 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="416-416"];
m4_248 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.DoubleValue.Should().Equal(-4096.1024D)", span="419-419"];
m4_247 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="418-418"];
m4_249 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m4_286 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m4_287 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="483-483"];
m4_288 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="484-484"];
m4_289 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="486-486"];
m4_290 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m4_0 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43"];
m4_1 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43"];
m4_126 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33"];
m4_30 [cluster="Unk.True", file="CommandLineParserFixture.cs", label="Entry Unk.True", span=""];
m4_83 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m4_121 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
m4_256 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m4_257 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="435-435"];
m4_258 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="436-436"];
m4_260 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.DoubleValue.Should().Equal(-4096.1024D)", span="439-439"];
m4_259 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="438-438"];
m4_261 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m4_93 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m4_285 [cluster="float.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
m4_250 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m4_251 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="425-425"];
m4_252 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="426-426"];
m4_254 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.DoubleValue.Should().Equal(-4096.1024D)", span="429-429"];
m4_253 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="428-428"];
m4_255 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m4_94 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m4_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
m4_8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] { }, null)", span="58-58"];
m4_9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
m4_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m4_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m4_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
m4_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
m4_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringValue.Should().Equal(''data.bin'')", span="152-152"];
m4_80 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.FileAccess.Should().Equal(FileAccess.ReadWrite)", span="153-153"];
m4_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="154-154"];
m4_78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="151-151"];
m4_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m4_74 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m4_162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="55-55"];
m4_226 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m4_227 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="385-385"];
m4_228 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="386-386"];
m4_230 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.IntegerValue.Should().Equal(-4096)", span="389-389"];
m4_229 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="388-388"];
m4_231 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m4_163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m4_164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="277-277"];
m4_165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278"];
m4_166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="280-280"];
m4_167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m4_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
m4_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="89-89"];
m4_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="90-90"];
m4_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanThree.Should().Be.True()", span="93-93"];
m4_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanOne.Should().Be.True()", span="94-94"];
m4_37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanTwo.Should().Be.False()", span="95-95"];
m4_38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.NonBooleanValue.Should().Equal(65D)", span="96-96"];
m4_39 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="97-97"];
m4_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="92-92"];
m4_40 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
m4_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
m4_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="136-136"];
m4_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138"];
m4_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="140-140"];
m4_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="139-139"];
m4_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
m4_280 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m4_281 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="474-474"];
m4_282 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="475-475"];
m4_283 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="477-477"];
m4_284 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m4_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
m4_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithOptionList()", span="117-117"];
m4_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119"];
m4_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.SearchKeywords[0].Should().Equal(''string1'')", span="122-122"];
m4_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[0])", span="123-123"];
m4_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.SearchKeywords[1].Should().Equal(''stringTwo'')", span="124-124"];
m4_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[1])", span="125-125"];
m4_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.SearchKeywords[2].Should().Equal(''stringIII'')", span="126-126"];
m4_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[2])", span="127-127"];
m4_63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringValue.Should().Equal(''test-file.txt'')", span="128-128"];
m4_64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.StringValue)", span="129-129"];
m4_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="121-121"];
m4_65 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
m4_193 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m4_194 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="331-331"];
m4_195 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332"];
m4_196 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="334-334"];
m4_197 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m4_6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m4_153 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m4_154 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263"];
m4_155 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="264-264"];
m4_156 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265"];
m4_158 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.AlfaValue.Should().Equal(''alfa'')", span="268-268"];
m4_159 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BetaValue.Should().Equal(''beta'')", span="269-269"];
m4_157 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="267-267"];
m4_160 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m4_220 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m4_221 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="376-376"];
m4_222 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="377-377"];
m4_224 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.IntegerValue.Should().Equal(-4096)", span="380-380"];
m4_223 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="379-379"];
m4_225 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m4_20 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m4_42 [cluster="Unk.False", file="CommandLineParserFixture.cs", label="Entry Unk.False", span=""];
m4_41 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="36-36"];
m4_66 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m4_137 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m4_138 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="241-241"];
m4_139 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="242-242"];
m4_140 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243"];
m4_142 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.AlfaValue.Should().Equal(''alfa'')", span="246-246"];
m4_143 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BetaValue.Should().Equal(''beta'')", span="247-247"];
m4_141 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="245-245"];
m4_144 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m4_84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m4_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
m4_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
m4_91 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
m4_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="162-162"];
m4_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
m4_90 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.DoubleValue.Should().Equal(10.986D)", span="166-166"];
m4_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="165-165"];
m4_92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m4_132 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m4_133 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="230-230"];
m4_134 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231"];
m4_135 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="233-233"];
m4_136 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m4_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
m4_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="75-75"];
m4_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="76-77"];
m4_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringValue.Should().Equal(''another string'')", span="80-80"];
m4_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.IntegerValue.Should().Equal(100)", span="81-81"];
m4_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="82-82"];
m4_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="83-83"];
m4_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="79-79"];
m4_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
m4_204 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m4_205 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="352-352"];
m4_206 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353"];
m4_208 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringValue.Should().Equal(''parser.xml'')", span="356-356"];
m4_209 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="357-357"];
m4_210 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.Items.Count.Should().Equal(1)", span="358-358"];
m4_211 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.Items[0].Should().Equal(''-'')", span="359-359"];
m4_207 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="355-355"];
m4_212 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m4_145 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="51-51"];
m4_161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m4_147 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m4_148 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="253-253"];
m4_149 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="254-254"];
m4_150 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255"];
m4_151 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="257-257"];
m4_152 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m4_214 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m4_215 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="367-367"];
m4_216 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="368-368"];
m4_218 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.IntegerValue.Should().Equal(-4096)", span="371-371"];
m4_217 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="370-370"];
m4_219 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m4_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
m4_3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="51-51"];
m4_4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
m4_122 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m4_123 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithBadDefaults()", span="213-213"];
m4_124 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214"];
m4_125 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m4_213 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m4_112 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
m4_198 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m4_199 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="342-342"];
m4_200 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343"];
m4_202 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringValue.Should().Equal(''-'')", span="346-346"];
m4_201 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="345-345"];
m4_203 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m4_5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m4_268 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m4_269 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="456-456"];
m4_270 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="457-457"];
m4_271 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="459-459"];
m4_272 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m4_232 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m4_233 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="394-394"];
m4_234 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="395-395"];
m4_236 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.IntegerValue.Should().Equal(-4096)", span="398-398"];
m4_235 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="397-397"];
m4_237 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m4_67 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m4_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
m4_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="103-103"];
m4_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="104-104"];
m4_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanTwo.Should().Be.True()", span="107-107"];
m4_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanOne.Should().Be.False()", span="108-108"];
m4_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanThree.Should().Be.False()", span="109-109"];
m4_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.NonBooleanValue.Should().Equal(9D)", span="110-110"];
m4_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="111-111"];
m4_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="106-106"];
m4_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
m4_168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m4_169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="286-286"];
m4_170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287"];
m4_171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="289-289"];
m4_172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m4_183 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m4_184 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="313-313"];
m4_185 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314"];
m4_186 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="316-316"];
m4_187 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m4_146 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="31-31"];
m4_238 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m4_239 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="405-405"];
m4_240 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="406-406"];
m4_242 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.DoubleValue.Should().Equal(-4096.1024D)", span="409-409"];
m4_241 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="408-408"];
m4_243 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m4_291 [cluster="double.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m4_113 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m4_114 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaultArray()", span="200-200"];
m4_115 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: Result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201"];
m4_117 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringArrayValue.Should().Equal(new string[] { ''a'', ''b'', ''c'' })", span="204-204"];
m4_118 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.IntegerArrayValue.Should().Equal(new int[] { 4, 5, 6 })", span="205-205"];
m4_119 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.DoubleArrayValue.Should().Equal(new double[] { 1.1, 2.2, 3.3 })", span="206-206"];
m4_116 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="203-203"];
m4_120 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m4_274 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m4_275 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="465-465"];
m4_276 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="466-466"];
m4_277 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="468-468"];
m4_278 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m4_267 [cluster="short.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
m4_95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m4_96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
m4_97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
m4_102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
m4_98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="176-176"];
m4_99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
m4_101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.NullableDoubleValue.Should().Equal(12.32982D)", span="180-180"];
m4_100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="179-179"];
m4_103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m4_273 [cluster="int.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m4_188 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m4_189 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="322-322"];
m4_190 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323"];
m4_191 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="325-325"];
m4_192 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m4_104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m4_105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaults()", span="188-188"];
m4_106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189"];
m4_108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.StringValue.Should().Equal(''str'')", span="192-192"];
m4_109 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.IntegerValue.Should().Equal(9)", span="193-193"];
m4_110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", color=green, community=0, file="CommandLineParserFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="194-194"];
m4_107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="191-191"];
m4_111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m4_279 [cluster="long.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m4_19 [cluster="Unk.Equal", file="CommandLineParserFixture.cs", label="Entry Unk.Equal", span=""];
m4_127 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m4_128 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="221-221"];
m4_129 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222"];
m4_130 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="224-224"];
m4_131 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m4_173 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m4_174 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="295-295"];
m4_175 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296"];
m4_176 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="298-298"];
m4_177 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m4_292 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m5_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m5_0 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41"];
m5_1 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="43-43"];
m5_2 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", span="44-44"];
m5_6 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="0: writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="50-50"];
m5_3 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="45-45"];
m5_4 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="47-47"];
m5_5 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="0: success.Should().Be.False()", span="49-49"];
m5_7 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41"];
m5_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33"];
m5_14 [cluster="Unk.False", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.False", span=""];
m5_8 [cluster="System.IO.StringWriter.StringWriter()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m5_15 [cluster="System.IO.StringWriter.ToString()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m5_36 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m5_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m5_27 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m5_28 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m5_29 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="71-71"];
m5_30 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", span="72-72"];
m5_32 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", span="75-75"];
m5_34 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="0: writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="78-78"];
m5_31 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="73-73"];
m5_33 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="0: success.Should().Be.False()", span="77-77"];
m5_35 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m5_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="66-66"];
m5_13 [cluster="Unk.Should", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.Should", span=""];
m5_17 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m5_18 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="56-56"];
m5_19 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var settings = new CommandLineParserSettings()", span="57-57"];
m5_20 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="settings.HelpWriter = writer", span="58-58"];
m5_25 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="0: writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="65-65"];
m5_21 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(settings)", span="59-59"];
m5_22 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="60-60"];
m5_23 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="62-62"];
m5_24 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="CommandLineParserSettingsFixture.cs", label="0: success.Should().Be.False()", span="64-64"];
m5_26 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m7_13 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m7_2 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m7_3 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="var yearsPart = new StringBuilder(years.Length * 4)", span="56-56"];
m7_4 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label=years, span="58-58"];
m7_7 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(string.Concat(''''', y))", span="62-62"];
m7_8 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(y)", span="64-64"];
m7_9 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append('', '')", span="65-65"];
m7_10 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Remove(yearsPart.Length - 2, 2)", span="67-67"];
m7_11 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="return yearsPart.ToString();", span="69-69"];
m7_5 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="string y = year.ToString(CultureInfo.InvariantCulture)", span="60-60"];
m7_6 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="y.Length == 2", span="61-61"];
m7_12 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m7_44 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m7_45 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="new CopyrightInfo(''Authors, Inc.'')", span="117-117"];
m7_46 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m7_27 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83"];
m7_28 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(true, ''X & Y Group'', 2006, 2007)", span="85-85"];
m7_29 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="0: copyright.ToString().Should().Equal(''Copyright (C) 2006, 2007 X & Y Group'')", span="87-87"];
m7_30 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83"];
m7_0 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m7_1 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m7_15 [cluster="string.Concat(string, string)", file="CopyrightInfoFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m7_47 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m7_48 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="var info = new CopyleftInfo(true, ''Free Company, Inc.'', 96, 97, 98, 2005)", span="123-123"];
m7_49 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", color=green, community=0, file="CopyrightInfoFixture.cs", label="0: info.ToString().Should().Equal(''Copyleft (C) '96, '97, '98, 2005 Free Company, Inc.'')", span="125-125"];
m7_50 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m7_35 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="83-83"];
m7_51 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130"];
m7_52 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="var info = new CopyrightInfo (''ManOnTheMoon, Inc.'', 2019)", span="132-132"];
m7_53 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="int i=0", span="134-134"];
m7_55 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", color=green, community=0, file="CopyrightInfoFixture.cs", label="0: info.ToString().Length.Should().Equal(37)", span="136-136"];
m7_54 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="i<10", span="134-134"];
m7_56 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="i++", span="134-134"];
m7_57 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130"];
m7_31 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91"];
m7_32 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''W & Z, Inc.'', 2005, 2007)", span="93-93"];
m7_33 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="0: copyright.ToString().Should().Equal(''Copyright (C) 2005 - 2007 W & Z, Inc.'')", span="95-95"];
m7_34 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91"];
m7_17 [cluster="System.Text.StringBuilder.Remove(int, int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m7_23 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="97-97"];
m7_43 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m7_36 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m7_37 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''CommandLine, Ltd'', 1999, 2003, 2004, 2007)", span="101-101"];
m7_38 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", color=green, community=0, file="CopyrightInfoFixture.cs", label="0: copyright.ToString().Should().Equal(''Copyright (C) 1999 - 2003, 2004 - 2007 CommandLine, Ltd'')", span="103-103"];
m7_39 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m7_24 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="113-113"];
m7_18 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m7_16 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m7_14 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfoFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m7_26 [cluster="Unk.Equal", file="CopyrightInfoFixture.cs", label="Entry Unk.Equal", span=""];
m7_19 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m7_20 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(false, ''Authors, Inc.'', 2007)", span="77-77"];
m7_21 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", color=green, community=0, file="CopyrightInfoFixture.cs", label="0: copyright.ToString().Should().Equal(''Copyright (c) 2007 Authors, Inc.'')", span="79-79"];
m7_22 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m7_40 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m7_41 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="new CopyrightInfo(null, 2000)", span="110-110"];
m7_42 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m8_47 [cluster="CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="37-37"];
m8_23 [cluster="Unk.False", file="EnumeratorsFixture.cs", label="Entry Unk.False", span=""];
m8_20 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
m8_25 [cluster="Unk.True", file="EnumeratorsFixture.cs", label="Entry Unk.True", span=""];
m8_48 [cluster="CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.GetRemainingFromNext()", span="33-33"];
m8_24 [cluster="Unk.Null", file="EnumeratorsFixture.cs", label="Entry Unk.Null", span=""];
m8_0 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="40-40"];
m8_1 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueOne = ''one''", span="42-42"];
m8_2 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueTwo = ''two''", span="43-43"];
m8_4 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string[] values = { valueOne, valueTwo, valueThree }", span="46-46"];
m8_7 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(valueOne)", span="50-50"];
m8_3 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueThree = ''three''", span="44-44"];
m8_8 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Equal(valueTwo)", span="51-51"];
m8_11 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(valueTwo)", span="56-56"];
m8_12 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Equal(valueThree)", span="57-57"];
m8_15 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(valueThree)", span="62-62"];
m8_5 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new StringArrayEnumerator(values)", span="47-47"];
m8_6 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="48-48"];
m8_9 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.IsLast.Should().Be.False()", span="52-52"];
m8_10 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="54-54"];
m8_13 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.IsLast.Should().Be.False()", span="58-58"];
m8_14 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="60-60"];
m8_16 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Be.Null()", span="63-63"];
m8_17 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.IsLast.Should().Be.True()", span="64-64"];
m8_18 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="40-40"];
m8_22 [cluster="Unk.Equal", file="EnumeratorsFixture.cs", label="Entry Unk.Equal", span=""];
m8_21 [cluster="Unk.Should", file="EnumeratorsFixture.cs", label="Entry Unk.Should", span=""];
m8_26 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="68-68"];
m8_27 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="70-70"];
m8_28 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="71-71"];
m8_29 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(''a'')", span="73-73"];
m8_30 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Equal(''b'')", span="74-74"];
m8_31 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Equal(''bcd'')", span="75-75"];
m8_32 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.IsLast.Should().Be.False()", span="76-76"];
m8_33 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="78-78"];
m8_34 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(''b'')", span="80-80"];
m8_35 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Equal(''c'')", span="81-81"];
m8_36 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Equal(''cd'')", span="82-82"];
m8_37 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.IsLast.Should().Be.False()", span="83-83"];
m8_38 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="85-85"];
m8_39 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(''c'')", span="87-87"];
m8_40 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Next.Should().Equal(''d'')", span="88-88"];
m8_41 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.GetRemainingFromNext().Should().Equal(''d'')", span="89-89"];
m8_42 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.IsLast.Should().Be.False()", span="90-90"];
m8_43 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="92-92"];
m8_44 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.Current.Should().Equal(''d'')", span="94-94"];
m8_45 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", color=green, community=0, file="EnumeratorsFixture.cs", label="0: e.IsLast.Should().Be.True()", span="95-95"];
m8_46 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="68-68"];
m9_0 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41"];
m9_1 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myprog'')", span="43-43"];
m9_2 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="string s = hi", span="44-44"];
m9_5 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''a message'', sw)", span="49-49"];
m9_3 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="0: s.Should().Equal(''myprog'')", span="46-46"];
m9_4 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="48-48"];
m9_6 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", color=green, community=0, file="HeadingInfoFixture.cs", label="0: sw.ToString().Should().Equal(''myprog: a message'' + Environment.NewLine)", span="51-51"];
m9_7 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41"];
m9_11 [cluster="System.IO.StringWriter.StringWriter()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m9_13 [cluster="System.IO.StringWriter.ToString()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m9_22 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m9_8 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m9_12 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="106-106"];
m9_9 [cluster="Unk.Should", file="HeadingInfoFixture.cs", label="Entry Unk.Should", span=""];
m9_14 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m9_15 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myecho'', ''2.5'')", span="57-57"];
m9_16 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="string s = hi", span="58-58"];
m9_19 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''hello unit-test'', sw)", span="63-63"];
m9_17 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="0: s.Should().Equal(''myecho 2.5'')", span="60-60"];
m9_18 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="62-62"];
m9_20 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", color=green, community=0, file="HeadingInfoFixture.cs", label="0: sw.ToString().Should().Equal(''myecho: hello unit-test'' + Environment.NewLine)", span="65-65"];
m9_21 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m10_8 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="45-45"];
m10_0 [cluster="CommandLine.ParsingError.ParsingError()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="41-41"];
m10_1 [cluster="CommandLine.ParsingError.ParsingError()", file="HelpOptionAttributeFixture.cs", label="this.BadOption = new BadOptionInfo()", span="43-43"];
m10_2 [cluster="CommandLine.ParsingError.ParsingError()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.ParsingError.ParsingError()", span="41-41"];
m10_4 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="46-46"];
m10_5 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="HelpOptionAttributeFixture.cs", label="this.BadOption = new BadOptionInfo(shortName, longName)", span="50-50"];
m10_6 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="HelpOptionAttributeFixture.cs", label="this.ViolatesFormat = format", span="52-52"];
m10_7 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="46-46"];
m10_3 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="41-41"];
m10_9 [file="HelpOptionAttributeFixture.cs", label="CommandLine.ParsingError", span=""];
m12_9 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="MultiLineTextAttributeFixture.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m12_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m12_8 [cluster="object.GetType()", file="MultiLineTextAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m12_0 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m12_1 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="IEnumerable<AssemblyLicenseAttribute> licenseAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyLicenseAttribute), false) as AssemblyLicenseAttribute[]", span="45-45"];
m12_2 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="0: licenseAttributes.Count().Should().Equal(1)", span="47-47"];
m12_3 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="string license = licenseAttributes.Single().Value", span="49-49"];
m12_4 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="string[] lines = license.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="50-50"];
m12_5 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="0: lines[0].Should().Equal(@''This is free software. You may redistribute copies of it under the terms of'')", span="51-51"];
m12_6 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="0: lines[1].Should().Equal(@''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="52-52"];
m12_7 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m12_14 [cluster="string.Split(string[], System.StringSplitOptions)", file="MultiLineTextAttributeFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m12_11 [cluster="Unk.Should", file="MultiLineTextAttributeFixture.cs", label="Entry Unk.Should", span=""];
m12_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m12_15 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56"];
m12_16 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="IEnumerable<AssemblyUsageAttribute> usageAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyUsageAttribute), false) as AssemblyUsageAttribute[]", span="58-58"];
m12_17 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="0: usageAttributes.Count().Should().Equal(1)", span="60-60"];
m12_18 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="0: usageAttributes.Single().Value.Should().Equal(@''[no usage, this is a dll]'' + Environment.NewLine)", span="61-61"];
m12_19 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56"];
m12_20 [file="MultiLineTextAttributeFixture.cs", label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", span=""];
m13_44 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m13_45 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="98-98"];
m13_46 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="99-99"];
m13_47 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="101-101"];
m13_48 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m13_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m13_23 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m13_18 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56"];
m13_19 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="58-58"];
m13_20 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''1'', ''--file=mystuff.xml'' }, options)", span="59-59"];
m13_21 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="61-61"];
m13_22 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56"];
m13_49 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", span="35-35"];
m13_2 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40"];
m13_3 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Parser = new CommandLineParser(new CommandLineParserSettings {MutuallyExclusive = true})", span="42-42"];
m13_4 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40"];
m13_38 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m13_31 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m13_32 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="78-78"];
m13_33 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="79-79"];
m13_35 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.Green.Should().Equal((byte) 167)", span="82-82"];
m13_36 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.Hue.Should().Equal((short) 205)", span="83-83"];
m13_34 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="81-81"];
m13_37 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m13_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m13_5 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m13_13 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m13_24 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m13_25 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="67-67"];
m13_26 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'', ''-v'' }, options)", span="68-68"];
m13_28 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.FileName.Should().Equal(''mystuff.xml'')", span="71-71"];
m13_29 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.Verbose.Should().Equal(true)", span="72-72"];
m13_27 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="70-70"];
m13_30 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m13_50 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m13_51 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="107-107"];
m13_52 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="108-108"];
m13_54 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.Green.Should().Equal((byte) 100)", span="111-111"];
m13_55 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.Hue.Should().Equal((short) 200)", span="112-112"];
m13_56 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.DefaultColorSet.Should().Equal(ColorSet.RgbColorSet)", span="113-113"];
m13_53 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="110-110"];
m13_57 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m13_39 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m13_40 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="89-89"];
m13_41 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'', ''--saturation=37'' }, options)", span="90-90"];
m13_42 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="92-92"];
m13_43 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m13_0 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m13_1 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m13_16 [cluster="Unk.Should", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Should", span=""];
m13_7 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46"];
m13_8 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="48-48"];
m13_9 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'' }, options)", span="49-49"];
m13_11 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: options.FileName.Should().Equal(''mystuff.xml'')", span="52-52"];
m13_10 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="51-51"];
m13_12 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46"];
m13_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m13_58 [file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.MutuallyExclusiveParsingFixture", span=""];
m14_24 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="71-71"];
m14_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="73-73"];
m14_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="74-74"];
m14_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="76-76"];
m14_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="71-71"];
m14_13 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m14_23 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m14_29 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="80-80"];
m14_30 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="82-82"];
m14_31 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum=ReadWrite'' }, options)", span="83-83"];
m14_33 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.EnumValue.Should().Equal(FileAccess.ReadWrite)", span="86-86"];
m14_32 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="85-85"];
m14_34 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="88-88"];
m14_35 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="89-89"];
m14_37 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.EnumValue.Should().Be.Null()", span="92-92"];
m14_36 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="91-91"];
m14_38 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableEnumerationOption()", span="80-80"];
m14_39 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="96-96"];
m14_40 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="98-98"];
m14_41 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-e'', ''Overwrite'' }, options)", span="99-99"];
m14_42 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="101-101"];
m14_43 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableEnumerationOptionFails()", span="96-96"];
m14_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m14_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="116-116"];
m14_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="117-117"];
m14_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.DoubleValue.Should().Equal(9.999)", span="120-120"];
m14_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="119-119"];
m14_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="122-122"];
m14_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="123-123"];
m14_57 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.DoubleValue.Should().Be.Null()", span="126-126"];
m14_56 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="125-125"];
m14_58 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m14_64 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="139-139"];
m14_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="141-141"];
m14_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="142-142"];
m14_67 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="144-144"];
m14_68 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", span="139-139"];
m14_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m14_3 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="48-48"];
m14_4 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''99'' }, options)", span="49-49"];
m14_6 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.IntegerValue.Should().Equal(99)", span="52-52"];
m14_5 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="51-51"];
m14_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="54-54"];
m14_8 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="55-55"];
m14_10 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.IntegerValue.Should().Be.Null()", span="58-58"];
m14_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="57-57"];
m14_11 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m14_12 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m14_18 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="62-62"];
m14_19 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="64-64"];
m14_20 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''string-value'' }, options)", span="65-65"];
m14_21 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="67-67"];
m14_22 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableIntegerOptionFails()", span="62-62"];
m14_0 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m14_1 [cluster="CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.NullableTypesParsingFixture()", span="41-41"];
m14_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="105-105"];
m14_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="107-107"];
m14_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", span="108-108"];
m14_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="110-110"];
m14_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="105-105"];
m14_17 [cluster="Unk.Null", file="NullableTypesParsingFixture.cs", label="Entry Unk.Null", span=""];
m14_15 [cluster="Unk.Should", file="NullableTypesParsingFixture.cs", label="Entry Unk.Should", span=""];
m14_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m14_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="150-150"];
m14_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="151-151"];
m14_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.StringValue.Should().Equal(''alone'')", span="154-154"];
m14_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="153-153"];
m14_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="options = new NullableTypesOptions()", span="156-156"];
m14_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="157-158"];
m14_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.DoubleValue.Should().Equal(1.789D)", span="161-161"];
m14_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.IntegerValue.Should().Equal(10099)", span="162-162"];
m14_79 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.StringValue.Should().Equal(''together'')", span="163-163"];
m14_80 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", color=green, community=0, file="NullableTypesParsingFixture.cs", label="0: options.EnumValue.Should().Equal(FileAccess.Read)", span="164-164"];
m14_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeTrue()", span="160-160"];
m14_81 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m14_59 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="130-130"];
m14_60 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="var options = new NullableTypesOptions()", span="132-132"];
m14_61 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''9,999'' }, options)", span="133-133"];
m14_62 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="ResultShouldBeFalse()", span="135-135"];
m14_63 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", file="NullableTypesParsingFixture.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingBadValueToANullableDoubleOptionFails()", span="130-130"];
m14_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="NullableTypesParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m14_82 [file="NullableTypesParsingFixture.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m15_12 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="57-57"];
m15_13 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="59-59"];
m15_14 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'', ''alfa'', ''beta'', ''gamma'' }, options)", span="60-60"];
m15_16 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="63-63"];
m15_15 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="62-62"];
m15_17 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="57-57"];
m15_56 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123"];
m15_57 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArrayAndValueList()", span="125-125"];
m15_58 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-shere'', ''-i999'', ''--strarr=0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' , ''--switch'', ''f1.xml'', ''f2.xml''}, options)", span="126-127"];
m15_60 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''here'')", span="130-130"];
m15_61 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.IntegerValue.Should().Equal(999)", span="131-131"];
m15_62 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' }, options.StringArrayValue)", span="132-132"];
m15_63 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="133-133"];
m15_64 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="134-134"];
m15_59 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="129-129"];
m15_65 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123"];
m15_66 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", span="35-35"];
m15_83 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="164-164"];
m15_84 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="166-166"];
m15_85 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''one'', ''2'', ''3'' }, options)", span="167-167"];
m15_86 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="169-169"];
m15_87 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="171-171"];
m15_88 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-yone'', ''2'', ''3'' }, options)", span="172-172"];
m15_89 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="174-174"];
m15_90 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="176-176"];
m15_91 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--intarr'', ''1'', ''two'', ''3'' }, options)", span="177-177"];
m15_92 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="179-179"];
m15_93 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="181-181"];
m15_94 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--intarr=1'', ''2'', ''three'' }, options)", span="182-182"];
m15_95 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="184-184"];
m15_96 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="164-164"];
m15_18 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="67-67"];
m15_19 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="69-69"];
m15_20 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-zapple'', ''kiwi'' }, options)", span="70-70"];
m15_22 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="73-73"];
m15_21 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="72-72"];
m15_23 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="67-67"];
m15_55 [cluster="Unk.True", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m15_97 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="189-189"];
m15_98 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="191-191"];
m15_99 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'' }, options)", span="192-192"];
m15_100 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="194-194"];
m15_101 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="196-196"];
m15_102 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--intarr'' }, options)", span="197-197"];
m15_103 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="199-199"];
m15_104 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="189-189"];
m15_170 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338"];
m15_171 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''-w'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="340-340"];
m15_172 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338"];
m15_185 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="OptionArrayAttributeParsingFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m15_46 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="109-109"];
m15_47 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="111-111"];
m15_48 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-i'', ''191919'', ''-z'', ''one'', ''two'', ''three'', ''--switch'', ''--string=near'' }, options)", span="112-113"];
m15_50 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.IntegerValue.Should().Equal(191919)", span="116-116"];
m15_51 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="117-117"];
m15_52 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="118-118"];
m15_53 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''near'')", span="119-119"];
m15_49 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="115-115"];
m15_54 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="109-109"];
m15_10 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m15_163 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324"];
m15_164 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="326-326"];
m15_165 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324"];
m15_76 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m15_195 [cluster="CommandLine.Tests.OptionsWithUIntArray.OptionsWithUIntArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionsWithUIntArray.OptionsWithUIntArray()", span="34-34"];
m15_24 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="77-77"];
m15_25 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="79-79"];
m15_26 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr=apple'', ''kiwi'' }, options)", span="80-80"];
m15_28 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="83-83"];
m15_27 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="82-82"];
m15_29 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="77-77"];
m15_131 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="257-257"];
m15_132 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="259-259"];
m15_133 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string=after''\r\n            }, options)", span="260-265"];
m15_135 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="268-268"];
m15_136 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="269-269"];
m15_137 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="270-270"];
m15_138 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''after'')", span="271-271"];
m15_134 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="267-267"];
m15_139 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="273-273"];
m15_140 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''--string'', ''before'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="274-279"];
m15_142 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''before'')", span="282-282"];
m15_143 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="283-283"];
m15_144 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="284-284"];
m15_145 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="285-285"];
m15_141 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="281-281"];
m15_146 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="287-287"];
m15_147 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-s'', ''near-the-center'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="288-293"];
m15_149 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="296-296"];
m15_150 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="297-297"];
m15_151 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''near-the-center'')", span="298-298"];
m15_152 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="299-299"];
m15_148 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="295-295"];
m15_153 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="301-301"];
m15_154 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''--switch'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-i'', ''1234'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string'', ''I'm really playing with the parser!''\r\n            }, options)", span="302-309"];
m15_156 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="312-312"];
m15_157 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="313-313"];
m15_158 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="314-314"];
m15_159 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.IntegerValue.Should().Equal(1234)", span="315-315"];
m15_160 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="316-316"];
m15_161 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''I'm really playing with the parser!'')", span="317-317"];
m15_155 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="311-311"];
m15_162 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="257-257"];
m15_2 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47"];
m15_3 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="49-49"];
m15_4 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-z'', ''alfa'', ''beta'', ''gamma'' }, options)", span="50-50"];
m15_6 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="53-53"];
m15_5 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="52-52"];
m15_7 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47"];
m15_166 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m15_196 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m15_197 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="387-387"];
m15_198 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''-s'', ''just a string'',\r\n                ''-o'', ''10'', ''20'', ''30'', ''40'',\r\n                ''-t'', ''11'', ''22'', ''33'', ''44'',\r\n                ''-b''\r\n            }, options)", span="388-393"];
m15_200 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.SomeStringValue.Should().Equal(''just a string'')", span="396-396"];
m15_201 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="397-397"];
m15_202 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="398-398"];
m15_203 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.SomeBooleanValue.Should().Be.True()", span="399-399"];
m15_199 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="395-395"];
m15_204 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m15_39 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98"];
m15_40 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="100-100"];
m15_41 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''before'', ''-z'', ''one'', ''two'', ''three'' }, options)", span="101-101"];
m15_43 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''before'')", span="104-104"];
m15_44 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="105-105"];
m15_42 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="103-103"];
m15_45 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98"];
m15_11 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m15_9 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m15_186 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367"];
m15_187 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="369-369"];
m15_188 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''--somestr'', ''just a string'',\r\n                ''--arrayone'', ''10'', ''20'', ''30'', ''40'',\r\n                ''--arraytwo'', ''11'', ''22'', ''33'', ''44'',\r\n                ''--somebool''\r\n            }, options)", span="370-375"];
m15_190 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.SomeStringValue.Should().Equal(''just a string'')", span="378-378"];
m15_191 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="379-379"];
m15_192 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="380-380"];
m15_193 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.SomeBooleanValue.Should().Be.True()", span="381-381"];
m15_189 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="377-377"];
m15_194 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367"];
m15_111 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217"];
m15_112 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="219-219"];
m15_113 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="220-224"];
m15_115 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="227-227"];
m15_116 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="228-228"];
m15_117 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="229-229"];
m15_114 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="226-226"];
m15_118 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="231-231"];
m15_119 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="232-236"];
m15_121 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="239-239"];
m15_122 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="240-240"];
m15_123 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="241-241"];
m15_120 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="238-238"];
m15_124 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="243-243"];
m15_125 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="244-248"];
m15_127 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="251-251"];
m15_128 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="252-252"];
m15_129 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="253-253"];
m15_126 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="250-250"];
m15_130 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217"];
m15_77 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="154-154"];
m15_78 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="156-156"];
m15_79 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''1'', ''2'', ''3'' }, options)", span="157-157"];
m15_81 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3 }, options.IntegerArrayValue)", span="160-160"];
m15_80 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="159-159"];
m15_82 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="154-154"];
m15_105 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205"];
m15_106 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="207-207"];
m15_107 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-q'', ''0.1'', ''2.3'', ''0.9'' }, options)", span="208-208"];
m15_109 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, 2.3, .9 }, options.DoubleArrayValue)", span="211-211"];
m15_108 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="210-210"];
m15_110 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205"];
m15_8 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m15_176 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m15_177 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="353-353"];
m15_178 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="354-354"];
m15_183 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="361-361"];
m15_179 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="355-355"];
m15_180 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-q'', ''1,2'', ''1,23'', ''1,234'' }, options)", span="356-356"];
m15_182 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { 1.2, 1.23, 1.234 }, options.DoubleArrayValue)", span="359-359"];
m15_181 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="358-358"];
m15_184 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m15_68 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138"];
m15_69 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="140-140"];
m15_70 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-z'' }, options)", span="141-141"];
m15_71 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="143-143"];
m15_72 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="145-145"];
m15_73 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'' }, options)", span="146-146"];
m15_74 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="148-148"];
m15_75 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138"];
m15_167 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m15_168 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''--bstrarr'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="333-333"];
m15_169 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m15_173 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345"];
m15_174 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="347-347"];
m15_175 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345"];
m15_38 [cluster="Unk.Equal", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Equal", span=""];
m15_67 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m15_0 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m15_1 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m15_30 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87"];
m15_31 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="89-89"];
m15_32 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-z'', ''one'', ''two'', ''three'', ''-s'', ''after'' }, options)", span="90-90"];
m15_34 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="93-93"];
m15_35 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", color=green, community=0, file="OptionArrayAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''after'')", span="94-94"];
m15_33 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="92-92"];
m15_36 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87"];
m15_205 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.OptionArrayAttributeParsingFixture", span=""];
m16_50 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="118-118"];
m16_51 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="119-119"];
m16_52 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label=values, span="120-120"];
m16_53 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="fieldRef.Add(item)", span="122-122"];
m16_54 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="return true;", span="124-124"];
m16_55 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=red, community=0, file="OptionInfo.cs", label="1: Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="115-115"];
m16_56 [cluster="System.Collections.Generic.List<T>.List()", color=red, community=0, file="OptionInfo.cs", label="1: Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m16_57 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", color=red, community=0, file="OptionInfo.cs", label="0: Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m16_58 [cluster="string.Split(params char[])", color=red, community=0, file="OptionInfo.cs", label="0: Entry string.Split(params char[])", span="0-0"];
m16_59 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionInfo.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m16_16 [cluster="CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.Internal.PropertyWriter.PropertyWriter(System.Reflection.PropertyInfo)", span="45-45"];
m16_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="451-451"];
m16_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m16_22 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", color=green, community=0, file="OptionInfo.cs", label="0: return _propertyWriter.WriteScalar(value, options);", span="86-86"];
m16_23 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="74-74"];
m16_24 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="115-115"];
m16_25 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="OptionInfo.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m16_26 [cluster="CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteNullable(string, object)", span="73-73"];
m16_27 [cluster="CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.PropertyWriter.WriteScalar(string, object)", span="52-52"];
m16_28 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="89-89"];
m16_29 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var elementType = _property.PropertyType.GetElementType()", span="91-91"];
m16_30 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var array = Array.CreateInstance(elementType, values.Count)", span="92-92"];
m16_31 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="int i = 0", span="94-94"];
m16_32 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i < array.Length", span="94-94"];
m16_33 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="98-98"];
m16_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=red, community=0, file="OptionInfo.cs", label="1: var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143"];
m16_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", color=red, community=0, file="OptionInfo.cs", label="0: lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144"];
m16_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146"];
m16_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147"];
m16_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148"];
m16_67 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", color=red, community=0, file="OptionInfo.cs", label="0: Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="186-186"];
m16_68 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", color=red, community=0, file="OptionInfo.cs", label="0: return _property.GetValue(target, null);", span="188-188"];
m16_69 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", color=red, community=0, file="OptionInfo.cs", label="1: Exit CommandLine.Internal.OptionInfo.GetValue(object)", span="186-186"];
m16_75 [cluster="System.Activator.CreateInstance(System.Type)", file="OptionInfo.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m16_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="OptionInfo.cs", label="CommandLine.Internal.OptionInfo", span=""];
m16_217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="509-509"];
m16_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m16_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158"];
m16_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="sut.MaximumDisplayWidth = 40", span="159-159"];
m16_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163"];
m16_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166"];
m16_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167"];
m16_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168"];
m16_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169"];
m16_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170"];
m16_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m16_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172"];
m16_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m16_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="OptionInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m16_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="OptionInfo.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m16_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259"];
m16_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="262-268"];
m16_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="271-271"];
m16_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="274-274"];
m16_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="275-275"];
m16_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="276-276"];
m16_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="277-277"];
m16_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="278-278"];
m16_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="279-279"];
m16_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="280-280"];
m16_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="281-281"];
m16_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="282-282"];
m16_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="283-283"];
m16_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259"];
m16_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341"];
m16_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="345-348"];
m16_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="352-352"];
m16_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="353-353"];
m16_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="354-354"];
m16_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="355-355"];
m16_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="356-356"];
m16_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="357-357"];
m16_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="358-358"];
m16_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="359-359"];
m16_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="360-360"];
m16_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="361-361"];
m16_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341"];
m16_39 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="89-89"];
m16_40 [cluster="System.Type.GetElementType()", file="OptionInfo.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m16_41 [cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m16_42 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", color=red, community=0, file="OptionInfo.cs", label="1: Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m16_43 [cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m16_44 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", color=red, community=0, file="OptionInfo.cs", label="1: Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m16_45 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="109-109"];
m16_46 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="_property.SetValue(options, value, null)", span="111-111"];
m16_47 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="return true;", span="112-112"];
m16_48 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="109-109"];
m16_49 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="_property.SetValue(options, new List<string>(), null)", span="117-117"];
m16_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="OptionInfo.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m16_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m16_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="OptionInfo.cs", label="var sut = new HelpText(''Heading Info.'')", span="181-181"];
m16_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="OptionInfo.cs", label="sut.MaximumDisplayWidth = 40", span="182-182"];
m16_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="OptionInfo.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185"];
m16_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="OptionInfo.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188"];
m16_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=red, community=0, file="OptionInfo.cs", label="1: lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189"];
m16_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=red, community=0, file="OptionInfo.cs", label="1: lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190"];
m16_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=red, community=0, file="OptionInfo.cs", label="1: lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191"];
m16_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=red, community=0, file="OptionInfo.cs", label="1: lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m16_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=red, community=0, file="OptionInfo.cs", label="0: lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m16_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", color=red, community=0, file="OptionInfo.cs", label="0: lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194"];
m16_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m16_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314"];
m16_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="317-318"];
m16_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="319-322"];
m16_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="325-325"];
m16_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="328-328"];
m16_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="330-330"];
m16_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="331-331"];
m16_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="332-332"];
m16_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="333-333"];
m16_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="334-334"];
m16_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="335-335"];
m16_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="336-336"];
m16_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314"];
m16_0 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
m16_1 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="attribute == null", span="47-47"];
m16_2 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''attribute'', SR.ArgumentNullException_AttributeCannotBeNull);", span="49-49"];
m16_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="OptionInfo.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m16_36 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return false;", span="103-103"];
m16_38 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return true;", span="106-106"];
m16_34 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="_property.SetValue(options, array, null)", span="99-99"];
m16_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="OptionInfo.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m16_3 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="property == null", span="51-51"];
m16_60 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="127-127"];
m16_61 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=red, community=0, file="OptionInfo.cs", label="0: _hasDefaultValue", span="129-129"];
m16_62 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=red, community=0, file="OptionInfo.cs", label="0: _property.SetValue(options, _defaultValue, null)", span="133-133"];
m16_63 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", color=red, community=0, file="OptionInfo.cs", label="0: Exception", span="135-135"];
m16_64 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="throw new CommandLineParserException(''Bad default value.'', e);", span="137-137"];
m16_19 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="return SetValueList(value, options);", span="78-78"];
m16_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="OptionInfo.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m16_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366"];
m16_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="369-371"];
m16_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="var text = HelpText.RenderUsageText(result)", span="374-374"];
m16_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="var lines = text.ToNotEmptyLines()", span="377-377"];
m16_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="380-380"];
m16_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="381-381"];
m16_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="382-382"];
m16_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="383-383"];
m16_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="384-384"];
m16_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="385-385"];
m16_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="386-386"];
m16_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366"];
m16_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="OptionInfo.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m16_37 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i++", span="94-94"];
m16_146 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="240-240"];
m16_128 [cluster="lambda expression", file="OptionInfo.cs", label="err.Tag", span="219-219"];
m16_130 [cluster="lambda expression", file="OptionInfo.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="222-222"];
m16_132 [cluster="lambda expression", file="OptionInfo.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="224-224"];
m16_134 [cluster="lambda expression", file="OptionInfo.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="226-226"];
m16_136 [cluster="lambda expression", file="OptionInfo.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="228-228"];
m16_138 [cluster="lambda expression", file="OptionInfo.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="230-230"];
m16_142 [cluster="lambda expression", file="OptionInfo.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="234-234"];
m16_127 [cluster="lambda expression", file="OptionInfo.cs", label="Entry lambda expression", span="217-238"];
m16_129 [cluster="lambda expression", file="OptionInfo.cs", label="ErrorType.BadFormatTokenError", span="221-221"];
m16_131 [cluster="lambda expression", file="OptionInfo.cs", label="ErrorType.MissingValueOptionError", span="223-223"];
m16_133 [cluster="lambda expression", file="OptionInfo.cs", label="ErrorType.UnknownOptionError", span="225-225"];
m16_135 [cluster="lambda expression", file="OptionInfo.cs", label="ErrorType.MissingRequiredOptionError", span="227-227"];
m16_137 [cluster="lambda expression", file="OptionInfo.cs", label="ErrorType.SequenceOutOfRangeError", span="229-229"];
m16_139 [cluster="lambda expression", file="OptionInfo.cs", label="ErrorType.NoVerbSelectedError", span="231-231"];
m16_141 [cluster="lambda expression", file="OptionInfo.cs", label="ErrorType.BadVerbSelectedError", span="233-233"];
m16_143 [cluster="lambda expression", file="OptionInfo.cs", label="throw new InvalidOperationException();", span="236-236"];
m16_140 [cluster="lambda expression", file="OptionInfo.cs", label="return ''ERR no-verb-selected'';", span="232-232"];
m16_144 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="217-238"];
m16_147 [cluster="lambda expression", file="OptionInfo.cs", label="string.Empty", span="240-240"];
m16_148 [cluster="lambda expression", file="OptionInfo.cs", label="Exit lambda expression", span="240-240"];
m16_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="OptionInfo.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m16_35 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label=FormatException, span="101-101"];
m16_65 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="127-127"];
m16_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="OptionInfo.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m16_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="OptionInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m16_21 [cluster="string.ToNotEmptyLines()", color=green, community=0, file="OptionInfo.cs", label="0: Entry string.ToNotEmptyLines()", span="10-10"];
m16_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326"];
m16_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="OptionInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m16_4 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''property'', SR.ArgumentNullException_PropertyCannotBeNull);", span="53-53"];
m16_165 [cluster="Unk.StartWithEquivalent", file="OptionInfo.cs", label="Entry Unk.StartWithEquivalent", span=""];
m16_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="OptionInfo.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="253-253"];
m16_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="OptionInfo.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m16_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="OptionInfo.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m16_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", color=green, community=0, file="OptionInfo.cs", label="0: lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40"];
m16_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39"];
m16_5 [cluster="Unk.ShouldBeEquivalentTo", file="OptionInfo.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m16_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m16_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m16_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m16_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36"];
m16_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37"];
m16_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38"];
m16_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41"];
m16_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m16_218 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390"];
m16_219 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="393-398"];
m16_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="401-401"];
m16_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var text = helpText.ToString()", span="404-404"];
m16_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="405-405"];
m16_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="406-406"];
m16_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="407-407"];
m16_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="408-408"];
m16_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="409-409"];
m16_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="410-410"];
m16_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="411-411"];
m16_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="412-412"];
m16_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="413-413"];
m16_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="414-414"];
m16_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="415-415"];
m16_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="416-416"];
m16_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="417-417"];
m16_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="418-418"];
m16_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="419-419"];
m16_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="420-420"];
m16_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="421-421"];
m16_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="422-422"];
m16_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="423-423"];
m16_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="424-424"];
m16_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390"];
m16_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="OptionInfo.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m16_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m16_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", color=red, community=0, file="OptionInfo.cs", label="0: var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-216"];
m16_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="217-238"];
m16_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="243-243"];
m16_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="239-240"];
m16_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var lines = errorsText.ToNotEmptyLines()", span="246-246"];
m16_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="248-248"];
m16_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="249-249"];
m16_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="250-250"];
m16_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="251-251"];
m16_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="252-252"];
m16_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="253-253"];
m16_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="254-254"];
m16_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m16_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288"];
m16_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="291-296"];
m16_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="299-299"];
m16_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="302-302"];
m16_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="304-304"];
m16_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="305-305"];
m16_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="306-306"];
m16_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="307-307"];
m16_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="308-308"];
m16_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="309-309"];
m16_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="OptionInfo.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288"];
m16_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="OptionInfo.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m16_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="OptionInfo.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m17_49 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="125-125"];
m17_50 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="var longOi = _optionMap[''nomorebugshere'']", span="127-127"];
m17_51 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", color=green, community=0, file="OptionMapFixture.cs", label="0: longOi.Should().Be.Null()", span="128-128"];
m17_52 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="125-125"];
m17_19 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="64-64"];
m17_20 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="var oa = new OptionAttribute(shortName, longName)", span="66-66"];
m17_21 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", span="67-67"];
m17_22 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", span="68-68"];
m17_24 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", span="70-70"];
m17_23 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="_options.Add(oi)", span="69-69"];
m17_25 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(char, string)", span="64-64"];
m17_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="55-55"];
m17_16 [cluster="Unk.CreateOptionInfo", file="OptionMapFixture.cs", label="Entry Unk.CreateOptionInfo", span=""];
m17_37 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ManageOptions()", span="110-110"];
m17_38 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="0: _omBuilder.Options[0].Should().Be.SameAs(_optionMap[_omBuilder.Names[0]])", span="112-112"];
m17_39 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="0: _omBuilder.Options[1].Should().Be.SameAs(_optionMap[_omBuilder.Names[1]])", span="113-113"];
m17_40 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="0: _omBuilder.Options[2].Should().Be.SameAs(_optionMap[_omBuilder.Names[2]])", span="114-114"];
m17_41 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ManageOptions()", span="110-110"];
m17_5 [cluster="OptionMap.cstr", file="OptionMapFixture.cs", label="Entry OptionMap.cstr", span=""];
m17_43 [cluster="Unk.SameAs", file="OptionMapFixture.cs", label="Entry Unk.SameAs", span=""];
m17_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="64-64"];
m17_17 [cluster="Unk.Add", file="OptionMapFixture.cs", label="Entry Unk.Add", span=""];
m17_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m17_8 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="55-55"];
m17_9 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="var oa = new OptionAttribute(longName)", span="57-57"];
m17_10 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", span="58-58"];
m17_11 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", span="59-59"];
m17_13 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", span="61-61"];
m17_12 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="_options.Add(oi)", span="60-60"];
m17_14 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string)", span="55-55"];
m17_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m17_27 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateInstance()", span="93-93"];
m17_28 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_omBuilder = new OptionMapBuilder(3)", span="95-95"];
m17_29 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_omBuilder.AppendOption('p', ''pretend'')", span="96-96"];
m17_30 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_omBuilder.AppendOption(''newuse'')", span="97-97"];
m17_31 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_omBuilder.AppendOption('D', null)", span="98-98"];
m17_32 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_optionMap = _omBuilder.OptionMap", span="100-100"];
m17_33 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateInstance()", span="93-93"];
m17_34 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="104-104"];
m17_35 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="_optionMap = null", span="106-106"];
m17_36 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="104-104"];
m17_48 [cluster="Unk.Null", file="OptionMapFixture.cs", label="Entry Unk.Null", span=""];
m17_53 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m17_54 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map == null", span="133-133"];
m17_62 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute1.UniqueName] = option1", span="146-146"];
m17_63 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute2.UniqueName] = option2", span="147-147"];
m17_64 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", span="148-148"];
m17_65 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache != null", span="150-150"];
m17_66 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", span="152-152"];
m17_67 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", span="153-153"];
m17_68 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", span="154-154"];
m17_69 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="return map;", span="157-157"];
m17_55 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map = new OptionMap (3, new CommandLineParserSettings (true))", span="135-135"];
m17_56 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute1 = new OptionAttribute('p', ''pretend'')", span="138-138"];
m17_57 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute2 = new OptionAttribute(''newuse'')", span="139-139"];
m17_59 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option1 = attribute1.CreateOptionInfo()", span="142-142"];
m17_58 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var attribute3 = new OptionAttribute('D', null)", span="140-140"];
m17_60 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option2 = attribute2.CreateOptionInfo()", span="143-143"];
m17_61 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="var option3 = attribute3.CreateOptionInfo()", span="144-144"];
m17_70 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m17_0 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="48-48"];
m17_1 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_optionMap = new OptionMap(capacity, new CommandLineParserSettings(true))", span="50-50"];
m17_2 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_options = new List<OptionInfo>(capacity)", span="51-51"];
m17_3 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_names = new List<string>(capacity)", span="52-52"];
m17_4 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="48-48"];
m17_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="54-54"];
m17_44 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="118-118"];
m17_45 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="var shortOi = _optionMap[''y'']", span="120-120"];
m17_46 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", color=green, community=0, file="OptionMapFixture.cs", label="0: shortOi.Should().Be.Null()", span="121-121"];
m17_47 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="118-118"];
m17_71 [file="OptionMapFixture.cs", label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", span=""];
m18_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="PropertyWriter.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1473-1473"];
m18_0 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="PropertyWriter.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="40-40"];
m18_1 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="PropertyWriter.cs", label="0: var writer = new StringWriter()", span="42-42"];
m18_2 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="PropertyWriter.cs", label="0: ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", span="43-43"];
m18_6 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.AreEqual(''MockOptions::GetUsage()'', writer.ToString())", span="49-49"];
m18_3 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="PropertyWriter.cs", label="0: var options = new SimpleOptionsWithHelpOption()", span="44-44"];
m18_4 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="PropertyWriter.cs", label="1: bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="46-46"];
m18_5 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.AreEqual(false, success)", span="48-48"];
m18_7 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="PropertyWriter.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="40-40"];
m18_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="PropertyWriter.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33"];
m18_14 [cluster="System.IO.StringWriter.ToString()", file="PropertyWriter.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m18_8 [cluster="System.IO.StringWriter.StringWriter()", file="PropertyWriter.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m18_34 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="PropertyWriter.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1488-1488"];
m18_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="PropertyWriter.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1694-1694"];
m18_13 [cluster="Unk.AreEqual", file="PropertyWriter.cs", label="Entry Unk.AreEqual", span=""];
m18_25 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="PropertyWriter.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1545-1545"];
m18_26 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="PropertyWriter.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="68-68"];
m18_27 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="PropertyWriter.cs", label="0: var writer = new StringWriter()", span="70-70"];
m18_28 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="PropertyWriter.cs", label="0: ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", span="71-71"];
m18_30 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="PropertyWriter.cs", label="0: bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", span="74-74"];
m18_32 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.AreEqual(''MockOptions::GetUsage()'', writer.ToString())", span="77-77"];
m18_29 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="PropertyWriter.cs", label="1: var options = new SimpleOptionsWithHelpOption()", span="72-72"];
m18_31 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.AreEqual(false, success)", span="76-76"];
m18_33 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="PropertyWriter.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="68-68"];
m18_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="PropertyWriter.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1566-1566"];
m18_15 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="PropertyWriter.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="53-53"];
m18_16 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="0: var writer = new StringWriter()", span="55-55"];
m18_17 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="0: var settings = new CommandLineParserSettings()", span="56-56"];
m18_18 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="0: settings.HelpWriter = writer", span="57-57"];
m18_23 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.AreEqual(''MockOptions::GetUsage()'', writer.ToString())", span="64-64"];
m18_19 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="1: ICommandLineParser parser = new CommandLineParser(settings)", span="58-58"];
m18_22 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="0: Assert.AreEqual(false, success)", span="63-63"];
m18_20 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="0: var options = new SimpleOptionsWithHelpOption()", span="59-59"];
m18_21 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", color=green, community=0, file="PropertyWriter.cs", label="0: bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="61-61"];
m18_24 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="PropertyWriter.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="53-53"];
m19_25 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m19_26 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(Pair<MethodInfo, TAttribute>), target)", span="75-75"];
m19_29 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetMethods()", span="79-79"];
m19_27 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="76-76"];
m19_35 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = data", span="89-89"];
m19_28 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="77-77"];
m19_38 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return (Pair<MethodInfo, TAttribute>) cached;", span="96-96"];
m19_30 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="80-80"];
m19_31 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="!method.IsStatic", span="82-82"];
m19_37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return null;", span="94-94"];
m19_32 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="84-85"];
m19_34 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="var data = new Pair<MethodInfo, TAttribute>(method, (TAttribute) attribute)", span="88-88"];
m19_33 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="86-86"];
m19_36 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="return data;", span="90-90"];
m19_39 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m19_104 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionUtil.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m19_0 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m19_1 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="1: var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, TAttribute>), target)", span="41-41"];
m19_5 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="target != null", span="46-46"];
m19_6 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="48-48"];
m19_2 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="0: var cached = ReflectionCache.Instance[key]", span="42-42"];
m19_14 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = list", span="66-66"];
m19_3 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=green, community=0, file="ReflectionUtil.cs", label="0: cached == null", span="43-43"];
m19_16 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="return (IList<Pair<PropertyInfo, TAttribute>>)cached;", span="69-69"];
m19_4 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="45-45"];
m19_13 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="60-60"];
m19_15 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="return list;", span="67-67"];
m19_7 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label=propertiesInfo, span="50-50"];
m19_8 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="52-52"];
m19_9 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="54-54"];
m19_11 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="57-57"];
m19_10 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="55-55"];
m19_12 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="58-58"];
m19_17 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m19_41 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m19_42 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(TAttribute), target)", span="102-102"];
m19_45 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetMethods()", span="106-106"];
m19_43 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="103-103"];
m19_51 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = data", span="116-116"];
m19_44 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="104-104"];
m19_54 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return (TAttribute) cached;", span="123-123"];
m19_46 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="107-107"];
m19_47 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="!method.IsStatic", span="109-109"];
m19_53 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return null;", span="121-121"];
m19_48 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="111-112"];
m19_49 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="113-113"];
m19_50 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="var data = (TAttribute) attribute", span="115-115"];
m19_52 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="return data;", span="117-117"];
m19_55 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m19_23 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="ReflectionUtil.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m19_79 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionUtil.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m19_101 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m19_102 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="209-209"];
m19_103 [cluster="CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.IsNullableType(System.Type)", span="207-207"];
m19_100 [cluster="string.CompareOrdinal(string, string)", file="ReflectionUtil.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m19_22 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="ReflectionUtil.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m19_24 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m19_73 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", span="157-157"];
m19_74 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="object[] a = AssemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="160-160"];
m19_75 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="a.Length <= 0", span="161-161"];
m19_77 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="return (TAttribute)a[0];", span="163-163"];
m19_76 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="return null;", span="161-161"];
m19_78 [cluster="CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.GetAttribute<TAttribute>()", span="157-157"];
m19_20 [cluster="object.GetType()", file="ReflectionUtil.cs", label="Entry object.GetType()", span="0-0"];
m19_40 [cluster="System.Type.GetMethods()", file="ReflectionUtil.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m19_80 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m19_81 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, BaseOptionAttribute>), target)", span="174-174"];
m19_85 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="ReflectionUtil.cs", label="0: target == null", span="179-179"];
m19_87 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="183-183"];
m19_94 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", span="194-194"];
m19_82 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="175-175"];
m19_96 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = found", span="197-197"];
m19_83 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="cached == null", span="176-176"];
m19_98 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return (Pair<PropertyInfo, TAttribute>) cached;", span="204-204"];
m19_84 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=green, community=0, file="ReflectionUtil.cs", label="0: Pair<PropertyInfo, TAttribute> found = null", span="178-178"];
m19_86 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return null;", span="181-181"];
m19_88 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label=propertiesInfo, span="185-185"];
m19_89 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="187-187"];
m19_90 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="189-189"];
m19_92 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="192-192"];
m19_95 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute) attribute)", span="196-196"];
m19_91 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="190-190"];
m19_93 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="var optionAttr = (TAttribute) attribute", span="193-193"];
m19_97 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="return found;", span="198-198"];
m19_99 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m19_56 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m19_57 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var key = new Pair<Type, object>(typeof(IList<TAttribute>), target)", span="129-129"];
m19_61 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var info = target.GetType().GetProperties()", span="134-134"];
m19_58 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var cached = ReflectionCache.Instance[key]", span="130-130"];
m19_69 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="ReflectionCache.Instance[key] = list", span="151-151"];
m19_59 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="cached == null", span="131-131"];
m19_71 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="return (IList<TAttribute>) cached;", span="154-154"];
m19_60 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="IList<TAttribute> list = new List<TAttribute>()", span="133-133"];
m19_68 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="list.Add((TAttribute) attribute)", span="146-146"];
m19_70 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="return list;", span="152-152"];
m19_62 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label=info, span="136-136"];
m19_63 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="property != null && (property.CanRead && property.CanWrite)", span="138-138"];
m19_64 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var setMethod = property.GetSetMethod()", span="140-140"];
m19_66 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="143-143"];
m19_65 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="setMethod != null && !setMethod.IsStatic", span="141-141"];
m19_67 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="attribute != null", span="144-144"];
m19_72 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtil.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m19_18 [cluster="CommandLine.Utils.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="ReflectionUtil.cs", label="Entry CommandLine.Utils.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="37-37"];
m19_21 [cluster="System.Type.GetProperties()", file="ReflectionUtil.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m19_19 [cluster="System.Collections.Generic.List<T>.List()", file="ReflectionUtil.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m23_10 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="SingletonFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m23_14 [cluster="System.Console.WriteLine(object)", file="SingletonFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m23_20 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m23_12 [cluster="Unk.True", file="SingletonFixture.cs", label="Entry Unk.True", span=""];
m23_15 [cluster="CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55"];
m23_16 [cluster="CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions()", file="SingletonFixture.cs", label="var options = new OptionsWithMultipleSet()", span="57-57"];
m23_17 [cluster="CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions()", file="SingletonFixture.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="58-59"];
m23_18 [cluster="CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions()", color=red, community=0, file="SingletonFixture.cs", label="0: result.Should().Be.True()", span="61-61"];
m23_19 [cluster="CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.SingletonFixture.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55"];
m23_9 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m23_11 [cluster="Unk.Should", file="SingletonFixture.cs", label="Entry Unk.Should", span=""];
m23_0 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Entry CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", span="41-41"];
m23_1 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="var options = new SimpleOptions()", span="43-43"];
m23_2 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="44-45"];
m23_4 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="0: options.StringValue.Should().Equal(''another string'')", span="48-48"];
m23_5 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="0: options.IntegerValue.Should().Equal(100)", span="49-49"];
m23_6 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="50-50"];
m23_7 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Console.WriteLine(options)", span="51-51"];
m23_3 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", color=red, community=0, file="SingletonFixture.cs", label="0: result.Should().Be.True()", span="47-47"];
m23_8 [cluster="CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", file="SingletonFixture.cs", label="Exit CommandLine.Tests.SingletonFixture.ParseStringIntegerBoolOptions()", span="41-41"];
m24_15 [cluster="CommandLine.ICommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="StrictFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="107-107"];
m24_4 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="ResultShouldBeFalse()", span="53-53"];
m24_5 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="55-55"];
m24_6 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="56-56"];
m24_36 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", span="86-86"];
m24_37 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", color=green, community=0, file="StrictFixture.cs", label="0: var options = new OptionsWithVerbsNoHelp()", span="88-88"];
m24_38 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="89-89"];
m24_39 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="Result = Parser.ParseArgumentsStrict(new string[] { ''bad'', ''input'' }, options, testWriter)", span="91-91"];
m24_40 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="ResultShouldBeFalse()", span="93-93"];
m24_41 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="95-95"];
m24_47 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="lines[7].Trim().Should().Equal(''clone     Clone a repository into a new directory.'')", span="103-103"];
m24_42 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="96-96"];
m24_43 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="97-97"];
m24_46 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="lines[6].Trim().Should().Equal(''commit    Record changes to the repository.'')", span="102-102"];
m24_44 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="lines.Should().Count.Exactly(8)", span="99-99"];
m24_45 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="lines[5].Trim().Should().Equal(''add       Add file contents to the index.'')", span="101-101"];
m24_48 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs()", span="86-86"];
m24_49 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", span="108-108"];
m24_35 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForStrict.SimpleOptionsForStrict()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsForStrict.SimpleOptionsForStrict()", span="31-31"];
m24_16 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="StrictFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m24_14 [cluster="System.IO.StringWriter.StringWriter()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m24_17 [cluster="System.IO.StringWriter.ToString()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m24_24 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", span="67-67"];
m24_25 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="0: var options = new SimpleOptionsForStrict()", span="69-69"];
m24_26 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="0: var testWriter = new StringWriter()", span="70-70"];
m24_27 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Result = Parser.ParseArgumentsStrict(new string[] { ''--bad'', ''--input'' }, options, testWriter)", span="72-72"];
m24_29 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="76-76"];
m24_28 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="ResultShouldBeFalse()", span="74-74"];
m24_30 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="77-77"];
m24_31 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="78-78"];
m24_33 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="lines[0].Trim().Should().Equal(''SimpleOptionsForStrict (user defined)'')", span="82-82"];
m24_32 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="lines.Should().Count.Exactly(1)", span="80-80"];
m24_34 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_GetUsageDefined()", span="67-67"];
m24_0 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m24_1 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", color=green, community=0, file="StrictFixture.cs", label="0: StartOffset = 0", span="37-37"];
m24_2 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", color=green, community=0, file="StrictFixture.cs", label="0: Bytes = 0", span="38-38"];
m24_3 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", color=green, community=0, file="StrictFixture.cs", label="0: Exit CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m24_7 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="StrictFixture.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m24_11 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="lines[7].Trim().Should().Equal(''--switch'')", span="63-63"];
m24_8 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="CommandLine.Tests.Mocks.ComplexOptions", span=""];
m24_9 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="lines[5].Trim().Should().Equal(''-s, --string'')", span="61-61"];
m24_10 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="lines[6].Trim().Should().Equal(''-i'')", span="62-62"];
m24_12 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits()", span="46-46"];
m24_61 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", span="79-79"];
m24_21 [cluster="Unk.Exactly", file="StrictFixture.cs", label="Entry Unk.Exactly", span=""];
m24_13 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m24_18 [cluster="System.Console.WriteLine(string)", file="StrictFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m24_50 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", span="107-107"];
m24_51 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="0: var options = new OptionsWithVerbs()", span="109-109"];
m24_52 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", color=green, community=0, file="StrictFixture.cs", label="0: var testWriter = new StringWriter()", span="110-110"];
m24_53 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Result = Parser.ParseArgumentsStrict(new string[] { ''bad'', ''input'' }, options, testWriter)", span="112-112"];
m24_55 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="116-116"];
m24_54 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="ResultShouldBeFalse()", span="114-114"];
m24_56 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="117-117"];
m24_57 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="118-118"];
m24_59 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="lines[0].Trim().Should().Equal(''verbs help index'')", span="122-122"];
m24_58 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="lines.Should().Count.Exactly(1)", span="120-120"];
m24_60 [cluster="CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.StrictFixture.ParseStrictBadInputFailsAndExits_Verbs_GetUsageDefined()", span="107-107"];
m24_22 [cluster="string.Trim()", file="StrictFixture.cs", label="Entry string.Trim()", span="0-0"];
m24_23 [cluster="Unk.Equal", file="StrictFixture.cs", label="Entry Unk.Equal", span=""];
m24_19 [cluster="string.Split(string[], System.StringSplitOptions)", file="StrictFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m24_62 [file="StrictFixture.cs", label="CommandLine.Tests.StrictFixture", span=""];
m25_0 [cluster="CommandLine.Internal.Target.Target()", file="Target.cs", label="Entry CommandLine.Internal.Target.Target()", span="36-36"];
m25_1 [cluster="CommandLine.Internal.Target.Target()", file="Target.cs", label="Exit CommandLine.Internal.Target.Target()", span="36-36"];
m25_2 [cluster="CommandLine.Internal.Target.Target(object)", file="Target.cs", label="Entry CommandLine.Internal.Target.Target(object)", span="38-38"];
m25_3 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="0: _target = target", span="40-40"];
m25_4 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="1: _valueListAttribute = ValueListAttribute.GetAttribute(_target)", span="41-41"];
m25_5 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="0: IsValueListDefined", span="42-42"];
m25_6 [cluster="CommandLine.Internal.Target.Target(object)", color=red, community=0, file="Target.cs", label="0: _valueList = ValueListAttribute.GetReference(_target)", span="44-44"];
m25_7 [cluster="CommandLine.Internal.Target.Target(object)", file="Target.cs", label="Exit CommandLine.Internal.Target.Target(object)", span="38-38"];
m25_8 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="Target.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m25_16 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Target.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m25_9 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="Target.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m25_10 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="Target.cs", label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m25_11 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="0: _valueListAttribute.MaximumElements == 0 || _valueList.Count == _valueListAttribute.MaximumElements", span="52-52"];
m25_13 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="0: _valueList.Add(item)", span="56-56"];
m25_12 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="0: return false;", span="54-54"];
m25_14 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", color=red, community=0, file="Target.cs", label="0: return true;", span="57-57"];
m25_15 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="Target.cs", label="Exit CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m25_17 [file="Target.cs", label="CommandLine.Internal.Target", span=""];
m26_7 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m26_11 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", span="48-48"];
m26_12 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(target).Count > 0;", span="50-50"];
m26_13 [cluster="CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.CanReceiveParserState(object)", span="48-48"];
m26_8 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", span="43-43"];
m26_9 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(target) != null;", span="45-45"];
m26_10 [cluster="CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasVerbHelp(object)", span="43-43"];
m26_3 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m26_17 [cluster="CommandLine.Internal.ValueMapper.ValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Internal.ValueMapper.ValueMapper(object)", span="43-43"];
m26_0 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasVerbs(object)", span="33-33"];
m26_1 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(target).Count > 0;", span="35-35"];
m26_2 [cluster="CommandLine.Utils.TargetExtensions.HasVerbs(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasVerbs(object)", span="33-33"];
m26_4 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.HasHelp(object)", span="38-38"];
m26_5 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="return ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(target) != null;", span="40-40"];
m26_6 [cluster="CommandLine.Utils.TargetExtensions.HasHelp(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.HasHelp(object)", span="38-38"];
m26_14 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Entry CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m26_15 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", color=green, community=0, file="TargetExtensions.cs", label="0: return new ValueMapper(target);", span="58-58"];
m26_16 [cluster="CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", file="TargetExtensions.cs", label="Exit CommandLine.Utils.TargetExtensions.CreateValueMapper(object)", span="56-56"];
m27_20 [cluster="CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m27_18 [cluster="Unk.True", file="UnknownArgumentsFixture.cs", label="Entry Unk.True", span=""];
m27_15 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m27_14 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m27_0 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m27_1 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="44-44"];
m27_2 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var appOptions = new OptionsForAppWithPlugIns()", span="45-45"];
m27_4 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result1 = parser.ParseArguments(args, appOptions)", span="48-48"];
m27_8 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result2 = parser.ParseArguments(args, plugInXOptions)", span="54-54"];
m27_3 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="46-47"];
m27_6 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=green, community=0, file="UnknownArgumentsFixture.cs", label="0: appOptions.PlugInName.Should().Equal(''addonX'')", span="51-51"];
m27_5 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=green, community=0, file="UnknownArgumentsFixture.cs", label="0: result1.Should().Be.True()", span="50-50"];
m27_7 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var plugInXOptions = new OptionsOfPlugInX()", span="53-53"];
m27_10 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=green, community=0, file="UnknownArgumentsFixture.cs", label="0: plugInXOptions.InputFileName.Should().Equal(''input.dat'')", span="57-57"];
m27_11 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=green, community=0, file="UnknownArgumentsFixture.cs", label="0: plugInXOptions.ReadOffset.Should().Equal(10L)", span="58-58"];
m27_9 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", color=green, community=0, file="UnknownArgumentsFixture.cs", label="0: result2.Should().Be.True()", span="56-56"];
m27_12 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m27_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m27_13 [cluster="CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m27_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m28_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m28_4 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="concreteType == null", span="62-62"];
m28_6 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="!typeof(IList<string>).IsAssignableFrom(concreteType)", span="63-63"];
m28_8 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="_concreteType = concreteType", span="67-67"];
m28_5 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="throw new ArgumentNullException(''concreteType'');", span="62-62"];
m28_7 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="throw new CommandLineParserException(SR.CommandLineParserException_IncompatibleTypes);", span="65-65"];
m28_9 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m28_34 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ValueListAttribute.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m28_25 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m28_26 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="93-93"];
m28_27 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="list == null || list.Count == 0", span="94-94"];
m28_29 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="list.Count > 1", span="95-95"];
m28_31 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="var pairZero = list[0]", span="96-96"];
m28_28 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="return null;", span="94-94"];
m28_30 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="throw new InvalidOperationException();", span="95-95"];
m28_32 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="return pairZero.Right;", span="97-97"];
m28_33 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="91-91"];
m28_13 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m28_14 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Type concreteType", span="84-84"];
m28_15 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="var property = GetProperty(target, out concreteType)", span="85-85"];
m28_18 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="property.SetValue(target, Activator.CreateInstance(concreteType), null)", span="87-87"];
m28_19 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="return (IList<string>)property.GetValue(target, null);", span="88-88"];
m28_16 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="property == null || concreteType == null", span="86-86"];
m28_17 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="return null;", span="86-86"];
m28_20 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m28_21 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="100-100"];
m28_36 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="concreteType = null", span="102-102"];
m28_37 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="var list = ReflectionUtil.RetrievePropertyList<ValueListAttribute>(target)", span="103-103"];
m28_38 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="list == null || list.Count == 0", span="104-104"];
m28_40 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="list.Count > 1", span="105-105"];
m28_42 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="var pairZero = list[0]", span="106-106"];
m28_39 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="return null;", span="104-104"];
m28_41 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="throw new InvalidOperationException();", span="105-105"];
m28_43 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="concreteType = pairZero.Right.ConcreteType", span="107-107"];
m28_44 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="return pairZero.Left;", span="108-108"];
m28_45 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="100-100"];
m28_0 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="49-49"];
m28_1 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="MaximumElements = -1", span="51-51"];
m28_2 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="ValueListAttribute.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="49-49"];
m28_22 [cluster="System.Activator.CreateInstance(System.Type)", file="ValueListAttribute.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m28_23 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ValueListAttribute.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m28_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ValueListAttribute.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m28_11 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ValueListAttribute.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m28_12 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="ValueListAttribute.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="54-54"];
m28_24 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ValueListAttribute.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m28_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ValueListAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m28_46 [file="ValueListAttribute.cs", label="CommandLine.ValueListAttribute", span=""];
m29_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m29_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="59-59"];
m29_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m29_13 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new MockSpecializedList().GetType())", span="75-75"];
m29_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m29_22 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45"];
m29_27 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m29_28 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", span="91-91"];
m29_29 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var values = ValueListAttribute.GetReference(options)", span="93-93"];
m29_33 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", span="98-98"];
m29_30 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value0'')", span="94-94"];
m29_31 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value1'')", span="95-95"];
m29_32 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value2'')", span="96-96"];
m29_34 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m29_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m29_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", span="81-81"];
m29_18 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="IList<string> values = ValueListAttribute.GetReference(options)", span="83-83"];
m29_19 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="0: values.Should().Not.Be.Null()", span="84-84"];
m29_20 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", color=green, community=0, file="ValueListAttributeFixture.cs", label="0: values.GetType().Should().Equal(typeof(List<string>))", span="85-85"];
m29_21 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m29_4 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m29_5 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<object>().GetType())", span="63-63"];
m29_6 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m29_35 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m29_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="82-82"];
m29_8 [cluster="object.GetType()", file="ValueListAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m29_25 [cluster="Unk.Null", file="ValueListAttributeFixture.cs", label="Entry Unk.Null", span=""];
m29_36 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m29_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m29_1 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(null)", span="56-56"];
m29_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m29_24 [cluster="Unk.Should", file="ValueListAttributeFixture.cs", label="Entry Unk.Should", span=""];
m29_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m29_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<string>().GetType())", span="69-69"];
m29_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m29_7 [cluster="System.Collections.Generic.List<T>.List()", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m29_37 [file="ValueListAttributeFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
m30_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m30_20 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m30_21 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", span="63-63"];
m30_22 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.InputFilenames[0].Should().Equal(''file.a'')", span="65-65"];
m30_24 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.InputFilenames[2].Should().Equal(''file.c'')", span="67-67"];
m30_25 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.OutputFile.Should().Be.Null()", span="68-68"];
m30_26 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Overwrite.Should().Be.False()", span="69-69"];
m30_27 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.OutputFile.Should().Be.Null()", span="70-70"];
m30_28 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Overwrite.Should().Be.False()", span="71-71"];
m30_29 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="72-72"];
m30_23 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.InputFilenames[1].Should().Equal(''file.b'')", span="66-66"];
m30_30 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m30_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m30_19 [cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m30_33 [cluster="Unk.False", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.False", span=""];
m30_34 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m30_35 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", span="78-78"];
m30_36 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="79-80"];
m30_37 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="82-82"];
m30_38 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m30_31 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m30_18 [cluster="Unk.True", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m30_48 [cluster="Unk.Zero", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Zero", span=""];
m30_13 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m30_0 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40"];
m30_1 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40"];
m30_32 [cluster="Unk.Null", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Null", span=""];
m30_47 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36"];
m30_2 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m30_3 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="47-47"];
m30_4 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Items[0].Should().Equal(''file1.ext'')", span="49-49"];
m30_6 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Items[2].Should().Equal(''file3.ext'')", span="51-51"];
m30_7 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''out.ext'')", span="52-52"];
m30_8 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="53-53"];
m30_9 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''out.ext'')", span="55-55"];
m30_10 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="56-56"];
m30_11 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="57-57"];
m30_5 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Items[1].Should().Equal(''file2.ext'')", span="50-50"];
m30_12 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m30_16 [cluster="Unk.Should", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m30_49 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m30_50 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="99-99"];
m30_51 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''some'', ''value'' }, options)", span="101-101"];
m30_52 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="102-102"];
m30_53 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m30_40 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m30_41 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="88-88"];
m30_42 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Junk.Should().Count.Zero()", span="91-91"];
m30_44 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: options.Junk.Should().Count.Zero()", span="92-92"];
m30_45 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="93-93"];
m30_43 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="91-91"];
m30_46 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m30_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m30_54 [file="ValueListAttributeParsingFixture.cs", label="CommandLine.Tests.ValueListAttributeParsingFixture", span=""];
m32_11 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m32_43 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m32_16 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", span="33-33"];
m32_17 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithValueOption()", span="35-35"];
m32_18 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'' }, options)", span="36-37"];
m32_20 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="41-41"];
m32_21 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.StringItem.Should().Be.Null()", span="42-42"];
m32_22 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.IntegerItem.Should().Equal(0)", span="43-43"];
m32_23 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.NullableDoubleItem.Should().Be.Null()", span="44-44"];
m32_19 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="39-39"];
m32_24 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeValuesAreNotMandatory()", span="33-33"];
m32_26 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", span="48-48"];
m32_27 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithValueOptionAndValueList()", span="50-50"];
m32_28 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(\r\n                new string[] { ''ofvalueoption'', ''-1234'', ''4321'', ''forvaluelist1'', ''forvaluelist2'', ''forvaluelist3'' }, options)", span="51-52"];
m32_30 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.StringItem.Should().Equal(''ofvalueoption'')", span="56-56"];
m32_31 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.NullableInteger.Should().Equal(-1234)", span="57-57"];
m32_32 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.UnsignedIntegerItem.Should().Equal(4321U)", span="58-58"];
m32_33 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.Items[0].Should().Equal(''forvaluelist1'')", span="59-59"];
m32_34 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.Items[1].Should().Equal(''forvaluelist2'')", span="60-60"];
m32_35 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.Items[2].Should().Equal(''forvaluelist3'')", span="61-61"];
m32_29 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="54-54"];
m32_36 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionTakesPrecedenceOnValueListRegardlessDeclarationOrder()", span="48-48"];
m32_10 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueOption.SimpleOptionsWithValueOption()", span="35-35"];
m32_14 [cluster="Unk.True", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m32_37 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueOptionAndValueList.SimpleOptionsWithValueOptionAndValueList()", span="35-35"];
m32_0 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", span="17-17"];
m32_1 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithValueOption()", span="19-19"];
m32_2 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file.ext'', ''1000'', ''0.1234'', ''-s'', ''out.ext'' }, options)", span="20-21"];
m32_4 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.BooleanValue.Should().Be.True()", span="25-25"];
m32_5 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.StringItem.Should().Equal(''file.ext'')", span="26-26"];
m32_6 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.IntegerItem.Should().Equal(1000)", span="27-27"];
m32_7 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.NullableDoubleItem.Should().Equal(0.1234D)", span="28-28"];
m32_8 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: options.StringValue.Should().Equal(''out.ext'')", span="29-29"];
m32_3 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: ResultShouldBeTrue()", span="23-23"];
m32_9 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.ValueOptionAttributeIsolatesNonOptionValues()", span="17-17"];
m32_25 [cluster="Unk.Null", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.Null", span=""];
m32_13 [cluster="Unk.Should", file="ValueOptionAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m32_38 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.BetweenValueOptionsOrderMatters()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueOptionAttributeParsingFixture.BetweenValueOptionsOrderMatters()", span="65-65"];
m32_39 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.BetweenValueOptionsOrderMatters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: var options = new SimpleOptionsWithValueOptionAndValueList()", span="67-67"];
m32_40 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.BetweenValueOptionsOrderMatters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: Result = base.Parser.ParseArguments(\r\n                new string[] { ''4321'', ''ofvalueoption'', ''-1234'', ''forvaluelist1'', ''forvaluelist2'', ''forvaluelist3'' }, options)", span="68-69"];
m32_41 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.BetweenValueOptionsOrderMatters()", color=green, community=0, file="ValueOptionAttributeParsingFixture.cs", label="0: ResultShouldBeFalse()", span="71-71"];
m32_42 [cluster="CommandLine.Tests.ValueOptionAttributeParsingFixture.BetweenValueOptionsOrderMatters()", file="ValueOptionAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueOptionAttributeParsingFixture.BetweenValueOptionsOrderMatters()", span="65-65"];
m32_12 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueOptionAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m32_44 [file="ValueOptionAttributeParsingFixture.cs", label="CommandLine.Tests.ValueOptionAttributeParsingFixture", span=""];
m33_62 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", span="101-101"];
m33_38 [cluster="CommandLine.Tests.VerbsFixture.FailedParsingPrintsHelpIndex()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="86-86"];
m33_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="VerbsFixture.cs", label="var pt = specProps.First()", span="38-38"];
m33_63 [cluster="Unk.WithValue", file="VerbsFixture.cs", label="Entry Unk.WithValue", span=""];
m33_67 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", color=red, community=0, file="VerbsFixture.cs", label="0: TargetType.Scalar", span="75-75"];
m33_66 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="VerbsFixture.cs", label="specification.TargetType", span="73-73"];
m33_68 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", color=red, community=0, file="VerbsFixture.cs", label="0: return Maybe.Just(1);", span="76-76"];
m33_69 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", color=green, community=0, file="VerbsFixture.cs", label="0: TargetType.Sequence", span="77-77"];
m33_65 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="VerbsFixture.cs", label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71"];
m33_64 [cluster="CSharpx.Maybe.Nothing<T>()", file="VerbsFixture.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m33_70 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="VerbsFixture.cs", label="specification.Max.IsJust()", span="78-78"];
m33_32 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsUsingInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: options.CommitVerb.CreationProof.Should().Equal(proof)", span="79-79"];
m33_0 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", span="42-42"];
m33_1 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="44-44"];
m33_2 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: options.AddVerb.Should().Be.Null()", span="45-45"];
m33_3 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {''add'', ''-p'', ''untracked.bin''} , options)", span="47-47"];
m33_50 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m33_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="VerbsFixture.cs", label="yield return\r\n                    Tuple.Create(pt, pt.Specification.MakeErrorInCaseOfMinConstraint());", span="42-43"];
m33_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="VerbsFixture.cs", label="yield break;", span="44-44"];
m33_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="VerbsFixture.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="47-47"];
m33_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=green, community=0, file="VerbsFixture.cs", label="0: Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", span="29-29"];
m33_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", color=green, community=0, file="VerbsFixture.cs", label="0: Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m33_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=green, community=0, file="VerbsFixture.cs", label="0: pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="48-50"];
m33_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=red, community=0, file="VerbsFixture.cs", label="0: yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="52-54"];
m33_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=green, community=0, file="VerbsFixture.cs", label="1: MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="65-65"];
m33_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=red, community=0, file="VerbsFixture.cs", label="0: yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="58-63"];
m33_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", color=red, community=0, file="VerbsFixture.cs", label="0: yield return value;", span="67-67"];
m33_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>>)", file="VerbsFixture.cs", label="yield break;", span="55-55"];
m33_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="VerbsFixture.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="71-71"];
m33_6 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="52-52"];
m33_4 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="VerbsFixture.cs", label="ResultShouldBeTrue()", span="49-49"];
m33_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m33_18 [cluster="CommandLine.ICommandLineParser.WasVerbOptionInvoked(string)", file="VerbsFixture.cs", label="Entry CommandLine.ICommandLineParser.WasVerbOptionInvoked(string)", span="134-134"];
m33_20 [cluster="Unk.False", file="VerbsFixture.cs", label="Entry Unk.False", span=""];
m33_21 [cluster="Unk.Equal", file="VerbsFixture.cs", label="Entry Unk.Equal", span=""];
m33_37 [cluster="Unk.Take", file="VerbsFixture.cs", label="Entry Unk.Take", span=""];
m33_42 [cluster="Unk.FirstOrDefault", color=green, community=0, file="VerbsFixture.cs", label="0: Entry Unk.FirstOrDefault", span=""];
m33_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="VerbsFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m33_43 [cluster="Unk.ToMaybe", color=green, community=0, file="VerbsFixture.cs", label="0: Entry Unk.ToMaybe", span=""];
m33_44 [cluster="CSharpx.Maybe<T>.IsJust<T>()", color=green, community=0, file="VerbsFixture.cs", label="0: Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m33_45 [cluster="Unk.IsNothing", file="VerbsFixture.cs", label="Entry Unk.IsNothing", span=""];
m33_46 [cluster="Unk.Count", color=green, community=0, file="VerbsFixture.cs", label="0: Entry Unk.Count", span=""];
m33_40 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="VerbsFixture.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m33_39 [cluster="CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", file="VerbsFixture.cs", label="Entry CommandLine.Core.Specification.MakeErrorInCaseOfMinConstraint()", span="87-87"];
m33_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="VerbsFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m33_58 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''commit'').Should().Be.False()", span="110-110"];
m33_48 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="VerbsFixture.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360"];
m33_59 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''clone'').Should().Be.True()", span="112-112"];
m33_8 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: options.AddVerb.Should().Not.Be.Null()", span="56-56"];
m33_11 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: options.AddVerb.FileName[0].Should().Equal(''untracked.bin'')", span="59-59"];
m33_14 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="25-25"];
m33_9 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: options.AddVerb.CreationProof.Should().Be.Null()", span="57-57"];
m33_10 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: options.AddVerb.Patch.Should().Be.True()", span="58-58"];
m33_12 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", span="42-42"];
m33_13 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbs.OptionsWithVerbs()", span="79-79"];
m33_15 [cluster="Unk.Null", file="VerbsFixture.cs", label="Entry Unk.Null", span=""];
m33_16 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="VerbsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="49-49"];
m33_60 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsFixture.cs", label="var helpText = testWriter.ToString()", span="114-114"];
m33_52 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", span="101-101"];
m33_55 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {''clone'', ''--no_hardlinks''}, options, testWriter)", span="105-105"];
m33_53 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="103-103"];
m33_54 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsFixture.cs", label="var testWriter = new StringWriter()", span="104-104"];
m33_56 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsFixture.cs", label="ResultShouldBeFalse()", span="107-107"];
m33_57 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''add'').Should().Be.False()", span="109-109"];
m33_61 [cluster="CommandLine.Tests.VerbsFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=green, community=0, file="VerbsFixture.cs", label="0: helpText.Should().Equal(''help for: clone'')", span="115-115"];
m33_49 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="VerbsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m33_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="VerbsFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m33_36 [cluster="Unk.Return", file="VerbsFixture.cs", label="Entry Unk.Return", span=""];
m33_75 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithNullOrEmptyVerb()", color=green, community=0, file="VerbsFixture.cs", label="1: Parser.WasVerbOptionInvoked(null).Should().Be.False()", span="139-139"];
m33_76 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithNullOrEmptyVerb()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked('''').Should().Be.False()", span="140-140"];
m33_77 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithNullOrEmptyVerb()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithNullOrEmptyVerb()", span="132-132"];
m33_5 [cluster="CommandLine.Tests.VerbsFixture.ParseVerbsCreateInstance()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''add'').Should().Be.True()", span="51-51"];
m33_71 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", color=red, community=0, file="VerbsFixture.cs", label="0: return Maybe.Just(specification.Max.FromJust());", span="80-80"];
m33_74 [cluster="CSharpx.Maybe<T>.FromJust<T>()", file="VerbsFixture.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
m33_73 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="VerbsFixture.cs", label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="71-71"];
m33_72 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="VerbsFixture.cs", label="return Maybe.Nothing<int>();", span="84-84"];
m33_51 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="VerbsFixture.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349"];
m33_78 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", file="VerbsFixture.cs", label=pt, span=""];
m33_82 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''--commit'').Should().Be.False()", span="151-151"];
m33_81 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", file="VerbsFixture.cs", label="ResultShouldBeTrue()", span="149-149"];
m33_83 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''-commit'').Should().Be.False()", span="152-152"];
m33_84 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''-c'').Should().Be.False()", span="153-153"];
m33_85 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''---commit'').Should().Be.False()", span="154-154"];
m33_86 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''--amend'').Should().Be.False()", span="155-155"];
m33_87 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", color=green, community=0, file="VerbsFixture.cs", label="0: Parser.WasVerbOptionInvoked(''-a'').Should().Be.False()", span="156-156"];
m33_80 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", file="VerbsFixture.cs", label="Result = Parser.ParseArguments(new string[] {''commit'', ''--amend''}, options)", span="147-147"];
m33_79 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="146-146"];
m33_88 [cluster="CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.VerbsFixture.WasVerbOptionInvokedReturnsFalseWithOrdinaryOptions()", span="144-144"];
m33_7 [cluster="Unk.Succeed", color=green, community=0, file="VerbsFixture.cs", label="0: Entry Unk.Succeed", span=""];
m33_89 [file="VerbsFixture.cs", label="CommandLine.Tests.VerbsFixture", span=""];
m34_25 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m34_10 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", span="61-61"];
m34_11 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="63-63"];
m34_12 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="64-64"];
m34_13 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="Result = Parser.ParseArguments(new string[] { ''clone'', ''--no_hardlinks'' }, options, testWriter)", span="65-65"];
m34_15 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="69-69"];
m34_14 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="ResultShouldBeFalse()", span="67-67"];
m34_16 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="70-70"];
m34_17 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="71-71"];
m34_18 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="0: lines[5].Trim().Should().Equal(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="73-73"];
m34_19 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="0: lines[6].Trim().Should().Equal(''filesystem by copying files.'')", span="74-74"];
m34_20 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", color=red, community=0, file="VerbsHelpTextFixture.cs", label="0: lines[7].Trim().Should().Equal(''-q, --quiet       Suppress summary message.'')", span="75-75"];
m34_21 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.FailedVerbParsingPrintsParticularHelpScreen()", span="61-61"];
m34_0 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", span="43-43"];
m34_1 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: DoCoreTestForIndex(new string[] {})", span="45-45"];
m34_2 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.FailedParsingPrintsHelpIndex()", span="43-43"];
m34_23 [cluster="System.IO.StringWriter.StringWriter()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m34_26 [cluster="System.IO.StringWriter.ToString()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m34_32 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", span="80-80"];
m34_33 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var options = new OptionsWithVerbsHelp()", span="82-82"];
m34_34 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var testWriter = new StringWriter()", span="83-83"];
m34_35 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", file="VerbsHelpTextFixture.cs", label="Result = Parser.ParseArguments(new string[] {''help'', ''add''}, options, testWriter)", span="84-84"];
m34_37 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="88-88"];
m34_36 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", file="VerbsHelpTextFixture.cs", label="ResultShouldBeFalse()", span="86-86"];
m34_38 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="89-89"];
m34_39 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="90-90"];
m34_40 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpOfParticularVerbWithoutInstanceShouldWork()", span="80-80"];
m34_3 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
m34_41 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="96-96"];
m34_43 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Result = Parser.ParseArguments(args, options, testWriter)", span="98-98"];
m34_42 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="97-97"];
m34_45 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="102-102"];
m34_44 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="ResultShouldBeFalse()", span="100-100"];
m34_46 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="103-103"];
m34_47 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="104-104"];
m34_48 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=red, community=0, file="VerbsHelpTextFixture.cs", label="0: lines[5].Trim().Should().Equal(''add       Add file contents to the index.'')", span="106-106"];
m34_49 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=red, community=0, file="VerbsHelpTextFixture.cs", label="0: lines[6].Trim().Should().Equal(''commit    Record changes to the repository.'')", span="107-107"];
m34_50 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=red, community=0, file="VerbsHelpTextFixture.cs", label="0: lines[7].Trim().Should().Equal(''clone     Clone a repository into a new directory.'')", span="108-108"];
m34_51 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="94-94"];
m34_22 [cluster="CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", span="80-80"];
m34_29 [cluster="string.Trim()", file="VerbsHelpTextFixture.cs", label="Entry string.Trim()", span="0-0"];
m34_24 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="64-64"];
m34_4 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
m34_5 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] {''help''})", span="51-51"];
m34_6 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingHelpPrintsHelpIndex()", span="49-49"];
m34_7 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", span="55-55"];
m34_8 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] { ''help'', ''undefined'' })", span="57-57"];
m34_9 [cluster="CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Text.Tests.VerbsHelpTextFixture.RequestingBadHelpPrintsHelpIndex()", span="55-55"];
m34_28 [cluster="string.Split(string[], System.StringSplitOptions)", file="VerbsHelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m34_30 [cluster="Unk.Should", file="VerbsHelpTextFixture.cs", label="Entry Unk.Should", span=""];
m34_27 [cluster="System.Console.WriteLine(string)", file="VerbsHelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m34_52 [file="VerbsHelpTextFixture.cs", label="CommandLine.Text.Tests.VerbsHelpTextFixture", span=""];
n13 -> n4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n7  [key=2, style=dotted];
n1 -> n3  [color=darkseagreen4, key=1, label=ae, style=dashed];
n1 -> n5  [color=red, key=1, label=ae, style=dashed];
n1 -> d5  [color=green, key=1, label=ae, style=dashed];
n2 -> n3  [key=0, style=solid];
n2 -> n8  [key=2, style=dotted];
n3 -> n4  [key=0, style=solid];
n3 -> n9  [key=2, style=dotted];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n11  [color=red, key=2, style=dotted];
n5 -> n12  [color=red, key=2, style=dotted];
n4 -> n5  [color=red, key=0, style=solid];
n4 -> n10  [key=2, style=dotted];
n4 -> d5  [color=green, key=0, style=solid];
n6 -> n0  [color=blue, key=0, style=bold];
d5 -> n6  [color=green, key=0, style=solid];
d5 -> n11  [color=green, key=2, style=dotted];
d5 -> n12  [color=green, key=2, style=dotted];
m1_9 -> m1_10  [color=green, key=0, style=solid];
m1_9 -> m1_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m1_9 -> m1_13  [color=green, key=1, label="string[]", style=dashed];
m1_10 -> m1_11  [color=green, key=0, style=solid];
m1_10 -> m1_7  [color=green, key=2, style=dotted];
m1_10 -> n12  [color=green, key=2, style=dotted];
m1_12 -> m1_13  [color=green, key=0, style=solid];
m1_12 -> m1_15  [key=0, style=solid];
m1_12 -> m1_3  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_13 -> m1_14  [color=green, key=0, style=solid];
m1_13 -> m1_7  [color=green, key=2, style=dotted];
m1_13 -> n12  [color=green, key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [color=green, key=1, label=i, style=dashed];
m1_11 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_14 -> m1_12  [key=0, style=solid];
m1_14 -> m1_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_15 -> m1_9  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m1_0 -> m1_4  [color=green, key=1, label="T[]", style=dashed];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_7  [color=green, key=2, style=dotted];
m1_1 -> n12  [color=green, key=2, style=dotted];
m1_3 -> m1_4  [color=green, key=0, style=solid];
m1_3 -> m1_6  [key=0, style=solid];
m1_3 -> m1_3  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_4 -> m1_5  [color=green, key=0, style=solid];
m1_4 -> m1_7  [color=green, key=2, style=dotted];
m1_4 -> n12  [color=green, key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_4  [color=green, key=1, label=i, style=dashed];
m1_2 -> m1_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_5 -> m1_3  [key=0, style=solid];
m1_5 -> m1_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_6 -> m1_0  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [color=green, key=0, style=solid];
m3_15 -> m3_16  [color=green, key=0, style=solid];
m3_15 -> n11  [color=green, key=2, style=dotted];
m3_15 -> m3_18  [color=green, key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_17 -> m3_14  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_9 -> m3_10  [color=green, key=0, style=solid];
m3_9 -> n11  [color=green, key=2, style=dotted];
m3_9 -> m3_13  [color=green, key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_8  [color=blue, key=0, style=bold];
m3_19 -> m3_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_9  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_10  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_15  [color=green, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m3_19 -> m3_16  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_5  [key=2, style=dotted];
m4_11 -> m4_14  [color=green, key=1, label=options, style=dashed];
m4_11 -> m4_15  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_6  [key=2, style=dotted];
m4_14 -> m4_15  [color=green, key=0, style=solid];
m4_14 -> n11  [color=green, key=2, style=dotted];
m4_14 -> m4_19  [color=green, key=2, style=dotted];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_20  [key=2, style=dotted];
m4_13 -> m4_14  [color=green, key=0, style=solid];
m4_13 -> m4_17  [key=2, style=dotted];
m4_16 -> m4_10  [color=blue, key=0, style=bold];
m4_178 -> m4_179  [key=0, style=solid];
m4_179 -> m4_180  [key=0, style=solid];
m4_179 -> m4_94  [key=2, style=dotted];
m4_180 -> m4_181  [key=0, style=solid];
m4_180 -> m4_6  [key=2, style=dotted];
m4_181 -> m4_182  [key=0, style=solid];
m4_181 -> m4_74  [key=2, style=dotted];
m4_182 -> m4_178  [color=blue, key=0, style=bold];
m4_262 -> m4_263  [key=0, style=solid];
m4_263 -> m4_264  [key=0, style=solid];
m4_263 -> m4_94  [key=2, style=dotted];
m4_264 -> m4_265  [key=0, style=solid];
m4_264 -> m4_267  [key=2, style=dotted];
m4_264 -> m4_6  [key=2, style=dotted];
m4_265 -> m4_266  [key=0, style=solid];
m4_265 -> m4_74  [key=2, style=dotted];
m4_266 -> m4_262  [color=blue, key=0, style=bold];
m4_244 -> m4_245  [key=0, style=solid];
m4_245 -> m4_246  [key=0, style=solid];
m4_245 -> m4_94  [key=2, style=dotted];
m4_245 -> m4_248  [color=green, key=1, label=options, style=dashed];
m4_246 -> m4_247  [key=0, style=solid];
m4_246 -> m4_6  [key=2, style=dotted];
m4_248 -> m4_249  [color=green, key=0, style=solid];
m4_248 -> n11  [color=green, key=2, style=dotted];
m4_248 -> m4_19  [color=green, key=2, style=dotted];
m4_247 -> m4_248  [color=green, key=0, style=solid];
m4_247 -> m4_17  [key=2, style=dotted];
m4_249 -> m4_244  [color=blue, key=0, style=bold];
m4_286 -> m4_287  [key=0, style=solid];
m4_287 -> m4_288  [key=0, style=solid];
m4_287 -> m4_94  [key=2, style=dotted];
m4_288 -> m4_289  [key=0, style=solid];
m4_288 -> m4_291  [key=2, style=dotted];
m4_288 -> m4_6  [key=2, style=dotted];
m4_289 -> m4_290  [key=0, style=solid];
m4_289 -> m4_74  [key=2, style=dotted];
m4_290 -> m4_286  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_256 -> m4_257  [key=0, style=solid];
m4_257 -> m4_258  [key=0, style=solid];
m4_257 -> m4_94  [key=2, style=dotted];
m4_257 -> m4_260  [color=green, key=1, label=options, style=dashed];
m4_258 -> m4_259  [key=0, style=solid];
m4_258 -> m4_6  [key=2, style=dotted];
m4_260 -> m4_261  [color=green, key=0, style=solid];
m4_260 -> n11  [color=green, key=2, style=dotted];
m4_260 -> m4_19  [color=green, key=2, style=dotted];
m4_259 -> m4_260  [color=green, key=0, style=solid];
m4_259 -> m4_17  [key=2, style=dotted];
m4_261 -> m4_256  [color=blue, key=0, style=bold];
m4_250 -> m4_251  [key=0, style=solid];
m4_251 -> m4_252  [key=0, style=solid];
m4_251 -> m4_94  [key=2, style=dotted];
m4_251 -> m4_254  [color=green, key=1, label=options, style=dashed];
m4_252 -> m4_253  [key=0, style=solid];
m4_252 -> m4_6  [key=2, style=dotted];
m4_254 -> m4_255  [color=green, key=0, style=solid];
m4_254 -> n11  [color=green, key=2, style=dotted];
m4_254 -> m4_19  [color=green, key=2, style=dotted];
m4_253 -> m4_254  [color=green, key=0, style=solid];
m4_253 -> m4_17  [key=2, style=dotted];
m4_255 -> m4_250  [color=blue, key=0, style=bold];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_6  [key=2, style=dotted];
m4_9 -> m4_7  [color=blue, key=0, style=bold];
m4_75 -> m4_76  [key=0, style=solid];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_83  [key=2, style=dotted];
m4_76 -> m4_79  [color=green, key=1, label=options, style=dashed];
m4_76 -> m4_80  [color=green, key=1, label=options, style=dashed];
m4_76 -> m4_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_77 -> m4_78  [key=0, style=solid];
m4_77 -> m4_6  [key=2, style=dotted];
m4_79 -> m4_80  [color=green, key=0, style=solid];
m4_79 -> n11  [color=green, key=2, style=dotted];
m4_79 -> m4_19  [color=green, key=2, style=dotted];
m4_80 -> m4_81  [color=green, key=0, style=solid];
m4_80 -> n11  [color=green, key=2, style=dotted];
m4_80 -> m4_19  [color=green, key=2, style=dotted];
m4_81 -> m4_82  [key=0, style=solid];
m4_81 -> m4_20  [key=2, style=dotted];
m4_78 -> m4_79  [color=green, key=0, style=solid];
m4_78 -> m4_17  [key=2, style=dotted];
m4_82 -> m4_75  [color=blue, key=0, style=bold];
m4_226 -> m4_227  [key=0, style=solid];
m4_227 -> m4_228  [key=0, style=solid];
m4_227 -> m4_94  [key=2, style=dotted];
m4_227 -> m4_230  [color=green, key=1, label=options, style=dashed];
m4_228 -> m4_229  [key=0, style=solid];
m4_228 -> m4_6  [key=2, style=dotted];
m4_230 -> m4_231  [color=green, key=0, style=solid];
m4_230 -> n11  [color=green, key=2, style=dotted];
m4_230 -> m4_19  [color=green, key=2, style=dotted];
m4_229 -> m4_230  [color=green, key=0, style=solid];
m4_229 -> m4_17  [key=2, style=dotted];
m4_231 -> m4_226  [color=blue, key=0, style=bold];
m4_163 -> m4_164  [key=0, style=solid];
m4_164 -> m4_165  [key=0, style=solid];
m4_164 -> m4_5  [key=2, style=dotted];
m4_165 -> m4_166  [key=0, style=solid];
m4_165 -> m4_6  [key=2, style=dotted];
m4_166 -> m4_167  [key=0, style=solid];
m4_166 -> m4_74  [key=2, style=dotted];
m4_167 -> m4_163  [color=blue, key=0, style=bold];
m4_31 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_41  [key=2, style=dotted];
m4_32 -> m4_35  [color=green, key=1, label=options, style=dashed];
m4_32 -> m4_36  [color=green, key=1, label=options, style=dashed];
m4_32 -> m4_37  [color=green, key=1, label=options, style=dashed];
m4_32 -> m4_38  [color=green, key=1, label=options, style=dashed];
m4_32 -> m4_39  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_6  [key=2, style=dotted];
m4_35 -> m4_36  [color=green, key=0, style=solid];
m4_35 -> n11  [color=green, key=2, style=dotted];
m4_35 -> m4_30  [color=green, key=2, style=dotted];
m4_36 -> m4_37  [color=green, key=0, style=solid];
m4_36 -> n11  [color=green, key=2, style=dotted];
m4_36 -> m4_30  [color=green, key=2, style=dotted];
m4_37 -> m4_38  [color=green, key=0, style=solid];
m4_37 -> n11  [color=green, key=2, style=dotted];
m4_37 -> m4_42  [color=green, key=2, style=dotted];
m4_38 -> m4_39  [color=green, key=0, style=solid];
m4_38 -> n11  [color=green, key=2, style=dotted];
m4_38 -> m4_19  [color=green, key=2, style=dotted];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_20  [key=2, style=dotted];
m4_34 -> m4_35  [color=green, key=0, style=solid];
m4_34 -> m4_17  [key=2, style=dotted];
m4_40 -> m4_31  [color=blue, key=0, style=bold];
m4_68 -> m4_69  [key=0, style=solid];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_5  [key=2, style=dotted];
m4_69 -> m4_72  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_6  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_20  [key=2, style=dotted];
m4_71 -> m4_72  [key=0, style=solid];
m4_71 -> m4_74  [key=2, style=dotted];
m4_73 -> m4_68  [color=blue, key=0, style=bold];
m4_280 -> m4_281  [key=0, style=solid];
m4_281 -> m4_282  [key=0, style=solid];
m4_281 -> m4_94  [key=2, style=dotted];
m4_282 -> m4_283  [key=0, style=solid];
m4_282 -> m4_285  [key=2, style=dotted];
m4_282 -> m4_6  [key=2, style=dotted];
m4_283 -> m4_284  [key=0, style=solid];
m4_283 -> m4_74  [key=2, style=dotted];
m4_284 -> m4_280  [color=blue, key=0, style=bold];
m4_53 -> m4_54  [key=0, style=solid];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_66  [key=2, style=dotted];
m4_54 -> m4_57  [color=green, key=1, label=options, style=dashed];
m4_54 -> m4_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_54 -> m4_59  [color=green, key=1, label=options, style=dashed];
m4_54 -> m4_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_54 -> m4_61  [color=green, key=1, label=options, style=dashed];
m4_54 -> m4_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_54 -> m4_63  [color=green, key=1, label=options, style=dashed];
m4_54 -> m4_64  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_55 -> m4_56  [key=0, style=solid];
m4_55 -> m4_6  [key=2, style=dotted];
m4_57 -> m4_58  [color=green, key=0, style=solid];
m4_57 -> n11  [color=green, key=2, style=dotted];
m4_57 -> m4_19  [color=green, key=2, style=dotted];
m4_58 -> m4_59  [color=green, key=0, style=solid];
m4_58 -> m4_67  [key=2, style=dotted];
m4_59 -> m4_60  [color=green, key=0, style=solid];
m4_59 -> n11  [color=green, key=2, style=dotted];
m4_59 -> m4_19  [color=green, key=2, style=dotted];
m4_60 -> m4_61  [color=green, key=0, style=solid];
m4_60 -> m4_67  [key=2, style=dotted];
m4_61 -> m4_62  [color=green, key=0, style=solid];
m4_61 -> n11  [color=green, key=2, style=dotted];
m4_61 -> m4_19  [color=green, key=2, style=dotted];
m4_62 -> m4_63  [color=green, key=0, style=solid];
m4_62 -> m4_67  [key=2, style=dotted];
m4_63 -> m4_64  [color=green, key=0, style=solid];
m4_63 -> n11  [color=green, key=2, style=dotted];
m4_63 -> m4_19  [color=green, key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_67  [key=2, style=dotted];
m4_56 -> m4_57  [color=green, key=0, style=solid];
m4_56 -> m4_17  [key=2, style=dotted];
m4_65 -> m4_53  [color=blue, key=0, style=bold];
m4_193 -> m4_194  [key=0, style=solid];
m4_194 -> m4_195  [key=0, style=solid];
m4_194 -> m4_94  [key=2, style=dotted];
m4_195 -> m4_196  [key=0, style=solid];
m4_195 -> m4_6  [key=2, style=dotted];
m4_196 -> m4_197  [key=0, style=solid];
m4_196 -> m4_74  [key=2, style=dotted];
m4_197 -> m4_193  [color=blue, key=0, style=bold];
m4_153 -> m4_154  [key=0, style=solid];
m4_154 -> m4_155  [key=0, style=solid];
m4_154 -> m4_161  [key=2, style=dotted];
m4_154 -> m4_162  [key=2, style=dotted];
m4_154 -> m4_156  [color=darkseagreen4, key=1, label=local, style=dashed];
m4_155 -> m4_156  [key=0, style=solid];
m4_155 -> m4_146  [key=2, style=dotted];
m4_155 -> m4_158  [color=green, key=1, label=options, style=dashed];
m4_155 -> m4_159  [color=green, key=1, label=options, style=dashed];
m4_156 -> m4_157  [key=0, style=solid];
m4_156 -> m4_6  [key=2, style=dotted];
m4_158 -> m4_159  [color=green, key=0, style=solid];
m4_158 -> n11  [color=green, key=2, style=dotted];
m4_158 -> m4_19  [color=green, key=2, style=dotted];
m4_159 -> m4_160  [color=green, key=0, style=solid];
m4_159 -> n11  [color=green, key=2, style=dotted];
m4_159 -> m4_19  [color=green, key=2, style=dotted];
m4_157 -> m4_158  [color=green, key=0, style=solid];
m4_157 -> m4_17  [key=2, style=dotted];
m4_160 -> m4_153  [color=blue, key=0, style=bold];
m4_220 -> m4_221  [key=0, style=solid];
m4_221 -> m4_222  [key=0, style=solid];
m4_221 -> m4_94  [key=2, style=dotted];
m4_221 -> m4_224  [color=green, key=1, label=options, style=dashed];
m4_222 -> m4_223  [key=0, style=solid];
m4_222 -> m4_6  [key=2, style=dotted];
m4_224 -> m4_225  [color=green, key=0, style=solid];
m4_224 -> n11  [color=green, key=2, style=dotted];
m4_224 -> m4_19  [color=green, key=2, style=dotted];
m4_223 -> m4_224  [color=green, key=0, style=solid];
m4_223 -> m4_17  [key=2, style=dotted];
m4_225 -> m4_220  [color=blue, key=0, style=bold];
m4_137 -> m4_138  [key=0, style=solid];
m4_138 -> m4_139  [key=0, style=solid];
m4_138 -> m4_145  [key=2, style=dotted];
m4_138 -> m4_140  [color=darkseagreen4, key=1, label=local, style=dashed];
m4_139 -> m4_140  [key=0, style=solid];
m4_139 -> m4_146  [key=2, style=dotted];
m4_139 -> m4_142  [color=green, key=1, label=options, style=dashed];
m4_139 -> m4_143  [color=green, key=1, label=options, style=dashed];
m4_140 -> m4_141  [key=0, style=solid];
m4_140 -> m4_6  [key=2, style=dotted];
m4_142 -> m4_143  [color=green, key=0, style=solid];
m4_142 -> n11  [color=green, key=2, style=dotted];
m4_142 -> m4_19  [color=green, key=2, style=dotted];
m4_143 -> m4_144  [color=green, key=0, style=solid];
m4_143 -> n11  [color=green, key=2, style=dotted];
m4_143 -> m4_19  [color=green, key=2, style=dotted];
m4_141 -> m4_142  [color=green, key=0, style=solid];
m4_141 -> m4_17  [key=2, style=dotted];
m4_144 -> m4_137  [color=blue, key=0, style=bold];
m4_84 -> m4_85  [key=0, style=solid];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_91  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
m4_86 -> m4_87  [key=0, style=solid];
m4_86 -> m4_93  [key=2, style=dotted];
m4_91 -> m4_92  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_87 -> m4_94  [key=2, style=dotted];
m4_87 -> m4_90  [color=green, key=1, label=options, style=dashed];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_6  [key=2, style=dotted];
m4_90 -> m4_91  [color=green, key=0, style=solid];
m4_90 -> n11  [color=green, key=2, style=dotted];
m4_90 -> m4_19  [color=green, key=2, style=dotted];
m4_89 -> m4_90  [color=green, key=0, style=solid];
m4_89 -> m4_17  [key=2, style=dotted];
m4_92 -> m4_84  [color=blue, key=0, style=bold];
m4_132 -> m4_133  [key=0, style=solid];
m4_133 -> m4_134  [key=0, style=solid];
m4_133 -> m4_5  [key=2, style=dotted];
m4_134 -> m4_135  [key=0, style=solid];
m4_134 -> m4_6  [key=2, style=dotted];
m4_135 -> m4_136  [key=0, style=solid];
m4_135 -> m4_74  [key=2, style=dotted];
m4_136 -> m4_132  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_5  [key=2, style=dotted];
m4_22 -> m4_25  [color=green, key=1, label=options, style=dashed];
m4_22 -> m4_26  [color=green, key=1, label=options, style=dashed];
m4_22 -> m4_27  [color=green, key=1, label=options, style=dashed];
m4_22 -> m4_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_23 -> m4_24  [key=0, style=solid];
m4_23 -> m4_6  [key=2, style=dotted];
m4_25 -> m4_26  [color=green, key=0, style=solid];
m4_25 -> n11  [color=green, key=2, style=dotted];
m4_25 -> m4_19  [color=green, key=2, style=dotted];
m4_26 -> m4_27  [color=green, key=0, style=solid];
m4_26 -> n11  [color=green, key=2, style=dotted];
m4_26 -> m4_19  [color=green, key=2, style=dotted];
m4_27 -> m4_28  [color=green, key=0, style=solid];
m4_27 -> n11  [color=green, key=2, style=dotted];
m4_27 -> m4_30  [color=green, key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_20  [key=2, style=dotted];
m4_24 -> m4_25  [color=green, key=0, style=solid];
m4_24 -> m4_17  [key=2, style=dotted];
m4_29 -> m4_21  [color=blue, key=0, style=bold];
m4_204 -> m4_205  [key=0, style=solid];
m4_205 -> m4_206  [key=0, style=solid];
m4_205 -> m4_213  [key=2, style=dotted];
m4_205 -> m4_208  [color=green, key=1, label=options, style=dashed];
m4_205 -> m4_209  [color=green, key=1, label=options, style=dashed];
m4_205 -> m4_210  [color=green, key=1, label=options, style=dashed];
m4_205 -> m4_211  [color=green, key=1, label=options, style=dashed];
m4_206 -> m4_207  [key=0, style=solid];
m4_206 -> m4_6  [key=2, style=dotted];
m4_208 -> m4_209  [color=green, key=0, style=solid];
m4_208 -> n11  [color=green, key=2, style=dotted];
m4_208 -> m4_19  [color=green, key=2, style=dotted];
m4_209 -> m4_210  [color=green, key=0, style=solid];
m4_209 -> n11  [color=green, key=2, style=dotted];
m4_209 -> m4_30  [color=green, key=2, style=dotted];
m4_210 -> m4_211  [color=green, key=0, style=solid];
m4_210 -> n11  [color=green, key=2, style=dotted];
m4_210 -> m4_19  [color=green, key=2, style=dotted];
m4_211 -> m4_212  [color=green, key=0, style=solid];
m4_211 -> n11  [color=green, key=2, style=dotted];
m4_211 -> m4_19  [color=green, key=2, style=dotted];
m4_207 -> m4_208  [color=green, key=0, style=solid];
m4_207 -> m4_17  [key=2, style=dotted];
m4_212 -> m4_204  [color=blue, key=0, style=bold];
m4_147 -> m4_148  [key=0, style=solid];
m4_148 -> m4_149  [key=0, style=solid];
m4_148 -> m4_145  [key=2, style=dotted];
m4_148 -> m4_150  [color=darkseagreen4, key=1, label=local, style=dashed];
m4_149 -> m4_150  [key=0, style=solid];
m4_149 -> m4_146  [key=2, style=dotted];
m4_150 -> m4_151  [key=0, style=solid];
m4_150 -> m4_6  [key=2, style=dotted];
m4_151 -> m4_152  [key=0, style=solid];
m4_151 -> m4_74  [key=2, style=dotted];
m4_152 -> m4_147  [color=blue, key=0, style=bold];
m4_214 -> m4_215  [key=0, style=solid];
m4_215 -> m4_216  [key=0, style=solid];
m4_215 -> m4_5  [key=2, style=dotted];
m4_215 -> m4_218  [color=green, key=1, label=options, style=dashed];
m4_216 -> m4_217  [key=0, style=solid];
m4_216 -> m4_6  [key=2, style=dotted];
m4_218 -> m4_219  [color=green, key=0, style=solid];
m4_218 -> n11  [color=green, key=2, style=dotted];
m4_218 -> m4_19  [color=green, key=2, style=dotted];
m4_217 -> m4_218  [color=green, key=0, style=solid];
m4_217 -> m4_17  [key=2, style=dotted];
m4_219 -> m4_214  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=2, style=dotted];
m4_3 -> m4_6  [key=2, style=dotted];
m4_4 -> m4_2  [color=blue, key=0, style=bold];
m4_122 -> m4_123  [key=0, style=solid];
m4_123 -> m4_124  [key=0, style=solid];
m4_123 -> m4_126  [key=2, style=dotted];
m4_124 -> m4_125  [key=0, style=solid];
m4_124 -> m4_6  [key=2, style=dotted];
m4_125 -> m4_122  [color=blue, key=0, style=bold];
m4_198 -> m4_199  [key=0, style=solid];
m4_199 -> m4_200  [key=0, style=solid];
m4_199 -> m4_5  [key=2, style=dotted];
m4_199 -> m4_202  [color=green, key=1, label=options, style=dashed];
m4_200 -> m4_201  [key=0, style=solid];
m4_200 -> m4_6  [key=2, style=dotted];
m4_202 -> m4_203  [color=green, key=0, style=solid];
m4_202 -> n11  [color=green, key=2, style=dotted];
m4_202 -> m4_19  [color=green, key=2, style=dotted];
m4_201 -> m4_202  [color=green, key=0, style=solid];
m4_201 -> m4_17  [key=2, style=dotted];
m4_203 -> m4_198  [color=blue, key=0, style=bold];
m4_268 -> m4_269  [key=0, style=solid];
m4_269 -> m4_270  [key=0, style=solid];
m4_269 -> m4_94  [key=2, style=dotted];
m4_270 -> m4_271  [key=0, style=solid];
m4_270 -> m4_273  [key=2, style=dotted];
m4_270 -> m4_6  [key=2, style=dotted];
m4_271 -> m4_272  [key=0, style=solid];
m4_271 -> m4_74  [key=2, style=dotted];
m4_272 -> m4_268  [color=blue, key=0, style=bold];
m4_232 -> m4_233  [key=0, style=solid];
m4_233 -> m4_234  [key=0, style=solid];
m4_233 -> m4_94  [key=2, style=dotted];
m4_233 -> m4_236  [color=green, key=1, label=options, style=dashed];
m4_234 -> m4_235  [key=0, style=solid];
m4_234 -> m4_6  [key=2, style=dotted];
m4_236 -> m4_237  [color=green, key=0, style=solid];
m4_236 -> n11  [color=green, key=2, style=dotted];
m4_236 -> m4_19  [color=green, key=2, style=dotted];
m4_235 -> m4_236  [color=green, key=0, style=solid];
m4_235 -> m4_17  [key=2, style=dotted];
m4_237 -> m4_232  [color=blue, key=0, style=bold];
m4_43 -> m4_44  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_44 -> m4_41  [key=2, style=dotted];
m4_44 -> m4_47  [color=green, key=1, label=options, style=dashed];
m4_44 -> m4_48  [color=green, key=1, label=options, style=dashed];
m4_44 -> m4_49  [color=green, key=1, label=options, style=dashed];
m4_44 -> m4_50  [color=green, key=1, label=options, style=dashed];
m4_44 -> m4_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_6  [key=2, style=dotted];
m4_47 -> m4_48  [color=green, key=0, style=solid];
m4_47 -> n11  [color=green, key=2, style=dotted];
m4_47 -> m4_30  [color=green, key=2, style=dotted];
m4_48 -> m4_49  [color=green, key=0, style=solid];
m4_48 -> n11  [color=green, key=2, style=dotted];
m4_48 -> m4_42  [color=green, key=2, style=dotted];
m4_49 -> m4_50  [color=green, key=0, style=solid];
m4_49 -> n11  [color=green, key=2, style=dotted];
m4_49 -> m4_42  [color=green, key=2, style=dotted];
m4_50 -> m4_51  [color=green, key=0, style=solid];
m4_50 -> n11  [color=green, key=2, style=dotted];
m4_50 -> m4_19  [color=green, key=2, style=dotted];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_20  [key=2, style=dotted];
m4_46 -> m4_47  [color=green, key=0, style=solid];
m4_46 -> m4_17  [key=2, style=dotted];
m4_52 -> m4_43  [color=blue, key=0, style=bold];
m4_168 -> m4_169  [key=0, style=solid];
m4_169 -> m4_170  [key=0, style=solid];
m4_169 -> m4_94  [key=2, style=dotted];
m4_170 -> m4_171  [key=0, style=solid];
m4_170 -> m4_6  [key=2, style=dotted];
m4_171 -> m4_172  [key=0, style=solid];
m4_171 -> m4_74  [key=2, style=dotted];
m4_172 -> m4_168  [color=blue, key=0, style=bold];
m4_183 -> m4_184  [key=0, style=solid];
m4_184 -> m4_185  [key=0, style=solid];
m4_184 -> m4_94  [key=2, style=dotted];
m4_185 -> m4_186  [key=0, style=solid];
m4_185 -> m4_6  [key=2, style=dotted];
m4_186 -> m4_187  [key=0, style=solid];
m4_186 -> m4_74  [key=2, style=dotted];
m4_187 -> m4_183  [color=blue, key=0, style=bold];
m4_238 -> m4_239  [key=0, style=solid];
m4_239 -> m4_240  [key=0, style=solid];
m4_239 -> m4_94  [key=2, style=dotted];
m4_239 -> m4_242  [color=green, key=1, label=options, style=dashed];
m4_240 -> m4_241  [key=0, style=solid];
m4_240 -> m4_6  [key=2, style=dotted];
m4_242 -> m4_243  [color=green, key=0, style=solid];
m4_242 -> n11  [color=green, key=2, style=dotted];
m4_242 -> m4_19  [color=green, key=2, style=dotted];
m4_241 -> m4_242  [color=green, key=0, style=solid];
m4_241 -> m4_17  [key=2, style=dotted];
m4_243 -> m4_238  [color=blue, key=0, style=bold];
m4_113 -> m4_114  [key=0, style=solid];
m4_114 -> m4_115  [color=green, key=0, style=solid];
m4_114 -> m4_121  [key=2, style=dotted];
m4_114 -> m4_117  [color=green, key=1, label=options, style=dashed];
m4_114 -> m4_118  [color=green, key=1, label=options, style=dashed];
m4_114 -> m4_119  [color=green, key=1, label=options, style=dashed];
m4_115 -> m4_116  [color=green, key=0, style=solid];
m4_115 -> m4_6  [color=green, key=2, style=dotted];
m4_117 -> m4_118  [color=green, key=0, style=solid];
m4_117 -> n11  [color=green, key=2, style=dotted];
m4_117 -> m4_19  [color=green, key=2, style=dotted];
m4_118 -> m4_119  [color=green, key=0, style=solid];
m4_118 -> n11  [color=green, key=2, style=dotted];
m4_118 -> m4_19  [color=green, key=2, style=dotted];
m4_119 -> m4_120  [color=green, key=0, style=solid];
m4_119 -> n11  [color=green, key=2, style=dotted];
m4_119 -> m4_19  [color=green, key=2, style=dotted];
m4_116 -> m4_117  [color=green, key=0, style=solid];
m4_116 -> m4_17  [key=2, style=dotted];
m4_120 -> m4_113  [color=blue, key=0, style=bold];
m4_274 -> m4_275  [key=0, style=solid];
m4_275 -> m4_276  [key=0, style=solid];
m4_275 -> m4_94  [key=2, style=dotted];
m4_276 -> m4_277  [key=0, style=solid];
m4_276 -> m4_279  [key=2, style=dotted];
m4_276 -> m4_6  [key=2, style=dotted];
m4_277 -> m4_278  [key=0, style=solid];
m4_277 -> m4_74  [key=2, style=dotted];
m4_278 -> m4_274  [color=blue, key=0, style=bold];
m4_95 -> m4_96  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_102  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_93  [key=2, style=dotted];
m4_102 -> m4_103  [key=0, style=solid];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_94  [key=2, style=dotted];
m4_98 -> m4_101  [color=green, key=1, label=options, style=dashed];
m4_99 -> m4_100  [key=0, style=solid];
m4_99 -> m4_6  [key=2, style=dotted];
m4_101 -> m4_102  [color=green, key=0, style=solid];
m4_101 -> n11  [color=green, key=2, style=dotted];
m4_101 -> m4_19  [color=green, key=2, style=dotted];
m4_100 -> m4_101  [color=green, key=0, style=solid];
m4_100 -> m4_17  [key=2, style=dotted];
m4_103 -> m4_95  [color=blue, key=0, style=bold];
m4_188 -> m4_189  [key=0, style=solid];
m4_189 -> m4_190  [key=0, style=solid];
m4_189 -> m4_94  [key=2, style=dotted];
m4_190 -> m4_191  [key=0, style=solid];
m4_190 -> m4_6  [key=2, style=dotted];
m4_191 -> m4_192  [key=0, style=solid];
m4_191 -> m4_74  [key=2, style=dotted];
m4_192 -> m4_188  [color=blue, key=0, style=bold];
m4_104 -> m4_105  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_105 -> m4_112  [key=2, style=dotted];
m4_105 -> m4_108  [color=green, key=1, label=options, style=dashed];
m4_105 -> m4_109  [color=green, key=1, label=options, style=dashed];
m4_105 -> m4_110  [color=green, key=1, label=options, style=dashed];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_6  [key=2, style=dotted];
m4_108 -> m4_109  [color=green, key=0, style=solid];
m4_108 -> n11  [color=green, key=2, style=dotted];
m4_108 -> m4_19  [color=green, key=2, style=dotted];
m4_109 -> m4_110  [color=green, key=0, style=solid];
m4_109 -> n11  [color=green, key=2, style=dotted];
m4_109 -> m4_19  [color=green, key=2, style=dotted];
m4_110 -> m4_111  [color=green, key=0, style=solid];
m4_110 -> n11  [color=green, key=2, style=dotted];
m4_110 -> m4_30  [color=green, key=2, style=dotted];
m4_107 -> m4_108  [color=green, key=0, style=solid];
m4_107 -> m4_17  [key=2, style=dotted];
m4_111 -> m4_104  [color=blue, key=0, style=bold];
m4_127 -> m4_128  [key=0, style=solid];
m4_128 -> m4_129  [key=0, style=solid];
m4_128 -> m4_5  [key=2, style=dotted];
m4_129 -> m4_130  [key=0, style=solid];
m4_129 -> m4_6  [key=2, style=dotted];
m4_130 -> m4_131  [key=0, style=solid];
m4_130 -> m4_74  [key=2, style=dotted];
m4_131 -> m4_127  [color=blue, key=0, style=bold];
m4_173 -> m4_174  [key=0, style=solid];
m4_174 -> m4_175  [key=0, style=solid];
m4_174 -> m4_94  [key=2, style=dotted];
m4_175 -> m4_176  [key=0, style=solid];
m4_175 -> m4_6  [key=2, style=dotted];
m4_176 -> m4_177  [key=0, style=solid];
m4_176 -> m4_74  [key=2, style=dotted];
m4_177 -> m4_173  [color=blue, key=0, style=bold];
m4_292 -> m4_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_24  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_45  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_70  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_71  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_77  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_78  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_88  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_89  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_99  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_100  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_106  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_107  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_115  [color=green, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_124  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_129  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_130  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_134  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_140  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_150  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_151  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_156  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_157  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_165  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_166  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_170  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_171  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_175  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_176  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_180  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_181  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_185  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_186  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_190  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_195  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_196  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_200  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_201  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_206  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_207  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_216  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_217  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_222  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_223  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_228  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_229  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_234  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_235  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_240  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_241  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_246  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_247  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_252  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_253  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_258  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_259  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_264  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_265  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_270  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_271  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_276  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_277  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_282  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_283  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_288  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m4_292 -> m4_289  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_8  [key=2, style=dotted];
m5_1 -> m5_6  [color=green, key=1, label=writer, style=dashed];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_9  [key=2, style=dotted];
m5_2 -> m5_10  [key=2, style=dotted];
m5_2 -> m5_4  [color=darkseagreen4, key=1, label=parser, style=dashed];
m5_6 -> m5_7  [color=green, key=0, style=solid];
m5_6 -> m5_15  [color=green, key=2, style=dotted];
m5_6 -> m5_13  [color=green, key=2, style=dotted];
m5_6 -> n12  [color=green, key=2, style=dotted];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_11  [key=2, style=dotted];
m5_4 -> m5_5  [color=green, key=0, style=solid];
m5_4 -> m5_12  [key=2, style=dotted];
m5_5 -> m5_6  [color=green, key=0, style=solid];
m5_5 -> m5_13  [color=green, key=2, style=dotted];
m5_5 -> m5_14  [color=green, key=2, style=dotted];
m5_7 -> m5_0  [color=blue, key=0, style=bold];
m5_28 -> m5_29  [key=0, style=solid];
m5_29 -> m5_30  [key=0, style=solid];
m5_29 -> m5_8  [key=2, style=dotted];
m5_29 -> m5_32  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_29 -> m5_34  [color=green, key=1, label=writer, style=dashed];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_9  [key=2, style=dotted];
m5_30 -> m5_27  [key=2, style=dotted];
m5_30 -> m5_32  [color=darkseagreen4, key=1, label=parser, style=dashed];
m5_32 -> m5_33  [color=green, key=0, style=solid];
m5_32 -> m5_36  [key=2, style=dotted];
m5_34 -> m5_35  [color=green, key=0, style=solid];
m5_34 -> m5_15  [color=green, key=2, style=dotted];
m5_34 -> m5_13  [color=green, key=2, style=dotted];
m5_34 -> n12  [color=green, key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_11  [key=2, style=dotted];
m5_33 -> m5_34  [color=green, key=0, style=solid];
m5_33 -> m5_13  [color=green, key=2, style=dotted];
m5_33 -> m5_14  [color=green, key=2, style=dotted];
m5_35 -> m5_28  [color=blue, key=0, style=bold];
m5_17 -> m5_18  [key=0, style=solid];
m5_18 -> m5_19  [key=0, style=solid];
m5_18 -> m5_8  [key=2, style=dotted];
m5_18 -> m5_20  [color=darkseagreen4, key=1, label=writer, style=dashed];
m5_18 -> m5_25  [color=green, key=1, label=writer, style=dashed];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_27  [key=2, style=dotted];
m5_19 -> m5_21  [color=darkseagreen4, key=1, label=settings, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_25 -> m5_26  [color=green, key=0, style=solid];
m5_25 -> m5_15  [color=green, key=2, style=dotted];
m5_25 -> m5_13  [color=green, key=2, style=dotted];
m5_25 -> n12  [color=green, key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_9  [key=2, style=dotted];
m5_21 -> m5_23  [color=darkseagreen4, key=1, label=parser, style=dashed];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_11  [key=2, style=dotted];
m5_23 -> m5_24  [color=green, key=0, style=solid];
m5_23 -> m5_12  [key=2, style=dotted];
m5_24 -> m5_25  [color=green, key=0, style=solid];
m5_24 -> m5_13  [color=green, key=2, style=dotted];
m5_24 -> m5_14  [color=green, key=2, style=dotted];
m5_26 -> m5_17  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_13  [key=2, style=dotted];
m7_3 -> m7_7  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_8  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_9  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_10  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_3 -> m7_11  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_10  [key=0, style=solid];
m7_7 -> m7_9  [key=0, style=solid];
m7_7 -> m7_15  [key=2, style=dotted];
m7_7 -> m7_16  [key=2, style=dotted];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_16  [key=2, style=dotted];
m7_9 -> m7_4  [key=0, style=solid];
m7_9 -> m7_16  [key=2, style=dotted];
m7_10 -> m7_11  [key=0, style=solid];
m7_10 -> m7_17  [key=2, style=dotted];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_18  [key=2, style=dotted];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_14  [key=2, style=dotted];
m7_5 -> m7_7  [color=darkseagreen4, key=1, label=y, style=dashed];
m7_5 -> m7_8  [color=darkseagreen4, key=1, label=y, style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [key=0, style=solid];
m7_12 -> m7_2  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [key=0, style=solid];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_35  [key=2, style=dotted];
m7_46 -> m7_44  [color=blue, key=0, style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_28 -> m7_29  [color=green, key=0, style=solid];
m7_28 -> m7_23  [key=2, style=dotted];
m7_29 -> m7_30  [color=green, key=0, style=solid];
m7_29 -> m7_24  [color=green, key=2, style=dotted];
m7_29 -> n11  [color=green, key=2, style=dotted];
m7_29 -> m7_26  [color=green, key=2, style=dotted];
m7_30 -> m7_27  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_47 -> m7_48  [key=0, style=solid];
m7_48 -> m7_49  [color=green, key=0, style=solid];
m7_48 -> m7_0  [key=2, style=dotted];
m7_49 -> m7_50  [color=green, key=0, style=solid];
m7_49 -> m7_24  [color=green, key=2, style=dotted];
m7_49 -> n11  [color=green, key=2, style=dotted];
m7_49 -> m7_26  [color=green, key=2, style=dotted];
m7_50 -> m7_47  [color=blue, key=0, style=bold];
m7_51 -> m7_52  [key=0, style=solid];
m7_52 -> m7_53  [key=0, style=solid];
m7_52 -> m7_43  [key=2, style=dotted];
m7_52 -> m7_55  [color=green, key=1, label=info, style=dashed];
m7_53 -> m7_54  [key=0, style=solid];
m7_53 -> m7_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_53 -> m7_53  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m7_55 -> m7_56  [color=green, key=0, style=solid];
m7_55 -> m7_24  [color=green, key=2, style=dotted];
m7_55 -> n11  [color=green, key=2, style=dotted];
m7_55 -> m7_26  [color=green, key=2, style=dotted];
m7_54 -> m7_55  [color=green, key=0, style=solid];
m7_54 -> m7_57  [key=0, style=solid];
m7_56 -> m7_54  [key=0, style=solid];
m7_56 -> m7_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_57 -> m7_51  [color=blue, key=0, style=bold];
m7_31 -> m7_32  [key=0, style=solid];
m7_32 -> m7_33  [color=green, key=0, style=solid];
m7_32 -> m7_35  [key=2, style=dotted];
m7_33 -> m7_34  [color=green, key=0, style=solid];
m7_33 -> m7_24  [color=green, key=2, style=dotted];
m7_33 -> n11  [color=green, key=2, style=dotted];
m7_33 -> m7_26  [color=green, key=2, style=dotted];
m7_34 -> m7_31  [color=blue, key=0, style=bold];
m7_36 -> m7_37  [key=0, style=solid];
m7_37 -> m7_38  [color=green, key=0, style=solid];
m7_37 -> m7_35  [key=2, style=dotted];
m7_38 -> m7_39  [color=green, key=0, style=solid];
m7_38 -> m7_24  [color=green, key=2, style=dotted];
m7_38 -> n11  [color=green, key=2, style=dotted];
m7_38 -> m7_26  [color=green, key=2, style=dotted];
m7_39 -> m7_36  [color=blue, key=0, style=bold];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_21  [color=green, key=0, style=solid];
m7_20 -> m7_23  [key=2, style=dotted];
m7_21 -> m7_22  [color=green, key=0, style=solid];
m7_21 -> m7_24  [color=green, key=2, style=dotted];
m7_21 -> n11  [color=green, key=2, style=dotted];
m7_21 -> m7_26  [color=green, key=2, style=dotted];
m7_22 -> m7_19  [color=blue, key=0, style=bold];
m7_40 -> m7_41  [key=0, style=solid];
m7_41 -> m7_42  [key=0, style=solid];
m7_41 -> m7_43  [key=2, style=dotted];
m7_42 -> m7_40  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label=valueOne, style=dashed];
m8_1 -> m8_7  [color=green, key=1, label=valueOne, style=dashed];
m8_1 -> m8_1  [color=darkorchid, key=3, label="Local variable string valueOne", style=bold];
m8_2 -> m8_3  [key=0, style=solid];
m8_2 -> m8_4  [color=darkseagreen4, key=1, label=valueTwo, style=dashed];
m8_2 -> m8_8  [color=green, key=1, label=valueTwo, style=dashed];
m8_2 -> m8_11  [color=green, key=1, label=valueTwo, style=dashed];
m8_2 -> m8_2  [color=darkorchid, key=3, label="Local variable string valueTwo", style=bold];
m8_4 -> m8_5  [key=0, style=solid];
m8_7 -> m8_8  [color=green, key=0, style=solid];
m8_7 -> m8_21  [color=green, key=2, style=dotted];
m8_7 -> m8_22  [color=green, key=2, style=dotted];
m8_3 -> m8_4  [key=0, style=solid];
m8_3 -> m8_12  [color=green, key=1, label=valueThree, style=dashed];
m8_3 -> m8_15  [color=green, key=1, label=valueThree, style=dashed];
m8_3 -> m8_3  [color=darkorchid, key=3, label="Local variable string valueThree", style=bold];
m8_8 -> m8_9  [color=green, key=0, style=solid];
m8_8 -> m8_21  [color=green, key=2, style=dotted];
m8_8 -> m8_22  [color=green, key=2, style=dotted];
m8_11 -> m8_12  [color=green, key=0, style=solid];
m8_11 -> m8_21  [color=green, key=2, style=dotted];
m8_11 -> m8_22  [color=green, key=2, style=dotted];
m8_12 -> m8_13  [color=green, key=0, style=solid];
m8_12 -> m8_21  [color=green, key=2, style=dotted];
m8_12 -> m8_22  [color=green, key=2, style=dotted];
m8_15 -> m8_16  [color=green, key=0, style=solid];
m8_15 -> m8_21  [color=green, key=2, style=dotted];
m8_15 -> m8_22  [color=green, key=2, style=dotted];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> n7  [key=2, style=dotted];
m8_5 -> m8_7  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_8  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_9  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_10  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_5 -> m8_11  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_12  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_13  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_14  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_5 -> m8_15  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_16  [color=green, key=1, label=e, style=dashed];
m8_5 -> m8_17  [color=green, key=1, label=e, style=dashed];
m8_6 -> m8_7  [color=green, key=0, style=solid];
m8_6 -> m8_20  [key=2, style=dotted];
m8_9 -> m8_10  [color=green, key=0, style=solid];
m8_9 -> m8_21  [color=green, key=2, style=dotted];
m8_9 -> m8_23  [color=green, key=2, style=dotted];
m8_10 -> m8_11  [color=green, key=0, style=solid];
m8_10 -> m8_20  [key=2, style=dotted];
m8_13 -> m8_14  [color=green, key=0, style=solid];
m8_13 -> m8_21  [color=green, key=2, style=dotted];
m8_13 -> m8_23  [color=green, key=2, style=dotted];
m8_14 -> m8_15  [color=green, key=0, style=solid];
m8_14 -> m8_20  [key=2, style=dotted];
m8_16 -> m8_17  [color=green, key=0, style=solid];
m8_16 -> m8_21  [color=green, key=2, style=dotted];
m8_16 -> m8_24  [color=green, key=2, style=dotted];
m8_17 -> m8_18  [color=green, key=0, style=solid];
m8_17 -> m8_21  [color=green, key=2, style=dotted];
m8_17 -> m8_25  [color=green, key=2, style=dotted];
m8_18 -> m8_0  [color=blue, key=0, style=bold];
m8_26 -> m8_27  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_27 -> m8_47  [key=2, style=dotted];
m8_27 -> m8_29  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_30  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_31  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_32  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_33  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_27 -> m8_34  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_35  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_36  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_37  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_38  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_27 -> m8_39  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_40  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_41  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_42  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_27 -> m8_44  [color=green, key=1, label=e, style=dashed];
m8_27 -> m8_45  [color=green, key=1, label=e, style=dashed];
m8_28 -> m8_29  [color=green, key=0, style=solid];
m8_28 -> m8_20  [key=2, style=dotted];
m8_29 -> m8_30  [color=green, key=0, style=solid];
m8_29 -> m8_21  [color=green, key=2, style=dotted];
m8_29 -> m8_22  [color=green, key=2, style=dotted];
m8_30 -> m8_31  [color=green, key=0, style=solid];
m8_30 -> m8_21  [color=green, key=2, style=dotted];
m8_30 -> m8_22  [color=green, key=2, style=dotted];
m8_31 -> m8_32  [color=green, key=0, style=solid];
m8_31 -> m8_48  [color=green, key=2, style=dotted];
m8_31 -> m8_21  [color=green, key=2, style=dotted];
m8_31 -> m8_22  [color=green, key=2, style=dotted];
m8_32 -> m8_33  [color=green, key=0, style=solid];
m8_32 -> m8_21  [color=green, key=2, style=dotted];
m8_32 -> m8_23  [color=green, key=2, style=dotted];
m8_33 -> m8_34  [color=green, key=0, style=solid];
m8_33 -> m8_20  [key=2, style=dotted];
m8_34 -> m8_35  [color=green, key=0, style=solid];
m8_34 -> m8_21  [color=green, key=2, style=dotted];
m8_34 -> m8_22  [color=green, key=2, style=dotted];
m8_35 -> m8_36  [color=green, key=0, style=solid];
m8_35 -> m8_21  [color=green, key=2, style=dotted];
m8_35 -> m8_22  [color=green, key=2, style=dotted];
m8_36 -> m8_37  [color=green, key=0, style=solid];
m8_36 -> m8_48  [color=green, key=2, style=dotted];
m8_36 -> m8_21  [color=green, key=2, style=dotted];
m8_36 -> m8_22  [color=green, key=2, style=dotted];
m8_37 -> m8_38  [color=green, key=0, style=solid];
m8_37 -> m8_21  [color=green, key=2, style=dotted];
m8_37 -> m8_23  [color=green, key=2, style=dotted];
m8_38 -> m8_39  [color=green, key=0, style=solid];
m8_38 -> m8_20  [key=2, style=dotted];
m8_39 -> m8_40  [color=green, key=0, style=solid];
m8_39 -> m8_21  [color=green, key=2, style=dotted];
m8_39 -> m8_22  [color=green, key=2, style=dotted];
m8_40 -> m8_41  [color=green, key=0, style=solid];
m8_40 -> m8_21  [color=green, key=2, style=dotted];
m8_40 -> m8_22  [color=green, key=2, style=dotted];
m8_41 -> m8_42  [color=green, key=0, style=solid];
m8_41 -> m8_48  [color=green, key=2, style=dotted];
m8_41 -> m8_21  [color=green, key=2, style=dotted];
m8_41 -> m8_22  [color=green, key=2, style=dotted];
m8_42 -> m8_43  [color=green, key=0, style=solid];
m8_42 -> m8_21  [color=green, key=2, style=dotted];
m8_42 -> m8_23  [color=green, key=2, style=dotted];
m8_43 -> m8_44  [color=green, key=0, style=solid];
m8_43 -> m8_20  [key=2, style=dotted];
m8_44 -> m8_45  [color=green, key=0, style=solid];
m8_44 -> m8_21  [color=green, key=2, style=dotted];
m8_44 -> m8_22  [color=green, key=2, style=dotted];
m8_45 -> m8_46  [color=green, key=0, style=solid];
m8_45 -> m8_21  [color=green, key=2, style=dotted];
m8_45 -> m8_25  [color=green, key=2, style=dotted];
m8_46 -> m8_26  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_8  [key=2, style=dotted];
m9_1 -> m9_5  [color=darkseagreen4, key=1, label=hi, style=dashed];
m9_2 -> m9_3  [color=green, key=0, style=solid];
m9_2 -> m9_1  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m9_5 -> m9_6  [color=green, key=0, style=solid];
m9_5 -> m9_12  [key=2, style=dotted];
m9_3 -> m9_4  [color=green, key=0, style=solid];
m9_3 -> m9_9  [color=green, key=2, style=dotted];
m9_3 -> n12  [color=green, key=2, style=dotted];
m9_4 -> m9_5  [key=0, style=solid];
m9_4 -> m9_11  [key=2, style=dotted];
m9_4 -> m9_6  [color=green, key=1, label=sw, style=dashed];
m9_6 -> m9_7  [color=green, key=0, style=solid];
m9_6 -> m9_13  [color=green, key=2, style=dotted];
m9_6 -> m9_9  [color=green, key=2, style=dotted];
m9_6 -> n12  [color=green, key=2, style=dotted];
m9_7 -> m9_0  [color=blue, key=0, style=bold];
m9_14 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_22  [key=2, style=dotted];
m9_15 -> m9_19  [color=darkseagreen4, key=1, label=hi, style=dashed];
m9_16 -> m9_17  [color=green, key=0, style=solid];
m9_16 -> m9_15  [color=darkorchid, key=3, label="Local variable string s", style=bold];
m9_19 -> m9_20  [color=green, key=0, style=solid];
m9_19 -> m9_12  [key=2, style=dotted];
m9_17 -> m9_18  [color=green, key=0, style=solid];
m9_17 -> m9_9  [color=green, key=2, style=dotted];
m9_17 -> n12  [color=green, key=2, style=dotted];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_11  [key=2, style=dotted];
m9_18 -> m9_20  [color=green, key=1, label=sw, style=dashed];
m9_20 -> m9_21  [color=green, key=0, style=solid];
m9_20 -> m9_13  [color=green, key=2, style=dotted];
m9_20 -> m9_9  [color=green, key=2, style=dotted];
m9_20 -> n12  [color=green, key=2, style=dotted];
m9_21 -> m9_14  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=2, style=dotted];
m10_2 -> m10_0  [color=blue, key=0, style=bold];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [color=darkseagreen4, key=1, label=bool, style=dashed];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_8  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_7 -> m10_4  [color=blue, key=0, style=bold];
m10_9 -> m10_1  [color=darkseagreen4, key=1, label="CommandLine.ParsingError", style=dashed];
m10_9 -> m10_5  [color=darkseagreen4, key=1, label="CommandLine.ParsingError", style=dashed];
m10_9 -> m10_6  [color=darkseagreen4, key=1, label="CommandLine.ParsingError", style=dashed];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [color=green, key=0, style=solid];
m12_1 -> m12_8  [key=2, style=dotted];
m12_1 -> m12_9  [key=2, style=dotted];
m12_1 -> m12_3  [color=darkseagreen4, key=1, label=licenseAttributes, style=dashed];
m12_2 -> m12_3  [color=green, key=0, style=solid];
m12_2 -> m12_10  [color=green, key=2, style=dotted];
m12_2 -> m12_11  [color=green, key=2, style=dotted];
m12_2 -> n12  [color=green, key=2, style=dotted];
m12_3 -> m12_4  [key=0, style=solid];
m12_3 -> m12_13  [key=2, style=dotted];
m12_4 -> m12_5  [color=green, key=0, style=solid];
m12_4 -> m12_14  [key=2, style=dotted];
m12_4 -> m12_6  [color=green, key=1, label=lines, style=dashed];
m12_5 -> m12_6  [color=green, key=0, style=solid];
m12_5 -> m12_11  [color=green, key=2, style=dotted];
m12_5 -> n12  [color=green, key=2, style=dotted];
m12_6 -> m12_7  [color=green, key=0, style=solid];
m12_6 -> m12_11  [color=green, key=2, style=dotted];
m12_6 -> n12  [color=green, key=2, style=dotted];
m12_7 -> m12_0  [color=blue, key=0, style=bold];
m12_15 -> m12_16  [key=0, style=solid];
m12_16 -> m12_17  [color=green, key=0, style=solid];
m12_16 -> m12_8  [key=2, style=dotted];
m12_16 -> m12_9  [key=2, style=dotted];
m12_16 -> m12_18  [color=green, key=1, label=usageAttributes, style=dashed];
m12_17 -> m12_18  [color=green, key=0, style=solid];
m12_17 -> m12_10  [color=green, key=2, style=dotted];
m12_17 -> m12_11  [color=green, key=2, style=dotted];
m12_17 -> n12  [color=green, key=2, style=dotted];
m12_18 -> m12_19  [color=green, key=0, style=solid];
m12_18 -> m12_13  [color=green, key=2, style=dotted];
m12_18 -> m12_11  [color=green, key=2, style=dotted];
m12_18 -> n12  [color=green, key=2, style=dotted];
m12_19 -> m12_15  [color=blue, key=0, style=bold];
m12_20 -> m12_1  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", style=dashed];
m12_20 -> m12_16  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", style=dashed];
m13_44 -> m13_45  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_49  [key=2, style=dotted];
m13_46 -> m13_47  [key=0, style=solid];
m13_46 -> m13_14  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_47 -> m13_23  [key=2, style=dotted];
m13_48 -> m13_44  [color=blue, key=0, style=bold];
m13_18 -> m13_19  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_19 -> m13_13  [key=2, style=dotted];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_14  [key=2, style=dotted];
m13_21 -> m13_22  [key=0, style=solid];
m13_21 -> m13_23  [key=2, style=dotted];
m13_22 -> m13_18  [color=blue, key=0, style=bold];
m13_2 -> m13_3  [key=0, style=solid];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_5  [key=2, style=dotted];
m13_3 -> m13_6  [key=2, style=dotted];
m13_4 -> m13_2  [color=blue, key=0, style=bold];
m13_31 -> m13_32  [key=0, style=solid];
m13_32 -> m13_33  [key=0, style=solid];
m13_32 -> m13_38  [key=2, style=dotted];
m13_32 -> m13_35  [color=green, key=1, label=options, style=dashed];
m13_32 -> m13_36  [color=green, key=1, label=options, style=dashed];
m13_33 -> m13_34  [key=0, style=solid];
m13_33 -> m13_14  [key=2, style=dotted];
m13_35 -> m13_36  [color=green, key=0, style=solid];
m13_35 -> m13_16  [color=green, key=2, style=dotted];
m13_35 -> n12  [color=green, key=2, style=dotted];
m13_36 -> m13_37  [color=green, key=0, style=solid];
m13_36 -> m13_16  [color=green, key=2, style=dotted];
m13_36 -> n12  [color=green, key=2, style=dotted];
m13_34 -> m13_35  [color=green, key=0, style=solid];
m13_34 -> m13_15  [key=2, style=dotted];
m13_37 -> m13_31  [color=blue, key=0, style=bold];
m13_24 -> m13_25  [key=0, style=solid];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_13  [key=2, style=dotted];
m13_25 -> m13_28  [color=green, key=1, label=options, style=dashed];
m13_25 -> m13_29  [color=green, key=1, label=options, style=dashed];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_14  [key=2, style=dotted];
m13_28 -> m13_29  [color=green, key=0, style=solid];
m13_28 -> m13_16  [color=green, key=2, style=dotted];
m13_28 -> n12  [color=green, key=2, style=dotted];
m13_29 -> m13_30  [color=green, key=0, style=solid];
m13_29 -> m13_16  [color=green, key=2, style=dotted];
m13_29 -> n12  [color=green, key=2, style=dotted];
m13_27 -> m13_28  [color=green, key=0, style=solid];
m13_27 -> m13_15  [key=2, style=dotted];
m13_30 -> m13_24  [color=blue, key=0, style=bold];
m13_50 -> m13_51  [key=0, style=solid];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_49  [key=2, style=dotted];
m13_51 -> m13_54  [color=green, key=1, label=options, style=dashed];
m13_51 -> m13_55  [color=green, key=1, label=options, style=dashed];
m13_51 -> m13_56  [color=green, key=1, label=options, style=dashed];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_14  [key=2, style=dotted];
m13_54 -> m13_55  [color=green, key=0, style=solid];
m13_54 -> m13_16  [color=green, key=2, style=dotted];
m13_54 -> n12  [color=green, key=2, style=dotted];
m13_55 -> m13_56  [color=green, key=0, style=solid];
m13_55 -> m13_16  [color=green, key=2, style=dotted];
m13_55 -> n12  [color=green, key=2, style=dotted];
m13_56 -> m13_57  [color=green, key=0, style=solid];
m13_56 -> m13_16  [color=green, key=2, style=dotted];
m13_56 -> n12  [color=green, key=2, style=dotted];
m13_53 -> m13_54  [color=green, key=0, style=solid];
m13_53 -> m13_15  [key=2, style=dotted];
m13_57 -> m13_50  [color=blue, key=0, style=bold];
m13_39 -> m13_40  [key=0, style=solid];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_38  [key=2, style=dotted];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_14  [key=2, style=dotted];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_23  [key=2, style=dotted];
m13_43 -> m13_39  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_0  [color=blue, key=0, style=bold];
m13_7 -> m13_8  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_8 -> m13_13  [key=2, style=dotted];
m13_8 -> m13_11  [color=green, key=1, label=options, style=dashed];
m13_9 -> m13_10  [key=0, style=solid];
m13_9 -> m13_14  [key=2, style=dotted];
m13_11 -> m13_12  [color=green, key=0, style=solid];
m13_11 -> m13_16  [color=green, key=2, style=dotted];
m13_11 -> n12  [color=green, key=2, style=dotted];
m13_10 -> m13_11  [color=green, key=0, style=solid];
m13_10 -> m13_15  [key=2, style=dotted];
m13_12 -> m13_7  [color=blue, key=0, style=bold];
m13_58 -> m13_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_9  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_10  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_26  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_47  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m13_58 -> m13_53  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m14_24 -> m14_25  [key=0, style=solid];
m14_25 -> m14_26  [key=0, style=solid];
m14_25 -> m14_12  [key=2, style=dotted];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_13  [key=2, style=dotted];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_23  [key=2, style=dotted];
m14_28 -> m14_24  [color=blue, key=0, style=bold];
m14_29 -> m14_30  [key=0, style=solid];
m14_30 -> m14_31  [key=0, style=solid];
m14_30 -> m14_12  [key=2, style=dotted];
m14_30 -> m14_33  [color=green, key=1, label=options, style=dashed];
m14_31 -> m14_32  [key=0, style=solid];
m14_31 -> m14_13  [key=2, style=dotted];
m14_33 -> m14_34  [color=green, key=0, style=solid];
m14_33 -> m14_15  [color=green, key=2, style=dotted];
m14_33 -> n12  [color=green, key=2, style=dotted];
m14_32 -> m14_33  [color=green, key=0, style=solid];
m14_32 -> m14_14  [key=2, style=dotted];
m14_34 -> m14_35  [key=0, style=solid];
m14_34 -> m14_12  [key=2, style=dotted];
m14_34 -> m14_37  [color=green, key=1, label=options, style=dashed];
m14_35 -> m14_36  [key=0, style=solid];
m14_35 -> m14_13  [key=2, style=dotted];
m14_37 -> m14_38  [color=green, key=0, style=solid];
m14_37 -> m14_15  [color=green, key=2, style=dotted];
m14_37 -> m14_17  [color=green, key=2, style=dotted];
m14_36 -> m14_37  [color=green, key=0, style=solid];
m14_36 -> m14_14  [key=2, style=dotted];
m14_38 -> m14_29  [color=blue, key=0, style=bold];
m14_39 -> m14_40  [key=0, style=solid];
m14_40 -> m14_41  [key=0, style=solid];
m14_40 -> m14_12  [key=2, style=dotted];
m14_41 -> m14_42  [key=0, style=solid];
m14_41 -> m14_13  [key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_23  [key=2, style=dotted];
m14_43 -> m14_39  [color=blue, key=0, style=bold];
m14_49 -> m14_50  [key=0, style=solid];
m14_50 -> m14_51  [key=0, style=solid];
m14_50 -> m14_12  [key=2, style=dotted];
m14_50 -> m14_53  [color=green, key=1, label=options, style=dashed];
m14_51 -> m14_52  [key=0, style=solid];
m14_51 -> m14_13  [key=2, style=dotted];
m14_53 -> m14_54  [color=green, key=0, style=solid];
m14_53 -> m14_15  [color=green, key=2, style=dotted];
m14_53 -> n12  [color=green, key=2, style=dotted];
m14_52 -> m14_53  [color=green, key=0, style=solid];
m14_52 -> m14_14  [key=2, style=dotted];
m14_54 -> m14_55  [key=0, style=solid];
m14_54 -> m14_12  [key=2, style=dotted];
m14_54 -> m14_57  [color=green, key=1, label=options, style=dashed];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_13  [key=2, style=dotted];
m14_57 -> m14_58  [color=green, key=0, style=solid];
m14_57 -> m14_15  [color=green, key=2, style=dotted];
m14_57 -> m14_17  [color=green, key=2, style=dotted];
m14_56 -> m14_57  [color=green, key=0, style=solid];
m14_56 -> m14_14  [key=2, style=dotted];
m14_58 -> m14_49  [color=blue, key=0, style=bold];
m14_64 -> m14_65  [key=0, style=solid];
m14_65 -> m14_66  [key=0, style=solid];
m14_65 -> m14_12  [key=2, style=dotted];
m14_66 -> m14_67  [key=0, style=solid];
m14_66 -> m14_13  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_23  [key=2, style=dotted];
m14_68 -> m14_64  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_12  [key=2, style=dotted];
m14_3 -> m14_6  [color=green, key=1, label=options, style=dashed];
m14_4 -> m14_5  [key=0, style=solid];
m14_4 -> m14_13  [key=2, style=dotted];
m14_6 -> m14_7  [color=green, key=0, style=solid];
m14_6 -> m14_15  [color=green, key=2, style=dotted];
m14_6 -> n12  [color=green, key=2, style=dotted];
m14_5 -> m14_6  [color=green, key=0, style=solid];
m14_5 -> m14_14  [key=2, style=dotted];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_12  [key=2, style=dotted];
m14_7 -> m14_10  [color=green, key=1, label=options, style=dashed];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_13  [key=2, style=dotted];
m14_10 -> m14_11  [color=green, key=0, style=solid];
m14_10 -> m14_15  [color=green, key=2, style=dotted];
m14_10 -> m14_17  [color=green, key=2, style=dotted];
m14_9 -> m14_10  [color=green, key=0, style=solid];
m14_9 -> m14_14  [key=2, style=dotted];
m14_11 -> m14_2  [color=blue, key=0, style=bold];
m14_18 -> m14_19  [key=0, style=solid];
m14_19 -> m14_20  [key=0, style=solid];
m14_19 -> m14_12  [key=2, style=dotted];
m14_20 -> m14_21  [key=0, style=solid];
m14_20 -> m14_13  [key=2, style=dotted];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=2, style=dotted];
m14_22 -> m14_18  [color=blue, key=0, style=bold];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_44 -> m14_45  [key=0, style=solid];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_12  [key=2, style=dotted];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_13  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_23  [key=2, style=dotted];
m14_48 -> m14_44  [color=blue, key=0, style=bold];
m14_69 -> m14_70  [key=0, style=solid];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_12  [key=2, style=dotted];
m14_70 -> m14_73  [color=green, key=1, label=options, style=dashed];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_13  [key=2, style=dotted];
m14_73 -> m14_74  [color=green, key=0, style=solid];
m14_73 -> m14_15  [color=green, key=2, style=dotted];
m14_73 -> n12  [color=green, key=2, style=dotted];
m14_72 -> m14_73  [color=green, key=0, style=solid];
m14_72 -> m14_14  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_12  [key=2, style=dotted];
m14_74 -> m14_77  [color=green, key=1, label=options, style=dashed];
m14_74 -> m14_78  [color=green, key=1, label=options, style=dashed];
m14_74 -> m14_79  [color=green, key=1, label=options, style=dashed];
m14_74 -> m14_80  [color=green, key=1, label=options, style=dashed];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_13  [key=2, style=dotted];
m14_77 -> m14_78  [color=green, key=0, style=solid];
m14_77 -> m14_15  [color=green, key=2, style=dotted];
m14_77 -> n12  [color=green, key=2, style=dotted];
m14_78 -> m14_79  [color=green, key=0, style=solid];
m14_78 -> m14_15  [color=green, key=2, style=dotted];
m14_78 -> n12  [color=green, key=2, style=dotted];
m14_79 -> m14_80  [color=green, key=0, style=solid];
m14_79 -> m14_15  [color=green, key=2, style=dotted];
m14_79 -> n12  [color=green, key=2, style=dotted];
m14_80 -> m14_81  [color=green, key=0, style=solid];
m14_80 -> m14_15  [color=green, key=2, style=dotted];
m14_80 -> n12  [color=green, key=2, style=dotted];
m14_76 -> m14_77  [color=green, key=0, style=solid];
m14_76 -> m14_14  [key=2, style=dotted];
m14_81 -> m14_69  [color=blue, key=0, style=bold];
m14_59 -> m14_60  [key=0, style=solid];
m14_60 -> m14_61  [key=0, style=solid];
m14_60 -> m14_12  [key=2, style=dotted];
m14_61 -> m14_62  [key=0, style=solid];
m14_61 -> m14_13  [key=2, style=dotted];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_23  [key=2, style=dotted];
m14_63 -> m14_59  [color=blue, key=0, style=bold];
m14_82 -> m14_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_9  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_26  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_31  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_35  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_36  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_47  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_51  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_61  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_62  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_66  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_67  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_71  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_72  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_75  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m14_82 -> m14_76  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m15_12 -> m15_13  [key=0, style=solid];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_8  [key=2, style=dotted];
m15_13 -> m15_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_9  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_11  [key=2, style=dotted];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_10  [key=2, style=dotted];
m15_17 -> m15_12  [color=blue, key=0, style=bold];
m15_56 -> m15_57  [key=0, style=solid];
m15_57 -> m15_58  [key=0, style=solid];
m15_57 -> m15_66  [key=2, style=dotted];
m15_57 -> m15_60  [color=green, key=1, label=options, style=dashed];
m15_57 -> m15_61  [color=green, key=1, label=options, style=dashed];
m15_57 -> m15_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_57 -> m15_63  [color=green, key=1, label=options, style=dashed];
m15_57 -> m15_64  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_58 -> m15_59  [key=0, style=solid];
m15_58 -> m15_9  [key=2, style=dotted];
m15_60 -> m15_61  [color=green, key=0, style=solid];
m15_60 -> n11  [color=green, key=2, style=dotted];
m15_60 -> m15_38  [color=green, key=2, style=dotted];
m15_61 -> m15_62  [color=green, key=0, style=solid];
m15_61 -> n11  [color=green, key=2, style=dotted];
m15_61 -> m15_38  [color=green, key=2, style=dotted];
m15_62 -> m15_63  [color=green, key=0, style=solid];
m15_62 -> m15_11  [key=2, style=dotted];
m15_63 -> m15_64  [color=green, key=0, style=solid];
m15_63 -> n11  [color=green, key=2, style=dotted];
m15_63 -> m15_55  [color=green, key=2, style=dotted];
m15_64 -> m15_65  [key=0, style=solid];
m15_64 -> m15_67  [key=2, style=dotted];
m15_59 -> m15_60  [color=green, key=0, style=solid];
m15_59 -> m15_10  [key=2, style=dotted];
m15_65 -> m15_56  [color=blue, key=0, style=bold];
m15_83 -> m15_84  [key=0, style=solid];
m15_84 -> m15_85  [key=0, style=solid];
m15_84 -> m15_8  [key=2, style=dotted];
m15_85 -> m15_86  [key=0, style=solid];
m15_85 -> m15_9  [key=2, style=dotted];
m15_86 -> m15_87  [key=0, style=solid];
m15_86 -> m15_76  [key=2, style=dotted];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_8  [key=2, style=dotted];
m15_88 -> m15_89  [key=0, style=solid];
m15_88 -> m15_9  [key=2, style=dotted];
m15_89 -> m15_90  [key=0, style=solid];
m15_89 -> m15_76  [key=2, style=dotted];
m15_90 -> m15_91  [key=0, style=solid];
m15_90 -> m15_8  [key=2, style=dotted];
m15_91 -> m15_92  [key=0, style=solid];
m15_91 -> m15_9  [key=2, style=dotted];
m15_92 -> m15_93  [key=0, style=solid];
m15_92 -> m15_76  [key=2, style=dotted];
m15_93 -> m15_94  [key=0, style=solid];
m15_93 -> m15_8  [key=2, style=dotted];
m15_94 -> m15_95  [key=0, style=solid];
m15_94 -> m15_9  [key=2, style=dotted];
m15_95 -> m15_96  [key=0, style=solid];
m15_95 -> m15_76  [key=2, style=dotted];
m15_96 -> m15_83  [color=blue, key=0, style=bold];
m15_18 -> m15_19  [key=0, style=solid];
m15_19 -> m15_20  [key=0, style=solid];
m15_19 -> m15_8  [key=2, style=dotted];
m15_19 -> m15_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_9  [key=2, style=dotted];
m15_22 -> m15_23  [key=0, style=solid];
m15_22 -> m15_11  [key=2, style=dotted];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_10  [key=2, style=dotted];
m15_23 -> m15_18  [color=blue, key=0, style=bold];
m15_97 -> m15_98  [key=0, style=solid];
m15_98 -> m15_99  [key=0, style=solid];
m15_98 -> m15_8  [key=2, style=dotted];
m15_99 -> m15_100  [key=0, style=solid];
m15_99 -> m15_9  [key=2, style=dotted];
m15_100 -> m15_101  [key=0, style=solid];
m15_100 -> m15_76  [key=2, style=dotted];
m15_101 -> m15_102  [key=0, style=solid];
m15_101 -> m15_8  [key=2, style=dotted];
m15_102 -> m15_103  [key=0, style=solid];
m15_102 -> m15_9  [key=2, style=dotted];
m15_103 -> m15_104  [key=0, style=solid];
m15_103 -> m15_76  [key=2, style=dotted];
m15_104 -> m15_97  [color=blue, key=0, style=bold];
m15_170 -> m15_171  [key=0, style=solid];
m15_171 -> m15_172  [key=0, style=solid];
m15_171 -> m15_166  [key=2, style=dotted];
m15_171 -> m15_9  [key=2, style=dotted];
m15_172 -> m15_170  [color=blue, key=0, style=bold];
m15_46 -> m15_47  [key=0, style=solid];
m15_47 -> m15_48  [key=0, style=solid];
m15_47 -> m15_8  [key=2, style=dotted];
m15_47 -> m15_50  [color=green, key=1, label=options, style=dashed];
m15_47 -> m15_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_47 -> m15_52  [color=green, key=1, label=options, style=dashed];
m15_47 -> m15_53  [color=green, key=1, label=options, style=dashed];
m15_48 -> m15_49  [key=0, style=solid];
m15_48 -> m15_9  [key=2, style=dotted];
m15_50 -> m15_51  [color=green, key=0, style=solid];
m15_50 -> n11  [color=green, key=2, style=dotted];
m15_50 -> m15_38  [color=green, key=2, style=dotted];
m15_51 -> m15_52  [color=green, key=0, style=solid];
m15_51 -> m15_11  [key=2, style=dotted];
m15_52 -> m15_53  [color=green, key=0, style=solid];
m15_52 -> n11  [color=green, key=2, style=dotted];
m15_52 -> m15_55  [color=green, key=2, style=dotted];
m15_53 -> m15_54  [color=green, key=0, style=solid];
m15_53 -> n11  [color=green, key=2, style=dotted];
m15_53 -> m15_38  [color=green, key=2, style=dotted];
m15_49 -> m15_50  [color=green, key=0, style=solid];
m15_49 -> m15_10  [key=2, style=dotted];
m15_54 -> m15_46  [color=blue, key=0, style=bold];
m15_163 -> m15_164  [key=0, style=solid];
m15_164 -> m15_165  [key=0, style=solid];
m15_164 -> m15_166  [key=2, style=dotted];
m15_164 -> m15_9  [key=2, style=dotted];
m15_165 -> m15_163  [color=blue, key=0, style=bold];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_26  [key=0, style=solid];
m15_25 -> m15_8  [key=2, style=dotted];
m15_25 -> m15_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_26 -> m15_27  [key=0, style=solid];
m15_26 -> m15_9  [key=2, style=dotted];
m15_28 -> m15_29  [key=0, style=solid];
m15_28 -> m15_11  [key=2, style=dotted];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_10  [key=2, style=dotted];
m15_29 -> m15_24  [color=blue, key=0, style=bold];
m15_131 -> m15_132  [key=0, style=solid];
m15_132 -> m15_133  [key=0, style=solid];
m15_132 -> m15_8  [key=2, style=dotted];
m15_132 -> m15_135  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_136  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_137  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_132 -> m15_138  [color=green, key=1, label=options, style=dashed];
m15_133 -> m15_134  [key=0, style=solid];
m15_133 -> m15_9  [key=2, style=dotted];
m15_135 -> m15_136  [key=0, style=solid];
m15_135 -> m15_11  [key=2, style=dotted];
m15_136 -> m15_137  [key=0, style=solid];
m15_136 -> m15_11  [key=2, style=dotted];
m15_137 -> m15_138  [color=green, key=0, style=solid];
m15_137 -> m15_11  [key=2, style=dotted];
m15_138 -> m15_139  [color=green, key=0, style=solid];
m15_138 -> n11  [color=green, key=2, style=dotted];
m15_138 -> m15_38  [color=green, key=2, style=dotted];
m15_134 -> m15_135  [key=0, style=solid];
m15_134 -> m15_10  [key=2, style=dotted];
m15_139 -> m15_140  [key=0, style=solid];
m15_139 -> m15_8  [key=2, style=dotted];
m15_139 -> m15_142  [color=green, key=1, label=options, style=dashed];
m15_139 -> m15_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_139 -> m15_144  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_139 -> m15_145  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_140 -> m15_141  [key=0, style=solid];
m15_140 -> m15_9  [key=2, style=dotted];
m15_142 -> m15_143  [color=green, key=0, style=solid];
m15_142 -> n11  [color=green, key=2, style=dotted];
m15_142 -> m15_38  [color=green, key=2, style=dotted];
m15_143 -> m15_144  [key=0, style=solid];
m15_143 -> m15_11  [key=2, style=dotted];
m15_144 -> m15_145  [key=0, style=solid];
m15_144 -> m15_11  [key=2, style=dotted];
m15_145 -> m15_146  [key=0, style=solid];
m15_145 -> m15_11  [key=2, style=dotted];
m15_141 -> m15_142  [color=green, key=0, style=solid];
m15_141 -> m15_10  [key=2, style=dotted];
m15_146 -> m15_147  [key=0, style=solid];
m15_146 -> m15_8  [key=2, style=dotted];
m15_146 -> m15_149  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_146 -> m15_150  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_146 -> m15_151  [color=green, key=1, label=options, style=dashed];
m15_146 -> m15_152  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_147 -> m15_148  [key=0, style=solid];
m15_147 -> m15_9  [key=2, style=dotted];
m15_149 -> m15_150  [key=0, style=solid];
m15_149 -> m15_11  [key=2, style=dotted];
m15_150 -> m15_151  [color=green, key=0, style=solid];
m15_150 -> m15_11  [key=2, style=dotted];
m15_151 -> m15_152  [color=green, key=0, style=solid];
m15_151 -> n11  [color=green, key=2, style=dotted];
m15_151 -> m15_38  [color=green, key=2, style=dotted];
m15_152 -> m15_153  [key=0, style=solid];
m15_152 -> m15_11  [key=2, style=dotted];
m15_148 -> m15_149  [key=0, style=solid];
m15_148 -> m15_10  [key=2, style=dotted];
m15_153 -> m15_154  [key=0, style=solid];
m15_153 -> m15_8  [key=2, style=dotted];
m15_153 -> m15_156  [color=green, key=1, label=options, style=dashed];
m15_153 -> m15_157  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_158  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_159  [color=green, key=1, label=options, style=dashed];
m15_153 -> m15_160  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_153 -> m15_161  [color=green, key=1, label=options, style=dashed];
m15_154 -> m15_155  [key=0, style=solid];
m15_154 -> m15_9  [key=2, style=dotted];
m15_156 -> m15_157  [color=green, key=0, style=solid];
m15_156 -> n11  [color=green, key=2, style=dotted];
m15_156 -> m15_55  [color=green, key=2, style=dotted];
m15_157 -> m15_158  [key=0, style=solid];
m15_157 -> m15_11  [key=2, style=dotted];
m15_158 -> m15_159  [color=green, key=0, style=solid];
m15_158 -> m15_11  [key=2, style=dotted];
m15_159 -> m15_160  [color=green, key=0, style=solid];
m15_159 -> n11  [color=green, key=2, style=dotted];
m15_159 -> m15_38  [color=green, key=2, style=dotted];
m15_160 -> m15_161  [color=green, key=0, style=solid];
m15_160 -> m15_11  [key=2, style=dotted];
m15_161 -> m15_162  [color=green, key=0, style=solid];
m15_161 -> n11  [color=green, key=2, style=dotted];
m15_161 -> m15_38  [color=green, key=2, style=dotted];
m15_155 -> m15_156  [color=green, key=0, style=solid];
m15_155 -> m15_10  [key=2, style=dotted];
m15_162 -> m15_131  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_8  [key=2, style=dotted];
m15_3 -> m15_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_9  [key=2, style=dotted];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_11  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_10  [key=2, style=dotted];
m15_7 -> m15_2  [color=blue, key=0, style=bold];
m15_196 -> m15_197  [key=0, style=solid];
m15_197 -> m15_198  [key=0, style=solid];
m15_197 -> m15_195  [key=2, style=dotted];
m15_197 -> m15_200  [color=green, key=1, label=options, style=dashed];
m15_197 -> m15_201  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_197 -> m15_202  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_197 -> m15_203  [color=green, key=1, label=options, style=dashed];
m15_198 -> m15_199  [key=0, style=solid];
m15_198 -> m15_9  [key=2, style=dotted];
m15_200 -> m15_201  [color=green, key=0, style=solid];
m15_200 -> n11  [color=green, key=2, style=dotted];
m15_200 -> m15_38  [color=green, key=2, style=dotted];
m15_201 -> m15_202  [key=0, style=solid];
m15_201 -> m15_11  [key=2, style=dotted];
m15_202 -> m15_203  [color=green, key=0, style=solid];
m15_202 -> m15_11  [key=2, style=dotted];
m15_203 -> m15_204  [color=green, key=0, style=solid];
m15_203 -> n11  [color=green, key=2, style=dotted];
m15_203 -> m15_55  [color=green, key=2, style=dotted];
m15_199 -> m15_200  [color=green, key=0, style=solid];
m15_199 -> m15_10  [key=2, style=dotted];
m15_204 -> m15_196  [color=blue, key=0, style=bold];
m15_39 -> m15_40  [key=0, style=solid];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_8  [key=2, style=dotted];
m15_40 -> m15_43  [color=green, key=1, label=options, style=dashed];
m15_40 -> m15_44  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_41 -> m15_42  [key=0, style=solid];
m15_41 -> m15_9  [key=2, style=dotted];
m15_43 -> m15_44  [color=green, key=0, style=solid];
m15_43 -> n11  [color=green, key=2, style=dotted];
m15_43 -> m15_38  [color=green, key=2, style=dotted];
m15_44 -> m15_45  [key=0, style=solid];
m15_44 -> m15_11  [key=2, style=dotted];
m15_42 -> m15_43  [color=green, key=0, style=solid];
m15_42 -> m15_10  [key=2, style=dotted];
m15_45 -> m15_39  [color=blue, key=0, style=bold];
m15_186 -> m15_187  [key=0, style=solid];
m15_187 -> m15_188  [key=0, style=solid];
m15_187 -> m15_195  [key=2, style=dotted];
m15_187 -> m15_190  [color=green, key=1, label=options, style=dashed];
m15_187 -> m15_191  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_187 -> m15_192  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_187 -> m15_193  [color=green, key=1, label=options, style=dashed];
m15_188 -> m15_189  [key=0, style=solid];
m15_188 -> m15_9  [key=2, style=dotted];
m15_190 -> m15_191  [color=green, key=0, style=solid];
m15_190 -> n11  [color=green, key=2, style=dotted];
m15_190 -> m15_38  [color=green, key=2, style=dotted];
m15_191 -> m15_192  [key=0, style=solid];
m15_191 -> m15_11  [key=2, style=dotted];
m15_192 -> m15_193  [color=green, key=0, style=solid];
m15_192 -> m15_11  [key=2, style=dotted];
m15_193 -> m15_194  [color=green, key=0, style=solid];
m15_193 -> n11  [color=green, key=2, style=dotted];
m15_193 -> m15_55  [color=green, key=2, style=dotted];
m15_189 -> m15_190  [color=green, key=0, style=solid];
m15_189 -> m15_10  [key=2, style=dotted];
m15_194 -> m15_186  [color=blue, key=0, style=bold];
m15_111 -> m15_112  [key=0, style=solid];
m15_112 -> m15_113  [key=0, style=solid];
m15_112 -> m15_8  [key=2, style=dotted];
m15_112 -> m15_115  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_112 -> m15_116  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_112 -> m15_117  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_113 -> m15_114  [key=0, style=solid];
m15_113 -> m15_9  [key=2, style=dotted];
m15_115 -> m15_116  [key=0, style=solid];
m15_115 -> m15_11  [key=2, style=dotted];
m15_116 -> m15_117  [key=0, style=solid];
m15_116 -> m15_11  [key=2, style=dotted];
m15_117 -> m15_118  [key=0, style=solid];
m15_117 -> m15_11  [key=2, style=dotted];
m15_114 -> m15_115  [key=0, style=solid];
m15_114 -> m15_10  [key=2, style=dotted];
m15_118 -> m15_119  [key=0, style=solid];
m15_118 -> m15_8  [key=2, style=dotted];
m15_118 -> m15_121  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_118 -> m15_122  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_118 -> m15_123  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_119 -> m15_120  [key=0, style=solid];
m15_119 -> m15_9  [key=2, style=dotted];
m15_121 -> m15_122  [key=0, style=solid];
m15_121 -> m15_11  [key=2, style=dotted];
m15_122 -> m15_123  [key=0, style=solid];
m15_122 -> m15_11  [key=2, style=dotted];
m15_123 -> m15_124  [key=0, style=solid];
m15_123 -> m15_11  [key=2, style=dotted];
m15_120 -> m15_121  [key=0, style=solid];
m15_120 -> m15_10  [key=2, style=dotted];
m15_124 -> m15_125  [key=0, style=solid];
m15_124 -> m15_8  [key=2, style=dotted];
m15_124 -> m15_127  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_124 -> m15_128  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_124 -> m15_129  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_125 -> m15_126  [key=0, style=solid];
m15_125 -> m15_9  [key=2, style=dotted];
m15_127 -> m15_128  [key=0, style=solid];
m15_127 -> m15_11  [key=2, style=dotted];
m15_128 -> m15_129  [key=0, style=solid];
m15_128 -> m15_11  [key=2, style=dotted];
m15_129 -> m15_130  [key=0, style=solid];
m15_129 -> m15_11  [key=2, style=dotted];
m15_126 -> m15_127  [key=0, style=solid];
m15_126 -> m15_10  [key=2, style=dotted];
m15_130 -> m15_111  [color=blue, key=0, style=bold];
m15_77 -> m15_78  [key=0, style=solid];
m15_78 -> m15_79  [key=0, style=solid];
m15_78 -> m15_8  [key=2, style=dotted];
m15_78 -> m15_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_79 -> m15_80  [key=0, style=solid];
m15_79 -> m15_9  [key=2, style=dotted];
m15_81 -> m15_82  [key=0, style=solid];
m15_81 -> m15_11  [key=2, style=dotted];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_10  [key=2, style=dotted];
m15_82 -> m15_77  [color=blue, key=0, style=bold];
m15_105 -> m15_106  [key=0, style=solid];
m15_106 -> m15_107  [key=0, style=solid];
m15_106 -> m15_8  [key=2, style=dotted];
m15_106 -> m15_109  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_107 -> m15_108  [key=0, style=solid];
m15_107 -> m15_9  [key=2, style=dotted];
m15_109 -> m15_110  [key=0, style=solid];
m15_109 -> m15_11  [key=2, style=dotted];
m15_108 -> m15_109  [key=0, style=solid];
m15_108 -> m15_10  [key=2, style=dotted];
m15_110 -> m15_105  [color=blue, key=0, style=bold];
m15_176 -> m15_177  [key=0, style=solid];
m15_177 -> m15_178  [key=0, style=solid];
m15_177 -> m15_183  [color=darkseagreen4, key=1, label=actualCulture, style=dashed];
m15_178 -> m15_179  [key=0, style=solid];
m15_178 -> m15_185  [key=2, style=dotted];
m15_183 -> m15_184  [key=0, style=solid];
m15_179 -> m15_180  [key=0, style=solid];
m15_179 -> m15_8  [key=2, style=dotted];
m15_179 -> m15_182  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_180 -> m15_181  [key=0, style=solid];
m15_180 -> m15_9  [key=2, style=dotted];
m15_182 -> m15_183  [key=0, style=solid];
m15_182 -> m15_11  [key=2, style=dotted];
m15_181 -> m15_182  [key=0, style=solid];
m15_181 -> m15_10  [key=2, style=dotted];
m15_184 -> m15_176  [color=blue, key=0, style=bold];
m15_68 -> m15_69  [key=0, style=solid];
m15_69 -> m15_70  [key=0, style=solid];
m15_69 -> m15_8  [key=2, style=dotted];
m15_70 -> m15_71  [key=0, style=solid];
m15_70 -> m15_9  [key=2, style=dotted];
m15_71 -> m15_72  [key=0, style=solid];
m15_71 -> m15_76  [key=2, style=dotted];
m15_72 -> m15_73  [key=0, style=solid];
m15_72 -> m15_8  [key=2, style=dotted];
m15_73 -> m15_74  [key=0, style=solid];
m15_73 -> m15_9  [key=2, style=dotted];
m15_74 -> m15_75  [key=0, style=solid];
m15_74 -> m15_76  [key=2, style=dotted];
m15_75 -> m15_68  [color=blue, key=0, style=bold];
m15_167 -> m15_168  [key=0, style=solid];
m15_168 -> m15_169  [key=0, style=solid];
m15_168 -> m15_166  [key=2, style=dotted];
m15_168 -> m15_9  [key=2, style=dotted];
m15_169 -> m15_167  [color=blue, key=0, style=bold];
m15_173 -> m15_174  [key=0, style=solid];
m15_174 -> m15_175  [key=0, style=solid];
m15_174 -> m15_166  [key=2, style=dotted];
m15_174 -> m15_9  [key=2, style=dotted];
m15_175 -> m15_173  [color=blue, key=0, style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_0  [color=blue, key=0, style=bold];
m15_30 -> m15_31  [key=0, style=solid];
m15_31 -> m15_32  [key=0, style=solid];
m15_31 -> m15_8  [key=2, style=dotted];
m15_31 -> m15_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_31 -> m15_35  [color=green, key=1, label=options, style=dashed];
m15_32 -> m15_33  [key=0, style=solid];
m15_32 -> m15_9  [key=2, style=dotted];
m15_34 -> m15_35  [color=green, key=0, style=solid];
m15_34 -> m15_11  [key=2, style=dotted];
m15_35 -> m15_36  [color=green, key=0, style=solid];
m15_35 -> n11  [color=green, key=2, style=dotted];
m15_35 -> m15_38  [color=green, key=2, style=dotted];
m15_33 -> m15_34  [key=0, style=solid];
m15_33 -> m15_10  [key=2, style=dotted];
m15_36 -> m15_30  [color=blue, key=0, style=bold];
m15_205 -> m15_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_14  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_15  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_16  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_26  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_28  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_44  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_48  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_49  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_51  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_58  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_59  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_62  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_64  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_70  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_71  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_73  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_74  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_79  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_80  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_81  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_85  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_88  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_89  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_91  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_92  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_94  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_95  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_99  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_100  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_102  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_103  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_107  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_108  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_109  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_113  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_114  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_115  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_117  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_119  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_120  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_121  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_122  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_123  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_125  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_126  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_127  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_128  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_129  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_133  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_134  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_136  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_137  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_140  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_143  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_144  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_145  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_147  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_148  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_149  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_150  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_152  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_154  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_155  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_157  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_158  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_160  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_164  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_168  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_171  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_174  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_180  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_181  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_182  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_188  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_189  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_192  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_198  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_199  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_201  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m15_205 -> m15_202  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m16_50 -> m16_51  [key=0, style=solid];
m16_50 -> m16_57  [key=2, style=dotted];
m16_50 -> m16_53  [color=darkseagreen4, key=1, label=fieldRef, style=dashed];
m16_51 -> m16_52  [key=0, style=solid];
m16_51 -> m16_3  [key=2, style=dotted];
m16_51 -> m16_19  [key=2, style=dotted];
m16_51 -> m16_34  [key=2, style=dotted];
m16_51 -> m16_35  [key=2, style=dotted];
m16_51 -> m16_36  [key=2, style=dotted];
m16_51 -> m16_37  [key=2, style=dotted];
m16_51 -> m16_20  [key=2, style=dotted];
m16_51 -> m16_58  [key=2, style=dotted];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_4  [key=2, style=dotted];
m16_52 -> m16_21  [key=2, style=dotted];
m16_52 -> m16_38  [key=2, style=dotted];
m16_52 -> m16_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_52 -> m16_55  [color=red, key=1, label=lines, style=dashed];
m16_52 -> m16_56  [color=red, key=1, label=lines, style=dashed];
m16_52 -> m16_57  [color=red, key=1, label=lines, style=dashed];
m16_52 -> m16_58  [color=red, key=1, label=lines, style=dashed];
m16_53 -> m16_54  [key=0, style=solid];
m16_53 -> m16_5  [key=2, style=dotted];
m16_53 -> m16_52  [key=0, style=solid];
m16_53 -> m16_59  [key=2, style=dotted];
m16_54 -> m16_55  [color=red, key=0, style=solid];
m16_54 -> m16_5  [key=2, style=dotted];
m16_55 -> m16_56  [color=red, key=0, style=solid];
m16_55 -> m16_5  [color=red, key=2, style=dotted];
m16_55 -> m16_24  [color=blue, key=0, style=bold];
m16_56 -> m16_57  [color=red, key=0, style=solid];
m16_56 -> m16_5  [color=red, key=2, style=dotted];
m16_57 -> m16_58  [color=red, key=0, style=solid];
m16_57 -> m16_5  [color=red, key=2, style=dotted];
m16_58 -> m16_59  [color=red, key=0, style=solid];
m16_58 -> m16_5  [color=red, key=2, style=dotted];
m16_59 -> m16_50  [color=blue, key=0, style=bold];
m16_66 -> m16_67  [color=red, key=0, style=solid];
m16_22 -> m16_23  [color=green, key=0, style=solid];
m16_22 -> m16_27  [color=green, key=2, style=dotted];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_3  [key=2, style=dotted];
m16_23 -> m16_19  [key=2, style=dotted];
m16_23 -> m16_34  [key=2, style=dotted];
m16_23 -> m16_35  [key=2, style=dotted];
m16_23 -> m16_36  [key=2, style=dotted];
m16_23 -> m16_37  [key=2, style=dotted];
m16_23 -> m16_20  [key=2, style=dotted];
m16_23 -> m16_17  [color=blue, key=0, style=bold];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_4  [key=2, style=dotted];
m16_24 -> m16_21  [key=2, style=dotted];
m16_24 -> m16_38  [key=2, style=dotted];
m16_24 -> m16_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_24 -> m16_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_24 -> m16_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_24 -> m16_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_24 -> m16_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_24 -> m16_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_24 -> m16_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_24 -> m16_17  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m16_24 -> m16_49  [key=0, style=solid];
m16_24 -> m16_50  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_24 -> m16_51  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_5  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_5  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_5  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_5  [key=2, style=dotted];
m16_28 -> m16_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_28 -> m16_30  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m16_28 -> m16_33  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m16_28 -> m16_36  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_28 -> m16_38  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_29 -> m16_30  [key=0, style=solid];
m16_29 -> m16_5  [key=2, style=dotted];
m16_29 -> m16_40  [key=2, style=dotted];
m16_29 -> m16_33  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m16_30 -> m16_31  [key=0, style=solid];
m16_30 -> m16_5  [key=2, style=dotted];
m16_30 -> m16_34  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_30 -> m16_41  [key=2, style=dotted];
m16_30 -> m16_32  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_30 -> m16_33  [color=darkseagreen4, key=1, label=array, style=dashed];
m16_31 -> m16_32  [key=0, style=solid];
m16_31 -> m16_5  [key=2, style=dotted];
m16_31 -> m16_33  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_31 -> m16_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_31 -> m16_31  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_5  [key=2, style=dotted];
m16_32 -> m16_38  [key=0, style=solid];
m16_33 -> m16_22  [color=blue, key=0, style=bold];
m16_33 -> m16_34  [key=0, style=solid];
m16_33 -> m16_42  [key=2, style=dotted];
m16_33 -> m16_43  [key=2, style=dotted];
m16_70 -> m16_71  [color=red, key=0, style=solid];
m16_70 -> m16_4  [color=red, key=2, style=dotted];
m16_70 -> m16_77  [color=red, key=2, style=dotted];
m16_70 -> m16_72  [color=red, key=1, label=lines, style=dashed];
m16_70 -> m16_73  [color=red, key=1, label=lines, style=dashed];
m16_70 -> m16_74  [color=red, key=1, label=lines, style=dashed];
m16_70 -> m16_75  [color=red, key=1, label=lines, style=dashed];
m16_71 -> m16_72  [color=red, key=0, style=solid];
m16_71 -> m16_74  [key=0, style=solid];
m16_71 -> m16_75  [key=2, style=dotted];
m16_71 -> m16_44  [key=2, style=dotted];
m16_71 -> m16_5  [color=red, key=2, style=dotted];
m16_72 -> m16_73  [key=0, style=solid];
m16_72 -> m16_5  [key=2, style=dotted];
m16_73 -> m16_74  [key=0, style=solid];
m16_73 -> m16_66  [key=2, style=dotted];
m16_73 -> m16_5  [key=2, style=dotted];
m16_74 -> m16_70  [color=blue, key=0, style=bold];
m16_74 -> m16_75  [key=0, style=solid];
m16_74 -> m16_5  [key=2, style=dotted];
m16_67 -> m16_68  [color=red, key=0, style=solid];
m16_67 -> m16_65  [color=red, key=2, style=dotted];
m16_67 -> m16_17  [color=red, key=2, style=dotted];
m16_67 -> m16_69  [color=red, key=1, label=sut, style=dashed];
m16_67 -> m16_70  [color=red, key=1, label=sut, style=dashed];
m16_68 -> m16_69  [color=red, key=0, style=solid];
m16_68 -> m16_57  [key=2, style=dotted];
m16_69 -> m16_70  [color=red, key=0, style=solid];
m16_69 -> m16_34  [color=red, key=2, style=dotted];
m16_69 -> m16_35  [color=red, key=2, style=dotted];
m16_69 -> m16_36  [color=red, key=2, style=dotted];
m16_69 -> m16_37  [color=red, key=2, style=dotted];
m16_69 -> m16_67  [color=blue, key=0, style=bold];
m16_75 -> m16_76  [key=0, style=solid];
m16_75 -> m16_5  [key=2, style=dotted];
m16_76 -> m16_66  [color=blue, key=0, style=bold];
m16_76 -> m16_13  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_21  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_22  [color=green, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_5  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_6  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_7  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_8  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_10  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_12  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_18  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_19  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_20  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_29  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_34  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_46  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_49  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_50  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_51  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_61  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_62  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_68  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_76 -> m16_71  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m16_78 -> m16_79  [key=0, style=solid];
m16_79 -> m16_80  [key=0, style=solid];
m16_79 -> m16_65  [key=2, style=dotted];
m16_79 -> m16_17  [key=2, style=dotted];
m16_79 -> m16_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m16_79 -> m16_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m16_80 -> m16_81  [key=0, style=solid];
m16_81 -> m16_82  [key=0, style=solid];
m16_81 -> m16_34  [key=2, style=dotted];
m16_81 -> m16_35  [key=2, style=dotted];
m16_81 -> m16_36  [key=2, style=dotted];
m16_81 -> m16_37  [key=2, style=dotted];
m16_82 -> m16_83  [key=0, style=solid];
m16_82 -> m16_4  [key=2, style=dotted];
m16_82 -> m16_21  [key=2, style=dotted];
m16_82 -> m16_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_82 -> m16_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_82 -> m16_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_82 -> m16_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_82 -> m16_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_83 -> m16_84  [key=0, style=solid];
m16_83 -> m16_5  [key=2, style=dotted];
m16_84 -> m16_85  [key=0, style=solid];
m16_84 -> m16_5  [key=2, style=dotted];
m16_85 -> m16_86  [key=0, style=solid];
m16_85 -> m16_5  [key=2, style=dotted];
m16_86 -> m16_87  [key=0, style=solid];
m16_86 -> m16_5  [key=2, style=dotted];
m16_87 -> m16_88  [key=0, style=solid];
m16_87 -> m16_5  [key=2, style=dotted];
m16_88 -> m16_89  [key=0, style=solid];
m16_88 -> m16_5  [key=2, style=dotted];
m16_89 -> m16_78  [color=blue, key=0, style=bold];
m16_149 -> m16_150  [key=0, style=solid];
m16_150 -> m16_151  [key=0, style=solid];
m16_150 -> m16_34  [key=2, style=dotted];
m16_150 -> m16_35  [key=2, style=dotted];
m16_150 -> m16_116  [key=2, style=dotted];
m16_150 -> m16_121  [key=2, style=dotted];
m16_150 -> m16_118  [key=2, style=dotted];
m16_151 -> m16_152  [key=0, style=solid];
m16_151 -> m16_163  [key=2, style=dotted];
m16_152 -> m16_153  [key=0, style=solid];
m16_152 -> m16_4  [key=2, style=dotted];
m16_152 -> m16_21  [key=2, style=dotted];
m16_152 -> m16_38  [key=2, style=dotted];
m16_152 -> m16_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_152 -> m16_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_152 -> m16_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_152 -> m16_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_152 -> m16_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_152 -> m16_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_152 -> m16_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_152 -> m16_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_153 -> m16_154  [key=0, style=solid];
m16_153 -> n11  [key=2, style=dotted];
m16_153 -> m16_165  [key=2, style=dotted];
m16_154 -> m16_155  [key=0, style=solid];
m16_154 -> n11  [key=2, style=dotted];
m16_154 -> m16_165  [key=2, style=dotted];
m16_155 -> m16_156  [key=0, style=solid];
m16_155 -> m16_5  [key=2, style=dotted];
m16_156 -> m16_157  [key=0, style=solid];
m16_156 -> m16_5  [key=2, style=dotted];
m16_157 -> m16_158  [key=0, style=solid];
m16_157 -> m16_5  [key=2, style=dotted];
m16_158 -> m16_159  [key=0, style=solid];
m16_158 -> m16_5  [key=2, style=dotted];
m16_159 -> m16_160  [key=0, style=solid];
m16_159 -> m16_5  [key=2, style=dotted];
m16_160 -> m16_161  [key=0, style=solid];
m16_160 -> m16_5  [key=2, style=dotted];
m16_161 -> m16_162  [key=0, style=solid];
m16_161 -> m16_5  [key=2, style=dotted];
m16_162 -> m16_149  [color=blue, key=0, style=bold];
m16_192 -> m16_193  [key=0, style=solid];
m16_193 -> m16_194  [key=0, style=solid];
m16_193 -> m16_3  [key=2, style=dotted];
m16_193 -> m16_19  [key=2, style=dotted];
m16_193 -> m16_34  [key=2, style=dotted];
m16_193 -> m16_35  [key=2, style=dotted];
m16_193 -> m16_36  [key=2, style=dotted];
m16_193 -> m16_37  [key=2, style=dotted];
m16_193 -> m16_20  [key=2, style=dotted];
m16_194 -> m16_195  [key=0, style=solid];
m16_194 -> m16_4  [key=2, style=dotted];
m16_194 -> m16_21  [key=2, style=dotted];
m16_194 -> m16_38  [key=2, style=dotted];
m16_194 -> m16_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_194 -> m16_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_194 -> m16_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_194 -> m16_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_194 -> m16_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_194 -> m16_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_194 -> m16_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_194 -> m16_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_195 -> m16_196  [key=0, style=solid];
m16_195 -> m16_5  [key=2, style=dotted];
m16_196 -> m16_197  [key=0, style=solid];
m16_196 -> m16_5  [key=2, style=dotted];
m16_197 -> m16_198  [key=0, style=solid];
m16_197 -> m16_5  [key=2, style=dotted];
m16_198 -> m16_199  [key=0, style=solid];
m16_198 -> m16_5  [key=2, style=dotted];
m16_199 -> m16_200  [key=0, style=solid];
m16_199 -> m16_5  [key=2, style=dotted];
m16_200 -> m16_201  [key=0, style=solid];
m16_200 -> m16_5  [key=2, style=dotted];
m16_201 -> m16_202  [key=0, style=solid];
m16_201 -> m16_5  [key=2, style=dotted];
m16_202 -> m16_203  [key=0, style=solid];
m16_202 -> m16_5  [key=2, style=dotted];
m16_203 -> m16_204  [key=0, style=solid];
m16_203 -> m16_5  [key=2, style=dotted];
m16_204 -> m16_192  [color=blue, key=0, style=bold];
m16_39 -> m16_40  [key=0, style=solid];
m16_39 -> m16_28  [color=blue, key=0, style=bold];
m16_40 -> m16_41  [key=0, style=solid];
m16_40 -> m16_3  [key=2, style=dotted];
m16_40 -> m16_19  [key=2, style=dotted];
m16_40 -> m16_34  [key=2, style=dotted];
m16_40 -> m16_35  [key=2, style=dotted];
m16_40 -> m16_36  [key=2, style=dotted];
m16_40 -> m16_37  [key=2, style=dotted];
m16_40 -> m16_20  [key=2, style=dotted];
m16_41 -> m16_42  [color=red, key=0, style=solid];
m16_41 -> m16_4  [key=2, style=dotted];
m16_41 -> m16_21  [key=2, style=dotted];
m16_41 -> m16_38  [key=2, style=dotted];
m16_41 -> m16_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_41 -> m16_44  [color=red, key=1, label=lines, style=dashed];
m16_41 -> m16_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_41 -> m16_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_41 -> m16_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_41 -> m16_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_42 -> m16_43  [color=red, key=0, style=solid];
m16_42 -> m16_5  [color=red, key=2, style=dotted];
m16_43 -> m16_44  [color=red, key=0, style=solid];
m16_43 -> m16_5  [key=2, style=dotted];
m16_44 -> m16_45  [color=red, key=0, style=solid];
m16_44 -> m16_5  [color=red, key=2, style=dotted];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_5  [key=2, style=dotted];
m16_45 -> m16_38  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_5  [key=2, style=dotted];
m16_46 -> m16_44  [key=2, style=dotted];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_5  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_5  [key=2, style=dotted];
m16_48 -> m16_45  [color=blue, key=0, style=bold];
m16_49 -> m16_39  [color=blue, key=0, style=bold];
m16_49 -> m16_50  [key=0, style=solid];
m16_49 -> m16_56  [key=2, style=dotted];
m16_49 -> m16_44  [key=2, style=dotted];
m16_90 -> m16_91  [key=0, style=solid];
m16_91 -> m16_92  [key=0, style=solid];
m16_91 -> m16_65  [key=2, style=dotted];
m16_91 -> m16_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m16_91 -> m16_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m16_92 -> m16_93  [key=0, style=solid];
m16_93 -> m16_94  [key=0, style=solid];
m16_93 -> m16_19  [key=2, style=dotted];
m16_93 -> m16_34  [key=2, style=dotted];
m16_93 -> m16_35  [key=2, style=dotted];
m16_93 -> m16_36  [key=2, style=dotted];
m16_93 -> m16_37  [key=2, style=dotted];
m16_93 -> m16_20  [key=2, style=dotted];
m16_94 -> m16_95  [color=red, key=0, style=solid];
m16_94 -> m16_4  [key=2, style=dotted];
m16_94 -> m16_21  [key=2, style=dotted];
m16_94 -> m16_96  [color=red, key=1, label=lines, style=dashed];
m16_94 -> m16_97  [color=red, key=1, label=lines, style=dashed];
m16_94 -> m16_98  [color=red, key=1, label=lines, style=dashed];
m16_94 -> m16_99  [color=red, key=1, label=lines, style=dashed];
m16_94 -> m16_100  [color=red, key=1, label=lines, style=dashed];
m16_95 -> m16_96  [color=red, key=0, style=solid];
m16_95 -> m16_5  [color=red, key=2, style=dotted];
m16_96 -> m16_97  [color=red, key=0, style=solid];
m16_96 -> m16_5  [color=red, key=2, style=dotted];
m16_97 -> m16_98  [color=red, key=0, style=solid];
m16_97 -> m16_5  [color=red, key=2, style=dotted];
m16_98 -> m16_99  [color=red, key=0, style=solid];
m16_98 -> m16_5  [color=red, key=2, style=dotted];
m16_99 -> m16_100  [color=red, key=0, style=solid];
m16_99 -> m16_5  [color=red, key=2, style=dotted];
m16_100 -> m16_101  [color=red, key=0, style=solid];
m16_100 -> m16_5  [color=red, key=2, style=dotted];
m16_101 -> m16_90  [color=blue, key=0, style=bold];
m16_177 -> m16_178  [key=0, style=solid];
m16_178 -> m16_179  [key=0, style=solid];
m16_178 -> m16_36  [key=2, style=dotted];
m16_178 -> m16_190  [key=2, style=dotted];
m16_179 -> m16_180  [key=0, style=solid];
m16_179 -> m16_34  [key=2, style=dotted];
m16_179 -> m16_191  [key=2, style=dotted];
m16_179 -> m16_125  [key=2, style=dotted];
m16_180 -> m16_181  [key=0, style=solid];
m16_180 -> m16_163  [key=2, style=dotted];
m16_181 -> m16_182  [key=0, style=solid];
m16_181 -> m16_4  [key=2, style=dotted];
m16_181 -> m16_21  [key=2, style=dotted];
m16_181 -> m16_38  [key=2, style=dotted];
m16_181 -> m16_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_181 -> m16_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_181 -> m16_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_181 -> m16_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_181 -> m16_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_181 -> m16_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_182 -> m16_183  [key=0, style=solid];
m16_182 -> n11  [key=2, style=dotted];
m16_182 -> m16_165  [key=2, style=dotted];
m16_183 -> m16_184  [key=0, style=solid];
m16_183 -> n11  [key=2, style=dotted];
m16_183 -> m16_165  [key=2, style=dotted];
m16_184 -> m16_185  [key=0, style=solid];
m16_184 -> m16_5  [key=2, style=dotted];
m16_185 -> m16_186  [key=0, style=solid];
m16_185 -> m16_5  [key=2, style=dotted];
m16_186 -> m16_187  [key=0, style=solid];
m16_186 -> m16_5  [key=2, style=dotted];
m16_187 -> m16_188  [key=0, style=solid];
m16_187 -> m16_5  [key=2, style=dotted];
m16_188 -> m16_189  [key=0, style=solid];
m16_188 -> m16_5  [key=2, style=dotted];
m16_189 -> m16_177  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_12  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m16_0 -> m16_5  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_6  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_7  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_8  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_9  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_10  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_11  [color=darkseagreen4, key=1, label="CommandLine.BaseOptionAttribute", style=dashed];
m16_0 -> m16_3  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_1 -> m16_3  [key=2, style=dotted];
m16_1 -> m16_4  [key=2, style=dotted];
m16_1 -> m16_5  [key=2, style=dotted];
m16_2 -> m16_0  [color=blue, key=0, style=bold];
m16_2 -> m16_14  [key=0, style=solid];
m16_2 -> m16_15  [key=2, style=dotted];
m16_36 -> m16_39  [key=0, style=solid];
m16_38 -> m16_39  [key=0, style=solid];
m16_34 -> m16_35  [key=0, style=solid];
m16_34 -> m16_37  [key=0, style=solid];
m16_34 -> m16_44  [key=2, style=dotted];
m16_3 -> m16_5  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_60 -> m16_61  [color=red, key=0, style=solid];
m16_60 -> m16_62  [color=darkseagreen4, key=1, label=object, style=dashed];
m16_61 -> m16_62  [color=red, key=0, style=solid];
m16_61 -> m16_65  [color=red, key=2, style=dotted];
m16_61 -> m16_34  [color=red, key=2, style=dotted];
m16_61 -> m16_35  [color=red, key=2, style=dotted];
m16_61 -> m16_36  [color=red, key=2, style=dotted];
m16_61 -> m16_37  [color=red, key=2, style=dotted];
m16_62 -> m16_63  [color=red, key=0, style=solid];
m16_62 -> m16_4  [color=red, key=2, style=dotted];
m16_62 -> m16_21  [color=red, key=2, style=dotted];
m16_62 -> m16_38  [color=red, key=2, style=dotted];
m16_62 -> m16_65  [key=0, style=solid];
m16_62 -> m16_44  [key=2, style=dotted];
m16_63 -> m16_64  [color=red, key=0, style=solid];
m16_63 -> m16_5  [color=red, key=2, style=dotted];
m16_64 -> m16_60  [color=blue, key=0, style=bold];
m16_64 -> m16_65  [key=0, style=solid];
m16_64 -> m16_66  [key=2, style=dotted];
m16_19 -> m16_23  [key=0, style=solid];
m16_19 -> m16_24  [key=2, style=dotted];
m16_205 -> m16_206  [key=0, style=solid];
m16_206 -> m16_207  [key=0, style=solid];
m16_206 -> m16_34  [key=2, style=dotted];
m16_206 -> m16_35  [key=2, style=dotted];
m16_206 -> m16_36  [key=2, style=dotted];
m16_207 -> m16_208  [key=0, style=solid];
m16_207 -> m16_217  [key=2, style=dotted];
m16_208 -> m16_209  [key=0, style=solid];
m16_208 -> m16_21  [key=2, style=dotted];
m16_208 -> m16_210  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_208 -> m16_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_208 -> m16_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_208 -> m16_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_208 -> m16_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_208 -> m16_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_209 -> m16_210  [key=0, style=solid];
m16_209 -> m16_5  [key=2, style=dotted];
m16_210 -> m16_211  [key=0, style=solid];
m16_210 -> m16_5  [key=2, style=dotted];
m16_211 -> m16_212  [key=0, style=solid];
m16_211 -> m16_5  [key=2, style=dotted];
m16_212 -> m16_213  [key=0, style=solid];
m16_212 -> m16_5  [key=2, style=dotted];
m16_213 -> m16_214  [key=0, style=solid];
m16_213 -> m16_5  [key=2, style=dotted];
m16_214 -> m16_215  [key=0, style=solid];
m16_214 -> m16_5  [key=2, style=dotted];
m16_215 -> m16_216  [key=0, style=solid];
m16_215 -> m16_5  [key=2, style=dotted];
m16_216 -> m16_205  [color=blue, key=0, style=bold];
m16_37 -> m16_37  [color=darkseagreen4, key=1, label=i, style=dashed];
m16_37 -> m16_32  [key=0, style=solid];
m16_146 -> m16_147  [key=0, style=solid];
m16_128 -> m16_129  [key=0, style=solid];
m16_128 -> m16_131  [key=0, style=solid];
m16_128 -> m16_133  [key=0, style=solid];
m16_128 -> m16_135  [key=0, style=solid];
m16_128 -> m16_137  [key=0, style=solid];
m16_128 -> m16_139  [key=0, style=solid];
m16_128 -> m16_141  [key=0, style=solid];
m16_128 -> m16_143  [key=0, style=solid];
m16_130 -> m16_144  [key=0, style=solid];
m16_132 -> m16_144  [key=0, style=solid];
m16_134 -> m16_144  [key=0, style=solid];
m16_136 -> m16_144  [key=0, style=solid];
m16_138 -> m16_144  [key=0, style=solid];
m16_142 -> m16_144  [key=0, style=solid];
m16_127 -> m16_128  [key=0, style=solid];
m16_127 -> m16_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_127 -> m16_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_127 -> m16_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_127 -> m16_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_127 -> m16_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_127 -> m16_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_129 -> m16_130  [key=0, style=solid];
m16_131 -> m16_132  [key=0, style=solid];
m16_133 -> m16_134  [key=0, style=solid];
m16_135 -> m16_136  [key=0, style=solid];
m16_137 -> m16_138  [key=0, style=solid];
m16_139 -> m16_140  [key=0, style=solid];
m16_141 -> m16_142  [key=0, style=solid];
m16_143 -> m16_144  [key=0, style=solid];
m16_143 -> m16_145  [key=2, style=dotted];
m16_140 -> m16_144  [key=0, style=solid];
m16_144 -> m16_127  [color=blue, key=0, style=bold];
m16_147 -> m16_148  [key=0, style=solid];
m16_148 -> m16_146  [color=blue, key=0, style=bold];
m16_35 -> m16_36  [key=0, style=solid];
m16_65 -> m16_60  [color=blue, key=0, style=bold];
m16_17 -> m16_21  [color=green, key=1, label=string, style=dashed];
m16_17 -> m16_22  [color=green, key=1, label=string, style=dashed];
m16_17 -> m16_18  [key=0, style=solid];
m16_17 -> m16_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m16_17 -> m16_24  [color=darkorchid, key=3, label="method methodReturn bool SetValue", style=bold];
m16_21 -> m16_23  [color=green, key=0, style=solid];
m16_21 -> m16_26  [color=green, key=2, style=dotted];
m16_20 -> m16_21  [color=green, key=0, style=solid];
m16_20 -> m16_22  [color=green, key=0, style=solid];
m16_20 -> m16_25  [key=2, style=dotted];
m16_18 -> m16_20  [key=0, style=solid];
m16_18 -> m16_19  [key=0, style=solid];
m16_4 -> m16_14  [key=0, style=solid];
m16_4 -> m16_15  [key=2, style=dotted];
m16_13 -> m16_14  [color=green, key=0, style=solid];
m16_13 -> m16_16  [color=green, key=2, style=dotted];
m16_13 -> m16_5  [key=2, style=dotted];
m16_12 -> m16_13  [color=green, key=0, style=solid];
m16_12 -> m16_5  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_6 -> m16_7  [key=0, style=solid];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_16  [key=2, style=dotted];
m16_7 -> m16_17  [key=2, style=dotted];
m16_7 -> m16_18  [key=2, style=dotted];
m16_7 -> m16_19  [key=2, style=dotted];
m16_7 -> m16_20  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_4  [key=2, style=dotted];
m16_8 -> m16_21  [key=2, style=dotted];
m16_8 -> m16_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_8 -> m16_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_8 -> m16_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_8 -> m16_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_8 -> m16_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_5  [key=2, style=dotted];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_5  [key=2, style=dotted];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_5  [key=2, style=dotted];
m16_14 -> m16_0  [color=blue, key=0, style=bold];
m16_14 -> m16_15  [key=0, style=solid];
m16_14 -> m16_5  [key=2, style=dotted];
m16_15 -> m16_6  [color=blue, key=0, style=bold];
m16_218 -> m16_219  [key=0, style=solid];
m16_219 -> m16_220  [key=0, style=solid];
m16_219 -> m16_34  [key=2, style=dotted];
m16_219 -> m16_35  [key=2, style=dotted];
m16_219 -> m16_116  [key=2, style=dotted];
m16_220 -> m16_221  [key=0, style=solid];
m16_220 -> m16_163  [key=2, style=dotted];
m16_221 -> m16_222  [key=0, style=solid];
m16_221 -> m16_4  [key=2, style=dotted];
m16_222 -> m16_223  [key=0, style=solid];
m16_222 -> m16_21  [key=2, style=dotted];
m16_222 -> m16_38  [key=2, style=dotted];
m16_222 -> m16_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_232  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_233  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_234  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_235  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_236  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_237  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_222 -> m16_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_223 -> m16_224  [key=0, style=solid];
m16_223 -> n11  [key=2, style=dotted];
m16_223 -> m16_165  [key=2, style=dotted];
m16_224 -> m16_225  [key=0, style=solid];
m16_224 -> n11  [key=2, style=dotted];
m16_224 -> m16_165  [key=2, style=dotted];
m16_225 -> m16_226  [key=0, style=solid];
m16_225 -> m16_5  [key=2, style=dotted];
m16_226 -> m16_227  [key=0, style=solid];
m16_226 -> m16_5  [key=2, style=dotted];
m16_227 -> m16_228  [key=0, style=solid];
m16_227 -> m16_5  [key=2, style=dotted];
m16_228 -> m16_229  [key=0, style=solid];
m16_228 -> m16_5  [key=2, style=dotted];
m16_229 -> m16_230  [key=0, style=solid];
m16_229 -> m16_5  [key=2, style=dotted];
m16_230 -> m16_231  [key=0, style=solid];
m16_230 -> m16_5  [key=2, style=dotted];
m16_231 -> m16_232  [key=0, style=solid];
m16_231 -> m16_5  [key=2, style=dotted];
m16_232 -> m16_233  [key=0, style=solid];
m16_232 -> m16_5  [key=2, style=dotted];
m16_233 -> m16_234  [key=0, style=solid];
m16_233 -> m16_5  [key=2, style=dotted];
m16_234 -> m16_235  [key=0, style=solid];
m16_234 -> m16_5  [key=2, style=dotted];
m16_235 -> m16_236  [key=0, style=solid];
m16_235 -> m16_5  [key=2, style=dotted];
m16_236 -> m16_237  [key=0, style=solid];
m16_236 -> m16_5  [key=2, style=dotted];
m16_237 -> m16_238  [key=0, style=solid];
m16_237 -> m16_5  [key=2, style=dotted];
m16_238 -> m16_239  [key=0, style=solid];
m16_238 -> m16_5  [key=2, style=dotted];
m16_239 -> m16_240  [key=0, style=solid];
m16_239 -> m16_5  [key=2, style=dotted];
m16_240 -> m16_241  [key=0, style=solid];
m16_240 -> m16_5  [key=2, style=dotted];
m16_241 -> m16_242  [key=0, style=solid];
m16_241 -> m16_5  [key=2, style=dotted];
m16_242 -> m16_218  [color=blue, key=0, style=bold];
m16_102 -> m16_103  [color=red, key=0, style=solid];
m16_103 -> m16_104  [color=red, key=0, style=solid];
m16_103 -> m16_34  [color=red, key=2, style=dotted];
m16_103 -> m16_35  [color=red, key=2, style=dotted];
m16_103 -> m16_116  [color=red, key=2, style=dotted];
m16_103 -> m16_117  [color=red, key=2, style=dotted];
m16_103 -> m16_118  [color=red, key=2, style=dotted];
m16_103 -> m16_119  [color=red, key=2, style=dotted];
m16_103 -> m16_120  [color=red, key=2, style=dotted];
m16_103 -> m16_121  [color=red, key=2, style=dotted];
m16_103 -> m16_122  [color=red, key=2, style=dotted];
m16_103 -> m16_123  [color=red, key=2, style=dotted];
m16_103 -> m16_124  [color=red, key=2, style=dotted];
m16_103 -> m16_125  [color=red, key=2, style=dotted];
m16_103 -> m16_106  [color=red, key=1, label=fakeResult, style=dashed];
m16_104 -> m16_105  [key=0, style=solid];
m16_104 -> m16_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_104 -> m16_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_104 -> m16_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_104 -> m16_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_104 -> m16_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_104 -> m16_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_104 -> m16_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m16_104 -> m16_106  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m16_104 -> m16_104  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m16_106 -> m16_107  [key=0, style=solid];
m16_106 -> m16_126  [key=2, style=dotted];
m16_105 -> m16_106  [key=0, style=solid];
m16_105 -> m16_105  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m16_107 -> m16_108  [key=0, style=solid];
m16_107 -> m16_21  [key=2, style=dotted];
m16_107 -> m16_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_107 -> m16_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_107 -> m16_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_107 -> m16_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_107 -> m16_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_107 -> m16_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_108 -> m16_109  [key=0, style=solid];
m16_108 -> m16_5  [key=2, style=dotted];
m16_109 -> m16_110  [key=0, style=solid];
m16_109 -> m16_5  [key=2, style=dotted];
m16_110 -> m16_111  [key=0, style=solid];
m16_110 -> m16_5  [key=2, style=dotted];
m16_111 -> m16_112  [key=0, style=solid];
m16_111 -> m16_5  [key=2, style=dotted];
m16_112 -> m16_113  [key=0, style=solid];
m16_112 -> m16_5  [key=2, style=dotted];
m16_113 -> m16_114  [key=0, style=solid];
m16_113 -> m16_5  [key=2, style=dotted];
m16_114 -> m16_115  [key=0, style=solid];
m16_114 -> m16_5  [key=2, style=dotted];
m16_115 -> m16_102  [color=blue, key=0, style=bold];
m16_166 -> m16_167  [key=0, style=solid];
m16_167 -> m16_168  [key=0, style=solid];
m16_167 -> m16_34  [key=2, style=dotted];
m16_167 -> m16_35  [key=2, style=dotted];
m16_167 -> m16_125  [key=2, style=dotted];
m16_168 -> m16_169  [key=0, style=solid];
m16_168 -> m16_163  [key=2, style=dotted];
m16_169 -> m16_170  [key=0, style=solid];
m16_169 -> m16_4  [key=2, style=dotted];
m16_169 -> m16_21  [key=2, style=dotted];
m16_169 -> m16_38  [key=2, style=dotted];
m16_169 -> m16_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_169 -> m16_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m16_170 -> m16_171  [key=0, style=solid];
m16_170 -> n11  [key=2, style=dotted];
m16_170 -> m16_165  [key=2, style=dotted];
m16_171 -> m16_172  [key=0, style=solid];
m16_171 -> n11  [key=2, style=dotted];
m16_171 -> m16_165  [key=2, style=dotted];
m16_172 -> m16_173  [key=0, style=solid];
m16_172 -> m16_5  [key=2, style=dotted];
m16_173 -> m16_174  [key=0, style=solid];
m16_173 -> m16_5  [key=2, style=dotted];
m16_174 -> m16_175  [key=0, style=solid];
m16_174 -> m16_5  [key=2, style=dotted];
m16_175 -> m16_176  [key=0, style=solid];
m16_175 -> m16_5  [key=2, style=dotted];
m16_176 -> m16_166  [color=blue, key=0, style=bold];
m17_49 -> m17_50  [key=0, style=solid];
m17_50 -> m17_51  [color=green, key=0, style=solid];
m17_51 -> m17_52  [color=green, key=0, style=solid];
m17_51 -> n11  [color=green, key=2, style=dotted];
m17_51 -> m17_48  [color=green, key=2, style=dotted];
m17_52 -> m17_49  [color=blue, key=0, style=bold];
m17_19 -> m17_20  [key=0, style=solid];
m17_19 -> m17_29  [color=darkorchid, key=3, label="Parameter variable string longName", style=bold];
m17_19 -> m17_31  [color=darkorchid, key=3, label="Parameter variable string longName", style=bold];
m17_20 -> m17_21  [key=0, style=solid];
m17_20 -> m17_26  [key=2, style=dotted];
m17_20 -> m17_22  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_20 -> m17_24  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_21 -> m17_22  [key=0, style=solid];
m17_21 -> m17_16  [key=2, style=dotted];
m17_21 -> m17_23  [color=darkseagreen4, key=1, label=oi, style=dashed];
m17_22 -> m17_23  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_18  [key=2, style=dotted];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_17  [key=2, style=dotted];
m17_25 -> m17_19  [color=blue, key=0, style=bold];
m17_6 -> m17_30  [color=darkorchid, key=3, label="Parameter variable string longName", style=bold];
m17_37 -> m17_38  [color=green, key=0, style=solid];
m17_38 -> m17_39  [color=green, key=0, style=solid];
m17_38 -> n11  [color=green, key=2, style=dotted];
m17_38 -> m17_43  [color=green, key=2, style=dotted];
m17_39 -> m17_40  [color=green, key=0, style=solid];
m17_39 -> n11  [color=green, key=2, style=dotted];
m17_39 -> m17_43  [color=green, key=2, style=dotted];
m17_40 -> m17_41  [color=green, key=0, style=solid];
m17_40 -> n11  [color=green, key=2, style=dotted];
m17_40 -> m17_43  [color=green, key=2, style=dotted];
m17_41 -> m17_37  [color=blue, key=0, style=bold];
m17_8 -> m17_9  [key=0, style=solid];
m17_9 -> m17_10  [key=0, style=solid];
m17_9 -> m17_15  [key=2, style=dotted];
m17_9 -> m17_11  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_9 -> m17_13  [color=darkseagreen4, key=1, label=oa, style=dashed];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_16  [key=2, style=dotted];
m17_10 -> m17_12  [color=darkseagreen4, key=1, label=oi, style=dashed];
m17_11 -> m17_12  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_18  [key=2, style=dotted];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_17  [key=2, style=dotted];
m17_14 -> m17_8  [color=blue, key=0, style=bold];
m17_27 -> m17_28  [key=0, style=solid];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_0  [key=2, style=dotted];
m17_29 -> m17_30  [key=0, style=solid];
m17_29 -> m17_19  [key=2, style=dotted];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_8  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_31 -> m17_19  [key=2, style=dotted];
m17_32 -> m17_33  [key=0, style=solid];
m17_33 -> m17_27  [color=blue, key=0, style=bold];
m17_34 -> m17_35  [key=0, style=solid];
m17_35 -> m17_36  [key=0, style=solid];
m17_36 -> m17_34  [color=blue, key=0, style=bold];
m17_53 -> m17_54  [key=0, style=solid];
m17_53 -> m17_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_64  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_66  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_67  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m17_53 -> m17_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_53 -> m17_53  [color=darkorchid, key=3, label="method methodReturn CommandLine.Internal.OptionMap CreateMap", style=bold];
m17_54 -> m17_55  [key=0, style=solid];
m17_54 -> m17_56  [key=0, style=solid];
m17_62 -> m17_63  [key=0, style=solid];
m17_63 -> m17_64  [key=0, style=solid];
m17_64 -> m17_65  [key=0, style=solid];
m17_65 -> m17_66  [key=0, style=solid];
m17_65 -> m17_69  [key=0, style=solid];
m17_66 -> m17_67  [key=0, style=solid];
m17_67 -> m17_68  [key=0, style=solid];
m17_68 -> m17_69  [key=0, style=solid];
m17_69 -> m17_70  [key=0, style=solid];
m17_55 -> m17_56  [key=0, style=solid];
m17_55 -> m17_5  [key=2, style=dotted];
m17_55 -> m17_6  [key=2, style=dotted];
m17_55 -> m17_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_64  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_55 -> m17_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_26  [key=2, style=dotted];
m17_56 -> m17_59  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_56 -> m17_62  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_56 -> m17_66  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_56 -> m17_67  [color=darkseagreen4, key=1, label=attribute1, style=dashed];
m17_57 -> m17_58  [key=0, style=solid];
m17_57 -> m17_15  [key=2, style=dotted];
m17_57 -> m17_60  [color=darkseagreen4, key=1, label=attribute2, style=dashed];
m17_57 -> m17_63  [color=darkseagreen4, key=1, label=attribute2, style=dashed];
m17_57 -> m17_68  [color=darkseagreen4, key=1, label=attribute2, style=dashed];
m17_59 -> m17_60  [key=0, style=solid];
m17_59 -> m17_16  [key=2, style=dotted];
m17_59 -> m17_62  [color=darkseagreen4, key=1, label=option1, style=dashed];
m17_59 -> m17_66  [color=darkseagreen4, key=1, label=option1, style=dashed];
m17_58 -> m17_59  [key=0, style=solid];
m17_58 -> m17_26  [key=2, style=dotted];
m17_58 -> m17_61  [color=darkseagreen4, key=1, label=attribute3, style=dashed];
m17_58 -> m17_64  [color=darkseagreen4, key=1, label=attribute3, style=dashed];
m17_60 -> m17_61  [key=0, style=solid];
m17_60 -> m17_16  [key=2, style=dotted];
m17_60 -> m17_63  [color=darkseagreen4, key=1, label=option2, style=dashed];
m17_60 -> m17_67  [color=darkseagreen4, key=1, label=option2, style=dashed];
m17_61 -> m17_62  [key=0, style=solid];
m17_61 -> m17_16  [key=2, style=dotted];
m17_61 -> m17_64  [color=darkseagreen4, key=1, label=option3, style=dashed];
m17_61 -> m17_68  [color=darkseagreen4, key=1, label=option3, style=dashed];
m17_70 -> m17_53  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_5  [key=2, style=dotted];
m17_1 -> m17_6  [key=2, style=dotted];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_7  [key=2, style=dotted];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_7  [key=2, style=dotted];
m17_4 -> m17_0  [color=blue, key=0, style=bold];
m17_44 -> m17_45  [key=0, style=solid];
m17_45 -> m17_46  [color=green, key=0, style=solid];
m17_46 -> m17_47  [color=green, key=0, style=solid];
m17_46 -> n11  [color=green, key=2, style=dotted];
m17_46 -> m17_48  [color=green, key=2, style=dotted];
m17_47 -> m17_44  [color=blue, key=0, style=bold];
m17_71 -> m17_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_11  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m17_71 -> m17_24  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m18_0 -> m18_1  [color=green, key=0, style=solid];
m18_1 -> m18_2  [color=green, key=0, style=solid];
m18_1 -> m18_8  [color=green, key=2, style=dotted];
m18_1 -> m18_6  [color=green, key=1, label=writer, style=dashed];
m18_2 -> m18_3  [color=green, key=0, style=solid];
m18_2 -> m18_9  [color=green, key=2, style=dotted];
m18_2 -> m18_10  [color=green, key=2, style=dotted];
m18_2 -> m18_4  [color=green, key=1, label=parser, style=dashed];
m18_6 -> m18_7  [color=green, key=0, style=solid];
m18_6 -> m18_14  [color=green, key=2, style=dotted];
m18_6 -> m18_13  [color=green, key=2, style=dotted];
m18_3 -> m18_4  [color=green, key=0, style=solid];
m18_3 -> m18_11  [color=green, key=2, style=dotted];
m18_4 -> m18_5  [color=green, key=0, style=solid];
m18_4 -> m18_12  [color=green, key=2, style=dotted];
m18_5 -> m18_6  [color=green, key=0, style=solid];
m18_5 -> m18_13  [color=green, key=2, style=dotted];
m18_7 -> m18_0  [color=blue, key=0, style=bold];
m18_26 -> m18_27  [color=green, key=0, style=solid];
m18_27 -> m18_28  [color=green, key=0, style=solid];
m18_27 -> m18_8  [color=green, key=2, style=dotted];
m18_27 -> m18_30  [color=green, key=1, label=writer, style=dashed];
m18_27 -> m18_32  [color=green, key=1, label=writer, style=dashed];
m18_28 -> m18_29  [color=green, key=0, style=solid];
m18_28 -> m18_9  [color=green, key=2, style=dotted];
m18_28 -> m18_25  [color=green, key=2, style=dotted];
m18_28 -> m18_30  [color=green, key=1, label=parser, style=dashed];
m18_30 -> m18_31  [color=green, key=0, style=solid];
m18_30 -> m18_34  [color=green, key=2, style=dotted];
m18_32 -> m18_33  [color=green, key=0, style=solid];
m18_32 -> m18_14  [color=green, key=2, style=dotted];
m18_32 -> m18_13  [color=green, key=2, style=dotted];
m18_29 -> m18_30  [color=green, key=0, style=solid];
m18_29 -> m18_11  [color=green, key=2, style=dotted];
m18_31 -> m18_32  [color=green, key=0, style=solid];
m18_31 -> m18_13  [color=green, key=2, style=dotted];
m18_33 -> m18_26  [color=blue, key=0, style=bold];
m18_15 -> m18_16  [color=green, key=0, style=solid];
m18_16 -> m18_17  [color=green, key=0, style=solid];
m18_16 -> m18_8  [color=green, key=2, style=dotted];
m18_16 -> m18_18  [color=green, key=1, label=writer, style=dashed];
m18_16 -> m18_23  [color=green, key=1, label=writer, style=dashed];
m18_17 -> m18_18  [color=green, key=0, style=solid];
m18_17 -> m18_25  [color=green, key=2, style=dotted];
m18_17 -> m18_19  [color=green, key=1, label=settings, style=dashed];
m18_18 -> m18_19  [color=green, key=0, style=solid];
m18_23 -> m18_24  [color=green, key=0, style=solid];
m18_23 -> m18_14  [color=green, key=2, style=dotted];
m18_23 -> m18_13  [color=green, key=2, style=dotted];
m18_19 -> m18_20  [color=green, key=0, style=solid];
m18_19 -> m18_9  [color=green, key=2, style=dotted];
m18_19 -> m18_21  [color=green, key=1, label=parser, style=dashed];
m18_22 -> m18_23  [color=green, key=0, style=solid];
m18_22 -> m18_13  [color=green, key=2, style=dotted];
m18_20 -> m18_21  [color=green, key=0, style=solid];
m18_20 -> m18_11  [color=green, key=2, style=dotted];
m18_21 -> m18_22  [color=green, key=0, style=solid];
m18_21 -> m18_12  [color=green, key=2, style=dotted];
m18_24 -> m18_15  [color=blue, key=0, style=bold];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_29  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_25 -> m19_34  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
m19_25 -> m19_37  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
m19_25 -> m19_27  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.MethodInfo, TAttribute> RetrieveMethod", style=bold];
m19_26 -> m19_27  [key=0, style=solid];
m19_26 -> m19_18  [key=2, style=dotted];
m19_26 -> m19_35  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_29 -> m19_30  [key=0, style=solid];
m19_29 -> m19_20  [key=2, style=dotted];
m19_29 -> m19_40  [key=2, style=dotted];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_38  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_35 -> m19_36  [key=0, style=solid];
m19_28 -> m19_29  [key=0, style=solid];
m19_28 -> m19_38  [key=0, style=solid];
m19_38 -> m19_39  [key=0, style=solid];
m19_30 -> m19_31  [key=0, style=solid];
m19_30 -> m19_37  [key=0, style=solid];
m19_30 -> m19_32  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_30 -> m19_34  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_31 -> m19_32  [key=0, style=solid];
m19_31 -> m19_30  [key=0, style=solid];
m19_37 -> m19_39  [key=0, style=solid];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_23  [key=2, style=dotted];
m19_32 -> m19_34  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_18  [key=2, style=dotted];
m19_34 -> m19_36  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_30  [key=0, style=solid];
m19_36 -> m19_39  [key=0, style=solid];
m19_39 -> m19_25  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [color=green, key=0, style=solid];
m19_0 -> m19_5  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_0 -> m19_6  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_0 -> m19_4  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute>> RetrievePropertyList", style=bold];
m19_0 -> m19_2  [color=green, key=3, label="method methodReturn System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute>> RetrievePropertyList", style=bold];
m19_1 -> m19_2  [color=green, key=0, style=solid];
m19_1 -> m19_18  [color=green, key=2, style=dotted];
m19_1 -> m19_14  [color=green, key=1, label=key, style=dashed];
m19_5 -> m19_6  [key=0, style=solid];
m19_5 -> m19_14  [key=0, style=solid];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_20  [key=2, style=dotted];
m19_6 -> m19_21  [key=2, style=dotted];
m19_2 -> m19_3  [color=green, key=0, style=solid];
m19_2 -> m19_16  [color=green, key=1, label=cached, style=dashed];
m19_14 -> m19_15  [key=0, style=solid];
m19_3 -> m19_4  [color=green, key=0, style=solid];
m19_3 -> m19_16  [color=green, key=0, style=solid];
m19_16 -> m19_17  [key=0, style=solid];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_19  [key=2, style=dotted];
m19_4 -> m19_13  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_4 -> m19_14  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_4 -> m19_15  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_13 -> m19_7  [key=0, style=solid];
m19_13 -> m19_18  [key=2, style=dotted];
m19_13 -> m19_24  [key=2, style=dotted];
m19_15 -> m19_17  [key=0, style=solid];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_14  [key=0, style=solid];
m19_7 -> m19_9  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_7 -> m19_11  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_7 -> m19_13  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_7  [key=0, style=solid];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_22  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_23  [key=2, style=dotted];
m19_11 -> m19_13  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_7  [key=0, style=solid];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_7  [key=0, style=solid];
m19_17 -> m19_0  [color=blue, key=0, style=bold];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_45  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_41 -> m19_50  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m19_41 -> m19_37  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m19_41 -> m19_43  [color=darkorchid, key=3, label="method methodReturn TAttribute RetrieveMethodAttributeOnly", style=bold];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_18  [key=2, style=dotted];
m19_42 -> m19_51  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_45 -> m19_46  [key=0, style=solid];
m19_45 -> m19_20  [key=2, style=dotted];
m19_45 -> m19_40  [key=2, style=dotted];
m19_43 -> m19_44  [key=0, style=solid];
m19_43 -> m19_54  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_51 -> m19_52  [key=0, style=solid];
m19_44 -> m19_45  [key=0, style=solid];
m19_44 -> m19_54  [key=0, style=solid];
m19_54 -> m19_55  [key=0, style=solid];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_53  [key=0, style=solid];
m19_46 -> m19_48  [color=darkseagreen4, key=1, label=method, style=dashed];
m19_47 -> m19_48  [key=0, style=solid];
m19_47 -> m19_46  [key=0, style=solid];
m19_53 -> m19_55  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid];
m19_48 -> m19_23  [key=2, style=dotted];
m19_48 -> m19_50  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_49 -> m19_50  [key=0, style=solid];
m19_49 -> m19_46  [key=0, style=solid];
m19_50 -> m19_51  [key=0, style=solid];
m19_50 -> m19_52  [color=darkseagreen4, key=1, label=data, style=dashed];
m19_52 -> m19_55  [key=0, style=solid];
m19_55 -> m19_41  [color=blue, key=0, style=bold];
m19_101 -> m19_102  [key=0, style=solid];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_104  [key=2, style=dotted];
m19_103 -> m19_101  [color=blue, key=0, style=bold];
m19_73 -> m19_74  [key=0, style=solid];
m19_73 -> m19_37  [color=darkorchid, key=3, label="method methodReturn TAttribute GetAttribute", style=bold];
m19_74 -> m19_75  [key=0, style=solid];
m19_74 -> m19_79  [key=2, style=dotted];
m19_74 -> m19_77  [color=darkseagreen4, key=1, label=a, style=dashed];
m19_75 -> m19_76  [key=0, style=solid];
m19_75 -> m19_77  [key=0, style=solid];
m19_77 -> m19_78  [key=0, style=solid];
m19_76 -> m19_78  [key=0, style=solid];
m19_78 -> m19_73  [color=blue, key=0, style=bold];
m19_80 -> m19_81  [key=0, style=solid];
m19_80 -> m19_85  [color=green, key=1, label=object, style=dashed];
m19_80 -> m19_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_80 -> m19_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m19_80 -> m19_37  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> RetrieveOptionProperty", style=bold];
m19_80 -> m19_84  [color=green, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> RetrieveOptionProperty", style=bold];
m19_80 -> m19_82  [color=darkorchid, key=3, label="method methodReturn CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> RetrieveOptionProperty", style=bold];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_18  [key=2, style=dotted];
m19_81 -> m19_96  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_85 -> m19_86  [color=green, key=0, style=solid];
m19_85 -> m19_87  [color=green, key=0, style=solid];
m19_87 -> m19_88  [key=0, style=solid];
m19_87 -> m19_20  [key=2, style=dotted];
m19_87 -> m19_21  [key=2, style=dotted];
m19_94 -> m19_95  [key=0, style=solid];
m19_94 -> m19_88  [key=0, style=solid];
m19_94 -> m19_100  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_98  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_96 -> m19_97  [key=0, style=solid];
m19_83 -> m19_84  [color=green, key=0, style=solid];
m19_83 -> m19_98  [key=0, style=solid];
m19_98 -> m19_99  [key=0, style=solid];
m19_84 -> m19_85  [color=green, key=0, style=solid];
m19_84 -> m19_37  [color=green, key=3, label="Local variable CommandLine.Utils.Pair<System.Reflection.PropertyInfo, TAttribute> found", style=bold];
m19_86 -> m19_99  [key=0, style=solid];
m19_88 -> m19_89  [key=0, style=solid];
m19_88 -> m19_98  [key=0, style=solid];
m19_88 -> m19_90  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_88 -> m19_92  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_88 -> m19_95  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_89 -> m19_90  [key=0, style=solid];
m19_89 -> m19_88  [key=0, style=solid];
m19_90 -> m19_91  [key=0, style=solid];
m19_90 -> m19_22  [key=2, style=dotted];
m19_92 -> m19_93  [key=0, style=solid];
m19_92 -> m19_23  [key=2, style=dotted];
m19_92 -> m19_95  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_95 -> m19_96  [key=0, style=solid];
m19_95 -> m19_18  [key=2, style=dotted];
m19_95 -> m19_97  [color=darkseagreen4, key=1, label=found, style=dashed];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_88  [key=0, style=solid];
m19_93 -> m19_94  [key=0, style=solid];
m19_97 -> m19_99  [key=0, style=solid];
m19_99 -> m19_80  [color=blue, key=0, style=bold];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_56 -> m19_60  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<TAttribute> RetrievePropertyAttributeList", style=bold];
m19_56 -> m19_58  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<TAttribute> RetrievePropertyAttributeList", style=bold];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_18  [key=2, style=dotted];
m19_57 -> m19_69  [color=darkseagreen4, key=1, label=key, style=dashed];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_20  [key=2, style=dotted];
m19_61 -> m19_21  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_71  [color=darkseagreen4, key=1, label=cached, style=dashed];
m19_69 -> m19_70  [key=0, style=solid];
m19_59 -> m19_60  [key=0, style=solid];
m19_59 -> m19_71  [key=0, style=solid];
m19_71 -> m19_72  [key=0, style=solid];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_19  [key=2, style=dotted];
m19_60 -> m19_68  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_60 -> m19_69  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_60 -> m19_70  [color=darkseagreen4, key=1, label=list, style=dashed];
m19_68 -> m19_62  [key=0, style=solid];
m19_68 -> m19_24  [key=2, style=dotted];
m19_70 -> m19_72  [key=0, style=solid];
m19_62 -> m19_63  [key=0, style=solid];
m19_62 -> m19_69  [key=0, style=solid];
m19_62 -> m19_64  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_62 -> m19_66  [color=darkseagreen4, key=1, label=property, style=dashed];
m19_63 -> m19_64  [key=0, style=solid];
m19_63 -> m19_62  [key=0, style=solid];
m19_64 -> m19_65  [key=0, style=solid];
m19_64 -> m19_22  [key=2, style=dotted];
m19_66 -> m19_67  [key=0, style=solid];
m19_66 -> m19_23  [key=2, style=dotted];
m19_66 -> m19_68  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m19_65 -> m19_66  [key=0, style=solid];
m19_65 -> m19_62  [key=0, style=solid];
m19_67 -> m19_68  [key=0, style=solid];
m19_67 -> m19_62  [key=0, style=solid];
m19_72 -> m19_56  [color=blue, key=0, style=bold];
m23_15 -> m23_16  [key=0, style=solid];
m23_16 -> m23_17  [key=0, style=solid];
m23_16 -> m23_20  [key=2, style=dotted];
m23_17 -> m23_18  [color=red, key=0, style=solid];
m23_17 -> m23_10  [key=2, style=dotted];
m23_18 -> m23_19  [color=red, key=0, style=solid];
m23_18 -> m23_11  [color=red, key=2, style=dotted];
m23_18 -> m23_12  [color=red, key=2, style=dotted];
m23_19 -> m23_15  [color=blue, key=0, style=bold];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_1 -> m23_9  [key=2, style=dotted];
m23_1 -> m23_4  [color=red, key=1, label=options, style=dashed];
m23_1 -> m23_5  [color=red, key=1, label=options, style=dashed];
m23_1 -> m23_6  [color=red, key=1, label=options, style=dashed];
m23_1 -> m23_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m23_2 -> m23_3  [color=red, key=0, style=solid];
m23_2 -> m23_10  [key=2, style=dotted];
m23_4 -> m23_5  [color=red, key=0, style=solid];
m23_4 -> m23_11  [color=red, key=2, style=dotted];
m23_4 -> n12  [color=red, key=2, style=dotted];
m23_5 -> m23_6  [color=red, key=0, style=solid];
m23_5 -> m23_11  [color=red, key=2, style=dotted];
m23_5 -> n12  [color=red, key=2, style=dotted];
m23_6 -> m23_7  [color=red, key=0, style=solid];
m23_6 -> m23_11  [color=red, key=2, style=dotted];
m23_6 -> m23_12  [color=red, key=2, style=dotted];
m23_7 -> m23_8  [key=0, style=solid];
m23_7 -> m23_14  [key=2, style=dotted];
m23_3 -> m23_4  [color=red, key=0, style=solid];
m23_3 -> m23_11  [color=red, key=2, style=dotted];
m23_3 -> m23_12  [color=red, key=2, style=dotted];
m23_8 -> m23_0  [color=blue, key=0, style=bold];
m24_4 -> m24_5  [key=0, style=solid];
m24_4 -> m24_16  [key=2, style=dotted];
m24_5 -> m24_6  [key=0, style=solid];
m24_5 -> m24_7  [key=2, style=dotted];
m24_5 -> m24_17  [key=2, style=dotted];
m24_6 -> m24_4  [color=blue, key=0, style=bold];
m24_6 -> m24_7  [key=0, style=solid];
m24_6 -> m24_18  [key=2, style=dotted];
m24_36 -> m24_37  [color=green, key=0, style=solid];
m24_37 -> m24_38  [color=green, key=0, style=solid];
m24_37 -> m24_49  [color=green, key=2, style=dotted];
m24_37 -> m24_39  [color=green, key=1, label=options, style=dashed];
m24_38 -> m24_14  [key=2, style=dotted];
m24_38 -> m24_39  [key=0, style=solid];
m24_38 -> m24_41  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m24_39 -> m24_15  [key=2, style=dotted];
m24_39 -> m24_40  [key=0, style=solid];
m24_40 -> m24_41  [key=0, style=solid];
m24_40 -> m24_16  [key=2, style=dotted];
m24_41 -> m24_17  [key=2, style=dotted];
m24_41 -> m24_42  [key=0, style=solid];
m24_41 -> m24_43  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m24_47 -> m24_48  [key=0, style=solid];
m24_47 -> m24_22  [key=2, style=dotted];
m24_47 -> n11  [key=2, style=dotted];
m24_47 -> m24_23  [key=2, style=dotted];
m24_42 -> m24_18  [key=2, style=dotted];
m24_42 -> m24_43  [key=0, style=solid];
m24_43 -> m24_19  [key=2, style=dotted];
m24_43 -> m24_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_43 -> m24_44  [key=0, style=solid];
m24_43 -> m24_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_43 -> m24_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_46 -> m24_47  [key=0, style=solid];
m24_46 -> m24_22  [key=2, style=dotted];
m24_46 -> n11  [key=2, style=dotted];
m24_46 -> m24_23  [key=2, style=dotted];
m24_44 -> n11  [key=2, style=dotted];
m24_44 -> m24_21  [key=2, style=dotted];
m24_44 -> m24_45  [key=0, style=solid];
m24_45 -> m24_22  [key=2, style=dotted];
m24_45 -> n11  [key=2, style=dotted];
m24_45 -> m24_23  [key=2, style=dotted];
m24_45 -> m24_46  [key=0, style=solid];
m24_48 -> m24_36  [color=blue, key=0, style=bold];
m24_24 -> m24_25  [color=green, key=0, style=solid];
m24_25 -> m24_26  [color=green, key=0, style=solid];
m24_25 -> m24_35  [color=green, key=2, style=dotted];
m24_25 -> m24_27  [color=green, key=1, label=options, style=dashed];
m24_26 -> m24_27  [color=green, key=0, style=solid];
m24_26 -> m24_14  [color=green, key=2, style=dotted];
m24_26 -> m24_29  [color=green, key=1, label=testWriter, style=dashed];
m24_27 -> m24_15  [key=2, style=dotted];
m24_27 -> m24_28  [key=0, style=solid];
m24_29 -> m24_30  [key=0, style=solid];
m24_29 -> m24_17  [key=2, style=dotted];
m24_29 -> m24_31  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m24_28 -> m24_29  [key=0, style=solid];
m24_28 -> m24_16  [key=2, style=dotted];
m24_30 -> m24_31  [key=0, style=solid];
m24_30 -> m24_18  [key=2, style=dotted];
m24_31 -> m24_32  [key=0, style=solid];
m24_31 -> m24_19  [key=2, style=dotted];
m24_31 -> m24_33  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_33 -> m24_34  [key=0, style=solid];
m24_33 -> m24_22  [key=2, style=dotted];
m24_33 -> n11  [key=2, style=dotted];
m24_33 -> m24_23  [key=2, style=dotted];
m24_32 -> m24_33  [key=0, style=solid];
m24_32 -> n11  [key=2, style=dotted];
m24_32 -> m24_21  [key=2, style=dotted];
m24_34 -> m24_24  [color=blue, key=0, style=bold];
m24_0 -> m24_1  [color=green, key=0, style=solid];
m24_1 -> m24_2  [color=green, key=0, style=solid];
m24_1 -> m24_13  [color=green, key=2, style=dotted];
m24_1 -> m24_3  [color=green, key=1, label=options, style=dashed];
m24_2 -> m24_3  [color=green, key=0, style=solid];
m24_2 -> m24_14  [color=green, key=2, style=dotted];
m24_2 -> m24_5  [color=green, key=1, label=testWriter, style=dashed];
m24_3 -> m24_4  [color=green, key=0, style=solid];
m24_3 -> m24_15  [color=green, key=2, style=dotted];
m24_3 -> m24_0  [color=blue, key=0, style=bold];
m24_7 -> m24_8  [key=0, style=solid];
m24_7 -> m24_19  [key=2, style=dotted];
m24_7 -> m24_9  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_7 -> m24_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_7 -> m24_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_11 -> m24_12  [key=0, style=solid];
m24_11 -> m24_22  [key=2, style=dotted];
m24_11 -> n11  [key=2, style=dotted];
m24_11 -> m24_23  [key=2, style=dotted];
m24_8 -> m24_9  [key=0, style=solid];
m24_8 -> n11  [key=2, style=dotted];
m24_8 -> m24_21  [key=2, style=dotted];
m24_8 -> m24_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.ComplexOptions", style=dashed];
m24_8 -> m24_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.ComplexOptions", style=dashed];
m24_8 -> m24_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.ComplexOptions", style=dashed];
m24_9 -> m24_10  [key=0, style=solid];
m24_9 -> m24_22  [key=2, style=dotted];
m24_9 -> n11  [key=2, style=dotted];
m24_9 -> m24_23  [key=2, style=dotted];
m24_10 -> m24_11  [key=0, style=solid];
m24_10 -> m24_22  [key=2, style=dotted];
m24_10 -> n11  [key=2, style=dotted];
m24_10 -> m24_23  [key=2, style=dotted];
m24_12 -> m24_0  [color=blue, key=0, style=bold];
m24_50 -> m24_51  [color=green, key=0, style=solid];
m24_51 -> m24_52  [color=green, key=0, style=solid];
m24_51 -> m24_61  [color=green, key=2, style=dotted];
m24_51 -> m24_53  [color=green, key=1, label=options, style=dashed];
m24_52 -> m24_53  [color=green, key=0, style=solid];
m24_52 -> m24_14  [color=green, key=2, style=dotted];
m24_52 -> m24_55  [color=green, key=1, label=testWriter, style=dashed];
m24_53 -> m24_15  [key=2, style=dotted];
m24_53 -> m24_54  [key=0, style=solid];
m24_55 -> m24_56  [key=0, style=solid];
m24_55 -> m24_17  [key=2, style=dotted];
m24_55 -> m24_57  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m24_54 -> m24_55  [key=0, style=solid];
m24_54 -> m24_16  [key=2, style=dotted];
m24_56 -> m24_57  [key=0, style=solid];
m24_56 -> m24_18  [key=2, style=dotted];
m24_57 -> m24_58  [key=0, style=solid];
m24_57 -> m24_19  [key=2, style=dotted];
m24_57 -> m24_59  [color=darkseagreen4, key=1, label=lines, style=dashed];
m24_59 -> m24_60  [key=0, style=solid];
m24_59 -> m24_22  [key=2, style=dotted];
m24_59 -> n11  [key=2, style=dotted];
m24_59 -> m24_23  [key=2, style=dotted];
m24_58 -> m24_59  [key=0, style=solid];
m24_58 -> n11  [key=2, style=dotted];
m24_58 -> m24_21  [key=2, style=dotted];
m24_60 -> m24_50  [color=blue, key=0, style=bold];
m24_62 -> m24_3  [color=green, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_28  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_39  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_40  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_53  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m24_62 -> m24_54  [color=darkseagreen4, key=1, label="CommandLine.Tests.StrictFixture", style=dashed];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_0  [color=blue, key=0, style=bold];
m25_2 -> m25_3  [color=red, key=0, style=solid];
m25_3 -> m25_4  [color=red, key=0, style=solid];
m25_4 -> m25_5  [color=red, key=0, style=solid];
m25_4 -> m25_8  [color=red, key=2, style=dotted];
m25_5 -> m25_6  [color=red, key=0, style=solid];
m25_5 -> m25_7  [color=red, key=0, style=solid];
m25_6 -> m25_7  [color=red, key=0, style=solid];
m25_6 -> m25_9  [color=red, key=2, style=dotted];
m25_7 -> m25_2  [color=blue, key=0, style=bold];
m25_10 -> m25_11  [color=red, key=0, style=solid];
m25_10 -> m25_13  [color=red, key=1, label=string, style=dashed];
m25_10 -> m25_12  [color=red, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
m25_10 -> m25_14  [color=red, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
m25_11 -> m25_12  [color=red, key=0, style=solid];
m25_11 -> m25_13  [color=red, key=0, style=solid];
m25_13 -> m25_14  [color=red, key=0, style=solid];
m25_13 -> m25_16  [color=red, key=2, style=dotted];
m25_12 -> m25_15  [color=red, key=0, style=solid];
m25_14 -> m25_15  [color=red, key=0, style=solid];
m25_15 -> m25_10  [color=blue, key=0, style=bold];
m25_17 -> m25_3  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_4  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_5  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_6  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_11  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m25_17 -> m25_13  [color=red, key=1, label="CommandLine.Internal.Target", style=dashed];
m26_11 -> m26_12  [key=0, style=solid];
m26_12 -> m26_13  [key=0, style=solid];
m26_12 -> m26_3  [key=2, style=dotted];
m26_13 -> m26_11  [color=blue, key=0, style=bold];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_7  [key=2, style=dotted];
m26_10 -> m26_8  [color=blue, key=0, style=bold];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_2 -> m26_0  [color=blue, key=0, style=bold];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=2, style=dotted];
m26_6 -> m26_4  [color=blue, key=0, style=bold];
m26_14 -> m26_15  [color=green, key=0, style=solid];
m26_15 -> m26_16  [color=green, key=0, style=solid];
m26_15 -> m26_17  [color=green, key=2, style=dotted];
m26_16 -> m26_14  [color=blue, key=0, style=bold];
m27_0 -> m27_1  [key=0, style=solid];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_4  [color=darkseagreen4, key=1, label=args, style=dashed];
m27_1 -> m27_8  [color=darkseagreen4, key=1, label=args, style=dashed];
m27_2 -> m27_3  [key=0, style=solid];
m27_2 -> m27_13  [key=2, style=dotted];
m27_2 -> m27_4  [color=darkseagreen4, key=1, label=appOptions, style=dashed];
m27_2 -> m27_6  [color=green, key=1, label=appOptions, style=dashed];
m27_4 -> m27_5  [color=green, key=0, style=solid];
m27_4 -> m27_16  [key=2, style=dotted];
m27_8 -> m27_9  [color=green, key=0, style=solid];
m27_8 -> m27_16  [key=2, style=dotted];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_14  [key=2, style=dotted];
m27_3 -> m27_15  [key=2, style=dotted];
m27_3 -> m27_8  [color=darkseagreen4, key=1, label=parser, style=dashed];
m27_6 -> m27_7  [color=green, key=0, style=solid];
m27_6 -> m27_17  [color=green, key=2, style=dotted];
m27_6 -> n12  [color=green, key=2, style=dotted];
m27_5 -> m27_6  [color=green, key=0, style=solid];
m27_5 -> m27_17  [color=green, key=2, style=dotted];
m27_5 -> m27_18  [color=green, key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_20  [key=2, style=dotted];
m27_7 -> m27_10  [color=green, key=1, label=plugInXOptions, style=dashed];
m27_7 -> m27_11  [color=green, key=1, label=plugInXOptions, style=dashed];
m27_10 -> m27_11  [color=green, key=0, style=solid];
m27_10 -> m27_17  [color=green, key=2, style=dotted];
m27_10 -> n12  [color=green, key=2, style=dotted];
m27_11 -> m27_12  [color=green, key=0, style=solid];
m27_11 -> m27_17  [color=green, key=2, style=dotted];
m27_11 -> n12  [color=green, key=2, style=dotted];
m27_9 -> m27_10  [color=green, key=0, style=solid];
m27_9 -> m27_17  [color=green, key=2, style=dotted];
m27_9 -> m27_18  [color=green, key=2, style=dotted];
m27_12 -> m27_0  [color=blue, key=0, style=bold];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_3 -> m28_8  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_6  [key=0, style=solid];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_8  [key=0, style=solid];
m28_6 -> m28_11  [key=2, style=dotted];
m28_8 -> m28_9  [key=0, style=solid];
m28_5 -> m28_9  [key=0, style=solid];
m28_5 -> m28_10  [key=2, style=dotted];
m28_7 -> m28_9  [key=0, style=solid];
m28_7 -> m28_12  [key=2, style=dotted];
m28_9 -> m28_3  [color=blue, key=0, style=bold];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_16  [color=darkorchid, key=3, label="method methodReturn CommandLine.ValueListAttribute GetAttribute", style=bold];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_34  [key=2, style=dotted];
m28_26 -> m28_29  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_26 -> m28_31  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_27 -> m28_28  [key=0, style=solid];
m28_27 -> m28_29  [key=0, style=solid];
m28_29 -> m28_30  [key=0, style=solid];
m28_29 -> m28_31  [key=0, style=solid];
m28_31 -> m28_32  [key=0, style=solid];
m28_28 -> m28_33  [key=0, style=solid];
m28_30 -> m28_33  [key=0, style=solid];
m28_30 -> m28_35  [key=2, style=dotted];
m28_32 -> m28_33  [key=0, style=solid];
m28_33 -> m28_25  [color=blue, key=0, style=bold];
m28_13 -> m28_14  [key=0, style=solid];
m28_13 -> m28_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_13 -> m28_18  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_13 -> m28_19  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_13 -> m28_16  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IList<string> GetReference", style=bold];
m28_14 -> m28_15  [key=0, style=solid];
m28_15 -> m28_16  [key=0, style=solid];
m28_15 -> m28_21  [key=2, style=dotted];
m28_15 -> m28_18  [color=darkseagreen4, key=1, label=concreteType, style=dashed];
m28_15 -> m28_19  [color=darkseagreen4, key=1, label=property, style=dashed];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_22  [key=2, style=dotted];
m28_18 -> m28_23  [key=2, style=dotted];
m28_19 -> m28_20  [key=0, style=solid];
m28_19 -> m28_24  [key=2, style=dotted];
m28_16 -> m28_17  [key=0, style=solid];
m28_16 -> m28_18  [key=0, style=solid];
m28_17 -> m28_20  [key=0, style=solid];
m28_20 -> m28_13  [color=blue, key=0, style=bold];
m28_21 -> m28_36  [key=0, style=solid];
m28_21 -> m28_37  [color=darkseagreen4, key=1, label=object, style=dashed];
m28_21 -> m28_13  [color=darkorchid, key=3, label="Parameter variable object target", style=bold];
m28_21 -> m28_14  [color=darkorchid, key=3, label="Parameter variable System.Type concreteType", style=bold];
m28_21 -> m28_16  [color=darkorchid, key=3, label="method methodReturn System.Reflection.PropertyInfo GetProperty", style=bold];
m28_36 -> m28_37  [key=0, style=solid];
m28_37 -> m28_38  [key=0, style=solid];
m28_37 -> m28_34  [key=2, style=dotted];
m28_37 -> m28_40  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_37 -> m28_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_40  [key=0, style=solid];
m28_40 -> m28_41  [key=0, style=solid];
m28_40 -> m28_42  [key=0, style=solid];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_44  [color=darkseagreen4, key=1, label=pairZero, style=dashed];
m28_39 -> m28_45  [key=0, style=solid];
m28_41 -> m28_45  [key=0, style=solid];
m28_41 -> m28_35  [key=2, style=dotted];
m28_43 -> m28_44  [key=0, style=solid];
m28_43 -> m28_45  [color=darkseagreen4, key=1, label="out System.Type", style=dashed];
m28_44 -> m28_45  [key=0, style=solid];
m28_45 -> m28_21  [color=blue, key=0, style=bold];
m28_0 -> m28_1  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_2 -> m28_0  [color=blue, key=0, style=bold];
m28_46 -> m28_1  [color=darkseagreen4, key=1, label="CommandLine.ValueListAttribute", style=dashed];
m28_46 -> m28_8  [color=darkseagreen4, key=1, label="CommandLine.ValueListAttribute", style=dashed];
m29_12 -> m29_13  [key=0, style=solid];
m29_13 -> m29_14  [key=0, style=solid];
m29_13 -> m29_3  [key=2, style=dotted];
m29_13 -> m29_15  [key=2, style=dotted];
m29_13 -> m29_8  [key=2, style=dotted];
m29_14 -> m29_12  [color=blue, key=0, style=bold];
m29_27 -> m29_28  [key=0, style=solid];
m29_28 -> m29_29  [key=0, style=solid];
m29_28 -> m29_22  [key=2, style=dotted];
m29_28 -> m29_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m29_29 -> m29_30  [key=0, style=solid];
m29_29 -> m29_23  [key=2, style=dotted];
m29_29 -> m29_31  [color=darkseagreen4, key=1, label=values, style=dashed];
m29_29 -> m29_32  [color=darkseagreen4, key=1, label=values, style=dashed];
m29_33 -> m29_34  [key=0, style=solid];
m29_33 -> m29_36  [key=2, style=dotted];
m29_30 -> m29_31  [key=0, style=solid];
m29_30 -> m29_35  [key=2, style=dotted];
m29_31 -> m29_32  [key=0, style=solid];
m29_31 -> m29_35  [key=2, style=dotted];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_35  [key=2, style=dotted];
m29_34 -> m29_27  [color=blue, key=0, style=bold];
m29_16 -> m29_17  [key=0, style=solid];
m29_17 -> m29_18  [key=0, style=solid];
m29_17 -> m29_22  [key=2, style=dotted];
m29_18 -> m29_19  [color=green, key=0, style=solid];
m29_18 -> m29_23  [key=2, style=dotted];
m29_18 -> m29_20  [color=green, key=1, label=values, style=dashed];
m29_19 -> m29_20  [color=green, key=0, style=solid];
m29_19 -> m29_24  [color=green, key=2, style=dotted];
m29_19 -> m29_25  [color=green, key=2, style=dotted];
m29_20 -> m29_21  [color=green, key=0, style=solid];
m29_20 -> m29_8  [color=green, key=2, style=dotted];
m29_20 -> m29_24  [color=green, key=2, style=dotted];
m29_20 -> n12  [color=green, key=2, style=dotted];
m29_21 -> m29_16  [color=blue, key=0, style=bold];
m29_4 -> m29_5  [key=0, style=solid];
m29_5 -> m29_6  [key=0, style=solid];
m29_5 -> m29_3  [key=2, style=dotted];
m29_5 -> m29_7  [key=2, style=dotted];
m29_5 -> m29_8  [key=2, style=dotted];
m29_6 -> m29_4  [color=blue, key=0, style=bold];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=2, style=dotted];
m29_2 -> m29_0  [color=blue, key=0, style=bold];
m29_9 -> m29_10  [key=0, style=solid];
m29_10 -> m29_11  [key=0, style=solid];
m29_10 -> m29_3  [key=2, style=dotted];
m29_10 -> m29_7  [key=2, style=dotted];
m29_10 -> m29_8  [key=2, style=dotted];
m29_11 -> m29_9  [color=blue, key=0, style=bold];
m29_37 -> m29_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
m30_20 -> m30_21  [key=0, style=solid];
m30_21 -> m30_22  [key=0, style=solid];
m30_21 -> m30_31  [key=2, style=dotted];
m30_21 -> m30_24  [color=green, key=1, label=options, style=dashed];
m30_21 -> m30_25  [color=green, key=1, label=options, style=dashed];
m30_21 -> m30_26  [color=green, key=1, label=options, style=dashed];
m30_21 -> m30_27  [color=red, key=1, label=options, style=dashed];
m30_21 -> m30_28  [color=red, key=1, label=options, style=dashed];
m30_21 -> m30_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_21 -> m30_23  [color=green, key=1, label=options, style=dashed];
m30_22 -> m30_23  [color=green, key=0, style=solid];
m30_22 -> m30_14  [key=2, style=dotted];
m30_22 -> m30_16  [color=green, key=2, style=dotted];
m30_22 -> n12  [color=green, key=2, style=dotted];
m30_24 -> m30_25  [color=green, key=0, style=solid];
m30_24 -> m30_16  [color=green, key=2, style=dotted];
m30_24 -> n12  [color=green, key=2, style=dotted];
m30_25 -> m30_26  [color=green, key=0, style=solid];
m30_25 -> m30_16  [color=green, key=2, style=dotted];
m30_25 -> n12  [color=red, key=2, style=dotted];
m30_25 -> m30_32  [color=green, key=2, style=dotted];
m30_26 -> m30_27  [color=red, key=0, style=solid];
m30_26 -> m30_16  [color=green, key=2, style=dotted];
m30_26 -> n12  [color=red, key=2, style=dotted];
m30_26 -> m30_29  [color=green, key=0, style=solid];
m30_26 -> m30_33  [color=green, key=2, style=dotted];
m30_27 -> m30_28  [color=red, key=0, style=solid];
m30_27 -> m30_16  [color=red, key=2, style=dotted];
m30_27 -> m30_32  [color=red, key=2, style=dotted];
m30_28 -> m30_29  [color=red, key=0, style=solid];
m30_28 -> m30_16  [color=red, key=2, style=dotted];
m30_28 -> m30_33  [color=red, key=2, style=dotted];
m30_29 -> m30_30  [key=0, style=solid];
m30_29 -> m30_19  [key=2, style=dotted];
m30_23 -> m30_24  [color=green, key=0, style=solid];
m30_23 -> m30_15  [key=2, style=dotted];
m30_23 -> m30_22  [color=green, key=0, style=solid];
m30_23 -> m30_16  [color=green, key=2, style=dotted];
m30_23 -> n12  [color=green, key=2, style=dotted];
m30_30 -> m30_20  [color=blue, key=0, style=bold];
m30_34 -> m30_35  [key=0, style=solid];
m30_35 -> m30_36  [key=0, style=solid];
m30_35 -> m30_31  [key=2, style=dotted];
m30_36 -> m30_37  [key=0, style=solid];
m30_36 -> m30_14  [key=2, style=dotted];
m30_37 -> m30_38  [key=0, style=solid];
m30_37 -> m30_39  [key=2, style=dotted];
m30_38 -> m30_34  [color=blue, key=0, style=bold];
m30_0 -> m30_1  [key=0, style=solid];
m30_1 -> m30_0  [color=blue, key=0, style=bold];
m30_2 -> m30_3  [key=0, style=solid];
m30_3 -> m30_4  [key=0, style=solid];
m30_3 -> m30_13  [key=2, style=dotted];
m30_3 -> m30_6  [color=green, key=1, label=options, style=dashed];
m30_3 -> m30_7  [color=green, key=1, label=options, style=dashed];
m30_3 -> m30_8  [color=green, key=1, label=options, style=dashed];
m30_3 -> m30_9  [color=red, key=1, label=options, style=dashed];
m30_3 -> m30_10  [color=red, key=1, label=options, style=dashed];
m30_3 -> m30_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_3 -> m30_5  [color=green, key=1, label=options, style=dashed];
m30_4 -> m30_5  [color=green, key=0, style=solid];
m30_4 -> m30_14  [key=2, style=dotted];
m30_4 -> m30_16  [color=green, key=2, style=dotted];
m30_4 -> n12  [color=green, key=2, style=dotted];
m30_6 -> m30_7  [color=green, key=0, style=solid];
m30_6 -> m30_16  [color=green, key=2, style=dotted];
m30_6 -> n12  [color=green, key=2, style=dotted];
m30_7 -> m30_8  [color=green, key=0, style=solid];
m30_7 -> m30_16  [color=green, key=2, style=dotted];
m30_7 -> n12  [color=green, key=2, style=dotted];
m30_8 -> m30_9  [color=red, key=0, style=solid];
m30_8 -> m30_16  [color=green, key=2, style=dotted];
m30_8 -> n12  [color=red, key=2, style=dotted];
m30_8 -> m30_11  [color=green, key=0, style=solid];
m30_8 -> m30_18  [color=green, key=2, style=dotted];
m30_9 -> m30_10  [color=red, key=0, style=solid];
m30_9 -> m30_16  [color=red, key=2, style=dotted];
m30_9 -> n12  [color=red, key=2, style=dotted];
m30_10 -> m30_11  [color=red, key=0, style=solid];
m30_10 -> m30_16  [color=red, key=2, style=dotted];
m30_10 -> m30_18  [color=red, key=2, style=dotted];
m30_11 -> m30_12  [key=0, style=solid];
m30_11 -> m30_19  [key=2, style=dotted];
m30_5 -> m30_6  [color=green, key=0, style=solid];
m30_5 -> m30_15  [key=2, style=dotted];
m30_5 -> m30_4  [color=green, key=0, style=solid];
m30_5 -> m30_16  [color=green, key=2, style=dotted];
m30_5 -> n12  [color=green, key=2, style=dotted];
m30_12 -> m30_2  [color=blue, key=0, style=bold];
m30_49 -> m30_50  [key=0, style=solid];
m30_50 -> m30_51  [key=0, style=solid];
m30_50 -> m30_47  [key=2, style=dotted];
m30_51 -> m30_52  [key=0, style=solid];
m30_51 -> m30_14  [key=2, style=dotted];
m30_52 -> m30_53  [key=0, style=solid];
m30_52 -> m30_39  [key=2, style=dotted];
m30_53 -> m30_49  [color=blue, key=0, style=bold];
m30_40 -> m30_41  [key=0, style=solid];
m30_41 -> m30_42  [key=0, style=solid];
m30_41 -> m30_47  [key=2, style=dotted];
m30_41 -> m30_44  [color=red, key=1, label=options, style=dashed];
m30_41 -> m30_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m30_42 -> m30_43  [key=0, style=solid];
m30_42 -> m30_14  [key=2, style=dotted];
m30_42 -> m30_45  [color=green, key=0, style=solid];
m30_42 -> m30_16  [color=green, key=2, style=dotted];
m30_42 -> m30_48  [color=green, key=2, style=dotted];
m30_44 -> m30_45  [color=red, key=0, style=solid];
m30_44 -> m30_16  [color=red, key=2, style=dotted];
m30_44 -> m30_48  [color=red, key=2, style=dotted];
m30_45 -> m30_46  [key=0, style=solid];
m30_45 -> m30_19  [key=2, style=dotted];
m30_43 -> m30_44  [color=red, key=0, style=solid];
m30_43 -> m30_15  [key=2, style=dotted];
m30_43 -> m30_42  [color=green, key=0, style=solid];
m30_46 -> m30_40  [color=blue, key=0, style=bold];
m30_54 -> m30_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_36  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_37  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_43  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_51  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m30_54 -> m30_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m32_16 -> m32_17  [color=green, key=0, style=solid];
m32_17 -> m32_18  [color=green, key=0, style=solid];
m32_17 -> m32_10  [color=green, key=2, style=dotted];
m32_17 -> m32_20  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_21  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_22  [color=green, key=1, label=options, style=dashed];
m32_17 -> m32_23  [color=green, key=1, label=options, style=dashed];
m32_18 -> m32_19  [color=green, key=0, style=solid];
m32_18 -> m32_11  [color=green, key=2, style=dotted];
m32_20 -> m32_21  [color=green, key=0, style=solid];
m32_20 -> m32_13  [color=green, key=2, style=dotted];
m32_20 -> m32_14  [color=green, key=2, style=dotted];
m32_21 -> m32_22  [color=green, key=0, style=solid];
m32_21 -> m32_13  [color=green, key=2, style=dotted];
m32_21 -> m32_25  [color=green, key=2, style=dotted];
m32_22 -> m32_23  [color=green, key=0, style=solid];
m32_22 -> m32_13  [color=green, key=2, style=dotted];
m32_22 -> n12  [color=green, key=2, style=dotted];
m32_23 -> m32_24  [color=green, key=0, style=solid];
m32_23 -> m32_13  [color=green, key=2, style=dotted];
m32_23 -> m32_25  [color=green, key=2, style=dotted];
m32_19 -> m32_20  [color=green, key=0, style=solid];
m32_19 -> m32_12  [color=green, key=2, style=dotted];
m32_24 -> m32_16  [color=blue, key=0, style=bold];
m32_26 -> m32_27  [color=green, key=0, style=solid];
m32_27 -> m32_28  [color=green, key=0, style=solid];
m32_27 -> m32_37  [color=green, key=2, style=dotted];
m32_27 -> m32_30  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_31  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_32  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_33  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_34  [color=green, key=1, label=options, style=dashed];
m32_27 -> m32_35  [color=green, key=1, label=options, style=dashed];
m32_28 -> m32_29  [color=green, key=0, style=solid];
m32_28 -> m32_11  [color=green, key=2, style=dotted];
m32_30 -> m32_31  [color=green, key=0, style=solid];
m32_30 -> m32_13  [color=green, key=2, style=dotted];
m32_30 -> n12  [color=green, key=2, style=dotted];
m32_31 -> m32_32  [color=green, key=0, style=solid];
m32_31 -> m32_13  [color=green, key=2, style=dotted];
m32_31 -> n12  [color=green, key=2, style=dotted];
m32_32 -> m32_33  [color=green, key=0, style=solid];
m32_32 -> m32_13  [color=green, key=2, style=dotted];
m32_32 -> n12  [color=green, key=2, style=dotted];
m32_33 -> m32_34  [color=green, key=0, style=solid];
m32_33 -> m32_13  [color=green, key=2, style=dotted];
m32_33 -> n12  [color=green, key=2, style=dotted];
m32_34 -> m32_35  [color=green, key=0, style=solid];
m32_34 -> m32_13  [color=green, key=2, style=dotted];
m32_34 -> n12  [color=green, key=2, style=dotted];
m32_35 -> m32_36  [color=green, key=0, style=solid];
m32_35 -> m32_13  [color=green, key=2, style=dotted];
m32_35 -> n12  [color=green, key=2, style=dotted];
m32_29 -> m32_30  [color=green, key=0, style=solid];
m32_29 -> m32_12  [color=green, key=2, style=dotted];
m32_36 -> m32_26  [color=blue, key=0, style=bold];
m32_0 -> m32_1  [color=green, key=0, style=solid];
m32_1 -> m32_2  [color=green, key=0, style=solid];
m32_1 -> m32_10  [color=green, key=2, style=dotted];
m32_1 -> m32_4  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_5  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_6  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_7  [color=green, key=1, label=options, style=dashed];
m32_1 -> m32_8  [color=green, key=1, label=options, style=dashed];
m32_2 -> m32_3  [color=green, key=0, style=solid];
m32_2 -> m32_11  [color=green, key=2, style=dotted];
m32_4 -> m32_5  [color=green, key=0, style=solid];
m32_4 -> m32_13  [color=green, key=2, style=dotted];
m32_4 -> m32_14  [color=green, key=2, style=dotted];
m32_5 -> m32_6  [color=green, key=0, style=solid];
m32_5 -> m32_13  [color=green, key=2, style=dotted];
m32_5 -> n12  [color=green, key=2, style=dotted];
m32_6 -> m32_7  [color=green, key=0, style=solid];
m32_6 -> m32_13  [color=green, key=2, style=dotted];
m32_6 -> n12  [color=green, key=2, style=dotted];
m32_7 -> m32_8  [color=green, key=0, style=solid];
m32_7 -> m32_13  [color=green, key=2, style=dotted];
m32_7 -> n12  [color=green, key=2, style=dotted];
m32_8 -> m32_9  [color=green, key=0, style=solid];
m32_8 -> m32_13  [color=green, key=2, style=dotted];
m32_8 -> n12  [color=green, key=2, style=dotted];
m32_3 -> m32_4  [color=green, key=0, style=solid];
m32_3 -> m32_12  [color=green, key=2, style=dotted];
m32_9 -> m32_0  [color=blue, key=0, style=bold];
m32_38 -> m32_39  [color=green, key=0, style=solid];
m32_39 -> m32_40  [color=green, key=0, style=solid];
m32_39 -> m32_37  [color=green, key=2, style=dotted];
m32_40 -> m32_41  [color=green, key=0, style=solid];
m32_40 -> m32_11  [color=green, key=2, style=dotted];
m32_41 -> m32_42  [color=green, key=0, style=solid];
m32_41 -> m32_43  [color=green, key=2, style=dotted];
m32_42 -> m32_38  [color=blue, key=0, style=bold];
m32_44 -> m32_2  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_3  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_18  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_19  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_28  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_29  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_40  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m32_44 -> m32_41  [color=green, key=1, label="CommandLine.Tests.ValueOptionAttributeParsingFixture", style=dashed];
m33_62 -> m33_52  [color=blue, key=0, style=bold];
m33_38 -> m33_13  [key=2, style=dotted];
m33_38 -> m33_40  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_38 -> m33_39  [key=0, style=solid];
m33_19 -> m33_20  [key=0, style=solid];
m33_19 -> m33_33  [key=2, style=dotted];
m33_19 -> m33_22  [color=darkseagreen4, key=1, label=pt, style=dashed];
m33_19 -> m33_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m33_19 -> m33_26  [color=red, key=1, label=pt, style=dashed];
m33_19 -> m33_28  [color=red, key=1, label=pt, style=dashed];
m33_19 -> m33_60  [color=darkseagreen4, key=1, label=pt, style=dashed];
m33_63 -> m33_64  [key=0, style=solid];
m33_67 -> m33_68  [color=red, key=0, style=solid];
m33_67 -> m33_18  [color=green, key=2, style=dotted];
m33_67 -> n11  [color=green, key=2, style=dotted];
m33_67 -> m33_20  [color=green, key=2, style=dotted];
m33_66 -> m33_67  [color=red, key=0, style=solid];
m33_66 -> m33_50  [key=2, style=dotted];
m33_66 -> m33_69  [key=0, style=solid];
m33_68 -> m33_69  [color=green, key=0, style=solid];
m33_68 -> m33_18  [color=green, key=2, style=dotted];
m33_68 -> n11  [color=green, key=2, style=dotted];
m33_68 -> m33_20  [color=green, key=2, style=dotted];
m33_68 -> m33_73  [color=red, key=0, style=solid];
m33_68 -> m33_49  [color=red, key=2, style=dotted];
m33_69 -> m33_70  [color=green, key=0, style=solid];
m33_69 -> m33_18  [color=green, key=2, style=dotted];
m33_69 -> n11  [color=green, key=2, style=dotted];
m33_69 -> m33_20  [color=green, key=2, style=dotted];
m33_65 -> m33_66  [key=0, style=solid];
m33_65 -> m33_16  [key=2, style=dotted];
m33_65 -> m33_70  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m33_65 -> m33_71  [color=red, key=1, label="CommandLine.Core.Specification", style=dashed];
m33_64 -> m33_13  [key=2, style=dotted];
m33_64 -> m33_65  [key=0, style=solid];
m33_70 -> m33_63  [color=blue, key=0, style=bold];
m33_70 -> m33_71  [color=red, key=0, style=solid];
m33_70 -> m33_72  [key=0, style=solid];
m33_70 -> m33_44  [key=2, style=dotted];
m33_32 -> m33_33  [color=green, key=0, style=solid];
m33_32 -> n11  [color=green, key=2, style=dotted];
m33_32 -> m33_21  [color=green, key=2, style=dotted];
m33_0 -> m33_1  [key=0, style=solid];
m33_1 -> m33_2  [color=green, key=0, style=solid];
m33_1 -> m33_4  [key=2, style=dotted];
m33_1 -> m33_8  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_9  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_10  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_11  [color=green, key=1, label=options, style=dashed];
m33_1 -> m33_13  [key=2, style=dotted];
m33_1 -> m33_3  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_2 -> m33_3  [color=green, key=0, style=solid];
m33_2 -> m33_5  [key=2, style=dotted];
m33_2 -> m33_6  [key=2, style=dotted];
m33_2 -> m33_7  [key=2, style=dotted];
m33_2 -> m33_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_2 -> m33_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_2 -> m33_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_2 -> n11  [color=green, key=2, style=dotted];
m33_2 -> m33_15  [color=green, key=2, style=dotted];
m33_3 -> m33_0  [color=blue, key=0, style=bold];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_16  [key=2, style=dotted];
m33_22 -> m33_23  [key=0, style=solid];
m33_22 -> m33_39  [key=2, style=dotted];
m33_22 -> m33_40  [key=2, style=dotted];
m33_23 -> m33_32  [color=green, key=1, label=proof, style=dashed];
m33_23 -> m33_24  [key=0, style=solid];
m33_23 -> m33_35  [key=2, style=dotted];
m33_23 -> m33_36  [key=2, style=dotted];
m33_23 -> m33_26  [color=darkseagreen4, key=1, label=proof, style=dashed];
m33_24 -> m33_32  [color=green, key=1, label=options, style=dashed];
m33_24 -> m33_25  [color=green, key=0, style=solid];
m33_24 -> m33_33  [color=green, key=1, label=options, style=dashed];
m33_24 -> m33_13  [key=2, style=dotted];
m33_24 -> m33_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_24 -> m33_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_24 -> m33_41  [key=2, style=dotted];
m33_24 -> m33_42  [key=2, style=dotted];
m33_24 -> m33_43  [key=2, style=dotted];
m33_24 -> m33_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_31 -> m33_32  [color=green, key=0, style=solid];
m33_31 -> m33_18  [color=green, key=2, style=dotted];
m33_31 -> n11  [color=green, key=2, style=dotted];
m33_31 -> m33_20  [color=green, key=2, style=dotted];
m33_31 -> m33_4  [color=blue, key=0, style=bold];
m33_33 -> m33_34  [color=green, key=0, style=solid];
m33_33 -> n11  [color=green, key=2, style=dotted];
m33_33 -> m33_19  [color=green, key=2, style=dotted];
m33_25 -> m33_26  [color=red, key=0, style=solid];
m33_25 -> n11  [color=green, key=2, style=dotted];
m33_25 -> m33_15  [color=green, key=2, style=dotted];
m33_25 -> m33_28  [color=red, key=0, style=solid];
m33_25 -> m33_44  [key=2, style=dotted];
m33_25 -> m33_45  [key=2, style=dotted];
m33_25 -> m33_46  [key=2, style=dotted];
m33_25 -> m33_41  [key=2, style=dotted];
m33_25 -> m33_47  [key=2, style=dotted];
m33_26 -> m33_27  [color=red, key=0, style=solid];
m33_26 -> m33_48  [color=red, key=2, style=dotted];
m33_26 -> m33_49  [color=red, key=2, style=dotted];
m33_26 -> m33_40  [color=red, key=2, style=dotted];
m33_29 -> m33_30  [color=red, key=0, style=solid];
m33_29 -> m33_18  [color=green, key=2, style=dotted];
m33_29 -> n11  [color=green, key=2, style=dotted];
m33_29 -> m33_20  [color=green, key=2, style=dotted];
m33_29 -> m33_31  [key=0, style=solid];
m33_29 -> m33_41  [key=2, style=dotted];
m33_29 -> m33_46  [key=2, style=dotted];
m33_29 -> m33_4  [key=2, style=dotted];
m33_28 -> m33_29  [color=red, key=0, style=solid];
m33_28 -> m33_17  [key=2, style=dotted];
m33_28 -> m33_50  [color=red, key=2, style=dotted];
m33_28 -> m33_51  [color=red, key=2, style=dotted];
m33_28 -> m33_49  [color=red, key=2, style=dotted];
m33_28 -> m33_40  [color=red, key=2, style=dotted];
m33_28 -> m33_36  [color=red, key=2, style=dotted];
m33_28 -> m33_59  [color=red, key=1, label="lambda expression", style=dashed];
m33_30 -> m33_31  [color=green, key=0, style=solid];
m33_30 -> m33_18  [color=green, key=2, style=dotted];
m33_30 -> n11  [color=green, key=2, style=dotted];
m33_30 -> m33_19  [color=green, key=2, style=dotted];
m33_30 -> m33_29  [color=red, key=0, style=solid];
m33_27 -> m33_28  [color=red, key=0, style=solid];
m33_27 -> m33_16  [key=2, style=dotted];
m33_34 -> m33_22  [color=blue, key=0, style=bold];
m33_6 -> m33_7  [color=green, key=0, style=solid];
m33_6 -> m33_18  [color=green, key=2, style=dotted];
m33_6 -> n11  [color=green, key=2, style=dotted];
m33_6 -> m33_20  [color=green, key=2, style=dotted];
m33_4 -> m33_17  [key=0, style=solid];
m33_4 -> m33_18  [color=crimson, key=0, style=bold];
m33_4 -> m33_22  [color=crimson, key=0, style=bold];
m33_4 -> m33_23  [color=crimson, key=0, style=bold];
m33_4 -> m33_26  [color=red, key=0, style=bold];
m33_4 -> m33_27  [color=crimson, key=0, style=bold];
m33_4 -> m33_28  [color=red, key=0, style=bold];
m33_4 -> m33_30  [color=red, key=0, style=bold];
m33_4 -> m33_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m33_4 -> m33_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m33_4 -> m33_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m33_4 -> m33_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m33_4 -> m33_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m33_4 -> m33_5  [color=green, key=0, style=solid];
m33_17 -> m33_18  [key=0, style=solid];
m33_17 -> m33_19  [key=0, style=solid];
m33_17 -> m33_32  [key=2, style=dotted];
m33_18 -> m33_19  [key=0, style=solid];
m33_20 -> m33_21  [key=0, style=solid];
m33_20 -> m33_34  [key=2, style=dotted];
m33_20 -> m33_35  [key=2, style=dotted];
m33_20 -> m33_36  [key=2, style=dotted];
m33_20 -> m33_37  [key=2, style=dotted];
m33_20 -> m33_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_20 -> m33_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m33_20 -> m33_28  [color=red, key=1, label=taken, style=dashed];
m33_20 -> m33_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m33_21 -> m33_22  [key=0, style=solid];
m33_21 -> m33_24  [key=0, style=solid];
m33_21 -> m33_38  [key=2, style=dotted];
m33_37 -> m33_38  [key=0, style=solid];
m33_42 -> m33_43  [color=green, key=0, style=solid];
m33_42 -> m33_18  [color=green, key=2, style=dotted];
m33_42 -> n11  [color=green, key=2, style=dotted];
m33_42 -> m33_20  [color=green, key=2, style=dotted];
m33_41 -> m33_42  [color=green, key=0, style=solid];
m33_41 -> m33_50  [key=2, style=dotted];
m33_43 -> m33_44  [color=green, key=0, style=solid];
m33_43 -> m33_18  [color=green, key=2, style=dotted];
m33_43 -> n11  [color=green, key=2, style=dotted];
m33_43 -> m33_20  [color=green, key=2, style=dotted];
m33_44 -> m33_45  [color=green, key=0, style=solid];
m33_44 -> m33_18  [color=green, key=2, style=dotted];
m33_44 -> n11  [color=green, key=2, style=dotted];
m33_44 -> m33_20  [color=green, key=2, style=dotted];
m33_45 -> m33_46  [color=green, key=0, style=solid];
m33_45 -> m33_51  [key=2, style=dotted];
m33_46 -> m33_47  [color=green, key=0, style=solid];
m33_46 -> n11  [color=green, key=2, style=dotted];
m33_46 -> m33_21  [color=green, key=2, style=dotted];
m33_40 -> m33_41  [key=0, style=solid];
m33_40 -> m33_49  [key=2, style=dotted];
m33_39 -> m33_45  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m33_39 -> m33_40  [key=0, style=solid];
m33_39 -> m33_48  [key=2, style=dotted];
m33_47 -> m33_37  [color=blue, key=0, style=bold];
m33_58 -> m33_59  [color=green, key=0, style=solid];
m33_58 -> m33_18  [color=green, key=2, style=dotted];
m33_58 -> n11  [color=green, key=2, style=dotted];
m33_58 -> m33_20  [color=green, key=2, style=dotted];
m33_59 -> m33_60  [color=green, key=0, style=solid];
m33_59 -> m33_18  [color=green, key=2, style=dotted];
m33_59 -> n11  [color=green, key=2, style=dotted];
m33_59 -> m33_19  [color=green, key=2, style=dotted];
m33_8 -> m33_9  [color=green, key=0, style=solid];
m33_8 -> n11  [color=green, key=2, style=dotted];
m33_8 -> m33_15  [color=green, key=2, style=dotted];
m33_11 -> m33_12  [color=green, key=0, style=solid];
m33_11 -> n11  [color=green, key=2, style=dotted];
m33_11 -> m33_21  [color=green, key=2, style=dotted];
m33_14 -> m33_15  [key=0, style=solid];
m33_9 -> m33_10  [color=green, key=0, style=solid];
m33_9 -> n11  [color=green, key=2, style=dotted];
m33_9 -> m33_15  [color=green, key=2, style=dotted];
m33_10 -> m33_8  [color=blue, key=0, style=bold];
m33_10 -> m33_11  [color=green, key=0, style=solid];
m33_10 -> n11  [color=green, key=2, style=dotted];
m33_10 -> m33_19  [color=green, key=2, style=dotted];
m33_12 -> m33_13  [key=0, style=solid];
m33_12 -> m33_0  [color=blue, key=0, style=bold];
m33_13 -> m33_11  [color=blue, key=0, style=bold];
m33_15 -> m33_16  [key=0, style=solid];
m33_16 -> m33_14  [color=blue, key=0, style=bold];
m33_60 -> m33_61  [color=green, key=0, style=solid];
m33_60 -> m33_62  [key=2, style=dotted];
m33_60 -> m33_63  [key=2, style=dotted];
m33_60 -> m33_64  [key=2, style=dotted];
m33_60 -> m33_40  [key=2, style=dotted];
m33_60 -> m33_51  [key=2, style=dotted];
m33_52 -> m33_53  [key=0, style=solid];
m33_55 -> m33_56  [key=0, style=solid];
m33_55 -> m33_49  [key=2, style=dotted];
m33_53 -> m33_54  [key=0, style=solid];
m33_53 -> m33_13  [key=2, style=dotted];
m33_53 -> m33_55  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_54 -> m33_52  [color=blue, key=0, style=bold];
m33_54 -> m33_60  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m33_54 -> m33_55  [key=0, style=solid];
m33_54 -> m33_48  [key=2, style=dotted];
m33_56 -> m33_57  [color=green, key=0, style=solid];
m33_56 -> m33_58  [key=2, style=dotted];
m33_56 -> m33_50  [key=2, style=dotted];
m33_57 -> m33_55  [color=blue, key=0, style=bold];
m33_57 -> m33_58  [color=green, key=0, style=solid];
m33_57 -> m33_18  [color=green, key=2, style=dotted];
m33_57 -> n11  [color=green, key=2, style=dotted];
m33_57 -> m33_20  [color=green, key=2, style=dotted];
m33_61 -> m33_59  [color=blue, key=0, style=bold];
m33_61 -> m33_62  [color=green, key=0, style=solid];
m33_61 -> n11  [color=green, key=2, style=dotted];
m33_61 -> m33_21  [color=green, key=2, style=dotted];
m33_75 -> m33_76  [color=green, key=0, style=solid];
m33_75 -> m33_18  [color=green, key=2, style=dotted];
m33_75 -> n11  [color=green, key=2, style=dotted];
m33_75 -> m33_20  [color=green, key=2, style=dotted];
m33_76 -> m33_77  [color=green, key=0, style=solid];
m33_76 -> m33_44  [key=2, style=dotted];
m33_76 -> m33_48  [key=2, style=dotted];
m33_76 -> m33_49  [key=2, style=dotted];
m33_76 -> m33_64  [key=2, style=dotted];
m33_76 -> m33_18  [color=green, key=2, style=dotted];
m33_76 -> n11  [color=green, key=2, style=dotted];
m33_76 -> m33_20  [color=green, key=2, style=dotted];
m33_77 -> m33_75  [color=blue, key=0, style=bold];
m33_77 -> m33_71  [color=blue, key=0, style=bold];
m33_5 -> m33_6  [color=green, key=0, style=solid];
m33_5 -> m33_18  [color=green, key=2, style=dotted];
m33_5 -> n11  [color=green, key=2, style=dotted];
m33_5 -> m33_19  [color=green, key=2, style=dotted];
m33_71 -> m33_72  [key=0, style=solid];
m33_71 -> m33_73  [color=red, key=0, style=solid];
m33_71 -> m33_74  [color=red, key=2, style=dotted];
m33_71 -> m33_49  [color=red, key=2, style=dotted];
m33_74 -> m33_75  [color=green, key=0, style=solid];
m33_74 -> m33_17  [key=2, style=dotted];
m33_73 -> m33_74  [key=0, style=solid];
m33_73 -> m33_16  [key=2, style=dotted];
m33_73 -> m33_65  [color=blue, key=0, style=bold];
m33_72 -> m33_13  [key=2, style=dotted];
m33_72 -> m33_73  [key=0, style=solid];
m33_72 -> m33_64  [key=2, style=dotted];
m33_78 -> m33_79  [key=0, style=solid];
m33_78 -> m33_60  [color=darkseagreen4, key=1, label=pt, style=dashed];
m33_82 -> m33_83  [color=green, key=0, style=solid];
m33_82 -> m33_18  [color=green, key=2, style=dotted];
m33_82 -> n11  [color=green, key=2, style=dotted];
m33_82 -> m33_20  [color=green, key=2, style=dotted];
m33_81 -> m33_82  [color=green, key=0, style=solid];
m33_81 -> m33_17  [key=2, style=dotted];
m33_83 -> m33_84  [color=green, key=0, style=solid];
m33_83 -> m33_18  [color=green, key=2, style=dotted];
m33_83 -> n11  [color=green, key=2, style=dotted];
m33_83 -> m33_20  [color=green, key=2, style=dotted];
m33_84 -> m33_85  [color=green, key=0, style=solid];
m33_84 -> m33_18  [color=green, key=2, style=dotted];
m33_84 -> n11  [color=green, key=2, style=dotted];
m33_84 -> m33_20  [color=green, key=2, style=dotted];
m33_85 -> m33_86  [color=green, key=0, style=solid];
m33_85 -> m33_18  [color=green, key=2, style=dotted];
m33_85 -> n11  [color=green, key=2, style=dotted];
m33_85 -> m33_20  [color=green, key=2, style=dotted];
m33_86 -> m33_87  [color=green, key=0, style=solid];
m33_86 -> m33_18  [color=green, key=2, style=dotted];
m33_86 -> n11  [color=green, key=2, style=dotted];
m33_86 -> m33_20  [color=green, key=2, style=dotted];
m33_87 -> m33_88  [color=green, key=0, style=solid];
m33_87 -> m33_18  [color=green, key=2, style=dotted];
m33_87 -> n11  [color=green, key=2, style=dotted];
m33_87 -> m33_20  [color=green, key=2, style=dotted];
m33_80 -> m33_81  [key=0, style=solid];
m33_80 -> m33_16  [key=2, style=dotted];
m33_79 -> m33_13  [key=2, style=dotted];
m33_79 -> m33_80  [key=0, style=solid];
m33_88 -> m33_78  [color=blue, key=0, style=bold];
m33_7 -> m33_8  [color=green, key=0, style=solid];
m33_7 -> m33_18  [color=green, key=2, style=dotted];
m33_7 -> n11  [color=green, key=2, style=dotted];
m33_7 -> m33_20  [color=green, key=2, style=dotted];
m33_89 -> m33_5  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_6  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_7  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_29  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_30  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_31  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_42  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_43  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_44  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_57  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_58  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_59  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_67  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_68  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_69  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_75  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_76  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_82  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_83  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_84  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_85  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_86  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_87  [color=green, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_28  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_40  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_65  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_66  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_73  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_74  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_80  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m33_89 -> m33_81  [color=darkseagreen4, key=1, label="CommandLine.Tests.VerbsFixture", style=dashed];
m34_10 -> m34_11  [key=0, style=solid];
m34_11 -> m34_12  [key=0, style=solid];
m34_11 -> m34_22  [key=2, style=dotted];
m34_11 -> m34_13  [color=darkseagreen4, key=1, label=options, style=dashed];
m34_12 -> m34_13  [key=0, style=solid];
m34_12 -> m34_23  [key=2, style=dotted];
m34_12 -> m34_15  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m34_13 -> m34_14  [key=0, style=solid];
m34_13 -> m34_24  [key=2, style=dotted];
m34_15 -> m34_16  [key=0, style=solid];
m34_15 -> m34_26  [key=2, style=dotted];
m34_15 -> m34_17  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m34_14 -> m34_15  [key=0, style=solid];
m34_14 -> m34_25  [key=2, style=dotted];
m34_16 -> m34_17  [key=0, style=solid];
m34_16 -> m34_27  [key=2, style=dotted];
m34_17 -> m34_18  [color=red, key=0, style=solid];
m34_17 -> m34_28  [key=2, style=dotted];
m34_17 -> m34_19  [color=red, key=1, label=lines, style=dashed];
m34_17 -> m34_20  [color=red, key=1, label=lines, style=dashed];
m34_18 -> m34_19  [color=red, key=0, style=solid];
m34_18 -> m34_29  [color=red, key=2, style=dotted];
m34_18 -> m34_30  [color=red, key=2, style=dotted];
m34_18 -> n12  [color=red, key=2, style=dotted];
m34_19 -> m34_20  [color=red, key=0, style=solid];
m34_19 -> m34_29  [color=red, key=2, style=dotted];
m34_19 -> m34_30  [color=red, key=2, style=dotted];
m34_19 -> n12  [color=red, key=2, style=dotted];
m34_20 -> m34_21  [color=red, key=0, style=solid];
m34_20 -> m34_29  [color=red, key=2, style=dotted];
m34_20 -> m34_30  [color=red, key=2, style=dotted];
m34_20 -> n12  [color=red, key=2, style=dotted];
m34_21 -> m34_10  [color=blue, key=0, style=bold];
m34_0 -> m34_1  [color=green, key=0, style=solid];
m34_1 -> m34_2  [color=green, key=0, style=solid];
m34_1 -> m34_3  [color=green, key=2, style=dotted];
m34_2 -> m34_0  [color=blue, key=0, style=bold];
m34_32 -> m34_33  [color=green, key=0, style=solid];
m34_33 -> m34_34  [color=green, key=0, style=solid];
m34_33 -> m34_22  [color=green, key=2, style=dotted];
m34_33 -> m34_35  [color=green, key=1, label=options, style=dashed];
m34_34 -> m34_35  [color=green, key=0, style=solid];
m34_34 -> m34_23  [color=green, key=2, style=dotted];
m34_34 -> m34_37  [color=green, key=1, label=testWriter, style=dashed];
m34_35 -> m34_36  [key=0, style=solid];
m34_35 -> m34_24  [key=2, style=dotted];
m34_37 -> m34_38  [key=0, style=solid];
m34_37 -> m34_26  [key=2, style=dotted];
m34_37 -> m34_39  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m34_36 -> m34_37  [key=0, style=solid];
m34_36 -> m34_25  [key=2, style=dotted];
m34_38 -> m34_39  [key=0, style=solid];
m34_38 -> m34_27  [key=2, style=dotted];
m34_39 -> m34_40  [key=0, style=solid];
m34_39 -> m34_28  [key=2, style=dotted];
m34_40 -> m34_32  [color=blue, key=0, style=bold];
m34_3 -> m34_41  [key=0, style=solid];
m34_3 -> m34_43  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m34_41 -> m34_42  [key=0, style=solid];
m34_41 -> m34_22  [key=2, style=dotted];
m34_41 -> m34_43  [color=darkseagreen4, key=1, label=options, style=dashed];
m34_43 -> m34_44  [key=0, style=solid];
m34_43 -> m34_24  [key=2, style=dotted];
m34_42 -> m34_43  [key=0, style=solid];
m34_42 -> m34_23  [key=2, style=dotted];
m34_42 -> m34_45  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m34_45 -> m34_46  [key=0, style=solid];
m34_45 -> m34_26  [key=2, style=dotted];
m34_45 -> m34_47  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m34_44 -> m34_45  [key=0, style=solid];
m34_44 -> m34_25  [key=2, style=dotted];
m34_46 -> m34_47  [key=0, style=solid];
m34_46 -> m34_27  [key=2, style=dotted];
m34_47 -> m34_48  [color=red, key=0, style=solid];
m34_47 -> m34_28  [key=2, style=dotted];
m34_47 -> m34_49  [color=red, key=1, label=lines, style=dashed];
m34_47 -> m34_50  [color=red, key=1, label=lines, style=dashed];
m34_48 -> m34_49  [color=red, key=0, style=solid];
m34_48 -> m34_29  [color=red, key=2, style=dotted];
m34_48 -> m34_30  [color=red, key=2, style=dotted];
m34_48 -> n12  [color=red, key=2, style=dotted];
m34_49 -> m34_50  [color=red, key=0, style=solid];
m34_49 -> m34_29  [color=red, key=2, style=dotted];
m34_49 -> m34_30  [color=red, key=2, style=dotted];
m34_49 -> n12  [color=red, key=2, style=dotted];
m34_50 -> m34_51  [color=red, key=0, style=solid];
m34_50 -> m34_29  [color=red, key=2, style=dotted];
m34_50 -> m34_30  [color=red, key=2, style=dotted];
m34_50 -> n12  [color=red, key=2, style=dotted];
m34_51 -> m34_3  [color=blue, key=0, style=bold];
m34_4 -> m34_5  [key=0, style=solid];
m34_5 -> m34_6  [key=0, style=solid];
m34_5 -> m34_3  [key=2, style=dotted];
m34_6 -> m34_4  [color=blue, key=0, style=bold];
m34_7 -> m34_8  [key=0, style=solid];
m34_8 -> m34_9  [key=0, style=solid];
m34_8 -> m34_3  [key=2, style=dotted];
m34_9 -> m34_7  [color=blue, key=0, style=bold];
m34_52 -> m34_1  [color=green, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_5  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_8  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_13  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_14  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_35  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_36  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_43  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
m34_52 -> m34_44  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.VerbsHelpTextFixture", style=dashed];
}
