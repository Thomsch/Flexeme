digraph  {
m0_37 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m0_10 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m0_11 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="HelpTextTests.cs", label=guardsLookup, span="40-40"];
m0_12 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="HelpTextTests.cs", label="specifications.Any(spec => guard.Item1(spec))", span="42-42"];
m0_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="HelpTextTests.cs", label="return specifications;", span="48-48"];
m0_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="HelpTextTests.cs", label="throw new ApplicationException(guard.Item2);", span="44-44"];
m0_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="38-38"];
m0_35 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m0_34 [cluster="System.Type.ToDescriptorKind()", file="HelpTextTests.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m0_22 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="51-51"];
m0_29 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="specification.Min.MatchJust(out min)\r\n                        && specification.Max.MatchJust(out max)", span="60-61"];
m0_28 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="int max", span="59-59"];
m0_30 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="min >= 0 && max >= 0", span="63-63"];
m0_32 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="return Maybe.Nothing<int>();", span="71-71"];
m0_31 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="return Maybe.Just(max);", span="65-65"];
m0_23 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="specification.ConversionType.ToDescriptorKind()", span="53-53"];
m0_27 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="int min", span="58-58"];
m0_25 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="return Maybe.Just(1);", span="56-56"];
m0_24 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="TypeDescriptorKind.Scalar", span="55-55"];
m0_26 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="TypeDescriptorKind.Sequence", span="57-57"];
m0_33 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="51-51"];
m0_38 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="74-74"];
m0_39 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", color=green, community=0, file="HelpTextTests.cs", label="1: int min", span="76-76"];
m0_40 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="HelpTextTests.cs", label="int max", span="77-77"];
m0_41 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="HelpTextTests.cs", label="specification.Min.MatchJust(out min) && specification.Max.MatchJust(out max)", span="78-78"];
m0_42 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="HelpTextTests.cs", label="return predicate(min, max);", span="80-80"];
m0_43 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="HelpTextTests.cs", label="return false;", span="82-82"];
m0_44 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="74-74"];
m0_36 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m0_18 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="42-42"];
m0_19 [cluster="lambda expression", file="HelpTextTests.cs", label="guard.Item1(spec)", span="42-42"];
m0_20 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="42-42"];
m0_52 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="95-95"];
m0_54 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="specification.Max.MatchJust(out max)", span="98-98"];
m0_53 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="int max", span="97-97"];
m0_55 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="return predicate(max);", span="100-100"];
m0_56 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="return false;", span="102-102"];
m0_57 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="95-95"];
m0_17 [cluster="System.ApplicationException.ApplicationException(string)", file="HelpTextTests.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m0_46 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="85-85"];
m0_48 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="specification.Min.MatchJust(out min)", span="88-88"];
m0_47 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="int min", span="87-87"];
m0_49 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="return predicate(min);", span="90-90"];
m0_50 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="return false;", span="92-92"];
m0_51 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="HelpTextTests.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="85-85"];
m0_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="HelpTextTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m0_16 [cluster="Unk.Any", file="HelpTextTests.cs", label="Entry Unk.Any", span=""];
m0_21 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpTextTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_58 [file="HelpTextTests.cs", label=guard, span=""];
m1_25 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="InstanceBuilder.cs", label="var options = new NullableTypesOptions()", span="73-73"];
m1_26 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-int'' }, options)", span="74-74"];
m1_27 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="InstanceBuilder.cs", label="ResultShouldBeFalse()", span="76-76"];
m1_28 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableIntegerOptionFails()", span="71-71"];
m1_29 [cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceBuilder.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_30 [cluster="CSharpx.Maybe.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="153-153"];
m1_34 [cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", span="163-163"];
m1_31 [cluster="CSharpx.Maybe.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="InstanceBuilder.cs", label="T1 value1", span="155-155"];
m1_32 [cluster="CSharpx.Maybe.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="InstanceBuilder.cs", label="return maybe.MatchJust(out value1) ? Maybe.Just(func(value1)) : Maybe.Nothing<T2>();", span="156-156"];
m1_35 [cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="InstanceBuilder.cs", label="T1 value1", span="165-165"];
m1_36 [cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="InstanceBuilder.cs", label="T2 value2", span="166-166"];
m1_33 [cluster="CSharpx.Maybe.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="InstanceBuilder.cs", label="Exit CSharpx.Maybe.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="153-153"];
m1_37 [cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="InstanceBuilder.cs", label="first.MatchJust(out value1) && second.MatchJust(out value2)", span="167-167"];
m1_38 [cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="InstanceBuilder.cs", label="return Maybe.Just(Tuple.Create(value1, value2));", span="169-169"];
m1_47 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="InstanceBuilder.cs", label="ResultShouldBeFalse()", span="110-110"];
m1_65 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="InstanceBuilder.cs", label="var options = new NullableTypesOptions()", span="141-141"];
m1_146 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceBuilder.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_18 [cluster="CSharpx.Maybe.Just<T>(T)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m1_19 [cluster="CSharpx.Maybe.Just<T>(T)", color=green, community=0, file="InstanceBuilder.cs", label="1: return new Just<T>(value);", span="126-126"];
m1_20 [cluster="CSharpx.Maybe.Just<T>(T)", file="InstanceBuilder.cs", label="Exit CSharpx.Maybe.Just<T>(T)", span="124-124"];
m1_21 [cluster="CSharpx.Maybe.Return<T>(T)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Return<T>(T)", span="134-134"];
m1_22 [cluster="CSharpx.Maybe.Return<T>(T)", file="InstanceBuilder.cs", label="return Equals(value, default(T)) ? Maybe.Nothing<T>() : Maybe.Just(value);", span="136-136"];
m1_16 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="return new Nothing<T>();", span="118-118"];
m1_55 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="123-123"];
m1_12 [cluster="CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.Mocks.NullableTypesOptions.NullableTypesOptions()", span="35-35"];
m1_13 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="InstanceBuilder.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m1_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m1_48 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="105-105"];
m1_49 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", span="114-114"];
m1_50 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="InstanceBuilder.cs", label="var options = new NullableTypesOptions()", span="116-116"];
m1_51 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d9.999'' }, options)", span="117-117"];
m1_53 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="InstanceBuilder.cs", label="options.DoubleValue.Should().Equal(9.999)", span="120-120"];
m1_52 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="InstanceBuilder.cs", label="ResultShouldBeTrue()", span="119-119"];
m1_54 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableDoubleOption()", file="InstanceBuilder.cs", label="options = new NullableTypesOptions()", span="122-122"];
m1_130 [cluster="System.ArgumentException.ArgumentException(string)", file="InstanceBuilder.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_92 [cluster="CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T1>.Bind<T1, T2>(System.Func<T1, CSharpx.Maybe<T2>>)", span="257-257"];
m1_145 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceBuilder.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_24 [cluster="object.Equals(object, object)", file="InstanceBuilder.cs", label="Entry object.Equals(object, object)", span="0-0"];
m1_86 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="274-274"];
m1_87 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="InstanceBuilder.cs", label="return Maybe.Map(maybe, selector);", span="278-278"];
m1_88 [cluster="CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.Select<TSource, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, TResult>)", span="274-274"];
m1_39 [cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="InstanceBuilder.cs", label="return Maybe.Nothing<Tuple<T1, T2>>();", span="171-171"];
m1_40 [cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="InstanceBuilder.cs", label="Exit CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", span="163-163"];
m1_41 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m1_42 [cluster="CSharpx.Maybe.OfEither<TLeft, TRight>(Either<TLeft, TRight>)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.OfEither<TLeft, TRight>(Either<TLeft, TRight>)", span="178-178"];
m1_43 [cluster="CSharpx.Maybe.OfEither<TLeft, TRight>(Either<TLeft, TRight>)", file="InstanceBuilder.cs", label="either.Tag == EitherType.Right", span="180-180"];
m1_23 [cluster="CSharpx.Maybe.Return<T>(T)", file="InstanceBuilder.cs", label="Exit CSharpx.Maybe.Return<T>(T)", span="134-134"];
m1_135 [cluster="CSharpx.MaybeExtensions.MapValueOrDefault<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.MapValueOrDefault<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="377-377"];
m1_136 [cluster="CSharpx.MaybeExtensions.MapValueOrDefault<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="InstanceBuilder.cs", label="T1 value1", span="379-379"];
m1_137 [cluster="CSharpx.MaybeExtensions.MapValueOrDefault<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="InstanceBuilder.cs", label="return maybe.MatchJust(out value1) ? func(value1) : noneValue;", span="380-380"];
m1_138 [cluster="CSharpx.MaybeExtensions.MapValueOrDefault<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.MapValueOrDefault<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="377-377"];
m1_96 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m1_66 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableDoubleOptionFails()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'' }, options)", span="142-142"];
m1_44 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", span="105-105"];
m1_45 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="InstanceBuilder.cs", label="var options = new NullableTypesOptions()", span="107-107"];
m1_46 [cluster="CommandLine.Tests.NullableTypesParsingFixture.PassingNoValueToANullableEnumerationOptionFails()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--enum'' }, options)", span="108-108"];
m1_97 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="292-292"];
m1_94 [cluster="lambda expression", file="InstanceBuilder.cs", label="valueSelector(sourceValue)\n                            .Map(resultValue => resultSelector(sourceValue, resultValue))", span="291-292"];
m1_98 [cluster="lambda expression", file="InstanceBuilder.cs", label="resultSelector(sourceValue, resultValue)", span="292-292"];
m1_93 [cluster="lambda expression", file="InstanceBuilder.cs", label="Entry lambda expression", span="290-292"];
m1_95 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="290-292"];
m1_99 [cluster="lambda expression", file="InstanceBuilder.cs", label="Exit lambda expression", span="292-292"];
m1_17 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Exit CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_139 [cluster="CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", span="386-386"];
m1_140 [cluster="CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="T value", span="388-388"];
m1_141 [cluster="CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="maybe.MatchJust(out value)", span="389-389"];
m1_142 [cluster="CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="return Enumerable.Empty<T>().Concat(new[] { value });", span="391-391"];
m1_143 [cluster="CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="return Enumerable.Empty<T>();", span="393-393"];
m1_144 [cluster="CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.ToEnumerable<T>(CSharpx.Maybe<T>)", span="386-386"];
m1_112 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="326-326"];
m1_113 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="return maybe.Tag == MaybeType.Just;", span="328-328"];
m1_114 [cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="326-326"];
m1_131 [cluster="CSharpx.MaybeExtensions.GetValueOrDefault<T>(CSharpx.Maybe<T>, T)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.GetValueOrDefault<T>(CSharpx.Maybe<T>, T)", span="368-368"];
m1_132 [cluster="CSharpx.MaybeExtensions.GetValueOrDefault<T>(CSharpx.Maybe<T>, T)", file="InstanceBuilder.cs", label="T value", span="370-370"];
m1_133 [cluster="CSharpx.MaybeExtensions.GetValueOrDefault<T>(CSharpx.Maybe<T>, T)", file="InstanceBuilder.cs", label="return maybe.MatchJust(out value) ? value : noneValue;", span="371-371"];
m1_134 [cluster="CSharpx.MaybeExtensions.GetValueOrDefault<T>(CSharpx.Maybe<T>, T)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.GetValueOrDefault<T>(CSharpx.Maybe<T>, T)", span="368-368"];
m1_59 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", file="InstanceBuilder.cs", label="T2 value2", span="218-218"];
m1_60 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", color=green, community=0, file="InstanceBuilder.cs", label="1: maybe.MatchJust(out value1, out value2)", span="219-219"];
m1_61 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", file="InstanceBuilder.cs", label="ifJust(value1, value2)", span="221-221"];
m1_62 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", file="InstanceBuilder.cs", label="return;", span="222-222"];
m1_63 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", file="InstanceBuilder.cs", label="ifNothing()", span="224-224"];
m1_15 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_56 [cluster="System.Action.Invoke()", file="InstanceBuilder.cs", label="Entry System.Action.Invoke()", span="0-0"];
m1_57 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", span="215-215"];
m1_58 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", file="InstanceBuilder.cs", label="T1 value1", span="217-217"];
m1_80 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="options.EnumValue.Should().Equal(FileAccess.Read)", span="164-164"];
m1_81 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m1_82 [cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="InstanceBuilder.cs", label="CommandLine.Tests.NullableTypesParsingFixture", span=""];
m1_115 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="334-334"];
m1_116 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="return maybe.Tag == MaybeType.Nothing;", span="336-336"];
m1_117 [cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="334-334"];
m1_64 [cluster="CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.Match<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>, System.Action)", span="215-215"];
m1_67 [cluster="CSharpx.MaybeExtensions.MatchJust<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, out T1, out T2)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.MatchJust<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, out T1, out T2)", span="230-230"];
m1_68 [cluster="CSharpx.MaybeExtensions.MatchJust<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, out T1, out T2)", file="InstanceBuilder.cs", label="Tuple<T1, T2> value", span="232-232"];
m1_124 [cluster="CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", span="355-355"];
m1_125 [cluster="CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", file="InstanceBuilder.cs", label="T value", span="357-357"];
m1_126 [cluster="CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", file="InstanceBuilder.cs", label="maybe.MatchJust(out value)", span="358-358"];
m1_128 [cluster="CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", file="InstanceBuilder.cs", label="throw exceptionToThrow ?? new ArgumentException(''Value empty.'');", span="362-362"];
m1_127 [cluster="CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", file="InstanceBuilder.cs", label="return value;", span="360-360"];
m1_129 [cluster="CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.FromJustOrFail<T>(CSharpx.Maybe<T>, System.Exception)", span="355-355"];
m1_118 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", span="342-342"];
m1_119 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="T value", span="344-344"];
m1_120 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="maybe.MatchJust(out value)", span="345-345"];
m1_121 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="return value;", span="347-347"];
m1_122 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="return default(T);", span="349-349"];
m1_123 [cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>)", span="342-342"];
m1_7 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="InstanceBuilder.cs", label="options = new NullableTypesOptions()", span="54-54"];
m1_8 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="55-55"];
m1_9 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="InstanceBuilder.cs", label="ResultShouldBeTrue()", span="57-57"];
m1_10 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="InstanceBuilder.cs", label="options.IntegerValue.Should().Be.Null()", span="58-58"];
m1_11 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="InstanceBuilder.cs", label="Exit CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m1_101 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="300-300"];
m1_102 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="InstanceBuilder.cs", label="T value", span="302-302"];
m1_103 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="InstanceBuilder.cs", label="maybe.MatchJust(out value)", span="303-303"];
m1_104 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="InstanceBuilder.cs", label="action(value)", span="305-305"];
m1_105 [cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="300-300"];
m1_89 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="284-284"];
m1_90 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="InstanceBuilder.cs", label="return maybe\n                .Bind(sourceValue =>\n                        valueSelector(sourceValue)\n                            .Map(resultValue => resultSelector(sourceValue, resultValue)));", span="289-292"];
m1_91 [cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="284-284"];
m1_106 [cluster="CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", span="312-312"];
m1_107 [cluster="CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", file="InstanceBuilder.cs", label="T1 value1", span="314-314"];
m1_109 [cluster="CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", file="InstanceBuilder.cs", label="maybe.MatchJust(out value1, out value2)", span="316-316"];
m1_110 [cluster="CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", file="InstanceBuilder.cs", label="action(value1, value2)", span="318-318"];
m1_108 [cluster="CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", file="InstanceBuilder.cs", label="T2 value2", span="315-315"];
m1_111 [cluster="CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.Do<T1, T2>(CSharpx.Maybe<System.Tuple<T1, T2>>, System.Action<T1, T2>)", span="312-312"];
m1_0 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="34-34"];
m1_1 [cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="InstanceBuilder.cs", label="this.tag = tag", span="36-36"];
m1_2 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseNullableIntegerOption()", span="46-46"];
m1_3 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="InstanceBuilder.cs", label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="48-48"];
m1_4 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="InstanceBuilder.cs", label="value = Tag == MaybeType.Just ? ((Just<T>)this).Value : default(T)", span="50-50"];
m1_5 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="InstanceBuilder.cs", label="return Tag == MaybeType.Just;", span="51-51"];
m1_6 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="InstanceBuilder.cs", label="Exit CSharpx.Maybe<T>.MatchJust(out T)", span="48-48"];
m1_69 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="Entry CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", span="148-148"];
m1_70 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="var options = new NullableTypesOptions()", span="150-150"];
m1_73 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="options.StringValue.Should().Equal(''alone'')", span="154-154"];
m1_71 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''alone'' }, options)", span="151-151"];
m1_72 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="ResultShouldBeTrue()", span="153-153"];
m1_74 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="options = new NullableTypesOptions()", span="156-156"];
m1_75 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''-d1.789'', ''--int'', ''10099'', ''-stogether'', ''--enum'', ''Read'' }, options)", span="157-158"];
m1_76 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="ResultShouldBeTrue()", span="160-160"];
m1_77 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="options.DoubleValue.Should().Equal(1.789D)", span="161-161"];
m1_78 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="options.IntegerValue.Should().Equal(10099)", span="162-162"];
m1_79 [cluster="CommandLine.Tests.NullableTypesParsingFixture.ParseStringOptionAndNullableValueTypes()", file="InstanceBuilder.cs", label="options.StringValue.Should().Equal(''together'')", span="163-163"];
m1_100 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m1_83 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="InstanceBuilder.cs", label="Entry CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="265-265"];
m1_84 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="InstanceBuilder.cs", label="return Maybe.Map(maybe, func);", span="267-267"];
m1_85 [cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="InstanceBuilder.cs", label="Exit CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="265-265"];
m1_147 [file="InstanceBuilder.cs", label="CSharpx.Maybe<T>", span=""];
m1_148 [file="InstanceBuilder.cs", label="CSharpx.Just<T>", span=""];
m1_149 [file="InstanceBuilder.cs", label="System.Func<TSource, CSharpx.Maybe<TValue>>", span=""];
m1_150 [file="InstanceBuilder.cs", label="System.Func<TSource, TValue, TResult>", span=""];
m1_151 [file="InstanceBuilder.cs", label=TSource, span=""];
m3_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m3_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="InstanceChooser.cs", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m3_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m3_4 [cluster="CommandLine.Text.HelpText.ToString()", file="InstanceChooser.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="436-436"];
m3_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="InstanceChooser.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33"];
m3_5 [cluster="Unk.Equal", file="InstanceChooser.cs", label="Entry Unk.Equal", span=""];
m3_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m3_62 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceChooser.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="111-111"];
m3_65 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceChooser.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="120-120"];
m3_66 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceChooser.cs", label="Assert.False(result.Errors.Any())", span="121-121"];
m3_63 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceChooser.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''add'', ''-p'', ''--'', ''--strange-fn'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="114-116"];
m3_64 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceChooser.cs", label="Assert.IsType<AddOptions>(result.Value)", span="119-119"];
m3_67 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash_in_verbs_scenario()", span="103-103"];
m3_68 [cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7"];
m3_69 [cluster="Unk.>", file="InstanceChooser.cs", label="Entry Unk.>", span=""];
m3_70 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="111-111"];
m3_71 [cluster="lambda expression", file="InstanceChooser.cs", label="with.EnableDashDash = true", span="111-111"];
m3_72 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="111-111"];
m3_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m3_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="InstanceChooser.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="159-159"];
m3_126 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooser.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
m3_127 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceChooser.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
m3_128 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceChooser.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
m3_130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="InstanceChooser.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="408-408"];
m3_129 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooser.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
m3_131 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="207-230"];
m3_132 [cluster="lambda expression", file="InstanceChooser.cs", label="err.Tag", span="209-209"];
m3_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="250-250"];
m3_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="265-265"];
m3_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="269-269"];
m3_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="270-270"];
m3_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="271-271"];
m3_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="272-272"];
m3_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="273-273"];
m3_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="274-274"];
m3_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="275-275"];
m3_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="253-259"];
m3_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="262-262"];
m3_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="267-267"];
m3_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="268-268"];
m3_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="250-250"];
m3_35 [cluster="lambda expression", file="InstanceChooser.cs", label="with.HelpWriter = writer", span="49-49"];
m3_39 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceChooser.cs", label="var sut = new Parser()", span="68-68"];
m3_36 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="49-49"];
m3_37 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options()", span="61-61"];
m3_38 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceChooser.cs", label="var expectedOptions = new FakeOptions\r\n                {\r\n                    StringValue = ''strvalue'', IntSequence = new[] { 1, 2, 3 }\r\n                }", span="64-67"];
m3_40 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceChooser.cs", label="var result = sut.ParseArguments<FakeOptions>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="71-71"];
m3_41 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceChooser.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions)", span="74-74"];
m3_42 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceChooser.cs", label="Assert.False(result.Errors.Any())", span="75-75"];
m3_43 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options()", span="61-61"];
m3_44 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m3_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="306-306"];
m3_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="320-320"];
m3_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="324-324"];
m3_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="325-325"];
m3_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="326-326"];
m3_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="327-327"];
m3_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="317-317"];
m3_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="322-322"];
m3_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="323-323"];
m3_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                verbTypes,\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="311-314"];
m3_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="309-310"];
m3_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="306-306"];
m3_45 [cluster="CommandLine.Parser.Parser()", file="InstanceChooser.cs", label="Entry CommandLine.Parser.Parser()", span="25-25"];
m3_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=green, community=0, file="InstanceChooser.cs", label="0: var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="94-97"];
m3_194 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceChooser.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m3_60 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="InstanceChooser.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56"];
m3_61 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m3_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m3_125 [cluster="Unk.Equals", file="InstanceChooser.cs", label="Entry Unk.Equals", span=""];
m3_33 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="InstanceChooser.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m3_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m3_17 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceChooser.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="33-33"];
m3_122 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="199-199"];
m3_20 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceChooser.cs", label="Assert.True(text.Length > 0)", span="40-40"];
m3_118 [cluster="Unk.ContainSingle", file="InstanceChooser.cs", label="Entry Unk.ContainSingle", span=""];
m3_32 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="45-45"];
m3_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="245-245"];
m3_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90"];
m3_48 [cluster="Unk.False", file="InstanceChooser.cs", label="Entry Unk.False", span=""];
m3_49 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="80-80"];
m3_50 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceChooser.cs", label="var expectedOptions = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''astring'',\r\n                    LongValue = 20L,\r\n                    StringSequence = new[] { ''--aaa'', ''-b'', ''--ccc'' },\r\n                    IntValue = 30\r\n                }", span="83-89"];
m3_51 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceChooser.cs", label="var sut = new Parser(with => with.EnableDashDash = true)", span="90-90"];
m3_52 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceChooser.cs", label="var result = sut.ParseArguments<FakeOptionsWithValues>(\r\n                new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="93-94"];
m3_53 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", color=red, community=0, file="InstanceChooser.cs", label="0: result.Value.ShouldBeEquivalentTo(expectedOptions)", span="97-97"];
m3_54 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceChooser.cs", label="Assert.False(result.Errors.Any())", span="98-98"];
m3_22 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="InstanceChooser.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="141-141"];
m3_23 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="33-33"];
m3_24 [cluster="lambda expression", file="InstanceChooser.cs", label="with.HelpWriter = writer", span="33-33"];
m3_25 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="33-33"];
m3_26 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", span="45-45"];
m3_27 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceChooser.cs", label="var writer = new StringWriter()", span="48-48"];
m3_28 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceChooser.cs", label="var sut = new Parser(with => with.HelpWriter = writer)", span="49-49"];
m3_29 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceChooser.cs", label="sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new string[] { })", span="52-52"];
m3_30 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceChooser.cs", label="var text = writer.ToString()", span="55-55"];
m3_31 [cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario_using_generic_overload()", file="InstanceChooser.cs", label="Assert.True(text.Length > 0)", span="56-56"];
m3_77 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="126-126"];
m3_80 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="var result = sut.ParseArguments(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions))", span="137-139"];
m3_81 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="142-142"];
m3_78 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="var expectedOptions = new CloneOptions\r\n                {\r\n                    Quiet = true,\r\n                    Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n                }", span="129-133"];
m3_79 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="var sut = new Parser()", span="134-134"];
m3_82 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="143-143"];
m3_83 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="Assert.False(result.Errors.Any())", span="144-144"];
m3_84 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="126-126"];
m3_86 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="143-143"];
m3_87 [cluster="lambda expression", file="InstanceChooser.cs", label="o.RespectingRuntimeTypes()", span="143-143"];
m3_88 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="143-143"];
m3_167 [cluster="string.StartsWith(string, System.StringComparison)", file="InstanceChooser.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m3_90 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceChooser.cs", label="var expectedOptions = new CloneOptions\r\n            {\r\n                Quiet = true,\r\n                Urls = new[] { ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' }\r\n            }", span="152-156"];
m3_93 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceChooser.cs", label="Assert.IsType<CloneOptions>(result.Value)", span="164-164"];
m3_94 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceChooser.cs", label="result.Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="165-165"];
m3_91 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceChooser.cs", label="var sut = new Parser()", span="157-157"];
m3_92 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceChooser.cs", label="var result = sut.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="160-161"];
m3_95 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceChooser.cs", label="Assert.False(result.Errors.Any())", span="166-166"];
m3_96 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="149-149"];
m3_97 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="165-165"];
m3_98 [cluster="lambda expression", file="InstanceChooser.cs", label="o.RespectingRuntimeTypes()", span="165-165"];
m3_99 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="165-165"];
m3_100 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="171-171"];
m3_101 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceChooser.cs", label="var expectedOptions = new FakeImmutableOptions(\r\n                ''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="174-175"];
m3_133 [cluster="lambda expression", file="InstanceChooser.cs", label="ErrorType.BadFormatTokenError", span="211-211"];
m3_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m3_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m3_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m3_34 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m3_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="InstanceChooser.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121"];
m3_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="InstanceChooser.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119"];
m3_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m3_73 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m3_74 [cluster="string.Split(string[], System.StringSplitOptions)", file="InstanceChooser.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m3_75 [cluster="Unk.Should", file="InstanceChooser.cs", label="Entry Unk.Should", span=""];
m3_123 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceChooser.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m3_119 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="InstanceChooser.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m3_120 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceChooser.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m3_121 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceChooser.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m3_124 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="InstanceChooser.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m3_135 [cluster="lambda expression", file="InstanceChooser.cs", label="ErrorType.MissingValueOptionError", span="213-213"];
m3_134 [cluster="lambda expression", file="InstanceChooser.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="212-212"];
m3_136 [cluster="lambda expression", file="InstanceChooser.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="214-214"];
m3_138 [cluster="lambda expression", file="InstanceChooser.cs", label=writer, span=""];
m3_140 [cluster="lambda expression", file="InstanceChooser.cs", label=expectedError, span=""];
m3_142 [cluster="lambda expression", file="InstanceChooser.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="220-220"];
m3_144 [cluster="lambda expression", file="InstanceChooser.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="222-222"];
m3_148 [cluster="lambda expression", file="InstanceChooser.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="226-226"];
m3_137 [cluster="lambda expression", file="InstanceChooser.cs", label=writer, span=""];
m3_139 [cluster="lambda expression", file="InstanceChooser.cs", label=writer, span=""];
m3_141 [cluster="lambda expression", file="InstanceChooser.cs", label=help, span=""];
m3_143 [cluster="lambda expression", file="InstanceChooser.cs", label="ErrorType.SequenceOutOfRangeError", span="221-221"];
m3_145 [cluster="lambda expression", file="InstanceChooser.cs", label="ErrorType.NoVerbSelectedError", span="223-223"];
m3_147 [cluster="lambda expression", file="InstanceChooser.cs", label="ErrorType.BadVerbSelectedError", span="225-225"];
m3_149 [cluster="lambda expression", file="InstanceChooser.cs", label="throw new InvalidOperationException();", span="228-228"];
m3_146 [cluster="lambda expression", file="InstanceChooser.cs", label="return ''ERR no-verb-selected'';", span="224-224"];
m3_150 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="207-230"];
m3_76 [cluster="Unk.RespectingRuntimeTypes", file="InstanceChooser.cs", label="Entry Unk.RespectingRuntimeTypes", span=""];
m3_166 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="InstanceChooser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="257-257"];
m3_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m3_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="InstanceChooser.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79"];
m3_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="InstanceChooser.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="332-332"];
m3_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="InstanceChooser.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m3_21 [cluster="string.ToNotEmptyLines()", file="InstanceChooser.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m3_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="InstanceChooser.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116"];
m3_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="238-238"];
m3_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="239-239"];
m3_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="240-240"];
m3_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="243-243"];
m3_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="241-241"];
m3_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="242-242"];
m3_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="244-244"];
m3_117 [cluster="Unk.HaveCount", file="InstanceChooser.cs", label="Entry Unk.HaveCount", span=""];
m3_168 [cluster="Unk.True", file="InstanceChooser.cs", label="Entry Unk.True", span=""];
m3_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m3_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111"];
m3_192 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceChooser.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_89 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m3_102 [cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceChooser.cs", label="var sut = new Parser()", span="176-176"];
m3_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="InstanceChooser.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m3_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="280-280"];
m3_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="294-294"];
m3_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="298-298"];
m3_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="299-299"];
m3_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="300-300"];
m3_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="301-301"];
m3_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="291-291"];
m3_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="296-296"];
m3_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="297-297"];
m3_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="283-288"];
m3_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="280-280"];
m3_151 [cluster="System.InvalidOperationException.InvalidOperationException()", file="InstanceChooser.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m3_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m3_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var lines = errorsText.ToNotEmptyLines()", span="236-236"];
m3_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="192-206"];
m3_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m3_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="207-230"];
m3_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="InstanceChooser.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="233-233"];
m3_193 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m4_11 [cluster="CommandLine.Tests.Fakes.OptionsWithTwoArrays.OptionsWithTwoArrays()", file="ParserResult.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithTwoArrays.OptionsWithTwoArrays()", span="2-2"];
m4_15 [cluster="Unk.BeTrue", file="ParserResult.cs", label="Entry Unk.BeTrue", span=""];
m4_13 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ParserResult.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141"];
m4_16 [cluster="Unk.HaveCount", file="ParserResult.cs", label="Entry Unk.HaveCount", span=""];
m4_12 [cluster="CommandLine.Parser.Parser()", file="ParserResult.cs", label="Entry CommandLine.Parser.Parser()", span="55-55"];
m4_0 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="Entry CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", span="16-16"];
m4_1 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="var options = new OptionsWithTwoArrays()", span="19-19"];
m4_2 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="var parser = new Parser()", span="20-20"];
m4_4 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="var result = parser.ParseArguments(argumets, options)", span="27-27"];
m4_6 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="options.Headers.Should().HaveCount(c => c == 4)", span="31-31"];
m4_7 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", color=red, community=0, file="ParserResult.cs", label="1: options.Headers.Should().ContainInOrder(new uint[] { 1, 2, 3, 4 })", span="32-32"];
m4_8 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", color=red, community=0, file="ParserResult.cs", label="0: options.Content.Should().HaveCount(c => c == 4)", span="33-33"];
m4_9 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="options.Content.Should().ContainInOrder(new uint[] { 5, 6, 7, 8 })", span="34-34"];
m4_3 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="var argumets = new[] { ''--source'', @''d:/document.docx'', ''--output'', @''d:/document.xlsx'',\r\n                    ''--headers'', ''1'', ''2'', ''3'', ''4'',              // first array\r\n                    ''--content'', ''5'', ''6'', ''7'', ''8'', ''--verbose''  // second array\r\n                }", span="21-24"];
m4_5 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="result.Should().BeTrue()", span="30-30"];
m4_10 [cluster="CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", file="ParserResult.cs", label="Exit CommandLine.Tests.Unit.Attributes.OptionArrayAttributeFixture.Should_correctly_parse_two_consecutive_arrays()", span="16-16"];
m4_21 [cluster="lambda expression", file="ParserResult.cs", label="Entry lambda expression", span="33-33"];
m4_18 [cluster="lambda expression", file="ParserResult.cs", label="Entry lambda expression", span="31-31"];
m4_19 [cluster="lambda expression", file="ParserResult.cs", label="c == 4", span="31-31"];
m4_20 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="31-31"];
m4_22 [cluster="lambda expression", color=red, community=0, file="ParserResult.cs", label="0: c == 4", span="33-33"];
m4_23 [cluster="lambda expression", file="ParserResult.cs", label="Exit lambda expression", span="33-33"];
m4_14 [cluster="Unk.Should", file="ParserResult.cs", label="Entry Unk.Should", span=""];
m4_17 [cluster="Unk.ContainInOrder", file="ParserResult.cs", label="Entry Unk.ContainInOrder", span=""];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_10 -> m0_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m0_11 -> m0_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_14  [key=0, style=solid];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label=guard, style=dashed];
m0_12 -> m0_11  [key=0, style=solid];
m0_12 -> m0_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_16  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_13 -> m0_17  [key=2, style=dotted];
m0_15 -> m0_10  [color=blue, key=0, style=bold];
m0_22 -> m0_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_29 -> m0_36  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_32  [key=0, style=solid];
m0_29 -> m0_31  [color=darkseagreen4, key=1, label=max, style=dashed];
m0_28 -> m0_29  [key=0, style=solid];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_32  [key=0, style=solid];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_37  [key=2, style=dotted];
m0_31 -> m0_33  [key=0, style=solid];
m0_31 -> m0_35  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_26  [key=0, style=solid];
m0_23 -> m0_34  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_25 -> m0_33  [key=0, style=solid];
m0_25 -> m0_35  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_33 -> m0_22  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_38 -> m0_41  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_38 -> m0_42  [color=darkseagreen4, key=1, label="System.Func<int, int, bool>", style=dashed];
m0_39 -> m0_40  [color=green, key=0, style=solid];
m0_40 -> m0_41  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [key=0, style=solid];
m0_41 -> m0_36  [key=2, style=dotted];
m0_42 -> m0_44  [key=0, style=solid];
m0_42 -> m0_45  [key=2, style=dotted];
m0_43 -> m0_44  [key=0, style=solid];
m0_44 -> m0_38  [color=blue, key=0, style=bold];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_21  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_18  [color=blue, key=0, style=bold];
m0_52 -> m0_54  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_55  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m0_54 -> m0_36  [key=2, style=dotted];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_55 -> m0_57  [key=0, style=solid];
m0_55 -> m0_21  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_57 -> m0_52  [color=blue, key=0, style=bold];
m0_46 -> m0_48  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_49  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m0_48 -> m0_36  [key=2, style=dotted];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_50  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid];
m0_49 -> m0_51  [key=0, style=solid];
m0_49 -> m0_21  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_51 -> m0_46  [color=blue, key=0, style=bold];
m0_58 -> m0_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_27  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m1_25 -> m1_12  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_13  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_3  [key=2, style=dotted];
m1_27 -> m1_29  [key=2, style=dotted];
m1_27 -> m1_15  [key=2, style=dotted];
m1_27 -> m1_27  [color=darkseagreen4, key=1, label=value1, style=dashed];
m1_27 -> m1_23  [key=2, style=dotted];
m1_28 -> m1_25  [color=blue, key=0, style=bold];
m1_28 -> m1_24  [color=blue, key=0, style=bold];
m1_29 -> m1_30  [key=0, style=solid];
m1_30 -> m1_12  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_30 -> m1_32  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m1_34 -> m1_12  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m1_31 -> m1_13  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_14  [key=2, style=dotted];
m1_32 -> m1_3  [key=2, style=dotted];
m1_32 -> m1_29  [key=2, style=dotted];
m1_32 -> m1_18  [key=2, style=dotted];
m1_32 -> m1_15  [key=2, style=dotted];
m1_32 -> m1_32  [color=darkseagreen4, key=1, label=value1, style=dashed];
m1_35 -> m1_13  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_14  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_15  [key=2, style=dotted];
m1_33 -> m1_16  [key=2, style=dotted];
m1_33 -> m1_30  [color=blue, key=0, style=bold];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_15  [key=2, style=dotted];
m1_37 -> m1_17  [key=2, style=dotted];
m1_37 -> m1_39  [key=0, style=solid];
m1_37 -> m1_3  [key=2, style=dotted];
m1_38 -> m1_29  [color=blue, key=0, style=bold];
m1_38 -> m1_40  [key=0, style=solid];
m1_38 -> m1_41  [key=2, style=dotted];
m1_38 -> m1_18  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_23  [key=2, style=dotted];
m1_65 -> m1_12  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_18 -> m1_19  [color=green, key=0, style=solid];
m1_19 -> m1_20  [color=green, key=0, style=solid];
m1_19 -> m1_12  [color=green, key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_13  [key=2, style=dotted];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=2, style=dotted];
m1_22 -> m1_18  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=2, style=dotted];
m1_22 -> m1_15  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_10  [key=2, style=dotted];
m1_55 -> m1_13  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_14 -> m1_12  [color=blue, key=0, style=bold];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_50  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_48 -> m1_51  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
m1_48 -> m1_53  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m1_48 -> m1_44  [color=blue, key=0, style=bold];
m1_49 -> m1_50  [key=0, style=solid];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_53  [key=0, style=solid];
m1_50 -> m1_3  [key=2, style=dotted];
m1_50 -> m1_12  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=2, style=dotted];
m1_51 -> m1_13  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_56  [key=2, style=dotted];
m1_53 -> m1_15  [key=2, style=dotted];
m1_53 -> m1_16  [key=2, style=dotted];
m1_52 -> m1_54  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_14  [key=2, style=dotted];
m1_54 -> m1_48  [color=blue, key=0, style=bold];
m1_54 -> m1_12  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_24 -> m1_25  [key=0, style=solid];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_30  [key=2, style=dotted];
m1_88 -> m1_86  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_15  [key=2, style=dotted];
m1_40 -> m1_12  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_34  [color=blue, key=0, style=bold];
m1_41 -> m1_13  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_23  [key=2, style=dotted];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label="Either<TLeft, TRight>", style=dashed];
m1_43 -> m1_39  [color=blue, key=0, style=bold];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_23 -> m1_21  [color=blue, key=0, style=bold];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T1>", style=dashed];
m1_136 -> m1_137  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_3  [key=2, style=dotted];
m1_137 -> m1_29  [key=2, style=dotted];
m1_137 -> m1_137  [color=darkseagreen4, key=1, label=value1, style=dashed];
m1_138 -> m1_135  [color=blue, key=0, style=bold];
m1_66 -> m1_13  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_44 -> m1_46  [key=0, style=solid];
m1_44 -> m1_47  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_15  [key=2, style=dotted];
m1_45 -> m1_12  [key=2, style=dotted];
m1_46 -> m1_42  [color=blue, key=0, style=bold];
m1_46 -> m1_13  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_29  [key=2, style=dotted];
m1_94 -> m1_96  [key=2, style=dotted];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_100  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_98  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m1_95 -> m1_93  [color=blue, key=0, style=bold];
m1_99 -> m1_97  [color=blue, key=0, style=bold];
m1_17 -> m1_15  [color=blue, key=0, style=bold];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_141  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_140 -> m1_141  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_143  [key=0, style=solid];
m1_141 -> m1_3  [key=2, style=dotted];
m1_142 -> m1_144  [key=0, style=solid];
m1_142 -> m1_145  [key=2, style=dotted];
m1_142 -> m1_146  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=2, style=dotted];
m1_144 -> m1_139  [color=blue, key=0, style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_114 -> m1_112  [color=blue, key=0, style=bold];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_133  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_132 -> m1_133  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_3  [key=2, style=dotted];
m1_133 -> m1_133  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_134 -> m1_131  [color=blue, key=0, style=bold];
m1_59 -> m1_60  [color=green, key=0, style=solid];
m1_60 -> m1_61  [color=green, key=0, style=solid];
m1_60 -> m1_12  [color=green, key=2, style=dotted];
m1_60 -> m1_63  [key=0, style=solid];
m1_60 -> m1_65  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_13  [key=2, style=dotted];
m1_61 -> m1_66  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_23  [key=2, style=dotted];
m1_62 -> m1_64  [key=0, style=solid];
m1_63 -> m1_59  [color=blue, key=0, style=bold];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_56  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_14  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_15  [key=2, style=dotted];
m1_57 -> m1_17  [key=2, style=dotted];
m1_57 -> m1_60  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Tuple<T1, T2>>", style=dashed];
m1_57 -> m1_61  [color=darkseagreen4, key=1, label="System.Action<T1, T2>", style=dashed];
m1_57 -> m1_63  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m1_58 -> m1_49  [color=blue, key=0, style=bold];
m1_58 -> m1_59  [key=0, style=solid];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_15  [key=2, style=dotted];
m1_80 -> m1_16  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_25  [key=2, style=dotted];
m1_81 -> m1_69  [color=blue, key=0, style=bold];
m1_82 -> m1_80  [color=blue, key=0, style=bold];
m1_82 -> m1_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_61  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_9  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_26  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_31  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_32  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_35  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_36  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_41  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_47  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_51  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_55  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_62  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_66  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_67  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_71  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_72  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_75  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_82 -> m1_76  [color=darkseagreen4, key=1, label="CommandLine.Tests.NullableTypesParsingFixture", style=dashed];
m1_115 -> m1_116  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_117 -> m1_115  [color=blue, key=0, style=bold];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_57  [color=blue, key=0, style=bold];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_23  [key=2, style=dotted];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Tuple<T1, T2>>", style=dashed];
m1_68 -> m1_64  [color=blue, key=0, style=bold];
m1_68 -> m1_69  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_126  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_124 -> m1_128  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m1_125 -> m1_126  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_128  [key=0, style=solid];
m1_126 -> m1_3  [key=2, style=dotted];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_130  [key=2, style=dotted];
m1_127 -> m1_129  [key=0, style=solid];
m1_129 -> m1_124  [color=blue, key=0, style=bold];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_119 -> m1_120  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=0, style=solid];
m1_120 -> m1_3  [key=2, style=dotted];
m1_121 -> m1_123  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_123 -> m1_118  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_12  [key=2, style=dotted];
m1_7 -> m1_10  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_13  [key=2, style=dotted];
m1_9 -> m1_7  [color=blue, key=0, style=bold];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_14  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_15  [key=2, style=dotted];
m1_10 -> m1_17  [key=2, style=dotted];
m1_11 -> m1_10  [color=blue, key=0, style=bold];
m1_11 -> m1_2  [color=blue, key=0, style=bold];
m1_101 -> m1_102  [key=0, style=solid];
m1_101 -> m1_103  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_101 -> m1_104  [color=darkseagreen4, key=1, label="System.Action<T>", style=dashed];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_105  [key=0, style=solid];
m1_103 -> m1_3  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_55  [key=2, style=dotted];
m1_105 -> m1_101  [color=blue, key=0, style=bold];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_94  [color=darkseagreen4, key=1, label="System.Func<TSource, CSharpx.Maybe<TValue>>", style=dashed];
m1_89 -> m1_98  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_92  [key=2, style=dotted];
m1_90 -> m1_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_91 -> m1_89  [color=blue, key=0, style=bold];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_109  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Tuple<T1, T2>>", style=dashed];
m1_106 -> m1_110  [color=darkseagreen4, key=1, label="System.Action<T1, T2>", style=dashed];
m1_107 -> m1_108  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_111  [key=0, style=solid];
m1_109 -> m1_65  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_66  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_111 -> m1_106  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_12  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_4 -> m1_13  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [color=darkseagreen4, key=1, label="out T", style=dashed];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_14  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_15  [key=2, style=dotted];
m1_6 -> m1_16  [key=2, style=dotted];
m1_6 -> m1_3  [color=blue, key=0, style=bold];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_73  [key=0, style=solid];
m1_69 -> m1_3  [key=2, style=dotted];
m1_69 -> m1_71  [color=darkseagreen4, key=1, label=value, style=dashed];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_12  [key=2, style=dotted];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_76  [color=darkseagreen4, key=1, label="out T1", style=dashed];
m1_73 -> m1_15  [key=2, style=dotted];
m1_73 -> m1_16  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_13  [key=2, style=dotted];
m1_72 -> m1_76  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_14  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label="out T2", style=dashed];
m1_74 -> m1_12  [key=2, style=dotted];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_74 -> m1_78  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_74 -> m1_79  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_74 -> m1_80  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_13  [key=2, style=dotted];
m1_76 -> m1_67  [color=blue, key=0, style=bold];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_14  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_15  [key=2, style=dotted];
m1_77 -> m1_16  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_21  [key=2, style=dotted];
m1_78 -> m1_15  [key=2, style=dotted];
m1_78 -> m1_16  [key=2, style=dotted];
m1_79 -> m1_77  [color=blue, key=0, style=bold];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_15  [key=2, style=dotted];
m1_79 -> m1_16  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_30  [key=2, style=dotted];
m1_85 -> m1_83  [color=blue, key=0, style=bold];
m1_147 -> m1_1  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_147 -> m1_4  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_147 -> m1_5  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_147 -> m1_8  [color=darkseagreen4, key=1, label="CSharpx.Maybe<T>", style=dashed];
m1_148 -> m1_13  [color=darkseagreen4, key=1, label="CSharpx.Just<T>", style=dashed];
m1_149 -> m1_94  [color=darkseagreen4, key=1, label="System.Func<TSource, CSharpx.Maybe<TValue>>", style=dashed];
m1_150 -> m1_94  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m1_150 -> m1_98  [color=darkseagreen4, key=1, label="System.Func<TSource, TValue, TResult>", style=dashed];
m1_151 -> m1_98  [color=darkseagreen4, key=1, label=TSource, style=dashed];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_1 -> m3_4  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_10  [key=2, style=dotted];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_9  [key=2, style=dotted];
m3_3 -> m3_47  [color=green, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_6 -> m3_7  [key=0, style=solid];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_8  [key=2, style=dotted];
m3_62 -> m3_71  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m3_65 -> m3_33  [key=2, style=dotted];
m3_65 -> m3_66  [key=0, style=solid];
m3_65 -> m3_73  [key=2, style=dotted];
m3_65 -> m3_46  [key=2, style=dotted];
m3_66 -> m3_4  [key=2, style=dotted];
m3_66 -> m3_67  [key=0, style=solid];
m3_66 -> m3_74  [key=2, style=dotted];
m3_66 -> m3_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_66 -> m3_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_66 -> m3_70  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_66 -> m3_71  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_66 -> m3_47  [key=2, style=dotted];
m3_66 -> m3_48  [key=2, style=dotted];
m3_63 -> m3_65  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_63 -> m3_66  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_63 -> m3_17  [key=2, style=dotted];
m3_63 -> m3_60  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_22  [key=2, style=dotted];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_69  [key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_67 -> m3_75  [key=2, style=dotted];
m3_67 -> m3_76  [key=2, style=dotted];
m3_67 -> m3_60  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_75  [key=2, style=dotted];
m3_68 -> m3_76  [key=2, style=dotted];
m3_69 -> m3_70  [key=0, style=solid];
m3_69 -> m3_75  [key=2, style=dotted];
m3_69 -> m3_76  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_75  [key=2, style=dotted];
m3_70 -> m3_76  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_75  [key=2, style=dotted];
m3_71 -> m3_76  [key=2, style=dotted];
m3_72 -> m3_62  [color=blue, key=0, style=bold];
m3_72 -> m3_70  [color=blue, key=0, style=bold];
m3_8 -> m3_4  [key=2, style=dotted];
m3_8 -> m3_21  [key=2, style=dotted];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_75  [key=2, style=dotted];
m3_85 -> m3_76  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_7  [key=2, style=dotted];
m3_127 -> m3_135  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_127 -> m3_130  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_8  [key=2, style=dotted];
m3_128 -> m3_135  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_10  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_9  [key=2, style=dotted];
m3_131 -> m3_132  [key=0, style=solid];
m3_131 -> m3_116  [key=2, style=dotted];
m3_131 -> m3_133  [key=2, style=dotted];
m3_131 -> m3_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_131 -> m3_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_131 -> m3_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_131 -> m3_140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_131 -> m3_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_131 -> m3_144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_131 -> m3_148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_132 -> m3_126  [color=blue, key=0, style=bold];
m3_132 -> m3_133  [key=0, style=solid];
m3_132 -> m3_135  [key=0, style=solid];
m3_132 -> m3_137  [key=0, style=solid];
m3_132 -> m3_139  [key=0, style=solid];
m3_132 -> m3_141  [key=0, style=solid];
m3_132 -> m3_143  [key=0, style=solid];
m3_132 -> m3_145  [key=0, style=solid];
m3_132 -> m3_147  [key=0, style=solid];
m3_132 -> m3_149  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_155 -> m3_4  [key=2, style=dotted];
m3_155 -> m3_21  [key=2, style=dotted];
m3_155 -> m3_34  [key=2, style=dotted];
m3_155 -> m3_156  [key=0, style=solid];
m3_155 -> m3_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_155 -> m3_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_155 -> m3_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_155 -> m3_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_155 -> m3_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_155 -> m3_162  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_155 -> m3_163  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_155 -> m3_164  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_158 -> m3_5  [key=2, style=dotted];
m3_158 -> m3_159  [key=0, style=solid];
m3_159 -> m3_5  [key=2, style=dotted];
m3_159 -> m3_160  [key=0, style=solid];
m3_160 -> m3_5  [key=2, style=dotted];
m3_160 -> m3_161  [key=0, style=solid];
m3_161 -> m3_5  [key=2, style=dotted];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_5  [key=2, style=dotted];
m3_162 -> m3_163  [key=0, style=solid];
m3_163 -> m3_5  [key=2, style=dotted];
m3_163 -> m3_164  [key=0, style=solid];
m3_164 -> m3_5  [key=2, style=dotted];
m3_164 -> m3_165  [key=0, style=solid];
m3_153 -> m3_32  [key=2, style=dotted];
m3_153 -> m3_154  [key=0, style=solid];
m3_153 -> m3_117  [key=2, style=dotted];
m3_153 -> m3_119  [key=2, style=dotted];
m3_153 -> m3_125  [key=2, style=dotted];
m3_153 -> m3_121  [key=2, style=dotted];
m3_154 -> m3_155  [key=0, style=solid];
m3_154 -> m3_166  [key=2, style=dotted];
m3_156 -> m3_157  [key=0, style=solid];
m3_156 -> m3_167  [key=2, style=dotted];
m3_156 -> m3_168  [key=2, style=dotted];
m3_157 -> m3_158  [key=0, style=solid];
m3_157 -> m3_167  [key=2, style=dotted];
m3_157 -> m3_168  [key=2, style=dotted];
m3_165 -> m3_152  [color=blue, key=0, style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_5  [key=2, style=dotted];
m3_39 -> m3_45  [key=2, style=dotted];
m3_36 -> m3_3  [key=2, style=dotted];
m3_36 -> m3_19  [key=2, style=dotted];
m3_36 -> m3_45  [key=2, style=dotted];
m3_36 -> m3_33  [key=2, style=dotted];
m3_36 -> m3_20  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_34  [color=blue, key=0, style=bold];
m3_37 -> m3_39  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_37 -> m3_4  [key=2, style=dotted];
m3_37 -> m3_21  [key=2, style=dotted];
m3_37 -> m3_34  [key=2, style=dotted];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_40  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_37 -> m3_41  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_37 -> m3_42  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_37 -> m3_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_38 -> m3_39  [key=0, style=solid];
m3_38 -> m3_5  [key=2, style=dotted];
m3_38 -> m3_44  [key=2, style=dotted];
m3_38 -> m3_41  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m3_40 -> m3_23  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>> verbs", style=bold];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_5  [key=2, style=dotted];
m3_40 -> m3_9  [key=2, style=dotted];
m3_40 -> m3_42  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_41 -> m3_5  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_46  [key=2, style=dotted];
m3_42 -> m3_5  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_10  [color=darkorchid, key=3, label="Parameter variable System.StringComparer nameComparer", style=bold];
m3_42 -> m3_47  [key=2, style=dotted];
m3_42 -> m3_48  [key=2, style=dotted];
m3_43 -> m3_5  [key=2, style=dotted];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_37  [color=blue, key=0, style=bold];
m3_44 -> m3_35  [color=blue, key=0, style=bold];
m3_180 -> m3_181  [key=0, style=solid];
m3_184 -> m3_4  [key=2, style=dotted];
m3_184 -> m3_21  [key=2, style=dotted];
m3_184 -> m3_34  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_184 -> m3_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_184 -> m3_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_184 -> m3_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_184 -> m3_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_187 -> m3_5  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_188 -> m3_5  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_189 -> m3_5  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_190 -> m3_5  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_166  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_167  [key=2, style=dotted];
m3_185 -> m3_168  [key=2, style=dotted];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_167  [key=2, style=dotted];
m3_186 -> m3_168  [key=2, style=dotted];
m3_182 -> m3_183  [key=0, style=solid];
m3_182 -> m3_194  [key=2, style=dotted];
m3_182 -> m3_118  [key=2, style=dotted];
m3_182 -> m3_129  [key=2, style=dotted];
m3_181 -> m3_182  [key=0, style=solid];
m3_181 -> m3_192  [key=2, style=dotted];
m3_181 -> m3_193  [key=2, style=dotted];
m3_191 -> m3_180  [color=blue, key=0, style=bold];
m3_47 -> m3_48  [color=green, key=0, style=solid];
m3_47 -> m3_3  [color=green, key=2, style=dotted];
m3_47 -> m3_19  [color=green, key=2, style=dotted];
m3_47 -> m3_45  [color=green, key=2, style=dotted];
m3_47 -> m3_33  [color=green, key=2, style=dotted];
m3_47 -> m3_20  [color=green, key=2, style=dotted];
m3_47 -> m3_39  [color=green, key=3, label="Parameter variable CommandLine.Error[] errors", style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_61 -> m3_62  [key=0, style=solid];
m3_61 -> m3_68  [key=2, style=dotted];
m3_61 -> m3_65  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m3_7 -> m3_19  [key=2, style=dotted];
m3_7 -> m3_20  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_16  [key=2, style=dotted];
m3_7 -> m3_17  [key=2, style=dotted];
m3_7 -> m3_18  [key=2, style=dotted];
m3_10 -> m3_5  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_8  [key=2, style=dotted];
m3_17 -> m3_24  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m3_122 -> m3_123  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_11  [key=2, style=dotted];
m3_32 -> m3_26  [color=blue, key=0, style=bold];
m3_115 -> m3_5  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_46 -> m3_47  [color=green, key=0, style=solid];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_4  [key=2, style=dotted];
m3_48 -> m3_21  [key=2, style=dotted];
m3_48 -> m3_34  [key=2, style=dotted];
m3_48 -> m3_50  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_48 -> m3_51  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_48 -> m3_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_48 -> m3_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_5  [key=2, style=dotted];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_5  [key=2, style=dotted];
m3_50 -> m3_56  [key=2, style=dotted];
m3_50 -> m3_53  [color=red, key=1, label=expectedOptions, style=dashed];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_5  [key=2, style=dotted];
m3_51 -> m3_8  [key=2, style=dotted];
m3_51 -> m3_58  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m3_52 -> m3_53  [color=red, key=0, style=solid];
m3_52 -> m3_5  [key=2, style=dotted];
m3_52 -> m3_9  [key=2, style=dotted];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_53 -> m3_54  [color=red, key=0, style=solid];
m3_53 -> m3_5  [key=2, style=dotted];
m3_53 -> m3_46  [color=red, key=2, style=dotted];
m3_54 -> m3_46  [color=blue, key=0, style=bold];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_47  [key=2, style=dotted];
m3_54 -> m3_48  [key=2, style=dotted];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_3  [key=2, style=dotted];
m3_23 -> m3_19  [key=2, style=dotted];
m3_23 -> m3_33  [key=2, style=dotted];
m3_23 -> m3_20  [key=2, style=dotted];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_32  [key=2, style=dotted];
m3_24 -> m3_4  [key=2, style=dotted];
m3_24 -> m3_21  [key=2, style=dotted];
m3_24 -> m3_34  [key=2, style=dotted];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_25 -> m3_5  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_26 -> m3_5  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_27 -> m3_5  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_7  [key=2, style=dotted];
m3_27 -> m3_35  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_27 -> m3_30  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_28 -> m3_5  [key=2, style=dotted];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_8  [key=2, style=dotted];
m3_28 -> m3_35  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m3_29 -> m3_5  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_33  [key=2, style=dotted];
m3_30 -> m3_5  [key=2, style=dotted];
m3_30 -> m3_8  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>> tokenizer", style=bold];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_10  [key=2, style=dotted];
m3_31 -> m3_22  [color=blue, key=0, style=bold];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_11  [key=2, style=dotted];
m3_77 -> m3_78  [key=0, style=solid];
m3_80 -> m3_33  [key=2, style=dotted];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_89  [key=2, style=dotted];
m3_80 -> m3_22  [key=2, style=dotted];
m3_80 -> m3_82  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_80 -> m3_83  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_81 -> m3_4  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_74  [key=2, style=dotted];
m3_81 -> m3_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_81 -> m3_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_81 -> m3_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_81 -> m3_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_81 -> m3_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_81 -> m3_69  [key=2, style=dotted];
m3_78 -> m3_80  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_78 -> m3_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_78 -> m3_17  [key=2, style=dotted];
m3_78 -> m3_60  [key=2, style=dotted];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_85  [key=2, style=dotted];
m3_78 -> m3_82  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_45  [key=2, style=dotted];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_75  [key=2, style=dotted];
m3_82 -> m3_76  [key=2, style=dotted];
m3_82 -> m3_46  [key=2, style=dotted];
m3_82 -> m3_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_75  [key=2, style=dotted];
m3_83 -> m3_76  [key=2, style=dotted];
m3_83 -> m3_47  [key=2, style=dotted];
m3_83 -> m3_48  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_75  [key=2, style=dotted];
m3_84 -> m3_76  [key=2, style=dotted];
m3_84 -> m3_77  [color=blue, key=0, style=bold];
m3_86 -> m3_87  [key=0, style=solid];
m3_86 -> m3_75  [key=2, style=dotted];
m3_86 -> m3_76  [key=2, style=dotted];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_75  [key=2, style=dotted];
m3_87 -> m3_76  [key=2, style=dotted];
m3_88 -> m3_77  [color=blue, key=0, style=bold];
m3_88 -> m3_86  [color=blue, key=0, style=bold];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_85  [key=2, style=dotted];
m3_90 -> m3_94  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m3_93 -> m3_19  [key=2, style=dotted];
m3_93 -> m3_33  [key=2, style=dotted];
m3_93 -> m3_20  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_102  [key=2, style=dotted];
m3_93 -> m3_69  [key=2, style=dotted];
m3_94 -> m3_4  [key=2, style=dotted];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_74  [key=2, style=dotted];
m3_94 -> m3_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_94 -> m3_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_94 -> m3_46  [key=2, style=dotted];
m3_91 -> m3_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_91 -> m3_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_60  [key=2, style=dotted];
m3_91 -> m3_45  [key=2, style=dotted];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_33  [key=2, style=dotted];
m3_92 -> m3_94  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_92 -> m3_95  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_75  [key=2, style=dotted];
m3_95 -> m3_76  [key=2, style=dotted];
m3_95 -> m3_47  [key=2, style=dotted];
m3_95 -> m3_48  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_75  [key=2, style=dotted];
m3_96 -> m3_76  [key=2, style=dotted];
m3_96 -> m3_89  [color=blue, key=0, style=bold];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_75  [key=2, style=dotted];
m3_97 -> m3_76  [key=2, style=dotted];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_75  [key=2, style=dotted];
m3_98 -> m3_76  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_75  [key=2, style=dotted];
m3_99 -> m3_76  [key=2, style=dotted];
m3_99 -> m3_97  [color=blue, key=0, style=bold];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_75  [key=2, style=dotted];
m3_100 -> m3_76  [key=2, style=dotted];
m3_101 -> m3_90  [color=blue, key=0, style=bold];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_107  [key=2, style=dotted];
m3_101 -> m3_104  [color=darkseagreen4, key=1, label=expectedOptions, style=dashed];
m3_133 -> m3_134  [key=0, style=solid];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_5  [key=2, style=dotted];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_5  [key=2, style=dotted];
m3_14 -> m3_12  [color=blue, key=0, style=bold];
m3_14 -> m3_5  [key=2, style=dotted];
m3_14 -> m3_15  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_5  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_4  [key=2, style=dotted];
m3_57 -> m3_21  [key=2, style=dotted];
m3_57 -> m3_34  [key=2, style=dotted];
m3_59 -> m3_57  [color=blue, key=0, style=bold];
m3_59 -> m3_55  [color=blue, key=0, style=bold];
m3_73 -> m3_74  [key=0, style=solid];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_76  [key=2, style=dotted];
m3_75 -> m3_73  [color=blue, key=0, style=bold];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_125  [key=2, style=dotted];
m3_119 -> m3_120  [key=0, style=solid];
m3_120 -> m3_121  [key=0, style=solid];
m3_121 -> m3_119  [color=blue, key=0, style=bold];
m3_124 -> m3_122  [color=blue, key=0, style=bold];
m3_135 -> m3_136  [key=0, style=solid];
m3_134 -> m3_135  [key=0, style=solid];
m3_134 -> m3_150  [key=0, style=solid];
m3_136 -> m3_134  [color=blue, key=0, style=bold];
m3_136 -> m3_150  [key=0, style=solid];
m3_138 -> m3_150  [key=0, style=solid];
m3_138 -> m3_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_140 -> m3_150  [key=0, style=solid];
m3_140 -> m3_123  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m3_142 -> m3_150  [key=0, style=solid];
m3_144 -> m3_150  [key=0, style=solid];
m3_148 -> m3_150  [key=0, style=solid];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_13  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_139 -> m3_140  [key=0, style=solid];
m3_139 -> m3_35  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_141 -> m3_142  [key=0, style=solid];
m3_141 -> m3_135  [color=darkseagreen4, key=1, label=help, style=dashed];
m3_143 -> m3_144  [key=0, style=solid];
m3_145 -> m3_146  [key=0, style=solid];
m3_147 -> m3_148  [key=0, style=solid];
m3_149 -> m3_150  [key=0, style=solid];
m3_149 -> m3_151  [key=2, style=dotted];
m3_146 -> m3_150  [key=0, style=solid];
m3_150 -> m3_131  [color=blue, key=0, style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_6  [color=blue, key=0, style=bold];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_7  [key=2, style=dotted];
m3_16 -> m3_24  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_16 -> m3_19  [color=darkseagreen4, key=1, label=writer, style=dashed];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_10  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_22  [key=2, style=dotted];
m3_21 -> m3_15  [color=blue, key=0, style=bold];
m3_56 -> m3_33  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_60  [key=2, style=dotted];
m3_56 -> m3_61  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_5  [key=2, style=dotted];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_115  [key=2, style=dotted];
m3_109 -> m3_113  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m3_109 -> m3_123  [color=darkseagreen4, key=1, label=expectedError, style=dashed];
m3_109 -> m3_5  [key=2, style=dotted];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_45  [key=2, style=dotted];
m3_110 -> m3_5  [key=2, style=dotted];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_116  [key=2, style=dotted];
m3_113 -> m3_118  [key=2, style=dotted];
m3_113 -> m3_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_113 -> m3_5  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_9  [key=2, style=dotted];
m3_111 -> m3_113  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_111 -> m3_5  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_116  [key=2, style=dotted];
m3_112 -> m3_117  [key=2, style=dotted];
m3_112 -> m3_119  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_112 -> m3_5  [key=2, style=dotted];
m3_114 -> m3_108  [color=blue, key=0, style=bold];
m3_114 -> m3_5  [key=2, style=dotted];
m3_114 -> m3_115  [key=0, style=solid];
m3_11 -> m3_1  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo parsingCulture", style=bold];
m3_11 -> m3_5  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_55 -> m3_49  [color=blue, key=0, style=bold];
m3_55 -> m3_56  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_45  [key=2, style=dotted];
m3_9 -> m3_5  [key=2, style=dotted];
m3_9 -> m3_0  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> arguments", style=bold];
m3_9 -> m3_10  [key=0, style=solid];
m3_169 -> m3_170  [key=0, style=solid];
m3_172 -> m3_4  [key=2, style=dotted];
m3_172 -> m3_21  [key=2, style=dotted];
m3_172 -> m3_34  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_172 -> m3_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_172 -> m3_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_172 -> m3_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_172 -> m3_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_175 -> m3_5  [key=2, style=dotted];
m3_175 -> m3_176  [key=0, style=solid];
m3_176 -> m3_5  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_177 -> m3_5  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_178 -> m3_5  [key=2, style=dotted];
m3_178 -> m3_179  [key=0, style=solid];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_166  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_167  [key=2, style=dotted];
m3_173 -> m3_168  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_167  [key=2, style=dotted];
m3_174 -> m3_168  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_117  [key=2, style=dotted];
m3_170 -> m3_118  [key=2, style=dotted];
m3_170 -> m3_129  [key=2, style=dotted];
m3_179 -> m3_169  [color=blue, key=0, style=bold];
m3_116 -> m3_103  [color=blue, key=0, style=bold];
m3_107 -> m3_21  [key=2, style=dotted];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_107 -> m3_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_46  [key=2, style=dotted];
m3_104 -> m3_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m3_104 -> m3_117  [key=2, style=dotted];
m3_104 -> m3_119  [key=2, style=dotted];
m3_104 -> m3_125  [key=2, style=dotted];
m3_104 -> m3_121  [key=2, style=dotted];
m3_104 -> m3_118  [key=2, style=dotted];
m3_104 -> m3_120  [key=2, style=dotted];
m3_104 -> m3_122  [key=2, style=dotted];
m3_104 -> m3_123  [key=2, style=dotted];
m3_104 -> m3_124  [key=2, style=dotted];
m3_104 -> m3_126  [key=2, style=dotted];
m3_104 -> m3_127  [key=2, style=dotted];
m3_104 -> m3_128  [key=2, style=dotted];
m3_104 -> m3_129  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_9  [key=2, style=dotted];
m3_103 -> m3_105  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_105 -> m3_106  [key=0, style=solid];
m3_105 -> m3_47  [key=2, style=dotted];
m3_105 -> m3_48  [key=2, style=dotted];
m3_105 -> m3_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_105 -> m3_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_105 -> m3_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_105 -> m3_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_105 -> m3_140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_105 -> m3_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_105 -> m3_144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_105 -> m3_148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_106 -> m3_100  [color=blue, key=0, style=bold];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_130  [key=2, style=dotted];
m4_12 -> m4_7  [color=red, key=3, label="Property variable System.Collections.Generic.IEnumerable<System.Type> VerbTypes", style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_11  [key=2, style=dotted];
m4_1 -> m4_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_1 -> m4_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_1 -> m4_7  [color=red, key=1, label=options, style=dashed];
m4_1 -> m4_8  [color=red, key=1, label=options, style=dashed];
m4_1 -> m4_9  [color=darkseagreen4, key=1, label=options, style=dashed];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_12  [key=2, style=dotted];
m4_2 -> m4_4  [color=darkseagreen4, key=1, label=parser, style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_13  [key=2, style=dotted];
m4_6 -> m4_7  [color=red, key=0, style=solid];
m4_6 -> m4_14  [key=2, style=dotted];
m4_6 -> m4_16  [key=2, style=dotted];
m4_6 -> m4_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_7 -> m4_8  [color=red, key=0, style=solid];
m4_7 -> m4_14  [color=red, key=2, style=dotted];
m4_7 -> m4_17  [color=red, key=2, style=dotted];
m4_8 -> m4_9  [color=red, key=0, style=solid];
m4_8 -> m4_14  [color=red, key=2, style=dotted];
m4_8 -> m4_16  [color=red, key=2, style=dotted];
m4_8 -> m4_21  [color=red, key=1, label="lambda expression", style=dashed];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_14  [key=2, style=dotted];
m4_9 -> m4_17  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_14  [key=2, style=dotted];
m4_5 -> m4_15  [key=2, style=dotted];
m4_10 -> m4_0  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [color=red, key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_19 -> m4_20  [key=0, style=solid];
m4_20 -> m4_18  [color=blue, key=0, style=bold];
m4_22 -> m4_23  [color=red, key=0, style=solid];
m4_23 -> m4_21  [color=blue, key=0, style=bold];
}
