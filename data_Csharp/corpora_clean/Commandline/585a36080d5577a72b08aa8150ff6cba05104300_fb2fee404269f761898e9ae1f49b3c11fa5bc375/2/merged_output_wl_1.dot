digraph  {
m0_46 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return Enumerable.Empty<Error>();", span="113-113"];
m0_47 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="98-114"];
m0_48 [cluster="Unk.Where", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Where", span=""];
m0_49 [cluster="Unk.Any", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Any", span=""];
m0_50 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m0_51 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Entry lambda expression", span="101-101"];
m0_52 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="sp.Specification.TargetType == TargetType.Sequence", span="101-101"];
m0_53 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="101-101"];
m0_54 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Entry lambda expression", span="102-102"];
m0_16 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="26-45"];
m0_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150"];
m0_22 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpOptionAttributeFixture.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_23 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="0: return specProps =>\r\n            {\r\n                var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification;\r\n                var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct();\r\n                var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification;\r\n                var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification);\r\n                return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());\r\n            };", span="50-93"];
m0_24 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="48-48"];
m0_25 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Entry lambda expression", span="50-93"];
m0_26 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="var requiredWithValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsJust()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    select sp.Specification", span="52-58"];
m0_27 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="var setWithRequiredValue = (\r\n                    from s in requiredWithValue\r\n                    let o = (OptionSpecification)s\r\n                    where o.SetName.Length > 0\r\n                    select o.SetName)\r\n                        .Distinct()", span="59-64"];
m0_28 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="var requiredWithoutValue = from sp in specProps\r\n                    where sp.Specification.IsOption()\r\n                    where sp.Specification.Required\r\n                    where sp.Value.IsNothing()\r\n                    let o = (OptionSpecification)sp.Specification\r\n                    where o.SetName.Length > 0\r\n                    where setWithRequiredValue.ContainsIfNotEmpty(o.SetName)\r\n                    select sp.Specification", span="65-72"];
m0_29 [cluster="lambda expression", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="0: var missing =\r\n                    requiredWithoutValue\r\n                        .Except(requiredWithValue)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsOption()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            let o = (OptionSpecification)sp.Specification\r\n                            where o.SetName.Length == 0\r\n                            select sp.Specification)\r\n                        .Concat(\r\n                            from sp in specProps\r\n                            where sp.Specification.IsValue()\r\n                            where sp.Specification.Required\r\n                            where sp.Value.IsNothing()\r\n                            select sp.Specification)", span="73-89"];
m0_30 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return\r\n                    from sp in missing\r\n                    select new MissingRequiredOptionError(sp.FromSpecification());", span="90-92"];
m0_31 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="50-93"];
m0_62 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="117-117"];
m0_63 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Entry lambda expression", span="119-137"];
m0_64 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="121-123"];
m0_65 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="124-128"];
m0_66 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="129-132"];
m0_67 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="133-135"];
m0_68 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return errors;", span="136-136"];
m0_69 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="119-137"];
m0_70 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m0_71 [cluster="Unk.UniqueName", file="HelpOptionAttributeFixture.cs", label="Entry Unk.UniqueName", span=""];
m0_72 [cluster="Unk.DefaultIfEmpty", file="HelpOptionAttributeFixture.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m0_77 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="124-124"];
m0_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="sut.MaximumDisplayWidth = 40", span="151-151"];
m0_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152"];
m0_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155"];
m0_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156"];
m0_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157"];
m0_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[4].Should().Be(''                After'')", span="158-158"];
m0_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="159-159"];
m0_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m0_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[7].Should().Be(''                456789 After'')", span="161-161"];
m0_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146"];
m0_117 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m0_193 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpOptionAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_168 [cluster="Unk.True", file="HelpOptionAttributeFixture.cs", label="Entry Unk.True", span=""];
m0_74 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpOptionAttributeFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m0_119 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m0_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="436-436"];
m0_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m0_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m0_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="250-250"];
m0_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="253-259"];
m0_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="262-262"];
m0_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="265-265"];
m0_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="267-267"];
m0_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="268-268"];
m0_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="269-269"];
m0_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="270-270"];
m0_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="271-271"];
m0_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="272-272"];
m0_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="273-273"];
m0_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="274-274"];
m0_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="275-275"];
m0_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="250-250"];
m0_167 [cluster="string.StartsWith(string, System.StringComparison)", file="HelpOptionAttributeFixture.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m0_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m0_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="1: Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="82-82"];
m0_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''Triangle'', lines[3])", span="83-83"];
m0_35 [cluster="Unk.Except", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Except", span=""];
m0_36 [cluster="Unk.Concat", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Concat", span=""];
m0_37 [cluster="CommandLine.Core.Specification.IsValue()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m0_38 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m0_39 [cluster="Unk.FromSpecification", file="HelpOptionAttributeFixture.cs", label="Entry Unk.FromSpecification", span=""];
m0_42 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Entry lambda expression", span="98-114"];
m0_43 [cluster="lambda expression", color=green, community=0, file="HelpOptionAttributeFixture.cs", label="0: var options = specProps\r\n                        .Where(sp => sp.Specification.TargetType == TargetType.Sequence)\r\n                        .Where(sp => sp.Value.IsJust())\r\n                        .Where(sp =>\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="100-106"];
m0_44 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="options.Any()", span="107-107"];
m0_123 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m0_45 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return\r\n                            from s in options\r\n                            select new SequenceOutOfRangeError(s.Specification.FromSpecification());", span="109-111"];
m0_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m0_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="var sut = new HelpText(''Heading Info.'')", span="170-170"];
m0_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="sut.MaximumDisplayWidth = 40", span="171-171"];
m0_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174"];
m0_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177"];
m0_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[1].Should().Be(''Before '')", span="178-178"];
m0_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179"];
m0_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[3].Should().Be(''012 After'')", span="180-180"];
m0_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181"];
m0_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182"];
m0_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183"];
m0_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166"];
m0_0 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m0_1 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="HelpOptionAttributeFixture.cs", label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21"];
m0_2 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m0_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="306-306"];
m0_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="309-310"];
m0_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                verbTypes,\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="311-314"];
m0_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="317-317"];
m0_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="320-320"];
m0_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="322-322"];
m0_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="323-323"];
m0_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="324-324"];
m0_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="325-325"];
m0_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="326-326"];
m0_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="327-327"];
m0_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="306-306"];
m0_194 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m0_130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="408-408"];
m0_151 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpOptionAttributeFixture.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m0_34 [cluster="Unk.ContainsIfNotEmpty", file="HelpOptionAttributeFixture.cs", label="Entry Unk.ContainsIfNotEmpty", span=""];
m0_192 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpOptionAttributeFixture.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_33 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="352-352"];
m0_127 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="346-346"];
m0_3 [cluster="System.Collections.Generic.List<T>.List()", file="HelpOptionAttributeFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_55 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="sp.Value.IsJust()", span="102-102"];
m0_56 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="102-102"];
m0_57 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Entry lambda expression", span="103-105"];
m0_58 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="(sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())", span="104-105"];
m0_59 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="103-105"];
m0_19 [cluster="Unk.Count", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Count", span=""];
m0_129 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="372-372"];
m0_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m0_61 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m0_125 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m0_75 [cluster="Unk.Should", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Should", span=""];
m0_132 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="err.Tag", span="209-209"];
m0_134 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="212-212"];
m0_136 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="214-214"];
m0_138 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="216-216"];
m0_140 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="218-218"];
m0_142 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="220-220"];
m0_144 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="222-222"];
m0_148 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="226-226"];
m0_131 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Entry lambda expression", span="207-230"];
m0_133 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.BadFormatTokenError", span="211-211"];
m0_135 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.MissingValueOptionError", span="213-213"];
m0_137 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.UnknownOptionError", span="215-215"];
m0_139 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.MissingRequiredOptionError", span="217-217"];
m0_141 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.MutuallyExclusiveSetError", span="219-219"];
m0_143 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.SequenceOutOfRangeError", span="221-221"];
m0_145 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.NoVerbSelectedError", span="223-223"];
m0_147 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="ErrorType.BadVerbSelectedError", span="225-225"];
m0_149 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="throw new InvalidOperationException();", span="228-228"];
m0_146 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="return ''ERR no-verb-selected'';", span="224-224"];
m0_150 [cluster="lambda expression", file="HelpOptionAttributeFixture.cs", label="Exit lambda expression", span="207-230"];
m0_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", color=red, community=0, file="HelpOptionAttributeFixture.cs", label="0: Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m0_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m0_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", color=red, community=0, file="HelpOptionAttributeFixture.cs", label="1: Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m0_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m0_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m0_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m0_76 [cluster="Unk.Be", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Be", span=""];
m0_73 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m0_60 [cluster="Unk.FromJust", file="HelpOptionAttributeFixture.cs", label="Entry Unk.FromJust", span=""];
m0_120 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m0_5 [cluster="Unk.Equal", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m0_102 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m0_126 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="410-410"];
m0_17 [cluster="CommandLine.Core.Specification.IsOption()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m0_89 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m0_122 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m0_18 [cluster="Unk.IsJust", file="HelpOptionAttributeFixture.cs", label="Entry Unk.IsJust", span=""];
m0_166 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="257-257"];
m0_20 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m0_124 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m0_21 [cluster="Unk.FromOptionSpecification", file="HelpOptionAttributeFixture.cs", label="Entry Unk.FromOptionSpecification", span=""];
m0_118 [cluster="CommandLine.NullInstance.NullInstance()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m0_121 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m0_32 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m0_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m0_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="192-206"];
m0_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="207-230"];
m0_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="233-233"];
m0_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var lines = errorsText.ToNotEmptyLines()", span="236-236"];
m0_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="238-238"];
m0_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="239-239"];
m0_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="240-240"];
m0_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="241-241"];
m0_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="242-242"];
m0_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="243-243"];
m0_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="244-244"];
m0_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="245-245"];
m0_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189"];
m0_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="280-280"];
m0_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var fakeResult = new NotParsed<object>(\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="283-288"];
m0_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="291-291"];
m0_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="294-294"];
m0_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="296-296"];
m0_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="297-297"];
m0_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="298-298"];
m0_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="299-299"];
m0_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="300-300"];
m0_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="301-301"];
m0_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="280-280"];
m0_128 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="357-357"];
m1_134 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", span="268-268"];
m1_140 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="lines[3].Should().Be(''  -s, --something    Input something here.'')", span="282-282"];
m1_139 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="281-281"];
m1_138 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="279-279"];
m1_137 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="277-277"];
m1_135 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", span="270-274"];
m1_136 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="275-275"];
m1_141 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Add_options_with_dashes()", span="268-268"];
m1_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="65-65"];
m1_133 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m1_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithMetaValue.MockOptionsWithMetaValue()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithMetaValue.MockOptionsWithMetaValue()", span="56-56"];
m1_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_an_empty_pre_options_line_is_allowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Add_an_empty_pre_options_line_is_allowed()", span="132-132"];
m1_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_an_empty_pre_options_line_is_allowed()", file="HelpTextFixture.cs", label="var helpText = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="134-134"];
m1_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_an_empty_pre_options_line_is_allowed()", file="HelpTextFixture.cs", label="helpText.AddPreOptionsLine(string.Empty)", span="135-135"];
m1_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Add_an_empty_pre_options_line_is_allowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Add_an_empty_pre_options_line_is_allowed()", span="132-132"];
m1_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", span="204-204"];
m1_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="lines[1].Should().Be(''Before '')", span="215-215"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="216-216"];
m1_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="lines[3].Should().Be(''012 After'')", span="217-217"];
m1_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="218-218"];
m1_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="219-219"];
m1_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="220-220"];
m1_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="214-214"];
m1_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="212-212"];
m1_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="206-206"];
m1_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="210-210"];
m1_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="207-207"];
m1_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="208-208"];
m1_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="209-209"];
m1_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Long_pre_and_post_lines_without_spaces()", span="204-204"];
m1_41 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="98-98"];
m1_161 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="HelpTextFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
m1_188 [cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", span="100-100"];
m1_146 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", span="294-294"];
m1_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", color=green, community=0, file="HelpTextFixture.cs", label="0: var parser = new Parser(new ParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="298-299"];
m1_147 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var sw = new StringWriter()", span="296-296"];
m1_148 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var options = new OptionsForErrorsScenario()", span="297-297"];
m1_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="300-300"];
m1_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var outsw = sw.ToString()", span="304-304"];
m1_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="result.Should().BeFalse()", span="302-302"];
m1_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Console.WriteLine(outsw)", span="306-306"];
m1_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="308-308"];
m1_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="lines[0].Should().Be(''--option-b option violates format.'')", span="310-310"];
m1_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="lines[1].Should().Be(''-c/--option-c option violates format.'')", span="311-311"];
m1_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="lines[2].Should().Be(''-a required option is missing.'')", span="312-312"];
m1_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Invoke_render_parsing_errors_text()", span="294-294"];
m1_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required_and_bad_format()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required_and_bad_format()", span="402-402"];
m1_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required_and_bad_format()", color=green, community=0, file="HelpTextFixture.cs", label="0: bool result = new Parser(new ParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="406-407"];
m1_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required_and_bad_format()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="404-404"];
m1_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required_and_bad_format()", file="HelpTextFixture.cs", label="result.Should().BeFalse()", span="409-409"];
m1_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required_and_bad_format()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required_and_bad_format()", span="402-402"];
m1_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", span="224-224"];
m1_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="lines[0].Should().Be(''Customizing Test.'')", span="237-237"];
m1_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="lines[1].Should().Be(''Pre-Options.'')", span="238-238"];
m1_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="lines[3].Should().Be(''  v, verbose       Kommentar umfassend Operationen.'')", span="239-239"];
m1_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="lines[4].Should().Be(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", span="240-240"];
m1_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="lines[6].Should().Be(''Post-Options.'')", span="241-241"];
m1_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="236-236"];
m1_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="234-234"];
m1_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="232-232"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="226-226"];
m1_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="230-230"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="227-227"];
m1_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="228-228"];
m1_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="229-229"];
m1_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Customize_options_format()", span="224-224"];
m1_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="398-398"];
m1_162 [cluster="CommandLine.ParserSettings.ParserSettings()", file="HelpTextFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="43-43"];
m1_129 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="55-55"];
m1_159 [cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="378-378"];
m1_163 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="141-141"];
m1_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="83-83"];
m1_164 [cluster="Unk.BeFalse", file="HelpTextFixture.cs", label="Entry Unk.BeFalse", span=""];
m1_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m1_202 [cluster="lambda expression", file="HelpTextFixture.cs", label="Entry lambda expression", span="443-443"];
m1_203 [cluster="lambda expression", file="HelpTextFixture.cs", label="n == 2", span="443-443"];
m1_204 [cluster="lambda expression", file="HelpTextFixture.cs", label="Exit lambda expression", span="443-443"];
m1_38 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptions.MockOptions()", span="47-47"];
m1_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", span="142-142"];
m1_35 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Be(''This is a first post-options line.'')", span="154-154"];
m1_36 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Be(''This is a second post-options line.'')", span="155-155"];
m1_34 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="153-153"];
m1_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="151-151"];
m1_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="144-144"];
m1_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="149-149"];
m1_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="145-145"];
m1_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="146-146"];
m1_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="147-147"];
m1_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="148-148"];
m1_37 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Post_options_lines_feature_added()", span="142-142"];
m1_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", span="424-424"];
m1_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", color=green, community=0, file="HelpTextFixture.cs", label="0: bool result = new Parser(new ParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="428-429"];
m1_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="426-426"];
m1_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="result.Should().BeFalse()", span="431-431"];
m1_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format_and_mutual_exclusiveness()", span="424-424"];
m1_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="84-84"];
m1_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="69-69"];
m1_42 [cluster="Unk.Should", file="HelpTextFixture.cs", label="Entry Unk.Should", span=""];
m1_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="74-74"];
m1_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m1_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="109-109"];
m1_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="124-124"];
m1_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="117-117"];
m1_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="118-118"];
m1_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="121-121"];
m1_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="122-122"];
m1_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="123-123"];
m1_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="110-110"];
m1_3 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="111-111"];
m1_4 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="114-114"];
m1_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="126-126"];
m1_5 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="115-115"];
m1_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m1_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required()", span="391-391"];
m1_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required()", color=green, community=0, file="HelpTextFixture.cs", label="0: bool result = new Parser(new ParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="395-396"];
m1_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="393-393"];
m1_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required()", file="HelpTextFixture.cs", label="result.Should().BeFalse()", span="398-398"];
m1_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_missing_required()", span="391-391"];
m1_43 [cluster="Unk.Be", file="HelpTextFixture.cs", label="Entry Unk.Be", span=""];
m1_40 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="509-509"];
m1_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", span="441-441"];
m1_165 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m1_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", span="245-245"];
m1_124 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="lines[1].Should().Be(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year))", span="261-261"];
m1_123 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="lines[0].Should().Be(''Parameterless Constructor Test.'')", span="260-260"];
m1_125 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="lines[2].Should().Be(''Pre-Options.'')", span="262-262"];
m1_126 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="lines[4].Should().Be(''  s, something    Input something here.'')", span="263-263"];
m1_127 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="lines[6].Should().Be(''Post-Options.'')", span="264-264"];
m1_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="247-247"];
m1_122 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="259-259"];
m1_121 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="257-257"];
m1_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="248-248"];
m1_116 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="250-250"];
m1_120 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="255-255"];
m1_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="249-249"];
m1_117 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="251-251"];
m1_118 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="252-252"];
m1_119 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="253-253"];
m1_128 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Instancing_with_parameterless_constructor()", span="245-245"];
m1_132 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="92-92"];
m1_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", span="413-413"];
m1_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", color=green, community=0, file="HelpTextFixture.cs", label="0: bool result = new Parser(new ParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="417-418"];
m1_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="415-415"];
m1_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="result.Should().BeFalse()", span="420-420"];
m1_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_mutual_exclusiveness()", span="413-413"];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format()", span="380-380"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format()", color=green, community=0, file="HelpTextFixture.cs", label="0: bool result = new Parser(new ParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="384-385"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="382-382"];
m1_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format()", file="HelpTextFixture.cs", label="result.Should().BeFalse()", span="387-387"];
m1_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Detailed_help_with_bad_format()", span="380-380"];
m1_201 [cluster="Unk.HaveCount", file="HelpTextFixture.cs", label="Entry Unk.HaveCount", span=""];
m1_131 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="56-56"];
m1_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="60-60"];
m1_39 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="388-388"];
m1_130 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="48-48"];
m1_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_160 [cluster="CommandLine.Tests.Fakes.OptionsForErrorsScenario.OptionsForErrorsScenario()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsForErrorsScenario.OptionsForErrorsScenario()", span="6-6"];
m1_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", span="159-159"];
m1_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Be(''  i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="166-166"];
m1_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="165-165"];
m1_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="164-164"];
m1_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="var local = new HelpText(''Meta Value.'')", span="161-161"];
m1_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithMetaValue())", span="162-162"];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Meta_value()", span="159-159"];
m1_109 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m1_111 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="170-170"];
m1_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="178-178"];
m1_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="lines[3].Should().Be(''                of the verbosity to '')", span="180-180"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="lines[4].Should().Be(''                test out the wrapping '')", span="181-181"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="lines[5].Should().Be(''                capabilities of the '')", span="182-182"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="lines[6].Should().Be(''                Help Text.'')", span="183-183"];
m1_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="177-177"];
m1_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="string help = helpText.ToString()", span="175-175"];
m1_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="var helpText = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="172-172"];
m1_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="helpText.AddOptions(new MockOptionsWithLongDescription())", span="174-174"];
m1_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="helpText.MaximumDisplayWidth = 40", span="173-173"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="170-170"];
m1_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", span="436-436"];
m1_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", color=green, community=0, file="HelpTextFixture.cs", label="0: new Parser(new ParserSettings(false,  false, writer)).ParseArguments(new string[0], options)", span="441-441"];
m1_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="var options = new ComplexOptions()", span="438-438"];
m1_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="var writer = new StringWriter()", span="439-439"];
m1_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="options.LastParserState.Errors.Should().HaveCount(n => n == 2)", span="443-443"];
m1_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Multiple_required_fields_with_more_than_one_required_field_not_specified_reports_all_missing_required_fields()", span="436-436"];
m1_142 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Create_basic_instance()", span="286-286"];
m1_144 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="local.ToString().Should().Be('''')", span="290-290"];
m1_143 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="288-288"];
m1_145 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Create_basic_instance()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Create_basic_instance()", span="286-286"];
m1_200 [cluster="CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Fakes.ComplexOptions.ComplexOptions()", span="37-37"];
m1_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", span="187-187"];
m1_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="195-195"];
m1_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="196-196"];
m1_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="lines[4].Should().Be(''                After'')", span="197-197"];
m1_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="198-198"];
m1_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="199-199"];
m1_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="lines[7].Should().Be(''                456789 After'')", span="200-200"];
m1_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="194-194"];
m1_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="string help = helpText.ToString()", span="192-192"];
m1_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="var helpText = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="189-189"];
m1_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="191-191"];
m1_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="helpText.MaximumDisplayWidth = 40", span="190-190"];
m1_77 [cluster="CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextFixture.Long_help_text_without_spaces()", span="187-187"];
m1_172 [cluster="CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", span="64-64"];
m1_217 [file="HelpTextFixture.cs", label="CommandLine.Tests.Unit.Text.HelpTextFixture", span=""];
m1_216 [file="HelpTextFixture.cs", label="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m2_4 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", file="IParser.cs", label="Entry CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", span="78-78"];
m2_5 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", file="IParser.cs", label="Exit CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", span="78-78"];
m2_2 [cluster="CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", file="IParser.cs", label="Entry CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", span="64-64"];
m2_3 [cluster="CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", file="IParser.cs", label="Exit CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", span="64-64"];
m2_0 [cluster="CommandLine.IParser.ParseArguments(string[], object)", file="IParser.cs", label="Entry CommandLine.IParser.ParseArguments(string[], object)", span="49-49"];
m2_1 [cluster="CommandLine.IParser.ParseArguments(string[], object)", file="IParser.cs", label="Exit CommandLine.IParser.ParseArguments(string[], object)", span="49-49"];
m2_6 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="IParser.cs", label="Entry CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="95-95"];
m2_7 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="IParser.cs", label="Exit CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="95-95"];
m3_12 [cluster="string.FormatWith(params object[])", file="MutuallyExclusiveParsingFixture.cs", label="Entry string.FormatWith(params object[])", span="15-15"];
m3_9 [cluster="CommandLine.ParserSettings.ParserSettings()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="43-43"];
m3_51 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", span="104-104"];
m3_53 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="107-107"];
m3_52 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="106-106"];
m3_54 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="108-108"];
m3_56 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Green.Should().Be((byte)100)", span="111-111"];
m3_57 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Hue.Should().Be((short)200)", span="112-112"];
m3_58 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.DefaultColorSet.Should().Be(ColorSet.RgbColorSet)", span="113-113"];
m3_55 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="result.Should().BeTrue()", span="110-110"];
m3_59 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_succeeds()", span="104-104"];
m3_14 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", span="50-50"];
m3_15 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="52-52"];
m3_16 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="53-53"];
m3_17 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", file="MutuallyExclusiveParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { ''-i'', ''1'', ''--file=mystuff.xml'' }, options)", span="54-54"];
m3_18 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", file="MutuallyExclusiveParsingFixture.cs", label="result.Should().BeFalse()", span="56-56"];
m3_19 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_fails()", span="50-50"];
m3_0 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", span="39-39"];
m3_1 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="41-41"];
m3_2 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var parser = new Parser(new ParserSettings {MutuallyExclusive = true})", span="42-42"];
m3_4 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", color=red, community=0, file="MutuallyExclusiveParsingFixture.cs", label="2: result.Should().BeTrue()", span="45-45"];
m3_5 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.FileName.Should().Be(''mystuff.xml'')", span="46-46"];
m3_6 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", span="39-39"];
m3_3 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { ''--file=mystuff.xml'' }, options)", span="43-43"];
m3_7 [cluster="CommandLine.Tests.Fakes.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="33-33"];
m3_8 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
m3_21 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", span="60-60"];
m3_23 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="63-63"];
m3_22 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="62-62"];
m3_24 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { ''--file=mystuff.xml'', ''-v'' }, options)", span="64-64"];
m3_26 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.FileName.Should().Be(''mystuff.xml'')", span="67-67"];
m3_27 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Verbose.Should().Be(true)", span="68-68"];
m3_25 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="result.Should().BeTrue()", span="66-66"];
m3_28 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_one_mutually_exclusive_option_with_another_option_succeeds()", span="60-60"];
m3_10 [cluster="System.Enum.ToString()", file="MutuallyExclusiveParsingFixture.cs", label="Entry System.Enum.ToString()", span="0-0"];
m3_37 [cluster="CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="33-33"];
m3_20 [cluster="Unk.BeFalse", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.BeFalse", span=""];
m3_11 [cluster="Unk.Should", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Should", span=""];
m3_44 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", span="94-94"];
m3_46 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="97-97"];
m3_45 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="96-96"];
m3_47 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="MutuallyExclusiveParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="98-98"];
m3_48 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="MutuallyExclusiveParsingFixture.cs", label="result.Should().BeFalse()", span="100-100"];
m3_49 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_mutually_exclusive_options_and_required_option_fails()", span="94-94"];
m3_13 [cluster="Unk.Be", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Be", span=""];
m3_38 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", span="84-84"];
m3_39 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var parser = new Parser(new ParserSettings {MutuallyExclusive = true})", span="86-86"];
m3_40 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="87-87"];
m3_41 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="MutuallyExclusiveParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'', ''--saturation=37'' }, options)", span="88-88"];
m3_42 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="MutuallyExclusiveParsingFixture.cs", label="result.Should().BeFalse()", span="90-90"];
m3_43 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_three_mutually_exclusive_options_in_two_set_fails()", span="84-84"];
m3_50 [cluster="CommandLine.Tests.Fakes.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", span="33-33"];
m3_29 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", span="72-72"];
m3_31 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", color=green, community=0, file="MutuallyExclusiveParsingFixture.cs", label="0: var parser = new Parser(new ParserSettings { MutuallyExclusive = true })", span="75-75"];
m3_30 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="74-74"];
m3_32 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="76-76"];
m3_34 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Green.Should().Be((byte)167)", span="79-79"];
m3_35 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Hue.Should().Be((short)205)", span="80-80"];
m3_33 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="result.Should().BeTrue()", span="78-78"];
m3_36 [cluster="CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.Unit.MutuallyExclusiveParsingFixture.Parsing_two_mutually_exclusive_options_in_two_set_succeeds()", span="72-72"];
m4_4 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", file="NullableTypesParsingFixture.cs", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="16-16"];
m4_5 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(string)", file="NullableTypesParsingFixture.cs", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(string)", span="16-16"];
m4_6 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", file="NullableTypesParsingFixture.cs", label="Entry Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
m4_7 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", file="NullableTypesParsingFixture.cs", label="Thread.CurrentThread.CurrentUICulture = _culture", span="23-23"];
m4_8 [cluster="Humanizer.Tests.AmbientCulture.Dispose()", file="NullableTypesParsingFixture.cs", label="Exit Humanizer.Tests.AmbientCulture.Dispose()", span="21-21"];
m4_0 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", file="NullableTypesParsingFixture.cs", label="Entry Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
m4_1 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", file="NullableTypesParsingFixture.cs", label="_culture = Thread.CurrentThread.CurrentUICulture", span="12-12"];
m4_2 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", file="NullableTypesParsingFixture.cs", label="Thread.CurrentThread.CurrentUICulture = culture", span="13-13"];
m4_3 [cluster="Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", file="NullableTypesParsingFixture.cs", label="Exit Humanizer.Tests.AmbientCulture.AmbientCulture(System.Globalization.CultureInfo)", span="10-10"];
m4_9 [file="NullableTypesParsingFixture.cs", label="Humanizer.Tests.AmbientCulture", span=""];
m6_14 [cluster="Unk.Be", file="OptionAttributeFixture.cs", label="Entry Unk.Be", span=""];
m6_0 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", span="13-13"];
m6_1 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="var options = new OptionsWithImplicitLongName()", span="16-16"];
m6_2 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", color=red, community=0, file="OptionAttributeFixture.cs", label="0: var parser = new Parser()", span="17-17"];
m6_4 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="var result = parser.ParseArguments(arguments, options)", span="25-25"];
m6_6 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="options.Download.Should().Be(''something'')", span="29-29"];
m6_7 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="options.Upload.Should().Be(''this'')", span="30-30"];
m6_8 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="options.Bytes.Should().Be(1024)", span="31-31"];
m6_3 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="var arguments = new[] {\r\n                ''--download'', ''something'',\r\n                ''--up-load'', ''this'',\r\n                ''-b'', ''1024''\r\n            }", span="18-22"];
m6_5 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="result.Should().Be(true)", span="28-28"];
m6_9 [cluster="CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", file="OptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.Attributes.OptionAttributeFixture.Should_use_property_name_as_long_name_if_omitted()", span="13-13"];
m6_12 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="OptionAttributeFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="134-134"];
m6_11 [cluster="CommandLine.Parser.Parser()", file="OptionAttributeFixture.cs", label="Entry CommandLine.Parser.Parser()", span="55-55"];
m6_10 [cluster="CommandLine.Tests.Fakes.OptionsWithImplicitLongName.OptionsWithImplicitLongName()", file="OptionAttributeFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithImplicitLongName.OptionsWithImplicitLongName()", span="2-2"];
m6_13 [cluster="Unk.Should", file="OptionAttributeFixture.cs", label="Entry Unk.Should", span=""];
m7_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="80-80"];
m7_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=red, community=0, file="Parser.cs", label="0: Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsDelegateCannotBeNull)", span="83-83"];
m7_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", color=red, community=0, file="Parser.cs", label="0: settings.Invoke(_settings)", span="85-85"];
m7_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="80-80"];
m7_58 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="221-221"];
m7_59 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="223-223"];
m7_60 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="224-224"];
m7_61 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="225-225"];
m7_63 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="!DoParseArgumentsVerbs(args, options, ref verbInstance)", span="229-229"];
m7_64 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, null)", span="231-231"];
m7_65 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="InvokeAutoBuildIfNeeded(options)", span="233-233"];
m7_66 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="onFail == null", span="235-235"];
m7_68 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="onFail()", span="241-241"];
m7_70 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, verbInstance)", span="247-247"];
m7_62 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="object verbInstance = null", span="227-227"];
m7_67 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Environment.Exit(DefaultExitCodeFail)", span="237-237"];
m7_69 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="return false;", span="244-244"];
m7_71 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="return true;", span="248-248"];
m7_72 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="221-221"];
m7_119 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="Entry CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="425-425"];
m7_184 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="var caseSensitive = _settings.CaseSensitive", span="427-427"];
m7_185 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label=args, span="428-428"];
m7_186 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="helpOption.ShortName != null", span="430-430"];
m7_187 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", span="432-432"];
m7_189 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="string.IsNullOrEmpty(helpOption.LongName)", span="438-438"];
m7_190 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", span="443-443"];
m7_192 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="return false;", span="449-449"];
m7_188 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="return true;", span="434-434"];
m7_191 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="return true;", span="445-445"];
m7_193 [cluster="CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="Parser.cs", label="Exit CommandLine.Parser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="425-425"];
m7_223 [cluster="object.HasVerbHelp()", file="Parser.cs", label="Entry object.HasVerbHelp()", span="44-44"];
m7_22 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Entry CommandLine.Parser.~Parser()", span="103-103"];
m7_23 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Dispose(false)", span="105-105"];
m7_24 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Exit CommandLine.Parser.~Parser()", span="103-103"];
m7_78 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="Entry CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="262-262"];
m7_79 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="found = false", span="264-264"];
m7_80 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="string.IsNullOrEmpty(verb)", span="265-265"];
m7_81 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="return target;", span="267-267"];
m7_82 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", span="270-270"];
m7_84 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="return found ? pair.Left.GetValue(target, null) : target;", span="272-272"];
m7_83 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="found = pair != null", span="271-271"];
m7_85 [cluster="CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", file="Parser.cs", label="Exit CommandLine.Parser.InternalGetVerbOptionsInstanceByName(string, object, out bool)", span="262-262"];
m7_122 [cluster="System.IO.TextWriter.Write(string)", file="Parser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m7_183 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m7_150 [cluster="CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.Create(string, bool)", span="59-59"];
m7_217 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="Parser.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m7_225 [cluster="CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, System.Action<CommandLine.Text.HelpText>, bool)", span="277-277"];
m7_13 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m7_145 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, CommandLine.ParserSettings)", span="102-102"];
m7_31 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="Entry CommandLine.Parser.DoParseArguments(string[], object)", span="304-304"];
m7_107 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="306-306"];
m7_110 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsCore(args, options)", span="312-312"];
m7_112 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="315-315"];
m7_116 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="return DoParseArgumentsCore(args, options);", span="323-323"];
m7_108 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="var helpWriter = _settings.HelpWriter", span="307-307"];
m7_109 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="pair != null && helpWriter != null", span="309-309"];
m7_113 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="helpWriter.Write(helpText)", span="316-316"];
m7_111 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="string helpText", span="314-314"];
m7_115 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="return true;", span="320-320"];
m7_114 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="return false;", span="317-317"];
m7_117 [cluster="CommandLine.Parser.DoParseArguments(string[], object)", file="Parser.cs", label="Exit CommandLine.Parser.DoParseArguments(string[], object)", span="304-304"];
m7_4 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
m7_5 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsInstanceCannotBeNull)", span="69-69"];
m7_6 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="_settings = settings", span="71-71"];
m7_7 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
m7_56 [cluster="System.Environment.Exit(int)", file="Parser.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m7_195 [cluster="CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.CompareLong(string, string, bool)", span="51-51"];
m7_229 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="337-337"];
m7_152 [cluster="CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ValueMapper.MapValueItem(string)", span="68-68"];
m7_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44"];
m7_153 [cluster="CommandLine.Infrastructure.OptionMap.EnforceRules()", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.EnforceRules()", span="162-162"];
m7_148 [cluster="CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", file="Parser.cs", label="Entry CommandLine.Infrastructure.StringArrayEnumerator.StringArrayEnumerator(string[])", span="36-36"];
m7_26 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="134-134"];
m7_27 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="136-136"];
m7_28 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="137-137"];
m7_29 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="return DoParseArguments(args, options);", span="139-139"];
m7_30 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object)", span="134-134"];
m7_178 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="Entry CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="452-452"];
m7_196 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="var helpWriter = _settings.HelpWriter", span="454-454"];
m7_197 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="helpInfo != null && helpWriter != null", span="455-455"];
m7_198 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="string.Compare(args[0], helpInfo.Right.LongName, GetStringComparison(_settings)) == 0", span="457-457"];
m7_199 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="var verb = args.FirstOrDefault()", span="460-460"];
m7_201 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="var verbOption = optionMap[verb]", span="463-463"];
m7_203 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verbOption.GetValue(options) == null", span="466-466"];
m7_204 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verbOption.CreateInstance(options)", span="469-469"];
m7_205 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", span="474-474"];
m7_207 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="return false;", span="479-479"];
m7_200 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verb != null", span="461-461"];
m7_202 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="verbOption != null", span="464-464"];
m7_206 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="return true;", span="475-475"];
m7_208 [cluster="CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", file="Parser.cs", label="Exit CommandLine.Parser.TryParseHelpVerb(string[], object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Infrastructure.OptionMap)", span="452-452"];
m7_43 [cluster="System.Action<T1, T2>.Invoke(T1, T2)", file="Parser.cs", label="Entry System.Action<T1, T2>.Invoke(T1, T2)", span="0-0"];
m7_118 [cluster="CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="Parser.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="86-86"];
m7_44 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="182-182"];
m7_45 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="184-184"];
m7_46 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="185-185"];
m7_47 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="!DoParseArguments(args, options)", span="187-187"];
m7_48 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="InvokeAutoBuildIfNeeded(options)", span="189-189"];
m7_49 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="onFail == null", span="191-191"];
m7_51 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="onFail()", span="197-197"];
m7_53 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="return true;", span="203-203"];
m7_50 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Environment.Exit(DefaultExitCodeFail)", span="193-193"];
m7_52 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="return false;", span="200-200"];
m7_54 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="182-182"];
m7_0 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Entry CommandLine.Parser.Parser()", span="55-55"];
m7_1 [cluster="CommandLine.Parser.Parser()", color=red, community=0, file="Parser.cs", label="0: _settings = new ParserSettings()", span="57-57"];
m7_2 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Exit CommandLine.Parser.Parser()", span="55-55"];
m7_147 [cluster="CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ValueMapper.ValueMapper(object, System.Globalization.CultureInfo)", span="45-45"];
m7_149 [cluster="CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", file="Parser.cs", label="Entry CommandLine.Infrastructure.StringArrayEnumerator.MoveNext()", span="91-91"];
m7_177 [cluster="CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Helpers.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.ParserSettings)", span="135-135"];
m7_226 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="513-513"];
m7_16 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="90-96"];
m7_17 [cluster="lambda expression", file="Parser.cs", label="with.CaseSensitive = false", span="92-92"];
m7_18 [cluster="lambda expression", file="Parser.cs", label="with.MutuallyExclusive = false", span="93-93"];
m7_19 [cluster="lambda expression", file="Parser.cs", label="with.HelpWriter = Console.Error", span="94-94"];
m7_20 [cluster="lambda expression", file="Parser.cs", label="with.ParsingCulture = CultureInfo.InvariantCulture", span="95-95"];
m7_21 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="90-96"];
m7_227 [cluster="lambda expression", file="Parser.cs", label="HelpText.DefaultParsingErrorsHandler(options, current)", span="513-513"];
m7_228 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="513-513"];
m7_41 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="Entry CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="372-372"];
m7_154 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(options)", span="374-374"];
m7_155 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(options)", span="375-375"];
m7_156 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="args.Length == 0", span="376-376"];
m7_158 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="380-380"];
m7_160 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="var optionMap = OptionMap.Create(options, verbs, _settings)", span="386-386"];
m7_161 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="TryParseHelpVerb(args, options, helpInfo, optionMap)", span="389-389"];
m7_163 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="var verbOption = optionMap[args.First()]", span="395-395"];
m7_166 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="DisplayHelpVerbText(options, helpInfo, null)", span="402-402"];
m7_168 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="verbInstance = verbOption.GetValue(options)", span="408-408"];
m7_170 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="verbInstance = verbOption.CreateInstance(options)", span="412-412"];
m7_171 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="var verbResult = DoParseArgumentsCore(args.Skip(1).ToArray(), verbInstance)", span="415-415"];
m7_173 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="DisplayHelpVerbText(options, helpInfo, args.First())", span="419-419"];
m7_157 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="helpInfo != null || _settings.HelpWriter != null", span="378-378"];
m7_165 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="helpInfo != null", span="400-400"];
m7_172 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="!verbResult && helpInfo != null", span="416-416"];
m7_159 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="return false;", span="383-383"];
m7_162 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="return false;", span="392-392"];
m7_164 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="verbOption == null", span="398-398"];
m7_167 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="return false;", span="405-405"];
m7_169 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="verbInstance == null", span="409-409"];
m7_174 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="return verbResult;", span="422-422"];
m7_175 [cluster="CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", file="Parser.cs", label="Exit CommandLine.Parser.DoParseArgumentsVerbs(string[], object, ref object)", span="372-372"];
m7_102 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="Parser.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m7_179 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m7_120 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="Entry CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="326-326"];
m7_123 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="var hadError = false", span="328-328"];
m7_124 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="var optionMap = OptionMap.Create(options, _settings)", span="329-329"];
m7_126 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="var valueMapper = new ValueMapper(options, _settings.ParsingCulture)", span="331-331"];
m7_127 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="var arguments = new StringArrayEnumerator(args)", span="333-333"];
m7_133 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="var result = parser.Parse(arguments, optionMap, options)", span="345-345"];
m7_135 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="SetParserStateIfNeeded(options, parser.PostParsingState)", span="348-348"];
m7_142 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="hadError |= !optionMap.EnforceRules()", span="367-367"];
m7_125 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="optionMap.SetDefaults()", span="330-330"];
m7_139 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="valueMapper.CanReceiveValues", span="358-358"];
m7_140 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="!valueMapper.MapValueItem(argument)", span="360-360"];
m7_128 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="arguments.MoveNext()", span="334-334"];
m7_129 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="var argument = arguments.Current", span="336-336"];
m7_138 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="arguments.MoveNext()", span="355-355"];
m7_130 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="string.IsNullOrEmpty(argument)", span="337-337"];
m7_131 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="342-342"];
m7_132 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="parser != null", span="343-343"];
m7_134 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", span="346-346"];
m7_137 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", span="353-353"];
m7_136 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="hadError = true", span="349-349"];
m7_141 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="hadError = true", span="362-362"];
m7_143 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="return !hadError;", span="369-369"];
m7_144 [cluster="CommandLine.Parser.DoParseArgumentsCore(string[], object)", file="Parser.cs", label="Exit CommandLine.Parser.DoParseArgumentsCore(string[], object)", span="326-326"];
m7_146 [cluster="CommandLine.Infrastructure.OptionMap.SetDefaults()", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionMap.SetDefaults()", span="167-167"];
m7_182 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m7_151 [cluster="CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.Parse(CommandLine.Infrastructure.IArgumentEnumerator, CommandLine.Infrastructure.OptionMap, object)", span="99-99"];
m7_180 [cluster="CommandLine.Infrastructure.OptionInfo.GetValue(object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionInfo.GetValue(object)", span="141-141"];
m7_222 [cluster="object.HasHelp()", file="Parser.cs", label="Entry object.HasHelp()", span="39-39"];
m7_89 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="Entry CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="275-275"];
m7_90 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="!options.CanReceiveParserState()", span="277-277"];
m7_92 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", span="282-282"];
m7_93 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="property.GetValue(options, null) == null", span="285-285"];
m7_94 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="property.SetValue(options, new ParserState(), null)", span="288-288"];
m7_95 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="var parserState = (IParserState)property.GetValue(options, null)", span="291-291"];
m7_96 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label=errors, span="293-293"];
m7_91 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="return;", span="279-279"];
m7_97 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="parserState.Errors.Add(error)", span="295-295"];
m7_98 [cluster="CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="Parser.cs", label="Exit CommandLine.Parser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="275-275"];
m7_87 [cluster="CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="Parser.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="199-199"];
m7_121 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="Parser.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="106-106"];
m7_224 [cluster="object.HasVerbs()", file="Parser.cs", label="Entry object.HasVerbs()", span="34-34"];
m7_103 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="Parser.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m7_14 [cluster="CommandLine.Parser.Parser(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(bool)", span="89-89"];
m7_15 [cluster="CommandLine.Parser.Parser(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(bool)", span="89-89"];
m7_194 [cluster="CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", file="Parser.cs", label="Entry CommandLine.Infrastructure.ArgumentParser.CompareShort(string, char?, bool)", span="43-43"];
m7_77 [cluster="System.GC.SuppressFinalize(object)", file="Parser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m7_32 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="155-155"];
m7_33 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="157-157"];
m7_34 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="158-158"];
m7_35 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Assumes.NotNull(options, ''onVerbCommand'', SR.ArgumentNullException_OnVerbDelegateCannotBeNull)", span="159-159"];
m7_37 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="var result = DoParseArgumentsVerbs(args, options, ref verbInstance)", span="163-163"];
m7_38 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="onVerbCommand(args.FirstOrDefault() ?? string.Empty, result ? verbInstance : null)", span="165-165"];
m7_36 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="object verbInstance = null", span="161-161"];
m7_39 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="return result;", span="167-167"];
m7_40 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="155-155"];
m7_86 [cluster="string.IsNullOrEmpty(string)", file="Parser.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m7_99 [cluster="object.CanReceiveParserState()", file="Parser.cs", label="Entry object.CanReceiveParserState()", span="49-49"];
m7_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m7_237 [cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="173-173"];
m7_181 [cluster="CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", file="Parser.cs", label="Entry CommandLine.Infrastructure.OptionInfo.CreateInstance(object)", span="146-146"];
m7_73 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Entry CommandLine.Parser.Dispose()", span="254-254"];
m7_74 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Dispose(true)", span="256-256"];
m7_75 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="GC.SuppressFinalize(this)", span="258-258"];
m7_76 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Exit CommandLine.Parser.Dispose()", span="254-254"];
m7_176 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="Entry CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="482-482"];
m7_210 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="string helpText", span="484-484"];
m7_211 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="verb == null", span="485-485"];
m7_212 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", span="487-487"];
m7_213 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", span="491-491"];
m7_214 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="_settings.HelpWriter != null", span="494-494"];
m7_215 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="_settings.HelpWriter.Write(helpText)", span="496-496"];
m7_216 [cluster="CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="Parser.cs", label="Exit CommandLine.Parser.DisplayHelpVerbText(object, CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="482-482"];
m7_8 [cluster="CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", file="Parser.cs", label="Entry CommandLine.Helpers.Assumes.NotNull<T>(T, string, string)", span="40-40"];
m7_101 [cluster="CommandLine.ParserState.ParserState()", file="Parser.cs", label="Entry CommandLine.ParserState.ParserState()", span="34-34"];
m7_104 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="299-299"];
m7_105 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="Parser.cs", label="return settings.CaseSensitive ? StringComparison.Ordinal : StringComparison.OrdinalIgnoreCase;", span="301-301"];
m7_106 [cluster="CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.GetStringComparison(CommandLine.ParserSettings)", span="299-299"];
m7_209 [cluster="string.Compare(string, string, System.StringComparison)", file="Parser.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m7_25 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="517-517"];
m7_230 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=_disposed, span="519-519"];
m7_232 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposing, span="524-524"];
m7_231 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="return;", span="521-521"];
m7_233 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="_settings != null", span="526-526"];
m7_234 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="_settings.Dispose()", span="528-528"];
m7_235 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="_disposed = true", span="531-531"];
m7_236 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="517-517"];
m7_57 [cluster="System.Action.Invoke()", file="Parser.cs", label="Entry System.Action.Invoke()", span="0-0"];
m7_55 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="Entry CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="500-500"];
m7_218 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", span="502-504"];
m7_220 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="_settings.HelpWriter.Write(\r\n                HelpText.AutoBuild(\r\n                    options,\r\n                    current => HelpText.DefaultParsingErrorsHandler(options, current),\r\n                    options.HasVerbs()))", span="510-514"];
m7_219 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="return;", span="506-506"];
m7_221 [cluster="CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", file="Parser.cs", label="Exit CommandLine.Parser.InvokeAutoBuildIfNeeded(object)", span="500-500"];
m7_88 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="Parser.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m7_100 [cluster="CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="Parser.cs", label="Entry CommandLine.Helpers.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="46-46"];
m7_238 [file="Parser.cs", label="CommandLine.Parser", span=""];
m7_239 [file="Parser.cs", label=object, span=""];
m8_65 [cluster="System.Text.StringBuilder.Append(char)", file="ParserFixture.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m8_41 [cluster="System.InvalidOperationException.InvalidOperationException()", file="ParserFixture.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m8_66 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="ParserFixture.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m8_64 [cluster="string.Substring(int, int)", file="ParserFixture.cs", label="Entry string.Substring(int, int)", span="0-0"];
m8_42 [cluster="lambda expression", file="ParserFixture.cs", label="Entry lambda expression", span="128-162"];
m8_5 [cluster="lambda expression", color=green, community=0, file="ParserFixture.cs", label="1: ''Required.''", span="60-60"];
m8_4 [cluster="lambda expression", file="ParserFixture.cs", label="CommandLine.ParserState", span=""];
m8_6 [cluster="lambda expression", file="ParserFixture.cs", label="Exit lambda expression", span="60-60"];
m8_11 [cluster="lambda expression", color=green, community=0, file="ParserFixture.cs", label="1: isOption\r\n                        ? ''Display this help screen.''\r\n                        : ''Display more information on a specific command.''", span="72-74"];
m8_10 [cluster="lambda expression", file="ParserFixture.cs", label="Entry lambda expression", span="72-74"];
m8_12 [cluster="lambda expression", file="ParserFixture.cs", label="Exit lambda expression", span="72-74"];
m8_26 [cluster="lambda expression", color=green, community=0, file="ParserFixture.cs", label="0: return errMisssing.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A required value not bound to option name is missing.''\r\n                                               : ''Required option '''.JoinTo(errMisssing.NameInfo.NameText, ''' is missing.'');", span="100-102"];
m8_25 [cluster="lambda expression", file="ParserFixture.cs", label="var errMisssing = ((MissingRequiredOptionError)error)", span="99-99"];
m8_37 [cluster="lambda expression", file="ParserFixture.cs", label="Exit lambda expression", span="87-120"];
m8_36 [cluster="lambda expression", color=green, community=0, file="ParserFixture.cs", label="1: return ''No verb selected.'';", span="117-117"];
m8_35 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.NoVerbSelectedError", span="116-116"];
m8_44 [cluster="lambda expression", color=green, community=0, file="ParserFixture.cs", label="0: var msgs = bySet.Select(\r\n                            set =>\r\n                            {\r\n                                var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray());\r\n                                var namesCount = set.Errors.Count();\r\n\r\n                                var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray());\r\n\r\n                                return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();\r\n                            }).ToArray()", span="134-160"];
m8_43 [cluster="lambda expression", file="ParserFixture.cs", label="var bySet = from e in errors\r\n                                group e by e.SetName into g\r\n                                select new { SetName = g.Key, Errors = g.ToList() }", span="130-132"];
m8_45 [cluster="lambda expression", file="ParserFixture.cs", label="return string.Join(Environment.NewLine, msgs);", span="161-161"];
m8_51 [cluster="lambda expression", file="ParserFixture.cs", label="Entry lambda expression", span="135-160"];
m8_52 [cluster="lambda expression", color=green, community=0, file="ParserFixture.cs", label="0: var names = string.Join(\r\n                                    string.Empty,\r\n                                    (from e in set.Errors select '''''.JoinTo(e.NameInfo.NameText, ''', '')).ToArray())", span="137-139"];
m8_53 [cluster="lambda expression", file="ParserFixture.cs", label="var namesCount = set.Errors.Count()", span="140-140"];
m8_55 [cluster="lambda expression", file="ParserFixture.cs", label="return\r\n                                    new StringBuilder(''Option'')\r\n                                            .AppendWhen(namesCount > 1, ''s'')\r\n                                            .Append('': '')\r\n                                            .Append(names.Substring(0, names.Length - 2))\r\n                                            .Append(' ')\r\n                                            .AppendIf(namesCount > 1, ''are'', ''is'')\r\n                                            .Append('' not compatible with: '')\r\n                                            .Append(incompat.Substring(0, incompat.Length - 2))\r\n                                            .Append('.')\r\n                                        .ToString();", span="149-159"];
m8_16 [cluster="lambda expression", file="ParserFixture.cs", label="Entry lambda expression", span="87-120"];
m8_24 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.MissingRequiredOptionError", span="98-98"];
m8_19 [cluster="lambda expression", file="ParserFixture.cs", label="return ''Token '''.JoinTo(((BadFormatTokenError)error).Token, ''' is not recognized.'');", span="92-92"];
m8_21 [cluster="lambda expression", file="ParserFixture.cs", label="return ''Option '''.JoinTo(((MissingValueOptionError)error).NameInfo.NameText,\r\n                                        ''' has no value.'');", span="94-95"];
m8_23 [cluster="lambda expression", file="ParserFixture.cs", label="return ''Option '''.JoinTo(((UnknownOptionError)error).Token, ''' is unknown.'');", span="97-97"];
m8_34 [cluster="lambda expression", file="ParserFixture.cs", label="return ''Verb '''.JoinTo(((BadVerbSelectedError)error).Token, ''' is not recognized.'');", span="115-115"];
m8_29 [cluster="lambda expression", file="ParserFixture.cs", label="return badFormat.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A value not bound to option name is defined with a bad format.''\r\n                                               : ''Option '''.JoinTo(badFormat.NameInfo.NameText, ''' is defined with a bad format.'');", span="105-107"];
m8_32 [cluster="lambda expression", file="ParserFixture.cs", label="return seqOutRange.NameInfo.Equals(NameInfo.EmptyName)\r\n                                               ? ''A sequence value not bound to option name is defined with few items than required.''\r\n                                               : ''A sequence option '''.JoinTo(seqOutRange.NameInfo.NameText,\r\n                                                    ''' is defined with fewer or more items than required.'');", span="110-113"];
m8_38 [cluster="lambda expression", file="ParserFixture.cs", label="throw new InvalidOperationException();", span="119-119"];
m8_17 [cluster="lambda expression", file="ParserFixture.cs", label="error.Tag", span="89-89"];
m8_54 [cluster="lambda expression", file="ParserFixture.cs", label="var incompat = string.Join(\r\n                                    string.Empty,\r\n                                    (from x in\r\n                                    (from s in bySet where !s.SetName.EndsWith(set.SetName) from e in s.Errors select e)\r\n                                        .Distinct()\r\n                                    select '''''.JoinTo(x.NameInfo.NameText, ''', '')).ToArray())", span="142-147"];
m8_46 [cluster="lambda expression", file="ParserFixture.cs", label="Exit lambda expression", span="128-162"];
m8_28 [cluster="lambda expression", file="ParserFixture.cs", label="var badFormat = ((BadFormatConversionError)error)", span="104-104"];
m8_31 [cluster="lambda expression", file="ParserFixture.cs", label="var seqOutRange = ((SequenceOutOfRangeError)error)", span="109-109"];
m8_18 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.BadFormatTokenError", span="91-91"];
m8_20 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.MissingValueOptionError", span="93-93"];
m8_22 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.UnknownOptionError", span="96-96"];
m8_33 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.BadVerbSelectedError", span="114-114"];
m8_27 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.BadFormatConversionError", span="103-103"];
m8_30 [cluster="lambda expression", file="ParserFixture.cs", label="ErrorType.SequenceOutOfRangeError", span="108-108"];
m8_56 [cluster="lambda expression", file="ParserFixture.cs", label="Exit lambda expression", span="135-160"];
m8_62 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="ParserFixture.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m8_40 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="ParserFixture.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m8_48 [cluster="Unk.Select", file="ParserFixture.cs", label="Entry Unk.Select", span=""];
m8_57 [cluster="Unk.JoinTo", file="ParserFixture.cs", label="Entry Unk.JoinTo", span=""];
m8_39 [cluster="string.JoinTo(params string[])", file="ParserFixture.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m8_67 [cluster="System.Text.StringBuilder.ToString()", file="ParserFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m8_63 [cluster="System.Text.StringBuilder.Append(string)", file="ParserFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m8_3 [cluster="System.Collections.Generic.List<T>.List()", file="ParserFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m8_50 [cluster="Unk.Join", file="ParserFixture.cs", label="Entry Unk.Join", span=""];
m8_60 [cluster="Unk.Distinct", file="ParserFixture.cs", label="Entry Unk.Distinct", span=""];
m8_61 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="ParserFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m8_0 [cluster="CommandLine.ParserState.ParserState()", file="ParserFixture.cs", label="Entry CommandLine.ParserState.ParserState()", span="47-47"];
m8_1 [cluster="CommandLine.ParserState.ParserState()", file="ParserFixture.cs", label="Errors = new List<ParsingError>()", span="49-49"];
m8_2 [cluster="CommandLine.ParserState.ParserState()", file="ParserFixture.cs", label="Exit CommandLine.ParserState.ParserState()", span="47-47"];
m8_49 [cluster="Unk.ToArray", file="ParserFixture.cs", label="Entry Unk.ToArray", span=""];
m8_58 [cluster="Unk.Count", file="ParserFixture.cs", label="Entry Unk.Count", span=""];
m8_47 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="ParserFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m8_59 [cluster="Unk.EndsWith", file="ParserFixture.cs", label="Entry Unk.EndsWith", span=""];
m8_68 [file="ParserFixture.cs", label=bySet, span=""];
m9_37 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="ParserSettings.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m9_103 [cluster="NameInfo.cstr", file="ParserSettings.cs", label="Entry NameInfo.cstr", span=""];
m9_4 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ParserSettings.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m9_8 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", color=red, community=0, file="ParserSettings.cs", label="0: return specProps =>\r\n                {\r\n                    var options = specProps\r\n                            .Where(sp => sp.Specification.IsOption())\r\n                            .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust());\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="26-40"];
m9_9 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="ParserSettings.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24"];
m9_53 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="ParserSettings.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m9_6 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ParserSettings.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="74-74"];
m9_75 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ParserSettings.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )\r\n                    );\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="76-92"];
m9_76 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="ParserSettings.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="74-74"];
m9_73 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="ParserSettings.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m9_107 [cluster="CommandLine.Core.Token.IsName()", file="ParserSettings.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m9_49 [cluster="Unk.Any", file="ParserSettings.cs", label="Entry Unk.Any", span=""];
m9_68 [cluster="CommandLine.Core.Specification.IsValue()", file="ParserSettings.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m9_17 [cluster="Unk.Where", file="ParserSettings.cs", label="Entry Unk.Where", span=""];
m9_21 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ParserSettings.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m9_63 [cluster="Unk.IsNothing", file="ParserSettings.cs", label="Entry Unk.IsNothing", span=""];
m9_74 [cluster="Unk.FromSpecification", file="ParserSettings.cs", label="Entry Unk.FromSpecification", span=""];
m9_86 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="ParserSettings.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m9_7 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserSettings.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="95-95"];
m9_91 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserSettings.cs", label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="97-115"];
m9_92 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserSettings.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="95-95"];
m9_69 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="ParserSettings.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m9_64 [cluster="Unk.Contains", file="ParserSettings.cs", label="Entry Unk.Contains", span=""];
m9_90 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ParserSettings.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m9_0 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserSettings.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m9_1 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserSettings.cs", label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21"];
m9_2 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ParserSettings.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m9_104 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="102-102"];
m9_11 [cluster="lambda expression", file="ParserSettings.cs", label="var options = specProps\r\n                            .Where(sp => sp.Specification.IsOption())\r\n                            .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust())", span="28-31"];
m9_10 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="26-40"];
m9_12 [cluster="lambda expression", file="ParserSettings.cs", label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="32-32"];
m9_22 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="29-29"];
m9_26 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="30-31"];
m9_14 [cluster="lambda expression", file="ParserSettings.cs", label="return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification()));", span="35-37"];
m9_13 [cluster="lambda expression", file="ParserSettings.cs", label="groups.Count() > 1", span="33-33"];
m9_30 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="32-32"];
m9_15 [cluster="lambda expression", file="ParserSettings.cs", label="return Enumerable.Empty<Error>();", span="39-39"];
m9_16 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="26-40"];
m9_33 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="35-37"];
m9_23 [cluster="lambda expression", file="ParserSettings.cs", label="sp.Specification.IsOption()", span="29-29"];
m9_24 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="29-29"];
m9_27 [cluster="lambda expression", file="ParserSettings.cs", label="((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust()", span="30-31"];
m9_28 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="30-31"];
m9_31 [cluster="lambda expression", file="ParserSettings.cs", label="((OptionSpecification)g.Specification).SetName", span="32-32"];
m9_32 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="32-32"];
m9_34 [cluster="lambda expression", file="ParserSettings.cs", label="new MutuallyExclusiveSetError(\r\n                                ((OptionSpecification)s.Specification).FromOptionSpecification())", span="36-37"];
m9_35 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="35-37"];
m9_41 [cluster="lambda expression", file="ParserSettings.cs", label="var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList()", span="47-51"];
m9_42 [cluster="lambda expression", file="ParserSettings.cs", label="var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && (\r\n                                ((OptionSpecification)sp.Specification).SetName.Length == 0 ||\r\n                                !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)\r\n                            ))                          \r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList()", span="53-65"];
m9_40 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="45-71"];
m9_50 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="49-50"];
m9_54 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="51-51"];
m9_61 [cluster="lambda expression", file="ParserSettings.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && (\r\n                                ((OptionSpecification)sp.Specification).SetName.Length == 0 ||\r\n                                !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)\r\n                            )", span="56-61"];
m9_43 [cluster="lambda expression", file="ParserSettings.cs", label="requiredButEmpty.Any()", span="66-66"];
m9_57 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="55-55"];
m9_60 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="56-61"];
m9_65 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="63-65"];
m9_44 [cluster="lambda expression", file="ParserSettings.cs", label="return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            s.Specification.FromSpecification()));", span="67-68"];
m9_45 [cluster="lambda expression", file="ParserSettings.cs", label="return Enumerable.Empty<Error>();", span="70-70"];
m9_46 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="45-71"];
m9_70 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="67-68"];
m9_51 [cluster="lambda expression", file="ParserSettings.cs", label="sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required", span="49-50"];
m9_52 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="49-50"];
m9_55 [cluster="lambda expression", file="ParserSettings.cs", label="((OptionSpecification)s.Specification).SetName", span="51-51"];
m9_56 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="51-51"];
m9_58 [cluster="lambda expression", file="ParserSettings.cs", label="sp.Specification.IsOption()", span="55-55"];
m9_59 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="55-55"];
m9_62 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="56-61"];
m9_66 [cluster="lambda expression", file="ParserSettings.cs", label="sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required", span="63-65"];
m9_67 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="63-65"];
m9_71 [cluster="lambda expression", file="ParserSettings.cs", label="new MissingRequiredOptionError(\r\n                            s.Specification.FromSpecification())", span="67-68"];
m9_72 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="67-68"];
m9_78 [cluster="lambda expression", file="ParserSettings.cs", label="var options = specProps.Where(\r\n                        sp => sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )\r\n                    )", span="78-85"];
m9_77 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="76-92"];
m9_79 [cluster="lambda expression", file="ParserSettings.cs", label="options.Any()", span="86-86"];
m9_83 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="79-84"];
m9_80 [cluster="lambda expression", file="ParserSettings.cs", label="return options.Select(s => new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification()));", span="88-89"];
m9_81 [cluster="lambda expression", file="ParserSettings.cs", label="return Enumerable.Empty<Error>();", span="91-91"];
m9_82 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="76-92"];
m9_87 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="88-89"];
m9_84 [cluster="lambda expression", file="ParserSettings.cs", label="sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="79-84"];
m9_85 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="79-84"];
m9_88 [cluster="lambda expression", file="ParserSettings.cs", label="new SequenceOutOfRangeError(\r\n                            s.Specification.FromSpecification())", span="88-89"];
m9_89 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="88-89"];
m9_95 [cluster="lambda expression", file="ParserSettings.cs", label="var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="102-106"];
m9_94 [cluster="lambda expression", file="ParserSettings.cs", label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="99-101"];
m9_93 [cluster="lambda expression", file="ParserSettings.cs", label="Entry lambda expression", span="97-115"];
m9_96 [cluster="lambda expression", file="ParserSettings.cs", label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="107-110"];
m9_97 [cluster="lambda expression", file="ParserSettings.cs", label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="111-113"];
m9_98 [cluster="lambda expression", file="ParserSettings.cs", label="return errors;", span="114-114"];
m9_99 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="97-115"];
m9_105 [cluster="lambda expression", file="ParserSettings.cs", label="t.IsName()", span="102-102"];
m9_106 [cluster="lambda expression", file="ParserSettings.cs", label="Exit lambda expression", span="102-102"];
m9_102 [cluster="CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", file="ParserSettings.cs", label="Entry CommandLine.RepeatedOptionError.RepeatedOptionError(CommandLine.NameInfo)", span="335-335"];
m9_48 [cluster="Unk.Concat", file="ParserSettings.cs", label="Entry Unk.Concat", span=""];
m9_5 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ParserSettings.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43"];
m9_38 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ParserSettings.cs", label="return specProps =>\r\n            {\r\n                var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList();\r\n                \r\n                var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && (\r\n                                ((OptionSpecification)sp.Specification).SetName.Length == 0 ||\r\n                                !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)\r\n                            ))                          \r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList();\r\n                    if (requiredButEmpty.Any()) {\r\n                        return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            s.Specification.FromSpecification()));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="45-71"];
m9_39 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="ParserSettings.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43"];
m9_20 [cluster="Unk.Select", file="ParserSettings.cs", label="Entry Unk.Select", span=""];
m9_29 [cluster="Unk.IsJust", file="ParserSettings.cs", label="Entry Unk.IsJust", span=""];
m9_100 [cluster="Unk.UniqueName", file="ParserSettings.cs", label="Entry Unk.UniqueName", span=""];
m9_47 [cluster="Unk.ToList", file="ParserSettings.cs", label="Entry Unk.ToList", span=""];
m9_36 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="ParserSettings.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="302-302"];
m9_101 [cluster="Unk.DefaultIfEmpty", file="ParserSettings.cs", label="Entry Unk.DefaultIfEmpty", span=""];
m9_25 [cluster="CommandLine.Core.Specification.IsOption()", file="ParserSettings.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m9_3 [cluster="System.Collections.Generic.List<T>.List()", file="ParserSettings.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m9_18 [cluster="Unk.GroupBy", file="ParserSettings.cs", label="Entry Unk.GroupBy", span=""];
m9_19 [cluster="Unk.Count", file="ParserSettings.cs", label="Entry Unk.Count", span=""];
m9_108 [file="ParserSettings.cs", label=setsWithTrue, span=""];
m9_109 [file="ParserSettings.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m10_16 [cluster="Unk.Be", file="ParserSettingsFixture.cs", label="Entry Unk.Be", span=""];
m10_27 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettingsFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44"];
m10_15 [cluster="System.IO.StringWriter.ToString()", file="ParserSettingsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m10_8 [cluster="System.IO.StringWriter.StringWriter()", file="ParserSettingsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m10_12 [cluster="CommandLine.IParser.ParseArguments(string[], object)", file="ParserSettingsFixture.cs", label="Entry CommandLine.IParser.ParseArguments(string[], object)", span="49-49"];
m10_14 [cluster="Unk.BeFalse", file="ParserSettingsFixture.cs", label="Entry Unk.BeFalse", span=""];
m10_0 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs", label="Entry CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40"];
m10_1 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs", label="var writer = new StringWriter()", span="42-42"];
m10_2 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", color=red, community=0, file="ParserSettingsFixture.cs", label="0: IParser parser = new Parser(new ParserSettings(writer))", span="43-43"];
m10_6 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs", label="writer.ToString().Should().Be(''MockOptions::GetUsage()'')", span="49-49"];
m10_3 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="44-44"];
m10_4 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="46-46"];
m10_5 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs", label="success.Should().BeFalse()", span="48-48"];
m10_7 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", file="ParserSettingsFixture.cs", label="Exit CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_constructor()", span="40-40"];
m10_10 [cluster="CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", file="ParserSettingsFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", span="65-65"];
m10_17 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="Entry CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", span="53-53"];
m10_18 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="var writer = new StringWriter()", span="55-55"];
m10_19 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="var settings = new ParserSettings()", span="56-56"];
m10_20 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="settings.HelpWriter = writer", span="57-57"];
m10_25 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="writer.ToString().Should().Be(''MockOptions::GetUsage()'')", span="64-64"];
m10_21 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", color=red, community=0, file="ParserSettingsFixture.cs", label="0: IParser parser = new Parser(settings)", span="58-58"];
m10_22 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="59-59"];
m10_23 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="61-61"];
m10_24 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="success.Should().BeFalse()", span="63-63"];
m10_26 [cluster="CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", file="ParserSettingsFixture.cs", label="Exit CommandLine.Tests.Unit.ParserSettingsFixture.Setting_help_writer_using_property()", span="53-53"];
m10_9 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="ParserSettingsFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
m10_13 [cluster="Unk.Should", file="ParserSettingsFixture.cs", label="Entry Unk.Should", span=""];
m10_11 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="ParserSettingsFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="32-32"];
m14_18 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="StrictFixture.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="86-86"];
m14_80 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="StrictFixture.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="228-228"];
m14_15 [cluster="CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptions.SimpleOptions()", span="33-33"];
m14_4 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", color=green, community=0, file="StrictFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="52-52"];
m14_5 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="var result = parser.ParseArgumentsStrict(new string[] {''--bad'', ''--input''}, options,\r\n                () => Console.WriteLine(''fake fail''))", span="53-54"];
m14_112 [cluster="CommandLine.Tests.Fakes.OptionsWithVerbs.OptionsWithVerbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithVerbs.OptionsWithVerbs()", span="79-79"];
m14_24 [cluster="string.Split(string[], System.StringSplitOptions)", file="StrictFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m14_37 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", span="70-70"];
m14_41 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", color=green, community=0, file="StrictFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="76-76"];
m14_39 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="73-73"];
m14_40 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="75-75"];
m14_42 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="var result = parser.ParseArgumentsStrict(new string[] { ''--bad'', ''--input'' }, options,\r\n                () => Console.WriteLine(''fake fail''))", span="77-78"];
m14_38 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="var options = new SimpleOptionsForStrict()", span="72-72"];
m14_44 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="82-82"];
m14_43 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="result.Should().BeFalse()", span="80-80"];
m14_45 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="83-83"];
m14_46 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="84-84"];
m14_47 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="lines.Should().HaveCount(n => n == 1)", span="86-86"];
m14_48 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="lines[0].Trim().Should().Be(''SimpleOptionsForStrict (user defined)'')", span="88-88"];
m14_49 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_when_get_usage_is_defined()", span="70-70"];
m14_60 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", span="92-92"];
m14_66 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", color=green, community=0, file="StrictFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="101-101"];
m14_64 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="98-98"];
m14_65 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="100-100"];
m14_67 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var result = parser.ParseArgumentsStrict(new string[] { ''bad'', ''input'' }, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                },\r\n                () => Console.WriteLine(''fake fail''))", span="102-108"];
m14_63 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var options = new OptionsWithVerbsNoHelp()", span="97-97"];
m14_69 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="112-112"];
m14_61 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="string invokedVerb = null", span="94-94"];
m14_62 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="object invokedVerbInstance = null", span="95-95"];
m14_68 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="result.Should().BeFalse()", span="110-110"];
m14_76 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="invokedVerb.Should().Be(''bad'')", span="122-122"];
m14_77 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="invokedVerbInstance.Should().BeNull()", span="123-123"];
m14_70 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="113-113"];
m14_71 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="114-114"];
m14_75 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="lines[7].Trim().Should().Be(''clone     Clone a repository into a new directory.'')", span="120-120"];
m14_72 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="lines.Should().HaveCount(n => n == 8)", span="116-116"];
m14_73 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="lines[5].Trim().Should().Be(''add       Add file contents to the index.'')", span="118-118"];
m14_74 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="lines[6].Trim().Should().Be(''commit    Record changes to the repository.'')", span="119-119"];
m14_78 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", file="StrictFixture.cs", label="Exit CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs()", span="92-92"];
m14_2 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="49-49"];
m14_3 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="51-51"];
m14_50 [cluster="CommandLine.Tests.Fakes.SimpleOptionsForStrict.SimpleOptionsForStrict()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsForStrict.SimpleOptionsForStrict()", span="31-31"];
m14_16 [cluster="System.IO.StringWriter.StringWriter()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m14_0 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="StrictFixture.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="44-44"];
m14_1 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="StrictFixture.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="44-44"];
m14_7 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="58-58"];
m14_6 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="result.Should().BeFalse()", span="56-56"];
m14_8 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="59-59"];
m14_9 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="60-60"];
m14_10 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="lines.Should().HaveCount(n => n == 8)", span="62-62"];
m14_11 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="lines[5].Trim().Should().Be(''-s, --string'')", span="64-64"];
m14_12 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="lines[6].Trim().Should().Be(''-i'')", span="65-65"];
m14_13 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="lines[7].Trim().Should().Be(''--switch'')", span="66-66"];
m14_14 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", file="StrictFixture.cs", label="Exit CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits()", span="46-46"];
m14_21 [cluster="Unk.BeFalse", file="StrictFixture.cs", label="Entry Unk.BeFalse", span=""];
m14_19 [cluster="CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", file="StrictFixture.cs", label="Entry CommandLine.Parser.ParseArgumentsStrict(string[], object, System.Action)", span="189-189"];
m14_123 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="151-151"];
m14_29 [cluster="lambda expression", color=green, community=0, file="StrictFixture.cs", label="1: with.HelpWriter = testWriter", span="52-52"];
m14_28 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="52-52"];
m14_30 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="52-52"];
m14_52 [cluster="lambda expression", color=green, community=0, file="StrictFixture.cs", label="1: with.HelpWriter = testWriter", span="76-76"];
m14_51 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="76-76"];
m14_53 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="76-76"];
m14_83 [cluster="lambda expression", color=green, community=0, file="StrictFixture.cs", label="1: with.HelpWriter = testWriter", span="101-101"];
m14_82 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="101-101"];
m14_84 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="101-101"];
m14_114 [cluster="lambda expression", color=green, community=0, file="StrictFixture.cs", label="1: with.HelpWriter = testWriter", span="136-136"];
m14_113 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="136-136"];
m14_115 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="136-136"];
m14_31 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="54-54"];
m14_54 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="78-78"];
m14_85 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="103-107"];
m14_89 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="108-108"];
m14_116 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="138-142"];
m14_120 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="143-143"];
m14_33 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="54-54"];
m14_32 [cluster="lambda expression", file="StrictFixture.cs", label="Console.WriteLine(''fake fail'')", span="54-54"];
m14_56 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="78-78"];
m14_55 [cluster="lambda expression", file="StrictFixture.cs", label="Console.WriteLine(''fake fail'')", span="78-78"];
m14_88 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="103-107"];
m14_86 [cluster="lambda expression", file="StrictFixture.cs", label="invokedVerb = verb", span="105-105"];
m14_87 [cluster="lambda expression", file="StrictFixture.cs", label="invokedVerbInstance = subOptions", span="106-106"];
m14_91 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="108-108"];
m14_90 [cluster="lambda expression", file="StrictFixture.cs", label="Console.WriteLine(''fake fail'')", span="108-108"];
m14_119 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="138-142"];
m14_117 [cluster="lambda expression", file="StrictFixture.cs", label="invokedVerb = verb", span="140-140"];
m14_118 [cluster="lambda expression", file="StrictFixture.cs", label="invokedVerbInstance = subOptions", span="141-141"];
m14_122 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="143-143"];
m14_121 [cluster="lambda expression", file="StrictFixture.cs", label="Console.WriteLine(''fake fail'')", span="143-143"];
m14_34 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="62-62"];
m14_57 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="86-86"];
m14_92 [cluster="lambda expression", file="StrictFixture.cs", label="Entry lambda expression", span="116-116"];
m14_36 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="62-62"];
m14_35 [cluster="lambda expression", file="StrictFixture.cs", label="n == 8", span="62-62"];
m14_59 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="86-86"];
m14_58 [cluster="lambda expression", file="StrictFixture.cs", label="n == 1", span="86-86"];
m14_94 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="116-116"];
m14_93 [cluster="lambda expression", file="StrictFixture.cs", label="n == 8", span="116-116"];
m14_124 [cluster="lambda expression", file="StrictFixture.cs", label="n == 1", span="151-151"];
m14_125 [cluster="lambda expression", file="StrictFixture.cs", label="Exit lambda expression", span="151-151"];
m14_20 [cluster="Unk.Should", file="StrictFixture.cs", label="Entry Unk.Should", span=""];
m14_27 [cluster="Unk.Be", file="StrictFixture.cs", label="Entry Unk.Be", span=""];
m14_22 [cluster="System.IO.StringWriter.ToString()", file="StrictFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m14_17 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="StrictFixture.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m14_25 [cluster="Unk.HaveCount", file="StrictFixture.cs", label="Entry Unk.HaveCount", span=""];
m14_79 [cluster="CommandLine.Tests.Fakes.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithVerbsNoHelp.OptionsWithVerbsNoHelp()", span="108-108"];
m14_95 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="Entry CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", span="127-127"];
m14_101 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", color=green, community=0, file="StrictFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="136-136"];
m14_99 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="var testWriter = new StringWriter()", span="133-133"];
m14_100 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="135-135"];
m14_102 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="var result = parser.ParseArgumentsStrict(new string[] { ''bad'', ''input'' }, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                },\r\n                () => Console.WriteLine(''fake fail''))", span="137-143"];
m14_98 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="var options = new OptionsWithVerbs()", span="132-132"];
m14_104 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="var helpText = testWriter.ToString()", span="147-147"];
m14_96 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="string invokedVerb = null", span="129-129"];
m14_97 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="object invokedVerbInstance = null", span="130-130"];
m14_103 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="result.Should().BeFalse()", span="145-145"];
m14_109 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="invokedVerb.Should().Be(''bad'')", span="155-155"];
m14_110 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="invokedVerbInstance.Should().BeNull()", span="156-156"];
m14_105 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="Console.WriteLine(helpText)", span="148-148"];
m14_106 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="149-149"];
m14_108 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="lines[0].Trim().Should().Be(''verbs help index'')", span="153-153"];
m14_107 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="lines.Should().HaveCount(n => n == 1)", span="151-151"];
m14_111 [cluster="CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", file="StrictFixture.cs", label="Exit CommandLine.Tests.Unit.StrictFixture.Parse_strict_bad_input_fails_and_exits_with_verbs_when_get_usage_is_defined()", span="127-127"];
m14_23 [cluster="System.Console.WriteLine(string)", file="StrictFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m14_26 [cluster="string.Trim()", file="StrictFixture.cs", label="Entry string.Trim()", span="0-0"];
m14_81 [cluster="Unk.BeNull", file="StrictFixture.cs", label="Entry Unk.BeNull", span=""];
m14_126 [file="StrictFixture.cs", label=testWriter, span=""];
m14_127 [file="StrictFixture.cs", label=testWriter, span=""];
m14_128 [file="StrictFixture.cs", label=testWriter, span=""];
m14_129 [file="StrictFixture.cs", label=testWriter, span=""];
m15_0 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", span="41-41"];
m15_1 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="43-43"];
m15_2 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="var appOptions = new OptionsForAppWithPlugIns()", span="44-44"];
m15_4 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="var result1 = parser.ParseArguments(args, appOptions)", span="47-47"];
m15_8 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="var result2 = parser.ParseArguments(args, plugInXOptions)", span="53-53"];
m15_3 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", color=red, community=1, file="UnknownArgumentsFixture.cs", label="0: var parser = new Parser(new ParserSettings {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="45-46"];
m15_6 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="appOptions.PlugInName.Should().Be(''addonX'')", span="50-50"];
m15_5 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="result1.Should().BeTrue()", span="49-49"];
m15_7 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="var plugInXOptions = new OptionsOfPlugInX()", span="52-52"];
m15_10 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="plugInXOptions.InputFileName.Should().Be(''input.dat'')", span="56-56"];
m15_11 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="plugInXOptions.ReadOffset.Should().Be(10L)", span="57-57"];
m15_9 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="result2.Should().BeTrue()", span="55-55"];
m15_12 [cluster="CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.Unit.UnknownArgumentsFixture.Parse_valid_unknown_arguments()", span="41-41"];
m15_19 [cluster="Unk.Be", file="UnknownArgumentsFixture.cs", label="Entry Unk.Be", span=""];
m15_20 [cluster="CommandLine.Tests.Fakes.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m15_18 [cluster="Unk.BeTrue", file="UnknownArgumentsFixture.cs", label="Entry Unk.BeTrue", span=""];
m15_15 [cluster="CommandLine.ParserSettings.ParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="44-44"];
m15_16 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="134-134"];
m15_14 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="67-67"];
m15_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m15_13 [cluster="CommandLine.Tests.Fakes.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m16_16 [cluster="Unk.Any", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Any", span=""];
m16_35 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", span="78-78"];
m16_19 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="guard.Item1(spec)", span="41-41"];
m16_20 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="Exit lambda expression", span="41-41"];
m16_21 [cluster="System.Func<T, TResult>.Invoke(T)", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m16_22 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="50-50"];
m16_24 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="TypeDescriptorKind.Scalar", span="54-54"];
m16_25 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="return Maybe.Just(1);", span="55-55"];
m16_26 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="TypeDescriptorKind.Sequence", span="56-56"];
m16_27 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="int min", span="57-57"];
m16_28 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="int max", span="58-58"];
m16_29 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="specification.Min.MatchJust(out min)\r\n                        && specification.Max.MatchJust(out max)", span="59-60"];
m16_23 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueListAttributeParsingFixture.cs", label="specification.ConversionType.ToDescriptorKind()", span="52-52"];
m16_30 [cluster="CommandLine.Core.SpecificationExtensions.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", color=green, community=0, file="ValueListAttributeParsingFixture.cs", label="0: min >= 0 && max >= 0", span="62-62"];
m16_46 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="96-96"];
m16_48 [cluster="CommandLine.Tests.Fakes.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36"];
m16_47 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", span="87-87"];
m16_49 [cluster="Unk.HaveCount", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.HaveCount", span=""];
m16_50 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="Entry lambda expression", span="95-95"];
m16_51 [cluster="lambda expression", file="ValueListAttributeParsingFixture.cs", label="n == 0", span="95-95"];
m16_37 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_outside_bounds()", file="ValueListAttributeParsingFixture.cs", label="var result = parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="80-81"];
m16_17 [cluster="Unk.Be", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Be", span=""];
m16_34 [cluster="System.Type.ToDescriptorKind()", file="ValueListAttributeParsingFixture.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m16_36 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
m16_38 [cluster="CommandLine.Core.SpecificationExtensions.WithRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="73-73"];
m16_39 [cluster="CommandLine.Core.SpecificationExtensions.WithRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="ValueListAttributeParsingFixture.cs", label="int min", span="75-75"];
m16_10 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="55-55"];
m16_11 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41"];
m16_12 [cluster="CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m16_14 [cluster="CommandLine.Parser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="134-134"];
m16_13 [cluster="CommandLine.Parser.Parser()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Parser.Parser()", span="55-55"];
m16_15 [cluster="Unk.Should", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m16_31 [cluster="CommandLine.Tests.Fakes.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m16_32 [cluster="Unk.BeNull", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.BeNull", span=""];
m16_33 [cluster="Unk.BeFalse", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.BeFalse", span=""];
m16_18 [cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m16_52 [cluster="CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="94-94"];
m16_42 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: var parser = new Parser()", span="90-90"];
m16_41 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="89-89"];
m16_40 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", span="87-87"];
m16_43 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs", label="var result = parser.ParseArguments(new string[] { }, options)", span="91-91"];
m16_44 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_succeeds()", file="ValueListAttributeParsingFixture.cs", label="result.Should().BeTrue()", span="93-93"];
m16_53 [cluster="CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ValueListAttributeParsingFixture.cs", label="int max", span="96-96"];
m16_54 [cluster="CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ValueListAttributeParsingFixture.cs", label="specification.Max.MatchJust(out max)", span="97-97"];
m16_55 [cluster="CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="1: return predicate(max);", span="99-99"];
m16_56 [cluster="CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ValueListAttributeParsingFixture.cs", label="return false;", span="101-101"];
m16_57 [cluster="CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="94-94"];
m16_58 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_with_max_elem_set_to_zero_failes()", file="ValueListAttributeParsingFixture.cs", label=guard, span=""];
m16_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m16_0 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", span="41-41"];
m16_1 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="43-43"];
m16_2 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", color=red, community=0, file="ValueListAttributeParsingFixture.cs", label="0: var parser = new Parser()", span="44-44"];
m16_3 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="var result = parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="45-46"];
m16_5 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="options.Items[0].Should().Be(''file1.ext'')", span="50-50"];
m16_6 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="options.Items[1].Should().Be(''file2.ext'')", span="51-51"];
m16_7 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="options.Items[2].Should().Be(''file3.ext'')", span="52-52"];
m16_8 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="options.StringValue.Should().Be(''out.ext'')", span="53-53"];
m16_9 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="options.BooleanValue.Should().BeTrue()", span="54-54"];
m16_4 [cluster="CommandLine.Tests.Unit.ValueListAttributeParsingFixture.Value_list_attribute_isolates_non_option_values()", file="ValueListAttributeParsingFixture.cs", label="result.Should().BeTrue()", span="48-48"];
m17_11 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28"];
m17_14 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="''https://value.org/user/file.git''.ShouldBeEquivalentTo(expected)", span="37-37"];
m17_13 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .WithParsed<Add_Verb>(opts => expected = ''wrong1'')\r\n                .WithParsed<Commit_Verb>(opts => expected = ''wrong2'')\r\n                .WithParsed<Clone_Verb>(opts => expected = opts.Urls.First())", span="31-35"];
m17_12 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="var expected = string.Empty", span="30-30"];
m17_15 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28"];
m17_6 [cluster="CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", span="20-20"];
m17_135 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", span="68-68"];
m17_16 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m17_65 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75"];
m17_68 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="82-82"];
m17_67 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="78-80"];
m17_66 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="var expected = ''a default''", span="77-77"];
m17_69 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75"];
m17_104 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m17_106 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="(-1).ShouldBeEquivalentTo(expected)", span="114-114"];
m17_105 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="var expected = Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .Return(_ => 0, _ => -1)", span="111-112"];
m17_107 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m17_54 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64"];
m17_57 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="71-71"];
m17_56 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="67-69"];
m17_55 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="var expected = string.Empty", span="66-66"];
m17_58 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64"];
m17_17 [cluster="CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", span="37-37"];
m17_28 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41"];
m17_31 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="47-47"];
m17_30 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''-i'', ''aaa'' })\r\n                .WithNotParsed(_ => expected = ''changed'')", span="44-45"];
m17_29 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="var expected = ''a default''", span="43-43"];
m17_32 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41"];
m17_91 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="159-159"];
m17_163 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="248-248"];
m17_179 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="168-168"];
m17_8 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="22-22"];
m17_10 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="22-22"];
m17_9 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = opts.StringValue", span="22-22"];
m17_34 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="45-45"];
m17_59 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="68-68"];
m17_62 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="69-69"];
m17_70 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="79-79"];
m17_73 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="80-80"];
m17_81 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="89-89"];
m17_84 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="89-89"];
m17_108 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="112-112"];
m17_111 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="112-112"];
m17_18 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="33-33"];
m17_21 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="34-34"];
m17_24 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="35-35"];
m17_42 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="55-55"];
m17_45 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="56-56"];
m17_48 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="57-57"];
m17_51 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="58-58"];
m17_92 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="100-100"];
m17_95 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="101-101"];
m17_98 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="102-102"];
m17_101 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="103-103"];
m17_118 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="123-123"];
m17_121 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="124-124"];
m17_124 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="125-125"];
m17_127 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="126-126"];
m17_136 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="137-137"];
m17_139 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="138-138"];
m17_142 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="139-139"];
m17_145 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="140-140"];
m17_153 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="151-151"];
m17_156 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="152-152"];
m17_164 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="163-163"];
m17_167 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="164-164"];
m17_170 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="165-165"];
m17_173 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="166-166"];
m17_176 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Entry lambda expression", span="167-167"];
m17_36 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="45-45"];
m17_35 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''changed''", span="45-45"];
m17_61 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="68-68"];
m17_60 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = opts.StringValue", span="68-68"];
m17_64 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="69-69"];
m17_63 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''changed''", span="69-69"];
m17_72 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="79-79"];
m17_71 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = opts.StringValue", span="79-79"];
m17_75 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="80-80"];
m17_74 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''changed''", span="80-80"];
m17_83 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="89-89"];
m17_82 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=0, span="89-89"];
m17_86 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="89-89"];
m17_85 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="-1", span="89-89"];
m17_110 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="112-112"];
m17_109 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=0, span="112-112"];
m17_113 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="112-112"];
m17_112 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="-1", span="112-112"];
m17_20 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="33-33"];
m17_19 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong1''", span="33-33"];
m17_23 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="34-34"];
m17_22 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong2''", span="34-34"];
m17_26 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="35-35"];
m17_25 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = opts.Urls.First()", span="35-35"];
m17_44 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="55-55"];
m17_43 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong1''", span="55-55"];
m17_47 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="56-56"];
m17_46 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong2''", span="56-56"];
m17_50 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="57-57"];
m17_49 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong3''", span="57-57"];
m17_53 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="58-58"];
m17_52 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''changed''", span="58-58"];
m17_94 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="100-100"];
m17_93 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=0, span="100-100"];
m17_97 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="101-101"];
m17_96 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=1, span="101-101"];
m17_100 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="102-102"];
m17_99 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=2, span="102-102"];
m17_103 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="103-103"];
m17_102 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=3, span="103-103"];
m17_120 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="123-123"];
m17_119 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=0, span="123-123"];
m17_123 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="124-124"];
m17_122 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=1, span="124-124"];
m17_126 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="125-125"];
m17_125 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=2, span="125-125"];
m17_129 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="126-126"];
m17_128 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=3, span="126-126"];
m17_138 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="137-137"];
m17_137 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong1''", span="137-137"];
m17_141 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="138-138"];
m17_140 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong2''", span="138-138"];
m17_144 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="139-139"];
m17_143 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = ''wrong3''", span="139-139"];
m17_147 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="140-140"];
m17_146 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="expected = opts.FileName", span="140-140"];
m17_155 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="151-151"];
m17_154 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=1, span="151-151"];
m17_158 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="152-152"];
m17_157 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=2, span="152-152"];
m17_166 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="163-163"];
m17_165 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=0, span="163-163"];
m17_169 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="164-164"];
m17_168 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=1, span="164-164"];
m17_172 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="165-165"];
m17_171 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=2, span="165-165"];
m17_175 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="166-166"];
m17_174 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=4, span="166-166"];
m17_178 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="167-167"];
m17_177 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=3, span="167-167"];
m17_180 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label=5, span="168-168"];
m17_181 [cluster="lambda expression", file="ValueOptionAttributeFixture.cs", label="Exit lambda expression", span="168-168"];
m17_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueOptionAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m17_148 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m17_150 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ValueOptionAttributeFixture.cs", label="1.ShouldBeEquivalentTo(expected)", span="154-154"];
m17_149 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ValueOptionAttributeFixture.cs", label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb, Derived_Verb>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (Base_Class_For_Verb opts) => 1,\r\n                    errs => 2)", span="148-152"];
m17_151 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m17_130 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m17_133 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ValueOptionAttributeFixture.cs", label="''dummy.bin''.ShouldBeEquivalentTo(expected)", span="142-142"];
m17_132 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ValueOptionAttributeFixture.cs", label="Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb, Derived_Verb>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .WithParsed<Add_Verb>(opts => expected = ''wrong1'')\r\n                .WithParsed<Commit_Verb>(opts => expected = ''wrong2'')\r\n                .WithParsed<Clone_Verb>(opts => expected = ''wrong3'')\r\n                .WithParsed<Base_Class_For_Verb>(opts => expected = opts.FileName)", span="135-140"];
m17_131 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ValueOptionAttributeFixture.cs", label="var expected = string.Empty", span="134-134"];
m17_134 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m17_76 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86"];
m17_78 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="0.ShouldBeEquivalentTo(expected)", span="91-91"];
m17_77 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="var expected = Parser.Default.ParseArguments<Simple_Options>(new[] { ''--stringvalue'', ''value'' })\r\n                .Return(_ => 0, _ => -1)", span="88-89"];
m17_79 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86"];
m17_80 [cluster="CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="77-77"];
m17_114 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m17_116 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="3.ShouldBeEquivalentTo(expected)", span="128-128"];
m17_115 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''undefined'', ''-xyz'' })\r\n                .Return(\r\n                    (Add_Verb opts) => 0,\r\n                    (Commit_Verb opts) => 1,\r\n                    (Clone_Verb opts) => 2,\r\n                    errs => 3)", span="120-126"];
m17_117 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m17_33 [cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="58-58"];
m17_37 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51"];
m17_40 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="60-60"];
m17_39 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''undefined'', ''-xyz'' })\r\n                .WithParsed<Add_Verb>(opts => expected = ''wrong1'')\r\n                .WithParsed<Commit_Verb>(opts => expected = ''wrong2'')\r\n                .WithParsed<Clone_Verb>(opts => expected = ''wrong3'')\r\n                .WithNotParsed(_ => expected = ''changed'')", span="54-58"];
m17_38 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="var expected = ''a default''", span="53-53"];
m17_41 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51"];
m17_159 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m17_161 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ValueOptionAttributeFixture.cs", label="4.ShouldBeEquivalentTo(expected)", span="170-170"];
m17_160 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ValueOptionAttributeFixture.cs", label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb, Derived_Verb>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (Add_Verb opts) => 0,\r\n                    (Commit_Verb opts) => 1,\r\n                    (Clone_Verb opts) => 2,\r\n                    (Base_Class_For_Verb opts) => 4,\r\n                    (Derived_Verb opts) => 3,\r\n                    errs => 5)", span="160-168"];
m17_162 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m17_0 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18"];
m17_3 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", color=green, community=0, file="ValueOptionAttributeFixture.cs", label="0: ''value''.ShouldBeEquivalentTo(expected)", span="24-24"];
m17_2 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="Parser.Default.ParseArguments<Simple_Options>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)", span="21-22"];
m17_1 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="var expected = string.Empty", span="20-20"];
m17_4 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18"];
m17_5 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m17_152 [cluster="CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="98-98"];
m17_87 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m17_89 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="2.ShouldBeEquivalentTo(expected)", span="105-105"];
m17_88 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="var expected = Parser.Default.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .Return(\r\n                    (Add_Verb opts) => 0,\r\n                    (Commit_Verb opts) => 1,\r\n                    (Clone_Verb opts) => 2,\r\n                    errs => 3)", span="97-103"];
m17_90 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ValueOptionAttributeFixture.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m17_7 [cluster="Unk.ShouldBeEquivalentTo", file="ValueOptionAttributeFixture.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m19_20 [cluster="Unk.BeTrue", file="VerbsFixture.cs", label="Entry Unk.BeTrue", span=""];
m19_64 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="VerbsFixture.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="86-86"];
m19_15 [cluster="CommandLine.Tests.Fakes.OptionsWithVerbs.OptionsWithVerbs()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithVerbs.OptionsWithVerbs()", span="79-79"];
m19_22 [cluster="Unk.>", file="VerbsFixture.cs", label="Entry Unk.>", span=""];
m19_0 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", span="41-41"];
m19_1 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="string invokedVerb = null", span="43-43"];
m19_2 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="object invokedVerbInstance = null", span="44-44"];
m19_3 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="46-46"];
m19_4 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="options.AddVerb.Should().BeNull()", span="47-47"];
m19_5 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", color=green, community=0, file="VerbsFixture.cs", label="0: var parser = new Parser()", span="49-49"];
m19_95 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", span="201-201"];
m19_99 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", color=green, community=0, file="VerbsFixture.cs", label="0: var parser = new Parser()", span="208-208"];
m19_98 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbsNoHelp2()", span="206-206"];
m19_100 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="var result = parser.ParseArguments(new[] {''with'', ''--must''}, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="209-214"];
m19_97 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="object invokedVerbInstance = null", span="204-204"];
m19_96 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="string invokedVerb = null", span="203-203"];
m19_101 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="result.Should().BeFalse()", span="216-216"];
m19_102 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="invokedVerb.Should().Be(''with'')", span="218-218"];
m19_103 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="invokedVerbInstance.Should().BeNull()", span="219-219"];
m19_104 [cluster="CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.Unit.VerbsFixture.Should_fail_gracefully_when_no_getusage_is_defined()", span="201-201"];
m19_63 [cluster="System.IO.StringWriter.StringWriter()", file="VerbsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m19_65 [cluster="Unk.BeFalse", file="VerbsFixture.cs", label="Entry Unk.BeFalse", span=""];
m19_18 [cluster="CommandLine.Parser.Parser()", file="VerbsFixture.cs", label="Entry CommandLine.Parser.Parser()", span="55-55"];
m19_8 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="invokedVerb.Should().Be(''add'')", span="59-59"];
m19_29 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", span="70-70"];
m19_36 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", color=green, community=0, file="VerbsFixture.cs", label="0: var parser = new Parser()", span="80-80"];
m19_35 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.CreationProof = proof", span="78-78"];
m19_37 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="var result = parser.ParseArguments(new string[] { ''commit'', ''--amend'' }, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="81-86"];
m19_32 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="var proof = new Random().Next(int.MaxValue)", span="75-75"];
m19_33 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="76-76"];
m19_34 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.Should().NotBeNull()", span="77-77"];
m19_30 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="string invokedVerb = null", span="72-72"];
m19_31 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="object invokedVerbInstance = null", span="73-73"];
m19_38 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="result.Should().BeTrue()", span="88-88"];
m19_39 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="invokedVerb.Should().Be(''commit'')", span="90-90"];
m19_40 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="invokedVerbInstance.Should().BeOfType<CommitSubOptions>()", span="91-91"];
m19_41 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.CreationProof.Should().Be(proof)", span="94-94"];
m19_42 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="options.CommitVerb.Amend.Should().BeTrue()", span="95-95"];
m19_43 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_using_instance()", span="70-70"];
m19_106 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="210-214"];
m19_69 [cluster="lambda expression", color=green, community=0, file="VerbsFixture.cs", label="1: with.HelpWriter = testWriter", span="107-107"];
m19_68 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="107-107"];
m19_70 [cluster="lambda expression", file="VerbsFixture.cs", label="Exit lambda expression", span="107-107"];
m19_89 [cluster="lambda expression", color=green, community=0, file="VerbsFixture.cs", label="1: with.HelpWriter = testWriter", span="133-133"];
m19_88 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="133-133"];
m19_90 [cluster="lambda expression", file="VerbsFixture.cs", label="Exit lambda expression", span="133-133"];
m19_25 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="51-55"];
m19_46 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="82-86"];
m19_71 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="109-113"];
m19_91 [cluster="lambda expression", file="VerbsFixture.cs", label="Entry lambda expression", span="135-139"];
m19_28 [cluster="lambda expression", file="VerbsFixture.cs", label="Exit lambda expression", span="51-55"];
m19_26 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerb = verb", span="53-53"];
m19_27 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerbInstance = subOptions", span="54-54"];
m19_49 [cluster="lambda expression", file="VerbsFixture.cs", label="Exit lambda expression", span="82-86"];
m19_47 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerb = verb", span="84-84"];
m19_48 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerbInstance = subOptions", span="85-85"];
m19_74 [cluster="lambda expression", file="VerbsFixture.cs", label="Exit lambda expression", span="109-113"];
m19_72 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerb = verb", span="111-111"];
m19_73 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerbInstance = subOptions", span="112-112"];
m19_94 [cluster="lambda expression", file="VerbsFixture.cs", label="Exit lambda expression", span="135-139"];
m19_92 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerb = verb", span="137-137"];
m19_93 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerbInstance = subOptions", span="138-138"];
m19_107 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerb = verb", span="212-212"];
m19_108 [cluster="lambda expression", file="VerbsFixture.cs", label="invokedVerbInstance = subOptions", span="213-213"];
m19_109 [cluster="lambda expression", file="VerbsFixture.cs", label="Exit lambda expression", span="210-214"];
m19_44 [cluster="System.Random.Random()", file="VerbsFixture.cs", label="Entry System.Random.Random()", span="0-0"];
m19_45 [cluster="System.Random.Next(int)", file="VerbsFixture.cs", label="Entry System.Random.Next(int)", span="0-0"];
m19_16 [cluster="Unk.Should", file="VerbsFixture.cs", label="Entry Unk.Should", span=""];
m19_50 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", span="99-99"];
m19_55 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", color=green, community=0, file="VerbsFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="107-107"];
m19_54 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="var testWriter = new StringWriter()", span="105-105"];
m19_56 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="var result = parser.ParseArguments(new string[] {}, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="108-113"];
m19_53 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="104-104"];
m19_60 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="var helpText = testWriter.ToString()", span="120-120"];
m19_51 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="string invokedVerb = null", span="101-101"];
m19_52 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="object invokedVerbInstance = null", span="102-102"];
m19_57 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="result.Should().BeFalse()", span="115-115"];
m19_58 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="invokedVerb.Should().BeEmpty()", span="117-117"];
m19_59 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="invokedVerbInstance.Should().BeNull()", span="118-118"];
m19_61 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="helpText.Should().Be(''verbs help index'')", span="121-121"];
m19_62 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.Unit.VerbsFixture.Failed_parsing_prints_help_index()", span="99-99"];
m19_21 [cluster="Unk.Be", file="VerbsFixture.cs", label="Entry Unk.Be", span=""];
m19_7 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="result.Should().BeTrue()", span="57-57"];
m19_67 [cluster="System.IO.StringWriter.ToString()", file="VerbsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m19_6 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="VerbsFixture.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m19_9 [cluster="System.Type.ToTargetType()", file="VerbsFixture.cs", label="Entry System.Type.ToTargetType()", span="33-33"];
m19_10 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="CommandLine.Core.ValueSpecification", span=""];
m19_11 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="options.AddVerb.CreationProof.Should().NotHaveValue()", span="64-64"];
m19_12 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="options.AddVerb.Patch.Should().BeTrue()", span="65-65"];
m19_13 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="options.AddVerb.FileName[0].Should().Be(''untracked.bin'')", span="66-66"];
m19_14 [cluster="CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.Unit.VerbsFixture.Parse_verbs_create_instance()", span="41-41"];
m19_19 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="VerbsFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="162-162"];
m19_66 [cluster="Unk.BeEmpty", file="VerbsFixture.cs", label="Entry Unk.BeEmpty", span=""];
m19_24 [cluster="Unk.NotHaveValue", file="VerbsFixture.cs", label="Entry Unk.NotHaveValue", span=""];
m19_105 [cluster="CommandLine.Tests.Fakes.OptionsWithVerbsNoHelp2.OptionsWithVerbsNoHelp2()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithVerbsNoHelp2.OptionsWithVerbsNoHelp2()", span="129-129"];
m19_75 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Entry CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="125-125"];
m19_80 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="133-133"];
m19_79 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var testWriter = new StringWriter()", span="131-131"];
m19_81 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var result = parser.ParseArguments(new string[] {''clone'', ''--no_hardlinks''}, options,\r\n                (verb, subOptions) =>\r\n                {\r\n                    invokedVerb = verb;\r\n                    invokedVerbInstance = subOptions;\r\n                })", span="134-139"];
m19_78 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var options = new OptionsWithVerbs()", span="130-130"];
m19_85 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="var helpText = testWriter.ToString()", span="146-146"];
m19_76 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="string invokedVerb = null", span="127-127"];
m19_77 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="object invokedVerbInstance = null", span="128-128"];
m19_82 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="result.Should().BeFalse()", span="141-141"];
m19_83 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="invokedVerb.Should().Be(''clone'')", span="143-143"];
m19_84 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="invokedVerbInstance.Should().BeNull()", span="144-144"];
m19_86 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="helpText.Should().Be(''help for: clone'')", span="147-147"];
m19_87 [cluster="CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsFixture.cs", label="Exit CommandLine.Tests.Unit.VerbsFixture.Failed_verb_parsing_prints_particular_help_screen()", span="125-125"];
m19_17 [cluster="Unk.BeNull", file="VerbsFixture.cs", label="Entry Unk.BeNull", span=""];
m19_23 [cluster="Unk.NotBeNull", file="VerbsFixture.cs", label="Entry Unk.NotBeNull", span=""];
m19_110 [file="VerbsFixture.cs", label=testWriter, span=""];
m19_111 [file="VerbsFixture.cs", label=testWriter, span=""];
m20_39 [cluster="Unk.Be", file="VerbsHelpTextFixture.cs", label="Entry Unk.Be", span=""];
m20_10 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="62-62"];
m20_16 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="70-70"];
m20_14 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="68-68"];
m20_15 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="69-69"];
m20_17 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] { ''clone'', ''--no_hardlinks'' }, options,\r\n                (verb, subOptions) =>\r\n                    {\r\n                        invokedVerb = verb;\r\n                        invokedVerbInstance = subOptions;\r\n                    })", span="71-76"];
m20_13 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="67-67"];
m20_19 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="80-80"];
m20_11 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="string invokedVerb = null", span="64-64"];
m20_12 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="object invokedVerbInstance = null", span="65-65"];
m20_18 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="result.Should().BeFalse()", span="78-78"];
m20_25 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="invokedVerb.Should().Be(''clone'')", span="88-88"];
m20_26 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="invokedVerbInstance.Should().Be(null)", span="89-89"];
m20_20 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="81-81"];
m20_21 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="82-82"];
m20_24 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="lines[7].Trim().Should().Be(''-q, --quiet       Suppress summary message.'')", span="86-86"];
m20_22 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="lines[5].Trim().Should().Be(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="84-84"];
m20_23 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="lines[6].Trim().Should().Be(''filesystem by copying files.'')", span="85-85"];
m20_27 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_verb_parsing_prints_particular_help_screen()", span="62-62"];
m20_3 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="121-121"];
m20_72 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="126-126"];
m20_70 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="124-124"];
m20_71 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="125-125"];
m20_73 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var result = parser.ParseArguments(args, options,\r\n                (_, __) =>\r\n                    {\r\n                    })", span="127-130"];
m20_69 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="123-123"];
m20_75 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="134-134"];
m20_74 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="result.Should().BeFalse()", span="132-132"];
m20_76 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="135-135"];
m20_77 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="136-136"];
m20_78 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="lines[5].Trim().Should().Be(''add       Add file contents to the index.'')", span="138-138"];
m20_79 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="lines[6].Trim().Should().Be(''commit    Record changes to the repository.'')", span="139-139"];
m20_80 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="lines[7].Trim().Should().Be(''clone     Clone a repository into a new directory.'')", span="140-140"];
m20_81 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.DoCoreTestForIndex(string[])", span="121-121"];
m20_35 [cluster="System.IO.StringWriter.ToString()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m20_29 [cluster="System.IO.StringWriter.StringWriter()", file="VerbsHelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m20_30 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="VerbsHelpTextFixture.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m20_31 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="86-86"];
m20_4 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", span="50-50"];
m20_5 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] {''help''})", span="52-52"];
m20_6 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_prints_help_index()", span="50-50"];
m20_38 [cluster="string.Trim()", file="VerbsHelpTextFixture.cs", label="Entry string.Trim()", span="0-0"];
m20_34 [cluster="Unk.BeFalse", file="VerbsHelpTextFixture.cs", label="Entry Unk.BeFalse", span=""];
m20_85 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Entry lambda expression", span="128-130"];
m20_41 [cluster="lambda expression", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: with.HelpWriter = testWriter", span="70-70"];
m20_40 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Entry lambda expression", span="70-70"];
m20_42 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Exit lambda expression", span="70-70"];
m20_63 [cluster="lambda expression", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: with.HelpWriter = testWriter", span="102-102"];
m20_62 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Entry lambda expression", span="102-102"];
m20_64 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Exit lambda expression", span="102-102"];
m20_83 [cluster="lambda expression", color=green, community=0, file="VerbsHelpTextFixture.cs", label="1: with.HelpWriter = testWriter", span="126-126"];
m20_82 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Entry lambda expression", span="126-126"];
m20_84 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Exit lambda expression", span="126-126"];
m20_43 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Entry lambda expression", span="72-76"];
m20_65 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Entry lambda expression", span="104-108"];
m20_46 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Exit lambda expression", span="72-76"];
m20_44 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="invokedVerb = verb", span="74-74"];
m20_45 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="invokedVerbInstance = subOptions", span="75-75"];
m20_68 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Exit lambda expression", span="104-108"];
m20_66 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="invokedVerb = verb", span="106-106"];
m20_67 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="invokedVerbInstance = subOptions", span="107-107"];
m20_86 [cluster="lambda expression", file="VerbsHelpTextFixture.cs", label="Exit lambda expression", span="128-130"];
m20_47 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="94-94"];
m20_53 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", color=green, community=0, file="VerbsHelpTextFixture.cs", label="0: var parser = new Parser(with => with.HelpWriter = testWriter)", span="102-102"];
m20_51 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="var testWriter = new StringWriter()", span="100-100"];
m20_52 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="ReflectionUtil.AssemblyFromWhichToPullInformation = Assembly.GetExecutingAssembly()", span="101-101"];
m20_54 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''help'', ''add''}, options,\r\n                (verb, subOptions) =>\r\n                    {\r\n                        invokedVerb = verb;\r\n                        invokedVerbInstance = subOptions;\r\n                    })", span="103-108"];
m20_50 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="var options = new OptionsWithVerbsHelp()", span="99-99"];
m20_56 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="var helpText = testWriter.ToString()", span="112-112"];
m20_48 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="string invokedVerb = null", span="96-96"];
m20_49 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="object invokedVerbInstance = null", span="97-97"];
m20_55 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="result.Should().BeFalse()", span="110-110"];
m20_59 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="invokedVerb.Should().Be(''help'')", span="116-116"];
m20_60 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="invokedVerbInstance.Should().Be(null)", span="117-117"];
m20_57 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="Console.WriteLine(helpText)", span="113-113"];
m20_58 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="var lines = helpText.Split(new string[] { Environment.NewLine }, StringSplitOptions.RemoveEmptyEntries)", span="114-114"];
m20_61 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_help_of_particular_verb_without_instance_should_work()", span="94-94"];
m20_32 [cluster="CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Parser.ParseArguments(string[], object, System.Action<string, object>)", span="162-162"];
m20_37 [cluster="string.Split(string[], System.StringSplitOptions)", file="VerbsHelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m20_0 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="44-44"];
m20_1 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] {})", span="46-46"];
m20_2 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Failed_parsing_prints_help_index()", span="44-44"];
m20_7 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="56-56"];
m20_8 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="DoCoreTestForIndex(new string[] { ''help'', ''undefined'' })", span="58-58"];
m20_9 [cluster="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", file="VerbsHelpTextFixture.cs", label="Exit CommandLine.Tests.Unit.Text.VerbsHelpTextFixture.Requesting_bad_help_prints_help_index()", span="56-56"];
m20_33 [cluster="Unk.Should", file="VerbsHelpTextFixture.cs", label="Entry Unk.Should", span=""];
m20_36 [cluster="System.Console.WriteLine(string)", file="VerbsHelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m20_28 [cluster="CommandLine.Tests.Fakes.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", file="VerbsHelpTextFixture.cs", label="Entry CommandLine.Tests.Fakes.OptionsWithVerbsHelp.OptionsWithVerbsHelp()", span="80-80"];
m20_88 [file="VerbsHelpTextFixture.cs", label=testWriter, span=""];
m20_89 [file="VerbsHelpTextFixture.cs", label=testWriter, span=""];
m20_90 [file="VerbsHelpTextFixture.cs", label=testWriter, span=""];
m20_87 [file="VerbsHelpTextFixture.cs", label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture", span=""];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_22  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_3  [key=2, style=dotted];
m0_47 -> m0_19  [key=2, style=dotted];
m0_47 -> m0_45  [key=2, style=dotted];
m0_47 -> m0_33  [key=2, style=dotted];
m0_47 -> m0_20  [key=2, style=dotted];
m0_47 -> m0_42  [color=blue, key=0, style=bold];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_4  [key=2, style=dotted];
m0_48 -> m0_21  [key=2, style=dotted];
m0_48 -> m0_34  [key=2, style=dotted];
m0_48 -> m0_50  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_48 -> m0_51  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_48 -> m0_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_48 -> m0_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_5  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_5  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_5  [key=2, style=dotted];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_5  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_5  [key=2, style=dotted];
m0_53 -> m0_51  [color=blue, key=0, style=bold];
m0_54 -> m0_46  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_16 -> m0_10  [color=blue, key=0, style=bold];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_60  [key=2, style=dotted];
m0_78 -> m0_17  [key=2, style=dotted];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_78 -> m0_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> m0_3  [key=2, style=dotted];
m0_23 -> m0_19  [key=2, style=dotted];
m0_23 -> m0_32  [key=2, style=dotted];
m0_23 -> m0_33  [key=2, style=dotted];
m0_23 -> m0_20  [key=2, style=dotted];
m0_23 -> m0_26  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_23 -> m0_28  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_23 -> m0_29  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_4  [key=2, style=dotted];
m0_24 -> m0_21  [key=2, style=dotted];
m0_24 -> m0_34  [key=2, style=dotted];
m0_24 -> m0_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_24 -> m0_5  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_5  [key=2, style=dotted];
m0_25 -> m0_29  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_25 -> m0_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_5  [key=2, style=dotted];
m0_26 -> m0_29  [color=green, key=1, label=requiredWithValue, style=dashed];
m0_26 -> m0_26  [color=darkseagreen4, key=1, label=sp, style=dashed];
m0_26 -> m0_17  [key=2, style=dotted];
m0_26 -> m0_18  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_5  [key=2, style=dotted];
m0_27 -> m0_27  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_27 -> m0_32  [key=2, style=dotted];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_5  [key=2, style=dotted];
m0_28 -> m0_28  [color=darkseagreen4, key=1, label=sp, style=dashed];
m0_28 -> m0_17  [key=2, style=dotted];
m0_28 -> m0_33  [key=2, style=dotted];
m0_28 -> m0_34  [key=2, style=dotted];
m0_29 -> m0_30  [color=green, key=0, style=solid];
m0_29 -> m0_5  [key=2, style=dotted];
m0_29 -> m0_29  [color=green, key=1, label=sp, style=dashed];
m0_29 -> m0_35  [color=green, key=2, style=dotted];
m0_29 -> m0_17  [color=green, key=2, style=dotted];
m0_29 -> m0_33  [color=green, key=2, style=dotted];
m0_29 -> m0_36  [color=green, key=2, style=dotted];
m0_29 -> m0_37  [color=green, key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_5  [key=2, style=dotted];
m0_30 -> m0_30  [color=darkseagreen4, key=1, label=sp, style=dashed];
m0_30 -> m0_38  [key=2, style=dotted];
m0_30 -> m0_39  [key=2, style=dotted];
m0_31 -> m0_22  [color=blue, key=0, style=bold];
m0_31 -> m0_25  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_7  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_60  [key=2, style=dotted];
m0_63 -> m0_17  [key=2, style=dotted];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_63 -> m0_66  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_17  [key=2, style=dotted];
m0_64 -> m0_64  [color=darkseagreen4, key=1, label=sp, style=dashed];
m0_64 -> m0_70  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_73  [key=2, style=dotted];
m0_65 -> m0_33  [key=2, style=dotted];
m0_65 -> m0_48  [key=2, style=dotted];
m0_65 -> m0_65  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_65 -> m0_71  [key=2, style=dotted];
m0_65 -> m0_72  [key=2, style=dotted];
m0_65 -> m0_75  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_4  [key=2, style=dotted];
m0_66 -> m0_74  [key=2, style=dotted];
m0_66 -> m0_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_69  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_70  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_71  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_66 -> m0_66  [color=darkseagreen4, key=1, label=x, style=dashed];
m0_66 -> m0_19  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_75  [key=2, style=dotted];
m0_67 -> m0_76  [key=2, style=dotted];
m0_67 -> m0_67  [color=darkseagreen4, key=1, label=y, style=dashed];
m0_67 -> m0_73  [key=2, style=dotted];
m0_67 -> m0_74  [key=2, style=dotted];
m0_68 -> m0_69  [key=0, style=solid];
m0_68 -> m0_75  [key=2, style=dotted];
m0_68 -> m0_76  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_75  [key=2, style=dotted];
m0_69 -> m0_76  [key=2, style=dotted];
m0_69 -> m0_63  [color=blue, key=0, style=bold];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_75  [key=2, style=dotted];
m0_70 -> m0_76  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_75  [key=2, style=dotted];
m0_71 -> m0_76  [key=2, style=dotted];
m0_72 -> m0_62  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_77 -> m0_75  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_89  [key=2, style=dotted];
m0_80 -> m0_33  [key=2, style=dotted];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_4  [key=2, style=dotted];
m0_81 -> m0_74  [key=2, style=dotted];
m0_81 -> m0_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_81 -> m0_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_81 -> m0_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_81 -> m0_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_81 -> m0_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_82 -> m0_83  [key=0, style=solid];
m0_82 -> m0_75  [key=2, style=dotted];
m0_82 -> m0_76  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_75  [key=2, style=dotted];
m0_83 -> m0_76  [key=2, style=dotted];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_75  [key=2, style=dotted];
m0_84 -> m0_76  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_75  [key=2, style=dotted];
m0_85 -> m0_76  [key=2, style=dotted];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_75  [key=2, style=dotted];
m0_86 -> m0_76  [key=2, style=dotted];
m0_86 -> m0_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_75  [key=2, style=dotted];
m0_87 -> m0_76  [key=2, style=dotted];
m0_88 -> m0_77  [color=blue, key=0, style=bold];
m0_4 -> m0_8  [key=0, style=solid];
m0_8 -> m0_11  [color=red, key=1, label=lines, style=dashed];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_4  [key=2, style=dotted];
m0_8 -> m0_21  [key=2, style=dotted];
m0_8 -> m0_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_12  [color=red, key=1, label=lines, style=dashed];
m0_8 -> m0_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_8 -> m0_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_9 -> m0_4  [color=blue, key=0, style=bold];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_5  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_153 -> m0_154  [key=0, style=solid];
m0_153 -> m0_117  [key=2, style=dotted];
m0_153 -> m0_32  [key=2, style=dotted];
m0_153 -> m0_119  [key=2, style=dotted];
m0_153 -> m0_125  [key=2, style=dotted];
m0_153 -> m0_121  [key=2, style=dotted];
m0_154 -> m0_155  [key=0, style=solid];
m0_154 -> m0_166  [key=2, style=dotted];
m0_155 -> m0_156  [key=0, style=solid];
m0_155 -> m0_4  [key=2, style=dotted];
m0_155 -> m0_21  [key=2, style=dotted];
m0_155 -> m0_34  [key=2, style=dotted];
m0_155 -> m0_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_162  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_163  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_155 -> m0_164  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_167  [key=2, style=dotted];
m0_156 -> m0_168  [key=2, style=dotted];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_167  [key=2, style=dotted];
m0_157 -> m0_168  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_5  [key=2, style=dotted];
m0_159 -> m0_160  [key=0, style=solid];
m0_159 -> m0_5  [key=2, style=dotted];
m0_160 -> m0_161  [key=0, style=solid];
m0_160 -> m0_5  [key=2, style=dotted];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_5  [key=2, style=dotted];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_5  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_5  [key=2, style=dotted];
m0_164 -> m0_165  [key=0, style=solid];
m0_164 -> m0_5  [key=2, style=dotted];
m0_165 -> m0_152  [color=blue, key=0, style=bold];
m0_6 -> m0_40  [color=green, key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_40 -> m0_41  [color=green, key=0, style=solid];
m0_40 -> m0_43  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_40 -> m0_5  [key=2, style=dotted];
m0_41 -> m0_6  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_5  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_3  [key=2, style=dotted];
m0_36 -> m0_19  [key=2, style=dotted];
m0_36 -> m0_45  [key=2, style=dotted];
m0_36 -> m0_33  [key=2, style=dotted];
m0_36 -> m0_20  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_4  [key=2, style=dotted];
m0_37 -> m0_21  [key=2, style=dotted];
m0_37 -> m0_34  [key=2, style=dotted];
m0_37 -> m0_39  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_40  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_41  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_42  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_37 -> m0_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_5  [key=2, style=dotted];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_5  [key=2, style=dotted];
m0_42 -> m0_43  [color=green, key=0, style=solid];
m0_42 -> m0_5  [key=2, style=dotted];
m0_43 -> m0_44  [color=green, key=0, style=solid];
m0_43 -> m0_5  [key=2, style=dotted];
m0_43 -> m0_48  [color=green, key=2, style=dotted];
m0_43 -> m0_51  [color=green, key=1, label="lambda expression", style=dashed];
m0_43 -> m0_54  [color=green, key=1, label="lambda expression", style=dashed];
m0_43 -> m0_57  [color=green, key=1, label="lambda expression", style=dashed];
m0_43 -> m0_45  [color=green, key=1, label=options, style=dashed];
m0_44 -> m0_35  [color=blue, key=0, style=bold];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [key=0, style=solid];
m0_44 -> m0_49  [key=2, style=dotted];
m0_45 -> m0_45  [color=darkseagreen4, key=1, label=s, style=dashed];
m0_45 -> m0_47  [key=0, style=solid];
m0_45 -> m0_50  [key=2, style=dotted];
m0_45 -> m0_39  [key=2, style=dotted];
m0_90 -> m0_91  [key=0, style=solid];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_60  [key=2, style=dotted];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_91 -> m0_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_19  [key=2, style=dotted];
m0_93 -> m0_102  [key=2, style=dotted];
m0_93 -> m0_33  [key=2, style=dotted];
m0_93 -> m0_20  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_4  [key=2, style=dotted];
m0_94 -> m0_74  [key=2, style=dotted];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_94 -> m0_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_75  [key=2, style=dotted];
m0_95 -> m0_76  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_75  [key=2, style=dotted];
m0_96 -> m0_76  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_75  [key=2, style=dotted];
m0_97 -> m0_76  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_75  [key=2, style=dotted];
m0_98 -> m0_76  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_75  [key=2, style=dotted];
m0_99 -> m0_76  [key=2, style=dotted];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_75  [key=2, style=dotted];
m0_100 -> m0_76  [key=2, style=dotted];
m0_101 -> m0_90  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_180 -> m0_181  [key=0, style=solid];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_192  [key=2, style=dotted];
m0_181 -> m0_193  [key=2, style=dotted];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_194  [key=2, style=dotted];
m0_182 -> m0_118  [key=2, style=dotted];
m0_182 -> m0_129  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_166  [key=2, style=dotted];
m0_184 -> m0_185  [key=0, style=solid];
m0_184 -> m0_4  [key=2, style=dotted];
m0_184 -> m0_21  [key=2, style=dotted];
m0_184 -> m0_34  [key=2, style=dotted];
m0_184 -> m0_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_184 -> m0_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_184 -> m0_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_184 -> m0_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_184 -> m0_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_185 -> m0_186  [key=0, style=solid];
m0_185 -> m0_167  [key=2, style=dotted];
m0_185 -> m0_168  [key=2, style=dotted];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_167  [key=2, style=dotted];
m0_186 -> m0_168  [key=2, style=dotted];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_5  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_5  [key=2, style=dotted];
m0_189 -> m0_190  [key=0, style=solid];
m0_189 -> m0_5  [key=2, style=dotted];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_5  [key=2, style=dotted];
m0_191 -> m0_180  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_55 -> m0_18  [key=2, style=dotted];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_61  [key=2, style=dotted];
m0_56 -> m0_33  [key=2, style=dotted];
m0_56 -> m0_54  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_4  [key=2, style=dotted];
m0_57 -> m0_21  [key=2, style=dotted];
m0_57 -> m0_34  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_5  [key=2, style=dotted];
m0_58 -> m0_18  [key=2, style=dotted];
m0_58 -> m0_60  [key=2, style=dotted];
m0_59 -> m0_55  [color=blue, key=0, style=bold];
m0_59 -> m0_57  [color=blue, key=0, style=bold];
m0_7 -> m0_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m0_7 -> m0_61  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_16  [key=2, style=dotted];
m0_7 -> m0_17  [key=2, style=dotted];
m0_7 -> m0_18  [key=2, style=dotted];
m0_7 -> m0_19  [key=2, style=dotted];
m0_7 -> m0_20  [key=2, style=dotted];
m0_61 -> m0_64  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_61 -> m0_62  [key=0, style=solid];
m0_75 -> m0_76  [key=0, style=solid];
m0_132 -> m0_133  [key=0, style=solid];
m0_132 -> m0_135  [key=0, style=solid];
m0_132 -> m0_137  [key=0, style=solid];
m0_132 -> m0_139  [key=0, style=solid];
m0_132 -> m0_141  [key=0, style=solid];
m0_132 -> m0_143  [key=0, style=solid];
m0_132 -> m0_145  [key=0, style=solid];
m0_132 -> m0_147  [key=0, style=solid];
m0_132 -> m0_149  [key=0, style=solid];
m0_134 -> m0_150  [key=0, style=solid];
m0_136 -> m0_150  [key=0, style=solid];
m0_138 -> m0_150  [key=0, style=solid];
m0_140 -> m0_150  [key=0, style=solid];
m0_142 -> m0_150  [key=0, style=solid];
m0_144 -> m0_150  [key=0, style=solid];
m0_148 -> m0_150  [key=0, style=solid];
m0_131 -> m0_132  [key=0, style=solid];
m0_131 -> m0_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_131 -> m0_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_131 -> m0_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_131 -> m0_140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_131 -> m0_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_131 -> m0_144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_131 -> m0_148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_133 -> m0_134  [key=0, style=solid];
m0_135 -> m0_136  [key=0, style=solid];
m0_137 -> m0_138  [key=0, style=solid];
m0_139 -> m0_140  [key=0, style=solid];
m0_141 -> m0_142  [key=0, style=solid];
m0_143 -> m0_144  [key=0, style=solid];
m0_145 -> m0_146  [key=0, style=solid];
m0_147 -> m0_148  [key=0, style=solid];
m0_149 -> m0_150  [key=0, style=solid];
m0_149 -> m0_151  [key=2, style=dotted];
m0_146 -> m0_150  [key=0, style=solid];
m0_150 -> m0_131  [color=blue, key=0, style=bold];
m0_11 -> m0_17  [key=2, style=dotted];
m0_11 -> m0_18  [key=2, style=dotted];
m0_11 -> m0_11  [color=darkseagreen4, key=1, label=sp, style=dashed];
m0_11 -> m0_12  [color=red, key=0, style=solid];
m0_11 -> m0_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m0_11 -> m0_5  [color=red, key=2, style=dotted];
m0_10 -> m0_11  [color=red, key=0, style=solid];
m0_10 -> m0_5  [key=2, style=dotted];
m0_12 -> m0_12  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_12 -> m0_13  [color=red, key=0, style=solid];
m0_12 -> m0_5  [color=red, key=2, style=dotted];
m0_14 -> m0_14  [color=darkseagreen4, key=1, label=o, style=dashed];
m0_14 -> m0_16  [key=0, style=solid];
m0_14 -> m0_20  [key=2, style=dotted];
m0_14 -> m0_21  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_5  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_15  [key=0, style=solid];
m0_13 -> m0_19  [key=2, style=dotted];
m0_13 -> m0_5  [key=2, style=dotted];
m0_15 -> m0_22  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_6  [color=blue, key=0, style=bold];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_78  [key=2, style=dotted];
m0_5 -> m0_23  [color=green, key=0, style=solid];
m0_103 -> m0_104  [key=0, style=solid];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_117  [key=2, style=dotted];
m0_104 -> m0_118  [key=2, style=dotted];
m0_104 -> m0_119  [key=2, style=dotted];
m0_104 -> m0_120  [key=2, style=dotted];
m0_104 -> m0_121  [key=2, style=dotted];
m0_104 -> m0_122  [key=2, style=dotted];
m0_104 -> m0_123  [key=2, style=dotted];
m0_104 -> m0_124  [key=2, style=dotted];
m0_104 -> m0_125  [key=2, style=dotted];
m0_104 -> m0_126  [key=2, style=dotted];
m0_104 -> m0_127  [key=2, style=dotted];
m0_104 -> m0_128  [key=2, style=dotted];
m0_104 -> m0_129  [key=2, style=dotted];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_140  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_144  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_105 -> m0_148  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_130  [key=2, style=dotted];
m0_107 -> m0_108  [key=0, style=solid];
m0_107 -> m0_21  [key=2, style=dotted];
m0_107 -> m0_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_107 -> m0_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_5  [key=2, style=dotted];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_5  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_5  [key=2, style=dotted];
m0_111 -> m0_112  [key=0, style=solid];
m0_111 -> m0_5  [key=2, style=dotted];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_5  [key=2, style=dotted];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_5  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_5  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_5  [key=2, style=dotted];
m0_116 -> m0_103  [color=blue, key=0, style=bold];
m0_169 -> m0_170  [key=0, style=solid];
m0_170 -> m0_171  [key=0, style=solid];
m0_170 -> m0_117  [key=2, style=dotted];
m0_170 -> m0_118  [key=2, style=dotted];
m0_170 -> m0_129  [key=2, style=dotted];
m0_171 -> m0_172  [key=0, style=solid];
m0_171 -> m0_166  [key=2, style=dotted];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_4  [key=2, style=dotted];
m0_172 -> m0_21  [key=2, style=dotted];
m0_172 -> m0_34  [key=2, style=dotted];
m0_172 -> m0_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_172 -> m0_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_172 -> m0_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_172 -> m0_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_172 -> m0_178  [color=darkseagreen4, key=1, label=lines, style=dashed];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_167  [key=2, style=dotted];
m0_173 -> m0_168  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_167  [key=2, style=dotted];
m0_174 -> m0_168  [key=2, style=dotted];
m0_175 -> m0_176  [key=0, style=solid];
m0_175 -> m0_5  [key=2, style=dotted];
m0_176 -> m0_177  [key=0, style=solid];
m0_176 -> m0_5  [key=2, style=dotted];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_5  [key=2, style=dotted];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_5  [key=2, style=dotted];
m0_179 -> m0_169  [color=blue, key=0, style=bold];
m1_134 -> m1_135  [key=0, style=solid];
m1_140 -> m1_42  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_43  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_41  [key=2, style=dotted];
m1_138 -> m1_111  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_137 -> m1_139  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_137 -> m1_40  [key=2, style=dotted];
m1_137 -> m1_138  [key=0, style=solid];
m1_135 -> m1_137  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_135 -> m1_129  [key=2, style=dotted];
m1_135 -> m1_131  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_130  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_132  [key=2, style=dotted];
m1_136 -> m1_21  [key=2, style=dotted];
m1_141 -> m1_134  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_14  [key=2, style=dotted];
m1_23 -> m1_15  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_20  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_25 -> m1_22  [color=blue, key=0, style=bold];
m1_79 -> m1_80  [key=0, style=solid];
m1_87 -> m1_42  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_43  [key=2, style=dotted];
m1_88 -> m1_42  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_43  [key=2, style=dotted];
m1_89 -> m1_42  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_43  [key=2, style=dotted];
m1_90 -> m1_42  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_43  [key=2, style=dotted];
m1_91 -> m1_42  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_43  [key=2, style=dotted];
m1_92 -> m1_42  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_43  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_86 -> m1_89  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_86 -> m1_90  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_86 -> m1_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_86 -> m1_92  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_86 -> m1_41  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_40  [key=2, style=dotted];
m1_80 -> m1_85  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_14  [key=2, style=dotted];
m1_80 -> m1_82  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_80 -> m1_83  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_80 -> m1_84  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_39  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_20  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_21  [key=2, style=dotted];
m1_83 -> m1_38  [key=2, style=dotted];
m1_93 -> m1_79  [color=blue, key=0, style=bold];
m1_146 -> m1_147  [key=0, style=solid];
m1_149 -> m1_150  [color=green, key=0, style=solid];
m1_149 -> m1_161  [color=green, key=2, style=dotted];
m1_149 -> m1_162  [color=green, key=2, style=dotted];
m1_147 -> m1_149  [color=green, key=1, label=sw, style=dashed];
m1_147 -> m1_148  [key=0, style=solid];
m1_147 -> m1_159  [key=2, style=dotted];
m1_147 -> m1_152  [color=darkseagreen4, key=1, label=sw, style=dashed];
m1_148 -> m1_149  [color=green, key=0, style=solid];
m1_148 -> m1_160  [key=2, style=dotted];
m1_148 -> m1_150  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_163  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_165  [key=2, style=dotted];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=outsw, style=dashed];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_42  [key=2, style=dotted];
m1_151 -> m1_164  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_111  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_41  [key=2, style=dotted];
m1_154 -> m1_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_154 -> m1_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_155 -> m1_42  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_43  [key=2, style=dotted];
m1_156 -> m1_42  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_43  [key=2, style=dotted];
m1_157 -> m1_42  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_43  [key=2, style=dotted];
m1_158 -> m1_146  [color=blue, key=0, style=bold];
m1_178 -> m1_179  [key=0, style=solid];
m1_180 -> m1_181  [color=green, key=0, style=solid];
m1_180 -> m1_161  [color=green, key=2, style=dotted];
m1_180 -> m1_172  [color=green, key=2, style=dotted];
m1_180 -> m1_163  [color=green, key=2, style=dotted];
m1_179 -> m1_180  [color=green, key=0, style=solid];
m1_179 -> m1_171  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_42  [key=2, style=dotted];
m1_181 -> m1_164  [key=2, style=dotted];
m1_182 -> m1_178  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [key=0, style=solid];
m1_103 -> m1_42  [key=2, style=dotted];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_43  [key=2, style=dotted];
m1_104 -> m1_42  [key=2, style=dotted];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_43  [key=2, style=dotted];
m1_105 -> m1_42  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_43  [key=2, style=dotted];
m1_106 -> m1_42  [key=2, style=dotted];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_43  [key=2, style=dotted];
m1_107 -> m1_42  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_43  [key=2, style=dotted];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_104  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_102 -> m1_105  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_102 -> m1_106  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_102 -> m1_107  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_102 -> m1_41  [key=2, style=dotted];
m1_101 -> m1_111  [key=2, style=dotted];
m1_101 -> m1_102  [key=0, style=solid];
m1_100 -> m1_102  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_100 -> m1_40  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_95 -> m1_100  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_14  [key=2, style=dotted];
m1_95 -> m1_97  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_95 -> m1_98  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_95 -> m1_99  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_39  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_109  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_20  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_21  [key=2, style=dotted];
m1_98 -> m1_110  [key=2, style=dotted];
m1_108 -> m1_94  [color=blue, key=0, style=bold];
m1_202 -> m1_203  [key=0, style=solid];
m1_203 -> m1_204  [key=0, style=solid];
m1_204 -> m1_202  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_35 -> m1_42  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_43  [key=2, style=dotted];
m1_36 -> m1_42  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_43  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_34 -> m1_41  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_40  [key=2, style=dotted];
m1_27 -> m1_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_14  [key=2, style=dotted];
m1_27 -> m1_29  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_27 -> m1_30  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_27 -> m1_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_27 -> m1_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_39  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_20  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_20  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_38  [key=2, style=dotted];
m1_30 -> m1_21  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_39  [key=2, style=dotted];
m1_37 -> m1_26  [color=blue, key=0, style=bold];
m1_189 -> m1_190  [key=0, style=solid];
m1_191 -> m1_192  [color=green, key=0, style=solid];
m1_191 -> m1_161  [color=green, key=2, style=dotted];
m1_191 -> m1_188  [color=green, key=2, style=dotted];
m1_191 -> m1_163  [color=green, key=2, style=dotted];
m1_190 -> m1_191  [color=green, key=0, style=solid];
m1_190 -> m1_171  [key=2, style=dotted];
m1_192 -> m1_193  [key=0, style=solid];
m1_192 -> m1_42  [key=2, style=dotted];
m1_192 -> m1_164  [key=2, style=dotted];
m1_193 -> m1_189  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_14  [key=2, style=dotted];
m1_1 -> m1_15  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_1 -> m1_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_11 -> m1_21  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_6 -> m1_20  [key=2, style=dotted];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_20  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_20  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_20  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_16  [key=2, style=dotted];
m1_4 -> m1_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_17  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=0, style=solid];
m1_5 -> m1_18  [key=2, style=dotted];
m1_13 -> m1_0  [color=blue, key=0, style=bold];
m1_173 -> m1_174  [key=0, style=solid];
m1_175 -> m1_176  [color=green, key=0, style=solid];
m1_175 -> m1_161  [color=green, key=2, style=dotted];
m1_175 -> m1_172  [color=green, key=2, style=dotted];
m1_175 -> m1_163  [color=green, key=2, style=dotted];
m1_174 -> m1_175  [color=green, key=0, style=solid];
m1_174 -> m1_171  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_42  [key=2, style=dotted];
m1_176 -> m1_164  [key=2, style=dotted];
m1_177 -> m1_173  [color=blue, key=0, style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_124 -> m1_42  [key=2, style=dotted];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_133  [key=2, style=dotted];
m1_124 -> m1_43  [key=2, style=dotted];
m1_123 -> m1_42  [key=2, style=dotted];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_43  [key=2, style=dotted];
m1_125 -> m1_42  [key=2, style=dotted];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_43  [key=2, style=dotted];
m1_126 -> m1_42  [key=2, style=dotted];
m1_126 -> m1_127  [key=0, style=solid];
m1_126 -> m1_43  [key=2, style=dotted];
m1_127 -> m1_42  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_43  [key=2, style=dotted];
m1_113 -> m1_124  [color=darkseagreen4, key=1, label=year, style=dashed];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m1_122 -> m1_124  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_125  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_122 -> m1_126  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_122 -> m1_127  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_122 -> m1_41  [key=2, style=dotted];
m1_121 -> m1_111  [key=2, style=dotted];
m1_121 -> m1_122  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_129  [key=2, style=dotted];
m1_114 -> m1_116  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_114 -> m1_117  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_114 -> m1_118  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_114 -> m1_119  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_114 -> m1_120  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_131  [key=2, style=dotted];
m1_120 -> m1_122  [color=darkseagreen4, key=1, label=help, style=dashed];
m1_120 -> m1_40  [key=2, style=dotted];
m1_120 -> m1_121  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_115 -> m1_130  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_20  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_132  [key=2, style=dotted];
m1_118 -> m1_21  [key=2, style=dotted];
m1_119 -> m1_120  [key=0, style=solid];
m1_119 -> m1_39  [key=2, style=dotted];
m1_128 -> m1_112  [color=blue, key=0, style=bold];
m1_183 -> m1_184  [key=0, style=solid];
m1_185 -> m1_186  [color=green, key=0, style=solid];
m1_185 -> m1_161  [color=green, key=2, style=dotted];
m1_185 -> m1_188  [color=green, key=2, style=dotted];
m1_185 -> m1_163  [color=green, key=2, style=dotted];
m1_184 -> m1_185  [color=green, key=0, style=solid];
m1_184 -> m1_171  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_42  [key=2, style=dotted];
m1_186 -> m1_164  [key=2, style=dotted];
m1_187 -> m1_183  [color=blue, key=0, style=bold];
m1_166 -> m1_167  [key=0, style=solid];
m1_168 -> m1_169  [color=green, key=0, style=solid];
m1_168 -> m1_161  [color=green, key=2, style=dotted];
m1_168 -> m1_172  [color=green, key=2, style=dotted];
m1_168 -> m1_163  [color=green, key=2, style=dotted];
m1_167 -> m1_168  [color=green, key=0, style=solid];
m1_167 -> m1_171  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_42  [key=2, style=dotted];
m1_169 -> m1_164  [key=2, style=dotted];
m1_170 -> m1_166  [color=blue, key=0, style=bold];
m1_44 -> m1_45  [key=0, style=solid];
m1_49 -> m1_42  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_43  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_41  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_40  [key=2, style=dotted];
m1_45 -> m1_47  [color=darkseagreen4, key=1, label=local, style=dashed];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_14  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_51  [key=2, style=dotted];
m1_46 -> m1_21  [key=2, style=dotted];
m1_50 -> m1_44  [color=blue, key=0, style=bold];
m1_52 -> m1_53  [key=0, style=solid];
m1_58 -> m1_42  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_43  [key=2, style=dotted];
m1_59 -> m1_42  [key=2, style=dotted];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_43  [key=2, style=dotted];
m1_60 -> m1_42  [key=2, style=dotted];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_43  [key=2, style=dotted];
m1_61 -> m1_42  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_43  [key=2, style=dotted];
m1_62 -> m1_42  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_43  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_59  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_57 -> m1_60  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_57 -> m1_61  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_57 -> m1_62  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_57 -> m1_41  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_40  [key=2, style=dotted];
m1_53 -> m1_56  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_14  [key=2, style=dotted];
m1_53 -> m1_15  [key=2, style=dotted];
m1_53 -> m1_55  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_64  [key=2, style=dotted];
m1_55 -> m1_21  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_63 -> m1_52  [color=blue, key=0, style=bold];
m1_194 -> m1_195  [key=0, style=solid];
m1_197 -> m1_198  [color=green, key=0, style=solid];
m1_197 -> m1_161  [color=green, key=2, style=dotted];
m1_197 -> m1_188  [color=green, key=2, style=dotted];
m1_197 -> m1_163  [color=green, key=2, style=dotted];
m1_195 -> m1_197  [color=green, key=1, label=options, style=dashed];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_200  [key=2, style=dotted];
m1_195 -> m1_198  [color=darkseagreen4, key=1, label=options, style=dashed];
m1_196 -> m1_197  [color=green, key=0, style=solid];
m1_196 -> m1_159  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_42  [key=2, style=dotted];
m1_198 -> m1_201  [key=2, style=dotted];
m1_198 -> m1_202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_199 -> m1_194  [color=blue, key=0, style=bold];
m1_142 -> m1_143  [key=0, style=solid];
m1_144 -> m1_42  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_40  [key=2, style=dotted];
m1_144 -> m1_43  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_129  [key=2, style=dotted];
m1_145 -> m1_142  [color=blue, key=0, style=bold];
m1_65 -> m1_66  [key=0, style=solid];
m1_71 -> m1_42  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_43  [key=2, style=dotted];
m1_72 -> m1_42  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_43  [key=2, style=dotted];
m1_73 -> m1_42  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_43  [key=2, style=dotted];
m1_74 -> m1_42  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_43  [key=2, style=dotted];
m1_75 -> m1_42  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_43  [key=2, style=dotted];
m1_76 -> m1_42  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_43  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_76  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_41  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_40  [key=2, style=dotted];
m1_66 -> m1_69  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_14  [key=2, style=dotted];
m1_66 -> m1_15  [key=2, style=dotted];
m1_66 -> m1_68  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m1_68 -> m1_69  [key=0, style=solid];
m1_68 -> m1_78  [key=2, style=dotted];
m1_68 -> m1_21  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_77 -> m1_65  [color=blue, key=0, style=bold];
m1_217 -> m1_96  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Text.HelpTextFixture", style=dashed];
m1_216 -> m1_11  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m1_216 -> m1_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Text.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [color=blue, key=0, style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_3 -> m2_2  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_0  [color=blue, key=0, style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_7 -> m2_6  [color=blue, key=0, style=bold];
m3_12 -> m3_12  [color=darkorchid, key=3, label="Field variable string DateTimeFormat", style=bold];
m3_9 -> m3_9  [color=darkorchid, key=3, label="Field variable string Now", style=bold];
m3_51 -> m3_52  [key=0, style=solid];
m3_53 -> m3_54  [color=green, key=0, style=solid];
m3_53 -> m3_8  [color=green, key=2, style=dotted];
m3_53 -> m3_9  [color=green, key=2, style=dotted];
m3_52 -> m3_53  [color=green, key=0, style=solid];
m3_52 -> m3_50  [key=2, style=dotted];
m3_52 -> m3_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_52 -> m3_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_52 -> m3_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_52 -> m3_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_10  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_11  [key=2, style=dotted];
m3_56 -> m3_13  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_57 -> m3_11  [key=2, style=dotted];
m3_57 -> m3_13  [key=2, style=dotted];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_11  [key=2, style=dotted];
m3_58 -> m3_13  [key=2, style=dotted];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_11  [key=2, style=dotted];
m3_55 -> m3_12  [key=2, style=dotted];
m3_59 -> m3_51  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [color=green, key=0, style=solid];
m3_15 -> m3_16  [color=green, key=0, style=solid];
m3_15 -> m3_8  [color=green, key=2, style=dotted];
m3_15 -> m3_9  [color=green, key=2, style=dotted];
m3_15 -> m3_17  [color=green, key=1, label=parser, style=dashed];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_7  [key=2, style=dotted];
m3_17 -> m3_18  [key=0, style=solid];
m3_17 -> m3_10  [key=2, style=dotted];
m3_18 -> m3_19  [key=0, style=solid];
m3_18 -> m3_11  [key=2, style=dotted];
m3_18 -> m3_20  [key=2, style=dotted];
m3_19 -> m3_14  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label=int, style=dashed];
m3_0 -> m3_4  [color=red, key=1, label=int, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnitTense", style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label="Humanizer.Localisation.TimeUnit", style=dashed];
m3_0 -> m3_9  [color=darkorchid, key=3, label="method methodReturn string GetResourceKey", style=bold];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_9  [key=2, style=dotted];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_3  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_1 -> m3_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_2 -> m3_3  [color=green, key=0, style=solid];
m3_2 -> m3_4  [color=red, key=0, style=solid];
m3_2 -> m3_8  [color=green, key=2, style=dotted];
m3_2 -> m3_9  [color=green, key=2, style=dotted];
m3_4 -> m3_5  [color=red, key=0, style=solid];
m3_4 -> m3_7  [color=red, key=1, label=singularity, style=dashed];
m3_4 -> m3_11  [key=2, style=dotted];
m3_4 -> m3_12  [key=2, style=dotted];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [color=darkseagreen4, key=1, label=tense, style=dashed];
m3_5 -> m3_11  [key=2, style=dotted];
m3_5 -> m3_13  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_11  [key=2, style=dotted];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_8  [key=0, style=solid];
m3_3 -> m3_3  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CSharpx.Maybe<object>> converter", style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_10  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_12  [key=2, style=dotted];
m3_8 -> m3_0  [color=blue, key=0, style=bold];
m3_21 -> m3_22  [key=0, style=solid];
m3_23 -> m3_24  [color=green, key=0, style=solid];
m3_23 -> m3_8  [color=green, key=2, style=dotted];
m3_23 -> m3_9  [color=green, key=2, style=dotted];
m3_22 -> m3_23  [color=green, key=0, style=solid];
m3_22 -> m3_7  [key=2, style=dotted];
m3_22 -> m3_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_22 -> m3_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_22 -> m3_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_10  [key=2, style=dotted];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_11  [key=2, style=dotted];
m3_26 -> m3_13  [key=2, style=dotted];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_11  [key=2, style=dotted];
m3_27 -> m3_13  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_11  [key=2, style=dotted];
m3_25 -> m3_12  [key=2, style=dotted];
m3_28 -> m3_21  [color=blue, key=0, style=bold];
m3_44 -> m3_45  [key=0, style=solid];
m3_46 -> m3_47  [color=green, key=0, style=solid];
m3_46 -> m3_8  [color=green, key=2, style=dotted];
m3_46 -> m3_9  [color=green, key=2, style=dotted];
m3_45 -> m3_46  [color=green, key=0, style=solid];
m3_45 -> m3_50  [key=2, style=dotted];
m3_45 -> m3_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_10  [key=2, style=dotted];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_11  [key=2, style=dotted];
m3_48 -> m3_20  [key=2, style=dotted];
m3_49 -> m3_44  [color=blue, key=0, style=bold];
m3_38 -> m3_39  [color=green, key=0, style=solid];
m3_39 -> m3_40  [color=green, key=0, style=solid];
m3_39 -> m3_8  [color=green, key=2, style=dotted];
m3_39 -> m3_9  [color=green, key=2, style=dotted];
m3_39 -> m3_41  [color=green, key=1, label=parser, style=dashed];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_37  [key=2, style=dotted];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_10  [key=2, style=dotted];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_11  [key=2, style=dotted];
m3_42 -> m3_20  [key=2, style=dotted];
m3_43 -> m3_38  [color=blue, key=0, style=bold];
m3_29 -> m3_30  [key=0, style=solid];
m3_31 -> m3_32  [color=green, key=0, style=solid];
m3_31 -> m3_8  [color=green, key=2, style=dotted];
m3_31 -> m3_9  [color=green, key=2, style=dotted];
m3_30 -> m3_31  [color=green, key=0, style=solid];
m3_30 -> m3_37  [key=2, style=dotted];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_30 -> m3_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_10  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_11  [key=2, style=dotted];
m3_34 -> m3_13  [key=2, style=dotted];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_11  [key=2, style=dotted];
m3_35 -> m3_13  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_11  [key=2, style=dotted];
m3_33 -> m3_12  [key=2, style=dotted];
m3_36 -> m3_29  [color=blue, key=0, style=bold];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_6  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_9 -> m4_1  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
m4_9 -> m4_7  [color=darkseagreen4, key=1, label="Humanizer.Tests.AmbientCulture", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [color=red, key=0, style=solid];
m6_1 -> m6_10  [key=2, style=dotted];
m6_1 -> m6_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_1 -> m6_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_1 -> m6_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_1 -> m6_8  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_2 -> m6_3  [color=red, key=0, style=solid];
m6_2 -> m6_11  [color=red, key=2, style=dotted];
m6_2 -> m6_4  [color=red, key=1, label=parser, style=dashed];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_12  [key=2, style=dotted];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_13  [key=2, style=dotted];
m6_6 -> m6_14  [key=2, style=dotted];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_13  [key=2, style=dotted];
m6_7 -> m6_14  [key=2, style=dotted];
m6_8 -> m6_9  [key=0, style=solid];
m6_8 -> m6_13  [key=2, style=dotted];
m6_8 -> m6_14  [key=2, style=dotted];
m6_3 -> m6_4  [key=0, style=solid];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_13  [key=2, style=dotted];
m6_5 -> m6_14  [key=2, style=dotted];
m6_9 -> m6_0  [color=blue, key=0, style=bold];
m7_9 -> m7_10  [color=red, key=0, style=solid];
m7_9 -> m7_11  [color=red, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m7_10 -> m7_11  [color=red, key=0, style=solid];
m7_10 -> m7_8  [color=red, key=2, style=dotted];
m7_11 -> m7_12  [color=red, key=0, style=solid];
m7_11 -> m7_13  [color=red, key=2, style=dotted];
m7_12 -> m7_9  [color=blue, key=0, style=bold];
m7_58 -> m7_59  [key=0, style=solid];
m7_58 -> m7_60  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_58 -> m7_61  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_58 -> m7_63  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_58 -> m7_64  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_58 -> m7_65  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_58 -> m7_66  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m7_58 -> m7_68  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m7_58 -> m7_70  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_58 -> m7_23  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
m7_58 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
m7_59 -> m7_60  [key=0, style=solid];
m7_59 -> m7_8  [key=2, style=dotted];
m7_60 -> m7_61  [key=0, style=solid];
m7_60 -> m7_8  [key=2, style=dotted];
m7_61 -> m7_62  [key=0, style=solid];
m7_61 -> m7_8  [key=2, style=dotted];
m7_63 -> m7_64  [key=0, style=solid];
m7_63 -> m7_70  [key=0, style=solid];
m7_63 -> m7_41  [key=2, style=dotted];
m7_63 -> m7_63  [color=darkseagreen4, key=1, label=verbInstance, style=dashed];
m7_64 -> m7_65  [key=0, style=solid];
m7_64 -> m7_42  [key=2, style=dotted];
m7_64 -> m7_43  [key=2, style=dotted];
m7_65 -> m7_66  [key=0, style=solid];
m7_65 -> m7_55  [key=2, style=dotted];
m7_66 -> m7_67  [key=0, style=solid];
m7_66 -> m7_68  [key=0, style=solid];
m7_68 -> m7_69  [key=0, style=solid];
m7_68 -> m7_57  [key=2, style=dotted];
m7_70 -> m7_71  [key=0, style=solid];
m7_70 -> m7_42  [key=2, style=dotted];
m7_70 -> m7_43  [key=2, style=dotted];
m7_62 -> m7_63  [key=0, style=solid];
m7_62 -> m7_36  [color=darkorchid, key=3, label="Local variable object verbInstance", style=bold];
m7_67 -> m7_69  [key=0, style=solid];
m7_67 -> m7_56  [key=2, style=dotted];
m7_69 -> m7_72  [key=0, style=solid];
m7_71 -> m7_72  [key=0, style=solid];
m7_72 -> m7_58  [color=blue, key=0, style=bold];
m7_119 -> m7_184  [key=0, style=solid];
m7_119 -> m7_185  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_119 -> m7_186  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m7_119 -> m7_187  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m7_119 -> m7_189  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m7_119 -> m7_190  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m7_119 -> m7_31  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
m7_119 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
m7_119 -> m7_23  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
m7_184 -> m7_185  [key=0, style=solid];
m7_184 -> m7_187  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m7_184 -> m7_190  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m7_185 -> m7_186  [key=0, style=solid];
m7_185 -> m7_192  [key=0, style=solid];
m7_185 -> m7_187  [color=darkseagreen4, key=1, label=arg, style=dashed];
m7_185 -> m7_190  [color=darkseagreen4, key=1, label=arg, style=dashed];
m7_186 -> m7_187  [key=0, style=solid];
m7_186 -> m7_189  [key=0, style=solid];
m7_187 -> m7_188  [key=0, style=solid];
m7_187 -> m7_189  [key=0, style=solid];
m7_187 -> m7_194  [key=2, style=dotted];
m7_189 -> m7_190  [key=0, style=solid];
m7_189 -> m7_185  [key=0, style=solid];
m7_189 -> m7_86  [key=2, style=dotted];
m7_190 -> m7_191  [key=0, style=solid];
m7_190 -> m7_185  [key=0, style=solid];
m7_190 -> m7_195  [key=2, style=dotted];
m7_192 -> m7_193  [key=0, style=solid];
m7_188 -> m7_193  [key=0, style=solid];
m7_191 -> m7_193  [key=0, style=solid];
m7_193 -> m7_119  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_23 -> m7_24  [key=0, style=solid];
m7_23 -> m7_25  [key=2, style=dotted];
m7_24 -> m7_22  [color=blue, key=0, style=bold];
m7_78 -> m7_79  [key=0, style=solid];
m7_78 -> m7_80  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_78 -> m7_81  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_78 -> m7_82  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_78 -> m7_84  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_78 -> m7_78  [color=darkorchid, key=3, label="method methodReturn object InternalGetVerbOptionsInstanceByName", style=bold];
m7_79 -> m7_80  [key=0, style=solid];
m7_80 -> m7_81  [key=0, style=solid];
m7_80 -> m7_82  [key=0, style=solid];
m7_80 -> m7_86  [key=2, style=dotted];
m7_81 -> m7_85  [key=0, style=solid];
m7_82 -> m7_83  [key=0, style=solid];
m7_82 -> m7_87  [key=2, style=dotted];
m7_82 -> m7_84  [color=darkseagreen4, key=1, label=pair, style=dashed];
m7_84 -> m7_85  [key=0, style=solid];
m7_84 -> m7_88  [key=2, style=dotted];
m7_83 -> m7_84  [key=0, style=solid];
m7_83 -> m7_85  [color=darkseagreen4, key=1, label="out bool", style=dashed];
m7_85 -> m7_78  [color=blue, key=0, style=bold];
m7_31 -> m7_107  [key=0, style=solid];
m7_31 -> m7_110  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_31 -> m7_112  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_31 -> m7_116  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_31 -> m7_26  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_31 -> m7_44  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_31 -> m7_23  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m7_31 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m7_31 -> m7_120  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m7_107 -> m7_108  [key=0, style=solid];
m7_107 -> m7_118  [key=2, style=dotted];
m7_107 -> m7_109  [color=darkseagreen4, key=1, label=pair, style=dashed];
m7_107 -> m7_110  [color=darkseagreen4, key=1, label=pair, style=dashed];
m7_107 -> m7_112  [color=darkseagreen4, key=1, label=pair, style=dashed];
m7_110 -> m7_111  [key=0, style=solid];
m7_110 -> m7_115  [key=0, style=solid];
m7_110 -> m7_119  [key=2, style=dotted];
m7_110 -> m7_120  [key=2, style=dotted];
m7_112 -> m7_113  [key=0, style=solid];
m7_112 -> m7_121  [key=2, style=dotted];
m7_116 -> m7_117  [key=0, style=solid];
m7_116 -> m7_120  [key=2, style=dotted];
m7_108 -> m7_109  [key=0, style=solid];
m7_108 -> m7_113  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m7_109 -> m7_110  [key=0, style=solid];
m7_109 -> m7_116  [key=0, style=solid];
m7_113 -> m7_114  [key=0, style=solid];
m7_113 -> m7_122  [key=2, style=dotted];
m7_111 -> m7_112  [key=0, style=solid];
m7_115 -> m7_117  [key=0, style=solid];
m7_114 -> m7_117  [key=0, style=solid];
m7_117 -> m7_31  [color=blue, key=0, style=bold];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_6  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m7_5 -> m7_6  [key=0, style=solid];
m7_5 -> m7_8  [key=2, style=dotted];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_4  [color=blue, key=0, style=bold];
m7_26 -> m7_27  [key=0, style=solid];
m7_26 -> m7_28  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_26 -> m7_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_26 -> m7_31  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m7_27 -> m7_28  [key=0, style=solid];
m7_27 -> m7_8  [key=2, style=dotted];
m7_28 -> m7_29  [key=0, style=solid];
m7_28 -> m7_8  [key=2, style=dotted];
m7_29 -> m7_30  [key=0, style=solid];
m7_29 -> m7_31  [key=2, style=dotted];
m7_30 -> m7_26  [color=blue, key=0, style=bold];
m7_178 -> m7_196  [key=0, style=solid];
m7_178 -> m7_197  [color=darkseagreen4, key=1, label="CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m7_178 -> m7_198  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_178 -> m7_199  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_178 -> m7_201  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.OptionMap", style=dashed];
m7_178 -> m7_203  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_178 -> m7_204  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_178 -> m7_205  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_178 -> m7_41  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_178 -> m7_155  [color=darkorchid, key=3, label="Parameter variable CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
m7_178 -> m7_160  [color=darkorchid, key=3, label="Parameter variable CommandLine.Infrastructure.OptionMap optionMap", style=bold];
m7_178 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool TryParseHelpVerb", style=bold];
m7_178 -> m7_23  [color=darkorchid, key=3, label="method methodReturn bool TryParseHelpVerb", style=bold];
m7_196 -> m7_197  [key=0, style=solid];
m7_197 -> m7_198  [key=0, style=solid];
m7_197 -> m7_207  [key=0, style=solid];
m7_198 -> m7_199  [key=0, style=solid];
m7_198 -> m7_207  [key=0, style=solid];
m7_198 -> m7_104  [key=2, style=dotted];
m7_198 -> m7_209  [key=2, style=dotted];
m7_199 -> m7_200  [key=0, style=solid];
m7_199 -> m7_42  [key=2, style=dotted];
m7_199 -> m7_201  [color=darkseagreen4, key=1, label=verb, style=dashed];
m7_199 -> m7_205  [color=darkseagreen4, key=1, label=verb, style=dashed];
m7_201 -> m7_202  [key=0, style=solid];
m7_201 -> m7_203  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m7_201 -> m7_204  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m7_203 -> m7_204  [key=0, style=solid];
m7_203 -> m7_205  [key=0, style=solid];
m7_203 -> m7_180  [key=2, style=dotted];
m7_204 -> m7_205  [key=0, style=solid];
m7_204 -> m7_181  [key=2, style=dotted];
m7_205 -> m7_206  [key=0, style=solid];
m7_205 -> m7_176  [key=2, style=dotted];
m7_207 -> m7_208  [key=0, style=solid];
m7_200 -> m7_201  [key=0, style=solid];
m7_200 -> m7_205  [key=0, style=solid];
m7_202 -> m7_203  [key=0, style=solid];
m7_202 -> m7_205  [key=0, style=solid];
m7_206 -> m7_208  [key=0, style=solid];
m7_208 -> m7_178  [color=blue, key=0, style=bold];
m7_44 -> m7_45  [key=0, style=solid];
m7_44 -> m7_46  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_44 -> m7_47  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_44 -> m7_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_44 -> m7_49  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m7_44 -> m7_51  [color=darkseagreen4, key=1, label="System.Action", style=dashed];
m7_44 -> m7_23  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
m7_44 -> m7_74  [color=darkorchid, key=3, label="method methodReturn bool ParseArgumentsStrict", style=bold];
m7_45 -> m7_46  [key=0, style=solid];
m7_45 -> m7_8  [key=2, style=dotted];
m7_46 -> m7_47  [key=0, style=solid];
m7_46 -> m7_8  [key=2, style=dotted];
m7_47 -> m7_48  [key=0, style=solid];
m7_47 -> m7_53  [key=0, style=solid];
m7_47 -> m7_31  [key=2, style=dotted];
m7_48 -> m7_49  [key=0, style=solid];
m7_48 -> m7_55  [key=2, style=dotted];
m7_49 -> m7_50  [key=0, style=solid];
m7_49 -> m7_51  [key=0, style=solid];
m7_51 -> m7_52  [key=0, style=solid];
m7_51 -> m7_57  [key=2, style=dotted];
m7_53 -> m7_54  [key=0, style=solid];
m7_50 -> m7_52  [key=0, style=solid];
m7_50 -> m7_56  [key=2, style=dotted];
m7_52 -> m7_54  [key=0, style=solid];
m7_54 -> m7_44  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [color=red, key=0, style=solid];
m7_1 -> m7_2  [color=red, key=0, style=solid];
m7_1 -> m7_3  [color=red, key=2, style=dotted];
m7_2 -> m7_0  [color=blue, key=0, style=bold];
m7_226 -> m7_227  [key=0, style=solid];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m7_16 -> m7_19  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m7_16 -> m7_20  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m7_17 -> m7_18  [key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid];
m7_19 -> m7_20  [key=0, style=solid];
m7_20 -> m7_21  [key=0, style=solid];
m7_21 -> m7_16  [color=blue, key=0, style=bold];
m7_227 -> m7_228  [key=0, style=solid];
m7_227 -> m7_229  [key=2, style=dotted];
m7_228 -> m7_226  [color=blue, key=0, style=bold];
m7_41 -> m7_154  [key=0, style=solid];
m7_41 -> m7_155  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_41 -> m7_156  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_41 -> m7_158  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_41 -> m7_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_41 -> m7_161  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_41 -> m7_163  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_41 -> m7_166  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_41 -> m7_168  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_41 -> m7_170  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_41 -> m7_171  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_41 -> m7_173  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_41 -> m7_32  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_41 -> m7_58  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_41 -> m7_36  [color=darkorchid, key=3, label="Parameter variable object verbInstance", style=bold];
m7_41 -> m7_62  [color=darkorchid, key=3, label="Parameter variable object verbInstance", style=bold];
m7_41 -> m7_23  [color=darkorchid, key=3, label="method methodReturn bool DoParseArgumentsVerbs", style=bold];
m7_154 -> m7_155  [key=0, style=solid];
m7_154 -> m7_100  [key=2, style=dotted];
m7_154 -> m7_160  [color=darkseagreen4, key=1, label=verbs, style=dashed];
m7_155 -> m7_156  [key=0, style=solid];
m7_155 -> m7_118  [key=2, style=dotted];
m7_155 -> m7_157  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m7_155 -> m7_158  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m7_155 -> m7_161  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m7_155 -> m7_165  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m7_155 -> m7_166  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m7_155 -> m7_172  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m7_155 -> m7_173  [color=darkseagreen4, key=1, label=helpInfo, style=dashed];
m7_156 -> m7_157  [key=0, style=solid];
m7_156 -> m7_160  [key=0, style=solid];
m7_158 -> m7_159  [key=0, style=solid];
m7_158 -> m7_176  [key=2, style=dotted];
m7_160 -> m7_161  [key=0, style=solid];
m7_160 -> m7_177  [key=2, style=dotted];
m7_160 -> m7_163  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m7_161 -> m7_162  [key=0, style=solid];
m7_161 -> m7_163  [key=0, style=solid];
m7_161 -> m7_178  [key=2, style=dotted];
m7_163 -> m7_164  [key=0, style=solid];
m7_163 -> m7_179  [key=2, style=dotted];
m7_163 -> m7_168  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m7_163 -> m7_170  [color=darkseagreen4, key=1, label=verbOption, style=dashed];
m7_166 -> m7_167  [key=0, style=solid];
m7_166 -> m7_176  [key=2, style=dotted];
m7_168 -> m7_169  [key=0, style=solid];
m7_168 -> m7_180  [key=2, style=dotted];
m7_168 -> m7_171  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m7_168 -> m7_175  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m7_170 -> m7_171  [key=0, style=solid];
m7_170 -> m7_181  [key=2, style=dotted];
m7_170 -> m7_175  [color=darkseagreen4, key=1, label="ref object", style=dashed];
m7_171 -> m7_172  [key=0, style=solid];
m7_171 -> m7_182  [key=2, style=dotted];
m7_171 -> m7_183  [key=2, style=dotted];
m7_171 -> m7_120  [key=2, style=dotted];
m7_171 -> m7_174  [color=darkseagreen4, key=1, label=verbResult, style=dashed];
m7_173 -> m7_174  [key=0, style=solid];
m7_173 -> m7_179  [key=2, style=dotted];
m7_173 -> m7_176  [key=2, style=dotted];
m7_157 -> m7_158  [key=0, style=solid];
m7_157 -> m7_159  [key=0, style=solid];
m7_165 -> m7_166  [key=0, style=solid];
m7_165 -> m7_167  [key=0, style=solid];
m7_172 -> m7_173  [key=0, style=solid];
m7_172 -> m7_174  [key=0, style=solid];
m7_159 -> m7_175  [key=0, style=solid];
m7_162 -> m7_175  [key=0, style=solid];
m7_164 -> m7_165  [key=0, style=solid];
m7_164 -> m7_168  [key=0, style=solid];
m7_167 -> m7_175  [key=0, style=solid];
m7_169 -> m7_170  [key=0, style=solid];
m7_169 -> m7_171  [key=0, style=solid];
m7_174 -> m7_175  [key=0, style=solid];
m7_175 -> m7_41  [color=blue, key=0, style=bold];
m7_120 -> m7_123  [key=0, style=solid];
m7_120 -> m7_124  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_120 -> m7_126  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_120 -> m7_127  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_120 -> m7_133  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_120 -> m7_135  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_120 -> m7_31  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_120 -> m7_41  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_123 -> m7_124  [key=0, style=solid];
m7_123 -> m7_142  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m7_123 -> m7_23  [color=darkorchid, key=3, label="Local variable bool hadError", style=bold];
m7_124 -> m7_125  [key=0, style=solid];
m7_124 -> m7_145  [key=2, style=dotted];
m7_124 -> m7_133  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m7_124 -> m7_142  [color=darkseagreen4, key=1, label=optionMap, style=dashed];
m7_126 -> m7_127  [key=0, style=solid];
m7_126 -> m7_147  [key=2, style=dotted];
m7_126 -> m7_139  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m7_126 -> m7_140  [color=darkseagreen4, key=1, label=valueMapper, style=dashed];
m7_127 -> m7_128  [key=0, style=solid];
m7_127 -> m7_148  [key=2, style=dotted];
m7_127 -> m7_129  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m7_127 -> m7_133  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m7_127 -> m7_138  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m7_133 -> m7_134  [key=0, style=solid];
m7_133 -> m7_151  [key=2, style=dotted];
m7_133 -> m7_137  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_135 -> m7_136  [key=0, style=solid];
m7_135 -> m7_89  [key=2, style=dotted];
m7_142 -> m7_143  [key=0, style=solid];
m7_142 -> m7_153  [key=2, style=dotted];
m7_142 -> m7_142  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m7_125 -> m7_126  [key=0, style=solid];
m7_125 -> m7_146  [key=2, style=dotted];
m7_139 -> m7_140  [key=0, style=solid];
m7_139 -> m7_128  [key=0, style=solid];
m7_140 -> m7_141  [key=0, style=solid];
m7_140 -> m7_128  [key=0, style=solid];
m7_140 -> m7_152  [key=2, style=dotted];
m7_128 -> m7_129  [key=0, style=solid];
m7_128 -> m7_142  [key=0, style=solid];
m7_128 -> m7_149  [key=2, style=dotted];
m7_129 -> m7_130  [key=0, style=solid];
m7_129 -> m7_131  [color=darkseagreen4, key=1, label=argument, style=dashed];
m7_129 -> m7_140  [color=darkseagreen4, key=1, label=argument, style=dashed];
m7_138 -> m7_128  [key=0, style=solid];
m7_138 -> m7_149  [key=2, style=dotted];
m7_130 -> m7_131  [key=0, style=solid];
m7_130 -> m7_128  [key=0, style=solid];
m7_130 -> m7_86  [key=2, style=dotted];
m7_131 -> m7_132  [key=0, style=solid];
m7_131 -> m7_150  [key=2, style=dotted];
m7_131 -> m7_133  [color=darkseagreen4, key=1, label=parser, style=dashed];
m7_131 -> m7_135  [color=darkseagreen4, key=1, label=parser, style=dashed];
m7_132 -> m7_133  [key=0, style=solid];
m7_132 -> m7_139  [key=0, style=solid];
m7_134 -> m7_135  [key=0, style=solid];
m7_134 -> m7_137  [key=0, style=solid];
m7_137 -> m7_138  [key=0, style=solid];
m7_137 -> m7_128  [key=0, style=solid];
m7_136 -> m7_128  [key=0, style=solid];
m7_136 -> m7_142  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m7_141 -> m7_128  [key=0, style=solid];
m7_141 -> m7_142  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m7_143 -> m7_144  [key=0, style=solid];
m7_144 -> m7_120  [color=blue, key=0, style=bold];
m7_89 -> m7_90  [key=0, style=solid];
m7_89 -> m7_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_89 -> m7_93  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_89 -> m7_94  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_89 -> m7_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_89 -> m7_96  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m7_89 -> m7_120  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_90 -> m7_91  [key=0, style=solid];
m7_90 -> m7_92  [key=0, style=solid];
m7_90 -> m7_99  [key=2, style=dotted];
m7_92 -> m7_93  [key=0, style=solid];
m7_92 -> m7_100  [key=2, style=dotted];
m7_92 -> m7_94  [color=darkseagreen4, key=1, label=property, style=dashed];
m7_92 -> m7_95  [color=darkseagreen4, key=1, label=property, style=dashed];
m7_93 -> m7_94  [key=0, style=solid];
m7_93 -> m7_95  [key=0, style=solid];
m7_93 -> m7_88  [key=2, style=dotted];
m7_94 -> m7_95  [key=0, style=solid];
m7_94 -> m7_101  [key=2, style=dotted];
m7_94 -> m7_102  [key=2, style=dotted];
m7_95 -> m7_96  [key=0, style=solid];
m7_95 -> m7_88  [key=2, style=dotted];
m7_95 -> m7_97  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m7_96 -> m7_97  [key=0, style=solid];
m7_96 -> m7_98  [key=0, style=solid];
m7_91 -> m7_98  [key=0, style=solid];
m7_97 -> m7_96  [key=0, style=solid];
m7_97 -> m7_103  [key=2, style=dotted];
m7_98 -> m7_89  [color=blue, key=0, style=bold];
m7_14 -> m7_15  [key=0, style=solid];
m7_15 -> m7_14  [color=blue, key=0, style=bold];
m7_32 -> m7_33  [key=0, style=solid];
m7_32 -> m7_34  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_32 -> m7_35  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_32 -> m7_37  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_32 -> m7_38  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_33 -> m7_34  [key=0, style=solid];
m7_33 -> m7_8  [key=2, style=dotted];
m7_34 -> m7_35  [key=0, style=solid];
m7_34 -> m7_8  [key=2, style=dotted];
m7_35 -> m7_36  [key=0, style=solid];
m7_35 -> m7_8  [key=2, style=dotted];
m7_37 -> m7_38  [key=0, style=solid];
m7_37 -> m7_41  [key=2, style=dotted];
m7_37 -> m7_37  [color=darkseagreen4, key=1, label=verbInstance, style=dashed];
m7_37 -> m7_39  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_38 -> m7_39  [key=0, style=solid];
m7_38 -> m7_42  [key=2, style=dotted];
m7_38 -> m7_43  [key=2, style=dotted];
m7_36 -> m7_37  [key=0, style=solid];
m7_36 -> m7_36  [color=darkorchid, key=3, label="Local variable object verbInstance", style=bold];
m7_39 -> m7_40  [key=0, style=solid];
m7_40 -> m7_32  [color=blue, key=0, style=bold];
m7_99 -> m7_4  [color=darkorchid, key=3, label="Field variable CommandLine.ParserSettings _settings", style=bold];
m7_73 -> m7_74  [key=0, style=solid];
m7_74 -> m7_75  [key=0, style=solid];
m7_74 -> m7_25  [key=2, style=dotted];
m7_75 -> m7_76  [key=0, style=solid];
m7_75 -> m7_77  [key=2, style=dotted];
m7_76 -> m7_73  [color=blue, key=0, style=bold];
m7_176 -> m7_210  [key=0, style=solid];
m7_176 -> m7_211  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_176 -> m7_212  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_176 -> m7_213  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_176 -> m7_41  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_176 -> m7_178  [color=darkorchid, key=3, label="Parameter variable CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
m7_176 -> m7_155  [color=darkorchid, key=3, label="Parameter variable CommandLine.Helpers.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute> helpInfo", style=bold];
m7_176 -> m7_36  [color=darkorchid, key=3, label="Parameter variable string verb", style=bold];
m7_176 -> m7_199  [color=darkorchid, key=3, label="Parameter variable string verb", style=bold];
m7_210 -> m7_211  [key=0, style=solid];
m7_211 -> m7_212  [key=0, style=solid];
m7_211 -> m7_213  [key=0, style=solid];
m7_212 -> m7_214  [key=0, style=solid];
m7_212 -> m7_217  [key=2, style=dotted];
m7_212 -> m7_215  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m7_213 -> m7_214  [key=0, style=solid];
m7_213 -> m7_217  [key=2, style=dotted];
m7_213 -> m7_215  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m7_214 -> m7_215  [key=0, style=solid];
m7_214 -> m7_216  [key=0, style=solid];
m7_215 -> m7_216  [key=0, style=solid];
m7_215 -> m7_122  [key=2, style=dotted];
m7_216 -> m7_176  [color=blue, key=0, style=bold];
m7_104 -> m7_105  [key=0, style=solid];
m7_104 -> m7_99  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserSettings settings", style=bold];
m7_105 -> m7_106  [key=0, style=solid];
m7_106 -> m7_104  [color=blue, key=0, style=bold];
m7_25 -> m7_230  [key=0, style=solid];
m7_25 -> m7_232  [color=darkseagreen4, key=1, label=bool, style=dashed];
m7_25 -> m7_23  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m7_25 -> m7_74  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m7_230 -> m7_231  [key=0, style=solid];
m7_230 -> m7_232  [key=0, style=solid];
m7_232 -> m7_233  [key=0, style=solid];
m7_232 -> m7_236  [key=0, style=solid];
m7_231 -> m7_236  [key=0, style=solid];
m7_233 -> m7_234  [key=0, style=solid];
m7_233 -> m7_235  [key=0, style=solid];
m7_234 -> m7_235  [key=0, style=solid];
m7_234 -> m7_237  [key=2, style=dotted];
m7_235 -> m7_236  [key=0, style=solid];
m7_236 -> m7_25  [color=blue, key=0, style=bold];
m7_55 -> m7_218  [key=0, style=solid];
m7_55 -> m7_220  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_55 -> m7_227  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_55 -> m7_44  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_55 -> m7_58  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m7_218 -> m7_219  [key=0, style=solid];
m7_218 -> m7_220  [key=0, style=solid];
m7_218 -> m7_222  [key=2, style=dotted];
m7_218 -> m7_223  [key=2, style=dotted];
m7_220 -> m7_221  [key=0, style=solid];
m7_220 -> m7_224  [key=2, style=dotted];
m7_220 -> m7_225  [key=2, style=dotted];
m7_220 -> m7_122  [key=2, style=dotted];
m7_220 -> m7_226  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_219 -> m7_221  [key=0, style=solid];
m7_221 -> m7_55  [color=blue, key=0, style=bold];
m7_238 -> m7_1  [color=red, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_6  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_11  [color=red, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_23  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_29  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_37  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_47  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_48  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_63  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_65  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_74  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_75  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_108  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_110  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_116  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_124  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_126  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_131  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_157  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_158  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_160  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_161  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_166  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_171  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_173  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_184  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_196  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_198  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_205  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_214  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_215  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_218  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_220  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_230  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_233  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_234  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_238 -> m7_235  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m7_239 -> m7_227  [color=darkseagreen4, key=1, label=object, style=dashed];
m8_42 -> m8_43  [key=0, style=solid];
m8_5 -> m8_6  [color=green, key=0, style=solid];
m8_4 -> m8_5  [color=green, key=0, style=solid];
m8_4 -> m8_1  [color=darkseagreen4, key=1, label="CommandLine.ParserState", style=dashed];
m8_6 -> m8_4  [color=blue, key=0, style=bold];
m8_11 -> m8_12  [color=green, key=0, style=solid];
m8_10 -> m8_11  [color=green, key=0, style=solid];
m8_12 -> m8_10  [color=blue, key=0, style=bold];
m8_26 -> m8_37  [color=green, key=0, style=solid];
m8_26 -> m8_40  [color=green, key=2, style=dotted];
m8_26 -> m8_39  [color=green, key=2, style=dotted];
m8_25 -> m8_26  [color=green, key=0, style=solid];
m8_37 -> m8_16  [color=blue, key=0, style=bold];
m8_36 -> m8_37  [color=green, key=0, style=solid];
m8_35 -> m8_36  [color=green, key=0, style=solid];
m8_44 -> m8_45  [color=green, key=0, style=solid];
m8_44 -> m8_48  [color=green, key=2, style=dotted];
m8_44 -> m8_49  [color=green, key=2, style=dotted];
m8_44 -> m8_51  [color=green, key=1, label="lambda expression", style=dashed];
m8_43 -> m8_44  [color=green, key=0, style=solid];
m8_43 -> m8_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m8_43 -> m8_47  [key=2, style=dotted];
m8_43 -> m8_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m8_45 -> m8_46  [key=0, style=solid];
m8_45 -> m8_50  [key=2, style=dotted];
m8_51 -> m8_52  [color=green, key=0, style=solid];
m8_51 -> m8_53  [color=darkseagreen4, key=1, label="?", style=dashed];
m8_51 -> m8_54  [color=darkseagreen4, key=1, label="?", style=dashed];
m8_52 -> m8_52  [color=green, key=1, label=e, style=dashed];
m8_52 -> m8_53  [color=green, key=0, style=solid];
m8_52 -> m8_57  [color=green, key=2, style=dotted];
m8_52 -> m8_49  [color=green, key=2, style=dotted];
m8_52 -> m8_50  [color=green, key=2, style=dotted];
m8_52 -> m8_55  [color=green, key=1, label=names, style=dashed];
m8_53 -> m8_54  [key=0, style=solid];
m8_53 -> m8_58  [key=2, style=dotted];
m8_53 -> m8_55  [color=darkseagreen4, key=1, label=namesCount, style=dashed];
m8_55 -> m8_56  [key=0, style=solid];
m8_55 -> m8_61  [key=2, style=dotted];
m8_55 -> m8_62  [key=2, style=dotted];
m8_55 -> m8_63  [key=2, style=dotted];
m8_55 -> m8_64  [key=2, style=dotted];
m8_55 -> m8_65  [key=2, style=dotted];
m8_55 -> m8_66  [key=2, style=dotted];
m8_55 -> m8_67  [key=2, style=dotted];
m8_16 -> m8_25  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_19  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_16 -> m8_21  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_16 -> m8_23  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_16 -> m8_28  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_16 -> m8_31  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_16 -> m8_34  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m8_24 -> m8_25  [key=0, style=solid];
m8_19 -> m8_37  [key=0, style=solid];
m8_19 -> m8_39  [key=2, style=dotted];
m8_21 -> m8_37  [key=0, style=solid];
m8_21 -> m8_39  [key=2, style=dotted];
m8_23 -> m8_37  [key=0, style=solid];
m8_23 -> m8_39  [key=2, style=dotted];
m8_34 -> m8_37  [key=0, style=solid];
m8_34 -> m8_39  [key=2, style=dotted];
m8_29 -> m8_37  [key=0, style=solid];
m8_29 -> m8_40  [key=2, style=dotted];
m8_29 -> m8_39  [key=2, style=dotted];
m8_32 -> m8_37  [key=0, style=solid];
m8_32 -> m8_40  [key=2, style=dotted];
m8_32 -> m8_39  [key=2, style=dotted];
m8_38 -> m8_37  [key=0, style=solid];
m8_38 -> m8_41  [key=2, style=dotted];
m8_17 -> m8_35  [key=0, style=solid];
m8_17 -> m8_24  [key=0, style=solid];
m8_17 -> m8_18  [key=0, style=solid];
m8_17 -> m8_20  [key=0, style=solid];
m8_17 -> m8_22  [key=0, style=solid];
m8_17 -> m8_27  [key=0, style=solid];
m8_17 -> m8_30  [key=0, style=solid];
m8_17 -> m8_33  [key=0, style=solid];
m8_54 -> m8_49  [key=2, style=dotted];
m8_54 -> m8_57  [key=2, style=dotted];
m8_54 -> m8_50  [key=2, style=dotted];
m8_54 -> m8_55  [key=0, style=solid];
m8_54 -> m8_54  [color=darkseagreen4, key=1, label=s, style=dashed];
m8_54 -> m8_59  [key=2, style=dotted];
m8_54 -> m8_60  [key=2, style=dotted];
m8_46 -> m8_42  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_31 -> m8_32  [key=0, style=solid];
m8_18 -> m8_19  [key=0, style=solid];
m8_20 -> m8_21  [key=0, style=solid];
m8_22 -> m8_23  [key=0, style=solid];
m8_33 -> m8_34  [key=0, style=solid];
m8_27 -> m8_28  [key=0, style=solid];
m8_30 -> m8_31  [key=0, style=solid];
m8_56 -> m8_51  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_68 -> m8_54  [color=darkseagreen4, key=1, label=bySet, style=dashed];
m9_4 -> m9_8  [color=red, key=0, style=solid];
m9_8 -> m9_9  [color=red, key=0, style=solid];
m9_8 -> m9_11  [color=red, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_9 -> m9_4  [color=blue, key=0, style=bold];
m9_6 -> m9_75  [key=0, style=solid];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_78  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_76 -> m9_6  [color=blue, key=0, style=bold];
m9_7 -> m9_91  [key=0, style=solid];
m9_7 -> m9_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_94  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_91 -> m9_91  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Error> ", style=bold];
m9_92 -> m9_7  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_2  [key=0, style=solid];
m9_1 -> m9_3  [key=2, style=dotted];
m9_1 -> m9_4  [key=2, style=dotted];
m9_1 -> m9_5  [key=2, style=dotted];
m9_1 -> m9_6  [key=2, style=dotted];
m9_1 -> m9_7  [key=2, style=dotted];
m9_2 -> m9_0  [color=blue, key=0, style=bold];
m9_104 -> m9_105  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_17  [key=2, style=dotted];
m9_11 -> m9_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_11 -> m9_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_10 -> m9_11  [key=0, style=solid];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_18  [key=2, style=dotted];
m9_12 -> m9_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_22 -> m9_23  [key=0, style=solid];
m9_26 -> m9_27  [key=0, style=solid];
m9_14 -> m9_16  [key=0, style=solid];
m9_14 -> m9_20  [key=2, style=dotted];
m9_14 -> m9_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_13 -> m9_19  [key=2, style=dotted];
m9_30 -> m9_31  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_21  [key=2, style=dotted];
m9_16 -> m9_10  [color=blue, key=0, style=bold];
m9_33 -> m9_34  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_25  [key=2, style=dotted];
m9_24 -> m9_22  [color=blue, key=0, style=bold];
m9_27 -> m9_28  [key=0, style=solid];
m9_27 -> m9_29  [key=2, style=dotted];
m9_28 -> m9_26  [color=blue, key=0, style=bold];
m9_31 -> m9_32  [key=0, style=solid];
m9_32 -> m9_30  [color=blue, key=0, style=bold];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_36  [key=2, style=dotted];
m9_34 -> m9_37  [key=2, style=dotted];
m9_35 -> m9_33  [color=blue, key=0, style=bold];
m9_41 -> m9_42  [key=0, style=solid];
m9_41 -> m9_17  [key=2, style=dotted];
m9_41 -> m9_20  [key=2, style=dotted];
m9_41 -> m9_47  [key=2, style=dotted];
m9_41 -> m9_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_41 -> m9_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_41 -> m9_61  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m9_42 -> m9_43  [key=0, style=solid];
m9_42 -> m9_17  [key=2, style=dotted];
m9_42 -> m9_48  [key=2, style=dotted];
m9_42 -> m9_47  [key=2, style=dotted];
m9_42 -> m9_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_42 -> m9_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_42 -> m9_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_42 -> m9_44  [color=darkseagreen4, key=1, label=requiredButEmpty, style=dashed];
m9_40 -> m9_41  [key=0, style=solid];
m9_40 -> m9_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_50 -> m9_51  [key=0, style=solid];
m9_54 -> m9_55  [key=0, style=solid];
m9_61 -> m9_62  [key=0, style=solid];
m9_61 -> m9_63  [key=2, style=dotted];
m9_61 -> m9_64  [key=2, style=dotted];
m9_43 -> m9_44  [key=0, style=solid];
m9_43 -> m9_45  [key=0, style=solid];
m9_43 -> m9_49  [key=2, style=dotted];
m9_57 -> m9_58  [key=0, style=solid];
m9_60 -> m9_61  [key=0, style=solid];
m9_65 -> m9_66  [key=0, style=solid];
m9_44 -> m9_46  [key=0, style=solid];
m9_44 -> m9_20  [key=2, style=dotted];
m9_44 -> m9_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_21  [key=2, style=dotted];
m9_46 -> m9_40  [color=blue, key=0, style=bold];
m9_70 -> m9_71  [key=0, style=solid];
m9_51 -> m9_52  [key=0, style=solid];
m9_51 -> m9_25  [key=2, style=dotted];
m9_51 -> m9_53  [key=2, style=dotted];
m9_52 -> m9_50  [color=blue, key=0, style=bold];
m9_55 -> m9_56  [key=0, style=solid];
m9_56 -> m9_54  [color=blue, key=0, style=bold];
m9_58 -> m9_59  [key=0, style=solid];
m9_58 -> m9_25  [key=2, style=dotted];
m9_59 -> m9_57  [color=blue, key=0, style=bold];
m9_62 -> m9_60  [color=blue, key=0, style=bold];
m9_66 -> m9_67  [key=0, style=solid];
m9_66 -> m9_68  [key=2, style=dotted];
m9_66 -> m9_69  [key=2, style=dotted];
m9_67 -> m9_65  [color=blue, key=0, style=bold];
m9_71 -> m9_72  [key=0, style=solid];
m9_71 -> m9_73  [key=2, style=dotted];
m9_71 -> m9_74  [key=2, style=dotted];
m9_72 -> m9_70  [color=blue, key=0, style=bold];
m9_78 -> m9_79  [key=0, style=solid];
m9_78 -> m9_17  [key=2, style=dotted];
m9_78 -> m9_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_78 -> m9_80  [color=darkseagreen4, key=1, label=options, style=dashed];
m9_77 -> m9_78  [key=0, style=solid];
m9_79 -> m9_80  [key=0, style=solid];
m9_79 -> m9_81  [key=0, style=solid];
m9_79 -> m9_49  [key=2, style=dotted];
m9_83 -> m9_84  [key=0, style=solid];
m9_80 -> m9_82  [key=0, style=solid];
m9_80 -> m9_20  [key=2, style=dotted];
m9_80 -> m9_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_21  [key=2, style=dotted];
m9_82 -> m9_77  [color=blue, key=0, style=bold];
m9_87 -> m9_88  [key=0, style=solid];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_53  [key=2, style=dotted];
m9_84 -> m9_86  [key=2, style=dotted];
m9_85 -> m9_83  [color=blue, key=0, style=bold];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_90  [key=2, style=dotted];
m9_88 -> m9_74  [key=2, style=dotted];
m9_89 -> m9_87  [color=blue, key=0, style=bold];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_17  [key=2, style=dotted];
m9_95 -> m9_100  [key=2, style=dotted];
m9_95 -> m9_101  [key=2, style=dotted];
m9_95 -> m9_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_95 -> m9_95  [color=darkseagreen4, key=1, label=t, style=dashed];
m9_94 -> m9_95  [key=0, style=solid];
m9_94 -> m9_25  [key=2, style=dotted];
m9_94 -> m9_53  [key=2, style=dotted];
m9_94 -> m9_94  [color=darkseagreen4, key=1, label=sp, style=dashed];
m9_93 -> m9_94  [key=0, style=solid];
m9_96 -> m9_97  [key=0, style=solid];
m9_96 -> m9_19  [key=2, style=dotted];
m9_96 -> m9_96  [color=darkseagreen4, key=1, label=x, style=dashed];
m9_97 -> m9_98  [key=0, style=solid];
m9_97 -> m9_102  [key=2, style=dotted];
m9_97 -> m9_103  [key=2, style=dotted];
m9_97 -> m9_97  [color=darkseagreen4, key=1, label=y, style=dashed];
m9_98 -> m9_99  [key=0, style=solid];
m9_99 -> m9_93  [color=blue, key=0, style=bold];
m9_105 -> m9_106  [key=0, style=solid];
m9_105 -> m9_107  [key=2, style=dotted];
m9_106 -> m9_104  [color=blue, key=0, style=bold];
m9_5 -> m9_38  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_38 -> m9_41  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_38 -> m9_42  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m9_39 -> m9_5  [color=blue, key=0, style=bold];
m9_108 -> m9_61  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m9_109 -> m9_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m10_0 -> m10_1  [key=0, style=solid];
m10_1 -> m10_2  [color=red, key=0, style=solid];
m10_1 -> m10_8  [key=2, style=dotted];
m10_1 -> m10_6  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_2 -> m10_3  [color=red, key=0, style=solid];
m10_2 -> m10_9  [color=red, key=2, style=dotted];
m10_2 -> m10_10  [color=red, key=2, style=dotted];
m10_2 -> m10_4  [color=red, key=1, label=parser, style=dashed];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_15  [key=2, style=dotted];
m10_6 -> m10_13  [key=2, style=dotted];
m10_6 -> m10_16  [key=2, style=dotted];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_11  [key=2, style=dotted];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_12  [key=2, style=dotted];
m10_5 -> m10_6  [key=0, style=solid];
m10_5 -> m10_13  [key=2, style=dotted];
m10_5 -> m10_14  [key=2, style=dotted];
m10_7 -> m10_0  [color=blue, key=0, style=bold];
m10_17 -> m10_18  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_8  [key=2, style=dotted];
m10_18 -> m10_20  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_18 -> m10_25  [color=darkseagreen4, key=1, label=writer, style=dashed];
m10_19 -> m10_20  [key=0, style=solid];
m10_19 -> m10_27  [key=2, style=dotted];
m10_19 -> m10_21  [color=red, key=1, label=settings, style=dashed];
m10_20 -> m10_21  [color=red, key=0, style=solid];
m10_25 -> m10_26  [key=0, style=solid];
m10_25 -> m10_15  [key=2, style=dotted];
m10_25 -> m10_13  [key=2, style=dotted];
m10_25 -> m10_16  [key=2, style=dotted];
m10_21 -> m10_22  [color=red, key=0, style=solid];
m10_21 -> m10_9  [color=red, key=2, style=dotted];
m10_21 -> m10_23  [color=red, key=1, label=parser, style=dashed];
m10_22 -> m10_23  [key=0, style=solid];
m10_22 -> m10_11  [key=2, style=dotted];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_12  [key=2, style=dotted];
m10_24 -> m10_25  [key=0, style=solid];
m10_24 -> m10_13  [key=2, style=dotted];
m10_24 -> m10_14  [key=2, style=dotted];
m10_26 -> m10_17  [color=blue, key=0, style=bold];
m14_4 -> m14_5  [color=green, key=0, style=solid];
m14_4 -> m14_18  [color=green, key=2, style=dotted];
m14_4 -> m14_29  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m14_5 -> m14_4  [color=blue, key=0, style=bold];
m14_5 -> m14_6  [key=0, style=solid];
m14_5 -> m14_19  [key=2, style=dotted];
m14_5 -> m14_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_37 -> m14_38  [key=0, style=solid];
m14_41 -> m14_42  [color=green, key=0, style=solid];
m14_41 -> m14_18  [color=green, key=2, style=dotted];
m14_41 -> m14_52  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m14_39 -> m14_41  [color=green, key=1, label=testWriter, style=dashed];
m14_39 -> m14_52  [color=green, key=1, label=testWriter, style=dashed];
m14_39 -> m14_40  [key=0, style=solid];
m14_39 -> m14_16  [key=2, style=dotted];
m14_39 -> m14_44  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m14_40 -> m14_41  [color=green, key=0, style=solid];
m14_40 -> m14_17  [key=2, style=dotted];
m14_42 -> m14_43  [key=0, style=solid];
m14_42 -> m14_19  [key=2, style=dotted];
m14_42 -> m14_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_42  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_38 -> m14_50  [key=2, style=dotted];
m14_44 -> m14_45  [key=0, style=solid];
m14_44 -> m14_22  [key=2, style=dotted];
m14_44 -> m14_46  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m14_43 -> m14_44  [key=0, style=solid];
m14_43 -> m14_20  [key=2, style=dotted];
m14_43 -> m14_21  [key=2, style=dotted];
m14_45 -> m14_46  [key=0, style=solid];
m14_45 -> m14_23  [key=2, style=dotted];
m14_46 -> m14_47  [key=0, style=solid];
m14_46 -> m14_24  [key=2, style=dotted];
m14_46 -> m14_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_47 -> m14_20  [key=2, style=dotted];
m14_47 -> m14_48  [key=0, style=solid];
m14_47 -> m14_25  [key=2, style=dotted];
m14_47 -> m14_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_48 -> m14_20  [key=2, style=dotted];
m14_48 -> m14_27  [key=2, style=dotted];
m14_48 -> m14_49  [key=0, style=solid];
m14_48 -> m14_26  [key=2, style=dotted];
m14_49 -> m14_37  [color=blue, key=0, style=bold];
m14_60 -> m14_61  [key=0, style=solid];
m14_66 -> m14_67  [color=green, key=0, style=solid];
m14_66 -> m14_18  [color=green, key=2, style=dotted];
m14_66 -> m14_83  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m14_64 -> m14_66  [color=green, key=1, label=testWriter, style=dashed];
m14_64 -> m14_83  [color=green, key=1, label=testWriter, style=dashed];
m14_64 -> m14_65  [key=0, style=solid];
m14_64 -> m14_16  [key=2, style=dotted];
m14_64 -> m14_69  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m14_65 -> m14_66  [color=green, key=0, style=solid];
m14_65 -> m14_17  [key=2, style=dotted];
m14_67 -> m14_68  [key=0, style=solid];
m14_67 -> m14_80  [key=2, style=dotted];
m14_67 -> m14_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_67 -> m14_89  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_67 -> m14_76  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m14_67 -> m14_77  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m14_63 -> m14_64  [key=0, style=solid];
m14_63 -> m14_67  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_63 -> m14_79  [key=2, style=dotted];
m14_69 -> m14_70  [key=0, style=solid];
m14_69 -> m14_22  [key=2, style=dotted];
m14_69 -> m14_71  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m14_61 -> m14_67  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m14_61 -> m14_61  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m14_61 -> m14_62  [key=0, style=solid];
m14_62 -> m14_67  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m14_62 -> m14_63  [key=0, style=solid];
m14_62 -> m14_61  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m14_68 -> m14_69  [key=0, style=solid];
m14_68 -> m14_20  [key=2, style=dotted];
m14_68 -> m14_21  [key=2, style=dotted];
m14_76 -> m14_77  [key=0, style=solid];
m14_76 -> m14_20  [key=2, style=dotted];
m14_76 -> m14_27  [key=2, style=dotted];
m14_77 -> m14_78  [key=0, style=solid];
m14_77 -> m14_20  [key=2, style=dotted];
m14_77 -> m14_81  [key=2, style=dotted];
m14_70 -> m14_71  [key=0, style=solid];
m14_70 -> m14_23  [key=2, style=dotted];
m14_71 -> m14_72  [key=0, style=solid];
m14_71 -> m14_24  [key=2, style=dotted];
m14_71 -> m14_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_71 -> m14_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_71 -> m14_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_75 -> m14_76  [key=0, style=solid];
m14_75 -> m14_20  [key=2, style=dotted];
m14_75 -> m14_26  [key=2, style=dotted];
m14_75 -> m14_27  [key=2, style=dotted];
m14_72 -> m14_20  [key=2, style=dotted];
m14_72 -> m14_73  [key=0, style=solid];
m14_72 -> m14_25  [key=2, style=dotted];
m14_72 -> m14_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_73 -> m14_20  [key=2, style=dotted];
m14_73 -> m14_27  [key=2, style=dotted];
m14_73 -> m14_74  [key=0, style=solid];
m14_73 -> m14_26  [key=2, style=dotted];
m14_74 -> m14_20  [key=2, style=dotted];
m14_74 -> m14_75  [key=0, style=solid];
m14_74 -> m14_27  [key=2, style=dotted];
m14_74 -> m14_26  [key=2, style=dotted];
m14_78 -> m14_60  [color=blue, key=0, style=bold];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_4  [color=green, key=1, label=testWriter, style=dashed];
m14_2 -> m14_29  [color=green, key=1, label=testWriter, style=dashed];
m14_2 -> m14_16  [key=2, style=dotted];
m14_2 -> m14_7  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m14_3 -> m14_2  [color=blue, key=0, style=bold];
m14_3 -> m14_4  [color=green, key=0, style=solid];
m14_3 -> m14_17  [key=2, style=dotted];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_1 -> m14_15  [key=2, style=dotted];
m14_1 -> m14_0  [color=blue, key=0, style=bold];
m14_7 -> m14_8  [key=0, style=solid];
m14_7 -> m14_22  [key=2, style=dotted];
m14_7 -> m14_9  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m14_6 -> m14_7  [key=0, style=solid];
m14_6 -> m14_20  [key=2, style=dotted];
m14_6 -> m14_21  [key=2, style=dotted];
m14_8 -> m14_9  [key=0, style=solid];
m14_8 -> m14_23  [key=2, style=dotted];
m14_9 -> m14_10  [key=0, style=solid];
m14_9 -> m14_24  [key=2, style=dotted];
m14_9 -> m14_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_9 -> m14_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_9 -> m14_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_10 -> m14_20  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_10 -> m14_25  [key=2, style=dotted];
m14_10 -> m14_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_11 -> m14_20  [key=2, style=dotted];
m14_11 -> m14_27  [key=2, style=dotted];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_26  [key=2, style=dotted];
m14_12 -> m14_20  [key=2, style=dotted];
m14_12 -> m14_27  [key=2, style=dotted];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_26  [key=2, style=dotted];
m14_13 -> m14_20  [key=2, style=dotted];
m14_13 -> m14_27  [key=2, style=dotted];
m14_13 -> m14_14  [key=0, style=solid];
m14_13 -> m14_26  [key=2, style=dotted];
m14_14 -> m14_0  [color=blue, key=0, style=bold];
m14_123 -> m14_124  [key=0, style=solid];
m14_29 -> m14_30  [color=green, key=0, style=solid];
m14_28 -> m14_29  [color=green, key=0, style=solid];
m14_30 -> m14_28  [color=blue, key=0, style=bold];
m14_52 -> m14_53  [color=green, key=0, style=solid];
m14_51 -> m14_52  [color=green, key=0, style=solid];
m14_53 -> m14_51  [color=blue, key=0, style=bold];
m14_83 -> m14_84  [color=green, key=0, style=solid];
m14_82 -> m14_83  [color=green, key=0, style=solid];
m14_84 -> m14_82  [color=blue, key=0, style=bold];
m14_114 -> m14_115  [color=green, key=0, style=solid];
m14_113 -> m14_114  [color=green, key=0, style=solid];
m14_115 -> m14_113  [color=blue, key=0, style=bold];
m14_31 -> m14_32  [key=0, style=solid];
m14_54 -> m14_55  [key=0, style=solid];
m14_85 -> m14_86  [key=0, style=solid];
m14_85 -> m14_87  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_89 -> m14_90  [key=0, style=solid];
m14_116 -> m14_117  [key=0, style=solid];
m14_116 -> m14_118  [color=darkseagreen4, key=1, label=object, style=dashed];
m14_120 -> m14_121  [key=0, style=solid];
m14_33 -> m14_31  [color=blue, key=0, style=bold];
m14_32 -> m14_33  [key=0, style=solid];
m14_32 -> m14_23  [key=2, style=dotted];
m14_56 -> m14_54  [color=blue, key=0, style=bold];
m14_55 -> m14_56  [key=0, style=solid];
m14_55 -> m14_23  [key=2, style=dotted];
m14_88 -> m14_85  [color=blue, key=0, style=bold];
m14_86 -> m14_88  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m14_86 -> m14_87  [key=0, style=solid];
m14_87 -> m14_88  [key=0, style=solid];
m14_91 -> m14_89  [color=blue, key=0, style=bold];
m14_90 -> m14_91  [key=0, style=solid];
m14_90 -> m14_23  [key=2, style=dotted];
m14_119 -> m14_116  [color=blue, key=0, style=bold];
m14_117 -> m14_119  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m14_117 -> m14_118  [key=0, style=solid];
m14_118 -> m14_119  [key=0, style=solid];
m14_122 -> m14_120  [color=blue, key=0, style=bold];
m14_121 -> m14_122  [key=0, style=solid];
m14_121 -> m14_23  [key=2, style=dotted];
m14_34 -> m14_35  [key=0, style=solid];
m14_57 -> m14_58  [key=0, style=solid];
m14_92 -> m14_93  [key=0, style=solid];
m14_36 -> m14_34  [color=blue, key=0, style=bold];
m14_35 -> m14_36  [key=0, style=solid];
m14_59 -> m14_57  [color=blue, key=0, style=bold];
m14_58 -> m14_59  [key=0, style=solid];
m14_94 -> m14_92  [color=blue, key=0, style=bold];
m14_93 -> m14_94  [key=0, style=solid];
m14_124 -> m14_125  [key=0, style=solid];
m14_125 -> m14_123  [color=blue, key=0, style=bold];
m14_95 -> m14_96  [key=0, style=solid];
m14_101 -> m14_102  [color=green, key=0, style=solid];
m14_101 -> m14_18  [color=green, key=2, style=dotted];
m14_101 -> m14_114  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m14_99 -> m14_101  [color=green, key=1, label=testWriter, style=dashed];
m14_99 -> m14_114  [color=green, key=1, label=testWriter, style=dashed];
m14_99 -> m14_100  [key=0, style=solid];
m14_99 -> m14_16  [key=2, style=dotted];
m14_99 -> m14_104  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m14_100 -> m14_101  [color=green, key=0, style=solid];
m14_100 -> m14_17  [key=2, style=dotted];
m14_102 -> m14_103  [key=0, style=solid];
m14_102 -> m14_80  [key=2, style=dotted];
m14_102 -> m14_116  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_102 -> m14_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_102 -> m14_109  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m14_102 -> m14_110  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m14_98 -> m14_99  [key=0, style=solid];
m14_98 -> m14_102  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_98 -> m14_112  [key=2, style=dotted];
m14_104 -> m14_105  [key=0, style=solid];
m14_104 -> m14_22  [key=2, style=dotted];
m14_104 -> m14_106  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m14_96 -> m14_102  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m14_96 -> m14_61  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m14_96 -> m14_97  [key=0, style=solid];
m14_97 -> m14_102  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m14_97 -> m14_61  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m14_97 -> m14_98  [key=0, style=solid];
m14_103 -> m14_104  [key=0, style=solid];
m14_103 -> m14_20  [key=2, style=dotted];
m14_103 -> m14_21  [key=2, style=dotted];
m14_109 -> m14_110  [key=0, style=solid];
m14_109 -> m14_20  [key=2, style=dotted];
m14_109 -> m14_27  [key=2, style=dotted];
m14_110 -> m14_111  [key=0, style=solid];
m14_110 -> m14_20  [key=2, style=dotted];
m14_110 -> m14_81  [key=2, style=dotted];
m14_105 -> m14_106  [key=0, style=solid];
m14_105 -> m14_23  [key=2, style=dotted];
m14_106 -> m14_107  [key=0, style=solid];
m14_106 -> m14_24  [key=2, style=dotted];
m14_106 -> m14_108  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_108 -> m14_109  [key=0, style=solid];
m14_108 -> m14_20  [key=2, style=dotted];
m14_108 -> m14_27  [key=2, style=dotted];
m14_108 -> m14_26  [key=2, style=dotted];
m14_107 -> m14_20  [key=2, style=dotted];
m14_107 -> m14_108  [key=0, style=solid];
m14_107 -> m14_25  [key=2, style=dotted];
m14_107 -> m14_123  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m14_111 -> m14_95  [color=blue, key=0, style=bold];
m14_126 -> m14_29  [color=green, key=1, label=testWriter, style=dashed];
m14_127 -> m14_52  [color=green, key=1, label=testWriter, style=dashed];
m14_128 -> m14_83  [color=green, key=1, label=testWriter, style=dashed];
m14_129 -> m14_114  [color=green, key=1, label=testWriter, style=dashed];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_2  [key=0, style=solid];
m15_1 -> m15_4  [color=darkseagreen4, key=1, label=args, style=dashed];
m15_1 -> m15_8  [color=darkseagreen4, key=1, label=args, style=dashed];
m15_2 -> m15_3  [color=red, key=0, style=solid];
m15_2 -> m15_13  [key=2, style=dotted];
m15_2 -> m15_4  [color=darkseagreen4, key=1, label=appOptions, style=dashed];
m15_2 -> m15_6  [color=darkseagreen4, key=1, label=appOptions, style=dashed];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_16  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_16  [key=2, style=dotted];
m15_3 -> m15_4  [color=red, key=0, style=solid];
m15_3 -> m15_14  [color=red, key=2, style=dotted];
m15_3 -> m15_15  [color=red, key=2, style=dotted];
m15_3 -> m15_8  [color=red, key=1, label=parser, style=dashed];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_17  [key=2, style=dotted];
m15_6 -> m15_19  [key=2, style=dotted];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_17  [key=2, style=dotted];
m15_5 -> m15_18  [key=2, style=dotted];
m15_7 -> m15_8  [key=0, style=solid];
m15_7 -> m15_20  [key=2, style=dotted];
m15_7 -> m15_10  [color=darkseagreen4, key=1, label=plugInXOptions, style=dashed];
m15_7 -> m15_11  [color=darkseagreen4, key=1, label=plugInXOptions, style=dashed];
m15_10 -> m15_11  [key=0, style=solid];
m15_10 -> m15_17  [key=2, style=dotted];
m15_10 -> m15_19  [key=2, style=dotted];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_17  [key=2, style=dotted];
m15_11 -> m15_19  [key=2, style=dotted];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_17  [key=2, style=dotted];
m15_9 -> m15_18  [key=2, style=dotted];
m15_12 -> m15_0  [color=blue, key=0, style=bold];
m16_35 -> m16_36  [color=red, key=0, style=solid];
m16_35 -> m16_31  [key=2, style=dotted];
m16_35 -> m16_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_19 -> m16_20  [key=0, style=solid];
m16_19 -> m16_21  [key=2, style=dotted];
m16_20 -> m16_21  [color=red, key=0, style=solid];
m16_20 -> m16_31  [key=2, style=dotted];
m16_20 -> m16_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_20 -> m16_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_20 -> m16_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_20 -> m16_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_20 -> m16_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_20 -> m16_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_20 -> m16_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_20 -> m16_18  [color=blue, key=0, style=bold];
m16_21 -> m16_22  [color=red, key=0, style=solid];
m16_21 -> m16_13  [color=red, key=2, style=dotted];
m16_22 -> m16_23  [key=0, style=solid];
m16_22 -> m16_14  [key=2, style=dotted];
m16_22 -> m16_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m16_24 -> m16_25  [key=0, style=solid];
m16_24 -> m16_15  [key=2, style=dotted];
m16_24 -> m16_17  [key=2, style=dotted];
m16_25 -> m16_26  [key=0, style=solid];
m16_25 -> m16_15  [key=2, style=dotted];
m16_25 -> m16_17  [key=2, style=dotted];
m16_25 -> m16_33  [key=0, style=solid];
m16_25 -> m16_35  [key=2, style=dotted];
m16_26 -> m16_27  [key=0, style=solid];
m16_26 -> m16_15  [key=2, style=dotted];
m16_26 -> m16_17  [key=2, style=dotted];
m16_27 -> m16_28  [key=0, style=solid];
m16_27 -> m16_15  [key=2, style=dotted];
m16_27 -> m16_32  [key=2, style=dotted];
m16_28 -> m16_29  [key=0, style=solid];
m16_28 -> m16_15  [key=2, style=dotted];
m16_28 -> m16_33  [key=2, style=dotted];
m16_29 -> m16_30  [color=green, key=0, style=solid];
m16_29 -> m16_18  [key=2, style=dotted];
m16_29 -> m16_32  [key=0, style=solid];
m16_29 -> m16_36  [key=2, style=dotted];
m16_29 -> m16_31  [color=darkseagreen4, key=1, label=max, style=dashed];
m16_23 -> m16_24  [key=0, style=solid];
m16_23 -> m16_15  [key=2, style=dotted];
m16_23 -> m16_16  [key=2, style=dotted];
m16_23 -> m16_26  [key=0, style=solid];
m16_23 -> m16_34  [key=2, style=dotted];
m16_30 -> m16_19  [color=blue, key=0, style=bold];
m16_30 -> m16_31  [color=green, key=0, style=solid];
m16_30 -> m16_32  [color=green, key=0, style=solid];
m16_46 -> m16_48  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m16_46 -> m16_47  [key=0, style=solid];
m16_46 -> m16_49  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m16_46 -> m16_18  [key=2, style=dotted];
m16_48 -> m16_36  [key=2, style=dotted];
m16_48 -> m16_49  [key=0, style=solid];
m16_48 -> m16_50  [key=0, style=solid];
m16_47 -> m16_48  [key=0, style=solid];
m16_47 -> m16_40  [color=blue, key=0, style=bold];
m16_49 -> m16_51  [key=0, style=solid];
m16_49 -> m16_21  [key=2, style=dotted];
m16_50 -> m16_51  [key=0, style=solid];
m16_51 -> m16_46  [color=blue, key=0, style=bold];
m16_51 -> m16_52  [key=0, style=solid];
m16_37 -> m16_38  [key=0, style=solid];
m16_37 -> m16_14  [key=2, style=dotted];
m16_34 -> m16_35  [key=0, style=solid];
m16_36 -> m16_37  [color=red, key=0, style=solid];
m16_36 -> m16_13  [color=red, key=2, style=dotted];
m16_38 -> m16_39  [key=0, style=solid];
m16_38 -> m16_15  [key=2, style=dotted];
m16_38 -> m16_33  [key=2, style=dotted];
m16_38 -> m16_42  [color=green, key=1, label="System.Func<int, int, bool>", style=dashed];
m16_38 -> m16_41  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m16_39 -> m16_34  [color=blue, key=0, style=bold];
m16_39 -> m16_40  [key=0, style=solid];
m16_10 -> m16_11  [key=0, style=solid];
m16_10 -> m16_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m16_10 -> m16_14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m16_10 -> m16_18  [key=2, style=dotted];
m16_11 -> m16_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m16_11 -> m16_12  [key=0, style=solid];
m16_11 -> m16_14  [key=0, style=solid];
m16_11 -> m16_13  [color=darkseagreen4, key=1, label=guard, style=dashed];
m16_11 -> m16_0  [color=blue, key=0, style=bold];
m16_12 -> m16_11  [key=0, style=solid];
m16_12 -> m16_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_12 -> m16_13  [key=0, style=solid];
m16_12 -> m16_16  [key=2, style=dotted];
m16_14 -> m16_15  [key=0, style=solid];
m16_13 -> m16_15  [key=0, style=solid];
m16_13 -> m16_17  [key=2, style=dotted];
m16_15 -> m16_10  [color=blue, key=0, style=bold];
m16_31 -> m16_33  [key=0, style=solid];
m16_31 -> m16_35  [key=2, style=dotted];
m16_32 -> m16_33  [key=0, style=solid];
m16_32 -> m16_37  [key=2, style=dotted];
m16_33 -> m16_22  [color=blue, key=0, style=bold];
m16_18 -> m16_19  [key=0, style=solid];
m16_52 -> m16_50  [color=blue, key=0, style=bold];
m16_52 -> m16_54  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m16_52 -> m16_53  [key=0, style=solid];
m16_52 -> m16_55  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m16_42 -> m16_44  [color=green, key=0, style=solid];
m16_42 -> m16_45  [color=green, key=2, style=dotted];
m16_42 -> m16_43  [color=red, key=0, style=solid];
m16_42 -> m16_13  [color=red, key=2, style=dotted];
m16_41 -> m16_42  [color=red, key=0, style=solid];
m16_41 -> m16_43  [key=0, style=solid];
m16_41 -> m16_36  [key=2, style=dotted];
m16_41 -> m16_48  [key=2, style=dotted];
m16_41 -> m16_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_41 -> m16_46  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_40 -> m16_41  [key=0, style=solid];
m16_43 -> m16_44  [key=0, style=solid];
m16_43 -> m16_14  [key=2, style=dotted];
m16_44 -> m16_38  [color=blue, key=0, style=bold];
m16_44 -> m16_45  [key=0, style=solid];
m16_44 -> m16_15  [key=2, style=dotted];
m16_44 -> m16_16  [key=2, style=dotted];
m16_53 -> m16_54  [key=0, style=solid];
m16_54 -> m16_55  [color=red, key=0, style=solid];
m16_54 -> m16_48  [key=2, style=dotted];
m16_54 -> m16_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_36  [key=2, style=dotted];
m16_55 -> m16_56  [color=red, key=0, style=solid];
m16_55 -> m16_13  [color=red, key=2, style=dotted];
m16_55 -> m16_57  [key=0, style=solid];
m16_55 -> m16_21  [key=2, style=dotted];
m16_56 -> m16_57  [key=0, style=solid];
m16_56 -> m16_14  [key=2, style=dotted];
m16_57 -> m16_58  [key=0, style=solid];
m16_57 -> m16_15  [key=2, style=dotted];
m16_57 -> m16_33  [key=2, style=dotted];
m16_57 -> m16_52  [color=blue, key=0, style=bold];
m16_58 -> m16_53  [color=blue, key=0, style=bold];
m16_58 -> m16_19  [color=darkseagreen4, key=1, label=guard, style=dashed];
m16_45 -> m16_46  [key=0, style=solid];
m16_45 -> m16_15  [key=2, style=dotted];
m16_45 -> m16_49  [key=2, style=dotted];
m16_45 -> m16_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m16_0 -> m16_1  [key=0, style=solid];
m16_1 -> m16_2  [color=red, key=0, style=solid];
m16_1 -> m16_12  [key=2, style=dotted];
m16_1 -> m16_3  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_8  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_9  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_1 -> m16_10  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_2 -> m16_3  [color=red, key=0, style=solid];
m16_2 -> m16_13  [color=red, key=2, style=dotted];
m16_3 -> m16_4  [key=0, style=solid];
m16_3 -> m16_14  [key=2, style=dotted];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_15  [key=2, style=dotted];
m16_5 -> m16_17  [key=2, style=dotted];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_15  [key=2, style=dotted];
m16_6 -> m16_17  [key=2, style=dotted];
m16_7 -> m16_8  [key=0, style=solid];
m16_7 -> m16_15  [key=2, style=dotted];
m16_7 -> m16_17  [key=2, style=dotted];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_15  [key=2, style=dotted];
m16_8 -> m16_17  [key=2, style=dotted];
m16_9 -> m16_10  [key=0, style=solid];
m16_9 -> m16_15  [key=2, style=dotted];
m16_9 -> m16_16  [key=2, style=dotted];
m16_4 -> m16_5  [key=0, style=solid];
m16_4 -> m16_15  [key=2, style=dotted];
m16_4 -> m16_16  [key=2, style=dotted];
m17_11 -> m17_12  [key=0, style=solid];
m17_14 -> m17_7  [key=2, style=dotted];
m17_14 -> m17_15  [key=0, style=solid];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_16  [key=2, style=dotted];
m17_13 -> m17_17  [key=2, style=dotted];
m17_13 -> m17_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_13 -> m17_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_13 -> m17_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_12 -> m17_13  [key=0, style=solid];
m17_15 -> m17_11  [color=blue, key=0, style=bold];
m17_65 -> m17_66  [key=0, style=solid];
m17_68 -> m17_7  [key=2, style=dotted];
m17_68 -> m17_69  [key=0, style=solid];
m17_67 -> m17_5  [key=2, style=dotted];
m17_67 -> m17_6  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_33  [key=2, style=dotted];
m17_67 -> m17_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_67 -> m17_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_66 -> m17_67  [key=0, style=solid];
m17_69 -> m17_65  [color=blue, key=0, style=bold];
m17_104 -> m17_105  [key=0, style=solid];
m17_106 -> m17_7  [key=2, style=dotted];
m17_106 -> m17_107  [key=0, style=solid];
m17_105 -> m17_5  [key=2, style=dotted];
m17_105 -> m17_106  [key=0, style=solid];
m17_105 -> m17_80  [key=2, style=dotted];
m17_105 -> m17_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_105 -> m17_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_107 -> m17_104  [color=blue, key=0, style=bold];
m17_54 -> m17_55  [key=0, style=solid];
m17_57 -> m17_7  [key=2, style=dotted];
m17_57 -> m17_58  [key=0, style=solid];
m17_56 -> m17_5  [key=2, style=dotted];
m17_56 -> m17_6  [key=2, style=dotted];
m17_56 -> m17_57  [key=0, style=solid];
m17_56 -> m17_33  [key=2, style=dotted];
m17_56 -> m17_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_56 -> m17_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_55 -> m17_56  [key=0, style=solid];
m17_58 -> m17_54  [color=blue, key=0, style=bold];
m17_28 -> m17_29  [key=0, style=solid];
m17_31 -> m17_7  [key=2, style=dotted];
m17_31 -> m17_32  [key=0, style=solid];
m17_30 -> m17_5  [key=2, style=dotted];
m17_30 -> m17_31  [key=0, style=solid];
m17_30 -> m17_33  [key=2, style=dotted];
m17_30 -> m17_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_29 -> m17_30  [key=0, style=solid];
m17_32 -> m17_28  [color=blue, key=0, style=bold];
m17_179 -> m17_180  [key=0, style=solid];
m17_8 -> m17_9  [key=0, style=solid];
m17_10 -> m17_8  [color=blue, key=0, style=bold];
m17_9 -> m17_10  [key=0, style=solid];
m17_34 -> m17_35  [key=0, style=solid];
m17_59 -> m17_60  [key=0, style=solid];
m17_62 -> m17_63  [key=0, style=solid];
m17_70 -> m17_71  [key=0, style=solid];
m17_73 -> m17_74  [key=0, style=solid];
m17_81 -> m17_82  [key=0, style=solid];
m17_84 -> m17_85  [key=0, style=solid];
m17_108 -> m17_109  [key=0, style=solid];
m17_111 -> m17_112  [key=0, style=solid];
m17_18 -> m17_19  [key=0, style=solid];
m17_21 -> m17_22  [key=0, style=solid];
m17_24 -> m17_25  [key=0, style=solid];
m17_42 -> m17_43  [key=0, style=solid];
m17_45 -> m17_46  [key=0, style=solid];
m17_48 -> m17_49  [key=0, style=solid];
m17_51 -> m17_52  [key=0, style=solid];
m17_92 -> m17_93  [key=0, style=solid];
m17_95 -> m17_96  [key=0, style=solid];
m17_98 -> m17_99  [key=0, style=solid];
m17_101 -> m17_102  [key=0, style=solid];
m17_118 -> m17_119  [key=0, style=solid];
m17_121 -> m17_122  [key=0, style=solid];
m17_124 -> m17_125  [key=0, style=solid];
m17_127 -> m17_128  [key=0, style=solid];
m17_136 -> m17_137  [key=0, style=solid];
m17_139 -> m17_140  [key=0, style=solid];
m17_142 -> m17_143  [key=0, style=solid];
m17_145 -> m17_146  [key=0, style=solid];
m17_153 -> m17_154  [key=0, style=solid];
m17_156 -> m17_157  [key=0, style=solid];
m17_164 -> m17_165  [key=0, style=solid];
m17_167 -> m17_168  [key=0, style=solid];
m17_170 -> m17_171  [key=0, style=solid];
m17_173 -> m17_174  [key=0, style=solid];
m17_176 -> m17_177  [key=0, style=solid];
m17_36 -> m17_34  [color=blue, key=0, style=bold];
m17_35 -> m17_36  [key=0, style=solid];
m17_61 -> m17_59  [color=blue, key=0, style=bold];
m17_60 -> m17_61  [key=0, style=solid];
m17_64 -> m17_62  [color=blue, key=0, style=bold];
m17_63 -> m17_64  [key=0, style=solid];
m17_72 -> m17_70  [color=blue, key=0, style=bold];
m17_71 -> m17_72  [key=0, style=solid];
m17_75 -> m17_73  [color=blue, key=0, style=bold];
m17_74 -> m17_75  [key=0, style=solid];
m17_83 -> m17_81  [color=blue, key=0, style=bold];
m17_82 -> m17_83  [key=0, style=solid];
m17_86 -> m17_84  [color=blue, key=0, style=bold];
m17_85 -> m17_86  [key=0, style=solid];
m17_110 -> m17_108  [color=blue, key=0, style=bold];
m17_109 -> m17_110  [key=0, style=solid];
m17_113 -> m17_111  [color=blue, key=0, style=bold];
m17_112 -> m17_113  [key=0, style=solid];
m17_20 -> m17_18  [color=blue, key=0, style=bold];
m17_19 -> m17_20  [key=0, style=solid];
m17_23 -> m17_21  [color=blue, key=0, style=bold];
m17_22 -> m17_23  [key=0, style=solid];
m17_26 -> m17_24  [color=blue, key=0, style=bold];
m17_25 -> m17_26  [key=0, style=solid];
m17_25 -> m17_27  [key=2, style=dotted];
m17_44 -> m17_42  [color=blue, key=0, style=bold];
m17_43 -> m17_44  [key=0, style=solid];
m17_47 -> m17_45  [color=blue, key=0, style=bold];
m17_46 -> m17_47  [key=0, style=solid];
m17_50 -> m17_48  [color=blue, key=0, style=bold];
m17_49 -> m17_50  [key=0, style=solid];
m17_53 -> m17_51  [color=blue, key=0, style=bold];
m17_52 -> m17_53  [key=0, style=solid];
m17_94 -> m17_92  [color=blue, key=0, style=bold];
m17_93 -> m17_94  [key=0, style=solid];
m17_97 -> m17_95  [color=blue, key=0, style=bold];
m17_96 -> m17_97  [key=0, style=solid];
m17_100 -> m17_98  [color=blue, key=0, style=bold];
m17_99 -> m17_100  [key=0, style=solid];
m17_103 -> m17_101  [color=blue, key=0, style=bold];
m17_102 -> m17_103  [key=0, style=solid];
m17_120 -> m17_118  [color=blue, key=0, style=bold];
m17_119 -> m17_120  [key=0, style=solid];
m17_123 -> m17_121  [color=blue, key=0, style=bold];
m17_122 -> m17_123  [key=0, style=solid];
m17_126 -> m17_124  [color=blue, key=0, style=bold];
m17_125 -> m17_126  [key=0, style=solid];
m17_129 -> m17_127  [color=blue, key=0, style=bold];
m17_128 -> m17_129  [key=0, style=solid];
m17_138 -> m17_136  [color=blue, key=0, style=bold];
m17_137 -> m17_138  [key=0, style=solid];
m17_141 -> m17_139  [color=blue, key=0, style=bold];
m17_140 -> m17_141  [key=0, style=solid];
m17_144 -> m17_142  [color=blue, key=0, style=bold];
m17_143 -> m17_144  [key=0, style=solid];
m17_147 -> m17_145  [color=blue, key=0, style=bold];
m17_146 -> m17_147  [key=0, style=solid];
m17_155 -> m17_153  [color=blue, key=0, style=bold];
m17_154 -> m17_155  [key=0, style=solid];
m17_158 -> m17_156  [color=blue, key=0, style=bold];
m17_157 -> m17_158  [key=0, style=solid];
m17_166 -> m17_164  [color=blue, key=0, style=bold];
m17_165 -> m17_166  [key=0, style=solid];
m17_169 -> m17_167  [color=blue, key=0, style=bold];
m17_168 -> m17_169  [key=0, style=solid];
m17_172 -> m17_170  [color=blue, key=0, style=bold];
m17_171 -> m17_172  [key=0, style=solid];
m17_175 -> m17_173  [color=blue, key=0, style=bold];
m17_174 -> m17_175  [key=0, style=solid];
m17_178 -> m17_176  [color=blue, key=0, style=bold];
m17_177 -> m17_178  [key=0, style=solid];
m17_180 -> m17_181  [key=0, style=solid];
m17_181 -> m17_179  [color=blue, key=0, style=bold];
m17_148 -> m17_149  [key=0, style=solid];
m17_150 -> m17_7  [key=2, style=dotted];
m17_150 -> m17_151  [key=0, style=solid];
m17_149 -> m17_150  [key=0, style=solid];
m17_149 -> m17_135  [key=2, style=dotted];
m17_149 -> m17_152  [key=2, style=dotted];
m17_149 -> m17_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_149 -> m17_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_151 -> m17_148  [color=blue, key=0, style=bold];
m17_130 -> m17_131  [key=0, style=solid];
m17_133 -> m17_7  [key=2, style=dotted];
m17_133 -> m17_134  [key=0, style=solid];
m17_132 -> m17_133  [key=0, style=solid];
m17_132 -> m17_135  [key=2, style=dotted];
m17_132 -> m17_17  [key=2, style=dotted];
m17_132 -> m17_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_132 -> m17_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_132 -> m17_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_132 -> m17_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_131 -> m17_132  [key=0, style=solid];
m17_134 -> m17_130  [color=blue, key=0, style=bold];
m17_76 -> m17_77  [key=0, style=solid];
m17_78 -> m17_7  [key=2, style=dotted];
m17_78 -> m17_79  [key=0, style=solid];
m17_77 -> m17_5  [key=2, style=dotted];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_80  [key=2, style=dotted];
m17_77 -> m17_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_77 -> m17_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_79 -> m17_76  [color=blue, key=0, style=bold];
m17_114 -> m17_115  [key=0, style=solid];
m17_116 -> m17_7  [key=2, style=dotted];
m17_116 -> m17_117  [key=0, style=solid];
m17_115 -> m17_116  [key=0, style=solid];
m17_115 -> m17_16  [key=2, style=dotted];
m17_115 -> m17_91  [key=2, style=dotted];
m17_115 -> m17_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_115 -> m17_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_115 -> m17_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_115 -> m17_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_117 -> m17_114  [color=blue, key=0, style=bold];
m17_37 -> m17_38  [key=0, style=solid];
m17_40 -> m17_7  [key=2, style=dotted];
m17_40 -> m17_41  [key=0, style=solid];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_16  [key=2, style=dotted];
m17_39 -> m17_17  [key=2, style=dotted];
m17_39 -> m17_33  [key=2, style=dotted];
m17_39 -> m17_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_39 -> m17_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_39 -> m17_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_39 -> m17_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_38 -> m17_39  [key=0, style=solid];
m17_41 -> m17_37  [color=blue, key=0, style=bold];
m17_159 -> m17_160  [key=0, style=solid];
m17_161 -> m17_7  [key=2, style=dotted];
m17_161 -> m17_162  [key=0, style=solid];
m17_160 -> m17_161  [key=0, style=solid];
m17_160 -> m17_135  [key=2, style=dotted];
m17_160 -> m17_163  [key=2, style=dotted];
m17_160 -> m17_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_160 -> m17_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_160 -> m17_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_160 -> m17_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_160 -> m17_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_160 -> m17_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_162 -> m17_159  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_3 -> m17_4  [color=green, key=0, style=solid];
m17_3 -> m17_7  [color=green, key=2, style=dotted];
m17_2 -> m17_3  [color=green, key=0, style=solid];
m17_2 -> m17_5  [key=2, style=dotted];
m17_2 -> m17_6  [key=2, style=dotted];
m17_2 -> m17_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_1 -> m17_2  [key=0, style=solid];
m17_4 -> m17_0  [color=blue, key=0, style=bold];
m17_87 -> m17_88  [key=0, style=solid];
m17_89 -> m17_7  [key=2, style=dotted];
m17_89 -> m17_90  [key=0, style=solid];
m17_88 -> m17_89  [key=0, style=solid];
m17_88 -> m17_16  [key=2, style=dotted];
m17_88 -> m17_91  [key=2, style=dotted];
m17_88 -> m17_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_88 -> m17_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_88 -> m17_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_88 -> m17_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_90 -> m17_87  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_6  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_1 -> m19_1  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_2 -> m19_0  [color=blue, key=0, style=bold];
m19_2 -> m19_6  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_1  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_3 -> m19_15  [key=2, style=dotted];
m19_3 -> m19_10  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_3 -> m19_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_3 -> m19_12  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_3 -> m19_13  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_4 -> m19_5  [color=green, key=0, style=solid];
m19_4 -> m19_0  [key=2, style=dotted];
m19_4 -> m19_6  [key=2, style=dotted];
m19_4 -> m19_7  [key=2, style=dotted];
m19_4 -> m19_8  [key=2, style=dotted];
m19_4 -> m19_9  [key=2, style=dotted];
m19_4 -> m19_16  [key=2, style=dotted];
m19_4 -> m19_17  [key=2, style=dotted];
m19_5 -> m19_3  [color=blue, key=0, style=bold];
m19_5 -> m19_6  [color=green, key=0, style=solid];
m19_5 -> m19_18  [color=green, key=2, style=dotted];
m19_95 -> m19_96  [key=0, style=solid];
m19_99 -> m19_100  [color=green, key=0, style=solid];
m19_99 -> m19_18  [color=green, key=2, style=dotted];
m19_98 -> m19_99  [color=green, key=0, style=solid];
m19_98 -> m19_105  [key=2, style=dotted];
m19_98 -> m19_100  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_100 -> m19_101  [key=0, style=solid];
m19_100 -> m19_19  [key=2, style=dotted];
m19_100 -> m19_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_100 -> m19_102  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_100 -> m19_103  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m19_97 -> m19_98  [key=0, style=solid];
m19_97 -> m19_100  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_97 -> m19_1  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_96 -> m19_100  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_96 -> m19_1  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_96 -> m19_97  [key=0, style=solid];
m19_101 -> m19_16  [key=2, style=dotted];
m19_101 -> m19_102  [key=0, style=solid];
m19_101 -> m19_65  [key=2, style=dotted];
m19_102 -> m19_16  [key=2, style=dotted];
m19_102 -> m19_103  [key=0, style=solid];
m19_102 -> m19_21  [key=2, style=dotted];
m19_103 -> m19_16  [key=2, style=dotted];
m19_103 -> m19_17  [key=2, style=dotted];
m19_103 -> m19_104  [key=0, style=solid];
m19_104 -> m19_95  [color=blue, key=0, style=bold];
m19_8 -> m19_16  [key=2, style=dotted];
m19_8 -> m19_9  [key=0, style=solid];
m19_8 -> m19_21  [key=2, style=dotted];
m19_29 -> m19_30  [key=0, style=solid];
m19_36 -> m19_37  [color=green, key=0, style=solid];
m19_36 -> m19_18  [color=green, key=2, style=dotted];
m19_35 -> m19_36  [color=green, key=0, style=solid];
m19_37 -> m19_38  [key=0, style=solid];
m19_37 -> m19_19  [key=2, style=dotted];
m19_37 -> m19_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_37 -> m19_39  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_37 -> m19_40  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m19_32 -> m19_35  [color=darkseagreen4, key=1, label=proof, style=dashed];
m19_32 -> m19_33  [key=0, style=solid];
m19_32 -> m19_44  [key=2, style=dotted];
m19_32 -> m19_45  [key=2, style=dotted];
m19_32 -> m19_41  [color=darkseagreen4, key=1, label=proof, style=dashed];
m19_33 -> m19_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_33 -> m19_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_33 -> m19_34  [key=0, style=solid];
m19_33 -> m19_15  [key=2, style=dotted];
m19_33 -> m19_41  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_33 -> m19_42  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_34 -> m19_35  [key=0, style=solid];
m19_34 -> m19_16  [key=2, style=dotted];
m19_34 -> m19_23  [key=2, style=dotted];
m19_30 -> m19_37  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_30 -> m19_1  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_30 -> m19_31  [key=0, style=solid];
m19_31 -> m19_37  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_31 -> m19_1  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_31 -> m19_32  [key=0, style=solid];
m19_38 -> m19_16  [key=2, style=dotted];
m19_38 -> m19_39  [key=0, style=solid];
m19_38 -> m19_20  [key=2, style=dotted];
m19_39 -> m19_16  [key=2, style=dotted];
m19_39 -> m19_40  [key=0, style=solid];
m19_39 -> m19_21  [key=2, style=dotted];
m19_40 -> m19_16  [key=2, style=dotted];
m19_40 -> m19_41  [key=0, style=solid];
m19_40 -> m19_22  [key=2, style=dotted];
m19_41 -> m19_16  [key=2, style=dotted];
m19_41 -> m19_42  [key=0, style=solid];
m19_41 -> m19_21  [key=2, style=dotted];
m19_42 -> m19_16  [key=2, style=dotted];
m19_42 -> m19_43  [key=0, style=solid];
m19_42 -> m19_20  [key=2, style=dotted];
m19_43 -> m19_29  [color=blue, key=0, style=bold];
m19_106 -> m19_107  [key=0, style=solid];
m19_106 -> m19_108  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_69 -> m19_70  [color=green, key=0, style=solid];
m19_68 -> m19_69  [color=green, key=0, style=solid];
m19_70 -> m19_68  [color=blue, key=0, style=bold];
m19_89 -> m19_90  [color=green, key=0, style=solid];
m19_88 -> m19_89  [color=green, key=0, style=solid];
m19_90 -> m19_88  [color=blue, key=0, style=bold];
m19_25 -> m19_26  [key=0, style=solid];
m19_25 -> m19_27  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_46 -> m19_47  [key=0, style=solid];
m19_46 -> m19_48  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_71 -> m19_72  [key=0, style=solid];
m19_71 -> m19_73  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_91 -> m19_92  [key=0, style=solid];
m19_91 -> m19_93  [color=darkseagreen4, key=1, label=object, style=dashed];
m19_28 -> m19_25  [color=blue, key=0, style=bold];
m19_26 -> m19_28  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_26 -> m19_27  [key=0, style=solid];
m19_27 -> m19_28  [key=0, style=solid];
m19_49 -> m19_46  [color=blue, key=0, style=bold];
m19_47 -> m19_49  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_47 -> m19_48  [key=0, style=solid];
m19_48 -> m19_49  [key=0, style=solid];
m19_74 -> m19_71  [color=blue, key=0, style=bold];
m19_72 -> m19_74  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_72 -> m19_73  [key=0, style=solid];
m19_73 -> m19_74  [key=0, style=solid];
m19_94 -> m19_91  [color=blue, key=0, style=bold];
m19_92 -> m19_94  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_92 -> m19_93  [key=0, style=solid];
m19_93 -> m19_94  [key=0, style=solid];
m19_107 -> m19_109  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_107 -> m19_108  [key=0, style=solid];
m19_108 -> m19_109  [key=0, style=solid];
m19_109 -> m19_106  [color=blue, key=0, style=bold];
m19_50 -> m19_51  [key=0, style=solid];
m19_55 -> m19_56  [color=green, key=0, style=solid];
m19_55 -> m19_64  [color=green, key=2, style=dotted];
m19_55 -> m19_69  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m19_54 -> m19_55  [color=green, key=0, style=solid];
m19_54 -> m19_69  [color=green, key=1, label=testWriter, style=dashed];
m19_54 -> m19_63  [key=2, style=dotted];
m19_54 -> m19_60  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m19_56 -> m19_57  [key=0, style=solid];
m19_56 -> m19_19  [key=2, style=dotted];
m19_56 -> m19_71  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_56 -> m19_58  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_56 -> m19_59  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m19_53 -> m19_54  [key=0, style=solid];
m19_53 -> m19_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_53 -> m19_15  [key=2, style=dotted];
m19_60 -> m19_61  [key=0, style=solid];
m19_60 -> m19_67  [key=2, style=dotted];
m19_51 -> m19_56  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_51 -> m19_1  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_51 -> m19_52  [key=0, style=solid];
m19_52 -> m19_56  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_52 -> m19_1  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_52 -> m19_53  [key=0, style=solid];
m19_57 -> m19_16  [key=2, style=dotted];
m19_57 -> m19_58  [key=0, style=solid];
m19_57 -> m19_65  [key=2, style=dotted];
m19_58 -> m19_16  [key=2, style=dotted];
m19_58 -> m19_59  [key=0, style=solid];
m19_58 -> m19_66  [key=2, style=dotted];
m19_59 -> m19_16  [key=2, style=dotted];
m19_59 -> m19_17  [key=2, style=dotted];
m19_59 -> m19_60  [key=0, style=solid];
m19_61 -> m19_16  [key=2, style=dotted];
m19_61 -> m19_62  [key=0, style=solid];
m19_61 -> m19_21  [key=2, style=dotted];
m19_62 -> m19_50  [color=blue, key=0, style=bold];
m19_7 -> m19_16  [key=2, style=dotted];
m19_7 -> m19_8  [key=0, style=solid];
m19_7 -> m19_20  [key=2, style=dotted];
m19_6 -> m19_7  [key=0, style=solid];
m19_6 -> m19_19  [key=2, style=dotted];
m19_6 -> m19_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_6 -> m19_8  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_6 -> m19_9  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m19_9 -> m19_16  [key=2, style=dotted];
m19_9 -> m19_10  [key=0, style=solid];
m19_9 -> m19_22  [key=2, style=dotted];
m19_10 -> m19_16  [key=2, style=dotted];
m19_10 -> m19_11  [key=0, style=solid];
m19_10 -> m19_23  [key=2, style=dotted];
m19_10 -> m19_1  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m19_11 -> m19_16  [key=2, style=dotted];
m19_11 -> m19_12  [key=0, style=solid];
m19_11 -> m19_24  [key=2, style=dotted];
m19_12 -> m19_16  [key=2, style=dotted];
m19_12 -> m19_13  [key=0, style=solid];
m19_12 -> m19_20  [key=2, style=dotted];
m19_13 -> m19_16  [key=2, style=dotted];
m19_13 -> m19_14  [key=0, style=solid];
m19_13 -> m19_21  [key=2, style=dotted];
m19_14 -> m19_0  [color=blue, key=0, style=bold];
m19_75 -> m19_76  [key=0, style=solid];
m19_80 -> m19_81  [color=green, key=0, style=solid];
m19_80 -> m19_64  [color=green, key=2, style=dotted];
m19_80 -> m19_89  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m19_79 -> m19_80  [color=green, key=0, style=solid];
m19_79 -> m19_89  [color=green, key=1, label=testWriter, style=dashed];
m19_79 -> m19_63  [key=2, style=dotted];
m19_79 -> m19_85  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m19_81 -> m19_82  [key=0, style=solid];
m19_81 -> m19_19  [key=2, style=dotted];
m19_81 -> m19_91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_81 -> m19_83  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m19_81 -> m19_84  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m19_78 -> m19_79  [key=0, style=solid];
m19_78 -> m19_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m19_78 -> m19_15  [key=2, style=dotted];
m19_85 -> m19_86  [key=0, style=solid];
m19_85 -> m19_67  [key=2, style=dotted];
m19_76 -> m19_81  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_76 -> m19_1  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m19_76 -> m19_77  [key=0, style=solid];
m19_77 -> m19_81  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_77 -> m19_1  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m19_77 -> m19_78  [key=0, style=solid];
m19_82 -> m19_16  [key=2, style=dotted];
m19_82 -> m19_83  [key=0, style=solid];
m19_82 -> m19_65  [key=2, style=dotted];
m19_83 -> m19_16  [key=2, style=dotted];
m19_83 -> m19_84  [key=0, style=solid];
m19_83 -> m19_21  [key=2, style=dotted];
m19_84 -> m19_16  [key=2, style=dotted];
m19_84 -> m19_17  [key=2, style=dotted];
m19_84 -> m19_85  [key=0, style=solid];
m19_86 -> m19_16  [key=2, style=dotted];
m19_86 -> m19_87  [key=0, style=solid];
m19_86 -> m19_21  [key=2, style=dotted];
m19_87 -> m19_75  [color=blue, key=0, style=bold];
m19_110 -> m19_69  [color=green, key=1, label=testWriter, style=dashed];
m19_111 -> m19_89  [color=green, key=1, label=testWriter, style=dashed];
m20_10 -> m20_11  [key=0, style=solid];
m20_16 -> m20_17  [color=green, key=0, style=solid];
m20_16 -> m20_31  [color=green, key=2, style=dotted];
m20_16 -> m20_41  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m20_14 -> m20_16  [color=green, key=1, label=testWriter, style=dashed];
m20_14 -> m20_41  [color=green, key=1, label=testWriter, style=dashed];
m20_14 -> m20_15  [key=0, style=solid];
m20_14 -> m20_29  [key=2, style=dotted];
m20_14 -> m20_19  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m20_15 -> m20_16  [color=green, key=0, style=solid];
m20_15 -> m20_30  [key=2, style=dotted];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_32  [key=2, style=dotted];
m20_17 -> m20_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_17 -> m20_25  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m20_17 -> m20_26  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_17  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_13 -> m20_28  [key=2, style=dotted];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_35  [key=2, style=dotted];
m20_19 -> m20_21  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m20_11 -> m20_17  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m20_11 -> m20_11  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m20_11 -> m20_12  [key=0, style=solid];
m20_12 -> m20_17  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_11  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m20_18 -> m20_19  [key=0, style=solid];
m20_18 -> m20_33  [key=2, style=dotted];
m20_18 -> m20_34  [key=2, style=dotted];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_33  [key=2, style=dotted];
m20_25 -> m20_39  [key=2, style=dotted];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_33  [key=2, style=dotted];
m20_26 -> m20_39  [key=2, style=dotted];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_36  [key=2, style=dotted];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_37  [key=2, style=dotted];
m20_21 -> m20_23  [color=darkseagreen4, key=1, label=lines, style=dashed];
m20_21 -> m20_24  [color=darkseagreen4, key=1, label=lines, style=dashed];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_33  [key=2, style=dotted];
m20_24 -> m20_38  [key=2, style=dotted];
m20_24 -> m20_39  [key=2, style=dotted];
m20_22 -> m20_33  [key=2, style=dotted];
m20_22 -> m20_39  [key=2, style=dotted];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_38  [key=2, style=dotted];
m20_23 -> m20_33  [key=2, style=dotted];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_39  [key=2, style=dotted];
m20_23 -> m20_38  [key=2, style=dotted];
m20_27 -> m20_10  [color=blue, key=0, style=bold];
m20_3 -> m20_73  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m20_3 -> m20_69  [key=0, style=solid];
m20_72 -> m20_73  [color=green, key=0, style=solid];
m20_72 -> m20_31  [color=green, key=2, style=dotted];
m20_72 -> m20_83  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m20_70 -> m20_72  [color=green, key=1, label=testWriter, style=dashed];
m20_70 -> m20_83  [color=green, key=1, label=testWriter, style=dashed];
m20_70 -> m20_71  [key=0, style=solid];
m20_70 -> m20_29  [key=2, style=dotted];
m20_70 -> m20_75  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m20_71 -> m20_72  [color=green, key=0, style=solid];
m20_71 -> m20_30  [key=2, style=dotted];
m20_73 -> m20_74  [key=0, style=solid];
m20_73 -> m20_32  [key=2, style=dotted];
m20_73 -> m20_85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_69 -> m20_70  [key=0, style=solid];
m20_69 -> m20_73  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_69 -> m20_28  [key=2, style=dotted];
m20_75 -> m20_76  [key=0, style=solid];
m20_75 -> m20_35  [key=2, style=dotted];
m20_75 -> m20_77  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_33  [key=2, style=dotted];
m20_74 -> m20_34  [key=2, style=dotted];
m20_76 -> m20_77  [key=0, style=solid];
m20_76 -> m20_36  [key=2, style=dotted];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_37  [key=2, style=dotted];
m20_77 -> m20_79  [color=darkseagreen4, key=1, label=lines, style=dashed];
m20_77 -> m20_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m20_78 -> m20_33  [key=2, style=dotted];
m20_78 -> m20_39  [key=2, style=dotted];
m20_78 -> m20_79  [key=0, style=solid];
m20_78 -> m20_38  [key=2, style=dotted];
m20_79 -> m20_33  [key=2, style=dotted];
m20_79 -> m20_39  [key=2, style=dotted];
m20_79 -> m20_80  [key=0, style=solid];
m20_79 -> m20_38  [key=2, style=dotted];
m20_80 -> m20_33  [key=2, style=dotted];
m20_80 -> m20_39  [key=2, style=dotted];
m20_80 -> m20_81  [key=0, style=solid];
m20_80 -> m20_38  [key=2, style=dotted];
m20_81 -> m20_3  [color=blue, key=0, style=bold];
m20_4 -> m20_5  [key=0, style=solid];
m20_5 -> m20_3  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid];
m20_6 -> m20_4  [color=blue, key=0, style=bold];
m20_85 -> m20_86  [key=0, style=solid];
m20_41 -> m20_42  [color=green, key=0, style=solid];
m20_40 -> m20_41  [color=green, key=0, style=solid];
m20_42 -> m20_40  [color=blue, key=0, style=bold];
m20_63 -> m20_64  [color=green, key=0, style=solid];
m20_62 -> m20_63  [color=green, key=0, style=solid];
m20_64 -> m20_62  [color=blue, key=0, style=bold];
m20_83 -> m20_84  [color=green, key=0, style=solid];
m20_82 -> m20_83  [color=green, key=0, style=solid];
m20_84 -> m20_82  [color=blue, key=0, style=bold];
m20_43 -> m20_44  [key=0, style=solid];
m20_43 -> m20_45  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_65 -> m20_66  [key=0, style=solid];
m20_65 -> m20_67  [color=darkseagreen4, key=1, label=object, style=dashed];
m20_46 -> m20_43  [color=blue, key=0, style=bold];
m20_44 -> m20_46  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m20_44 -> m20_45  [key=0, style=solid];
m20_45 -> m20_46  [key=0, style=solid];
m20_68 -> m20_65  [color=blue, key=0, style=bold];
m20_66 -> m20_68  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m20_66 -> m20_67  [key=0, style=solid];
m20_67 -> m20_68  [key=0, style=solid];
m20_86 -> m20_85  [color=blue, key=0, style=bold];
m20_47 -> m20_48  [key=0, style=solid];
m20_53 -> m20_54  [color=green, key=0, style=solid];
m20_53 -> m20_31  [color=green, key=2, style=dotted];
m20_53 -> m20_63  [color=green, key=1, label="CommandLine.ParserSettings", style=dashed];
m20_51 -> m20_53  [color=green, key=1, label=testWriter, style=dashed];
m20_51 -> m20_63  [color=green, key=1, label=testWriter, style=dashed];
m20_51 -> m20_52  [key=0, style=solid];
m20_51 -> m20_29  [key=2, style=dotted];
m20_51 -> m20_56  [color=darkseagreen4, key=1, label=testWriter, style=dashed];
m20_52 -> m20_53  [color=green, key=0, style=solid];
m20_52 -> m20_30  [key=2, style=dotted];
m20_54 -> m20_55  [key=0, style=solid];
m20_54 -> m20_32  [key=2, style=dotted];
m20_54 -> m20_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_54 -> m20_59  [color=darkseagreen4, key=1, label=invokedVerb, style=dashed];
m20_54 -> m20_60  [color=darkseagreen4, key=1, label=invokedVerbInstance, style=dashed];
m20_50 -> m20_51  [key=0, style=solid];
m20_50 -> m20_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m20_50 -> m20_28  [key=2, style=dotted];
m20_56 -> m20_57  [key=0, style=solid];
m20_56 -> m20_35  [key=2, style=dotted];
m20_56 -> m20_58  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m20_48 -> m20_54  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m20_48 -> m20_11  [color=darkorchid, key=3, label="Local variable string invokedVerb", style=bold];
m20_48 -> m20_49  [key=0, style=solid];
m20_49 -> m20_54  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m20_49 -> m20_11  [color=darkorchid, key=3, label="Local variable object invokedVerbInstance", style=bold];
m20_49 -> m20_50  [key=0, style=solid];
m20_55 -> m20_56  [key=0, style=solid];
m20_55 -> m20_33  [key=2, style=dotted];
m20_55 -> m20_34  [key=2, style=dotted];
m20_59 -> m20_60  [key=0, style=solid];
m20_59 -> m20_33  [key=2, style=dotted];
m20_59 -> m20_39  [key=2, style=dotted];
m20_60 -> m20_61  [key=0, style=solid];
m20_60 -> m20_33  [key=2, style=dotted];
m20_60 -> m20_39  [key=2, style=dotted];
m20_57 -> m20_58  [key=0, style=solid];
m20_57 -> m20_36  [key=2, style=dotted];
m20_58 -> m20_59  [key=0, style=solid];
m20_58 -> m20_37  [key=2, style=dotted];
m20_61 -> m20_47  [color=blue, key=0, style=bold];
m20_0 -> m20_1  [key=0, style=solid];
m20_1 -> m20_3  [key=2, style=dotted];
m20_1 -> m20_2  [key=0, style=solid];
m20_2 -> m20_0  [color=blue, key=0, style=bold];
m20_7 -> m20_8  [key=0, style=solid];
m20_8 -> m20_3  [key=2, style=dotted];
m20_8 -> m20_9  [key=0, style=solid];
m20_9 -> m20_7  [color=blue, key=0, style=bold];
m20_88 -> m20_41  [color=green, key=1, label=testWriter, style=dashed];
m20_89 -> m20_63  [color=green, key=1, label=testWriter, style=dashed];
m20_90 -> m20_83  [color=green, key=1, label=testWriter, style=dashed];
m20_87 -> m20_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture", style=dashed];
m20_87 -> m20_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture", style=dashed];
m20_87 -> m20_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Text.VerbsHelpTextFixture", style=dashed];
}
