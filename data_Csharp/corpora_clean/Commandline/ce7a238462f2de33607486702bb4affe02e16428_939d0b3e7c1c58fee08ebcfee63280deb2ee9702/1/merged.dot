digraph  {
m0_9 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs"];
m0_11 [label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs"];
m0_10 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="UnParserExtensions.cs"];
m0_13 [label="CommandLine.Core.OptionSpecification", span="", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="UnParserExtensions.cs"];
m0_21 [label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="38-38", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="UnParserExtensions.cs"];
m0_22 [label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="41-42", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="UnParserExtensions.cs"];
m0_23 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, typeof(IEnumerable<string>), TargetType.Sequence, string.Empty, string.Empty, new List<string>())}", span="43-44", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="UnParserExtensions.cs"];
m0_25 [label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="56-56", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="UnParserExtensions.cs"];
m0_24 [label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="47-53", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="UnParserExtensions.cs"];
m0_26 [label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="38-38", cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="UnParserExtensions.cs"];
m0_8 [label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs"];
m0_20 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="UnParserExtensions.cs"];
m0_16 [label="Entry Unk.True", span="", cluster="Unk.True", file="UnParserExtensions.cs"];
m0_0 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs"];
m0_1 [label="this.shortName = shortName", span="20-20", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs", color=green, community=0];
m0_2 [label="this.longName = longName", span="21-21", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs", color=green, community=0];
m0_4 [label="this.setName = setName", span="23-23", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs", color=green, community=0];
m0_3 [label="this.separator = separator", span="22-22", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs", color=green, community=0];
m0_5 [label="this.helpText = helpText", span="24-24", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="UnParserExtensions.cs"];
m0_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="UnParserExtensions.cs"];
m0_27 [label="Entry lambda expression", span="53-53", cluster="lambda expression", file="UnParserExtensions.cs"];
m0_18 [label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="29-29", cluster="lambda expression", file="UnParserExtensions.cs"];
m0_17 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="UnParserExtensions.cs"];
m0_19 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="UnParserExtensions.cs"];
m0_28 [label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="53-53", cluster="lambda expression", file="UnParserExtensions.cs"];
m0_29 [label="Exit lambda expression", span="53-53", cluster="lambda expression", file="UnParserExtensions.cs"];
m0_6 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="UnParserExtensions.cs"];
m0_7 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="UnParserExtensions.cs"];
m0_15 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="UnParserExtensions.cs"];
m0_14 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="UnParserExtensions.cs"];
m0_30 [label=specs, span="", file="UnParserExtensions.cs"];
m0_31 [label=specs, span="", file="UnParserExtensions.cs"];
m1_5 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="19-19", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_6 [label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJust(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="21-26", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_7 [label="var converted = values.Select(value => ChangeType(value, type, conversionCulture))", span="28-28", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_8 [label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToArray(type));", span="30-32", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_9 [label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="19-19", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_19 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="UnParserExtensionsTests.cs"];
m1_0 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_1 [label="return scalar\r\n                ? ChangeType(values.Single(), conversionType, conversionCulture)\r\n                : ChangeType(values, conversionType, conversionCulture);", span="14-16", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_2 [label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_58 [label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0", cluster="System.Enum.IsDefined(System.Type, object)", file="UnParserExtensionsTests.cs"];
m1_13 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="UnParserExtensionsTests.cs"];
m1_16 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="UnParserExtensionsTests.cs"];
m1_14 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="UnParserExtensionsTests.cs"];
m1_56 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="UnParserExtensionsTests.cs"];
m1_39 [label="Entry CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="66-66", cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="UnParserExtensionsTests.cs"];
m1_46 [label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="68-68", cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="UnParserExtensionsTests.cs"];
m1_47 [label="Exit CommandLine.Core.TypeConverter.ConvertBoolString(string)", span="66-66", cluster="CommandLine.Core.TypeConverter.ConvertBoolString(string)", file="UnParserExtensionsTests.cs"];
m1_40 [label="Entry CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", span="71-71", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_48 [label="object parsedValue", span="73-73", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_49 [label="parsedValue = Enum.Parse(conversionType, value)", span="76-76", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_52 [label="Enum.IsDefined(conversionType, parsedValue)", span="82-82", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_50 [label=ArgumentException, span="78-78", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_53 [label="return parsedValue;", span="84-84", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_51 [label="throw new FormatException();", span="80-80", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_54 [label="throw new FormatException();", span="86-86", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_55 [label="Exit CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", span="71-71", cluster="CommandLine.Core.TypeConverter.ConvertEnumString(string, System.Type)", file="UnParserExtensionsTests.cs"];
m1_12 [label="Entry T.ToMaybe<T>()", span="79-79", cluster="T.ToMaybe<T>()", file="UnParserExtensionsTests.cs"];
m1_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_21 [label="ChangeType(value, type, conversionCulture)", span="28-28", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_20 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_23 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_22 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_24 [label="a.MatchNothing()", span="30-30", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_25 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_28 [label="((Just<object>)c).Value", span="32-32", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="UnParserExtensionsTests.cs"];
m1_45 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="UnParserExtensionsTests.cs"];
m1_41 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="UnParserExtensionsTests.cs"];
m1_3 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="UnParserExtensionsTests.cs"];
m1_4 [label="Entry CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_30 [label="return Maybe.Just(\r\n                    MatchBoolString(value)\r\n                        ? ConvertBoolString(value)\r\n                        : conversionType.IsEnum\r\n                            ? ConvertEnumString(value, conversionType)\r\n                            : Convert.ChangeType(value, conversionType, conversionCulture));", span="39-44", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", color=red, community=0, file="UnParserExtensionsTests.cs"];
m1_31 [label=InvalidCastException, span="46-46", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_32 [label="return Maybe.Nothing<object>();", span="48-48", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_33 [label=FormatException, span="50-50", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_34 [label="return Maybe.Nothing<object>();", span="52-52", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_35 [label=OverflowException, span="54-54", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_36 [label="return Maybe.Nothing<object>();", span="56-56", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_37 [label="Exit CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.TypeConverter.ChangeType(string, System.Type, System.Globalization.CultureInfo)", file="UnParserExtensionsTests.cs"];
m1_42 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="UnParserExtensionsTests.cs"];
m1_15 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="UnParserExtensionsTests.cs"];
m1_10 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="UnParserExtensionsTests.cs"];
m1_17 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="UnParserExtensionsTests.cs"];
m1_26 [label="Entry Unk.MatchNothing", span="", cluster="Unk.MatchNothing", file="UnParserExtensionsTests.cs"];
m1_18 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="UnParserExtensionsTests.cs"];
m1_38 [label="Entry CommandLine.Core.TypeConverter.MatchBoolString(string)", span="60-60", cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="UnParserExtensionsTests.cs"];
m1_43 [label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                   || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="62-63", cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="UnParserExtensionsTests.cs"];
m1_44 [label="Exit CommandLine.Core.TypeConverter.MatchBoolString(string)", span="60-60", cluster="CommandLine.Core.TypeConverter.MatchBoolString(string)", file="UnParserExtensionsTests.cs"];
m1_57 [label="Entry System.FormatException.FormatException()", span="0-0", cluster="System.FormatException.FormatException()", file="UnParserExtensionsTests.cs"];
m1_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="UnParserExtensionsTests.cs"];
m1_59 [label="System.Globalization.CultureInfo", span="", file="UnParserExtensionsTests.cs"];
m1_60 [label=type, span="", file="UnParserExtensionsTests.cs"];
m0_9 -> m0_10  [key=0, style=solid];
m0_11 -> m0_9  [key=0, style=bold, color=blue];
m0_10 -> m0_0  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_12  [key=2, style=dotted];
m0_13 -> m0_1  [key=1, style=dashed, color=green, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_2  [key=1, style=dashed, color=green, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_3  [key=1, style=dashed, color=green, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_4  [key=1, style=dashed, color=green, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_13 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m0_21 -> m0_22  [key=0, style=solid];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_6  [key=2, style=dotted];
m0_22 -> m0_7  [key=2, style=dotted];
m0_22 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label=expectedTokens];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_8  [key=2, style=dotted];
m0_23 -> m0_9  [key=2, style=dotted];
m0_23 -> m0_10  [key=2, style=dotted];
m0_23 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=specs];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_15  [key=2, style=dotted];
m0_25 -> m0_16  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_11  [key=2, style=dotted];
m0_24 -> m0_6  [key=2, style=dotted];
m0_24 -> m0_7  [key=2, style=dotted];
m0_24 -> m0_12  [key=2, style=dotted];
m0_24 -> m0_13  [key=2, style=dotted];
m0_24 -> m0_14  [key=2, style=dotted];
m0_24 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_21  [key=0, style=bold, color=blue];
m0_8 -> m0_0  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_2  [key=1, style=dashed, color=green, label=string];
m0_0 -> m0_3  [key=1, style=dashed, color=green, label=char];
m0_0 -> m0_4  [key=1, style=dashed, color=green, label=string];
m0_0 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_0 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_6  [key=2, style=dotted];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label=expectedTokens];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_8  [key=2, style=dotted];
m0_2 -> m0_9  [key=2, style=dotted];
m0_2 -> m0_10  [key=2, style=dotted];
m0_2 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=specs];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_15  [key=2, style=dotted];
m0_4 -> m0_16  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_6  [key=2, style=dotted];
m0_3 -> m0_7  [key=2, style=dotted];
m0_3 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_13  [key=2, style=dotted];
m0_3 -> m0_14  [key=2, style=dotted];
m0_3 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_5 -> m0_0  [key=0, style=bold, color=blue];
m0_5 -> m0_6  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_20  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_20  [key=2, style=dotted];
m0_29 -> m0_27  [key=0, style=bold, color=blue];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_30 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label=specs];
m0_31 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label=specs];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_5 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_11  [key=2, style=dotted];
m1_6 -> m1_12  [key=2, style=dotted];
m1_6 -> m1_13  [key=2, style=dotted];
m1_6 -> m1_14  [key=2, style=dotted];
m1_6 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_6 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label=type];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_15  [key=2, style=dotted];
m1_7 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_16  [key=2, style=dotted];
m1_8 -> m1_17  [key=2, style=dotted];
m1_8 -> m1_15  [key=2, style=dotted];
m1_8 -> m1_18  [key=2, style=dotted];
m1_8 -> m1_19  [key=2, style=dotted];
m1_8 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_8 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_9 -> m1_5  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_39 -> m1_46  [key=0, style=solid];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_45  [key=2, style=dotted];
m1_47 -> m1_39  [key=0, style=bold, color=blue];
m1_40 -> m1_48  [key=0, style=solid];
m1_40 -> m1_49  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_40 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m1_48 -> m1_49  [key=0, style=solid];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_52  [key=0, style=solid];
m1_49 -> m1_56  [key=2, style=dotted];
m1_49 -> m1_53  [key=1, style=dashed, color=darkseagreen4, label=parsedValue];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_54  [key=0, style=solid];
m1_52 -> m1_58  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_53 -> m1_55  [key=0, style=solid];
m1_51 -> m1_55  [key=0, style=solid];
m1_51 -> m1_57  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_57  [key=2, style=dotted];
m1_55 -> m1_40  [key=0, style=bold, color=blue];
m1_27 -> m1_28  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_4  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_22 -> m1_20  [key=0, style=bold, color=blue];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_23  [key=0, style=bold, color=blue];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_27  [key=0, style=bold, color=blue];
m1_4 -> m1_30  [key=0, style=solid, color=red];
m1_30 -> m1_37  [key=0, style=solid, color=red];
m1_30 -> m1_38  [key=2, style=dotted, color=red];
m1_30 -> m1_39  [key=2, style=dotted, color=red];
m1_30 -> m1_40  [key=2, style=dotted, color=red];
m1_30 -> m1_41  [key=2, style=dotted, color=red];
m1_30 -> m1_42  [key=2, style=dotted, color=red];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_37  [key=0, style=solid];
m1_32 -> m1_17  [key=2, style=dotted];
m1_33 -> m1_34  [key=0, style=solid];
m1_34 -> m1_37  [key=0, style=solid];
m1_34 -> m1_17  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_17  [key=2, style=dotted];
m1_37 -> m1_4  [key=0, style=bold, color=blue];
m1_38 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=2, style=dotted];
m1_44 -> m1_38  [key=0, style=bold, color=blue];
m1_59 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_60 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=type];
}
