digraph  {
m1_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="78-78"];
m1_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m1_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53"];
m1_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m1_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options'', lines[0])", span="58-58"];
m1_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59"];
m1_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60"];
m1_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61"];
m1_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62"];
m1_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=red, community=0, file="HelpTextTests.cs", label="0: Assert.Equal( ''post-options'', lines[5])", span="63-63"];
m1_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m1_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="83-83"];
m1_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="87-87"];
m1_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="88-88"];
m1_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="89-89"];
m1_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="92-92"];
m1_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="93-93"];
m1_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].Should().Be(''                of the verbosity to '')", span="95-95"];
m1_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].Should().Be(''                test out the wrapping '')", span="96-96"];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].Should().Be(''                capabilities of the '')", span="97-97"];
m1_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].Should().Be(''                Help Text.'')", span="98-98"];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="83-83"];
m1_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="103-103"];
m1_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="107-107"];
m1_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="108-108"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="109-109"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="112-112"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''  v, verbose    Before '')", span="113-113"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''                012345678901234567890123'')", span="114-114"];
m1_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].Should().Be(''                After'')", span="115-115"];
m1_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].Should().Be(''  input-file    Before '')", span="116-116"];
m1_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].Should().Be(''                012345678901234567890123'')", span="117-117"];
m1_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[7].Should().Be(''                456789 After'')", span="118-118"];
m1_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="103-103"];
m1_174 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_149 [cluster="Unk.True", file="HelpTextTests.cs", label="Entry Unk.True", span=""];
m1_99 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188"];
m1_133 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="209-209"];
m1_134 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="212-220"];
m1_135 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="223-223"];
m1_136 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="226-226"];
m1_137 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="228-228"];
m1_138 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="229-229"];
m1_139 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''ERROR(S):'', lines[2])", span="230-230"];
m1_140 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="231-231"];
m1_141 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="232-232"];
m1_142 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="233-233"];
m1_143 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="234-234"];
m1_144 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="235-235"];
m1_145 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="236-236"];
m1_146 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="209-209"];
m1_148 [cluster="string.StartsWith(string, System.StringComparison)", file="HelpTextTests.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m1_103 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m1_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="269-269"];
m1_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="272-273"];
m1_163 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="274-281"];
m1_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="284-284"];
m1_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="287-287"];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="289-289"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="290-290"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="291-291"];
m1_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="292-292"];
m1_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="293-293"];
m1_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="294-294"];
m1_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="269-269"];
m1_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="123-123"];
m1_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="127-127"];
m1_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="128-128"];
m1_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="129-131"];
m1_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="134-134"];
m1_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].Should().Be(''Before '')", span="135-135"];
m1_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="136-136"];
m1_77 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].Should().Be(''012 After'')", span="137-137"];
m1_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].Should().Be(''Before '')", span="138-138"];
m1_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="139-139"];
m1_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].Should().Be('' After'')", span="140-140"];
m1_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="123-123"];
m1_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m1_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18"];
m1_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m1_111 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="389-389"];
m1_132 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_173 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_107 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327"];
m1_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="32-32"];
m1_35 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="68-68"];
m1_36 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="72-73"];
m1_37 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="76-76"];
m1_38 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="78-78"];
m1_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="68-68"];
m1_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="313-313"];
m1_97 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="HelpTextTests.cs", label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23"];
m1_109 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353"];
m1_41 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4"];
m1_105 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m1_112 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="166-189"];
m1_113 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="168-168"];
m1_115 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="171-171"];
m1_117 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="173-173"];
m1_119 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="175-175"];
m1_121 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="177-177"];
m1_123 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="179-179"];
m1_125 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="181-181"];
m1_129 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="185-185"];
m1_114 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="170-170"];
m1_116 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="172-172"];
m1_118 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="174-174"];
m1_120 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="176-176"];
m1_122 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MutuallyExclusiveSetError", span="178-178"];
m1_124 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="180-180"];
m1_126 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="182-182"];
m1_128 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="184-184"];
m1_130 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="187-187"];
m1_127 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="183-183"];
m1_131 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="166-189"];
m1_40 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="55-55"];
m1_100 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m1_55 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m1_56 [cluster="Unk.Be", file="HelpTextTests.cs", label="Entry Unk.Be", span=""];
m1_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="417-417"];
m1_33 [cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="333-333"];
m1_175 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m1_82 [cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4"];
m1_106 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391"];
m1_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37"];
m1_69 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31"];
m1_102 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59"];
m1_147 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="242-242"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="323-323"];
m1_104 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m1_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="9-9"];
m1_98 [cluster="CommandLine.NullInstance.NullInstance()", file="HelpTextTests.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m1_110 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpTextTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m1_101 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_32 [cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6"];
m1_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m1_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m1_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36"];
m1_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37"];
m1_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38"];
m1_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39"];
m1_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40"];
m1_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41"];
m1_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="146-146"];
m1_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="149-165"];
m1_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="166-189"];
m1_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="192-192"];
m1_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="195-195"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badtoken'', lines[0])", span="197-197"];
m1_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR x, switch'', lines[1])", span="198-198"];
m1_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR unknown'', lines[2])", span="199-199"];
m1_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR missing'', lines[3])", span="200-200"];
m1_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR z'', lines[4])", span="201-201"];
m1_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="202-202"];
m1_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="203-203"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''  ERR badverb'', lines[7])", span="204-204"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="146-146"];
m1_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="241-241"];
m1_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="244-251"];
m1_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="254-254"];
m1_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="257-257"];
m1_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="259-259"];
m1_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="260-260"];
m1_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="261-261"];
m1_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''changes to commit.'', lines[3])", span="262-262"];
m1_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="263-263"];
m1_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="264-264"];
m1_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="241-241"];
m1_34 [cluster="string[].TrimStringArray()", file="HelpTextTests.cs", label="Entry string[].TrimStringArray()", span="14-14"];
m1_108 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338"];
m1_5 [cluster="Unk.Equal", file="HelpTextTests.cs", label="Entry Unk.Equal", span=""];
m1_54 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_53 [cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22"];
m2_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m2_11 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m2_12 [cluster="Unk.Where", file="OptionMapperTests.cs", label="Entry Unk.Where", span=""];
m2_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m2_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m2_10 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m2_14 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m2_26 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m2_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m2_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22"];
m2_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=green, community=0, file="OptionMapperTests.cs", label="0: var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, -1, -1, Maybe.Nothing<object>(), typeof(bool), string.Empty, string.Empty), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29"];
m2_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36"];
m2_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(result.Value.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true))", span="39-42"];
m2_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m2_27 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="40-42"];
m2_15 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="27-27"];
m2_19 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="33-33"];
m2_23 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="35-35"];
m2_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="27-27"];
m2_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="27-27"];
m2_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="33-33"];
m2_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="33-33"];
m2_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="35-35"];
m2_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="35-35"];
m2_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value == true", span="40-42"];
m2_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="40-42"];
m2_30 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m2_18 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m2_22 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m2_13 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m2_9 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m3_0 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m3_1 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.shortName = shortName", span="18-18"];
m3_2 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.longName = longName", span="19-19"];
m3_3 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.setName = setName", span="20-20"];
m3_4 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.helpText = helpText", span="21-21"];
m3_5 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="this.metaValue = metaValue", span="22-22"];
m3_6 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m3_7 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="OptionSpecification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25"];
m3_8 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", color=green, community=0, file="OptionSpecification.cs", label="0: return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue);", span="27-37"];
m3_9 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="OptionSpecification.cs", label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25"];
m3_10 [cluster="T.ToMaybe<T>()", file="OptionSpecification.cs", label="Entry T.ToMaybe<T>()", span="82-82"];
m3_11 [file="OptionSpecification.cs", label="CommandLine.Core.OptionSpecification", span=""];
m4_4 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m4_5 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Dispose(false)", span="36-36"];
m4_6 [cluster="CommandLine.ParserSettings.~ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.~ParserSettings()", span="34-34"];
m4_0 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m4_1 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="this.caseSensitive = true", span="27-27"];
m4_2 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="this.parsingCulture = CultureInfo.InvariantCulture", span="28-28"];
m4_3 [cluster="CommandLine.ParserSettings.ParserSettings()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m4_7 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose(bool)", span="124-124"];
m4_13 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.disposed", span="126-126"];
m4_15 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label=disposing, span="131-131"];
m4_14 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="return;", span="128-128"];
m4_16 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="HelpWriter != null", span="133-133"];
m4_17 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.helpWriter.Dispose()", span="135-135"];
m4_19 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.disposed = true", span="139-139"];
m4_18 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="this.helpWriter = null", span="136-136"];
m4_20 [cluster="CommandLine.ParserSettings.Dispose(bool)", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose(bool)", span="124-124"];
m4_12 [cluster="System.GC.SuppressFinalize(object)", file="ParserSettings.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m4_21 [cluster="System.IO.TextWriter.Dispose()", file="ParserSettings.cs", label="Entry System.IO.TextWriter.Dispose()", span="0-0"];
m4_8 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="117-117"];
m4_9 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Dispose(true)", span="119-119"];
m4_10 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="GC.SuppressFinalize(this)", span="121-121"];
m4_11 [cluster="CommandLine.ParserSettings.Dispose()", file="ParserSettings.cs", label="Exit CommandLine.ParserSettings.Dispose()", span="117-117"];
m4_22 [file="ParserSettings.cs", label="CommandLine.ParserSettings", span=""];
m5_23 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m5_22 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m5_26 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m5_28 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17"];
m5_25 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type)", span="25-25"];
m5_8 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m5_9 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="0: var attrs = property.GetCustomAttributes(true)", span="69-69"];
m5_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="0: var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType)", span="73-73"];
m5_14 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=red, community=0, file="Specification.cs", label="0: return spec.WithLongName(property.Name.ToLowerInvariant());", span="76-76"];
m5_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType);", span="84-84"];
m5_10 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="0: var oa = attrs.OfType<OptionAttribute>()", span="70-70"];
m5_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="81-81"];
m5_11 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="0: oa.Count() == 1", span="71-71"];
m5_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="0: spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="74-74"];
m5_15 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="78-78"];
m5_17 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", color=green, community=0, file="Specification.cs", label="0: va.Count() == 1", span="82-82"];
m5_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="87-87"];
m5_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="67-67"];
m5_29 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m5_21 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m5_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m5_27 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string)", span="25-25"];
m5_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27"];
m5_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.tag = tag", span="29-29"];
m5_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.required = required", span="30-30"];
m5_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.min = min", span="31-31"];
m5_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.max = max", span="32-32"];
m5_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.defaultValue = defaultValue", span="33-33"];
m5_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="this.conversionType = conversionType", span="34-34"];
m5_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="27-27"];
m5_30 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m6_42 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66"];
m6_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="40-40"];
m6_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="42-42"];
m6_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="44-44"];
m6_19 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="50-50"];
m6_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="throw new ApplicationException(guard.Item2);", span="46-46"];
m6_20 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="40-40"];
m6_41 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="SpecificationExtensions.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71"];
m6_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m6_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="13-13"];
m6_3 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="15-15"];
m6_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="13-13"];
m6_4 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="11-11"];
m6_14 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m6_6 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m6_7 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="20-20"];
m6_9 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="22-22"];
m6_8 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="20-20"];
m6_10 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="18-18"];
m6_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="44-44"];
m6_24 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="44-44"];
m6_25 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="44-44"];
m6_27 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="53-53"];
m6_28 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification == null", span="55-55"];
m6_30 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="specification.ConversionType.ToDescriptor()", span="57-57"];
m6_34 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var min = specification.Min", span="62-62"];
m6_35 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="var max = specification.Max", span="63-63"];
m6_29 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="throw new ArgumentNullException(''specification'');", span="55-55"];
m6_31 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Scalar", span="59-59"];
m6_33 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="DescriptorType.Sequence", span="61-61"];
m6_32 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return  Maybe.Just(1);", span="60-60"];
m6_36 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="min >= 0 && max >= 0", span="64-64"];
m6_37 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Just(max);", span="66-66"];
m6_38 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return Maybe.Nothing<int>();", span="71-71"];
m6_39 [cluster="CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.GetMaxValueCount(CommandLine.Core.Specification)", span="53-53"];
m6_26 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m6_40 [cluster="System.Type.ToDescriptor()", file="SpecificationExtensions.cs", label="Entry System.Type.ToDescriptor()", span="22-22"];
m6_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m6_21 [cluster="Unk.Any", file="SpecificationExtensions.cs", label="Entry Unk.Any", span=""];
m6_11 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="25-25"];
m6_12 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", color=green, community=0, file="SpecificationExtensions.cs", label="0: return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.DefaultValue,\r\n                specification.ConversionType,\r\n                specification.HelpText,\r\n                specification.MetaValue);", span="27-37"];
m6_13 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="25-25"];
m6_22 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m6_43 [file="SpecificationExtensions.cs", label=guard, span=""];
m7_0 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m7_1 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="17-20"];
m7_2 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=green, community=0, file="TokenPartitionerTests.cs", label="0: var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, null, typeof(string), string.Empty, string.Empty),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, null, typeof(IEnumerable<int>), string.Empty, string.Empty)\r\n                }", span="21-25"];
m7_4 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="34-34"];
m7_3 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="28-31"];
m7_5 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m7_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m7_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string)", span="15-15"];
m7_12 [cluster="Unk.True", file="TokenPartitionerTests.cs", label="Entry Unk.True", span=""];
m7_16 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m7_11 [cluster="Unk.All", file="TokenPartitionerTests.cs", label="Entry Unk.All", span=""];
m7_21 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="34-34"];
m7_14 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)", span="30-30"];
m7_13 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="30-30"];
m7_18 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="34-34"];
m7_17 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="34-34"];
m7_15 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="30-30"];
m7_19 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="34-34"];
m7_22 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="34-34"];
m7_23 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="34-34"];
m7_24 [cluster="string.Equals(string)", file="TokenPartitionerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m7_8 [cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m7_10 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16"];
m7_25 [cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs", label="Entry Unk.SequenceEqual", span=""];
m7_20 [cluster="Unk.Any", file="TokenPartitionerTests.cs", label="Entry Unk.Any", span=""];
m7_9 [cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="26-26"];
m7_26 [file="TokenPartitionerTests.cs", label=specs, span=""];
m7_27 [file="TokenPartitionerTests.cs", label=result, span=""];
m7_28 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_3  [key=2, style=dotted];
m1_23 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_32  [key=2, style=dotted];
m1_23 -> m1_33  [key=2, style=dotted];
m1_23 -> m1_20  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_4  [key=2, style=dotted];
m1_24 -> m1_21  [key=2, style=dotted];
m1_24 -> m1_34  [key=2, style=dotted];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_30  [color=red, key=1, label=lines, style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_5  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_5  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_5  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_5  [key=2, style=dotted];
m1_29 -> m1_30  [color=red, key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_30 -> m1_31  [color=red, key=0, style=solid];
m1_30 -> m1_5  [color=red, key=2, style=dotted];
m1_31 -> m1_22  [color=blue, key=0, style=bold];
m1_42 -> m1_43  [key=0, style=solid];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_40  [key=2, style=dotted];
m1_43 -> m1_17  [key=2, style=dotted];
m1_43 -> m1_45  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_43 -> m1_46  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_44 -> m1_45  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_53  [key=2, style=dotted];
m1_45 -> m1_33  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_4  [key=2, style=dotted];
m1_46 -> m1_54  [key=2, style=dotted];
m1_46 -> m1_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_46 -> m1_49  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_46 -> m1_50  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_46 -> m1_51  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_55  [key=2, style=dotted];
m1_47 -> m1_56  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_55  [key=2, style=dotted];
m1_48 -> m1_56  [key=2, style=dotted];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_55  [key=2, style=dotted];
m1_49 -> m1_56  [key=2, style=dotted];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_55  [key=2, style=dotted];
m1_50 -> m1_56  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_55  [key=2, style=dotted];
m1_51 -> m1_56  [key=2, style=dotted];
m1_52 -> m1_42  [color=blue, key=0, style=bold];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_40  [key=2, style=dotted];
m1_58 -> m1_17  [key=2, style=dotted];
m1_58 -> m1_60  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_58 -> m1_61  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_59 -> m1_60  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_60 -> m1_69  [key=2, style=dotted];
m1_60 -> m1_33  [key=2, style=dotted];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_4  [key=2, style=dotted];
m1_61 -> m1_54  [key=2, style=dotted];
m1_61 -> m1_63  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_61 -> m1_64  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_61 -> m1_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_61 -> m1_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_61 -> m1_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_55  [key=2, style=dotted];
m1_62 -> m1_56  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_55  [key=2, style=dotted];
m1_63 -> m1_56  [key=2, style=dotted];
m1_64 -> m1_65  [key=0, style=solid];
m1_64 -> m1_55  [key=2, style=dotted];
m1_64 -> m1_56  [key=2, style=dotted];
m1_65 -> m1_66  [key=0, style=solid];
m1_65 -> m1_55  [key=2, style=dotted];
m1_65 -> m1_56  [key=2, style=dotted];
m1_66 -> m1_67  [key=0, style=solid];
m1_66 -> m1_55  [key=2, style=dotted];
m1_66 -> m1_56  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_55  [key=2, style=dotted];
m1_67 -> m1_56  [key=2, style=dotted];
m1_68 -> m1_57  [color=blue, key=0, style=bold];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_97  [key=2, style=dotted];
m1_134 -> m1_32  [key=2, style=dotted];
m1_134 -> m1_99  [key=2, style=dotted];
m1_134 -> m1_105  [key=2, style=dotted];
m1_134 -> m1_101  [key=2, style=dotted];
m1_134 -> m1_110  [key=2, style=dotted];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_147  [key=2, style=dotted];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_4  [key=2, style=dotted];
m1_136 -> m1_21  [key=2, style=dotted];
m1_136 -> m1_34  [key=2, style=dotted];
m1_136 -> m1_138  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_136 -> m1_139  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_136 -> m1_140  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_136 -> m1_141  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_136 -> m1_142  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_136 -> m1_143  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_136 -> m1_144  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_136 -> m1_145  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_137 -> m1_138  [key=0, style=solid];
m1_137 -> m1_148  [key=2, style=dotted];
m1_137 -> m1_149  [key=2, style=dotted];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_148  [key=2, style=dotted];
m1_138 -> m1_149  [key=2, style=dotted];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_5  [key=2, style=dotted];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_5  [key=2, style=dotted];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_5  [key=2, style=dotted];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_5  [key=2, style=dotted];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_5  [key=2, style=dotted];
m1_144 -> m1_145  [key=0, style=solid];
m1_144 -> m1_5  [key=2, style=dotted];
m1_145 -> m1_146  [key=0, style=solid];
m1_145 -> m1_5  [key=2, style=dotted];
m1_146 -> m1_133  [color=blue, key=0, style=bold];
m1_161 -> m1_162  [key=0, style=solid];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_173  [key=2, style=dotted];
m1_162 -> m1_174  [key=2, style=dotted];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_97  [key=2, style=dotted];
m1_163 -> m1_98  [key=2, style=dotted];
m1_163 -> m1_109  [key=2, style=dotted];
m1_163 -> m1_175  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_147  [key=2, style=dotted];
m1_165 -> m1_166  [key=0, style=solid];
m1_165 -> m1_4  [key=2, style=dotted];
m1_165 -> m1_21  [key=2, style=dotted];
m1_165 -> m1_34  [key=2, style=dotted];
m1_165 -> m1_167  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_165 -> m1_168  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_165 -> m1_169  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_165 -> m1_170  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_165 -> m1_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_148  [key=2, style=dotted];
m1_166 -> m1_149  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_148  [key=2, style=dotted];
m1_167 -> m1_149  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_5  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_5  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_5  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_5  [key=2, style=dotted];
m1_172 -> m1_161  [color=blue, key=0, style=bold];
m1_70 -> m1_71  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_40  [key=2, style=dotted];
m1_71 -> m1_73  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_71 -> m1_74  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_19  [key=2, style=dotted];
m1_73 -> m1_82  [key=2, style=dotted];
m1_73 -> m1_33  [key=2, style=dotted];
m1_73 -> m1_20  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_4  [key=2, style=dotted];
m1_74 -> m1_54  [key=2, style=dotted];
m1_74 -> m1_76  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_74 -> m1_77  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_74 -> m1_78  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_74 -> m1_79  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_74 -> m1_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_55  [key=2, style=dotted];
m1_75 -> m1_56  [key=2, style=dotted];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_55  [key=2, style=dotted];
m1_76 -> m1_56  [key=2, style=dotted];
m1_77 -> m1_78  [key=0, style=solid];
m1_77 -> m1_55  [key=2, style=dotted];
m1_77 -> m1_56  [key=2, style=dotted];
m1_78 -> m1_79  [key=0, style=solid];
m1_78 -> m1_55  [key=2, style=dotted];
m1_78 -> m1_56  [key=2, style=dotted];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_55  [key=2, style=dotted];
m1_79 -> m1_56  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_55  [key=2, style=dotted];
m1_80 -> m1_56  [key=2, style=dotted];
m1_81 -> m1_70  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_40  [key=2, style=dotted];
m1_36 -> m1_41  [key=2, style=dotted];
m1_36 -> m1_33  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_4  [key=2, style=dotted];
m1_37 -> m1_21  [key=2, style=dotted];
m1_37 -> m1_34  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_5  [key=2, style=dotted];
m1_39 -> m1_35  [color=blue, key=0, style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_115  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_112 -> m1_117  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_112 -> m1_119  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_112 -> m1_121  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_112 -> m1_123  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_112 -> m1_125  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_112 -> m1_129  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_116  [key=0, style=solid];
m1_113 -> m1_118  [key=0, style=solid];
m1_113 -> m1_120  [key=0, style=solid];
m1_113 -> m1_122  [key=0, style=solid];
m1_113 -> m1_124  [key=0, style=solid];
m1_113 -> m1_126  [key=0, style=solid];
m1_113 -> m1_128  [key=0, style=solid];
m1_113 -> m1_130  [key=0, style=solid];
m1_115 -> m1_131  [key=0, style=solid];
m1_117 -> m1_131  [key=0, style=solid];
m1_119 -> m1_131  [key=0, style=solid];
m1_121 -> m1_131  [key=0, style=solid];
m1_123 -> m1_131  [key=0, style=solid];
m1_125 -> m1_131  [key=0, style=solid];
m1_129 -> m1_131  [key=0, style=solid];
m1_114 -> m1_115  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_118 -> m1_119  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_124 -> m1_125  [key=0, style=solid];
m1_126 -> m1_127  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_130 -> m1_131  [key=0, style=solid];
m1_130 -> m1_132  [key=2, style=dotted];
m1_127 -> m1_131  [key=0, style=solid];
m1_131 -> m1_112  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_4  [key=2, style=dotted];
m1_8 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_5  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_5  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_5  [key=2, style=dotted];
m1_15 -> m1_6  [color=blue, key=0, style=bold];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_97  [key=2, style=dotted];
m1_84 -> m1_98  [key=2, style=dotted];
m1_84 -> m1_99  [key=2, style=dotted];
m1_84 -> m1_100  [key=2, style=dotted];
m1_84 -> m1_101  [key=2, style=dotted];
m1_84 -> m1_102  [key=2, style=dotted];
m1_84 -> m1_103  [key=2, style=dotted];
m1_84 -> m1_104  [key=2, style=dotted];
m1_84 -> m1_105  [key=2, style=dotted];
m1_84 -> m1_106  [key=2, style=dotted];
m1_84 -> m1_107  [key=2, style=dotted];
m1_84 -> m1_108  [key=2, style=dotted];
m1_84 -> m1_109  [key=2, style=dotted];
m1_84 -> m1_110  [key=2, style=dotted];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_113  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_115  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_117  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_119  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_121  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_123  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_125  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_129  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_85 -> m1_85  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_111  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_21  [key=2, style=dotted];
m1_87 -> m1_89  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_87 -> m1_90  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_87 -> m1_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_87 -> m1_92  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_87 -> m1_93  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_87 -> m1_94  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_87 -> m1_95  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_5  [key=2, style=dotted];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_5  [key=2, style=dotted];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_5  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_5  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_92 -> m1_5  [key=2, style=dotted];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_5  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_5  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_5  [key=2, style=dotted];
m1_96 -> m1_83  [color=blue, key=0, style=bold];
m1_150 -> m1_151  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_97  [key=2, style=dotted];
m1_151 -> m1_98  [key=2, style=dotted];
m1_151 -> m1_109  [key=2, style=dotted];
m1_151 -> m1_110  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_147  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_4  [key=2, style=dotted];
m1_153 -> m1_21  [key=2, style=dotted];
m1_153 -> m1_34  [key=2, style=dotted];
m1_153 -> m1_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_153 -> m1_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_153 -> m1_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_153 -> m1_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_153 -> m1_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_148  [key=2, style=dotted];
m1_154 -> m1_149  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_148  [key=2, style=dotted];
m1_155 -> m1_149  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_5  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_5  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_5  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_5  [key=2, style=dotted];
m1_160 -> m1_150  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [color=green, key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=tokenPartitions, style=dashed];
m2_2 -> m2_3  [color=green, key=0, style=solid];
m2_2 -> m2_7  [color=green, key=2, style=dotted];
m2_2 -> m2_8  [color=green, key=2, style=dotted];
m2_2 -> m2_9  [color=green, key=2, style=dotted];
m2_2 -> m2_10  [color=green, key=2, style=dotted];
m2_2 -> m2_11  [color=green, key=2, style=dotted];
m2_2 -> m2_15  [color=green, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_18  [key=2, style=dotted];
m2_17 -> m2_15  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_22  [key=2, style=dotted];
m2_21 -> m2_19  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_25 -> m2_23  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_22  [key=2, style=dotted];
m2_28 -> m2_30  [key=2, style=dotted];
m2_29 -> m2_27  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_2  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m3_1 -> m3_2  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_5  [key=0, style=solid];
m3_5 -> m3_6  [key=0, style=solid];
m3_6 -> m3_0  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [color=green, key=0, style=solid];
m3_8 -> m3_9  [color=green, key=0, style=solid];
m3_8 -> m3_0  [color=green, key=2, style=dotted];
m3_8 -> m3_10  [color=green, key=2, style=dotted];
m3_9 -> m3_7  [color=blue, key=0, style=bold];
m3_11 -> m3_1  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m3_11 -> m3_2  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m3_11 -> m3_3  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m3_11 -> m3_4  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m3_11 -> m3_5  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_6 -> m4_4  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_0  [color=blue, key=0, style=bold];
m4_7 -> m4_13  [key=0, style=solid];
m4_7 -> m4_15  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_7 -> m4_5  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m4_7 -> m4_9  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=0, style=solid];
m4_15 -> m4_16  [key=0, style=solid];
m4_15 -> m4_20  [key=0, style=solid];
m4_14 -> m4_20  [key=0, style=solid];
m4_16 -> m4_17  [key=0, style=solid];
m4_16 -> m4_19  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_21  [key=2, style=dotted];
m4_19 -> m4_20  [key=0, style=solid];
m4_18 -> m4_19  [key=0, style=solid];
m4_20 -> m4_7  [color=blue, key=0, style=bold];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_7  [key=2, style=dotted];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_12  [key=2, style=dotted];
m4_11 -> m4_8  [color=blue, key=0, style=bold];
m4_22 -> m4_1  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_2  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_5  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_9  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_10  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_13  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_16  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_17  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_18  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m4_22 -> m4_19  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m5_28 -> m5_0  [color=darkorchid, key=3, label="Field variable CommandLine.Core.SpecificationType tag", style=bold];
m5_25 -> m5_0  [color=darkorchid, key=3, label="Field variable System.Type conversionType", style=bold];
m5_8 -> m5_9  [color=green, key=0, style=solid];
m5_8 -> m5_12  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_8 -> m5_14  [color=red, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_8 -> m5_18  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m5_9 -> m5_10  [color=green, key=0, style=solid];
m5_9 -> m5_21  [color=green, key=2, style=dotted];
m5_9 -> m5_16  [color=green, key=1, label=attrs, style=dashed];
m5_12 -> m5_13  [color=green, key=0, style=solid];
m5_12 -> m5_24  [color=green, key=2, style=dotted];
m5_12 -> m5_25  [color=green, key=2, style=dotted];
m5_12 -> m5_14  [color=green, key=1, label=spec, style=dashed];
m5_12 -> m5_15  [color=green, key=1, label=spec, style=dashed];
m5_14 -> m5_20  [color=red, key=0, style=solid];
m5_14 -> m5_26  [color=red, key=2, style=dotted];
m5_14 -> m5_27  [color=red, key=2, style=dotted];
m5_18 -> m5_20  [key=0, style=solid];
m5_18 -> m5_24  [key=2, style=dotted];
m5_18 -> m5_28  [key=2, style=dotted];
m5_10 -> m5_11  [color=green, key=0, style=solid];
m5_10 -> m5_22  [color=green, key=2, style=dotted];
m5_10 -> m5_12  [color=green, key=1, label=oa, style=dashed];
m5_16 -> m5_17  [color=green, key=0, style=solid];
m5_16 -> m5_22  [key=2, style=dotted];
m5_16 -> m5_18  [color=darkseagreen4, key=1, label=va, style=dashed];
m5_11 -> m5_12  [color=green, key=0, style=solid];
m5_11 -> m5_16  [color=green, key=0, style=solid];
m5_11 -> m5_23  [color=green, key=2, style=dotted];
m5_13 -> m5_14  [color=green, key=0, style=solid];
m5_13 -> m5_15  [color=green, key=0, style=solid];
m5_15 -> m5_20  [key=0, style=solid];
m5_17 -> m5_18  [color=green, key=0, style=solid];
m5_17 -> m5_19  [color=green, key=0, style=solid];
m5_17 -> m5_23  [color=green, key=2, style=dotted];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_29  [key=2, style=dotted];
m5_20 -> m5_8  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m5_0 -> m5_3  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_0 -> m5_4  [color=darkseagreen4, key=1, label=int, style=dashed];
m5_0 -> m5_5  [color=darkseagreen4, key=1, label="CommandLine.Infrastructure.Maybe<object>", style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m5_1 -> m5_2  [key=0, style=solid];
m5_2 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_4 -> m5_5  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_6 -> m5_7  [key=0, style=solid];
m5_7 -> m5_0  [color=blue, key=0, style=bold];
m5_30 -> m5_1  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_30 -> m5_2  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_30 -> m5_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_30 -> m5_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_30 -> m5_5  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m5_30 -> m5_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_15 -> m6_16  [key=0, style=solid];
m6_15 -> m6_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m6_15 -> m6_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m6_15 -> m6_15  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate", style=bold];
m6_16 -> m6_17  [key=0, style=solid];
m6_16 -> m6_19  [key=0, style=solid];
m6_16 -> m6_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m6_16 -> m6_18  [color=darkseagreen4, key=1, label=guard, style=dashed];
m6_17 -> m6_18  [key=0, style=solid];
m6_17 -> m6_16  [key=0, style=solid];
m6_17 -> m6_21  [key=2, style=dotted];
m6_17 -> m6_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_19 -> m6_20  [key=0, style=solid];
m6_18 -> m6_20  [key=0, style=solid];
m6_18 -> m6_22  [key=2, style=dotted];
m6_20 -> m6_15  [color=blue, key=0, style=bold];
m6_0 -> m6_1  [key=0, style=solid];
m6_0 -> m6_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_3  [key=0, style=solid];
m6_3 -> m6_4  [key=0, style=solid];
m6_2 -> m6_4  [key=0, style=solid];
m6_2 -> m6_5  [key=2, style=dotted];
m6_4 -> m6_0  [color=blue, key=0, style=bold];
m6_6 -> m6_7  [key=0, style=solid];
m6_6 -> m6_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_7 -> m6_8  [key=0, style=solid];
m6_7 -> m6_9  [key=0, style=solid];
m6_9 -> m6_10  [key=0, style=solid];
m6_8 -> m6_10  [key=0, style=solid];
m6_8 -> m6_5  [key=2, style=dotted];
m6_10 -> m6_6  [color=blue, key=0, style=bold];
m6_23 -> m6_24  [key=0, style=solid];
m6_24 -> m6_25  [key=0, style=solid];
m6_24 -> m6_26  [key=2, style=dotted];
m6_25 -> m6_23  [color=blue, key=0, style=bold];
m6_27 -> m6_28  [key=0, style=solid];
m6_27 -> m6_30  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_27 -> m6_34  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_27 -> m6_35  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m6_28 -> m6_29  [key=0, style=solid];
m6_28 -> m6_30  [key=0, style=solid];
m6_30 -> m6_31  [key=0, style=solid];
m6_30 -> m6_33  [key=0, style=solid];
m6_30 -> m6_40  [key=2, style=dotted];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_36  [color=darkseagreen4, key=1, label=min, style=dashed];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_37  [color=darkseagreen4, key=1, label=max, style=dashed];
m6_29 -> m6_39  [key=0, style=solid];
m6_29 -> m6_5  [key=2, style=dotted];
m6_31 -> m6_32  [key=0, style=solid];
m6_33 -> m6_34  [key=0, style=solid];
m6_32 -> m6_39  [key=0, style=solid];
m6_32 -> m6_41  [key=2, style=dotted];
m6_36 -> m6_37  [key=0, style=solid];
m6_36 -> m6_38  [key=0, style=solid];
m6_37 -> m6_39  [key=0, style=solid];
m6_37 -> m6_41  [key=2, style=dotted];
m6_38 -> m6_39  [key=0, style=solid];
m6_38 -> m6_42  [key=2, style=dotted];
m6_39 -> m6_27  [color=blue, key=0, style=bold];
m6_11 -> m6_12  [color=green, key=0, style=solid];
m6_12 -> m6_13  [color=green, key=0, style=solid];
m6_12 -> m6_14  [color=green, key=2, style=dotted];
m6_13 -> m6_11  [color=blue, key=0, style=bold];
m6_43 -> m6_24  [color=darkseagreen4, key=1, label=guard, style=dashed];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_2  [color=green, key=0, style=solid];
m7_1 -> m7_6  [key=2, style=dotted];
m7_1 -> m7_4  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m7_2 -> m7_3  [color=green, key=0, style=solid];
m7_2 -> m7_7  [color=green, key=2, style=dotted];
m7_2 -> m7_14  [color=green, key=1, label=specs, style=dashed];
m7_4 -> m7_5  [key=0, style=solid];
m7_4 -> m7_11  [key=2, style=dotted];
m7_4 -> m7_12  [key=2, style=dotted];
m7_4 -> m7_17  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_3 -> m7_8  [key=2, style=dotted];
m7_3 -> m7_9  [key=2, style=dotted];
m7_3 -> m7_10  [key=2, style=dotted];
m7_3 -> m7_13  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_3 -> m7_18  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_5 -> m7_0  [color=blue, key=0, style=bold];
m7_21 -> m7_22  [key=0, style=solid];
m7_14 -> m7_15  [key=0, style=solid];
m7_14 -> m7_16  [key=2, style=dotted];
m7_13 -> m7_14  [key=0, style=solid];
m7_18 -> m7_19  [key=0, style=solid];
m7_18 -> m7_20  [key=2, style=dotted];
m7_18 -> m7_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m7_18 -> m7_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_17 -> m7_18  [key=0, style=solid];
m7_15 -> m7_13  [color=blue, key=0, style=bold];
m7_19 -> m7_17  [color=blue, key=0, style=bold];
m7_22 -> m7_23  [key=0, style=solid];
m7_22 -> m7_24  [key=2, style=dotted];
m7_22 -> m7_25  [key=2, style=dotted];
m7_22 -> m7_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_23 -> m7_21  [color=blue, key=0, style=bold];
m7_26 -> m7_14  [color=darkseagreen4, key=1, label=specs, style=dashed];
m7_27 -> m7_18  [color=darkseagreen4, key=1, label=result, style=dashed];
m7_28 -> m7_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
}
