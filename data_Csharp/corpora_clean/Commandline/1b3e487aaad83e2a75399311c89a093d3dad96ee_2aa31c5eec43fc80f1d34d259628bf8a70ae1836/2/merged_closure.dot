digraph  {
d61 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="value && !addMoveNextIfTrue", prediction=0, span="113-113"];
d60 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="111-111"];
d62 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return PresentParserState.Success;", prediction=1, span="113-113"];
d63 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", label=value, span="114-114"];
d66 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", span="111-111"];
d64 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return PresentParserState.Success | PresentParserState.MoveOnNextElement;", prediction=2, span="116-116"];
d65 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool, bool)", color=green, community=0, label="return PresentParserState.Failure;", prediction=3, span="118-118"];
d57 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", label="Entry CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="106-106"];
d58 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", label="return BooleanToParserState(value, false);", span="108-108"];
d59 [cluster="CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", label="Exit CommandLine.Internal.ArgumentParser.BooleanToParserState(bool)", span="106-106"];
m3_14 [cluster="Unk.Where", file="BaseOptionAttribute.cs", label="Entry Unk.Where", span=""];
m3_22 [cluster="Unk.Create", file="BaseOptionAttribute.cs", label="Entry Unk.Create", span=""];
m3_21 [cluster="Unk.Select", file="BaseOptionAttribute.cs", label="Entry Unk.Select", span=""];
m3_18 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="BaseOptionAttribute.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="21-21"];
m3_0 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m3_1 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var tokenList = tokens.ToList()", span="16-16"];
m3_2 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var switches = Switch.Partition(tokenList, typeLookup).ToList()", span="17-17"];
m3_4 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var scalars = Scalar.Partition(tokensExceptSwitches, typeLookup).ToList()", span="19-19"];
m3_6 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var sequences = Sequence.Partition(tokensExceptSwitchesAndScalars, typeLookup).ToList()", span="21-21"];
m3_3 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var tokensExceptSwitches = tokenList.Where(x => !switches.Contains(x)).ToList()", span="18-18"];
m3_5 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var tokensExceptSwitchesAndScalars = (tokensExceptSwitches.Where(x => !scalars.Contains(x))).ToList()", span="20-20"];
m3_7 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Where(x => !sequences.Contains(x)).ToList()", span="22-22"];
m3_8 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue()).ToList()", span="23-23"];
m3_9 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Where(x => !values.Contains(x))", span="24-24"];
m3_11 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m3_30 [cluster="Unk.Contains", file="BaseOptionAttribute.cs", label="Entry Unk.Contains", span=""];
m3_41 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Entry lambda expression", span="30-30"];
m3_24 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="!switches.Contains(x)", span="18-18"];
m3_23 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Entry lambda expression", span="18-18"];
m3_28 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="!scalars.Contains(x)", span="20-20"];
m3_27 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Entry lambda expression", span="20-20"];
m3_32 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="!sequences.Contains(x)", span="22-22"];
m3_31 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Entry lambda expression", span="22-22"];
m3_34 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Entry lambda expression", span="23-23"];
m3_39 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="!values.Contains(x)", span="24-24"];
m3_38 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Entry lambda expression", span="24-24"];
m3_25 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Exit lambda expression", span="18-18"];
m3_29 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Exit lambda expression", span="20-20"];
m3_33 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Exit lambda expression", span="22-22"];
m3_35 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="v.IsValue()", span="23-23"];
m3_36 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Exit lambda expression", span="23-23"];
m3_40 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Exit lambda expression", span="24-24"];
m3_43 [cluster="lambda expression", file="BaseOptionAttribute.cs", label="Exit lambda expression", span="30-30"];
m3_15 [cluster="Unk.ToList", file="BaseOptionAttribute.cs", label="Entry Unk.ToList", span=""];
m3_16 [cluster="Unk.Partition", file="BaseOptionAttribute.cs", label="Entry Unk.Partition", span=""];
m3_17 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="BaseOptionAttribute.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="15-15"];
m3_13 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="BaseOptionAttribute.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m3_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="BaseOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0"];
m3_37 [cluster="Unk.IsValue", file="BaseOptionAttribute.cs", label="Entry Unk.IsValue", span=""];
m3_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="BaseOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m3_20 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="BaseOptionAttribute.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="27-27"];
m3_26 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="BaseOptionAttribute.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m3_44 [file="BaseOptionAttribute.cs", label=switches, span=""];
m3_45 [file="BaseOptionAttribute.cs", label=scalars, span=""];
m3_46 [file="BaseOptionAttribute.cs", label=sequences, span=""];
m3_47 [file="BaseOptionAttribute.cs", label=values, span=""];
m4_70 [cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75"];
m4_230 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
m4_231 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Dispose(false)", span="533-533"];
m4_232 [cluster="CommandLine.CommandLineParser.~CommandLineParser()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.~CommandLineParser()", span="531-531"];
m4_139 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="245-245"];
m4_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m4_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="CommandLineParser.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m4_134 [cluster="CommandLine.ParserContext.HasNoArguments()", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.HasNoArguments()", span="60-60"];
m4_71 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156"];
m4_197 [cluster="object.HasVerbHelp()", file="CommandLineParser.cs", label="Entry object.HasVerbHelp()", span="43-43"];
m4_229 [cluster="CommandLine.CommandLineParserSettings.Dispose()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.Dispose()", span="163-163"];
m4_136 [cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94"];
m4_42 [cluster="System.IO.TextWriter.Write(string)", file="CommandLineParser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m4_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="CommandLineParser.cs", label="var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n                StringComparer.InvariantCulture)", span="32-36"];
m4_27 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="_context = new ParserContext(args, options)", prediction=4, span="129-129"];
m4_41 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100"];
m4_161 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="85-85"];
m4_78 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
m4_203 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, file="CommandLineParser.cs", label="!options.CanReceiveParserState()", prediction=5, span="484-484"];
m4_204 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="return;", span="486-486"];
m4_205 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, file="CommandLineParser.cs", label="var property = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)[0].Left", prediction=6, span="488-488"];
m4_206 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="property.GetValue(options, null) == null", span="490-490"];
m4_207 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", color=green, community=0, file="CommandLineParser.cs", label="property.SetValue(options, new ParserState(), null)", prediction=6, span="493-493"];
m4_208 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var parserState = (IParserState) property.GetValue(options, null)", span="495-495"];
m4_209 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label=errors, span="496-496"];
m4_210 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="parserState.Errors.Add(error)", span="498-498"];
m4_211 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="482-482"];
m4_19 [cluster="string.Equals(string, System.StringComparison)", file="CommandLineParser.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m4_22 [cluster="lambda expression", file="CommandLineParser.cs", label="Exit lambda expression", span="33-33"];
m4_23 [cluster="CommandLine.Core.Specification.IsOption()", file="CommandLineParser.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m4_20 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="33-33"];
m4_21 [cluster="lambda expression", file="CommandLineParser.cs", label="pt.Specification.IsOption()", span="33-33"];
m4_24 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="35-35"];
m4_173 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
m4_174 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", prediction=8, span="416-416"];
m4_175 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", prediction=9, span="417-417"];
m4_176 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", prediction=10, span="419-419"];
m4_177 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", color=green, community=0, file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", prediction=9, span="421-421"];
m4_178 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, System.IO.TextWriter)", span="414-414"];
m4_191 [cluster="System.Environment.Exit(int)", file="CommandLineParser.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m4_79 [cluster="CommandLine.Internal.Target.AddValueItemIfAllowed(string)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.Target.AddValueItemIfAllowed(string)", span="50-50"];
m4_138 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="240-240"];
m4_13 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m4_12 [cluster="CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.Assumes.NotNull<T>(T, string, string)", span="45-45"];
m4_47 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
m4_49 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var optionMap = OptionMap.Create(context.Target, _settings)", prediction=12, span="157-157"];
m4_48 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="bool hadError = false", span="156-156"];
m4_50 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="optionMap.SetDefaults()", span="158-158"];
m4_58 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var result = parser.Parse(arguments, optionMap, context.Target)", prediction=13, span="172-172"];
m4_67 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="hadError |= !optionMap.EnforceRules()", span="194-194"];
m4_51 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var target = new Target(context.Target)", prediction=14, span="159-159"];
m4_52 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="IArgumentEnumerator arguments = new StringArrayEnumerator(context.Arguments)", prediction=15, span="161-161"];
m4_64 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="target.IsValueListDefined", prediction=14, span="185-185"];
m4_65 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="!target.AddValueItemIfAllowed(argument)", prediction=14, span="187-187"];
m4_53 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="arguments.MoveNext()", span="162-162"];
m4_54 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var argument = arguments.Current", prediction=14, span="164-164"];
m4_63 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="arguments.MoveNext()", prediction=15, span="182-182"];
m4_56 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", prediction=20, span="169-169"];
m4_57 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="parser != null", prediction=21, span="170-170"];
m4_59 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="(result & PresentParserState.Failure) == PresentParserState.Failure", prediction=22, span="173-173"];
m4_62 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="(result & PresentParserState.MoveOnNextElement) == PresentParserState.MoveOnNextElement", prediction=13, span="180-180"];
m4_60 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="SetParserStateIfNeeded(context.Target, parser.PostParsingState)", prediction=20, span="175-175"];
m4_61 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="hadError = true", prediction=25, span="176-176"];
m4_66 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="hadError = true", prediction=26, span="189-189"];
m4_55 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="string.IsNullOrEmpty(argument)", prediction=27, span="165-165"];
m4_68 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="return !hadError;", span="196-196"];
m4_69 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsCore(CommandLine.ParserContext)", span="154-154"];
m4_39 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
m4_81 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLineParser.cs", label="var caseSensitive = _settings.CaseSensitive", prediction=28, span="201-201"];
m4_82 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLineParser.cs", label=args, prediction=28, span="202-202"];
m4_84 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLineParser.cs", label="ArgumentParser.CompareShort(arg, helpOption.ShortName, caseSensitive)", prediction=28, span="206-206"];
m4_87 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLineParser.cs", label="ArgumentParser.CompareLong(arg, helpOption.LongName, caseSensitive)", prediction=28, span="215-215"];
m4_86 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLineParser.cs", label="string.IsNullOrEmpty(helpOption.LongName)", prediction=28, span="211-211"];
m4_83 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="helpOption.ShortName != null", span="204-204"];
m4_89 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLineParser.cs", label="return false;", prediction=33, span="220-220"];
m4_85 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return true;", span="208-208"];
m4_88 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", color=green, community=0, file="CommandLineParser.cs", label="return true;", prediction=34, span="217-217"];
m4_90 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="199-199"];
m4_133 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38"];
m4_168 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
m4_169 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", prediction=35, span="394-394"];
m4_170 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", prediction=9, span="395-395"];
m4_171 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", color=green, community=0, file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, exitCode);", prediction=9, span="397-397"];
m4_172 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object, int)", span="392-392"];
m4_202 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(object, CommandLine.Text.HelpText)", span="248-248"];
m4_11 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m4_167 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
m4_185 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", color=green, community=0, file="CommandLineParser.cs", label="!DoParseArguments(args, options)", prediction=9, span="451-451"];
m4_186 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", color=green, community=0, file="CommandLineParser.cs", label="InvokeAutoBuildIfNeeded(options)", prediction=9, span="453-453"];
m4_188 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", color=green, community=0, file="CommandLineParser.cs", label="return true;", prediction=40, span="464-464"];
m4_187 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", color=green, community=0, file="CommandLineParser.cs", label="Environment.Exit(exitCode)", prediction=9, span="456-456"];
m4_189 [cluster="CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsStrict(string[], object, int)", span="449-449"];
m4_73 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLineParser.cs", label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="41-41"];
m4_28 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="pair != null && helpWriter != null", span="131-131"];
m4_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="return DoParseArguments(args, options);", span="99-99"];
m4_17 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m4_18 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
m4_25 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="126-126"];
m4_26 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var helpWriter = _settings.HelpWriter", span="127-127"];
m4_29 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsDispatcher(_context)", prediction=9, span="134-134"];
m4_200 [cluster="lambda expression", color=green, community=0, file="CommandLineParser.cs", label="HelpText.DefaultParsingErrorsHandler(options, current)", prediction=9, span="478-478"];
m4_30 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="string helpText", span="136-136"];
m4_76 [cluster="CommandLine.Internal.ArgumentParser.Create(string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.Create(string, bool)", span="52-52"];
m4_135 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
m4_154 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineParser.cs", label="string helpText", prediction=44, span="338-338"];
m4_155 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineParser.cs", label="verb == null", prediction=9, span="339-339"];
m4_156 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineParser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, null, out helpText)", prediction=9, span="341-341"];
m4_157 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineParser.cs", label="HelpVerbOptionAttribute.InvokeMethod(options, helpInfo, verb, out helpText)", prediction=9, span="345-345"];
m4_158 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineParser.cs", label="_settings.HelpWriter != null", prediction=9, span="347-347"];
m4_159 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", color=green, community=0, file="CommandLineParser.cs", label="_settings.HelpWriter.Write(helpText)", prediction=9, span="349-349"];
m4_160 [cluster="CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DisplayHelpVerbText(object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string)", span="336-336"];
m4_93 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
m4_94 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineParser.cs", label="found = false", prediction=50, span="234-234"];
m4_95 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineParser.cs", label="string.IsNullOrEmpty(verb)", prediction=51, span="235-235"];
m4_96 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineParser.cs", label="return target;", prediction=51, span="237-237"];
m4_97 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineParser.cs", label="var pair = ReflectionUtil.RetrieveOptionProperty<VerbOptionAttribute>(target, verb)", prediction=51, span="239-239"];
m4_98 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineParser.cs", label="found = pair != null", prediction=54, span="240-240"];
m4_99 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", color=green, community=0, file="CommandLineParser.cs", label="return found ? pair.Left.GetValue(target, null) : target;", prediction=51, span="241-241"];
m4_100 [cluster="CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.GetVerbOptionsInstanceByName(string, object, out bool)", span="232-232"];
m4_140 [cluster="CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.ToCoreInstance(CommandLine.Internal.OptionInfo)", span="48-48"];
m4_162 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
m4_163 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", prediction=56, span="374-374"];
m4_164 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", prediction=9, span="375-375"];
m4_165 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, DefaultExitCodeFail);", prediction=9, span="377-377"];
m4_166 [cluster="CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArgumentsStrict(string[], object)", span="372-372"];
m4_214 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m4_38 [cluster="CommandLine.ParserContext.ParserContext(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.ParserContext(string[], object)", span="42-42"];
m4_10 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="_settings = settings", span="73-73"];
m4_103 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
m4_104 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", color=green, community=0, file="CommandLineParser.cs", label="string.IsNullOrEmpty(verb) || (verb.Length > 0 && verb[0] == '-')", prediction=59, span="254-254"];
m4_105 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", color=green, community=0, file="CommandLineParser.cs", label="return false;", prediction=60, span="256-256"];
m4_106 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", color=green, community=0, file="CommandLineParser.cs", label="!_context.HasAtLeastOneArgument()", prediction=9, span="258-258"];
m4_108 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", color=green, community=0, file="CommandLineParser.cs", label="return string.Compare(_context.FirstArgument, verb, _settings.StringComparison) == 0;", prediction=9, span="262-262"];
m4_107 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", color=green, community=0, file="CommandLineParser.cs", label="return false;", prediction=63, span="260-260"];
m4_109 [cluster="CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.WasVerbOptionInvoked(string)", span="252-252"];
m4_46 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
m4_112 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var verbs = ReflectionUtil.RetrievePropertyList<VerbOptionAttribute>(context.Target)", prediction=64, span="267-267"];
m4_113 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var helpInfo = ReflectionUtil.RetrieveMethod<HelpVerbOptionAttribute>(context.Target)", prediction=9, span="268-268"];
m4_118 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var optionMap = OptionMap.Create(context.Target, verbs, _settings)", prediction=66, span="277-277"];
m4_114 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="context.HasNoArguments()", prediction=9, span="269-269"];
m4_115 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="helpInfo != null || _settings.HelpWriter != null", prediction=9, span="271-271"];
m4_116 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, null)", prediction=9, span="273-273"];
m4_119 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="TryParseHelpVerb(context.Arguments, context.Target, helpInfo, optionMap)", prediction=9, span="279-279"];
m4_123 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="helpInfo != null", prediction=9, span="288-288"];
m4_124 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, null)", prediction=9, span="290-290"];
m4_130 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="DisplayHelpVerbText(context.Target, helpInfo, context.FirstArgument)", prediction=9, span="303-303"];
m4_117 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="return false;", prediction=74, span="275-275"];
m4_121 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var verbOption = optionMap[context.FirstArgument]", prediction=9, span="284-284"];
m4_120 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="return false;", prediction=76, span="282-282"];
m4_122 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="verbOption == null", prediction=77, span="286-286"];
m4_126 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="verbOption.GetValue(context.Target) == null", prediction=9, span="294-294"];
m4_127 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="verbOption.CreateInstance(context.Target)", prediction=9, span="297-297"];
m4_128 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="var verbResult = DoParseArgumentsCore(context.ToCoreInstance(verbOption))", prediction=80, span="299-299"];
m4_125 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="return false;", prediction=81, span="292-292"];
m4_129 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="!verbResult", prediction=82, span="300-300"];
m4_131 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", color=green, community=0, file="CommandLineParser.cs", label="return verbResult;", prediction=80, span="305-305"];
m4_132 [cluster="CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsVerbs(CommandLine.ParserContext)", span="265-265"];
m4_110 [cluster="CommandLine.ParserContext.HasAtLeastOneArgument()", file="CommandLineParser.cs", label="Entry CommandLine.ParserContext.HasAtLeastOneArgument()", span="65-65"];
m4_7 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105"];
m4_91 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="94-94"];
m4_196 [cluster="object.HasHelp()", file="CommandLineParser.cs", label="Entry object.HasHelp()", span="38-38"];
m4_45 [cluster="object.HasVerbs()", file="CommandLineParser.cs", label="Entry object.HasVerbs()", span="33-33"];
m4_74 [cluster="CommandLine.Internal.IArgumentEnumerator.MoveNext()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.IArgumentEnumerator.MoveNext()", span="38-38"];
m4_80 [cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151"];
m4_190 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
m4_192 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", color=green, community=1, file="CommandLineParser.cs", label="_settings.HelpWriter == null ||\r\n                options.HasHelp() ||\r\n                options.HasVerbHelp()", prediction=9, span="469-471"];
m4_193 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", color=green, community=0, file="CommandLineParser.cs", label="return;", prediction=85, span="473-473"];
m4_194 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", color=green, community=0, file="CommandLineParser.cs", label="_settings.HelpWriter.Write(HelpText.AutoBuild(options,\r\n                current => HelpText.DefaultParsingErrorsHandler(options, current), options.HasVerbs()))", prediction=9, span="477-478"];
m4_195 [cluster="CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.InvokeAutoBuildIfNeeded(object)", span="467-467"];
m4_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="16-16"];
m4_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="CommandLineParser.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="19-22"];
m4_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="CommandLineParser.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(FakeOptions).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="23-29"];
m4_8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="CommandLineParser.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m4_9 [cluster="System.Collections.Generic.List<T>.List()", file="CommandLineParser.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m4_221 [cluster="System.GC.SuppressFinalize(object)", file="CommandLineParser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m4_31 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="137-137"];
m4_75 [cluster="string.IsNullOrEmpty(string)", file="CommandLineParser.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_215 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLineParser.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m4_40 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
m4_43 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", color=green, community=1, file="CommandLineParser.cs", label="return context.Target.HasVerbs() ?\r\n                DoParseArgumentsVerbs(context) :\r\n                DoParseArgumentsCore(context);", prediction=9, span="149-151"];
m4_44 [cluster="CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArgumentsDispatcher(CommandLine.ParserContext)", span="147-147"];
m4_212 [cluster="object.CanReceiveParserState()", file="CommandLineParser.cs", label="Entry object.CanReceiveParserState()", span="48-48"];
m4_220 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
m4_222 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=_disposed, span="514-514"];
m4_225 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings != null", span="520-520"];
m4_226 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings.Dispose()", span="522-522"];
m4_227 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_disposed = true", span="524-524"];
m4_223 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="return;", span="516-516"];
m4_224 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=disposing, span="518-518"];
m4_228 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.Dispose(bool)", span="512-512"];
m4_216 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose()", span="505-505"];
m4_217 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Dispose(true)", span="507-507"];
m4_218 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="GC.SuppressFinalize(this)", span="509-509"];
m4_219 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.Dispose()", span="505-505"];
m4_77 [cluster="CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.Parse(CommandLine.Internal.IArgumentEnumerator, CommandLine.Internal.OptionMap, object)", span="43-43"];
m4_92 [cluster="CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareLong(string, string, bool)", span="100-100"];
m4_137 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
m4_141 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="var helpWriter = _settings.HelpWriter", prediction=88, span="310-310"];
m4_142 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="helpInfo != null && helpWriter != null", prediction=9, span="311-311"];
m4_143 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="string.Compare(args[0], helpInfo.Right.LongName, _settings.StringComparison) == 0", prediction=9, span="313-313"];
m4_152 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="return false;", span="333-333"];
m4_144 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="var verb = args.Length > 1 ? args[1] : null", prediction=9, span="316-316"];
m4_145 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="verb != null", prediction=92, span="317-317"];
m4_146 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="var verbOption = optionMap[verb]", prediction=9, span="319-319"];
m4_150 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="DisplayHelpVerbText(options, helpInfo, verb)", prediction=9, span="329-329"];
m4_147 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="verbOption != null", prediction=95, span="320-320"];
m4_148 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="verbOption.GetValue(options) == null", prediction=9, span="322-322"];
m4_149 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="verbOption.CreateInstance(options)", prediction=9, span="325-325"];
m4_151 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", color=green, community=0, file="CommandLineParser.cs", label="return true;", prediction=98, span="330-330"];
m4_153 [cluster="CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.TryParseHelpVerb(string[], object, CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, CommandLine.Internal.OptionMap)", span="308-308"];
m4_37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m4_198 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.ParsingErrorsHandler, bool)", span="209-209"];
m4_72 [cluster="CommandLine.Internal.Target.Target(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.Target.Target(object)", span="38-38"];
m4_213 [cluster="CommandLine.ParserState.ParserState()", file="CommandLineParser.cs", label="Entry CommandLine.ParserState.ParserState()", span="39-39"];
m4_15 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", span="97-97"];
m4_111 [cluster="string.Compare(string, string, System.StringComparison)", file="CommandLineParser.cs", label="Entry string.Compare(string, string, System.StringComparison)", span="0-0"];
m4_179 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
m4_180 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", prediction=99, span="441-441"];
m4_181 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", color=green, community=0, file="CommandLineParser.cs", label="Assumes.NotNull(options, ''options'', SR.ArgumentNullException_OptionsInstanceCannotBeNull)", prediction=9, span="442-442"];
m4_182 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", color=green, community=0, file="CommandLineParser.cs", label="_settings.HelpWriter = helpWriter", prediction=101, span="444-444"];
m4_183 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", color=green, community=0, file="CommandLineParser.cs", label="return DoParseArgumentsStrict(args, options, exitCode);", prediction=9, span="446-446"];
m4_184 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter, int)", span="439-439"];
m4_101 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="CommandLineParser.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m4_34 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return true;", span="141-141"];
m4_35 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="return DoParseArgumentsDispatcher(_context);", prediction=9, span="144-144"];
m4_33 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return false;", span="139-139"];
m4_32 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="helpWriter.Write(helpText)", span="138-138"];
m4_36 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="124-124"];
m4_102 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m4_14 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Assumes.NotNull(args, ''args'', SR.ArgumentNullException_ArgsStringArrayCannotBeNull)", span="96-96"];
m4_233 [file="CommandLineParser.cs", label="CommandLine.CommandLineParser", span=""];
m4_234 [file="CommandLineParser.cs", label=object, span=""];
m7_4 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="57-57"];
m7_5 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="57-57"];
m7_0 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="48-48"];
m7_1 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="48-48"];
m7_6 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="62-62"];
m7_7 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="62-62"];
m7_2 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineParserException.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="52-52"];
m7_3 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLineParserException.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="52-52"];
m11_34 [cluster="CommandLine.Internal.Assumes.NotNull<T>(T, string)", file="HeadingInfo.cs", label="Entry CommandLine.Internal.Assumes.NotNull<T>(T, string)", span="43-43"];
m11_25 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="106-106"];
m11_26 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Assumes.NotNullOrEmpty(message, ''message'')", span="108-108"];
m11_27 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Assumes.NotNull(writer, ''writer'')", span="109-109"];
m11_28 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="var builder = new StringBuilder(_programName.Length + message.Length + 2)", span="111-111"];
m11_31 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="builder.Append(message)", span="114-114"];
m11_32 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="writer.WriteLine(builder.ToString())", span="115-115"];
m11_29 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="builder.Append(_programName)", span="112-112"];
m11_30 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="builder.Append('': '')", span="113-113"];
m11_33 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="106-106"];
m11_20 [cluster="System.Text.StringBuilder.Append(char)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m11_35 [cluster="System.IO.TextWriter.WriteLine(string)", file="HeadingInfo.cs", label="Entry System.IO.TextWriter.WriteLine(string)", span="0-0"];
m11_19 [cluster="System.Text.StringBuilder.Append(string)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m11_2 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m11_3 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Assumes.NotNullOrEmpty(programName, ''programName'')", span="64-64"];
m11_4 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="_programName = programName", span="66-66"];
m11_5 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="_version = version", span="67-67"];
m11_6 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m11_18 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m11_22 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="93-93"];
m11_23 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="return info.ToString();", span="95-95"];
m11_24 [cluster="CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.implicit operator string(CommandLine.Text.HeadingInfo)", span="93-93"];
m11_0 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m11_1 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m11_8 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.ToString()", span="74-74"];
m11_9 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="bool isVersionNull = string.IsNullOrEmpty(_version)", span="76-76"];
m11_10 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="var builder = new StringBuilder(_programName.Length +\r\n                (!isVersionNull ? _version.Length + 1 : 0))", span="77-78"];
m11_12 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="!isVersionNull", span="80-80"];
m11_11 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="builder.Append(_programName)", span="79-79"];
m11_13 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="builder.Append(' ')", span="82-82"];
m11_14 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="builder.Append(_version)", span="83-83"];
m11_15 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="return builder.ToString();", span="85-85"];
m11_16 [cluster="CommandLine.Text.HeadingInfo.ToString()", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.ToString()", span="74-74"];
m11_17 [cluster="string.IsNullOrEmpty(string)", file="HeadingInfo.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_39 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteError(string)", span="135-135"];
m11_40 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="WriteMessage(message, Console.Error)", span="137-137"];
m11_41 [cluster="CommandLine.Text.HeadingInfo.WriteError(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteError(string)", span="135-135"];
m11_21 [cluster="System.Text.StringBuilder.ToString()", file="HeadingInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_7 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="HeadingInfo.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="61-61"];
m11_36 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="124-124"];
m11_37 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="WriteMessage(message, Console.Out)", span="126-126"];
m11_38 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="HeadingInfo.cs", label="Exit CommandLine.Text.HeadingInfo.WriteMessage(string)", span="124-124"];
m11_42 [file="HeadingInfo.cs", label="CommandLine.Text.HeadingInfo", span=""];
m14_133 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m14_183 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="418-418"];
m14_186 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="425-425"];
m14_185 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="422-423"];
m14_184 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="420-420"];
m14_187 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="418-418"];
m14_162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="45-45"];
m14_160 [cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6"];
m14_201 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="115-115"];
m14_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="299-299"];
m14_154 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="313-313"];
m14_151 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="307-307"];
m14_155 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''--option-b option violates format.'')", span="315-315"];
m14_156 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''-c/--option-c option violates format.'')", span="316-316"];
m14_157 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''-a required option is missing.'')", span="317-317"];
m14_152 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var outsw = sw.ToString()", span="309-309"];
m14_153 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Console.WriteLine(outsw)", span="311-311"];
m14_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="305-305"];
m14_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var sw = new StringWriter()", span="301-301"];
m14_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var options = new RPEOptions()", span="302-302"];
m14_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="303-304"];
m14_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="299-299"];
m14_189 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="429-429"];
m14_192 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="436-436"];
m14_191 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="433-434"];
m14_190 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="431-431"];
m14_193 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="429-429"];
m14_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m14_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="195-195"];
m14_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="196-196"];
m14_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="197-197"];
m14_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="199-199"];
m14_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''  v, verbose    Before '')", span="200-200"];
m14_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''                012345678901234567890123'')", span="201-201"];
m14_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''                After'')", span="202-202"];
m14_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[5].Should().Equal(''  input-file    Before '')", span="203-203"];
m14_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''                012345678901234567890123'')", span="204-204"];
m14_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[7].Should().Equal(''                456789 After'')", span="205-205"];
m14_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="193-193"];
m14_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="367-367"];
m14_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="291-291"];
m14_144 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="local.ToString().Should().Equal('''')", span="295-295"];
m14_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="293-293"];
m14_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="291-291"];
m14_129 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="53-53"];
m14_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="342-342"];
m14_159 [cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m14_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithMetaValue.MockOptionsWithMetaValue()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithMetaValue.MockOptionsWithMetaValue()", span="56-56"];
m14_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="98-98"];
m14_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m14_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="229-229"];
m14_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="232-232"];
m14_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="231-231"];
m14_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="233-233"];
m14_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="234-234"];
m14_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="235-235"];
m14_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="237-237"];
m14_101 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="239-239"];
m14_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="241-241"];
m14_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="246-246"];
m14_103 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''Customizing Test.'')", span="242-242"];
m14_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''Pre-Options.'')", span="243-243"];
m14_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''  v, verbose       Kommentar umfassend Operationen.'')", span="244-244"];
m14_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", span="245-245"];
m14_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="229-229"];
m14_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m14_181 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="414-414"];
m14_180 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="411-412"];
m14_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="409-409"];
m14_182 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="407-407"];
m14_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="83-83"];
m14_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="83-83"];
m14_44 [cluster="Unk.Should", file="HelpTextFixture.cs", label="Entry Unk.Should", span=""];
m14_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="74-74"];
m14_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="65-65"];
m14_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m14_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="392-392"];
m14_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="389-390"];
m14_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="387-387"];
m14_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="385-385"];
m14_42 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="588-588"];
m14_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(object, int)", span="429-429"];
m14_164 [cluster="Unk.False", file="HelpTextFixture.cs", label="Entry Unk.False", span=""];
m14_165 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m14_25 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="140-140"];
m14_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="142-142"];
m14_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="140-140"];
m14_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="62-62"];
m14_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="177-177"];
m14_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="179-179"];
m14_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="180-180"];
m14_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="181-181"];
m14_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="183-183"];
m14_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''  v, verbose    This is the description'')", span="184-184"];
m14_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''                of the verbosity to '')", span="186-186"];
m14_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''                test out the wrapping '')", span="187-187"];
m14_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[5].Should().Equal(''                capabilities of the '')", span="188-188"];
m14_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''                Help Text.'')", span="189-189"];
m14_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="177-177"];
m14_131 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="70-70"];
m14_130 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="50-50"];
m14_41 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="357-357"];
m14_202 [cluster="Unk.Exactly", file="HelpTextFixture.cs", label="Entry Unk.Exactly", span=""];
m14_161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="70-70"];
m14_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m14_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m14_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="280-280"];
m14_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="282-282"];
m14_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", span="275-279"];
m14_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="286-286"];
m14_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="284-284"];
m14_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''  -s, --something    Input something here.'')", span="287-287"];
m14_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="273-273"];
m14_172 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="66-66"];
m14_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m14_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="403-403"];
m14_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="400-401"];
m14_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="398-398"];
m14_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="396-396"];
m14_109 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m14_200 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m14_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m14_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="211-211"];
m14_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="212-212"];
m14_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="213-213"];
m14_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="214-214"];
m14_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="215-215"];
m14_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="217-217"];
m14_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="219-219"];
m14_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Equal('' After'')", span="225-225"];
m14_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''Before '')", span="220-220"];
m14_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''0123456789012345678901234567890123456789'')", span="221-221"];
m14_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''012 After'')", span="222-222"];
m14_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 3].Should().Equal(''Before '')", span="223-223"];
m14_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Equal(''0123456789012345678901234567890123456789'')", span="224-224"];
m14_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="209-209"];
m14_194 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="441-441"];
m14_198 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="options.LastParserState.Errors.Should().Count.Exactly(2)", span="448-448"];
m14_195 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var options = new ComplexOptions()", span="443-443"];
m14_197 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="446-446"];
m14_196 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var writer = new StringWriter()", span="444-444"];
m14_199 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="441-441"];
m14_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m14_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="109-109"];
m14_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="110-110"];
m14_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="111-111"];
m14_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="114-114"];
m14_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", span="117-117"];
m14_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", span="118-118"];
m14_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="121-121"];
m14_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="122-122"];
m14_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="123-123"];
m14_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="124-124"];
m14_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="126-126"];
m14_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="115-115"];
m14_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="107-107"];
m14_111 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m14_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="47-47"];
m14_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="83-83"];
m14_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m14_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="151-151"];
m14_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="152-152"];
m14_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="153-153"];
m14_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="154-154"];
m14_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="155-155"];
m14_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="156-156"];
m14_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="158-158"];
m14_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="160-160"];
m14_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Equal(''This is a second post-options line.'')", span="162-162"];
m14_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Equal(''This is a first post-options line.'')", span="161-161"];
m14_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="149-149"];
m14_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m14_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", color=green, community=0, file="HelpTextFixture.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", prediction=104, span="136-136"];
m14_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="134-134"];
m14_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="92-92"];
m14_188 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="105-105"];
m14_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m14_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="var local = new HelpText(''Meta Value.'')", span="168-168"];
m14_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithMetaValue())", span="169-169"];
m14_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="171-171"];
m14_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="172-172"];
m14_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Equal(''  i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="173-173"];
m14_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.MetaValue()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MetaValue()", span="166-166"];
m14_45 [cluster="Unk.Equal", file="HelpTextFixture.cs", label="Entry Unk.Equal", span=""];
m14_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m14_163 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="94-94"];
m14_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m14_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="256-256"];
m14_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="257-257"];
m14_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="260-260"];
m14_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="253-253"];
m14_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="255-255"];
m14_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="258-258"];
m14_122 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="264-264"];
m14_121 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="262-262"];
m14_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="252-252"];
m14_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="254-254"];
m14_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year))", span="266-266"];
m14_123 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''Parameterless Constructor Test.'')", span="265-265"];
m14_125 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''Pre-Options.'')", span="267-267"];
m14_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''  s, something    Input something here.'')", span="268-268"];
m14_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="269-269"];
m14_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="250-250"];
m14_215 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m14_214 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m15_3 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="59-59"];
m15_4 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="HelpVerbOptionAttribute.cs", label="HelpText = DefaultHelpText", span="62-62"];
m15_5 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute(string)", span="59-59"];
m15_13 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="96-96"];
m15_17 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs", label="value.ReturnType == typeof(string) && value.GetParameters().Length == 1", span="98-98"];
m15_18 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs", label="return value.GetParameters()[0].ParameterType == typeof(string);", span="100-100"];
m15_19 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs", label="return false;", span="102-102"];
m15_20 [cluster="CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.HelpVerbOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="96-96"];
m15_16 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="HelpVerbOptionAttribute.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m15_14 [cluster="System.MemberAccessException.MemberAccessException(string)", file="HelpVerbOptionAttribute.cs", label="Entry System.MemberAccessException.MemberAccessException(string)", span="0-0"];
m15_15 [cluster="string.FormatInvariant(params object[])", file="HelpVerbOptionAttribute.cs", label="Entry string.FormatInvariant(params object[])", span="58-58"];
m15_6 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="83-83"];
m15_7 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs", label="text = null", span="86-86"];
m15_8 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs", label="var method = helpInfo.Left", span="87-87"];
m15_11 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs", label="text = (string) method.Invoke(target, new object[] {verb})", span="93-93"];
m15_9 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs", label="!CheckMethodSignature(method)", span="88-88"];
m15_10 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs", label="throw new MemberAccessException(\r\n                    SR.MemberAccessException_BadSignatureForHelpVerbOptionAttribute.FormatInvariant(method.Name));", span="90-91"];
m15_12 [cluster="CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.HelpVerbOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>, string, out string)", span="83-83"];
m15_0 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="48-48"];
m15_1 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="HelpVerbOptionAttribute.cs", label="HelpText = DefaultHelpText", span="51-51"];
m15_2 [cluster="CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.HelpVerbOptionAttribute.HelpVerbOptionAttribute()", span="48-48"];
m15_21 [cluster="System.Reflection.MethodBase.GetParameters()", file="HelpVerbOptionAttribute.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m15_22 [file="HelpVerbOptionAttribute.cs", label="CommandLine.HelpVerbOptionAttribute", span=""];
m20_41 [cluster="System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", file="MultiLineTextAttribute.cs", label="Entry System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", span="0-0"];
m20_25 [cluster="System.Array.ForEach<T>(T[], System.Action<T>)", file="MultiLineTextAttribute.cs", label="Entry System.Array.ForEach<T>(T[], System.Action<T>)", span="0-0"];
m20_5 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="58-58"];
m20_7 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="_line2 = line2", span="62-62"];
m20_6 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line2, ''line2'')", span="61-61"];
m20_8 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="58-58"];
m20_9 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="72-72"];
m20_11 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="_line3 = line3", span="76-76"];
m20_10 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line3, ''line3'')", span="75-75"];
m20_12 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="72-72"];
m20_13 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="87-87"];
m20_15 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="_line4 = line4", span="91-91"];
m20_14 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line4, ''line4'')", span="90-90"];
m20_16 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="87-87"];
m20_4 [cluster="CommandLine.Utils.Assumes.NotNullOrEmpty(string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Utils.Assumes.NotNullOrEmpty(string, string)", span="54-54"];
m20_42 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="141-141"];
m20_26 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="113-116"];
m20_43 [cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs", label="!string.IsNullOrEmpty(str)", prediction=105, span="141-141"];
m20_44 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="141-141"];
m20_28 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="action( line )", span="115-115"];
m20_27 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="!string.IsNullOrEmpty(line)", span="115-115"];
m20_29 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="113-116"];
m20_30 [cluster="string.IsNullOrEmpty(string)", file="MultiLineTextAttribute.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m20_32 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119"];
m20_34 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="AddToHelpText(helpText.AddPreOptionsLine)", span="125-125"];
m20_35 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="AddToHelpText(helpText.AddPostOptionsLine)", span="129-129"];
m20_33 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label=before, span="123-123"];
m20_36 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119"];
m20_17 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="103-103"];
m20_19 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="_line5 = line5", span="107-107"];
m20_18 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line5, ''line5'')", span="106-106"];
m20_20 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="103-103"];
m20_31 [cluster="System.Action<T>.Invoke(T)", file="MultiLineTextAttribute.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m20_37 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="139-139"];
m20_38 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", color=green, community=0, file="MultiLineTextAttribute.cs", label="int index = Array.FindLastIndex(value, str => !string.IsNullOrEmpty(str))", prediction=106, span="141-141"];
m20_39 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="return index + 1;", span="144-144"];
m20_40 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="139-139"];
m20_21 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110"];
m20_23 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(System.Action<string>)", color=green, community=1, file="MultiLineTextAttribute.cs", label="Array.ForEach( strArray, line =>\r\n            {\r\n                if (!string.IsNullOrEmpty(line)) { action( line ); }\r\n            })", prediction=107, span="113-116"];
m20_22 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs", label="var strArray = new string[] {_line1, _line2, _line3, _line4, _line5}", span="112-112"];
m20_24 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110"];
m20_0 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="46-46"];
m20_2 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="_line1 = line1", span="49-49"];
m20_1 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line1, ''line1'')", span="48-48"];
m20_3 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="46-46"];
m20_45 [file="MultiLineTextAttribute.cs", label="CommandLine.Text.MultilineTextAttribute", span=""];
m20_46 [file="MultiLineTextAttribute.cs", label="System.Action<string>", span=""];
m21_33 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_not_parsed()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_not_parsed()", span="49-49"];
m21_34 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_not_parsed()", file="OneCharStringEnumerator.cs", label="string expected = ''a default''", span="51-51"];
m21_35 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_not_parsed()", file="OneCharStringEnumerator.cs", label="var result = Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="52-54"];
m21_36 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_not_parsed()", file="OneCharStringEnumerator.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="56-56"];
m21_37 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_not_parsed()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_not_parsed()", span="49-49"];
m21_12 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_not_parsed_lambda_when_not_parsed()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_not_parsed_lambda_when_not_parsed()", span="28-28"];
m21_17 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_not_parsed_lambda_when_not_parsed()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_not_parsed_lambda_when_not_parsed()", span="28-28"];
m21_44 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="60-60"];
m21_45 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="var expected = Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .Return(_ => 0, _ => -1)", span="62-63"];
m21_46 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="0.ShouldBeEquivalentTo(expected)", span="65-65"];
m21_47 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="60-60"];
m21_6 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="84-84"];
m21_0 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", span="18-18"];
m21_1 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="string expected = string.Empty", span="20-20"];
m21_2 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="var result = Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })", span="21-21"];
m21_3 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="result.WithParsed(opts => expected = opts.StringValue)", span="22-22"];
m21_4 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="24-24"];
m21_5 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_parsed_lambda_when_parsed()", span="18-18"];
m21_7 [cluster="CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", file="OneCharStringEnumerator.cs", label="Entry CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", span="20-20"];
m21_22 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_parsed()", span="38-38"];
m21_23 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="string expected = string.Empty", span="40-40"];
m21_24 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="var result = Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="41-43"];
m21_25 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="45-45"];
m21_26 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_parsed()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoker_proper_lambda_when_parsed()", span="38-38"];
m21_62 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="72-72"];
m21_9 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="22-22"];
m21_10 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="expected = opts.StringValue", span="22-22"];
m21_11 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="22-22"];
m21_19 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="32-32"];
m21_21 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="32-32"];
m21_27 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="42-42"];
m21_30 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="43-43"];
m21_28 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="expected = opts.StringValue", span="42-42"];
m21_29 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="42-42"];
m21_31 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="expected = ''changed''", span="43-43"];
m21_32 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="43-43"];
m21_38 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="53-53"];
m21_41 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="54-54"];
m21_39 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="expected = opts.StringValue", span="53-53"];
m21_40 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="53-53"];
m21_42 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="expected = ''changed''", span="54-54"];
m21_43 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="54-54"];
m21_49 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="63-63"];
m21_52 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="63-63"];
m21_50 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label=0, span="63-63"];
m21_51 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="63-63"];
m21_53 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="-1", span="63-63"];
m21_54 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="63-63"];
m21_59 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Entry lambda expression", span="72-72"];
m21_60 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label=0, span="72-72"];
m21_61 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="72-72"];
m21_63 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="-1", span="72-72"];
m21_64 [cluster="lambda expression", file="OneCharStringEnumerator.cs", label="Exit lambda expression", span="72-72"];
m21_48 [cluster="CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="OneCharStringEnumerator.cs", label="Entry CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="48-48"];
m21_18 [cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="OneCharStringEnumerator.cs", label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="38-38"];
m21_55 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="69-69"];
m21_56 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="var expected = Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .Return(_ => 0, _ => -1)", span="71-72"];
m21_57 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="(-1).ShouldBeEquivalentTo(expected)", span="74-74"];
m21_58 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="OneCharStringEnumerator.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="69-69"];
m21_8 [cluster="Unk.ShouldBeEquivalentTo", file="OneCharStringEnumerator.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m22_6 [cluster="System.Text.StringBuilder.Append(string)", file="OptionGroupParser.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m22_12 [cluster="System.Text.StringBuilder.ToString()", file="OptionGroupParser.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m22_7 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="OptionGroupParser.cs", label="Entry CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="21-21"];
m22_8 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="OptionGroupParser.cs", label="builder == null", span="23-23"];
m22_10 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="OptionGroupParser.cs", label="return builder.ToString();", span="27-27"];
m22_9 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="OptionGroupParser.cs", label="return string.Empty;", span="25-25"];
m22_11 [cluster="CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="OptionGroupParser.cs", label="Exit CommandLine.Text.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="21-21"];
m22_0 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="OptionGroupParser.cs", label="Entry CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m22_1 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="OptionGroupParser.cs", label=condition, span="11-11"];
m22_2 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="OptionGroupParser.cs", label=values, span="13-13"];
m22_3 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="OptionGroupParser.cs", label="builder.Append(value)", span="15-15"];
m22_4 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="OptionGroupParser.cs", label="return builder;", span="18-18"];
m22_5 [cluster="CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="OptionGroupParser.cs", label="Exit CommandLine.Text.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m23_89 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="OptionInfo.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="57-57"];
m23_93 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.CreateInstance(object)", span="241-241"];
m23_94 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="_property.SetValue(target, Activator.CreateInstance(_property.PropertyType), null)", span="245-245"];
m23_95 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label=Exception, span="247-247"];
m23_96 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="throw new CommandLineParserException(SR.CommandLineParserException_CannotCreateInstanceForVerbCommand, e);", span="249-249"];
m23_97 [cluster="CommandLine.Internal.OptionInfo.CreateInstance(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.CreateInstance(object)", span="241-241"];
m23_81 [cluster="string.Split(params char[])", file="OptionInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m23_90 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.GetValue(object)", span="236-236"];
m23_91 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="return _property.GetValue(target, null);", span="238-238"];
m23_92 [cluster="CommandLine.Internal.OptionInfo.GetValue(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.GetValue(object)", span="236-236"];
m23_26 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="105-105"];
m23_44 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="_property.PropertyType.IsEnum", span="109-109"];
m23_45 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="111-111"];
m23_46 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="115-115"];
m23_47 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label=InvalidCastException, span="118-118"];
m23_49 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label=FormatException, span="119-119"];
m23_51 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label=ArgumentException, span="120-120"];
m23_53 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label=OverflowException, span="121-121"];
m23_55 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="return true;", span="122-122"];
m23_48 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="return false;", span="118-118"];
m23_50 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="return false;", span="119-119"];
m23_52 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="return false;", span="120-120"];
m23_54 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="return false;", span="121-121"];
m23_56 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="105-105"];
m23_40 [cluster="System.Array.CreateInstance(System.Type, int)", file="OptionInfo.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m23_43 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m23_42 [cluster="System.Array.SetValue(object, int)", file="OptionInfo.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m23_41 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="OptionInfo.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m23_16 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="72-72"];
m23_17 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="_attribute is OptionListAttribute", span="74-74"];
m23_18 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="return SetValueList(value, options);", span="76-76"];
m23_20 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="return SetNullableValue(value, options);", span="80-80"];
m23_21 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="return SetValueScalar(value, options);", span="82-82"];
m23_19 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="78-78"];
m23_22 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="72-72"];
m23_25 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="126-126"];
m23_58 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="var nc = new NullableConverter(_property.PropertyType)", span="128-128"];
m23_59 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="131-131"];
m23_60 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label=Exception, span="135-135"];
m23_62 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="return true;", span="139-139"];
m23_61 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="return false;", span="137-137"];
m23_63 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="126-126"];
m23_66 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="142-142"];
m23_67 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="_property.SetValue(options, value, null)", span="144-144"];
m23_68 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="return true;", span="145-145"];
m23_69 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="142-142"];
m23_0 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="43-43"];
m23_1 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="attribute == null", span="45-45"];
m23_3 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="property == null", span="49-49"];
m23_5 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_required = attribute.Required", span="53-53"];
m23_7 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_shortName = attribute.ShortName", span="55-55"];
m23_8 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_longName = attribute.LongName", span="56-56"];
m23_9 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="57-57"];
m23_10 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_defaultValue = attribute.DefaultValue", span="58-58"];
m23_11 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_hasDefaultValue = attribute.HasDefaultValue", span="59-59"];
m23_12 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_attribute = attribute", span="60-60"];
m23_13 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="_property = property", span="61-61"];
m23_2 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''attribute'', SR.ArgumentNullException_AttributeCannotBeNull);", span="47-47"];
m23_4 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="throw new ArgumentNullException(''property'', SR.ArgumentNullException_PropertyCannotBeNull);", span="51-51"];
m23_14 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="43-43"];
m23_82 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="OptionInfo.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m23_24 [cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="OptionInfo.cs", label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178"];
m23_98 [cluster="System.Activator.CreateInstance(System.Type)", file="OptionInfo.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m23_57 [cluster="System.Enum.Parse(System.Type, string, bool)", file="OptionInfo.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m23_39 [cluster="System.Type.GetElementType()", file="OptionInfo.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m23_64 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="OptionInfo.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m23_79 [cluster="System.Collections.Generic.List<T>.List()", file="OptionInfo.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m23_15 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="OptionInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m23_65 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="OptionInfo.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m23_83 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="160-160"];
m23_84 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label=_hasDefaultValue, span="162-162"];
m23_85 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="_property.SetValue(options, _defaultValue, null)", span="166-166"];
m23_86 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label=Exception, span="168-168"];
m23_87 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="throw new CommandLineParserException(''Bad default value.'', e);", span="170-170"];
m23_88 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="160-160"];
m23_23 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="148-148"];
m23_70 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="_property.SetValue(options, new List<string>(), null)", span="150-150"];
m23_71 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="151-151"];
m23_72 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="OptionInfo.cs", label=values, prediction=108, span="157-157"];
m23_73 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", color=green, community=0, file="OptionInfo.cs", label="fieldRef.Add(item)", prediction=109, span="159-159"];
m23_77 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="return true;", span="157-157"];
m23_78 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="148-148"];
m23_27 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="85-85"];
m23_28 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var elementType = _property.PropertyType.GetElementType()", span="87-87"];
m23_29 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="var array = Array.CreateInstance(elementType, values.Count)", span="88-88"];
m23_32 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="94-94"];
m23_33 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="_property.SetValue(options, array, null)", span="95-95"];
m23_30 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="int i = 0", span="90-90"];
m23_31 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i < array.Length", span="90-90"];
m23_36 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="i++", span="90-90"];
m23_37 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return true;", span="102-102"];
m23_34 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label=FormatException, span="97-97"];
m23_35 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="return false;", span="99-99"];
m23_38 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="OptionInfo.cs", label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="85-85"];
m23_80 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionInfo.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m23_99 [file="OptionInfo.cs", label="CommandLine.Internal.OptionInfo", span=""];
m26_4 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ParserContext.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m26_0 [cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ParserContext.cs", label="Entry CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m26_1 [cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", color=green, community=0, file="ParserContext.cs", label="return preprocessorLookup.TryHead().Return(\r\n                func =>\r\n                    {\r\n                        var errors = func(arguments);\r\n                        return errors.Any()\r\n                            ? errors\r\n                            : arguments.Preprocess(preprocessorLookup.TailNoFail());\r\n                    },\r\n                Enumerable.Empty<Error>());", prediction=110, span="17-25"];
m26_2 [cluster="CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ParserContext.cs", label="Exit CommandLine.Core.ArgumentsExtension.Preprocess(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m26_5 [cluster="Unk.Return", file="ParserContext.cs", label="Entry Unk.Return", span=""];
m26_6 [cluster="lambda expression", file="ParserContext.cs", label="Entry lambda expression", span="18-24"];
m26_7 [cluster="lambda expression", color=green, community=0, file="ParserContext.cs", label="var errors = func(arguments)", prediction=111, span="20-20"];
m26_8 [cluster="lambda expression", color=green, community=0, file="ParserContext.cs", label="return errors.Any()\r\n                            ? errors\r\n                            : arguments.Preprocess(preprocessorLookup.TailNoFail());", prediction=112, span="21-23"];
m26_9 [cluster="lambda expression", file="ParserContext.cs", label="Exit lambda expression", span="18-24"];
m26_10 [cluster="Unk.func", file="ParserContext.cs", label="Entry Unk.func", span=""];
m26_13 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ParserContext.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11"];
m26_11 [cluster="Unk.Any", file="ParserContext.cs", label="Entry Unk.Any", span=""];
m26_3 [cluster="System.Collections.Generic.IEnumerable<T>.TryHead<T>()", file="ParserContext.cs", label="Entry System.Collections.Generic.IEnumerable<T>.TryHead<T>()", span="318-318"];
m26_12 [cluster="System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", file="ParserContext.cs", label="Entry System.Collections.Generic.IEnumerable<T>.TailNoFail<T>()", span="361-361"];
m26_14 [file="ParserContext.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m26_15 [file="ParserContext.cs", label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", span=""];
m27_0 [cluster="CommandLine.ParserState.ParserState()", file="ParserState.cs", label="Entry CommandLine.ParserState.ParserState()", span="47-47"];
m27_1 [cluster="CommandLine.ParserState.ParserState()", file="ParserState.cs", label="Errors = new List<ParsingError>()", span="49-49"];
m27_2 [cluster="CommandLine.ParserState.ParserState()", file="ParserState.cs", label="Exit CommandLine.ParserState.ParserState()", span="47-47"];
m27_3 [cluster="System.Collections.Generic.List<T>.List()", file="ParserState.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m27_4 [file="ParserState.cs", label="CommandLine.ParserState", span=""];
m28_66 [cluster="Unk.SingleOrDefault", file="ParsingError.cs", label="Entry Unk.SingleOrDefault", span=""];
m28_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="ParsingError.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m28_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="ParsingError.cs", label="return new NotParsed<object>(new NullInstance(), types, errors);", span="97-97"];
m28_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="ParsingError.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m28_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m28_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="ParsingError.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m28_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="ParsingError.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m28_45 [cluster="Unk.>", file="ParsingError.cs", label="Entry Unk.>", span=""];
m28_49 [cluster="Unk.MakeNotParsed", file="ParsingError.cs", label="Entry Unk.MakeNotParsed", span=""];
m28_44 [cluster="Unk.Any", file="ParsingError.cs", label="Entry Unk.Any", span=""];
m28_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParsingError.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m28_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="ParsingError.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m28_79 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParsingError.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m28_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m28_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="68-78"];
m28_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="61-61"];
m28_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="ParsingError.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m28_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="ParsingError.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m28_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParsingError.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m28_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="ParsingError.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m28_40 [cluster="System.StringComparer.Equals(string, string)", file="ParsingError.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m28_56 [cluster="Unk.Single", file="ParsingError.cs", label="Entry Unk.Single", span=""];
m28_67 [cluster="Unk.ToMaybe", file="ParsingError.cs", label="Entry Unk.ToMaybe", span=""];
m28_41 [cluster="string.Concat(string, string)", file="ParsingError.cs", label="Entry string.Concat(string, string)", span="0-0"];
m28_73 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="90-90"];
m28_5 [cluster="lambda expression", file="ParsingError.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m28_12 [cluster="lambda expression", file="ParsingError.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m28_6 [cluster="lambda expression", file="ParsingError.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="23-23"];
m28_16 [cluster="lambda expression", file="ParsingError.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="23-23"];
m28_4 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="20-25"];
m28_11 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="22-22"];
m28_7 [cluster="lambda expression", file="ParsingError.cs", label="return explodedTokens;", span="24-24"];
m28_15 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="23-23"];
m28_8 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="20-25"];
m28_13 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="22-22"];
m28_17 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="23-23"];
m28_38 [cluster="lambda expression", file="ParsingError.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-48"];
m28_37 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="46-48"];
m28_39 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="46-48"];
m28_51 [cluster="lambda expression", file="ParsingError.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="68-68"];
m28_54 [cluster="lambda expression", file="ParsingError.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First()))\r\n                                .Item2.AutoDefault()", span="72-73"];
m28_59 [cluster="lambda expression", file="ParsingError.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="72-72"];
m28_50 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="68-68"];
m28_53 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="71-73"];
m28_61 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="78-78"];
m28_52 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="68-68"];
m28_55 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="71-73"];
m28_58 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="72-72"];
m28_60 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="72-72"];
m28_62 [cluster="lambda expression", file="ParsingError.cs", label="v.Item2", span="78-78"];
m28_63 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="78-78"];
m28_71 [cluster="lambda expression", file="ParsingError.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="87-87"];
m28_70 [cluster="lambda expression", file="ParsingError.cs", label="Entry lambda expression", span="87-87"];
m28_72 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="87-87"];
m28_74 [cluster="lambda expression", file="ParsingError.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90"];
m28_75 [cluster="lambda expression", file="ParsingError.cs", label="Exit lambda expression", span="90-90"];
m28_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ParsingError.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m28_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ParsingError.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m28_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ParsingError.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m28_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ParsingError.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="86-92"];
m28_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="ParsingError.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m28_47 [cluster="Unk.Select", file="ParsingError.cs", label="Entry Unk.Select", span=""];
m28_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="ParsingError.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m28_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m28_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="13-13"];
m28_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="ParsingError.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m28_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m28_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="arguments.Empty()", span="39-39"];
m28_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", span="41-41"];
m28_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="var firstArg = arguments.First()", span="44-44"];
m28_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="46-48"];
m28_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="var verbs = Verb.SelectFromTypes(types)", span="50-50"];
m28_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="52-58"];
m28_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ParsingError.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="32-32"];
m28_69 [cluster="Unk.Return", file="ParsingError.cs", label="Entry Unk.Return", span=""];
m28_57 [cluster="Unk.AutoDefault", file="ParsingError.cs", label="Entry Unk.AutoDefault", span=""];
m28_80 [cluster="CommandLine.NullInstance.NullInstance()", file="ParsingError.cs", label="Entry CommandLine.NullInstance.NullInstance()", span="9-9"];
m28_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="ParsingError.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m28_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ParsingError.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m28_76 [cluster="HelpVerbRequestedError.cstr", file="ParsingError.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m28_81 [file="ParsingError.cs", label="System.StringComparer", span=""];
m28_82 [file="ParsingError.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m28_83 [file="ParsingError.cs", label="System.StringComparer", span=""];
m28_84 [file="ParsingError.cs", label=firstArg, span=""];
m28_85 [file="ParsingError.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m28_86 [file="ParsingError.cs", label="System.StringComparer", span=""];
m28_87 [file="ParsingError.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m28_88 [file="ParsingError.cs", label=string, span=""];
m28_89 [file="ParsingError.cs", label="System.StringComparer", span=""];
m29_3 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="ReflectionCache.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m29_0 [cluster="CommandLine.Utils.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Entry CommandLine.Utils.ReflectionCache.ReflectionCache()", span="39-39"];
m29_1 [cluster="CommandLine.Utils.ReflectionCache.ReflectionCache()", color=green, community=0, file="ReflectionCache.cs", label="_cache = new Dictionary<Pair<Type, object>, WeakReference>()", prediction=113, span="41-41"];
m29_2 [cluster="CommandLine.Utils.ReflectionCache.ReflectionCache()", file="ReflectionCache.cs", label="Exit CommandLine.Utils.ReflectionCache.ReflectionCache()", span="39-39"];
m29_6 [file="ReflectionCache.cs", label="CommandLine.Utils.ReflectionCache", span=""];
m30_33 [cluster="System.Type.GetVerbSpecification()", file="ReflectionUtil.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m30_41 [cluster="System.Text.StringBuilder.Append(char)", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m30_118 [cluster="Unk.doubQt", file="ReflectionUtil.cs", label="Entry Unk.doubQt", span=""];
m30_143 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="52-52"];
m30_120 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="165-165"];
m30_121 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", color=green, community=0, file="ReflectionUtil.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", prediction=114, span="167-168"];
m30_122 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="165-165"];
m30_82 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="133-133"];
m30_83 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="var builder = new StringBuilder()", prediction=115, span="135-135"];
m30_84 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="spec.TargetType", prediction=115, span="136-136"];
m30_86 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="builder.Append(FormatWithQuotesIfString(value))", prediction=115, span="139-139"];
m30_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="builder.Append(format(e.Current)).Append(sep)", prediction=115, span="147-147"];
m30_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="builder.TrimEndIfMatch(' ')", prediction=115, span="148-148"];
m30_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="return builder.ToString();", prediction=115, span="151-151"];
m30_85 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="TargetType.Scalar", prediction=121, span="138-138"];
m30_87 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="TargetType.Sequence", prediction=122, span="141-141"];
m30_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="var sep = spec.SeperatorOrSpace()", prediction=115, span="142-142"];
m30_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", prediction=115, span="143-144"];
m30_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="var e = ((IEnumerable)value).GetEnumerator()", prediction=115, span="145-145"];
m30_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", color=green, community=0, file="ReflectionUtil.cs", label="e.MoveNext()", prediction=126, span="146-146"];
m30_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="133-133"];
m30_30 [cluster="System.Action<T>.Invoke(T)", file="ReflectionUtil.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m30_99 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="ReflectionUtil.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m30_40 [cluster="Unk.Any", file="ReflectionUtil.cs", label="Entry Unk.Any", span=""];
m30_36 [cluster="object.IsEmpty()", file="ReflectionUtil.cs", label="Entry object.IsEmpty()", span="203-203"];
m30_101 [cluster="System.Func<T, TResult>.Invoke(T)", file="ReflectionUtil.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m30_131 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="179-179"];
m30_132 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", color=green, community=0, file="ReflectionUtil.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && settings.NameStyleFormat == NameStyleFormat.PreferLongName", prediction=127, span="181-183"];
m30_133 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", color=green, community=0, file="ReflectionUtil.cs", label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", prediction=128, span="184-189"];
m30_134 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="179-179"];
m30_145 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="203-203"];
m30_146 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="value == null", prediction=129, span="205-205"];
m30_147 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="return true;", prediction=130, span="205-205"];
m30_148 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", prediction=131, span="206-206"];
m30_149 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="return true;", prediction=132, span="206-206"];
m30_150 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", prediction=131, span="207-207"];
m30_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="return true;", prediction=134, span="207-207"];
m30_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="value is string && ((string)value).Length == 0", prediction=131, span="208-208"];
m30_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="return true;", prediction=136, span="208-208"];
m30_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", prediction=131, span="209-209"];
m30_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="return true;", prediction=138, span="209-209"];
m30_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", color=green, community=0, file="ReflectionUtil.cs", label="return false;", prediction=139, span="210-210"];
m30_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="203-203"];
m30_38 [cluster="Unk.Where", file="ReflectionUtil.cs", label="Entry Unk.Where", span=""];
m30_136 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="42-42"];
m30_47 [cluster="Unk.TrimEndIfMatchWhen", file="ReflectionUtil.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m30_114 [cluster="string.Replace(string, string)", file="ReflectionUtil.cs", label="Entry string.Replace(string, string)", span="0-0"];
m30_35 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionUtil.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m30_67 [cluster="Unk.Contains", file="ReflectionUtil.cs", label="Entry Unk.Contains", span=""];
m30_109 [cluster="T.ToMaybe<T>()", file="ReflectionUtil.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m30_113 [cluster="string.Contains(string)", file="ReflectionUtil.cs", label="Entry string.Contains(string)", span="0-0"];
m30_31 [cluster="object.GetType()", file="ReflectionUtil.cs", label="Entry object.GetType()", span="0-0"];
m30_123 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="168-168"];
m30_4 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="59-59"];
m30_5 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="config.NameStyleFormat = NameStyleFormat.PreferLongName", prediction=140, span="59-59"];
m30_6 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="59-59"];
m30_55 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="88-89"];
m30_56 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", prediction=141, span="88-89"];
m30_57 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="88-89"];
m30_75 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", prediction=142, span="123-123"];
m30_64 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="108-108"];
m30_71 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="118-118"];
m30_79 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", prediction=142, span="127-127"];
m30_74 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="123-123"];
m30_76 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="123-123"];
m30_52 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="builder.Append(verb.Name).Append(' ')", prediction=142, span="83-83"];
m30_51 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="83-83"];
m30_53 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="83-83"];
m30_61 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="94-94"];
m30_68 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="111-111"];
m30_65 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="!shortSwitches.Contains(info)", prediction=145, span="108-108"];
m30_66 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="108-108"];
m30_78 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="127-127"];
m30_80 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="127-127"];
m30_62 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="i.Specification.Tag == SpecificationType.Option", prediction=146, span="94-94"];
m30_63 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="94-94"];
m30_69 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="i.Specification.Tag == SpecificationType.Value", prediction=147, span="111-111"];
m30_70 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="111-111"];
m30_72 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="((OptionSpecification)info.Specification).ShortName", prediction=148, span="118-118"];
m30_73 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="118-118"];
m30_104 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", prediction=115, span="144-144"];
m30_103 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="143-144"];
m30_105 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="143-144"];
m30_111 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", prediction=150, span="157-157"];
m30_116 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", prediction=150, span="161-162"];
m30_115 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="161-162"];
m30_110 [cluster="lambda expression", file="ReflectionUtil.cs", label="Entry lambda expression", span="156-157"];
m30_112 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="156-157"];
m30_117 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="161-162"];
m30_124 [cluster="lambda expression", color=green, community=0, file="ReflectionUtil.cs", label="o.Separator != '\0' ? o.Separator : ' '", prediction=152, span="168-168"];
m30_125 [cluster="lambda expression", file="ReflectionUtil.cs", label="Exit lambda expression", span="168-168"];
m30_130 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m30_50 [cluster="string.TrimEnd(params char[])", file="ReflectionUtil.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m30_102 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87"];
m30_142 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionUtil.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m30_54 [cluster="Unk.Append", file="ReflectionUtil.cs", label="Entry Unk.Append", span=""];
m30_46 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="100-100"];
m30_42 [cluster="Unk.Select", file="ReflectionUtil.cs", label="Entry Unk.Select", span=""];
m30_158 [cluster="System.Type.GetDefaultValue()", file="ReflectionUtil.cs", label="Entry System.Type.GetDefaultValue()", span="119-119"];
m30_81 [cluster="Unk.FormatValue", file="ReflectionUtil.cs", label="Entry Unk.FormatValue", span=""];
m30_37 [cluster="Unk.Memorize", file="ReflectionUtil.cs", label="Entry Unk.Memorize", span=""];
m30_77 [cluster="Unk.FormatOption", file="ReflectionUtil.cs", label="Entry Unk.FormatOption", span=""];
m30_39 [cluster="Unk.UniqueName", file="ReflectionUtil.cs", label="Entry Unk.UniqueName", span=""];
m30_144 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="ReflectionUtil.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="39-39"];
m30_119 [cluster="string.JoinTo(params string[])", file="ReflectionUtil.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m30_60 [cluster="object.NormalizeValue()", file="ReflectionUtil.cs", label="Entry object.NormalizeValue()", span="192-192"];
m30_34 [cluster="Unk.Return", file="ReflectionUtil.cs", label="Entry Unk.Return", span=""];
m30_49 [cluster="System.Text.StringBuilder.ToString()", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m30_98 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="ReflectionUtil.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="165-165"];
m30_45 [cluster="System.Text.StringBuilder.Append(string)", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m30_129 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="ReflectionUtil.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="179-179"];
m30_96 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="154-154"];
m30_106 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", color=green, community=0, file="ReflectionUtil.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", prediction=150, span="156-157"];
m30_107 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", color=green, community=0, file="ReflectionUtil.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", prediction=154, span="159-162"];
m30_108 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="154-154"];
m30_48 [cluster="Unk.ForEach", file="ReflectionUtil.cs", label="Entry Unk.ForEach", span=""];
m30_97 [cluster="System.Text.StringBuilder.Append(object)", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m30_44 [cluster="Unk.Join", file="ReflectionUtil.cs", label="Entry Unk.Join", span=""];
m30_3 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="ReflectionUtil.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="71-71"];
m30_135 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m30_32 [cluster="System.Text.StringBuilder.StringBuilder()", file="ReflectionUtil.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m30_29 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="18-18"];
m30_159 [cluster="object.Equals(object)", file="ReflectionUtil.cs", label="Entry object.Equals(object)", span="0-0"];
m30_100 [cluster="System.Collections.IEnumerator.MoveNext()", file="ReflectionUtil.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m30_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="71-71"];
m30_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="options == null", prediction=155, span="73-73"];
m30_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="throw new ArgumentNullException(''options'');", prediction=156, span="73-73"];
m30_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var settings = new UnParserSettings()", prediction=142, span="75-75"];
m30_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="configuration(settings)", prediction=158, span="76-76"];
m30_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="settings.Consumed = true", prediction=159, span="77-77"];
m30_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var type = options.GetType()", prediction=160, span="79-79"];
m30_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var builder = new StringBuilder()", prediction=142, span="80-80"];
m30_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", prediction=160, span="82-83"];
m30_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", prediction=163, span="85-92"];
m30_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", prediction=164, span="94-98"];
m30_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", prediction=142, span="111-114"];
m30_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", prediction=142, span="107-109"];
m30_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", prediction=142, span="116-119"];
m30_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", prediction=142, span="122-123"];
m30_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", prediction=145, span="100-105"];
m30_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", prediction=142, span="120-121"];
m30_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", prediction=142, span="124-125"];
m30_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", prediction=142, span="126-127"];
m30_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", color=green, community=0, file="ReflectionUtil.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", prediction=142, span="129-130"];
m30_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="71-71"];
m30_43 [cluster="Unk.ToArray", file="ReflectionUtil.cs", label="Entry Unk.ToArray", span=""];
m30_126 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="171-171"];
m30_127 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", color=green, community=0, file="ReflectionUtil.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", prediction=174, span="173-176"];
m30_128 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="171-171"];
m30_58 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="ReflectionUtil.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m30_28 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionUtil.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m30_0 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="57-57"];
m30_1 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", color=green, community=0, file="ReflectionUtil.cs", label="return parser.FormatCommandLine(options, config => config.NameStyleFormat = NameStyleFormat.PreferLongName);", prediction=175, span="59-59"];
m30_2 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="57-57"];
m30_59 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="ReflectionUtil.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m30_137 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="ReflectionUtil.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="192-192"];
m30_138 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", color=green, community=0, file="ReflectionUtil.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", prediction=176, span="194-196"];
m30_139 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", color=green, community=0, file="ReflectionUtil.cs", label="return FSharpOptionHelper.ValueOf(value);", prediction=177, span="198-198"];
m30_140 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", color=green, community=0, file="ReflectionUtil.cs", label="return value;", prediction=177, span="200-200"];
m30_141 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="ReflectionUtil.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="192-192"];
m30_161 [file="ReflectionUtil.cs", label=T, span=""];
m30_160 [file="ReflectionUtil.cs", label=builder, span=""];
m30_163 [file="ReflectionUtil.cs", label=settings, span=""];
m30_162 [file="ReflectionUtil.cs", label=shortSwitches, span=""];
m30_164 [file="ReflectionUtil.cs", label=sep, span=""];
m30_165 [file="ReflectionUtil.cs", label=doubQt, span=""];
m33_54 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="StringArrayEnumerator.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="38-38"];
m33_3 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, Maybe<CommandLine.Core.TypeDescriptor>>)", file="StringArrayEnumerator.cs", label="var scalars = Scalar.Partition(tokenList, typeLookup).ToList()", span="18-18"];
m33_29 [cluster="lambda expression", color=green, community=0, file="StringArrayEnumerator.cs", label="Exit lambda expression", prediction=179, span="22-22"];
m33_26 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="StringArrayEnumerator.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m33_28 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="!scalars.Contains(t)", span="22-22"];
m33_30 [cluster="Unk.Contains", file="StringArrayEnumerator.cs", label="Entry Unk.Contains", span=""];
m33_33 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Exit lambda expression", span="23-23"];
m33_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="StringArrayEnumerator.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m33_22 [cluster="Unk.Create", file="StringArrayEnumerator.cs", label="Entry Unk.Create", span=""];
m33_24 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="!switches.Contains(t)", span="21-21"];
m33_27 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="22-22"];
m33_20 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m33_23 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="21-21"];
m33_31 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="23-23"];
m33_25 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Exit lambda expression", span="21-21"];
m33_21 [cluster="Unk.Select", file="StringArrayEnumerator.cs", label="Entry Unk.Select", span=""];
m33_32 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="!sequences.Contains(t)", span="23-23"];
m33_34 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="24-24"];
m33_79 [cluster="string.MatchName(string, string, System.StringComparer)", file="StringArrayEnumerator.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m33_46 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12"];
m33_12 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="22-22"];
m33_72 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12"];
m33_37 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="StringArrayEnumerator.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12"];
m33_18 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m33_49 [cluster="CommandLine.Core.Specification.IsValue()", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m33_13 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Exit lambda expression", span="22-22"];
m33_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m33_45 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="StringArrayEnumerator.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m33_51 [cluster="Unk.Single", file="StringArrayEnumerator.cs", label="Entry Unk.Single", span=""];
m33_42 [cluster="System.StringComparer.Equals(string, string)", file="StringArrayEnumerator.cs", label=scalars, span=""];
m33_35 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="v.IsValue()", span="24-24"];
m33_0 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m33_1 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="StringArrayEnumerator.cs", label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", prediction=180, span="18-30"];
m33_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringArrayEnumerator.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12"];
m33_4 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, Maybe<CommandLine.Core.TypeDescriptor>>)", file="StringArrayEnumerator.cs", label="var sequences = Sequence.Partition(tokenList, typeLookup).ToList()", span="19-19"];
m33_5 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="22-22"];
m33_6 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer))", span="23-25"];
m33_7 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="return explodedTokens;", span="26-26"];
m33_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11"];
m33_40 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Exit lambda expression", span="31-31"];
m33_80 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="84-84"];
m33_38 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="31-31"];
m33_36 [cluster="object.GetType()", file="StringArrayEnumerator.cs", label="Entry object.GetType()", span="0-0"];
m33_77 [cluster="lambda expression", color=green, community=0, file="StringArrayEnumerator.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", prediction=179, span="78-78"];
m33_16 [cluster="Unk.Except", file="StringArrayEnumerator.cs", label="Entry Unk.Except", span=""];
m33_66 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="63-63"];
m33_70 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68"];
m33_74 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74"];
m33_65 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="63-63"];
m33_73 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="74-74"];
m33_11 [cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, Maybe<CommandLine.Core.TypeDescriptor>>)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
m33_15 [cluster="Unk.ToList", file="StringArrayEnumerator.cs", label="Entry Unk.ToList", span=""];
m33_17 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10"];
m33_67 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Exit lambda expression", span="63-63"];
m33_69 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="68-68"];
m33_71 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Exit lambda expression", span="68-68"];
m33_59 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Entry lambda expression", span="42-43"];
m33_75 [cluster="lambda expression", file="StringArrayEnumerator.cs", label="Exit lambda expression", span="74-74"];
m33_41 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="StringArrayEnumerator.cs", label=switches, span=""];
m33_44 [cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StringArrayEnumerator.cs", label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100"];
m33_50 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="StringArrayEnumerator.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261"];
m33_47 [cluster="CommandLine.Core.Specification.IsOption()", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m33_52 [cluster="Unk.FromOptionSpecification", file="StringArrayEnumerator.cs", label="Entry Unk.FromOptionSpecification", span=""];
m33_68 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m33_43 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="StringArrayEnumerator.cs", label=sequences, span=""];
m33_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="StringArrayEnumerator.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m33_48 [cluster="Unk.MapValues", file="StringArrayEnumerator.cs", label="Entry Unk.MapValues", span=""];
m33_111 [file="StringArrayEnumerator.cs", label="System.StringComparer", span=""];
m33_114 [file="StringArrayEnumerator.cs", label=token, span=""];
m33_109 [file="StringArrayEnumerator.cs", label="System.StringComparer", span=""];
m33_110 [file="StringArrayEnumerator.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m33_112 [file="StringArrayEnumerator.cs", label=optionSpecs, span=""];
m33_113 [file="StringArrayEnumerator.cs", label="System.Globalization.CultureInfo", span=""];
m34_17 [cluster="Unk.SingleOrDefault", file="StringExtensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m34_84 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="StringExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="128-128"];
m34_85 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="StringExtensions.cs", label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="130-134"];
m34_86 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="StringExtensions.cs", label="return type != typeof(object) ? isMutable() : true;", span="135-135"];
m34_87 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="StringExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="128-128"];
m34_94 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="StringExtensions.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m34_6 [cluster="Unk.>", file="StringExtensions.cs", label="Entry Unk.>", span=""];
m34_75 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="StringExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="119-119"];
m34_77 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="StringExtensions.cs", label="return e.Compile()();", span="125-125"];
m34_76 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="StringExtensions.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="121-124"];
m34_78 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="StringExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="119-119"];
m34_7 [cluster="Unk.Any", file="StringExtensions.cs", label="Entry Unk.Any", span=""];
m34_8 [cluster="Unk.First", file="StringExtensions.cs", label="Entry Unk.First", span=""];
m34_45 [cluster="Unk.Where", file="StringExtensions.cs", label="Entry Unk.Where", span=""];
m34_18 [cluster="Unk.ToMaybe", file="StringExtensions.cs", label="Entry Unk.ToMaybe", span=""];
m34_83 [cluster="System.Func<TResult>.Invoke()", file="StringExtensions.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m34_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="StringExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m34_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="StringExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m34_14 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="StringExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m34_15 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", color=green, community=0, file="StringExtensions.cs", label="return\r\n                (from attr in\r\n                 type.FlattenHierarchy().SelectMany(x => x.GetCustomAttributes(typeof(VerbAttribute), true))\r\n                 let vattr = (VerbAttribute)attr\r\n                 select vattr)\r\n                    .SingleOrDefault()\r\n                    .ToMaybe();", prediction=182, span="29-35"];
m34_16 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="StringExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m34_47 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="79-83"];
m34_19 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="31-31"];
m34_21 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="31-31"];
m34_20 [cluster="lambda expression", file="StringExtensions.cs", label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="31-31"];
m34_10 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="18-18"];
m34_89 [cluster="lambda expression", file="StringExtensions.cs", label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="131-131"];
m34_48 [cluster="lambda expression", file="StringExtensions.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="81-81"];
m34_12 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="18-18"];
m34_11 [cluster="lambda expression", file="StringExtensions.cs", label="x.GetProperties()", span="18-18"];
m34_88 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="130-134"];
m34_90 [cluster="lambda expression", file="StringExtensions.cs", label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="132-132"];
m34_96 [cluster="lambda expression", file="StringExtensions.cs", label="Entry lambda expression", span="131-131"];
m34_91 [cluster="lambda expression", file="StringExtensions.cs", label="return props || fields;", span="133-133"];
m34_49 [cluster="lambda expression", file="StringExtensions.cs", label="return instance;", span="82-82"];
m34_92 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="130-134"];
m34_98 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="131-131"];
m34_97 [cluster="lambda expression", file="StringExtensions.cs", label="p.CanWrite", span="131-131"];
m34_50 [cluster="lambda expression", file="StringExtensions.cs", label="Exit lambda expression", span="79-83"];
m34_9 [cluster="Unk.selector", file="StringExtensions.cs", label="Entry Unk.selector", span=""];
m34_95 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="StringExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m34_80 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="StringExtensions.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m34_79 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="StringExtensions.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m34_13 [cluster="System.Type.GetProperties()", file="StringExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m34_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="StringExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m34_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="StringExtensions.cs", label="return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="18-24"];
m34_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="StringExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m34_81 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="StringExtensions.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m34_93 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="StringExtensions.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m34_5 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="StringExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m34_46 [cluster="Unk.Aggregate", file="StringExtensions.cs", label="Entry Unk.Aggregate", span=""];
m34_42 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="StringExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="71-71"];
m34_43 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="StringExtensions.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="77-83"];
m34_44 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="StringExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="71-71"];
m34_51 [cluster="Unk.SetValue", file="StringExtensions.cs", label="Entry Unk.SetValue", span=""];
m34_3 [cluster="System.Type.FlattenHierarchy()", file="StringExtensions.cs", label="Entry System.Type.FlattenHierarchy()", span="38-38"];
m34_82 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="StringExtensions.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m34_130 [file="StringExtensions.cs", label="System.Type", span=""];
m34_128 [file="StringExtensions.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m34_129 [file="StringExtensions.cs", label=T, span=""];
m35_12 [cluster="CommandLine.Internal.OptionExtensions.IsShortOption(string)", file="SwitchExtensions.cs", label="Entry CommandLine.Internal.OptionExtensions.IsShortOption(string)", span="19-19"];
m35_13 [cluster="CommandLine.Internal.OptionExtensions.IsShortOption(string)", file="SwitchExtensions.cs", label="return value[0] == '-';", span="21-21"];
m35_14 [cluster="CommandLine.Internal.OptionExtensions.IsShortOption(string)", file="SwitchExtensions.cs", label="Exit CommandLine.Internal.OptionExtensions.IsShortOption(string)", span="19-19"];
m35_0 [cluster="CommandLine.Internal.OptionExtensions.ToOption(string)", file="SwitchExtensions.cs", label="Entry CommandLine.Internal.OptionExtensions.ToOption(string)", span="4-4"];
m35_1 [cluster="CommandLine.Internal.OptionExtensions.ToOption(string)", file="SwitchExtensions.cs", label="return string.Concat(''--'', value);", span="6-6"];
m35_2 [cluster="CommandLine.Internal.OptionExtensions.ToOption(string)", file="SwitchExtensions.cs", label="Exit CommandLine.Internal.OptionExtensions.ToOption(string)", span="4-4"];
m35_11 [cluster="string.CompareOrdinal(string, string)", file="SwitchExtensions.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m35_3 [cluster="string.Concat(string, string)", file="SwitchExtensions.cs", label="Entry string.Concat(string, string)", span="0-0"];
m35_4 [cluster="CommandLine.Internal.OptionExtensions.ToOption(char?)", file="SwitchExtensions.cs", label="Entry CommandLine.Internal.OptionExtensions.ToOption(char?)", span="9-9"];
m35_5 [cluster="CommandLine.Internal.OptionExtensions.ToOption(char?)", file="SwitchExtensions.cs", label="return string.Concat(''-'', value);", span="11-11"];
m35_6 [cluster="CommandLine.Internal.OptionExtensions.ToOption(char?)", file="SwitchExtensions.cs", label="Exit CommandLine.Internal.OptionExtensions.ToOption(char?)", span="9-9"];
m35_8 [cluster="CommandLine.Internal.OptionExtensions.IsDash(string)", file="SwitchExtensions.cs", label="Entry CommandLine.Internal.OptionExtensions.IsDash(string)", span="14-14"];
m35_9 [cluster="CommandLine.Internal.OptionExtensions.IsDash(string)", file="SwitchExtensions.cs", label="return string.CompareOrdinal(value, ''-'') == 0;", span="16-16"];
m35_10 [cluster="CommandLine.Internal.OptionExtensions.IsDash(string)", file="SwitchExtensions.cs", label="Exit CommandLine.Internal.OptionExtensions.IsDash(string)", span="14-14"];
m35_7 [cluster="string.Concat(object, object)", file="SwitchExtensions.cs", label="Entry string.Concat(object, object)", span="0-0"];
m35_15 [cluster="CommandLine.Internal.OptionExtensions.IsLongOption(string)", file="SwitchExtensions.cs", label="Entry CommandLine.Internal.OptionExtensions.IsLongOption(string)", span="24-24"];
m35_16 [cluster="CommandLine.Internal.OptionExtensions.IsLongOption(string)", file="SwitchExtensions.cs", label="return value[0] == '-' && value[1] == '-';", span="26-26"];
m35_17 [cluster="CommandLine.Internal.OptionExtensions.IsLongOption(string)", file="SwitchExtensions.cs", label="Exit CommandLine.Internal.OptionExtensions.IsLongOption(string)", span="24-24"];
m36_8 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="TargetWrapper.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="86-86"];
m36_16 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TargetWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m36_9 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="TargetWrapper.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="77-77"];
m36_0 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper()", file="TargetWrapper.cs", label="Entry CommandLine.Internal.TargetWrapper.TargetWrapper()", span="43-43"];
m36_1 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper()", file="TargetWrapper.cs", label="Exit CommandLine.Internal.TargetWrapper.TargetWrapper()", span="43-43"];
m36_10 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="Entry CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", span="57-57"];
m36_13 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="_valueList.Add(item)", span="63-63"];
m36_12 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="return false;", span="61-61"];
m36_14 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="return true;", span="64-64"];
m36_15 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="Exit CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", span="57-57"];
m36_2 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="Entry CommandLine.Internal.TargetWrapper.TargetWrapper(object)", span="45-45"];
m36_3 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="_target = target", span="47-47"];
m36_5 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label=IsValueListDefined, span="49-49"];
m36_6 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="_valueList = ValueListAttribute.GetReference(_target)", span="51-51"];
m36_7 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="Exit CommandLine.Internal.TargetWrapper.TargetWrapper(object)", span="45-45"];
m36_17 [file="TargetWrapper.cs", label="CommandLine.Internal.TargetWrapper", span=""];
m39_142 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="200-200"];
m39_143 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ValueListAttribute.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Instance,\r\n                null,\r\n                target,\r\n                new object[] { });", span="202-207"];
m39_144 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="200-200"];
m39_17 [cluster="Unk.SingleOrDefault", file="ValueListAttribute.cs", label="Entry Unk.SingleOrDefault", span=""];
m39_44 [cluster="System.Type.GetInterfaces()", file="ValueListAttribute.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m39_91 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="140-140"];
m39_92 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ValueListAttribute.cs", label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="142-146"];
m39_93 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ValueListAttribute.cs", label="return type != typeof(object) ? isMutable() : true;", span="147-147"];
m39_94 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="140-140"];
m39_101 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ValueListAttribute.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m39_126 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ValueListAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m39_6 [cluster="Unk.>", file="ValueListAttribute.cs", label="Entry Unk.>", span=""];
m39_73 [cluster="System.Action<T>.Invoke(T)", file="ValueListAttribute.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m39_82 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="131-131"];
m39_83 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ValueListAttribute.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="133-136"];
m39_84 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ValueListAttribute.cs", label="return e.Compile()();", span="137-137"];
m39_85 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="131-131"];
m39_7 [cluster="Unk.Any", file="ValueListAttribute.cs", label="Entry Unk.Any", span=""];
m39_8 [cluster="Unk.First", file="ValueListAttribute.cs", label="Entry Unk.First", span=""];
m39_131 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="175-175"];
m39_132 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ValueListAttribute.cs", label="return TypeInfo.Create(type);", span="177-177"];
m39_133 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="175-175"];
m39_43 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ValueListAttribute.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m39_26 [cluster="Unk.Create", file="ValueListAttribute.cs", label="Entry Unk.Create", span=""];
m39_52 [cluster="Unk.Where", file="ValueListAttribute.cs", label="Entry Unk.Where", span=""];
m39_59 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="98-98"];
m39_60 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="Action<Exception> fail = inner => { throw new ApplicationException(''Cannot set value to target instance.'', inner); }", span="100-100"];
m39_61 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="property.SetValue(instance, value, null)", span="104-104"];
m39_70 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="return instance;", span="123-123"];
m39_63 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="fail(e)", span="108-108"];
m39_65 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="fail(e)", span="112-112"];
m39_67 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="fail(e)", span="116-116"];
m39_69 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="fail(e)", span="120-120"];
m39_62 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label=TargetException, span="106-106"];
m39_64 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label=TargetParameterCountException, span="110-110"];
m39_66 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label=MethodAccessException, span="114-114"];
m39_68 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label=TargetInvocationException, span="118-118"];
m39_71 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="98-98"];
m39_45 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="72-72"];
m39_46 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ValueListAttribute.cs", label="return type == typeof(bool)\r\n                       ? TargetType.Switch\r\n                       : type == typeof(string)\r\n                             ? TargetType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TargetType.Sequence\r\n                                   : TargetType.Scalar;", span="74-80"];
m39_47 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="72-72"];
m39_102 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueListAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m39_77 [cluster="System.ApplicationException.ApplicationException(string, System.Exception)", file="ValueListAttribute.cs", label="Entry System.ApplicationException.ApplicationException(string, System.Exception)", span="0-0"];
m39_18 [cluster="Unk.ToMaybe", file="ValueListAttribute.cs", label="Entry Unk.ToMaybe", span=""];
m39_39 [cluster="System.Type.SafeGetInterfaces()", file="ValueListAttribute.cs", label="Entry System.Type.SafeGetInterfaces()", span="67-67"];
m39_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ValueListAttribute.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m39_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ValueListAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m39_14 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="28-28"];
m39_15 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ValueListAttribute.cs", label="return\r\n                (from attr in\r\n                 type.FlattenHierarchy().SelectMany(x => x.GetCustomAttributes(typeof(VerbAttribute), true))\r\n                 let vattr = (VerbAttribute)attr\r\n                 select vattr)\r\n                    .SingleOrDefault()\r\n                    .ToMaybe();", span="30-36"];
m39_16 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="28-28"];
m39_9 [cluster="Unk.selector", file="ValueListAttribute.cs", label="Entry Unk.selector", span=""];
m39_128 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="170-170"];
m39_10 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="19-19"];
m39_11 [cluster="lambda expression", file="ValueListAttribute.cs", label="x.GetProperties()", span="19-19"];
m39_12 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="19-19"];
m39_19 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="32-32"];
m39_20 [cluster="lambda expression", file="ValueListAttribute.cs", label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="32-32"];
m39_21 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="32-32"];
m39_27 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="42-42"];
m39_28 [cluster="lambda expression", file="ValueListAttribute.cs", label="x.GetProperties()", span="42-42"];
m39_29 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="42-42"];
m39_55 [cluster="lambda expression", file="ValueListAttribute.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="93-93"];
m39_56 [cluster="lambda expression", file="ValueListAttribute.cs", label="return instance;", span="94-94"];
m39_54 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="91-95"];
m39_57 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="91-95"];
m39_75 [cluster="lambda expression", file="ValueListAttribute.cs", label="throw new ApplicationException(''Cannot set value to target instance.'', inner);", span="100-100"];
m39_74 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="100-100"];
m39_76 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="100-100"];
m39_96 [cluster="lambda expression", file="ValueListAttribute.cs", label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="143-143"];
m39_97 [cluster="lambda expression", file="ValueListAttribute.cs", label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="144-144"];
m39_95 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="142-146"];
m39_103 [cluster="lambda expression", file="ValueListAttribute.cs", label="Entry lambda expression", span="143-143"];
m39_98 [cluster="lambda expression", file="ValueListAttribute.cs", label="return props || fields;", span="145-145"];
m39_99 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="142-146"];
m39_104 [cluster="lambda expression", file="ValueListAttribute.cs", label="p.CanWrite", span="143-143"];
m39_105 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="143-143"];
m39_129 [cluster="lambda expression", file="ValueListAttribute.cs", label="pi.PropertyType", span="170-170"];
m39_130 [cluster="lambda expression", file="ValueListAttribute.cs", label="Exit lambda expression", span="170-170"];
m39_72 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ValueListAttribute.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m39_81 [cluster="System.Array.CreateInstance(System.Type, int)", file="ValueListAttribute.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m39_87 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ValueListAttribute.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m39_86 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="ValueListAttribute.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m39_90 [cluster="System.Func<TResult>.Invoke()", file="ValueListAttribute.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m39_127 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ValueListAttribute.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m39_48 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ValueListAttribute.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m39_106 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="150-150"];
m39_107 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ValueListAttribute.cs", label="type == typeof(string)", span="152-152"];
m39_109 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ValueListAttribute.cs", label="type.IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="156-156"];
m39_110 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ValueListAttribute.cs", label="return type.GetGenericArguments()[0].CreateEmptyArray();", span="158-158"];
m39_111 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ValueListAttribute.cs", label="return type.GetDefaultValue();", span="160-160"];
m39_108 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ValueListAttribute.cs", label="return string.Empty;", span="154-154"];
m39_112 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="150-150"];
m39_134 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m39_13 [cluster="System.Type.GetProperties()", file="ValueListAttribute.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m39_23 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="39-39"];
m39_24 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ValueListAttribute.cs", label="return\r\n                (from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                    let attrs = pi.GetCustomAttributes(true)\r\n                    where attrs.OfType<UsageAttribute>().Any()\r\n                    select Tuple.Create(pi, (UsageAttribute)attrs.First()))\r\n                        .SingleOrDefault()\r\n                        .ToMaybe();", span="41-47"];
m39_25 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="39-39"];
m39_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m39_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ValueListAttribute.cs", label="return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="19-25"];
m39_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m39_88 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ValueListAttribute.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m39_113 [cluster="System.Type.GetGenericTypeDefinition()", file="ValueListAttribute.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m39_117 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="163-163"];
m39_118 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ValueListAttribute.cs", label="type.IsMutable()", span="165-165"];
m39_119 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ValueListAttribute.cs", label="return Activator.CreateInstance(type);", span="167-167"];
m39_120 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ValueListAttribute.cs", label="var ctorTypes = type.GetSpecifications(pi => pi.PropertyType).ToArray()", span="170-170"];
m39_121 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ValueListAttribute.cs", label="return ReflectionHelper.CreateDefaultImmutableInstance(type, ctorTypes);", span="172-172"];
m39_122 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="163-163"];
m39_139 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="190-190"];
m39_140 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ValueListAttribute.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { });", span="192-197"];
m39_141 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="190-190"];
m39_40 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="67-67"];
m39_41 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ValueListAttribute.cs", label="return type == null ? Enumerable.Empty<Type>() : type.GetInterfaces();", span="69-69"];
m39_42 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="67-67"];
m39_115 [cluster="System.Type.CreateEmptyArray()", file="ValueListAttribute.cs", label="Entry System.Type.CreateEmptyArray()", span="126-126"];
m39_116 [cluster="System.Type.GetDefaultValue()", file="ValueListAttribute.cs", label="Entry System.Type.GetDefaultValue()", span="131-131"];
m39_114 [cluster="System.Type.GetGenericArguments()", file="ValueListAttribute.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m39_125 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ValueListAttribute.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m39_124 [cluster="System.Activator.CreateInstance(System.Type)", file="ValueListAttribute.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m39_100 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ValueListAttribute.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m39_5 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ValueListAttribute.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m39_123 [cluster="System.Type.IsMutable()", file="ValueListAttribute.cs", label="Entry System.Type.IsMutable()", span="140-140"];
m39_53 [cluster="Unk.Aggregate", file="ValueListAttribute.cs", label="Entry Unk.Aggregate", span=""];
m39_78 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="126-126"];
m39_79 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ValueListAttribute.cs", label="return Array.CreateInstance(type, 0);", span="128-128"];
m39_80 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="126-126"];
m39_49 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="83-83"];
m39_50 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ValueListAttribute.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="89-95"];
m39_51 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="83-83"];
m39_30 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="50-50"];
m39_31 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="type == null", span="52-52"];
m39_32 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="yield break;", span="54-54"];
m39_33 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="yield return type;", span="56-56"];
m39_35 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="yield return @interface;", span="59-59"];
m39_34 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="type.SafeGetInterfaces()", span="57-57"];
m39_36 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="FlattenHierarchy(type.BaseType)", span="61-61"];
m39_38 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="50-50"];
m39_58 [cluster="Unk.SetValue", file="ValueListAttribute.cs", label="Entry Unk.SetValue", span=""];
m39_138 [cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", file="ValueListAttribute.cs", label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0"];
m39_135 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ValueListAttribute.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="180-180"];
m39_136 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ValueListAttribute.cs", label="return type.InvokeMember(\r\n                name,\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                args);", span="182-187"];
m39_137 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ValueListAttribute.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="180-180"];
m39_3 [cluster="System.Type.FlattenHierarchy()", file="ValueListAttribute.cs", label="Entry System.Type.FlattenHierarchy()", span="50-50"];
m39_89 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ValueListAttribute.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m39_145 [file="ValueListAttribute.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m39_146 [file="ValueListAttribute.cs", label=T, span=""];
m39_147 [file="ValueListAttribute.cs", label="System.Type", span=""];
m40_3 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="VerbOptionAttribute.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="61-61"];
m40_0 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="45-45"];
m40_1 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Assumes.NotNullOrEmpty(longName, ''longName'')", span="48-48"];
m40_2 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="45-45"];
d60 -> d63  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_2 -> m3_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m3_4 -> m3_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m3_6 -> m3_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m3_3 -> m3_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_5 -> m3_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_7 -> m3_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_8 -> m3_39  [color=darkseagreen4, key=1, label=values, style=dashed];
m3_9 -> m3_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_44 -> m3_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m3_45 -> m3_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m3_46 -> m3_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m3_47 -> m3_39  [color=darkseagreen4, key=1, label=values, style=dashed];
m4_3 -> m4_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_3 -> m4_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_78 -> m4_207  [color=green, key=1, label=object, style=dashed];
m4_78 -> m4_206  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_78 -> m4_209  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m4_205 -> m4_207  [color=green, key=1, label=property, style=dashed];
m4_208 -> m4_210  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m4_19 -> m4_22  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m4_19 -> m4_23  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_19 -> m4_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_173 -> m4_175  [color=green, key=1, label=object, style=dashed];
m4_173 -> m4_177  [color=green, key=1, label="string[]", style=dashed];
m4_13 -> m4_16  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_47 -> m4_60  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_58 -> m4_62  [color=green, key=1, label=result, style=dashed];
m4_51 -> m4_64  [color=green, key=1, label=target, style=dashed];
m4_51 -> m4_65  [color=green, key=1, label=target, style=dashed];
m4_52 -> m4_63  [color=green, key=1, label=arguments, style=dashed];
m4_54 -> m4_65  [color=green, key=1, label=argument, style=dashed];
m4_56 -> m4_60  [color=green, key=1, label=parser, style=dashed];
m4_39 -> m4_82  [color=green, key=1, label="string[]", style=dashed];
m4_39 -> m4_84  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m4_39 -> m4_86  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m4_39 -> m4_87  [color=green, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m4_39 -> m4_83  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m4_81 -> m4_84  [color=green, key=1, label=caseSensitive, style=dashed];
m4_81 -> m4_87  [color=green, key=1, label=caseSensitive, style=dashed];
m4_82 -> m4_84  [color=green, key=1, label=arg, style=dashed];
m4_82 -> m4_87  [color=green, key=1, label=arg, style=dashed];
m4_168 -> m4_170  [color=green, key=1, label=object, style=dashed];
m4_168 -> m4_171  [color=green, key=1, label="string[]", style=dashed];
m4_167 -> m4_186  [color=green, key=1, label=object, style=dashed];
m4_167 -> m4_187  [color=green, key=1, label=int, style=dashed];
m4_18 -> m4_29  [color=green, key=1, label="string[]", style=dashed];
m4_18 -> m4_31  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_25 -> m4_29  [color=green, key=1, label=pair, style=dashed];
m4_25 -> m4_28  [color=darkseagreen4, key=1, label=pair, style=dashed];
m4_25 -> m4_31  [color=darkseagreen4, key=1, label=pair, style=dashed];
m4_26 -> m4_28  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m4_26 -> m4_32  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m4_135 -> m4_155  [color=green, key=1, label=string, style=dashed];
m4_135 -> m4_156  [color=green, key=1, label=object, style=dashed];
m4_135 -> m4_157  [color=green, key=1, label=object, style=dashed];
m4_156 -> m4_159  [color=green, key=1, label=helpText, style=dashed];
m4_157 -> m4_159  [color=green, key=1, label=helpText, style=dashed];
m4_93 -> m4_95  [color=green, key=1, label=string, style=dashed];
m4_93 -> m4_96  [color=green, key=1, label=object, style=dashed];
m4_93 -> m4_99  [color=green, key=1, label=object, style=dashed];
m4_97 -> m4_99  [color=green, key=1, label=pair, style=dashed];
m4_98 -> m4_100  [color=green, key=1, label="out bool", style=dashed];
m4_162 -> m4_164  [color=green, key=1, label=object, style=dashed];
m4_162 -> m4_165  [color=green, key=1, label="string[]", style=dashed];
m4_103 -> m4_108  [color=green, key=1, label=string, style=dashed];
m4_46 -> m4_114  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_46 -> m4_116  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_46 -> m4_119  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_46 -> m4_124  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_46 -> m4_126  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_46 -> m4_127  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_46 -> m4_130  [color=green, key=1, label="CommandLine.ParserContext", style=dashed];
m4_113 -> m4_115  [color=green, key=1, label=helpInfo, style=dashed];
m4_113 -> m4_116  [color=green, key=1, label=helpInfo, style=dashed];
m4_113 -> m4_119  [color=green, key=1, label=helpInfo, style=dashed];
m4_113 -> m4_123  [color=green, key=1, label=helpInfo, style=dashed];
m4_113 -> m4_124  [color=green, key=1, label=helpInfo, style=dashed];
m4_113 -> m4_130  [color=green, key=1, label=helpInfo, style=dashed];
m4_121 -> m4_126  [color=green, key=1, label=verbOption, style=dashed];
m4_121 -> m4_127  [color=green, key=1, label=verbOption, style=dashed];
m4_128 -> m4_131  [color=green, key=1, label=verbResult, style=dashed];
m4_190 -> m4_194  [color=green, key=1, label=object, style=dashed];
m4_190 -> m4_200  [color=green, key=1, label=object, style=dashed];
m4_194 -> m4_28  [color=green, key=1, label="lambda expression", style=dashed];
m4_2 -> m4_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_220 -> m4_224  [color=darkseagreen4, key=1, label=bool, style=dashed];
m4_137 -> m4_142  [color=green, key=1, label="CommandLine.Utils.Pair<System.Reflection.MethodInfo, CommandLine.HelpVerbOptionAttribute>", style=dashed];
m4_137 -> m4_143  [color=green, key=1, label="string[]", style=dashed];
m4_137 -> m4_148  [color=green, key=1, label=object, style=dashed];
m4_137 -> m4_149  [color=green, key=1, label=object, style=dashed];
m4_137 -> m4_150  [color=green, key=1, label=object, style=dashed];
m4_144 -> m4_150  [color=green, key=1, label=verb, style=dashed];
m4_146 -> m4_148  [color=green, key=1, label=verbOption, style=dashed];
m4_146 -> m4_149  [color=green, key=1, label=verbOption, style=dashed];
m4_179 -> m4_181  [color=green, key=1, label=object, style=dashed];
m4_179 -> m4_183  [color=green, key=1, label="string[]", style=dashed];
m4_233 -> m4_29  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_35  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_43  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_108  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_106  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_116  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_119  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_124  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_130  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_115  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_143  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_150  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_158  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_159  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_165  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_171  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_177  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_183  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_185  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_186  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_192  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_194  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_5  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_16  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_22  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_23  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_217  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_218  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_222  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_225  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_226  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_233 -> m4_231  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m4_234 -> m4_200  [color=green, key=1, label=object, style=dashed];
m11_25 -> m11_27  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m11_25 -> m11_31  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_25 -> m11_32  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m11_28 -> m11_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_28 -> m11_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_28 -> m11_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_9 -> m11_12  [color=darkseagreen4, key=1, label=isVersionNull, style=dashed];
m11_10 -> m11_13  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_10 -> m11_14  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_10 -> m11_15  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_42 -> m11_11  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m11_42 -> m11_14  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m11_42 -> m11_29  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m11_42 -> m11_37  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m11_42 -> m11_40  [color=darkseagreen4, key=1, label="CommandLine.Text.HeadingInfo", style=dashed];
m14_154 -> m14_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_154 -> m14_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_70 -> m14_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_70 -> m14_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_70 -> m14_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_70 -> m14_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_70 -> m14_76  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_95 -> m14_97  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_95 -> m14_98  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_95 -> m14_99  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_102 -> m14_104  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_102 -> m14_105  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_102 -> m14_106  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_102 -> m14_107  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_58 -> m14_60  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_58 -> m14_61  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_58 -> m14_62  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_58 -> m14_63  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_80 -> m14_82  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_80 -> m14_83  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_80 -> m14_84  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_86 -> m14_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_86 -> m14_89  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_86 -> m14_90  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_86 -> m14_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_86 -> m14_92  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_195 -> m14_198  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_195 -> m14_197  [color=darkseagreen4, key=1, label=options, style=dashed];
m14_1 -> m14_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m14_1 -> m14_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m14_1 -> m14_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m14_1 -> m14_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m14_1 -> m14_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m14_1 -> m14_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m14_1 -> m14_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m14_4 -> m14_7  [color=darkseagreen4, key=1, label=errors, style=dashed];
m14_29 -> m14_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_29 -> m14_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_29 -> m14_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_29 -> m14_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_36 -> m14_38  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_114 -> m14_117  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_114 -> m14_118  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_114 -> m14_119  [color=darkseagreen4, key=1, label=local, style=dashed];
m14_122 -> m14_124  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_122 -> m14_125  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_122 -> m14_126  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_122 -> m14_127  [color=darkseagreen4, key=1, label=lines, style=dashed];
m14_113 -> m14_124  [color=darkseagreen4, key=1, label=year, style=dashed];
m14_215 -> m14_26  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m14_215 -> m14_56  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m14_215 -> m14_68  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m14_214 -> m14_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m15_13 -> m15_18  [color=darkseagreen4, key=1, label="System.Reflection.MethodInfo", style=dashed];
m15_8 -> m15_10  [color=darkseagreen4, key=1, label=method, style=dashed];
m20_26 -> m20_28  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_32 -> m20_34  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_32 -> m20_35  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m20_38 -> m20_42  [color=green, key=1, label="lambda expression", style=dashed];
m20_21 -> m20_23  [color=green, key=1, label="System.Action<string>", style=dashed];
m20_21 -> m20_28  [color=darkseagreen4, key=1, label="System.Action<string>", style=dashed];
m20_23 -> m20_26  [color=green, key=1, label="lambda expression", style=dashed];
m20_45 -> m20_34  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m20_45 -> m20_35  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m20_46 -> m20_28  [color=darkseagreen4, key=1, label="System.Action<string>", style=dashed];
m21_35 -> m21_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_35 -> m21_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_45 -> m21_49  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_45 -> m21_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_3 -> m21_9  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_24 -> m21_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_24 -> m21_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_56 -> m21_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_56 -> m21_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m22_7 -> m22_10  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m22_0 -> m22_2  [color=darkseagreen4, key=1, label="params string[]", style=dashed];
m22_0 -> m22_3  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m22_0 -> m22_4  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_26 -> m23_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_26 -> m23_46  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_16 -> m23_18  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_16 -> m23_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_16 -> m23_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_25 -> m23_59  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_0 -> m23_3  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m23_83 -> m23_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_23 -> m23_72  [color=darkseagreen4, key=1, label=string, style=dashed];
m23_71 -> m23_73  [color=green, key=1, label=fieldRef, style=dashed];
m23_27 -> m23_32  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
m23_27 -> m23_33  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_28 -> m23_32  [color=darkseagreen4, key=1, label=elementType, style=dashed];
m23_29 -> m23_31  [color=darkseagreen4, key=1, label=array, style=dashed];
m23_29 -> m23_32  [color=darkseagreen4, key=1, label=array, style=dashed];
m23_29 -> m23_33  [color=darkseagreen4, key=1, label=array, style=dashed];
m23_30 -> m23_32  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_30 -> m23_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_36 -> m23_36  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_99 -> m23_17  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_18  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_19  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_20  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_21  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_33  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_44  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_45  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_46  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_59  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_67  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_70  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_72  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_84  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_85  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_91  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m23_99 -> m23_94  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
m26_0 -> m26_8  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m26_1 -> m26_6  [color=green, key=1, label="lambda expression", style=dashed];
m26_14 -> m26_8  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m26_15 -> m26_8  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>", style=dashed];
m28_36 -> m28_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m28_36 -> m28_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m28_36 -> m28_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m28_42 -> m28_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_42 -> m28_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_42 -> m28_61  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_5 -> m28_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_6 -> m28_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_4 -> m28_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m28_4 -> m28_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m28_54 -> m28_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_34 -> m28_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_64 -> m28_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_64 -> m28_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m28_0 -> m28_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_0 -> m28_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_3 -> m28_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m28_3 -> m28_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_3 -> m28_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m28_21 -> m28_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m28_22 -> m28_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_22 -> m28_24  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m28_81 -> m28_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_81 -> m28_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_82 -> m28_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m28_82 -> m28_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m28_83 -> m28_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_84 -> m28_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m28_85 -> m28_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m28_85 -> m28_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m28_85 -> m28_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m28_86 -> m28_51  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_86 -> m28_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_86 -> m28_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m28_87 -> m28_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m28_88 -> m28_71  [color=darkseagreen4, key=1, label=string, style=dashed];
m28_89 -> m28_71  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m30_121 -> m30_123  [color=green, key=1, label="lambda expression", style=dashed];
m30_82 -> m30_84  [color=green, key=1, label="CommandLine.Core.Specification", style=dashed];
m30_82 -> m30_86  [color=green, key=1, label=object, style=dashed];
m30_83 -> m30_86  [color=green, key=1, label=builder, style=dashed];
m30_83 -> m30_92  [color=green, key=1, label=builder, style=dashed];
m30_83 -> m30_93  [color=green, key=1, label=builder, style=dashed];
m30_83 -> m30_94  [color=green, key=1, label=builder, style=dashed];
m30_88 -> m30_104  [color=green, key=1, label=sep, style=dashed];
m30_88 -> m30_92  [color=green, key=1, label=sep, style=dashed];
m30_89 -> m30_92  [color=green, key=1, label=format, style=dashed];
m30_89 -> m30_104  [color=green, key=1, label=object, style=dashed];
m30_90 -> m30_92  [color=green, key=1, label=e, style=dashed];
m30_131 -> m30_133  [color=green, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m30_145 -> m30_148  [color=green, key=1, label=object, style=dashed];
m30_145 -> m30_150  [color=green, key=1, label=object, style=dashed];
m30_145 -> m30_152  [color=green, key=1, label=object, style=dashed];
m30_145 -> m30_154  [color=green, key=1, label=object, style=dashed];
m30_96 -> m30_107  [color=green, key=1, label=object, style=dashed];
m30_106 -> m30_111  [color=green, key=1, label=string, style=dashed];
m30_106 -> m30_116  [color=green, key=1, label=doubQt, style=dashed];
m30_107 -> m30_115  [color=green, key=1, label="lambda expression", style=dashed];
m30_7 -> m30_11  [color=green, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m30_10 -> m30_23  [color=green, key=1, label=settings, style=dashed];
m30_10 -> m30_75  [color=green, key=1, label=settings, style=dashed];
m30_13 -> m30_15  [color=green, key=1, label=type, style=dashed];
m30_14 -> m30_52  [color=green, key=1, label=builder, style=dashed];
m30_15 -> m30_51  [color=green, key=1, label="lambda expression", style=dashed];
m30_16 -> m30_55  [color=green, key=1, label="lambda expression", style=dashed];
m30_17 -> m30_61  [color=green, key=1, label="lambda expression", style=dashed];
m30_20 -> m30_68  [color=green, key=1, label="lambda expression", style=dashed];
m30_20 -> m30_24  [color=green, key=1, label=valSpecs, style=dashed];
m30_20 -> m30_25  [color=green, key=1, label=valSpecs, style=dashed];
m30_19 -> m30_64  [color=green, key=1, label="lambda expression", style=dashed];
m30_19 -> m30_22  [color=green, key=1, label=optSpecs, style=dashed];
m30_19 -> m30_23  [color=green, key=1, label=optSpecs, style=dashed];
m30_21 -> m30_71  [color=green, key=1, label="lambda expression", style=dashed];
m30_21 -> m30_23  [color=green, key=1, label=builder, style=dashed];
m30_21 -> m30_75  [color=green, key=1, label=builder, style=dashed];
m30_21 -> m30_24  [color=green, key=1, label=builder, style=dashed];
m30_21 -> m30_25  [color=green, key=1, label=builder, style=dashed];
m30_21 -> m30_79  [color=green, key=1, label=builder, style=dashed];
m30_21 -> m30_26  [color=green, key=1, label=builder, style=dashed];
m30_23 -> m30_74  [color=green, key=1, label="lambda expression", style=dashed];
m30_18 -> m30_65  [color=green, key=1, label=shortSwitches, style=dashed];
m30_25 -> m30_78  [color=green, key=1, label="lambda expression", style=dashed];
m30_1 -> m30_4  [color=green, key=1, label="lambda expression", style=dashed];
m30_137 -> m30_139  [color=green, key=1, label=object, style=dashed];
m30_137 -> m30_140  [color=green, key=1, label=object, style=dashed];
m30_160 -> m30_75  [color=green, key=1, label=builder, style=dashed];
m30_160 -> m30_52  [color=green, key=1, label=builder, style=dashed];
m30_160 -> m30_79  [color=green, key=1, label=builder, style=dashed];
m30_163 -> m30_75  [color=green, key=1, label=settings, style=dashed];
m30_162 -> m30_65  [color=green, key=1, label=shortSwitches, style=dashed];
m30_164 -> m30_104  [color=green, key=1, label=sep, style=dashed];
m30_165 -> m30_116  [color=green, key=1, label=doubQt, style=dashed];
m33_3 -> m33_29  [color=green, key=1, label="System.StringComparer", style=dashed];
m33_3 -> m33_77  [color=green, key=1, label="System.StringComparer", style=dashed];
m33_3 -> m33_22  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m33_3 -> m33_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m33_3 -> m33_26  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_3 -> m33_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_3 -> m33_27  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_3 -> m33_70  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m33_3 -> m33_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m33_3 -> m33_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m33_29 -> m33_29  [color=green, key=1, label=token, style=dashed];
m33_29 -> m33_23  [color=green, key=1, label="lambda expression", style=dashed];
m33_29 -> m33_77  [color=green, key=1, label=token, style=dashed];
m33_29 -> m33_33  [color=green, key=1, label=missingValueErrors, style=dashed];
m33_26 -> m33_29  [color=green, key=1, label=partitions, style=dashed];
m33_26 -> m33_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_26 -> m33_28  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m33_28 -> m33_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m33_28 -> m33_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_28 -> m33_30  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m33_28 -> m33_33  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m33_19 -> m33_23  [color=darkseagreen4, key=1, label=instance, style=dashed];
m33_19 -> m33_31  [color=darkseagreen4, key=1, label=instance, style=dashed];
m33_24 -> m33_33  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m33_27 -> m33_30  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m33_27 -> m33_33  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m33_27 -> m33_27  [color=darkseagreen4, key=1, label=pt, style=dashed];
m33_27 -> m33_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_20 -> m33_28  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m33_20 -> m33_27  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m33_20 -> m33_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_31 -> m33_31  [color=darkseagreen4, key=1, label=instance, style=dashed];
m33_31 -> m33_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_42 -> m33_28  [color=darkseagreen4, key=1, label=scalars, style=dashed];
m33_0 -> m33_2  [color=darkseagreen4, key=1, label="System.Func<string, Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
m33_0 -> m33_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_0 -> m33_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_1 -> m33_38  [color=green, key=1, label="lambda expression", style=dashed];
m33_2 -> m33_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m33_4 -> m33_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m33_5 -> m33_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_5 -> m33_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_5 -> m33_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_5 -> m33_7  [color=darkseagreen4, key=1, label=nonOptions, style=dashed];
m33_5 -> m33_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_6 -> m33_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m33_38 -> m33_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m33_38 -> m33_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m33_41 -> m33_24  [color=darkseagreen4, key=1, label=switches, style=dashed];
m33_43 -> m33_32  [color=darkseagreen4, key=1, label=sequences, style=dashed];
m33_111 -> m33_77  [color=green, key=1, label="System.StringComparer", style=dashed];
m33_111 -> m33_66  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_114 -> m33_77  [color=green, key=1, label=token, style=dashed];
m33_109 -> m33_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_109 -> m33_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m33_110 -> m33_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m33_110 -> m33_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m33_112 -> m33_66  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m33_113 -> m33_70  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m33_113 -> m33_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m34_84 -> m34_86  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m34_15 -> m34_19  [color=green, key=1, label="lambda expression", style=dashed];
m34_89 -> m34_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_89 -> m34_91  [color=darkseagreen4, key=1, label=props, style=dashed];
m34_1 -> m34_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_42 -> m34_48  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m34_42 -> m34_49  [color=darkseagreen4, key=1, label=T, style=dashed];
m34_43 -> m34_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m34_128 -> m34_48  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m34_129 -> m34_49  [color=darkseagreen4, key=1, label=T, style=dashed];
m36_10 -> m36_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m36_17 -> m36_5  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m36_17 -> m36_13  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m39_91 -> m39_93  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_59 -> m39_61  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m39_59 -> m39_70  [color=darkseagreen4, key=1, label=T, style=dashed];
m39_60 -> m39_75  [color=darkseagreen4, key=1, label="System.Exception", style=dashed];
m39_60 -> m39_63  [color=darkseagreen4, key=1, label=fail, style=dashed];
m39_60 -> m39_65  [color=darkseagreen4, key=1, label=fail, style=dashed];
m39_60 -> m39_67  [color=darkseagreen4, key=1, label=fail, style=dashed];
m39_60 -> m39_69  [color=darkseagreen4, key=1, label=fail, style=dashed];
m39_15 -> m39_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_96 -> m39_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_96 -> m39_98  [color=darkseagreen4, key=1, label=props, style=dashed];
m39_106 -> m39_109  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_106 -> m39_110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_106 -> m39_111  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_24 -> m39_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_1 -> m39_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_117 -> m39_119  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_117 -> m39_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_120 -> m39_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_49 -> m39_55  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m39_49 -> m39_56  [color=darkseagreen4, key=1, label=T, style=dashed];
m39_50 -> m39_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m39_30 -> m39_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_30 -> m39_36  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m39_145 -> m39_55  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m39_146 -> m39_56  [color=darkseagreen4, key=1, label=T, style=dashed];
}
