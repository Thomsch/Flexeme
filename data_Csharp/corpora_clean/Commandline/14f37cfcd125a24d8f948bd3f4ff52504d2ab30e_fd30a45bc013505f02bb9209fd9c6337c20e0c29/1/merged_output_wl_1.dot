digraph  {
m1_5 [cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_0 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m1_1 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="18-18"];
m1_2 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16"];
m1_3 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m1_4 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="490-490"];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="CommandLine.ParserResult<T>", span=""];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="CommandLine.NotParsed<T>", span=""];
m1_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="105-105"];
m1_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="106-106"];
m1_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="107-107"];
m1_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="108-108"];
m1_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="109-109"];
m1_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110"];
m1_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="CommandLine.Parsed<T>", span=""];
m1_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_16 [cluster="object.Equals(object)", file="HelpTextTests.cs", label="Entry object.Equals(object)", span="0-0"];
m1_22 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="HelpTextTests.cs", label="return false;", span="119-119"];
m1_24 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="HelpTextTests.cs", label="Exit CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", span="115-115"];
m1_25 [cluster="System.Enum.Equals(object)", file="HelpTextTests.cs", label="Entry System.Enum.Equals(object)", span="0-0"];
m1_26 [cluster="Unk.SequenceEqual", file="HelpTextTests.cs", label="Entry Unk.SequenceEqual", span=""];
m1_27 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m1_28 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="this.errors = errors", span="139-139"];
m1_29 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Exit CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="136-136"];
m1_30 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m1_31 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs", label="Exit CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m1_32 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.Equals(object)", span="161-161"];
m1_23 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="HelpTextTests.cs", label="return this.Tag.Equals(other.Tag)\r\n                    && Value.Equals(other.Value)\r\n                    && VerbTypes.SequenceEqual(other.VerbTypes);", span="122-124"];
m1_33 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="HelpTextTests.cs", label="var other = obj as NotParsed<T>", span="163-163"];
m1_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="396-396"];
m1_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m1_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144"];
m1_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146"];
m1_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147"];
m1_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148"];
m1_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149"];
m1_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143"];
m1_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140"];
m1_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135"];
m1_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="136-136"];
m1_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m1_217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="432-432"];
m1_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m1_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166"];
m1_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167"];
m1_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168"];
m1_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169"];
m1_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170"];
m1_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172"];
m1_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158"];
m1_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163"];
m1_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="159-159"];
m1_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m1_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m1_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m1_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="275-275"];
m1_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="278-278"];
m1_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="279-279"];
m1_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="280-280"];
m1_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="281-281"];
m1_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="282-282"];
m1_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="283-283"];
m1_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="284-284"];
m1_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="272-272"];
m1_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="276-276"];
m1_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="277-277"];
m1_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="263-269"];
m1_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m1_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342"];
m1_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="353-353"];
m1_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="354-354"];
m1_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="355-355"];
m1_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="356-356"];
m1_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="357-357"];
m1_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="358-358"];
m1_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="359-359"];
m1_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="360-360"];
m1_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="361-361"];
m1_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="362-362"];
m1_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="346-349"];
m1_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342"];
m1_39 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.GetHashCode()", span="176-176"];
m1_41 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="HelpTextTests.cs", label="Exit CommandLine.NotParsed<T>.GetHashCode()", span="176-176"];
m1_42 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="HelpTextTests.cs", label="other == null", span="188-188"];
m1_43 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="HelpTextTests.cs", label="return false;", span="190-190"];
m1_44 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="HelpTextTests.cs", label="return this.Tag.Equals(other.Tag) && Errors.SequenceEqual(other.Errors);", span="193-193"];
m1_45 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="HelpTextTests.cs", label="Exit CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="186-186"];
m1_46 [cluster="CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="199-199"];
m1_47 [cluster="CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="HelpTextTests.cs", label="return new NotParsed<T>(parserResult.Value, func(parserResult.Errors));", span="203-203"];
m1_48 [cluster="CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="HelpTextTests.cs", label="Exit CommandLine.NotParsedExtensions.MapErrors<T>(CommandLine.NotParsed<T>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="199-199"];
m1_40 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="HelpTextTests.cs", label="return new { Value, Errors }.GetHashCode();", span="178-178"];
m1_49 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpTextTests.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315"];
m1_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="329-329"];
m1_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="333-333"];
m1_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="334-334"];
m1_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="335-335"];
m1_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="336-336"];
m1_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="337-337"];
m1_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="326-326"];
m1_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="331-331"];
m1_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="332-332"];
m1_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="320-323"];
m1_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="318-319"];
m1_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315"];
m1_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m1_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190"];
m1_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191"];
m1_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m1_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m1_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194"];
m1_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="var sut = new HelpText(''Heading Info.'')", span="181-181"];
m1_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185"];
m1_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="sut.MaximumDisplayWidth = 40", span="182-182"];
m1_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m1_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m1_17 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m1_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="309-309"];
m1_36 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="HelpTextTests.cs", label="return base.Equals(obj);", span="169-169"];
m1_38 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="HelpTextTests.cs", label="Entry CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="186-186"];
m1_34 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="HelpTextTests.cs", label="other != null", span="164-164"];
m1_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121"];
m1_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="367-367"];
m1_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: var lines = text.ToNotEmptyLines()", span="378-378"];
m1_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="var text = HelpText.RenderUsageText(result)", span="375-375"];
m1_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="381-381"];
m1_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="382-382"];
m1_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="383-383"];
m1_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="384-384"];
m1_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="385-385"];
m1_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="386-386"];
m1_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", color=green, community=0, file="HelpTextTests.cs", label="0: lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --input=file.bin --warns'')", span="387-387"];
m1_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="370-372"];
m1_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="367-367"];
m1_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m1_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m1_37 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="HelpTextTests.cs", label="Exit CommandLine.NotParsed<T>.Equals(object)", span="161-161"];
m1_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m1_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_21 [cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m1_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m1_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_164 [cluster="Unk.Should", file="HelpTextTests.cs", label="Entry Unk.Should", span=""];
m1_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m1_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31"];
m1_8 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="319-319"];
m1_165 [cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs", label="Entry Unk.StartWithEquivalent", span=""];
m1_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="244-244"];
m1_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m1_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m1_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_9 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36"];
m1_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37"];
m1_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40"];
m1_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38"];
m1_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39"];
m1_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41"];
m1_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m1_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = errorsText.ToNotEmptyLines()", span="247-247"];
m1_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="249-249"];
m1_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="250-250"];
m1_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="251-251"];
m1_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="252-252"];
m1_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="253-253"];
m1_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="254-254"];
m1_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="255-255"];
m1_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="244-244"];
m1_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        //new MutuallyExclusiveSetError(new NameInfo(''z'', ''''), string.Empty),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-217"];
m1_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="218-239"];
m1_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="240-241"];
m1_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m1_127 [cluster="lambda expression", file="HelpTextTests.cs", label="Entry lambda expression", span="218-239"];
m1_128 [cluster="lambda expression", file="HelpTextTests.cs", label="err.Tag", span="220-220"];
m1_130 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="223-223"];
m1_132 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="225-225"];
m1_134 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="227-227"];
m1_136 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="229-229"];
m1_138 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="231-231"];
m1_142 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="235-235"];
m1_129 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadFormatTokenError", span="222-222"];
m1_131 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingValueOptionError", span="224-224"];
m1_133 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.UnknownOptionError", span="226-226"];
m1_135 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.MissingRequiredOptionError", span="228-228"];
m1_137 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.SequenceOutOfRangeError", span="230-230"];
m1_139 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.NoVerbSelectedError", span="232-232"];
m1_141 [cluster="lambda expression", file="HelpTextTests.cs", label="ErrorType.BadVerbSelectedError", span="234-234"];
m1_143 [cluster="lambda expression", file="HelpTextTests.cs", label="throw new InvalidOperationException();", span="237-237"];
m1_140 [cluster="lambda expression", file="HelpTextTests.cs", label="return ''ERR no-verb-selected'';", span="233-233"];
m1_144 [cluster="lambda expression", file="HelpTextTests.cs", label="Exit lambda expression", span="218-239"];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m1_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="303-303"];
m1_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="307-307"];
m1_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="308-308"];
m1_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="309-309"];
m1_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="310-310"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="300-300"];
m1_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="305-305"];
m1_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="306-306"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="292-297"];
m1_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m1_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m1_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m2_38 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="28-28"];
m2_46 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m2_123 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m2_148 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m2_4 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="53-53"];
m2_5 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { UseEqualToken = true };", span="55-55"];
m2_6 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="53-53"];
m2_125 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="181-181"];
m2_126 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="183-184"];
m2_127 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="181-181"];
m2_87 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="149-149"];
m2_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="151-151"];
m2_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="152-152"];
m2_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="155-155"];
m2_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="158-158"];
m2_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="161-161"];
m2_97 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="163-163"];
m2_98 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="164-164"];
m2_99 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="167-167"];
m2_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="154-154"];
m2_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="157-157"];
m2_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="159-160"];
m2_96 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="162-162"];
m2_100 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="149-149"];
m2_35 [cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m2_104 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m2_45 [cluster="Unk.Any", file="UnParserExtensions.cs", label="Entry Unk.Any", span=""];
m2_41 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="219-219"];
m2_106 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_136 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="195-195"];
m2_137 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="197-199"];
m2_138 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", color=red, community=0, file="UnParserExtensions.cs", label="0: return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", span="200-205"];
m2_139 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="195-195"];
m2_150 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="219-219"];
m2_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="221-221"];
m2_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="222-222"];
m2_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="223-223"];
m2_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="224-224"];
m2_159 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="225-225"];
m2_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="221-221"];
m2_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="222-222"];
m2_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="223-223"];
m2_158 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="224-224"];
m2_160 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="225-225"];
m2_161 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="226-226"];
m2_162 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="219-219"];
m2_43 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m2_141 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m2_52 [cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m2_119 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_40 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m2_72 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m2_114 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m2_118 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m2_36 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m2_128 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="184-184"];
m2_11 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="75-75"];
m2_12 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="75-75"];
m2_61 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="104-105"];
m2_80 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="139-139"];
m2_57 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="99-99"];
m2_56 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="99-99"];
m2_60 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="104-105"];
m2_66 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="110-110"];
m2_70 [cluster="lambda expression", file="UnParserExtensions.cs", label="!shortSwitches.Contains(info)", span="124-124"];
m2_69 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="124-124"];
m2_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="127-127"];
m2_76 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="134-134"];
m2_84 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="143-143"];
m2_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="139-139"];
m2_83 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="143-143"];
m2_58 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="99-99"];
m2_62 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="104-105"];
m2_67 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="110-110"];
m2_68 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="110-110"];
m2_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="124-124"];
m2_74 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="127-127"];
m2_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="127-127"];
m2_77 [cluster="lambda expression", file="UnParserExtensions.cs", label="((OptionSpecification)info.Specification).ShortName", span="134-134"];
m2_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="134-134"];
m2_81 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="139-139"];
m2_85 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="143-143"];
m2_109 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="160-160"];
m2_108 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="159-160"];
m2_110 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="159-160"];
m2_116 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="173-173"];
m2_121 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="177-178"];
m2_120 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="177-178"];
m2_115 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="172-173"];
m2_117 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="172-173"];
m2_122 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="177-178"];
m2_129 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="184-184"];
m2_130 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="184-184"];
m2_135 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m2_55 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m2_107 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m2_147 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m2_51 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m2_59 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m2_47 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m2_163 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="131-131"];
m2_86 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m2_42 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m2_82 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m2_44 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m2_149 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m2_124 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m2_65 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="208-208"];
m2_39 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m2_54 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_103 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="181-181"];
m2_50 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_134 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="195-195"];
m2_101 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="170-170"];
m2_111 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="172-173"];
m2_112 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="175-178"];
m2_113 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="170-170"];
m2_0 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="48-48"];
m2_1 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { GroupSwitches = true };", span="50-50"];
m2_2 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="48-48"];
m2_53 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m2_102 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m2_49 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m2_10 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
m2_140 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m2_37 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m2_3 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m2_164 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m2_105 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m2_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
m2_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="options == null", span="89-89"];
m2_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="configuration(settings)", span="92-92"];
m2_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="95-95"];
m2_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="101-108"];
m2_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="89-89"];
m2_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var settings = new UnParserSettings()", span="91-91"];
m2_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="settings.Consumed = true", span="93-93"];
m2_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="123-125"];
m2_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="132-135"];
m2_29 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="138-139"];
m2_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="96-96"];
m2_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="98-99"];
m2_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="110-114"];
m2_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="127-130"];
m2_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="116-121"];
m2_28 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="136-137"];
m2_30 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="140-141"];
m2_31 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="142-143"];
m2_32 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="145-146"];
m2_33 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
m2_48 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m2_131 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="187-187"];
m2_132 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="189-192"];
m2_133 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="187-187"];
m2_63 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m2_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="73-73"];
m2_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="return parser.FormatCommandLine(options, config => {});", span="75-75"];
m2_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="73-73"];
m2_64 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_142 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="208-208"];
m2_143 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="210-212"];
m2_144 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="214-214"];
m2_145 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="216-216"];
m2_146 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="208-208"];
m2_165 [file="UnParserExtensions.cs", label=builder, span=""];
m2_166 [file="UnParserExtensions.cs", label=T, span=""];
m2_167 [file="UnParserExtensions.cs", label=shortSwitches, span=""];
m2_168 [file="UnParserExtensions.cs", label=settings, span=""];
m2_169 [file="UnParserExtensions.cs", label=sep, span=""];
m2_170 [file="UnParserExtensions.cs", label=doubQt, span=""];
m1_5 -> m1_6  [key=0, style=solid];
m1_6 -> m1_5  [color=blue, key=0, style=bold];
m1_6 -> m1_7  [key=0, style=solid];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_5  [key=2, style=dotted];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_0  [color=blue, key=0, style=bold];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_1  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_50 -> m1_2  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_50 -> m1_3  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_52 -> m1_21  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_4  [key=2, style=dotted];
m1_52 -> m1_38  [key=2, style=dotted];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m1_52 -> m1_35  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m1_52 -> m1_36  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m1_52 -> m1_40  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m1_52 -> m1_44  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m1_53 -> m1_5  [key=2, style=dotted];
m1_53 -> m1_54  [key=0, style=solid];
m1_54 -> m1_5  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_55 -> m1_5  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_5  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_5  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_58 -> m1_5  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_34  [key=2, style=dotted];
m1_51 -> m1_35  [key=2, style=dotted];
m1_51 -> m1_36  [key=2, style=dotted];
m1_51 -> m1_3  [key=2, style=dotted];
m1_51 -> m1_19  [key=2, style=dotted];
m1_51 -> m1_37  [key=2, style=dotted];
m1_51 -> m1_20  [key=2, style=dotted];
m1_51 -> m1_12  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m1_51 -> m1_13  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m1_51 -> m1_18  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m1_51 -> m1_23  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m1_59 -> m1_50  [color=blue, key=0, style=bold];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_24  [key=0, style=solid];
m1_24 -> m1_21  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_4  [key=2, style=dotted];
m1_24 -> m1_38  [key=2, style=dotted];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_15  [color=blue, key=0, style=bold];
m1_25 -> m1_5  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_26 -> m1_5  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_5  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_5  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_27  [color=blue, key=0, style=bold];
m1_30 -> m1_5  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_31 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_30  [color=blue, key=0, style=bold];
m1_32 -> m1_5  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_36  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_34  [key=2, style=dotted];
m1_23 -> m1_35  [key=2, style=dotted];
m1_23 -> m1_36  [key=2, style=dotted];
m1_23 -> m1_3  [key=2, style=dotted];
m1_23 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_37  [key=2, style=dotted];
m1_23 -> m1_20  [key=2, style=dotted];
m1_23 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_16  [key=2, style=dotted];
m1_23 -> m1_26  [key=2, style=dotted];
m1_33 -> m1_22  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=other, style=dashed];
m1_66 -> m1_67  [key=0, style=solid];
m1_71 -> m1_5  [key=2, style=dotted];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_5  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_73 -> m1_5  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_74 -> m1_5  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_75 -> m1_5  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_4  [key=2, style=dotted];
m1_70 -> m1_77  [key=2, style=dotted];
m1_69 -> m1_34  [key=2, style=dotted];
m1_69 -> m1_35  [key=2, style=dotted];
m1_69 -> m1_36  [key=2, style=dotted];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_37  [key=2, style=dotted];
m1_67 -> m1_70  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_67 -> m1_17  [key=2, style=dotted];
m1_67 -> m1_65  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_68 -> m1_69  [key=0, style=solid];
m1_76 -> m1_66  [color=blue, key=0, style=bold];
m1_78 -> m1_79  [key=0, style=solid];
m1_82 -> m1_21  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_4  [key=2, style=dotted];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_83 -> m1_5  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_84 -> m1_5  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_85 -> m1_5  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_86 -> m1_5  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_87 -> m1_5  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_88 -> m1_5  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_79 -> m1_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_65  [key=2, style=dotted];
m1_79 -> m1_17  [key=2, style=dotted];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_34  [key=2, style=dotted];
m1_81 -> m1_35  [key=2, style=dotted];
m1_81 -> m1_36  [key=2, style=dotted];
m1_81 -> m1_37  [key=2, style=dotted];
m1_80 -> m1_81  [key=0, style=solid];
m1_89 -> m1_78  [color=blue, key=0, style=bold];
m1_149 -> m1_150  [key=0, style=solid];
m1_152 -> m1_21  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_4  [key=2, style=dotted];
m1_152 -> m1_38  [key=2, style=dotted];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_155 -> m1_5  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_156 -> m1_5  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_157 -> m1_5  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_158 -> m1_5  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_159 -> m1_5  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_160 -> m1_5  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_161 -> m1_5  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_163  [key=2, style=dotted];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_164  [key=2, style=dotted];
m1_153 -> m1_165  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_164  [key=2, style=dotted];
m1_154 -> m1_165  [key=2, style=dotted];
m1_150 -> m1_34  [key=2, style=dotted];
m1_150 -> m1_35  [key=2, style=dotted];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_116  [key=2, style=dotted];
m1_150 -> m1_121  [key=2, style=dotted];
m1_150 -> m1_118  [key=2, style=dotted];
m1_162 -> m1_149  [color=blue, key=0, style=bold];
m1_192 -> m1_193  [key=0, style=solid];
m1_194 -> m1_21  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_4  [key=2, style=dotted];
m1_194 -> m1_38  [key=2, style=dotted];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_195 -> m1_5  [key=2, style=dotted];
m1_195 -> m1_196  [key=0, style=solid];
m1_196 -> m1_5  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_5  [key=2, style=dotted];
m1_197 -> m1_198  [key=0, style=solid];
m1_198 -> m1_5  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_5  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_200 -> m1_5  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_201 -> m1_5  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_202 -> m1_5  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_203 -> m1_5  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_34  [key=2, style=dotted];
m1_193 -> m1_35  [key=2, style=dotted];
m1_193 -> m1_36  [key=2, style=dotted];
m1_193 -> m1_3  [key=2, style=dotted];
m1_193 -> m1_19  [key=2, style=dotted];
m1_193 -> m1_37  [key=2, style=dotted];
m1_193 -> m1_20  [key=2, style=dotted];
m1_204 -> m1_192  [color=blue, key=0, style=bold];
m1_39 -> m1_40  [key=0, style=solid];
m1_41 -> m1_21  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_4  [key=2, style=dotted];
m1_41 -> m1_38  [key=2, style=dotted];
m1_41 -> m1_43  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_44  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_46  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_47  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_39  [color=blue, key=0, style=bold];
m1_42 -> m1_5  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [key=0, style=solid];
m1_43 -> m1_5  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_44 -> m1_5  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_25  [key=2, style=dotted];
m1_44 -> m1_26  [key=2, style=dotted];
m1_45 -> m1_5  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_38  [color=blue, key=0, style=bold];
m1_46 -> m1_5  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_47 -> m1_5  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_30  [key=2, style=dotted];
m1_47 -> m1_49  [key=2, style=dotted];
m1_48 -> m1_5  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_46  [color=blue, key=0, style=bold];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_34  [key=2, style=dotted];
m1_40 -> m1_35  [key=2, style=dotted];
m1_40 -> m1_36  [key=2, style=dotted];
m1_40 -> m1_3  [key=2, style=dotted];
m1_40 -> m1_19  [key=2, style=dotted];
m1_40 -> m1_37  [key=2, style=dotted];
m1_40 -> m1_20  [key=2, style=dotted];
m1_49 -> m1_39  [color=blue, key=0, style=bold];
m1_177 -> m1_178  [key=0, style=solid];
m1_181 -> m1_21  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_4  [key=2, style=dotted];
m1_181 -> m1_38  [key=2, style=dotted];
m1_181 -> m1_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_184 -> m1_5  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_185 -> m1_5  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_186 -> m1_5  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_187 -> m1_5  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_188 -> m1_5  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_163  [key=2, style=dotted];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_164  [key=2, style=dotted];
m1_182 -> m1_165  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_164  [key=2, style=dotted];
m1_183 -> m1_165  [key=2, style=dotted];
m1_179 -> m1_34  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_191  [key=2, style=dotted];
m1_179 -> m1_125  [key=2, style=dotted];
m1_178 -> m1_36  [key=2, style=dotted];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_190  [key=2, style=dotted];
m1_189 -> m1_177  [color=blue, key=0, style=bold];
m1_90 -> m1_91  [key=0, style=solid];
m1_94 -> m1_21  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_4  [key=2, style=dotted];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_95 -> m1_5  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_96 -> m1_5  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_97 -> m1_5  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_98 -> m1_5  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_99 -> m1_5  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_100 -> m1_5  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_91 -> m1_94  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_65  [key=2, style=dotted];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_34  [key=2, style=dotted];
m1_93 -> m1_35  [key=2, style=dotted];
m1_93 -> m1_36  [key=2, style=dotted];
m1_93 -> m1_19  [key=2, style=dotted];
m1_93 -> m1_37  [key=2, style=dotted];
m1_93 -> m1_20  [key=2, style=dotted];
m1_92 -> m1_93  [key=0, style=solid];
m1_101 -> m1_90  [color=blue, key=0, style=bold];
m1_17 -> m1_18  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_20  [key=2, style=dotted];
m1_19 -> m1_17  [color=blue, key=0, style=bold];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_16  [key=2, style=dotted];
m1_38 -> m1_42  [key=0, style=solid];
m1_38 -> m1_44  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_36  [key=0, style=solid];
m1_60 -> m1_61  [key=0, style=solid];
m1_62 -> m1_21  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_4  [key=2, style=dotted];
m1_62 -> m1_38  [key=2, style=dotted];
m1_63 -> m1_5  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_34  [key=2, style=dotted];
m1_61 -> m1_35  [key=2, style=dotted];
m1_61 -> m1_36  [key=2, style=dotted];
m1_61 -> m1_65  [key=2, style=dotted];
m1_61 -> m1_37  [key=2, style=dotted];
m1_64 -> m1_60  [color=blue, key=0, style=bold];
m1_205 -> m1_206  [key=0, style=solid];
m1_208 -> m1_209  [color=green, key=0, style=solid];
m1_208 -> m1_21  [color=green, key=2, style=dotted];
m1_208 -> m1_210  [color=green, key=1, label=lines, style=dashed];
m1_208 -> m1_211  [color=green, key=1, label=lines, style=dashed];
m1_208 -> m1_212  [color=green, key=1, label=lines, style=dashed];
m1_208 -> m1_213  [color=green, key=1, label=lines, style=dashed];
m1_208 -> m1_214  [color=green, key=1, label=lines, style=dashed];
m1_208 -> m1_215  [color=green, key=1, label=lines, style=dashed];
m1_207 -> m1_208  [color=green, key=0, style=solid];
m1_207 -> m1_217  [key=2, style=dotted];
m1_209 -> m1_210  [color=green, key=0, style=solid];
m1_209 -> m1_5  [color=green, key=2, style=dotted];
m1_210 -> m1_211  [color=green, key=0, style=solid];
m1_210 -> m1_5  [color=green, key=2, style=dotted];
m1_211 -> m1_212  [color=green, key=0, style=solid];
m1_211 -> m1_5  [color=green, key=2, style=dotted];
m1_212 -> m1_213  [color=green, key=0, style=solid];
m1_212 -> m1_5  [color=green, key=2, style=dotted];
m1_213 -> m1_214  [color=green, key=0, style=solid];
m1_213 -> m1_5  [color=green, key=2, style=dotted];
m1_214 -> m1_215  [color=green, key=0, style=solid];
m1_214 -> m1_5  [color=green, key=2, style=dotted];
m1_215 -> m1_216  [color=green, key=0, style=solid];
m1_215 -> m1_5  [color=green, key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_34  [key=2, style=dotted];
m1_206 -> m1_35  [key=2, style=dotted];
m1_206 -> m1_36  [key=2, style=dotted];
m1_216 -> m1_205  [color=blue, key=0, style=bold];
m1_37 -> m1_32  [color=blue, key=0, style=bold];
m1_35 -> m1_37  [key=0, style=solid];
m1_35 -> m1_38  [key=2, style=dotted];
m1_15 -> m1_21  [key=0, style=solid];
m1_15 -> m1_23  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m1_15 -> m1_6  [color=blue, key=0, style=bold];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_8 -> m1_7  [color=blue, key=0, style=bold];
m1_8 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_4  [key=2, style=dotted];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_9 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_12  [color=darkseagreen4, key=1, label=other, style=dashed];
m1_10 -> m1_5  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_16  [key=2, style=dotted];
m1_13 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_11 -> m1_5  [key=2, style=dotted];
m1_12 -> m1_14  [key=0, style=solid];
m1_12 -> m1_15  [key=2, style=dotted];
m1_12 -> m1_5  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_14 -> m1_9  [color=blue, key=0, style=bold];
m1_14 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid];
m1_107 -> m1_21  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_108 -> m1_5  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_109 -> m1_5  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_110 -> m1_5  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_111 -> m1_5  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_112 -> m1_5  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_5  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_114 -> m1_5  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_126  [key=2, style=dotted];
m1_103 -> m1_34  [key=2, style=dotted];
m1_103 -> m1_35  [key=2, style=dotted];
m1_103 -> m1_106  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_116  [key=2, style=dotted];
m1_103 -> m1_117  [key=2, style=dotted];
m1_103 -> m1_118  [key=2, style=dotted];
m1_103 -> m1_119  [key=2, style=dotted];
m1_103 -> m1_120  [key=2, style=dotted];
m1_103 -> m1_121  [key=2, style=dotted];
m1_103 -> m1_122  [key=2, style=dotted];
m1_103 -> m1_123  [key=2, style=dotted];
m1_103 -> m1_124  [key=2, style=dotted];
m1_103 -> m1_125  [key=2, style=dotted];
m1_104 -> m1_106  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m1_104 -> m1_104  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_105  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m1_115 -> m1_102  [color=blue, key=0, style=bold];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_131  [key=0, style=solid];
m1_128 -> m1_133  [key=0, style=solid];
m1_128 -> m1_135  [key=0, style=solid];
m1_128 -> m1_137  [key=0, style=solid];
m1_128 -> m1_139  [key=0, style=solid];
m1_128 -> m1_141  [key=0, style=solid];
m1_128 -> m1_143  [key=0, style=solid];
m1_130 -> m1_144  [key=0, style=solid];
m1_132 -> m1_144  [key=0, style=solid];
m1_134 -> m1_144  [key=0, style=solid];
m1_136 -> m1_144  [key=0, style=solid];
m1_138 -> m1_144  [key=0, style=solid];
m1_142 -> m1_144  [key=0, style=solid];
m1_129 -> m1_130  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_135 -> m1_136  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=2, style=dotted];
m1_140 -> m1_144  [key=0, style=solid];
m1_144 -> m1_127  [color=blue, key=0, style=bold];
m1_166 -> m1_167  [key=0, style=solid];
m1_169 -> m1_21  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_4  [key=2, style=dotted];
m1_169 -> m1_38  [key=2, style=dotted];
m1_169 -> m1_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_172 -> m1_5  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_173 -> m1_5  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_174 -> m1_5  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_175 -> m1_5  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_163  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_164  [key=2, style=dotted];
m1_170 -> m1_165  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_164  [key=2, style=dotted];
m1_171 -> m1_165  [key=2, style=dotted];
m1_167 -> m1_34  [key=2, style=dotted];
m1_167 -> m1_35  [key=2, style=dotted];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_125  [key=2, style=dotted];
m1_176 -> m1_166  [color=blue, key=0, style=bold];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_3  [key=2, style=dotted];
m2_6 -> m2_4  [color=blue, key=0, style=bold];
m2_125 -> m2_126  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_114  [key=2, style=dotted];
m2_126 -> m2_39  [key=2, style=dotted];
m2_126 -> m2_128  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_127 -> m2_125  [color=blue, key=0, style=bold];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_89  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_87 -> m2_91  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_87 -> m2_93  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_87 -> m2_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_87 -> m2_131  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_37  [key=2, style=dotted];
m2_88 -> m2_91  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_88 -> m2_97  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_88 -> m2_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_88 -> m2_99  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_92  [key=0, style=solid];
m2_91 -> m2_99  [key=0, style=solid];
m2_91 -> m2_101  [key=2, style=dotted];
m2_91 -> m2_102  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_103  [key=2, style=dotted];
m2_93 -> m2_109  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_93 -> m2_97  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_104  [key=2, style=dotted];
m2_95 -> m2_97  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_97 -> m2_96  [key=0, style=solid];
m2_97 -> m2_106  [key=2, style=dotted];
m2_97 -> m2_102  [key=2, style=dotted];
m2_97 -> m2_46  [key=2, style=dotted];
m2_98 -> m2_99  [key=0, style=solid];
m2_98 -> m2_107  [key=2, style=dotted];
m2_99 -> m2_100  [key=0, style=solid];
m2_99 -> m2_54  [key=2, style=dotted];
m2_90 -> m2_91  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_94 -> m2_95  [key=0, style=solid];
m2_94 -> m2_109  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_94 -> m2_97  [color=darkseagreen4, key=1, label=format, style=dashed];
m2_94 -> m2_94  [color=darkorchid, key=3, label="Local variable System.Func<object, object> format", style=bold];
m2_96 -> m2_97  [key=0, style=solid];
m2_96 -> m2_98  [key=0, style=solid];
m2_96 -> m2_105  [key=2, style=dotted];
m2_100 -> m2_87  [color=blue, key=0, style=bold];
m2_41 -> m2_151  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_41 -> m2_161  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_138  [color=red, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_137 -> m2_138  [color=red, key=0, style=solid];
m2_138 -> m2_139  [color=red, key=0, style=solid];
m2_138 -> m2_140  [color=red, key=2, style=dotted];
m2_138 -> m2_124  [color=red, key=2, style=dotted];
m2_138 -> m2_141  [color=red, key=2, style=dotted];
m2_138 -> m2_54  [color=red, key=2, style=dotted];
m2_139 -> m2_136  [color=blue, key=0, style=bold];
m2_150 -> m2_151  [key=0, style=solid];
m2_150 -> m2_153  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_150 -> m2_155  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_150 -> m2_157  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_150 -> m2_159  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_153  [key=0, style=solid];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_155  [key=0, style=solid];
m2_153 -> m2_36  [key=2, style=dotted];
m2_153 -> m2_147  [key=2, style=dotted];
m2_153 -> m2_148  [key=2, style=dotted];
m2_155 -> m2_156  [key=0, style=solid];
m2_155 -> m2_157  [key=0, style=solid];
m2_155 -> m2_36  [key=2, style=dotted];
m2_155 -> m2_163  [key=2, style=dotted];
m2_155 -> m2_164  [key=2, style=dotted];
m2_157 -> m2_158  [key=0, style=solid];
m2_157 -> m2_159  [key=0, style=solid];
m2_159 -> m2_160  [key=0, style=solid];
m2_159 -> m2_161  [key=0, style=solid];
m2_159 -> m2_104  [key=2, style=dotted];
m2_159 -> m2_105  [key=2, style=dotted];
m2_152 -> m2_162  [key=0, style=solid];
m2_154 -> m2_162  [key=0, style=solid];
m2_156 -> m2_162  [key=0, style=solid];
m2_158 -> m2_162  [key=0, style=solid];
m2_160 -> m2_162  [key=0, style=solid];
m2_161 -> m2_162  [key=0, style=solid];
m2_162 -> m2_150  [color=blue, key=0, style=bold];
m2_128 -> m2_129  [key=0, style=solid];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_11  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_61 -> m2_63  [key=2, style=dotted];
m2_61 -> m2_64  [key=2, style=dotted];
m2_61 -> m2_65  [key=2, style=dotted];
m2_80 -> m2_81  [key=0, style=solid];
m2_80 -> m2_82  [key=2, style=dotted];
m2_80 -> m2_50  [key=2, style=dotted];
m2_80 -> m2_46  [key=2, style=dotted];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_59  [key=2, style=dotted];
m2_57 -> m2_46  [key=2, style=dotted];
m2_56 -> m2_57  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_72  [key=2, style=dotted];
m2_69 -> m2_70  [key=0, style=solid];
m2_73 -> m2_74  [key=0, style=solid];
m2_76 -> m2_77  [key=0, style=solid];
m2_84 -> m2_85  [key=0, style=solid];
m2_84 -> m2_86  [key=2, style=dotted];
m2_84 -> m2_50  [key=2, style=dotted];
m2_84 -> m2_46  [key=2, style=dotted];
m2_79 -> m2_80  [key=0, style=solid];
m2_83 -> m2_84  [key=0, style=solid];
m2_58 -> m2_56  [color=blue, key=0, style=bold];
m2_62 -> m2_60  [color=blue, key=0, style=bold];
m2_67 -> m2_68  [key=0, style=solid];
m2_68 -> m2_66  [color=blue, key=0, style=bold];
m2_71 -> m2_69  [color=blue, key=0, style=bold];
m2_74 -> m2_75  [key=0, style=solid];
m2_75 -> m2_73  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [key=0, style=solid];
m2_78 -> m2_76  [color=blue, key=0, style=bold];
m2_81 -> m2_79  [color=blue, key=0, style=bold];
m2_85 -> m2_83  [color=blue, key=0, style=bold];
m2_109 -> m2_110  [key=0, style=solid];
m2_109 -> m2_101  [key=2, style=dotted];
m2_108 -> m2_109  [key=0, style=solid];
m2_110 -> m2_108  [color=blue, key=0, style=bold];
m2_116 -> m2_117  [key=0, style=solid];
m2_116 -> m2_118  [key=2, style=dotted];
m2_116 -> m2_119  [key=2, style=dotted];
m2_121 -> m2_122  [key=0, style=solid];
m2_121 -> m2_72  [key=2, style=dotted];
m2_121 -> m2_123  [key=2, style=dotted];
m2_121 -> m2_124  [key=2, style=dotted];
m2_120 -> m2_121  [key=0, style=solid];
m2_115 -> m2_116  [key=0, style=solid];
m2_117 -> m2_115  [color=blue, key=0, style=bold];
m2_122 -> m2_120  [color=blue, key=0, style=bold];
m2_129 -> m2_130  [key=0, style=solid];
m2_130 -> m2_128  [color=blue, key=0, style=bold];
m2_65 -> m2_65  [color=darkorchid, key=3, label="method methodReturn object NormalizeValue", style=bold];
m2_134 -> m2_131  [color=darkorchid, key=3, label="Parameter variable CommandLine.UnParserSettings settings", style=bold];
m2_101 -> m2_111  [key=0, style=solid];
m2_101 -> m2_112  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_101 -> m2_87  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_101 -> m2_94  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_111 -> m2_112  [key=0, style=solid];
m2_111 -> m2_116  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_111 -> m2_121  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m2_111 -> m2_111  [color=darkorchid, key=3, label="Local variable System.Func<string, string> doubQt", style=bold];
m2_112 -> m2_113  [key=0, style=solid];
m2_112 -> m2_114  [key=2, style=dotted];
m2_112 -> m2_39  [key=2, style=dotted];
m2_112 -> m2_120  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_113 -> m2_101  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_10 -> m2_7  [color=darkorchid, key=3, label="Parameter variable T options", style=bold];
m2_10 -> m2_8  [color=darkorchid, key=3, label="Parameter variable System.Action<CommandLine.UnParserSettings> configuration", style=bold];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_17  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m2_13 -> m2_19  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_13 -> m2_22  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_13 -> m2_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_35  [key=2, style=dotted];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_36  [key=2, style=dotted];
m2_19 -> m2_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_19 -> m2_22  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_40  [key=2, style=dotted];
m2_22 -> m2_41  [key=2, style=dotted];
m2_22 -> m2_42  [key=2, style=dotted];
m2_22 -> m2_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_22 -> m2_22  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_22 -> m2_26  [color=darkseagreen4, key=1, label=specs, style=dashed];
m2_15 -> m2_33  [key=0, style=solid];
m2_15 -> m2_34  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_3  [key=2, style=dotted];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_16 -> m2_25  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_16 -> m2_27  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_16 -> m2_29  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_16 -> m2_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_18 -> m2_19  [key=0, style=solid];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_43  [key=2, style=dotted];
m2_25 -> m2_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_28  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m2_25 -> m2_29  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_45  [key=2, style=dotted];
m2_27 -> m2_46  [key=2, style=dotted];
m2_27 -> m2_47  [key=2, style=dotted];
m2_27 -> m2_48  [key=2, style=dotted];
m2_27 -> m2_49  [key=2, style=dotted];
m2_27 -> m2_50  [key=2, style=dotted];
m2_27 -> m2_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_27 -> m2_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_27 -> m2_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_27 -> m2_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_27 -> m2_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_27 -> m2_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_27 -> m2_84  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_27 -> m2_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_53  [key=2, style=dotted];
m2_29 -> m2_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_37  [key=2, style=dotted];
m2_20 -> m2_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_38  [key=2, style=dotted];
m2_21 -> m2_39  [key=2, style=dotted];
m2_21 -> m2_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_43  [key=2, style=dotted];
m2_23 -> m2_44  [key=2, style=dotted];
m2_23 -> m2_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_23 -> m2_23  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_23 -> m2_25  [color=darkseagreen4, key=1, label=allOptSpecs, style=dashed];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_43  [key=2, style=dotted];
m2_26 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_26 -> m2_26  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_26 -> m2_30  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_26 -> m2_31  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_44  [key=2, style=dotted];
m2_24 -> m2_24  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_24 -> m2_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_24 -> m2_27  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_45  [key=2, style=dotted];
m2_28 -> m2_51  [key=2, style=dotted];
m2_28 -> m2_52  [key=2, style=dotted];
m2_30 -> m2_31  [key=0, style=solid];
m2_30 -> m2_45  [key=2, style=dotted];
m2_30 -> m2_51  [key=2, style=dotted];
m2_30 -> m2_52  [key=2, style=dotted];
m2_31 -> m2_32  [key=0, style=solid];
m2_31 -> m2_53  [key=2, style=dotted];
m2_31 -> m2_83  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_54  [key=2, style=dotted];
m2_32 -> m2_55  [key=2, style=dotted];
m2_33 -> m2_13  [color=blue, key=0, style=bold];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_37  [key=2, style=dotted];
m2_132 -> m2_134  [key=2, style=dotted];
m2_132 -> m2_50  [key=2, style=dotted];
m2_132 -> m2_87  [key=2, style=dotted];
m2_132 -> m2_135  [key=2, style=dotted];
m2_132 -> m2_54  [key=2, style=dotted];
m2_133 -> m2_131  [color=blue, key=0, style=bold];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_10  [color=darkorchid, key=3, label="method methodReturn string FormatCommandLine", style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_8 -> m2_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_7  [color=blue, key=0, style=bold];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_144  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_142 -> m2_145  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_143 -> m2_144  [key=0, style=solid];
m2_143 -> m2_145  [key=0, style=solid];
m2_143 -> m2_36  [key=2, style=dotted];
m2_143 -> m2_147  [key=2, style=dotted];
m2_143 -> m2_148  [key=2, style=dotted];
m2_144 -> m2_146  [key=0, style=solid];
m2_144 -> m2_149  [key=2, style=dotted];
m2_145 -> m2_146  [key=0, style=solid];
m2_146 -> m2_142  [color=blue, key=0, style=bold];
m2_165 -> m2_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_165 -> m2_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_165 -> m2_84  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_166 -> m2_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_167 -> m2_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_168 -> m2_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_169 -> m2_109  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_170 -> m2_121  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
}
