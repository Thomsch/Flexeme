digraph  {
n0 [label="Entry Ninject.Planning.IPlanner.GetPlan(System.Type)", span="40-40", cluster="Ninject.Planning.IPlanner.GetPlan(System.Type)"];
n1 [label="Exit Ninject.Planning.IPlanner.GetPlan(System.Type)", span="40-40", cluster="Ninject.Planning.IPlanner.GetPlan(System.Type)"];
d470 [label="return value.ToStringLocal();", span="910-910", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0];
d397 [label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="900-900", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)"];
d469 [label="asEnumerable == null", span="909-909", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0];
d475 [label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="900-900", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)"];
d476 [label="Entry T.ToStringLocal<T>()", span="20-20", cluster="T.ToStringLocal<T>()"];
d468 [label="var asEnumerable = value as IEnumerable", span="908-908", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)"];
d471 [label="var builder = new StringBuilder()", span="912-912", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0];
d472 [label=asEnumerable, span="913-913", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0];
d473 [label="builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="914-916", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0];
d474 [label="return builder.Length > 0 ? builder.ToString(0, builder.Length - 1) : string.Empty;", span="918-918", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", color=green, community=0];
d478 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()"];
d222 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
d479 [label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0", cluster="System.Text.StringBuilder.ToString(int, int)"];
d395 [label="optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="744-744", cluster="lambda expression"];
d464 [label="value is bool", span="902-902", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)"];
d465 [label="return value.ToStringLocal().ToLowerInvariant();", span="903-903", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)"];
d466 [label="value is string", span="905-905", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)"];
d467 [label="return value.ToStringLocal();", span="906-906", cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)"];
d357 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="743-744", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d210 [label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d250 [label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d266 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595", cluster="CommandLine.Text.HelpText.ToString()"];
d285 [label="builder.Append(words[i])", span="614-614", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d288 [label="builder.Append('' '')", span="618-618", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d291 [label="builder.Append(words[i].Substring(0, maximumLength))", span="624-624", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d297 [label="builder.Append(value)", span="636-636", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d351 [label="optionsHelp.Append(''  '')", span="727-727", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d387 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="731-731", cluster="lambda expression"];
d391 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="732-732", cluster="lambda expression"];
d353 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="734-736", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d372 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="769-769", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d378 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="784-787", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d366 [label="optionsHelp.Append(words[i])", span="759-759", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d369 [label="optionsHelp.Append('' '')", span="763-763", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d490 [label=optionHelpText, span=""];
d394 [label="Entry lambda expression", span="744-744", cluster="lambda expression"];
d396 [label="Exit lambda expression", span="744-744", cluster="lambda expression"];
d383 [label="Entry string.FormatInvariant(params object[])", span="25-25", cluster="string.FormatInvariant(params object[])"];
d477 [label="Entry string.ToLowerInvariant()", span="0-0", cluster="string.ToLowerInvariant()"];
d343 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="725-725", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d354 [label="var optionHelpText = specification.HelpText", span="738-738", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d355 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="740-740", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d356 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="741-741", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d358 [label="specification.Required", span="746-746", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d52 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)"];
d359 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="747-747", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d360 [label="!string.IsNullOrEmpty(optionHelpText)", span="749-749", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d362 [label="var words = optionHelpText.Split(' ')", span="754-754", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d375 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="777-777", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d130 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d209 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d211 [label="yield return line.ToString();", span="495-495", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d219 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)"];
d220 [label="Entry int.Spaces()", span="35-35", cluster="int.Spaces()"];
d221 [label="Entry Unk.formatError", span="", cluster="Unk.formatError"];
d245 [label="var example = mapperFunc(e)", span="554-554", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d243 [label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d249 [label=styles, span="559-559", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d251 [label="yield return commandLine.ToString();", span="571-571", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d257 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)"];
d259 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)"];
d260 [label="Entry lambda expression", span="565-570", cluster="lambda expression"];
d480 [label="CommandLine.Text.HelpText", span=""];
d265 [label="int ExtraLength = 10", span="582-582", cluster="CommandLine.Text.HelpText.ToString()"];
d267 [label="Exit CommandLine.Text.HelpText.ToString()", span="580-580", cluster="CommandLine.Text.HelpText.ToString()"];
d24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)"];
d268 [label="Entry string.SafeLength()", span="45-45", cluster="string.SafeLength()"];
d269 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()"];
d270 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d271 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])"];
d223 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
d272 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()"];
d278 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="603-603", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d281 [label="var words = value.Split(' ')", span="609-609", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d284 [label="words[i].Length < (maximumLength - wordBuffer)", span="612-612", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d282 [label="var i = 0", span="610-610", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d286 [label="wordBuffer += words[i].Length", span="615-615", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d287 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="616-616", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d289 [label="wordBuffer++", span="619-619", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d290 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="622-622", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d292 [label="wordBuffer = maximumLength", span="625-625", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d300 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
d294 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="631-631", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d296 [label="value.Length > maximumLength", span="634-634", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d298 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="603-603", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d352 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="728-732", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d488 [label=int, span=""];
d489 [label="CommandLine.Core.Specification", span=""];
d386 [label="Entry lambda expression", span="731-731", cluster="lambda expression"];
d388 [label="Exit lambda expression", span="731-731", cluster="lambda expression"];
d389 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="792-792", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
d390 [label="Entry lambda expression", span="732-732", cluster="lambda expression"];
d392 [label="Exit lambda expression", span="732-732", cluster="lambda expression"];
d393 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="812-812", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
d382 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)"];
d371 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="767-767", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d363 [label="var i = 0", span="755-755", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d373 [label="wordBuffer = widthOfHelpText", span="770-770", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d377 [label="optionHelpText.Length > widthOfHelpText", span="781-781", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d379 [label="return this;", span="789-789", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d365 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="757-757", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d367 [label="wordBuffer += words[i].Length", span="760-760", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d368 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="761-761", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d370 [label="wordBuffer++", span="764-764", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d341 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="693-693", cluster="lambda expression"];
d361 [label="var wordBuffer = 0", span="753-753", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d380 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="725-725", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d376 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="778-779", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d333 [label="var maxLength = GetMaxLength(specifications)", span="685-685", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d336 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="691-693", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d335 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="689-689", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d49 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
d203 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)"];
d32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d39 [label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d40 [label="usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d299 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
d364 [label="i < words.Length", span="755-755", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d301 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)"];
d302 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
d384 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
d124 [label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d201 [label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d217 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d204 [label="parserResult == null", span="483-483", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d208 [label="yield break;", span="488-488", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d216 [label="yield return line;", span="506-506", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d206 [label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="485-486", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d212 [label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d207 [label="meaningfulErrors.Empty()", span="487-487", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d218 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
d224 [label="Entry lambda expression", span="491-491", cluster="lambda expression"];
d246 [label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d53 [label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d244 [label=examples, span="552-552", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d50 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
d248 [label="var styles = example.GetFormatStylesOrDefault()", span="558-558", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d241 [label="var usageTuple = usage.FromJust()", span="548-548", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d242 [label="var examples = usageTuple.Item2", span="549-549", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d256 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()"];
d261 [label="config.PreferShortName = s.PreferShortName", span="567-567", cluster="lambda expression"];
d262 [label="config.GroupSwitches = s.GroupSwitches", span="568-568", cluster="lambda expression"];
d263 [label="config.UseEqualToken = s.UseEqualToken", span="569-569", cluster="lambda expression"];
d264 [label="Exit lambda expression", span="565-570", cluster="lambda expression"];
d17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d19 [label="this.sentenceBuilder = sentenceBuilder", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d20 [label="this.heading = heading", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d21 [label="this.copyright = copyright", span="106-106", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d136 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
d140 [label="return AddLine(postOptionsHelp, value);", span="335-335", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
d143 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="345-345", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d148 [label="AddPreOptionsLine(line)", span="345-345", cluster="lambda expression"];
d144 [label="return this;", span="346-346", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d151 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="356-356", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d155 [label="AddPostOptionsLine(line)", span="356-356", cluster="lambda expression"];
d152 [label="return this;", span="357-357", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d159 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="368-368", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
d164 [label="AddPreOptionsLine(line)", span="368-368", cluster="lambda expression"];
d160 [label="return this;", span="369-369", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
d168 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="380-380", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
d172 [label="AddPostOptionsLine(line)", span="380-380", cluster="lambda expression"];
d169 [label="return this;", span="381-381", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
d176 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
d184 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d191 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
d198 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d304 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="642-644", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
d328 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="670-677", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
d334 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="687-687", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d337 [label="return this;", span="695-695", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d344 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="700-705", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
d346 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="710-715", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
d348 [label="AddLine(preOptionsHelp, value, maximumLength)", span="720-720", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
d349 [label="return this;", span="722-722", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
d398 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="794-809", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
d402 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="798-802", cluster="lambda expression"];
d408 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="805-808", cluster="lambda expression"];
d419 [label="AddLine(builder, value, MaximumDisplayWidth)", span="826-826", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
d420 [label="return this;", span="828-828", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
d422 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="833-841", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
d426 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="836-838", cluster="lambda expression"];
d440 [label=AddDashesToOption, span="859-859", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d445 [label=AddDashesToOption, span="868-868", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d135 [label="Entry CommandLine.Text.HelpText.ToString()", span="580-580", cluster="CommandLine.Text.HelpText.ToString()"];
d410 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="814-821", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
d279 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="605-605", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d295 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="632-632", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d247 [label="yield return exampleText.ToString();", span="557-557", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d280 [label="var wordBuffer = 0", span="608-608", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d142 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="824-824", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
d138 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="718-718", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
d283 [label="i < words.Length", span="610-610", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d293 [label="i++", span="610-610", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
d381 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)"];
d399 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="792-792", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
d411 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="812-812", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
d413 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="817-817", cluster="lambda expression"];
d417 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="818-818", cluster="lambda expression"];
d374 [label="i++", span="755-755", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
d485 [label=string, span=""];
d486 [label=maxLength, span=""];
d487 [label=remainingSpace, span=""];
d179 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="680-680", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d340 [label="Entry lambda expression", span="692-693", cluster="lambda expression"];
d342 [label="Exit lambda expression", span="692-693", cluster="lambda expression"];
d385 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
d339 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="831-831", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
d146 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)"];
d41 [label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d30 [label="FilterMeaningfulErrors(errors).Any()", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d234 [label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d31 [label="auto = onError(auto)", span="216-216", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d33 [label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d51 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()"];
d62 [label="Entry lambda expression", span="220-220", cluster="lambda expression"];
d38 [label="auto.AddPreOptionsLine(heading)", span="229-229", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d35 [label="usageAttr.IsJust() || usageLines.IsJust()", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d37 [label="heading.Length > 0", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d66 [label="Entry lambda expression", span="233-233", cluster="lambda expression"];
d34 [label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d72 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d69 [label="Entry lambda expression", span="236-236", cluster="lambda expression"];
d102 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d122 [label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="290-290", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d125 [label="errors.Empty()", span="297-297", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d127 [label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d200 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d202 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d205 [label="throw new ArgumentNullException(''parserResult'');", span="483-483", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d213 [label="mutuallyErrs.Length > 0", span="501-501", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d215 [label=lines, span="505-505", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d48 [label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="598-598", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
d89 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()"];
d214 [label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
d129 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()"];
d273 [label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="600-600", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
d226 [label="Exit lambda expression", span="491-491", cluster="lambda expression"];
d225 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491", cluster="lambda expression"];
d252 [label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d236 [label="parserResult == null", span="542-542", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d240 [label="yield break;", span="546-546", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d238 [label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d230 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d258 [label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124", cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()"];
d239 [label="usage.MatchNothing()", span="545-545", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d255 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()"];
d484 [label=s, span=""];
d15 [label="copyright == null", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d57 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
d137 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
d139 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
d141 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
d147 [label="Entry lambda expression", span="345-345", cluster="lambda expression"];
d149 [label="Exit lambda expression", span="345-345", cluster="lambda expression"];
d145 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d150 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d154 [label="Entry lambda expression", span="356-356", cluster="lambda expression"];
d156 [label="Exit lambda expression", span="356-356", cluster="lambda expression"];
d153 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)"];
d158 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
d163 [label="Entry lambda expression", span="368-368", cluster="lambda expression"];
d165 [label="Exit lambda expression", span="368-368", cluster="lambda expression"];
d161 [label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
d167 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
d171 [label="Entry lambda expression", span="380-380", cluster="lambda expression"];
d173 [label="Exit lambda expression", span="380-380", cluster="lambda expression"];
d170 [label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
d61 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
d174 [label="result == null", span="391-391", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
d177 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
d178 [label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="639-639", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
d56 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
d60 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d182 [label="types.Length == 0", span="408-408", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d185 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d187 [label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="668-668", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
d188 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
d189 [label="result == null", span="424-424", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
d192 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
d193 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d196 [label="types.Length == 0", span="442-442", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d199 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d303 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="641-641", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
d305 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="645-647", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
d309 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="698-698", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
d310 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="708-708", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
d311 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
d306 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="648-650", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
d329 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="668-668", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
d330 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)"];
d331 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)"];
d332 [label="Entry Unk.Concat", span="", cluster="Unk.Concat"];
d338 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="680-680", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
d345 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="698-698", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
d347 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="708-708", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
d350 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="718-718", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
d400 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)"];
d401 [label="Entry lambda expression", span="798-802", cluster="lambda expression"];
d407 [label="Entry lambda expression", span="805-808", cluster="lambda expression"];
d491 [label="CommandLine.Core.OptionSpecification", span=""];
d403 [label="Exit lambda expression", span="798-802", cluster="lambda expression"];
d404 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])"];
d405 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)"];
d406 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])"];
d409 [label="Exit lambda expression", span="805-808", cluster="lambda expression"];
d421 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="824-824", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
d429 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="845-845", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d430 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="880-880", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d423 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="831-831", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
d424 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate"];
d425 [label="Entry lambda expression", span="834-841", cluster="lambda expression"];
d427 [label="return Math.Max(length, specLength);", span="840-840", cluster="lambda expression"];
d439 [label="++specLength", span="858-858", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d441 [label="++specLength", span="860-860", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d442 [label="specLength += metaLength", span="862-862", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d444 [label="specLength += spec.LongName.Length", span="867-867", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d446 [label="specLength += 2", span="869-869", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d447 [label="specLength += metaLength", span="871-871", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d132 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
d133 [label="return info.ToString();", span="313-313", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
d412 [label="Entry lambda expression", span="817-817", cluster="lambda expression"];
d416 [label="Entry lambda expression", span="818-818", cluster="lambda expression"];
d432 [label="var specLength = 0", span="847-847", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d435 [label="var metaLength = 0", span="852-852", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d452 [label="var specLength = 0", span="882-882", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d454 [label="var metaLength = 0", span="886-886", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d492 [label="CommandLine.Core.ValueSpecification", span=""];
d414 [label="Exit lambda expression", span="817-817", cluster="lambda expression"];
d415 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)"];
d418 [label="Exit lambda expression", span="818-818", cluster="lambda expression"];
d25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d27 [label="var errors = Enumerable.Empty<Error>()", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d42 [label="auto.AddDashesToOption = false", span="241-241", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d44 [label="auto.AddOptions(parserResult)", span="245-245", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d58 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
d73 [label="Entry lambda expression", span="239-239", cluster="lambda expression"];
d235 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()"];
d63 [label="license.AddToHelpText(auto, true)", span="220-220", cluster="lambda expression"];
d36 [label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d67 [label="usage.AddToHelpText(auto, true)", span="233-233", cluster="lambda expression"];
d70 [label="auto.AddPreOptionsLines(lines)", span="236-236", cluster="lambda expression"];
d43 [label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d45 [label="return auto;", span="247-247", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d64 [label="Exit lambda expression", span="220-220", cluster="lambda expression"];
d55 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326", cluster="CSharpx.Maybe<T>.IsJust<T>()"];
d68 [label="Exit lambda expression", span="233-233", cluster="lambda expression"];
d54 [label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331", cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()"];
d71 [label="Exit lambda expression", span="236-236", cluster="lambda expression"];
d100 [label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271", cluster="lambda expression"];
d113 [label="DefaultParsingErrorsHandler(parserResult, current)", span="277-277", cluster="lambda expression"];
d107 [label="DefaultParsingErrorsHandler(pr, current)", span="276-276", cluster="lambda expression"];
d128 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d118 [label="parserResult == null", span="287-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d120 [label="current == null", span="288-288", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d123 [label="return current;", span="291-291", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d126 [label="return current;", span="298-298", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d76 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d85 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d83 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d86 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d131 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)"];
d23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d274 [label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="598-598", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
d84 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d162 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)"];
d275 [label="Entry lambda expression", span="600-600", cluster="lambda expression"];
d237 [label="throw new ArgumentNullException(''parserResult'');", span="542-542", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
d253 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="653-653", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
d227 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)"];
d228 [label="return RenderUsageText(parserResult, example => example);", span="518-518", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)"];
d254 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()"];
d13 [label="heading == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d16 [label="throw new ArgumentNullException(''copyright'');", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d11 [label="sentenceBuilder == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d14 [label="throw new ArgumentNullException(''heading'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
d81 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d157 [label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
d166 [label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
d175 [label="throw new ArgumentNullException(''result'');", span="391-391", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
d307 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="639-639", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
d180 [label="types == null", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d183 [label="throw new ArgumentOutOfRangeException(''types'');", span="408-408", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d181 [label="throw new ArgumentNullException(''types'');", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
d190 [label="throw new ArgumentNullException(''result'');", span="424-424", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
d194 [label="types == null", span="441-441", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d197 [label="throw new ArgumentOutOfRangeException(''types'');", span="442-442", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d195 [label="throw new ArgumentNullException(''types'');", span="441-441", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
d308 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)"];
d312 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)"];
d313 [label="Entry lambda expression", span="647-647", cluster="lambda expression"];
d47 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
d451 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="845-845", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d433 [label="var hasShort = spec.ShortName.Length > 0", span="849-849", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d434 [label="var hasLong = spec.LongName.Length > 0", span="850-850", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d436 [label="spec.MetaValue.Length > 0", span="853-853", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d437 [label="metaLength = spec.MetaValue.Length + 1", span="854-854", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d462 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="880-880", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d453 [label="var hasMeta = spec.MetaName.Length > 0", span="884-884", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d455 [label="spec.MetaValue.Length > 0", span="887-887", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d456 [label="metaLength = spec.MetaValue.Length + 1", span="888-888", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d458 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="891-891", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d459 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="893-893", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d428 [label="Exit lambda expression", span="834-841", cluster="lambda expression"];
d431 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)"];
d438 [label=hasShort, span="856-856", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d443 [label=hasLong, span="865-865", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d449 [label="specLength += 2", span="875-875", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d450 [label="return specLength;", span="877-877", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d448 [label="hasShort && hasLong", span="874-874", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
d134 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
d460 [label="specLength += metaLength", span="895-895", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d46 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
d80 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d82 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d75 [label="Exit lambda expression", span="239-239", cluster="lambda expression"];
d74 [label="e.Tag == ErrorType.NoVerbSelectedError", span="239-239", cluster="lambda expression"];
d1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()"];
d481 [label=auto, span=""];
d65 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)"];
d59 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
d482 [label="CommandLine.ParserResult<T>", span=""];
d99 [label="Entry lambda expression", span="271-271", cluster="lambda expression"];
d101 [label="Exit lambda expression", span="271-271", cluster="lambda expression"];
d112 [label="Entry lambda expression", span="277-277", cluster="lambda expression"];
d114 [label="Exit lambda expression", span="277-277", cluster="lambda expression"];
d483 [label=pr, span=""];
d106 [label="Entry lambda expression", span="276-276", cluster="lambda expression"];
d108 [label="Exit lambda expression", span="276-276", cluster="lambda expression"];
d119 [label="throw new ArgumentNullException(''parserResult'');", span="287-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d121 [label="throw new ArgumentNullException(''current'');", span="288-288", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
d87 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d77 [label="parserResult.Tag != ParserResultType.NotParsed", span="262-262", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d79 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d91 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
d92 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)"];
d103 [label="Entry lambda expression", span="271-271", cluster="lambda expression"];
d109 [label="Entry lambda expression", span="276-276", cluster="lambda expression"];
d115 [label="Entry lambda expression", span="277-277", cluster="lambda expression"];
d90 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()"];
d277 [label="Exit lambda expression", span="600-600", cluster="lambda expression"];
d276 [label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="600-600", cluster="lambda expression"];
d317 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="653-653", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
d316 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="655-665", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
d229 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)"];
d231 [label="Entry lambda expression", span="518-518", cluster="lambda expression"];
d4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)"];
d186 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
d315 [label="Exit lambda expression", span="647-647", cluster="lambda expression"];
d314 [label="v.Index", span="647-647", cluster="lambda expression"];
d461 [label="return specLength;", span="897-897", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d457 [label=hasMeta, span="890-890", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d463 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()"];
d93 [label="Entry lambda expression", span="267-267", cluster="lambda expression"];
d96 [label="Entry lambda expression", span="270-270", cluster="lambda expression"];
d78 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
d105 [label="Exit lambda expression", span="271-271", cluster="lambda expression"];
d104 [label=e, span="271-271", cluster="lambda expression"];
d111 [label="Exit lambda expression", span="276-276", cluster="lambda expression"];
d110 [label=e, span="276-276", cluster="lambda expression"];
d117 [label="Exit lambda expression", span="277-277", cluster="lambda expression"];
d116 [label=e, span="277-277", cluster="lambda expression"];
d318 [label="Entry System.Type.GetUsageData()", span="38-38", cluster="System.Type.GetUsageData()"];
d319 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)"];
d320 [label="Entry lambda expression", span="656-665", cluster="lambda expression"];
d233 [label="Exit lambda expression", span="518-518", cluster="lambda expression"];
d232 [label=example, span="518-518", cluster="lambda expression"];
d5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)"];
d95 [label="Exit lambda expression", span="267-267", cluster="lambda expression"];
d94 [label="e.Tag == ErrorType.VersionRequestedError", span="267-267", cluster="lambda expression"];
d98 [label="Exit lambda expression", span="270-270", cluster="lambda expression"];
d97 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="270-270", cluster="lambda expression"];
d88 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
d325 [label="Exit lambda expression", span="656-665", cluster="lambda expression"];
d321 [label="var prop = tuple.Item1", span="658-658", cluster="lambda expression"];
d322 [label="var attr = tuple.Item2", span="659-659", cluster="lambda expression"];
d324 [label="return Tuple.Create(attr, examples);", span="664-664", cluster="lambda expression"];
d323 [label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="661-662", cluster="lambda expression"];
d327 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)"];
d326 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)"];
m0_24 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="40-40", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="InstanceBuilder.cs"];
m0_25 [label="return rules.SelectMany(rule => rule(specProps));", span="45-45", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="InstanceBuilder.cs"];
m0_26 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", span="40-40", cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Infrastructure.Maybe<CommandLine.Error>>>>)", file="InstanceBuilder.cs"];
m0_0 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="InstanceBuilder.cs"];
m0_1 [label="newSpecification == null", span="13-13", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="InstanceBuilder.cs"];
m0_3 [label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="15-15", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="InstanceBuilder.cs"];
m0_2 [label="throw new ArgumentNullException(''newSpecification'');", span="13-13", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="InstanceBuilder.cs"];
m0_4 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="InstanceBuilder.cs"];
m0_12 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="InstanceBuilder.cs"];
m0_13 [label="specProp.Specification.ConversionType.ToDescriptorKind()", span="27-27", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="InstanceBuilder.cs"];
m0_15 [label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="30-34", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", color=red, community=0, file="InstanceBuilder.cs"];
m0_16 [label="return specProp.Property.PropertyType;", span="36-36", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="InstanceBuilder.cs"];
m0_14 [label="TypeDescriptorKind.Sequence", span="29-29", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="InstanceBuilder.cs"];
m0_17 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25", cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="InstanceBuilder.cs"];
m0_23 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="137-137", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="InstanceBuilder.cs"];
m0_18 [label="Entry System.Type.ToDescriptorKind()", span="22-22", cluster="System.Type.ToDescriptorKind()", file="InstanceBuilder.cs"];
m0_6 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs"];
m0_7 [label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs"];
m0_8 [label="newValue == null", span="20-20", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs"];
m0_10 [label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="22-22", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs"];
m0_9 [label="throw new ArgumentNullException(''newValue'');", span="20-20", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs"];
m0_11 [label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CommandLine.Infrastructure.Maybe<object>)", file="InstanceBuilder.cs"];
m0_19 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="InstanceBuilder.cs"];
m0_21 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="InstanceBuilder.cs"];
m0_27 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="InstanceBuilder.cs"];
m0_28 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="InstanceBuilder.cs"];
m0_29 [label="rule(specProps)", span="45-45", cluster="lambda expression", file="InstanceBuilder.cs"];
m0_30 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="InstanceBuilder.cs"];
m0_22 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InstanceBuilder.cs"];
m0_20 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="InstanceBuilder.cs"];
m0_31 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceBuilder.cs"];
m0_32 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span="", file="InstanceBuilder.cs"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
d470 -> d475  [key=0, style=solid, color=green];
d470 -> d476  [key=2, style=dotted, color=green];
d397 -> d470  [key=1, style=dashed, color=green, label=T];
d397 -> d464  [key=0, style=solid];
d397 -> d465  [key=1, style=dashed, color=darkseagreen4, label=T];
d397 -> d466  [key=1, style=dashed, color=darkseagreen4, label=T];
d397 -> d467  [key=1, style=dashed, color=darkseagreen4, label=T];
d397 -> d468  [key=1, style=dashed, color=darkseagreen4, label=T];
d397 -> d357  [key=3, color=darkorchid, style=bold, label="Parameter variable T value"];
d469 -> d470  [key=0, style=solid, color=green];
d469 -> d471  [key=0, style=solid, color=green];
d475 -> d397  [key=0, style=bold, color=blue];
d476 -> d476  [key=3, color=darkorchid, style=bold, label="Field variable int BuilderCapacity"];
d468 -> d469  [key=0, style=solid, color=green];
d468 -> d472  [key=1, style=dashed, color=green, label=asEnumerable];
d471 -> d472  [key=0, style=solid, color=green];
d471 -> d478  [key=2, style=dotted, color=green];
d471 -> d473  [key=1, style=dashed, color=green, label=builder];
d471 -> d474  [key=1, style=dashed, color=green, label=builder];
d472 -> d473  [key=0, style=solid, color=green];
d472 -> d474  [key=0, style=solid, color=green];
d473 -> d472  [key=0, style=solid, color=green];
d473 -> d476  [key=2, style=dotted, color=green];
d473 -> d222  [key=2, style=dotted, color=green];
d474 -> d475  [key=0, style=solid, color=green];
d474 -> d479  [key=2, style=dotted, color=green];
d395 -> d397  [key=2, style=dotted];
d395 -> d395  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d395 -> d396  [key=0, style=solid];
d395 -> d383  [key=2, style=dotted];
d464 -> d465  [key=0, style=solid];
d464 -> d466  [key=0, style=solid];
d465 -> d475  [key=0, style=solid];
d465 -> d476  [key=2, style=dotted];
d465 -> d477  [key=2, style=dotted];
d466 -> d468  [key=0, style=solid];
d466 -> d467  [key=0, style=solid];
d467 -> d475  [key=0, style=solid];
d467 -> d476  [key=2, style=dotted];
d357 -> d395  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d357 -> d358  [key=0, style=solid];
d357 -> d52  [key=2, style=dotted];
d357 -> d394  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d357 -> d359  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d357 -> d360  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d357 -> d362  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d357 -> d375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d357 -> d378  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d210 -> d222  [key=2, style=dotted];
d210 -> d211  [key=0, style=solid];
d210 -> d219  [key=2, style=dotted];
d210 -> d220  [key=2, style=dotted];
d210 -> d221  [key=2, style=dotted];
d250 -> d222  [key=2, style=dotted];
d250 -> d251  [key=0, style=solid];
d250 -> d219  [key=2, style=dotted];
d250 -> d220  [key=2, style=dotted];
d250 -> d257  [key=2, style=dotted];
d250 -> d259  [key=2, style=dotted];
d250 -> d260  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d266 -> d222  [key=2, style=dotted];
d266 -> d267  [key=0, style=solid];
d266 -> d24  [key=2, style=dotted];
d266 -> d268  [key=2, style=dotted];
d266 -> d269  [key=2, style=dotted];
d266 -> d270  [key=2, style=dotted];
d266 -> d271  [key=2, style=dotted];
d266 -> d223  [key=2, style=dotted];
d266 -> d272  [key=2, style=dotted];
d285 -> d222  [key=2, style=dotted];
d285 -> d286  [key=0, style=solid];
d288 -> d222  [key=2, style=dotted];
d288 -> d289  [key=0, style=solid];
d291 -> d222  [key=2, style=dotted];
d291 -> d292  [key=0, style=solid];
d291 -> d300  [key=2, style=dotted];
d297 -> d222  [key=2, style=dotted];
d297 -> d298  [key=0, style=solid];
d351 -> d222  [key=2, style=dotted];
d351 -> d352  [key=0, style=solid];
d387 -> d222  [key=2, style=dotted];
d387 -> d388  [key=0, style=solid];
d387 -> d389  [key=2, style=dotted];
d391 -> d222  [key=2, style=dotted];
d391 -> d392  [key=0, style=solid];
d391 -> d393  [key=2, style=dotted];
d353 -> d222  [key=2, style=dotted];
d353 -> d354  [key=0, style=solid];
d353 -> d223  [key=2, style=dotted];
d353 -> d382  [key=2, style=dotted];
d372 -> d222  [key=2, style=dotted];
d372 -> d373  [key=0, style=solid];
d372 -> d300  [key=2, style=dotted];
d378 -> d222  [key=2, style=dotted];
d378 -> d379  [key=0, style=solid];
d378 -> d271  [key=2, style=dotted];
d366 -> d222  [key=2, style=dotted];
d366 -> d367  [key=0, style=solid];
d369 -> d222  [key=2, style=dotted];
d369 -> d370  [key=0, style=solid];
d490 -> d395  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d394 -> d395  [key=0, style=solid];
d396 -> d394  [key=0, style=bold, color=blue];
d343 -> d357  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d343 -> d351  [key=0, style=solid];
d343 -> d387  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d391  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d353  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d372  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d352  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d343 -> d355  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d343 -> d356  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d343 -> d358  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d343 -> d359  [key=1, style=dashed, color=darkseagreen4, label=string];
d343 -> d365  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d368  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d371  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d373  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d376  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d377  [key=1, style=dashed, color=darkseagreen4, label=int];
d343 -> d333  [key=3, color=darkorchid, style=bold, label="Parameter variable int maxLength"];
d343 -> d336  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.Specification specification"];
d343 -> d335  [key=3, color=darkorchid, style=bold, label="Parameter variable int widthOfHelpText"];
d354 -> d357  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d354 -> d355  [key=0, style=solid];
d354 -> d356  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d355 -> d357  [key=0, style=solid];
d355 -> d356  [key=0, style=solid];
d355 -> d49  [key=2, style=dotted];
d356 -> d357  [key=0, style=solid];
d356 -> d356  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d356 -> d203  [key=2, style=dotted];
d358 -> d359  [key=0, style=solid];
d358 -> d360  [key=0, style=solid];
d359 -> d378  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d359 -> d383  [key=2, style=dotted];
d359 -> d359  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d359 -> d360  [key=0, style=solid];
d359 -> d362  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d359 -> d375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d360 -> d378  [key=0, style=solid];
d360 -> d361  [key=0, style=solid];
d360 -> d270  [key=2, style=dotted];
d362 -> d372  [key=1, style=dashed, color=darkseagreen4, label=words];
d362 -> d366  [key=1, style=dashed, color=darkseagreen4, label=words];
d362 -> d363  [key=0, style=solid];
d362 -> d299  [key=2, style=dotted];
d362 -> d364  [key=1, style=dashed, color=darkseagreen4, label=words];
d362 -> d365  [key=1, style=dashed, color=darkseagreen4, label=words];
d362 -> d367  [key=1, style=dashed, color=darkseagreen4, label=words];
d362 -> d368  [key=1, style=dashed, color=darkseagreen4, label=words];
d362 -> d371  [key=1, style=dashed, color=darkseagreen4, label=words];
d375 -> d378  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d375 -> d375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d375 -> d376  [key=0, style=solid];
d375 -> d301  [key=2, style=dotted];
d375 -> d302  [key=2, style=dotted];
d375 -> d384  [key=2, style=dotted];
d375 -> d377  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
d130 -> d210  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
d130 -> d204  [key=0, style=solid];
d130 -> d208  [key=0, style=bold, color=crimson];
d130 -> d211  [key=0, style=bold, color=crimson];
d130 -> d216  [key=0, style=bold, color=crimson];
d130 -> d206  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d130 -> d212  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
d209 -> d210  [key=0, style=solid];
d209 -> d212  [key=0, style=solid];
d209 -> d218  [key=2, style=dotted];
d209 -> d224  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d211 -> d209  [key=0, style=solid];
d211 -> d223  [key=2, style=dotted];
d245 -> d250  [key=1, style=dashed, color=darkseagreen4, label=example];
d245 -> d246  [key=0, style=solid];
d245 -> d50  [key=2, style=dotted];
d245 -> d248  [key=1, style=dashed, color=darkseagreen4, label=example];
d243 -> d250  [key=1, style=dashed, color=darkseagreen4, label=appAlias];
d243 -> d244  [key=0, style=solid];
d243 -> d256  [key=2, style=dotted];
d249 -> d250  [key=0, style=solid];
d249 -> d244  [key=0, style=solid];
d249 -> d261  [key=1, style=dashed, color=darkseagreen4, label=s];
d249 -> d262  [key=1, style=dashed, color=darkseagreen4, label=s];
d249 -> d263  [key=1, style=dashed, color=darkseagreen4, label=s];
d251 -> d249  [key=0, style=solid];
d251 -> d223  [key=2, style=dotted];
d260 -> d261  [key=0, style=solid];
d260 -> d262  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
d260 -> d263  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
d480 -> d266  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d351  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d387  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d391  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d353  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d372  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d378  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d366  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d369  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d355  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d140  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d148  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d144  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d151  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d155  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d152  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d159  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d164  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d160  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d168  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d172  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d169  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d184  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d191  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d198  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d304  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d328  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d333  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d334  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d336  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d341  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d337  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d344  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d346  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d348  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d349  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d352  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d376  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d379  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d398  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d402  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d408  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d419  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d420  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d422  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d426  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d440  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d480 -> d445  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d265 -> d266  [key=0, style=solid];
d265 -> d265  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
d267 -> d135  [key=0, style=bold, color=blue];
d278 -> d285  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d278 -> d288  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d278 -> d291  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d278 -> d297  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d278 -> d279  [key=0, style=solid];
d278 -> d281  [key=1, style=dashed, color=darkseagreen4, label=string];
d278 -> d284  [key=1, style=dashed, color=darkseagreen4, label=int];
d278 -> d287  [key=1, style=dashed, color=darkseagreen4, label=int];
d278 -> d290  [key=1, style=dashed, color=darkseagreen4, label=int];
d278 -> d292  [key=1, style=dashed, color=darkseagreen4, label=int];
d278 -> d294  [key=1, style=dashed, color=darkseagreen4, label=string];
d278 -> d295  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
d278 -> d296  [key=1, style=dashed, color=darkseagreen4, label=int];
d278 -> d142  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d278 -> d138  [key=3, color=darkorchid, style=bold, label="Parameter variable int maximumLength"];
d281 -> d285  [key=1, style=dashed, color=darkseagreen4, label=words];
d281 -> d291  [key=1, style=dashed, color=darkseagreen4, label=words];
d281 -> d282  [key=0, style=solid];
d281 -> d299  [key=2, style=dotted];
d281 -> d283  [key=1, style=dashed, color=darkseagreen4, label=words];
d281 -> d284  [key=1, style=dashed, color=darkseagreen4, label=words];
d281 -> d286  [key=1, style=dashed, color=darkseagreen4, label=words];
d281 -> d287  [key=1, style=dashed, color=darkseagreen4, label=words];
d281 -> d290  [key=1, style=dashed, color=darkseagreen4, label=words];
d284 -> d285  [key=0, style=solid];
d284 -> d290  [key=0, style=solid];
d282 -> d285  [key=1, style=dashed, color=darkseagreen4, label=i];
d282 -> d291  [key=1, style=dashed, color=darkseagreen4, label=i];
d282 -> d284  [key=1, style=dashed, color=darkseagreen4, label=i];
d282 -> d283  [key=0, style=solid];
d282 -> d286  [key=1, style=dashed, color=darkseagreen4, label=i];
d282 -> d287  [key=1, style=dashed, color=darkseagreen4, label=i];
d282 -> d290  [key=1, style=dashed, color=darkseagreen4, label=i];
d282 -> d293  [key=1, style=dashed, color=darkseagreen4, label=i];
d282 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d286 -> d286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d286 -> d287  [key=0, style=solid];
d286 -> d289  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d286 -> d294  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d287 -> d288  [key=0, style=solid];
d287 -> d293  [key=0, style=solid];
d289 -> d289  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d289 -> d293  [key=0, style=solid];
d289 -> d294  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d290 -> d291  [key=0, style=solid];
d290 -> d294  [key=0, style=solid];
d292 -> d294  [key=0, style=solid];
d294 -> d297  [key=1, style=dashed, color=darkseagreen4, label=string];
d294 -> d294  [key=1, style=dashed, color=darkseagreen4, label=string];
d294 -> d295  [key=0, style=solid];
d294 -> d301  [key=2, style=dotted];
d294 -> d302  [key=2, style=dotted];
d294 -> d296  [key=1, style=dashed, color=darkseagreen4, label=string];
d296 -> d297  [key=0, style=solid];
d296 -> d279  [key=0, style=solid];
d298 -> d278  [key=0, style=bold, color=blue];
d352 -> d353  [key=0, style=solid];
d352 -> d24  [key=2, style=dotted];
d352 -> d381  [key=2, style=dotted];
d352 -> d386  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d352 -> d390  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d488 -> d387  [key=1, style=dashed, color=darkseagreen4, label=int];
d488 -> d391  [key=1, style=dashed, color=darkseagreen4, label=int];
d489 -> d387  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d489 -> d391  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
d386 -> d387  [key=0, style=solid];
d388 -> d386  [key=0, style=bold, color=blue];
d389 -> d343  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
d389 -> d398  [key=0, style=solid];
d389 -> d402  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d389 -> d408  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d390 -> d391  [key=0, style=solid];
d392 -> d390  [key=0, style=bold, color=blue];
d393 -> d343  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification specification"];
d393 -> d410  [key=0, style=solid];
d393 -> d413  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d393 -> d417  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d371 -> d372  [key=0, style=solid];
d371 -> d375  [key=0, style=solid];
d363 -> d372  [key=1, style=dashed, color=darkseagreen4, label=i];
d363 -> d366  [key=1, style=dashed, color=darkseagreen4, label=i];
d363 -> d371  [key=1, style=dashed, color=darkseagreen4, label=i];
d363 -> d364  [key=0, style=solid];
d363 -> d365  [key=1, style=dashed, color=darkseagreen4, label=i];
d363 -> d367  [key=1, style=dashed, color=darkseagreen4, label=i];
d363 -> d368  [key=1, style=dashed, color=darkseagreen4, label=i];
d363 -> d374  [key=1, style=dashed, color=darkseagreen4, label=i];
d363 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
d373 -> d375  [key=0, style=solid];
d377 -> d378  [key=0, style=solid];
d377 -> d360  [key=0, style=solid];
d379 -> d380  [key=0, style=solid];
d365 -> d366  [key=0, style=solid];
d365 -> d371  [key=0, style=solid];
d367 -> d375  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d367 -> d367  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d367 -> d368  [key=0, style=solid];
d367 -> d370  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d368 -> d369  [key=0, style=solid];
d368 -> d374  [key=0, style=solid];
d370 -> d375  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d370 -> d370  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d370 -> d374  [key=0, style=solid];
d341 -> d343  [key=2, style=dotted];
d341 -> d342  [key=0, style=solid];
d361 -> d343  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
d361 -> d362  [key=0, style=solid];
d361 -> d375  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d361 -> d371  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d361 -> d365  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d361 -> d367  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d361 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
d380 -> d343  [key=0, style=bold, color=blue];
d376 -> d271  [key=2, style=dotted];
d376 -> d377  [key=0, style=solid];
d376 -> d385  [key=2, style=dotted];
d333 -> d341  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
d333 -> d334  [key=0, style=solid];
d333 -> d339  [key=2, style=dotted];
d333 -> d335  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
d333 -> d336  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
d336 -> d337  [key=0, style=solid];
d336 -> d146  [key=2, style=dotted];
d336 -> d340  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d335 -> d341  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
d335 -> d336  [key=0, style=solid];
d32 -> d52  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d51  [key=2, style=dotted];
d32 -> d62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d39 -> d52  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d39 -> d66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d40 -> d52  [key=2, style=dotted];
d40 -> d41  [key=0, style=solid];
d40 -> d69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d364 -> d375  [key=0, style=solid];
d364 -> d365  [key=0, style=solid];
d124 -> d130  [key=2, style=dotted];
d124 -> d125  [key=0, style=solid];
d124 -> d127  [key=1, style=dashed, color=darkseagreen4, label=errors];
d201 -> d130  [key=2, style=dotted];
d201 -> d203  [key=2, style=dotted];
d201 -> d202  [key=0, style=solid];
d217 -> d130  [key=0, style=bold, color=blue];
d204 -> d205  [key=0, style=solid];
d204 -> d206  [key=0, style=solid];
d208 -> d209  [key=0, style=solid];
d216 -> d215  [key=0, style=solid];
d206 -> d209  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
d206 -> d207  [key=0, style=solid];
d206 -> d48  [key=2, style=dotted];
d206 -> d212  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
d212 -> d213  [key=0, style=solid];
d212 -> d89  [key=2, style=dotted];
d212 -> d50  [key=2, style=dotted];
d212 -> d214  [key=1, style=dashed, color=darkseagreen4, label=mutuallyErrs];
d207 -> d209  [key=0, style=solid];
d207 -> d208  [key=0, style=solid];
d207 -> d129  [key=2, style=dotted];
d224 -> d225  [key=0, style=solid];
d246 -> d219  [key=2, style=dotted];
d246 -> d257  [key=2, style=dotted];
d246 -> d247  [key=0, style=solid];
d53 -> d245  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>"];
d53 -> d251  [key=0, style=bold, color=crimson];
d53 -> d236  [key=0, style=solid];
d53 -> d240  [key=0, style=bold, color=crimson];
d53 -> d247  [key=0, style=bold, color=crimson];
d53 -> d238  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d53 -> d230  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
d244 -> d245  [key=0, style=solid];
d244 -> d252  [key=0, style=solid];
d248 -> d249  [key=0, style=solid];
d248 -> d258  [key=2, style=dotted];
d241 -> d243  [key=1, style=dashed, color=darkseagreen4, label=usageTuple];
d241 -> d242  [key=0, style=solid];
d241 -> d255  [key=2, style=dotted];
d242 -> d243  [key=0, style=solid];
d242 -> d244  [key=1, style=dashed, color=darkseagreen4, label=examples];
d261 -> d262  [key=0, style=solid];
d262 -> d263  [key=0, style=solid];
d263 -> d264  [key=0, style=solid];
d264 -> d260  [key=0, style=bold, color=blue];
d17 -> d24  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d18 -> d24  [key=2, style=dotted];
d18 -> d19  [key=0, style=solid];
d19 -> d20  [key=0, style=solid];
d20 -> d21  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d136 -> d137  [key=0, style=solid];
d136 -> d138  [key=2, style=dotted];
d140 -> d141  [key=0, style=solid];
d140 -> d142  [key=2, style=dotted];
d143 -> d144  [key=0, style=solid];
d143 -> d146  [key=2, style=dotted];
d143 -> d147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d148 -> d149  [key=0, style=solid];
d148 -> d57  [key=2, style=dotted];
d144 -> d145  [key=0, style=solid];
d151 -> d152  [key=0, style=solid];
d151 -> d146  [key=2, style=dotted];
d151 -> d154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d155 -> d156  [key=0, style=solid];
d155 -> d139  [key=2, style=dotted];
d152 -> d153  [key=0, style=solid];
d159 -> d160  [key=0, style=solid];
d159 -> d146  [key=2, style=dotted];
d159 -> d163  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d164 -> d165  [key=0, style=solid];
d164 -> d57  [key=2, style=dotted];
d160 -> d161  [key=0, style=solid];
d168 -> d169  [key=0, style=solid];
d168 -> d146  [key=2, style=dotted];
d168 -> d171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d172 -> d173  [key=0, style=solid];
d172 -> d139  [key=2, style=dotted];
d169 -> d170  [key=0, style=solid];
d176 -> d177  [key=0, style=solid];
d176 -> d178  [key=2, style=dotted];
d176 -> d56  [key=2, style=dotted];
d176 -> d179  [key=2, style=dotted];
d184 -> d185  [key=0, style=solid];
d184 -> d187  [key=2, style=dotted];
d184 -> d56  [key=2, style=dotted];
d184 -> d179  [key=2, style=dotted];
d191 -> d192  [key=0, style=solid];
d191 -> d178  [key=2, style=dotted];
d191 -> d56  [key=2, style=dotted];
d191 -> d179  [key=2, style=dotted];
d198 -> d199  [key=0, style=solid];
d198 -> d187  [key=2, style=dotted];
d198 -> d56  [key=2, style=dotted];
d198 -> d179  [key=2, style=dotted];
d304 -> d305  [key=0, style=solid];
d304 -> d89  [key=2, style=dotted];
d304 -> d309  [key=2, style=dotted];
d304 -> d310  [key=2, style=dotted];
d304 -> d311  [key=2, style=dotted];
d304 -> d306  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
d328 -> d328  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
d328 -> d329  [key=0, style=solid];
d328 -> d330  [key=2, style=dotted];
d328 -> d331  [key=2, style=dotted];
d328 -> d309  [key=2, style=dotted];
d328 -> d310  [key=2, style=dotted];
d328 -> d332  [key=2, style=dotted];
d334 -> d24  [key=2, style=dotted];
d334 -> d335  [key=0, style=solid];
d337 -> d338  [key=0, style=solid];
d344 -> d50  [key=2, style=dotted];
d344 -> d345  [key=0, style=solid];
d344 -> d331  [key=2, style=dotted];
d346 -> d50  [key=2, style=dotted];
d346 -> d347  [key=0, style=solid];
d346 -> d331  [key=2, style=dotted];
d348 -> d278  [key=2, style=dotted];
d348 -> d349  [key=0, style=solid];
d349 -> d350  [key=0, style=solid];
d398 -> d24  [key=2, style=dotted];
d398 -> d223  [key=2, style=dotted];
d398 -> d399  [key=0, style=solid];
d398 -> d400  [key=2, style=dotted];
d398 -> d401  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d398 -> d407  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d402 -> d271  [key=2, style=dotted];
d402 -> d403  [key=0, style=solid];
d402 -> d404  [key=2, style=dotted];
d402 -> d405  [key=2, style=dotted];
d402 -> d406  [key=2, style=dotted];
d408 -> d271  [key=2, style=dotted];
d408 -> d409  [key=0, style=solid];
d408 -> d405  [key=2, style=dotted];
d408 -> d406  [key=2, style=dotted];
d419 -> d278  [key=2, style=dotted];
d419 -> d420  [key=0, style=solid];
d420 -> d421  [key=0, style=solid];
d422 -> d423  [key=0, style=solid];
d422 -> d424  [key=2, style=dotted];
d422 -> d425  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d426 -> d427  [key=0, style=solid];
d426 -> d429  [key=2, style=dotted];
d426 -> d430  [key=2, style=dotted];
d440 -> d441  [key=0, style=solid];
d440 -> d442  [key=0, style=solid];
d445 -> d446  [key=0, style=solid];
d445 -> d447  [key=0, style=solid];
d135 -> d265  [key=0, style=solid];
d410 -> d24  [key=2, style=dotted];
d410 -> d223  [key=2, style=dotted];
d410 -> d411  [key=0, style=solid];
d410 -> d381  [key=2, style=dotted];
d410 -> d406  [key=2, style=dotted];
d410 -> d412  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d410 -> d416  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d279 -> d271  [key=2, style=dotted];
d279 -> d280  [key=0, style=solid];
d295 -> d271  [key=2, style=dotted];
d295 -> d296  [key=0, style=solid];
d247 -> d223  [key=2, style=dotted];
d247 -> d248  [key=0, style=solid];
d280 -> d278  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
d280 -> d281  [key=0, style=solid];
d280 -> d284  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d280 -> d286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d280 -> d290  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d280 -> d294  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
d280 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
d142 -> d256  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Text.StringBuilder builder"];
d142 -> d419  [key=0, style=solid];
d142 -> d139  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d138 -> d348  [key=0, style=solid];
d138 -> d57  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d283 -> d284  [key=0, style=solid];
d283 -> d294  [key=0, style=solid];
d293 -> d283  [key=0, style=solid];
d293 -> d293  [key=1, style=dashed, color=darkseagreen4, label=i];
d399 -> d389  [key=0, style=bold, color=blue];
d411 -> d393  [key=0, style=bold, color=blue];
d413 -> d414  [key=0, style=solid];
d413 -> d415  [key=2, style=dotted];
d417 -> d418  [key=0, style=solid];
d417 -> d405  [key=2, style=dotted];
d374 -> d364  [key=0, style=solid];
d374 -> d374  [key=1, style=dashed, color=darkseagreen4, label=i];
d485 -> d341  [key=1, style=dashed, color=darkseagreen4, label=string];
d486 -> d341  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
d487 -> d341  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
d179 -> d341  [key=1, style=dashed, color=darkseagreen4, label=string];
d179 -> d333  [key=0, style=solid];
d179 -> d336  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
d179 -> d335  [key=1, style=dashed, color=darkseagreen4, label=int];
d340 -> d341  [key=0, style=solid];
d342 -> d340  [key=0, style=bold, color=blue];
d339 -> d422  [key=0, style=solid];
d41 -> d49  [key=2, style=dotted];
d41 -> d42  [key=0, style=solid];
d41 -> d44  [key=0, style=solid];
d41 -> d58  [key=2, style=dotted];
d41 -> d73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d30 -> d49  [key=2, style=dotted];
d30 -> d32  [key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d30 -> d48  [key=2, style=dotted];
d234 -> d203  [key=2, style=dotted];
d234 -> d53  [key=2, style=dotted];
d234 -> d235  [key=0, style=solid];
d26 -> d32  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d39  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d40  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d27  [key=0, style=solid];
d26 -> d0  [key=2, style=dotted];
d26 -> d31  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d63  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d36  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d38  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d67  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d70  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d42  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d43  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d44  [key=1, style=dashed, color=darkseagreen4, label=auto];
d26 -> d45  [key=1, style=dashed, color=darkseagreen4, label=auto];
d28 -> d32  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d31 -> d32  [key=0, style=solid];
d31 -> d39  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d40  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d50  [key=2, style=dotted];
d31 -> d31  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d63  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d36  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d38  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d67  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d70  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d42  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d43  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d44  [key=1, style=dashed, color=darkseagreen4, label=auto];
d31 -> d45  [key=1, style=dashed, color=darkseagreen4, label=auto];
d33 -> d39  [key=1, style=dashed, color=darkseagreen4, label=usageAttr];
d33 -> d34  [key=0, style=solid];
d33 -> d51  [key=2, style=dotted];
d33 -> d35  [key=1, style=dashed, color=darkseagreen4, label=usageAttr];
d62 -> d63  [key=0, style=solid];
d38 -> d39  [key=0, style=solid];
d38 -> d57  [key=2, style=dotted];
d35 -> d39  [key=0, style=solid];
d35 -> d36  [key=0, style=solid];
d35 -> d55  [key=2, style=dotted];
d37 -> d39  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d66 -> d67  [key=0, style=solid];
d34 -> d40  [key=1, style=dashed, color=darkseagreen4, label=usageLines];
d34 -> d53  [key=2, style=dotted];
d34 -> d35  [key=0, style=solid];
d34 -> d54  [key=2, style=dotted];
d72 -> d40  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines"];
d72 -> d124  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines"];
d72 -> d143  [key=0, style=solid];
d69 -> d70  [key=0, style=solid];
d102 -> d124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d102 -> d72  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
d102 -> d102  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
d102 -> d118  [key=0, style=solid];
d102 -> d120  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d102 -> d122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d102 -> d123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d102 -> d126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d102 -> d127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
d102 -> d76  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
d102 -> d85  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
d102 -> d83  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
d102 -> d86  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
d122 -> d124  [key=0, style=solid];
d122 -> d123  [key=0, style=solid];
d122 -> d48  [key=2, style=dotted];
d122 -> d129  [key=2, style=dotted];
d125 -> d126  [key=0, style=solid];
d125 -> d127  [key=0, style=solid];
d125 -> d129  [key=2, style=dotted];
d127 -> d72  [key=2, style=dotted];
d127 -> d128  [key=0, style=solid];
d127 -> d56  [key=2, style=dotted];
d127 -> d131  [key=2, style=dotted];
d127 -> d57  [key=2, style=dotted];
d200 -> d201  [key=0, style=solid];
d202 -> d200  [key=0, style=bold, color=blue];
d205 -> d217  [key=0, style=solid];
d205 -> d23  [key=2, style=dotted];
d213 -> d217  [key=0, style=solid];
d213 -> d214  [key=0, style=solid];
d215 -> d217  [key=0, style=solid];
d215 -> d216  [key=0, style=solid];
d48 -> d273  [key=0, style=solid];
d48 -> d27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors"];
d214 -> d215  [key=0, style=solid];
d214 -> d162  [key=2, style=dotted];
d273 -> d218  [key=2, style=dotted];
d273 -> d274  [key=0, style=solid];
d273 -> d275  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d226 -> d224  [key=0, style=bold, color=blue];
d225 -> d226  [key=0, style=solid];
d252 -> d53  [key=0, style=bold, color=blue];
d236 -> d237  [key=0, style=solid];
d236 -> d238  [key=0, style=solid];
d240 -> d241  [key=0, style=solid];
d238 -> d241  [key=1, style=dashed, color=darkseagreen4, label=usage];
d238 -> d239  [key=0, style=solid];
d238 -> d253  [key=2, style=dotted];
d230 -> d234  [key=0, style=solid];
d230 -> d227  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
d230 -> d228  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
d239 -> d241  [key=0, style=solid];
d239 -> d240  [key=0, style=solid];
d239 -> d254  [key=2, style=dotted];
d484 -> d261  [key=1, style=dashed, color=darkseagreen4, label=s];
d484 -> d262  [key=1, style=dashed, color=darkseagreen4, label=s];
d484 -> d263  [key=1, style=dashed, color=darkseagreen4, label=s];
d15 -> d17  [key=0, style=solid];
d15 -> d16  [key=0, style=solid];
d10 -> d19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.SentenceBuilder"];
d10 -> d20  [key=1, style=dashed, color=darkseagreen4, label=string];
d10 -> d21  [key=1, style=dashed, color=darkseagreen4, label=string];
d10 -> d15  [key=1, style=dashed, color=darkseagreen4, label=string];
d10 -> d11  [key=0, style=solid];
d10 -> d13  [key=1, style=dashed, color=darkseagreen4, label=string];
d22 -> d10  [key=0, style=bold, color=blue];
d57 -> d136  [key=0, style=solid];
d57 -> d143  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d57 -> d159  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d57 -> d138  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine"];
d57 -> d36  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d137 -> d57  [key=0, style=bold, color=blue];
d139 -> d140  [key=0, style=solid];
d139 -> d151  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d139 -> d168  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
d139 -> d142  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine"];
d141 -> d139  [key=0, style=bold, color=blue];
d147 -> d148  [key=0, style=solid];
d149 -> d147  [key=0, style=bold, color=blue];
d145 -> d72  [key=0, style=bold, color=blue];
d150 -> d151  [key=0, style=solid];
d154 -> d155  [key=0, style=solid];
d156 -> d154  [key=0, style=bold, color=blue];
d153 -> d150  [key=0, style=bold, color=blue];
d158 -> d159  [key=0, style=solid];
d158 -> d162  [key=2, style=dotted];
d163 -> d164  [key=0, style=solid];
d165 -> d163  [key=0, style=bold, color=blue];
d161 -> d157  [key=0, style=bold, color=blue];
d167 -> d168  [key=0, style=solid];
d167 -> d162  [key=2, style=dotted];
d171 -> d172  [key=0, style=solid];
d173 -> d171  [key=0, style=bold, color=blue];
d170 -> d166  [key=0, style=bold, color=blue];
d61 -> d176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d61 -> d179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
d61 -> d174  [key=0, style=solid];
d174 -> d176  [key=0, style=solid];
d174 -> d175  [key=0, style=solid];
d177 -> d61  [key=0, style=bold, color=blue];
d178 -> d303  [key=0, style=solid];
d60 -> d184  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
d60 -> d179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
d60 -> d180  [key=0, style=solid];
d60 -> d182  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
d182 -> d184  [key=0, style=solid];
d182 -> d183  [key=0, style=solid];
d185 -> d60  [key=0, style=bold, color=blue];
d187 -> d328  [key=0, style=solid];
d187 -> d60  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
d187 -> d193  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
d188 -> d191  [key=1, style=dashed, color=darkseagreen4, label=int];
d188 -> d179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
d188 -> d189  [key=0, style=solid];
d189 -> d191  [key=0, style=solid];
d189 -> d190  [key=0, style=solid];
d192 -> d188  [key=0, style=bold, color=blue];
d193 -> d198  [key=1, style=dashed, color=darkseagreen4, label=int];
d193 -> d179  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
d193 -> d194  [key=0, style=solid];
d193 -> d196  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
d196 -> d198  [key=0, style=solid];
d196 -> d197  [key=0, style=solid];
d199 -> d193  [key=0, style=bold, color=blue];
d303 -> d304  [key=0, style=solid];
d303 -> d308  [key=2, style=dotted];
d303 -> d305  [key=1, style=dashed, color=darkseagreen4, label=specs];
d305 -> d89  [key=2, style=dotted];
d305 -> d306  [key=0, style=solid];
d305 -> d312  [key=2, style=dotted];
d305 -> d313  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d309 -> d344  [key=0, style=solid];
d310 -> d346  [key=0, style=solid];
d306 -> d311  [key=2, style=dotted];
d306 -> d307  [key=0, style=solid];
d306 -> d47  [key=2, style=dotted];
d329 -> d187  [key=0, style=bold, color=blue];
d338 -> d179  [key=0, style=bold, color=blue];
d345 -> d309  [key=0, style=bold, color=blue];
d347 -> d310  [key=0, style=bold, color=blue];
d350 -> d138  [key=0, style=bold, color=blue];
d401 -> d402  [key=0, style=solid];
d407 -> d408  [key=0, style=solid];
d491 -> d402  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d491 -> d408  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d403 -> d401  [key=0, style=bold, color=blue];
d406 -> d10  [key=3, color=darkorchid, style=bold, label="Field variable string copyright"];
d409 -> d407  [key=0, style=bold, color=blue];
d421 -> d142  [key=0, style=bold, color=blue];
d429 -> d422  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification spec"];
d429 -> d432  [key=0, style=solid];
d429 -> d433  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d429 -> d434  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d429 -> d436  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d429 -> d437  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d429 -> d444  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
d430 -> d422  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification spec"];
d430 -> d452  [key=0, style=solid];
d430 -> d453  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d430 -> d455  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d430 -> d456  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d430 -> d458  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d430 -> d459  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d423 -> d339  [key=0, style=bold, color=blue];
d425 -> d426  [key=0, style=solid];
d425 -> d427  [key=1, style=dashed, color=darkseagreen4, label=int];
d427 -> d428  [key=0, style=solid];
d427 -> d431  [key=2, style=dotted];
d439 -> d440  [key=0, style=solid];
d439 -> d439  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d439 -> d441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d439 -> d442  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d441 -> d441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d441 -> d442  [key=0, style=solid];
d442 -> d442  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d442 -> d443  [key=0, style=solid];
d442 -> d444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d442 -> d449  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d442 -> d450  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d444 -> d445  [key=0, style=solid];
d444 -> d444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d444 -> d446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d444 -> d447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d446 -> d446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d446 -> d447  [key=0, style=solid];
d447 -> d447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d447 -> d448  [key=0, style=solid];
d447 -> d449  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d447 -> d450  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d132 -> d135  [key=3, color=darkorchid, style=bold, label="method methodReturn string op_Implicit"];
d132 -> d133  [key=0, style=solid];
d133 -> d135  [key=2, style=dotted];
d133 -> d134  [key=0, style=solid];
d412 -> d413  [key=0, style=solid];
d416 -> d417  [key=0, style=solid];
d432 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
d432 -> d439  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d432 -> d444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d432 -> d433  [key=0, style=solid];
d432 -> d449  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d432 -> d450  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d432 -> d435  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
d435 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
d435 -> d442  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
d435 -> d447  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
d435 -> d436  [key=0, style=solid];
d452 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
d452 -> d453  [key=0, style=solid];
d452 -> d458  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d452 -> d459  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d452 -> d454  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
d454 -> d280  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
d454 -> d455  [key=0, style=solid];
d454 -> d460  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
d492 -> d413  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d492 -> d417  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
d414 -> d412  [key=0, style=bold, color=blue];
d418 -> d416  [key=0, style=bold, color=blue];
d25 -> d41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d25 -> d26  [key=0, style=solid];
d25 -> d28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d25 -> d31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
d25 -> d34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d25 -> d29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d25 -> d43  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d25 -> d44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d29 -> d41  [key=1, style=dashed, color=darkseagreen4, label=errors];
d29 -> d30  [key=0, style=solid];
d27 -> d41  [key=1, style=dashed, color=darkseagreen4, label=errors];
d27 -> d28  [key=0, style=solid];
d27 -> d47  [key=2, style=dotted];
d42 -> d43  [key=0, style=solid];
d44 -> d61  [key=2, style=dotted];
d44 -> d45  [key=0, style=solid];
d73 -> d74  [key=0, style=solid];
d235 -> d230  [key=0, style=bold, color=blue];
d0 -> d1  [key=0, style=solid];
d63 -> d64  [key=0, style=solid];
d63 -> d65  [key=2, style=dotted];
d36 -> d38  [key=1, style=dashed, color=darkseagreen4, label=heading];
d36 -> d37  [key=0, style=solid];
d36 -> d56  [key=2, style=dotted];
d67 -> d68  [key=0, style=solid];
d67 -> d65  [key=2, style=dotted];
d70 -> d72  [key=2, style=dotted];
d70 -> d71  [key=0, style=solid];
d43 -> d60  [key=2, style=dotted];
d43 -> d45  [key=0, style=solid];
d43 -> d59  [key=2, style=dotted];
d45 -> d46  [key=0, style=solid];
d64 -> d62  [key=0, style=bold, color=blue];
d68 -> d66  [key=0, style=bold, color=blue];
d71 -> d69  [key=0, style=bold, color=blue];
d100 -> d102  [key=2, style=dotted];
d100 -> d101  [key=0, style=solid];
d113 -> d102  [key=2, style=dotted];
d113 -> d114  [key=0, style=solid];
d107 -> d102  [key=2, style=dotted];
d107 -> d108  [key=0, style=solid];
d128 -> d102  [key=0, style=bold, color=blue];
d118 -> d119  [key=0, style=solid];
d118 -> d120  [key=0, style=solid];
d120 -> d122  [key=0, style=solid];
d120 -> d121  [key=0, style=solid];
d123 -> d128  [key=0, style=solid];
d126 -> d128  [key=0, style=solid];
d76 -> d57  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
d76 -> d25  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
d76 -> d100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d76 -> d113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d76 -> d77  [key=0, style=solid];
d76 -> d79  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d76 -> d83  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d76 -> d86  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d85 -> d107  [key=1, style=dashed, color=darkseagreen4, label=pr];
d85 -> d86  [key=0, style=solid];
d85 -> d91  [key=2, style=dotted];
d85 -> d92  [key=2, style=dotted];
d85 -> d47  [key=2, style=dotted];
d83 -> d25  [key=2, style=dotted];
d83 -> d87  [key=0, style=solid];
d83 -> d99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d83 -> d103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d86 -> d25  [key=2, style=dotted];
d86 -> d87  [key=0, style=solid];
d86 -> d106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d86 -> d109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d86 -> d112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d86 -> d115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d274 -> d48  [key=0, style=bold, color=blue];
d84 -> d89  [key=2, style=dotted];
d84 -> d85  [key=0, style=solid];
d84 -> d86  [key=1, style=dashed, color=darkseagreen4, label=err];
d84 -> d90  [key=2, style=dotted];
d275 -> d276  [key=0, style=solid];
d237 -> d252  [key=0, style=solid];
d237 -> d23  [key=2, style=dotted];
d253 -> d316  [key=0, style=solid];
d227 -> d230  [key=3, color=darkorchid, style=bold, label="method methodReturn string RenderUsageText"];
d227 -> d228  [key=0, style=solid];
d228 -> d230  [key=2, style=dotted];
d228 -> d229  [key=0, style=solid];
d228 -> d231  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d13 -> d15  [key=0, style=solid];
d13 -> d14  [key=0, style=solid];
d16 -> d22  [key=0, style=solid];
d16 -> d23  [key=2, style=dotted];
d11 -> d13  [key=0, style=solid];
d11 -> d12  [key=0, style=solid];
d12 -> d22  [key=0, style=solid];
d12 -> d23  [key=2, style=dotted];
d14 -> d22  [key=0, style=solid];
d14 -> d23  [key=2, style=dotted];
d81 -> d57  [key=2, style=dotted];
d81 -> d87  [key=0, style=solid];
d81 -> d4  [key=2, style=dotted];
d157 -> d158  [key=0, style=solid];
d166 -> d167  [key=0, style=solid];
d175 -> d177  [key=0, style=solid];
d175 -> d23  [key=2, style=dotted];
d307 -> d178  [key=0, style=bold, color=blue];
d180 -> d182  [key=0, style=solid];
d180 -> d181  [key=0, style=solid];
d183 -> d185  [key=0, style=solid];
d183 -> d186  [key=2, style=dotted];
d181 -> d185  [key=0, style=solid];
d181 -> d23  [key=2, style=dotted];
d190 -> d192  [key=0, style=solid];
d190 -> d23  [key=2, style=dotted];
d194 -> d196  [key=0, style=solid];
d194 -> d195  [key=0, style=solid];
d197 -> d199  [key=0, style=solid];
d197 -> d186  [key=2, style=dotted];
d195 -> d199  [key=0, style=solid];
d195 -> d23  [key=2, style=dotted];
d313 -> d314  [key=0, style=solid];
d451 -> d429  [key=0, style=bold, color=blue];
d433 -> d434  [key=0, style=solid];
d433 -> d438  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
d433 -> d448  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
d434 -> d435  [key=0, style=solid];
d434 -> d443  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
d434 -> d448  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
d436 -> d437  [key=0, style=solid];
d436 -> d438  [key=0, style=solid];
d437 -> d442  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
d437 -> d447  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
d437 -> d438  [key=0, style=solid];
d462 -> d430  [key=0, style=bold, color=blue];
d453 -> d454  [key=0, style=solid];
d453 -> d457  [key=1, style=dashed, color=darkseagreen4, label=hasMeta];
d455 -> d456  [key=0, style=solid];
d455 -> d457  [key=0, style=solid];
d456 -> d457  [key=0, style=solid];
d456 -> d460  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
d458 -> d458  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d458 -> d460  [key=0, style=solid];
d458 -> d463  [key=2, style=dotted];
d459 -> d459  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d459 -> d460  [key=0, style=solid];
d459 -> d463  [key=2, style=dotted];
d428 -> d425  [key=0, style=bold, color=blue];
d438 -> d439  [key=0, style=solid];
d438 -> d443  [key=0, style=solid];
d443 -> d444  [key=0, style=solid];
d443 -> d448  [key=0, style=solid];
d449 -> d449  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d449 -> d450  [key=0, style=solid];
d450 -> d451  [key=0, style=solid];
d448 -> d449  [key=0, style=solid];
d448 -> d450  [key=0, style=solid];
d134 -> d132  [key=0, style=bold, color=blue];
d460 -> d460  [key=1, style=dashed, color=darkseagreen4, label=specLength];
d460 -> d461  [key=0, style=solid];
d46 -> d25  [key=0, style=bold, color=blue];
d80 -> d58  [key=2, style=dotted];
d80 -> d81  [key=0, style=solid];
d80 -> d82  [key=0, style=solid];
d80 -> d93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d82 -> d58  [key=2, style=dotted];
d82 -> d83  [key=0, style=solid];
d82 -> d84  [key=0, style=solid];
d82 -> d96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d75 -> d73  [key=0, style=bold, color=blue];
d74 -> d75  [key=0, style=solid];
d1 -> d0  [key=0, style=bold, color=blue];
d481 -> d63  [key=1, style=dashed, color=darkseagreen4, label=auto];
d481 -> d67  [key=1, style=dashed, color=darkseagreen4, label=auto];
d481 -> d70  [key=1, style=dashed, color=darkseagreen4, label=auto];
d482 -> d100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d482 -> d113  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
d99 -> d100  [key=0, style=solid];
d101 -> d99  [key=0, style=bold, color=blue];
d112 -> d113  [key=0, style=solid];
d114 -> d112  [key=0, style=bold, color=blue];
d483 -> d107  [key=1, style=dashed, color=darkseagreen4, label=pr];
d106 -> d107  [key=0, style=solid];
d108 -> d106  [key=0, style=bold, color=blue];
d119 -> d128  [key=0, style=solid];
d119 -> d23  [key=2, style=dotted];
d121 -> d128  [key=0, style=solid];
d121 -> d23  [key=2, style=dotted];
d87 -> d76  [key=0, style=bold, color=blue];
d77 -> d78  [key=0, style=solid];
d77 -> d79  [key=0, style=solid];
d79 -> d84  [key=1, style=dashed, color=darkseagreen4, label=errors];
d79 -> d80  [key=0, style=solid];
d79 -> d82  [key=1, style=dashed, color=darkseagreen4, label=errors];
d103 -> d104  [key=0, style=solid];
d109 -> d110  [key=0, style=solid];
d115 -> d116  [key=0, style=solid];
d277 -> d275  [key=0, style=bold, color=blue];
d276 -> d277  [key=0, style=solid];
d317 -> d253  [key=0, style=bold, color=blue];
d316 -> d317  [key=0, style=solid];
d316 -> d318  [key=2, style=dotted];
d316 -> d319  [key=2, style=dotted];
d316 -> d320  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
d229 -> d227  [key=0, style=bold, color=blue];
d231 -> d232  [key=0, style=solid];
d4 -> d5  [key=0, style=solid];
d315 -> d313  [key=0, style=bold, color=blue];
d314 -> d315  [key=0, style=solid];
d461 -> d462  [key=0, style=solid];
d457 -> d458  [key=0, style=solid];
d457 -> d459  [key=0, style=solid];
d93 -> d94  [key=0, style=solid];
d96 -> d97  [key=0, style=solid];
d78 -> d87  [key=0, style=solid];
d78 -> d88  [key=2, style=dotted];
d105 -> d103  [key=0, style=bold, color=blue];
d104 -> d105  [key=0, style=solid];
d111 -> d109  [key=0, style=bold, color=blue];
d110 -> d111  [key=0, style=solid];
d117 -> d115  [key=0, style=bold, color=blue];
d116 -> d117  [key=0, style=solid];
d320 -> d321  [key=0, style=solid];
d320 -> d322  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
d233 -> d231  [key=0, style=bold, color=blue];
d232 -> d233  [key=0, style=solid];
d5 -> d4  [key=0, style=bold, color=blue];
d95 -> d93  [key=0, style=bold, color=blue];
d94 -> d95  [key=0, style=solid];
d98 -> d96  [key=0, style=bold, color=blue];
d97 -> d98  [key=0, style=solid];
d325 -> d320  [key=0, style=bold, color=blue];
d321 -> d322  [key=0, style=solid];
d321 -> d323  [key=1, style=dashed, color=darkseagreen4, label=prop];
d322 -> d323  [key=0, style=solid];
d322 -> d324  [key=1, style=dashed, color=darkseagreen4, label=attr];
d324 -> d325  [key=0, style=solid];
d324 -> d327  [key=2, style=dotted];
d323 -> d324  [key=0, style=solid];
d323 -> d326  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_27  [key=2, style=dotted];
m0_25 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m0_26 -> m0_24  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_4  [key=0, style=solid];
m0_2 -> d23  [key=2, style=dotted];
m0_4 -> m0_0  [key=0, style=bold, color=blue];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_15  [key=1, style=dashed, color=red, label="CommandLine.Core.SpecificationProperty"];
m0_12 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_16  [key=0, style=solid];
m0_13 -> m0_18  [key=2, style=dotted];
m0_15 -> m0_17  [key=0, style=solid, color=red];
m0_15 -> m0_19  [key=2, style=dotted, color=red];
m0_15 -> m0_20  [key=2, style=dotted, color=red];
m0_15 -> m0_21  [key=2, style=dotted, color=red];
m0_15 -> m0_22  [key=2, style=dotted, color=red];
m0_15 -> m0_23  [key=2, style=dotted, color=red];
m0_16 -> m0_17  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid, color=red];
m0_17 -> m0_12  [key=0, style=bold, color=blue];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.SpecificationProperty"];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_10  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_6  [key=2, style=dotted];
m0_9 -> m0_11  [key=0, style=solid];
m0_9 -> d23  [key=2, style=dotted];
m0_11 -> m0_7  [key=0, style=bold, color=blue];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_30 -> m0_28  [key=0, style=bold, color=blue];
m0_32 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
}
