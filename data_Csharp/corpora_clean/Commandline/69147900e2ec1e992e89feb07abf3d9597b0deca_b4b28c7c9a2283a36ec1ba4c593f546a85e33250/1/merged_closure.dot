digraph  {
m0_7 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="ArgumentParserFixture.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335"];
m0_0 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs", label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
m0_1 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs", label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="42-42"];
m0_2 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs", label="ae.MoveNext()", span="44-44"];
m0_3 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs", label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="46-46"];
m0_5 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs", label="ae.Current.Should().Equal(''two'')", span="49-49"];
m0_4 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="48-48"];
m0_6 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="ArgumentParserFixture.cs", label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
m0_10 [cluster="Unk.ElementsShouldBeEqual", file="ArgumentParserFixture.cs", label="Entry Unk.ElementsShouldBeEqual", span=""];
m0_9 [cluster="Unk.PublicWrapperOfGetNextInputValues", file="ArgumentParserFixture.cs", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
m0_12 [cluster="Unk.Equal", file="ArgumentParserFixture.cs", label="Entry Unk.Equal", span=""];
m0_8 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="ArgumentParserFixture.cs", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390"];
m0_11 [cluster="Unk.Should", file="ArgumentParserFixture.cs", label="Entry Unk.Should", span=""];
m0_13 [file="ArgumentParserFixture.cs", label="CommandLine.Tests.ArgumentParserFixture", span=""];
m5_0 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", span="40-40"];
m5_4 [cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", prediction=0, span="50-50"];
m5_6 [cluster="CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.OptionShortNameCanNotExceedOneCharacter()", prediction=1, span="50-50"];
m5_14 [cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", prediction=0, span="64-64"];
m5_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="AttributesFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m5_3 [cluster="CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.CustomOptionAttribute.CustomOptionAttribute(string, string)", prediction=3, span="40-40"];
m5_16 [cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", prediction=4, span="71-71"];
m5_15 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", prediction=0, span="136-136"];
m5_11 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", prediction=6, span="258-258"];
m5_12 [cluster="CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.HelpOptionShortNameCanNotExceedOneCharacter()", prediction=7, span="64-64"];
m5_8 [cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", span="57-57"];
m5_10 [cluster="CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", color=green, community=0, file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.OptionListShortNameCanNotExceedOneCharacter()", prediction=8, span="57-57"];
m5_100 [cluster="string.CompareOrdinal(string, string)", file="AttributesFixture.cs", label="Entry string.CompareOrdinal(string, string)", span="0-0"];
m5_40 [cluster="System.Type.GetMethods()", file="AttributesFixture.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m5_18 [cluster="CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.ShortNameOfBaseOptionDerivedTypeCanNotExceedOneCharacter()", span="71-71"];
m5_41 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m5_51 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="ReflectionCache.Instance[key] = data", prediction=9, span="116-116"];
m5_42 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="var key = new Pair<Type, object>(typeof(TAttribute), target)", span="102-102"];
m5_50 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="var data = (TAttribute) attribute", prediction=10, span="115-115"];
m5_52 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="return data;", prediction=10, span="117-117"];
m5_44 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="cached == null", prediction=12, span="104-104"];
m5_43 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="var cached = ReflectionCache.Instance[key]", span="103-103"];
m5_45 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="var info = target.GetType().GetMethods()", span="106-106"];
m5_54 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="return (TAttribute) cached;", prediction=13, span="123-123"];
m5_46 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label=info, prediction=14, span="107-107"];
m5_47 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="!method.IsStatic", span="109-109"];
m5_49 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="attribute != null", span="113-113"];
m5_53 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="return null;", span="121-121"];
m5_48 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="111-112"];
m5_55 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="AttributesFixture.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="99-99"];
m5_24 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowOneCharacterInShortName()", span="78-78"];
m5_19 [cluster="System.Collections.Generic.List<T>.List()", file="AttributesFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_56 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m5_61 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="var info = target.GetType().GetProperties()", span="134-134"];
m5_60 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="IList<TAttribute> list = new List<TAttribute>()", span="133-133"];
m5_57 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="var key = new Pair<Type, object>(typeof(IList<TAttribute>), target)", span="129-129"];
m5_68 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="list.Add((TAttribute) attribute)", span="146-146"];
m5_64 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="var setMethod = property.GetSetMethod()", span="140-140"];
m5_66 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="143-143"];
m5_62 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label=info, span="136-136"];
m5_59 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="cached == null", span="131-131"];
m5_69 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="ReflectionCache.Instance[key] = list", span="151-151"];
m5_70 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="return list;", span="152-152"];
m5_58 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="var cached = ReflectionCache.Instance[key]", span="130-130"];
m5_67 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="attribute != null", span="144-144"];
m5_63 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="property != null && (property.CanRead && property.CanWrite)", span="138-138"];
m5_65 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="setMethod != null && !setMethod.IsStatic", span="141-141"];
m5_71 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="return (IList<TAttribute>) cached;", span="154-154"];
m5_72 [cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="AttributesFixture.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="126-126"];
m5_25 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", span="87-87"];
m5_35 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs", label="ReflectionCache.Instance[key] = data", span="89-89"];
m5_30 [cluster="CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", color=green, community=0, file="AttributesFixture.cs", label="Exit CommandLine.Tests.AttributesFixture.AllOptionsAllowNullValueInShortName()", prediction=15, span="87-87"];
m5_38 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs", label="return (Pair<MethodInfo, TAttribute>) cached;", span="96-96"];
m5_31 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs", label="CommandLine.Tests.AttributesFixture.CustomOptionAttribute", span=""];
m5_33 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="attribute != null", prediction=16, span="86-86"];
m5_37 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs", label="return null;", span="94-94"];
m5_32 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="Attribute attribute =\r\n                            Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", prediction=15, span="84-85"];
m5_34 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs", label="var data = new Pair<MethodInfo, TAttribute>(method, (TAttribute) attribute)", span="88-88"];
m5_36 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=green, community=0, file="AttributesFixture.cs", label="return data;", prediction=18, span="90-90"];
m5_39 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="AttributesFixture.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="72-72"];
m5_80 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="Entry CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m5_87 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="var propertiesInfo = target.GetType().GetProperties()", span="183-183"];
m5_81 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="var key = new Pair<Type, object>(typeof(Pair<PropertyInfo, BaseOptionAttribute>), target)", span="174-174"];
m5_95 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute) attribute)", span="196-196"];
m5_90 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="var setMethod = property.GetSetMethod()", span="189-189"];
m5_92 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="192-192"];
m5_85 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="target == null", span="179-179"];
m5_88 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label=propertiesInfo, span="185-185"];
m5_82 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="var cached = ReflectionCache.Instance[key]", span="175-175"];
m5_96 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="ReflectionCache.Instance[key] = found", span="197-197"];
m5_94 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", span="194-194"];
m5_97 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="return found;", span="198-198"];
m5_89 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="property != null && (property.CanRead && property.CanWrite)", span="187-187"];
m5_91 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="setMethod != null && !setMethod.IsStatic", span="190-190"];
m5_93 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="var optionAttr = (TAttribute) attribute", span="193-193"];
m5_84 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="Pair<PropertyInfo, TAttribute> found = null", span="178-178"];
m5_86 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="return null;", span="181-181"];
m5_98 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="return (Pair<PropertyInfo, TAttribute>) cached;", span="204-204"];
m5_83 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="cached == null", span="176-176"];
m5_99 [cluster="CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="AttributesFixture.cs", label="Exit CommandLine.Utils.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="171-171"];
m7_8 [cluster="Unk.Equal", file="BaseFixture.cs", label="Entry Unk.Equal", span=""];
m7_7 [cluster="Unk.Should", file="BaseFixture.cs", label="Entry Unk.Should", span=""];
m7_9 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m7_10 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="expected.Length.Should().Equal(actual.Count)", span="50-50"];
m7_12 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i < expected.Length", span="51-51"];
m7_13 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="expected[i].Should().Equal(actual[i])", span="53-53"];
m7_11 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="int i = 0", span="51-51"];
m7_14 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="i++", span="51-51"];
m7_15 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m7_0 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m7_1 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="expected.Length.Should().Equal(actual.Length)", span="41-41"];
m7_3 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i < expected.Length", span="42-42"];
m7_4 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="expected[i].Should().Equal(actual[i])", span="44-44"];
m7_2 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="int i = 0", span="42-42"];
m7_5 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="i++", span="42-42"];
m7_6 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="BaseFixture.cs", label="Exit CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m10_0 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m10_1 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="NonBooleanValue = 0", span="37-37"];
m10_2 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="BooleanSetOptions.cs", label="Exit CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m10_3 [file="BooleanSetOptions.cs", label="CommandLine.Tests.Mocks.BooleanSetOptions", span=""];
m11_512 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1419-1419"];
m11_513 [cluster="CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.System.IDisposable.Dispose()", span="1419-1419"];
m11_15 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166"];
m11_19 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="166-166"];
m11_331 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueScalar(string, object)", span="898-898"];
m11_362 [cluster="CommandLine.OptionInfo.SetValueScalar(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueScalar(string, object)", span="898-898"];
m11_529 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486"];
m11_530 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486"];
m11_159 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="499-499"];
m11_162 [cluster="CommandLine.BadOptionInfo.BadOptionInfo(string, string)", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo(string, string)", span="499-499"];
m11_470 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248"];
m11_475 [cluster="CommandLine.Pair<TLeft, TRight>.Equals(object)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Equals(object)", span="1248-1248"];
m11_95 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269"];
m11_481 [cluster="CommandLine.ParsingError.ParsingError(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError(string, string, bool)", span="1269-1269"];
m11_579 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1735-1735"];
m11_591 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1735-1735"];
m11_53 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1517-1517"];
m11_535 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string)", span="1517-1517"];
m11_714 [cluster="decimal.TryParse(string, out decimal)", file="CommandLine.cs", label="Entry decimal.TryParse(string, out decimal)", span="0-0"];
m11_217 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628"];
m11_221 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628"];
m11_86 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.ArgumentParser()", span="385-385"];
m11_88 [cluster="CommandLine.ArgumentParser.ArgumentParser()", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.ArgumentParser()", span="385-385"];
m11_672 [cluster="System.Type.GetMethods()", file="CommandLine.cs", label="Entry System.Type.GetMethods()", span="0-0"];
m11_52 [cluster="System.Type.IsAssignableFrom(System.Type)", file="CommandLine.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m11_216 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(bool, object)", span="958-958"];
m11_376 [cluster="CommandLine.OptionInfo.SetValue(bool, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(bool, object)", span="958-958"];
m11_223 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.Reset()", span="672-672"];
m11_225 [cluster="CommandLine.OneCharStringEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.Reset()", span="672-672"];
m11_33 [cluster="string.IsNullOrEmpty(string)", file="CommandLine.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_504 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MovePrevious()", span="1405-1405"];
m11_511 [cluster="CommandLine.StringArrayEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MovePrevious()", span="1405-1405"];
m11_551 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1589-1589"];
m11_554 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool)", span="1589-1589"];
m11_560 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1619-1619"];
m11_565 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, bool, System.IO.TextWriter)", span="1619-1619"];
m11_441 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1187-1187"];
m11_446 [cluster="CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildMutuallyExclusiveMap(CommandLine.OptionInfo)", span="1187-1187"];
m11_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154"];
m11_14 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="154-154"];
m11_110 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.LongOptionParser(bool)", span="543-543"];
m11_168 [cluster="CommandLine.LongOptionParser.LongOptionParser(bool)", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.LongOptionParser(bool)", span="543-543"];
m11_464 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240"];
m11_468 [cluster="CommandLine.Pair<TLeft, TRight>.GetHashCode()", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.GetHashCode()", span="1240-1240"];
m11_555 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1603-1603"];
m11_559 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1603-1603"];
m11_245 [cluster="System.NotSupportedException.NotSupportedException()", file="CommandLine.cs", label="Entry System.NotSupportedException.NotSupportedException()", span="0-0"];
m11_142 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="466-466"];
m11_148 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool, bool)", span="466-466"];
m11_399 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1076-1076"];
m11_401 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="1076-1076"];
m11_51 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m11_329 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1953-1953"];
m11_705 [cluster="CommandLine.ReflectionUtil.IsNullableType(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.IsNullableType(System.Type)", span="1953-1953"];
m11_23 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m11_32 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m11_448 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0"];
m11_576 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717"];
m11_578 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717"];
m11_211 [cluster="string.Substring(int)", file="CommandLine.cs", label="Entry string.Substring(int)", span="0-0"];
m11_412 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0"];
m11_673 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1901-1901"];
m11_681 [cluster="CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="1901-1901"];
m11_66 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341"];
m11_74 [cluster="CommandLine.ValueListAttribute.GetAttribute(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetAttribute(object)", span="341-341"];
m11_707 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Entry CommandLine.StringUtil.Spaces(int)", span="1961-1961"];
m11_709 [cluster="CommandLine.StringUtil.Spaces(int)", file="CommandLine.cs", label="Exit CommandLine.StringUtil.Spaces(int)", span="1961-1961"];
m11_618 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1822-1822"];
m11_634 [cluster="CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.SetPostParsingStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="1822-1822"];
m11_17 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m11_539 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m11_540 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m11_514 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.TargetWrapper(object)", span="1430-1430"];
m11_519 [cluster="CommandLine.TargetWrapper.TargetWrapper(object)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.TargetWrapper(object)", span="1430-1430"];
m11_310 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="842-842"];
m11_320 [cluster="CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="842-842"];
m11_157 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Entry CommandLine.BadOptionInfo.BadOptionInfo()", span="495-495"];
m11_158 [cluster="CommandLine.BadOptionInfo.BadOptionInfo()", file="CommandLine.cs", label="Exit CommandLine.BadOptionInfo.BadOptionInfo()", span="495-495"];
m11_396 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1069-1069"];
m11_398 [cluster="CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.OptionInfo)", span="1069-1069"];
m11_111 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="715-715"];
m11_249 [cluster="CommandLine.OptionGroupParser.OptionGroupParser(bool)", file="CommandLine.cs", label="Exit CommandLine.OptionGroupParser.OptionGroupParser(bool)", span="715-715"];
m11_643 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1847-1847"];
m11_646 [cluster="CommandLine.Assumes.NotZeroLength<T>(T[], string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotZeroLength<T>(T[], string)", span="1847-1847"];
m11_345 [cluster="System.Array.CreateInstance(System.Type, int)", file="CommandLine.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m11_347 [cluster="System.Array.SetValue(object, int)", file="CommandLine.cs", label="Entry System.Array.SetValue(object, int)", span="0-0"];
m11_447 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="CommandLine.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0"];
m11_346 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="CommandLine.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m11_531 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Entry CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1494-1494"];
m11_533 [cluster="CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", file="CommandLine.cs", label="Exit CommandLine.CommandLineOptionsBase.CommandLineOptionsBase()", span="1494-1494"];
m11_136 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="456-456"];
m11_138 [cluster="CommandLine.ArgumentParser.CompareLong(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareLong(string, string, bool)", span="456-456"];
m11_16 [cluster="System.MemberAccessException.MemberAccessException()", file="CommandLine.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m11_35 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258"];
m11_37 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string)", span="258-258"];
m11_128 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="532-532"];
m11_165 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MoveNext()", span="532-532"];
m11_418 [cluster="CommandLine.OptionMap.SetDefaults()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.SetDefaults()", span="1140-1140"];
m11_421 [cluster="CommandLine.OptionMap.SetDefaults()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.SetDefaults()", span="1140-1140"];
m11_702 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m11_131 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException()", span="1513-1513"];
m11_534 [cluster="CommandLine.CommandLineParserException.CommandLineParserException()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException()", span="1513-1513"];
m11_682 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1920-1920"];
m11_693 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1920-1920"];
m11_242 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MovePrevious()", span="701-701"];
m11_244 [cluster="CommandLine.OneCharStringEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MovePrevious()", span="701-701"];
m11_62 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355"];
m11_85 [cluster="CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetProperty(object, out System.Type)", span="355-355"];
m11_63 [cluster="System.Activator.CreateInstance(System.Type)", file="CommandLine.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m11_212 [cluster="string.Split(char[], int)", file="CommandLine.cs", label="Entry string.Split(char[], int)", span="0-0"];
m11_222 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1841-1841"];
m11_641 [cluster="CommandLine.Assumes.NotNullOrEmpty(string, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNullOrEmpty(string, string)", span="1841-1841"];
m11_537 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1527-1527"];
m11_538 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(System.Runtime.Serialization.SerializationInfo, System.Runtime.Serialization.StreamingContext)", span="1527-1527"];
m11_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
m11_7 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="136-136"];
m11_413 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRules()", span="1135-1135"];
m11_415 [cluster="CommandLine.OptionMap.EnforceRules()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRules()", span="1135-1135"];
m11_89 [cluster="System.Collections.Generic.List<T>.List()", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m11_235 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="690-690"];
m11_241 [cluster="CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.GetRemainingFromNext()", span="690-690"];
m11_663 [cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="CommandLine.cs", label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0"];
m11_112 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.IsInputValue(string)", span="416-416"];
m11_118 [cluster="CommandLine.ArgumentParser.IsInputValue(string)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.IsInputValue(string)", span="416-416"];
m11_54 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
m11_61 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
m11_417 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceRequiredRule()", span="1148-1148"];
m11_428 [cluster="CommandLine.OptionMap.EnforceRequiredRule()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceRequiredRule()", span="1148-1148"];
m11_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124"];
m11_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="CommandLine.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="124-124"];
m11_594 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1757-1757"];
m11_617 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="1757-1757"];
m11_595 [cluster="System.IO.TextWriter.Write(string)", file="CommandLine.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m11_163 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527"];
m11_164 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527"];
m11_395 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1522-1522"];
m11_536 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="1522-1522"];
m11_416 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Entry CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1164-1164"];
m11_440 [cluster="CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", file="CommandLine.cs", label="Exit CommandLine.OptionMap.EnforceMutuallyExclusiveMap()", span="1164-1164"];
m11_387 [cluster="string.Split(params char[])", file="CommandLine.cs", label="Entry string.Split(params char[])", span="0-0"];
m11_21 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="CommandLine.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182"];
m11_22 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", file="CommandLine.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(string, string)", span="182-182"];
m11_90 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390"];
m11_91 [cluster="CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="390-390"];
m11_330 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetNullableValue(string, object)", span="937-937"];
m11_370 [cluster="CommandLine.OptionInfo.SetNullableValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetNullableValue(string, object)", span="937-937"];
m11_642 [cluster="System.ArgumentException.ArgumentException(string)", file="CommandLine.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m11_44 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
m11_50 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
m11_92 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394"];
m11_94 [cluster="CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.OptionInfo)", span="394-394"];
m11_130 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Entry CommandLine.IArgumentEnumerator.MovePrevious()", span="534-534"];
m11_166 [cluster="CommandLine.IArgumentEnumerator.MovePrevious()", file="CommandLine.cs", label="Exit CommandLine.IArgumentEnumerator.MovePrevious()", span="534-534"];
m11_501 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1400-1400"];
m11_503 [cluster="CommandLine.StringArrayEnumerator.GetRemainingFromNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.GetRemainingFromNext()", span="1400-1400"];
m11_710 [cluster="string.String(char, int)", file="CommandLine.cs", label="Entry string.String(char, int)", span="0-0"];
m11_226 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.MoveNext()", span="677-677"];
m11_233 [cluster="CommandLine.OneCharStringEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.MoveNext()", span="677-677"];
m11_635 [cluster="System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.AddRange(System.Collections.Generic.IEnumerable<T>)", span="0-0"];
m11_169 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="548-548"];
m11_210 [cluster="CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.LongOptionParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="548-548"];
m11_214 [cluster="System.Collections.Generic.IList<T>.Insert(int, T)", file="CommandLine.cs", label="Entry System.Collections.Generic.IList<T>.Insert(int, T)", span="0-0"];
m11_547 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1577-1577"];
m11_550 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, System.IO.TextWriter)", span="1577-1577"];
m11_469 [cluster="object.GetHashCode()", file="CommandLine.cs", label="Entry object.GetHashCode()", span="0-0"];
m11_321 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
m11_411 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
m11_661 [cluster="System.Type.GetProperties()", file="CommandLine.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m11_703 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m11_701 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="CommandLine.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m11_569 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681"];
m11_571 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681"];
m11_149 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="477-477"];
m11_152 [cluster="CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionAttributeIsArrayCompatible(CommandLine.OptionInfo)", span="477-477"];
m11_41 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294"];
m11_43 [cluster="CommandLine.ValueListAttribute.ValueListAttribute()", file="CommandLine.cs", label="Exit CommandLine.ValueListAttribute.ValueListAttribute()", span="294-294"];
m11_363 [cluster="System.Enum.Parse(System.Type, string, bool)", file="CommandLine.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m11_38 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270"];
m11_40 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", file="CommandLine.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string, string, char)", span="270-270"];
m11_476 [cluster="object.Equals(object, object)", file="CommandLine.cs", label="Entry object.Equals(object, object)", span="0-0"];
m11_328 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValueList(string, object)", span="968-968"];
m11_386 [cluster="CommandLine.OptionInfo.SetValueList(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValueList(string, object)", span="968-968"];
m11_371 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", file="CommandLine.cs", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
m11_485 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335"];
m11_490 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335"];
m11_372 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", file="CommandLine.cs", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
m11_153 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="483-483"];
m11_156 [cluster="CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.OptionInfo)", span="483-483"];
m11_592 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1882-1882"];
m11_671 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1882-1882"];
m11_139 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.BooleanToParserState(bool)", span="461-461"];
m11_141 [cluster="CommandLine.ArgumentParser.BooleanToParserState(bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.BooleanToParserState(bool)", span="461-461"];
m11_459 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Entry CommandLine.ParsingError.ParsingError()", span="1264-1264"];
m11_478 [cluster="CommandLine.ParsingError.ParsingError()", file="CommandLine.cs", label="Exit CommandLine.ParsingError.ParsingError()", span="1264-1264"];
m11_75 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1856-1856"];
m11_659 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1856-1856"];
m11_520 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Entry CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1440-1440"];
m11_526 [cluster="CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", file="CommandLine.cs", label="Exit CommandLine.TargetWrapper.AddValueItemIfAllowed(string)", span="1440-1440"];
m11_65 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m11_215 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="874-874"];
m11_343 [cluster="CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="874-874"];
m11_566 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="1673-1673"];
m11_568 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="1673-1673"];
m11_492 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.Reset()", span="1385-1385"];
m11_494 [cluster="CommandLine.StringArrayEnumerator.Reset()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.Reset()", span="1385-1385"];
m11_246 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Entry CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="706-706"];
m11_247 [cluster="CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", file="CommandLine.cs", label="Exit CommandLine.OneCharStringEnumerator.System.IDisposable.Dispose()", span="706-706"];
m11_132 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="451-451"];
m11_134 [cluster="CommandLine.ArgumentParser.CompareShort(string, string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.CompareShort(string, string, bool)", span="451-451"];
m11_647 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CommandLine.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m11_34 [cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLine.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m11_20 [cluster="System.Reflection.MethodBase.GetParameters()", file="CommandLine.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m11_234 [cluster="string.Substring(int, int)", file="CommandLine.cs", label="Entry string.Substring(int, int)", span="0-0"];
m11_541 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553"];
m11_543 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553"];
m11_593 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1800-1800"];
m11_630 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="1800-1800"];
m11_660 [cluster="object.GetType()", file="CommandLine.cs", label="Entry object.GetType()", span="0-0"];
m11_64 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m11_109 [cluster="string.Equals(string, System.StringComparison)", file="CommandLine.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m11_495 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390"];
m11_500 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="CommandLine.cs", label="Exit CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390"];
m11_527 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m11_528 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLine.cs", label="Exit CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m11_706 [cluster="System.Type.GetGenericTypeDefinition()", file="CommandLine.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m11_129 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m11_491 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Entry CommandLine.Assumes.NotNull<T>(T, string)", span="1834-1834"];
m11_638 [cluster="CommandLine.Assumes.NotNull<T>(T, string)", file="CommandLine.cs", label="Exit CommandLine.Assumes.NotNull<T>(T, string)", span="1834-1834"];
m11_97 [cluster="CommandLine.ArgumentParser.Create(string, bool)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.Create(string, bool)", span="399-399"];
m11_107 [cluster="CommandLine.ArgumentParser.Create(string, bool)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.Create(string, bool)", span="399-399"];
m11_119 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Entry CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="434-434"];
m11_127 [cluster="CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", file="CommandLine.cs", label="Exit CommandLine.ArgumentParser.GetNextInputValues(CommandLine.IArgumentEnumerator)", span="434-434"];
m11_572 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m11_575 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m11_662 [cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="CommandLine.cs", label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0"];
m11_694 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs", label="Entry CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1943-1943"];
m11_700 [cluster="CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", file="CommandLine.cs", label="Exit CommandLine.ReflectionUtil.GetAttribute<TAttribute>()", span="1943-1943"];
m11_96 [cluster="System.Collections.Generic.List<T>.Add(T)", file="CommandLine.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m11_344 [cluster="System.Type.GetElementType()", file="CommandLine.cs", label="Entry System.Type.GetElementType()", span="0-0"];
m11_544 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564"];
m11_546 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLine.cs", label="Exit CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564"];
m11_250 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Entry CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="720-720"];
m11_293 [cluster="CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", file="CommandLine.cs", label="Exit CommandLine.OptionGroupParser.Parse(CommandLine.IArgumentEnumerator, CommandLine.OptionMap, object)", span="720-720"];
m11_309 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", file="CommandLine.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
m11_460 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Entry CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224"];
m11_463 [cluster="CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="CommandLine.cs", label="Exit CommandLine.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="1224-1224"];
m11_429 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Entry CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199"];
m11_458 [cluster="CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", file="CommandLine.cs", label="Exit CommandLine.OptionMap.BuildAndSetPostParsingStateIfNeeded(object, CommandLine.OptionInfo, bool?, bool?)", span="1199-1199"];
m11_213 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetValue(string, object)", span="863-863"];
m11_327 [cluster="CommandLine.OptionInfo.SetValue(string, object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetValue(string, object)", span="863-863"];
m11_482 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Entry CommandLine.PostParsingState.PostParsingState()", span="1315-1315"];
m11_484 [cluster="CommandLine.PostParsingState.PostParsingState()", file="CommandLine.cs", label="Exit CommandLine.PostParsingState.PostParsingState()", span="1315-1315"];
m11_108 [cluster="CommandLine.StringUtil.IsNumeric(string)", file="CommandLine.cs", label="Entry CommandLine.StringUtil.IsNumeric(string)", span="1966-1966"];
m11_713 [cluster="CommandLine.StringUtil.IsNumeric(string)", file="CommandLine.cs", label="Exit CommandLine.StringUtil.IsNumeric(string)", span="1966-1966"];
m11_388 [cluster="CommandLine.OptionInfo.SetDefault(object)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.SetDefault(object)", span="986-986"];
m11_394 [cluster="CommandLine.OptionInfo.SetDefault(object)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.SetDefault(object)", span="986-986"];
m11_135 [cluster="string.Compare(string, string, bool)", file="CommandLine.cs", label="Entry string.Compare(string, string, bool)", span="0-0"];
m11_294 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Entry CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="812-812"];
m11_308 [cluster="CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", file="CommandLine.cs", label="Exit CommandLine.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="812-812"];
m11_715 [file="CommandLine.cs", label="CommandLine.HelpOptionAttribute", span=""];
m11_716 [file="CommandLine.cs", label="CommandLine.OptionAttribute", span=""];
m11_717 [file="CommandLine.cs", label="CommandLine.OptionListAttribute", span=""];
m11_718 [file="CommandLine.cs", label="CommandLine.ValueListAttribute", span=""];
m11_719 [file="CommandLine.cs", label="CommandLine.ArgumentParser", span=""];
m11_720 [file="CommandLine.cs", label="CommandLine.BadOptionInfo", span=""];
m11_721 [file="CommandLine.cs", label="CommandLine.LongOptionParser", span=""];
m11_722 [file="CommandLine.cs", label="CommandLine.OneCharStringEnumerator", span=""];
m11_723 [file="CommandLine.cs", label="CommandLine.OptionGroupParser", span=""];
m11_724 [file="CommandLine.cs", label="CommandLine.OptionInfo", span=""];
m11_725 [file="CommandLine.cs", label="CommandLine.OptionMap.MutuallyExclusiveInfo", span=""];
m11_726 [file="CommandLine.cs", label="CommandLine.OptionMap", span=""];
m11_727 [file="CommandLine.cs", label="CommandLine.Pair<TLeft, TRight>", span=""];
m11_728 [file="CommandLine.cs", label="CommandLine.ParsingError", span=""];
m11_729 [file="CommandLine.cs", label="CommandLine.PostParsingState", span=""];
m11_730 [file="CommandLine.cs", label="CommandLine.StringArrayEnumerator", span=""];
m11_731 [file="CommandLine.cs", label="CommandLine.TargetWrapper", span=""];
m11_732 [file="CommandLine.cs", label="CommandLine.CommandLineOptionsBase", span=""];
m11_733 [file="CommandLine.cs", label="CommandLine.CommandLineParserSettings", span=""];
m11_734 [file="CommandLine.cs", label="CommandLine.CommandLineParser", span=""];
m14_14 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m14_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Result.Should().Be.False()", span="66-66"];
m14_16 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Result = null", span="67-67"];
m14_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m14_18 [cluster="Unk.False", file="CommandLineParserBaseFixture.cs", label="Entry Unk.False", span=""];
m14_4 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53"];
m14_5 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Parser = new CommandLineParser()", span="55-55"];
m14_6 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CreateInstance()", span="53-53"];
m14_0 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41"];
m14_1 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''en-US'')", span="47-47"];
m14_2 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.CommandLineParserBaseFixture()", span="41-41"];
m14_7 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681"];
m14_13 [cluster="Unk.True", file="CommandLineParserBaseFixture.cs", label="Entry Unk.True", span=""];
m14_3 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserBaseFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m14_12 [cluster="Unk.Should", file="CommandLineParserBaseFixture.cs", label="Entry Unk.Should", span=""];
m14_8 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m14_9 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Result.Should().Be.True()", span="60-60"];
m14_10 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Result = null", span="61-61"];
m14_11 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserBaseFixture.cs", label="Exit CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m14_19 [file="CommandLineParserBaseFixture.cs", label="CommandLine.Tests.CommandLineParserBaseFixture", span=""];
m16_10 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
m16_11 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="64-64"];
m16_12 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''something'' }, options)", span="65-65"];
m16_14 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''something'')", span="68-68"];
m16_15 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="69-69"];
m16_13 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="67-67"];
m16_16 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringOption()", span="62-62"];
m16_178 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m16_179 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="304-304"];
m16_180 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int'' }, options)", span="305-305"];
m16_181 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="307-307"];
m16_182 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAnIntegerTypeLongOptionFails()", span="302-302"];
m16_262 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m16_263 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="447-447"];
m16_264 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', short.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="448-448"];
m16_265 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="450-450"];
m16_266 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingShortValueToByteOptionMustFailGracefully()", span="445-445"];
m16_244 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m16_245 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="415-415"];
m16_246 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d-4096.1024'' }, options)", span="416-416"];
m16_248 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="419-419"];
m16_247 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="418-418"];
m16_249 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle2()", span="413-413"];
m16_286 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m16_287 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="483-483"];
m16_288 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-f'', double.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="484-484"];
m16_289 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="486-486"];
m16_290 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingDoubleValueToFloatOptionMustFailGracefully()", span="481-481"];
m16_0 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43"];
m16_1 [cluster="CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.CommandLineParserFixture()", span="43-43"];
m16_126 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadDefaults.SimpleOptionsWithBadDefaults()", span="33-33"];
m16_30 [cluster="Unk.True", file="CommandLineParserFixture.cs", label="Entry Unk.True", span=""];
m16_83 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m16_121 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaultArray.SimpleOptionsWithDefaultArray()", span="35-35"];
m16_256 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m16_257 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="435-435"];
m16_258 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double=-4096.1024'' }, options)", span="436-436"];
m16_260 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="439-439"];
m16_259 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="438-438"];
m16_261 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle4()", span="433-433"];
m16_93 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParserFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m16_285 [cluster="float.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry float.ToString(System.IFormatProvider)", span="0-0"];
m16_250 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m16_251 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="425-425"];
m16_252 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'', ''-4096.1024'' }, options)", span="426-426"];
m16_254 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="429-429"];
m16_253 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="428-428"];
m16_255 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue_InputStyle3()", span="423-423"];
m16_94 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m16_7 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
m16_8 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] { }, null)", span="58-58"];
m16_9 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfOptionsInstanceIsNull()", span="56-56"];
m16_17 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m16_75 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m16_76 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithEnum()", span="147-147"];
m16_77 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''data.bin'', ''-a'', ''ReadWrite'' }, options)", span="149-149"];
m16_79 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''data.bin'')", span="152-152"];
m16_80 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="options.FileAccess.Should().Equal(FileAccess.ReadWrite)", span="153-153"];
m16_81 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="154-154"];
m16_78 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="151-151"];
m16_82 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseEnumOptions()", span="145-145"];
m16_74 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m16_162 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553"];
m16_226 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m16_227 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="385-385"];
m16_228 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int'', ''-4096'' }, options)", span="386-386"];
m16_230 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="389-389"];
m16_229 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="388-388"];
m16_231 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle3()", span="383-383"];
m16_163 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m16_164 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="277-277"];
m16_165 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'' }, options)", span="278-278"];
m16_166 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="280-280"];
m16_167 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAStringTypeLongOptionFails()", span="275-275"];
m16_31 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
m16_32 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="89-89"];
m16_33 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-ca'', ''-d65'' }, options)", span="90-90"];
m16_35 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.BooleanThree.Should().Be.True()", span="93-93"];
m16_36 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.BooleanOne.Should().Be.True()", span="94-94"];
m16_37 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.BooleanTwo.Should().Be.False()", span="95-95"];
m16_38 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="options.NonBooleanValue.Should().Equal(65D)", span="96-96"];
m16_39 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="97-97"];
m16_34 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="92-92"];
m16_40 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortAdjacentOptions()", span="87-87"];
m16_68 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
m16_69 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="136-136"];
m16_70 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i=10'' }, options)", span="138-138"];
m16_72 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="140-140"];
m16_71 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="139-139"];
m16_73 [cluster="CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ShortOptionRefusesEqualToken()", span="134-134"];
m16_280 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m16_281 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="474-474"];
m16_282 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-l'', float.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="475-475"];
m16_283 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="477-477"];
m16_284 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingFloatValueToLongOptionMustFailGracefully()", span="472-472"];
m16_18 [cluster="Unk.Should", file="CommandLineParserFixture.cs", label="Entry Unk.Should", span=""];
m16_53 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
m16_54 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithOptionList()", span="117-117"];
m16_55 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                                ''-k'', ''string1:stringTwo:stringIII'', ''-s'', ''test-file.txt'' }, options)", span="118-119"];
m16_57 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.SearchKeywords[0].Should().Equal(''string1'')", span="122-122"];
m16_58 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[0])", span="123-123"];
m16_59 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.SearchKeywords[1].Should().Equal(''stringTwo'')", span="124-124"];
m16_60 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[1])", span="125-125"];
m16_61 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.SearchKeywords[2].Should().Equal(''stringIII'')", span="126-126"];
m16_62 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.SearchKeywords[2])", span="127-127"];
m16_63 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''test-file.txt'')", span="128-128"];
m16_64 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options.StringValue)", span="129-129"];
m16_56 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="121-121"];
m16_65 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionList()", span="115-115"];
m16_193 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m16_194 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="331-331"];
m16_195 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--double'' }, options)", span="332-332"];
m16_196 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="334-334"];
m16_197 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToADoubleTypeLongOptionFails()", span="329-329"];
m16_6 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m16_153 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m16_154 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser(new CommandLineParserSettings(false))", span="263-263"];
m16_155 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="264-264"];
m16_156 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="265-265"];
m16_158 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="options.AlfaValue.Should().Equal(''alfa'')", span="268-268"];
m16_159 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="options.BetaValue.Should().Equal(''beta'')", span="269-269"];
m16_157 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="267-267"];
m16_160 [cluster="CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DisablingCaseSensitive()", span="261-261"];
m16_220 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m16_221 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="376-376"];
m16_222 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i-4096'' }, options)", span="377-377"];
m16_224 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="380-380"];
m16_223 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="379-379"];
m16_225 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle2()", span="374-374"];
m16_20 [cluster="System.Console.WriteLine(object)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m16_42 [cluster="Unk.False", file="CommandLineParserFixture.cs", label="Entry Unk.False", span=""];
m16_41 [cluster="CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.BooleanSetOptions.BooleanSetOptions()", span="35-35"];
m16_66 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithOptionList.SimpleOptionsWithOptionList()", span="35-35"];
m16_137 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m16_138 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="241-241"];
m16_139 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="242-242"];
m16_140 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-a'', ''alfa'', ''--beta-OPTION'', ''beta'' }, options)", span="243-243"];
m16_142 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="options.AlfaValue.Should().Equal(''alfa'')", span="246-246"];
m16_143 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="options.BetaValue.Should().Equal(''beta'')", span="247-247"];
m16_141 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="245-245"];
m16_144 [cluster="CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.DefaultParsingIsCaseSensitive()", span="239-239"];
m16_84 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m16_85 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="160-160"];
m16_86 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="161-161"];
m16_91 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="168-168"];
m16_87 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="162-162"];
m16_88 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''10,986'' }, options)", span="163-163"];
m16_90 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(10.986D)", span="166-166"];
m16_89 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="165-165"];
m16_92 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNumber()", span="158-158"];
m16_132 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m16_133 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="230-230"];
m16_134 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--extend'' }, options)", span="231-231"];
m16_135 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="233-233"];
m16_136 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentLongOptionFailsWithoutThrowingAnException()", span="228-228"];
m16_21 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
m16_22 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="75-75"];
m16_23 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="76-77"];
m16_25 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''another string'')", span="80-80"];
m16_26 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(100)", span="81-81"];
m16_27 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="options.BooleanValue.Should().Be.True()", span="82-82"];
m16_28 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="83-83"];
m16_24 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="79-79"];
m16_29 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseStringIntegerBoolOptions()", span="73-73"];
m16_204 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m16_205 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="352-352"];
m16_206 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-sparser.xml'', ''-'', ''--switch'' }, options)", span="353-353"];
m16_208 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''parser.xml'')", span="356-356"];
m16_209 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.BooleanValue.Should().Be.True()", span="357-357"];
m16_210 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.Items.Count.Should().Equal(1)", span="358-358"];
m16_211 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="options.Items[0].Should().Equal(''-'')", span="359-359"];
m16_207 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="355-355"];
m16_212 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsNonOptionValue()", span="350-350"];
m16_145 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="1681-1681"];
m16_161 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m16_147 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m16_148 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ICommandLineParser local = new CommandLineParser()", span="253-253"];
m16_149 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="var options = new MixedCaseOptions()", span="254-254"];
m16_150 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Result = local.ParseArguments(new string[] { ''-A'', ''alfa'', ''--Beta-Option'', ''beta'' }, options)", span="255-255"];
m16_151 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="257-257"];
m16_152 [cluster="CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.UsingWrongCaseWithDefaultFails()", span="251-251"];
m16_214 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m16_215 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="367-367"];
m16_216 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''-4096'' }, options)", span="368-368"];
m16_218 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="371-371"];
m16_217 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="370-370"];
m16_219 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue()", span="365-365"];
m16_2 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
m16_3 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(null, new SimpleOptions())", span="51-51"];
m16_4 [cluster="CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.WillThrowExceptionIfArgumentsArrayIsNull()", span="49-49"];
m16_122 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m16_123 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithBadDefaults()", span="213-213"];
m16_124 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="base.Parser.ParseArguments(new string[] {}, options)", span="214-214"];
m16_125 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithBadDefaults()", span="211-211"];
m16_213 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m16_112 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithDefaults.SimpleOptionsWithDefaults()", span="33-33"];
m16_198 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m16_199 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="342-342"];
m16_200 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--string'', ''-'' }, options)", span="343-343"];
m16_202 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''-'')", span="346-346"];
m16_201 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="345-345"];
m16_203 [cluster="CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.AllowSingleDashAsOptionInputValue()", span="340-340"];
m16_5 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m16_268 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m16_269 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="456-456"];
m16_270 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', int.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="457-457"];
m16_271 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="459-459"];
m16_272 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingIntegerValueToShortOptionMustFailGracefully()", span="454-454"];
m16_232 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m16_233 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="394-394"];
m16_234 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--int=-4096'' }, options)", span="395-395"];
m16_236 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(-4096)", span="398-398"];
m16_235 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="397-397"];
m16_237 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeIntegerValue_InputStyle4()", span="392-392"];
m16_67 [cluster="System.Console.WriteLine(string)", file="CommandLineParserFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m16_43 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
m16_44 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="var options = new BooleanSetOptions()", span="103-103"];
m16_45 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-b'', ''--double=9'' }, options)", span="104-104"];
m16_47 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.BooleanTwo.Should().Be.True()", span="107-107"];
m16_48 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.BooleanOne.Should().Be.False()", span="108-108"];
m16_49 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.BooleanThree.Should().Be.False()", span="109-109"];
m16_50 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="options.NonBooleanValue.Should().Equal(9D)", span="110-110"];
m16_51 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Console.WriteLine(options)", span="111-111"];
m16_46 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="106-106"];
m16_52 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseShortLongOptions()", span="101-101"];
m16_168 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m16_169 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="286-286"];
m16_170 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--byte'' }, options)", span="287-287"];
m16_171 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="289-289"];
m16_172 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAByteTypeLongOptionFails()", span="284-284"];
m16_183 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m16_184 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="313-313"];
m16_185 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--long'' }, options)", span="314-314"];
m16_186 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="316-316"];
m16_187 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToALongTypeLongOptionFails()", span="311-311"];
m16_146 [cluster="CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.Mocks.MixedCaseOptions.MixedCaseOptions()", span="33-33"];
m16_238 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m16_239 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="405-405"];
m16_240 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-d'', ''-4096.1024'' }, options)", span="406-406"];
m16_242 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="options.DoubleValue.Should().Equal(-4096.1024D)", span="409-409"];
m16_241 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="408-408"];
m16_243 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseNegativeFloatingPointValue()", span="403-403"];
m16_291 [cluster="double.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry double.ToString(System.IFormatProvider)", span="0-0"];
m16_113 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m16_114 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaultArray()", span="200-200"];
m16_115 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''4'', ''5'', ''6'' }, options)", span="201-201"];
m16_117 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="options.StringArrayValue.Should().Equal(new string[] { ''a'', ''b'', ''c'' })", span="204-204"];
m16_118 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="options.IntegerArrayValue.Should().Equal(new int[] { 4, 5, 6 })", span="205-205"];
m16_119 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="options.DoubleArrayValue.Should().Equal(new double[] { 1.1, 2.2, 3.3 })", span="206-206"];
m16_116 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="203-203"];
m16_120 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaultArray()", span="198-198"];
m16_274 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m16_275 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="465-465"];
m16_276 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', long.MaxValue.ToString(CultureInfo.InvariantCulture) }, options)", span="466-466"];
m16_277 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="468-468"];
m16_278 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingLongValueToIntegerOptionMustFailGracefully()", span="463-463"];
m16_267 [cluster="short.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry short.ToString(System.IFormatProvider)", span="0-0"];
m16_95 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m16_96 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="174-174"];
m16_97 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="175-175"];
m16_102 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="182-182"];
m16_98 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="176-176"];
m16_99 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--n-double'', ''12,32982'' }, options)", span="177-177"];
m16_101 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="options.NullableDoubleValue.Should().Equal(12.32982D)", span="180-180"];
m16_100 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="179-179"];
m16_103 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseCultureSpecificNullableNumber()", span="172-172"];
m16_273 [cluster="int.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m16_188 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m16_189 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="322-322"];
m16_190 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--float'' }, options)", span="323-323"];
m16_191 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="325-325"];
m16_192 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAFloatTypeLongOptionFails()", span="320-320"];
m16_104 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m16_105 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptionsWithDefaults()", span="188-188"];
m16_106 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {}, options)", span="189-189"];
m16_108 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="options.StringValue.Should().Equal(''str'')", span="192-192"];
m16_109 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="options.IntegerValue.Should().Equal(9)", span="193-193"];
m16_110 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="options.BooleanValue.Should().Be.True()", span="194-194"];
m16_107 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="ResultShouldBeTrue()", span="191-191"];
m16_111 [cluster="CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParseOptionsWithDefaults()", span="186-186"];
m16_279 [cluster="long.ToString(System.IFormatProvider)", file="CommandLineParserFixture.cs", label="Entry long.ToString(System.IFormatProvider)", span="0-0"];
m16_19 [cluster="Unk.Equal", file="CommandLineParserFixture.cs", label="Entry Unk.Equal", span=""];
m16_127 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m16_128 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="var options = new SimpleOptions()", span="221-221"];
m16_129 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-x'' }, options)", span="222-222"];
m16_130 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="224-224"];
m16_131 [cluster="CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.ParsingNonExistentShortOptionFailsWithoutThrowingAnException()", span="219-219"];
m16_173 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Entry CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m16_174 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="var options = new NumberSetOptions()", span="295-295"];
m16_175 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--short'' }, options)", span="296-296"];
m16_176 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="ResultShouldBeFalse()", span="298-298"];
m16_177 [cluster="CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", file="CommandLineParserFixture.cs", label="Exit CommandLine.Tests.CommandLineParserFixture.PassingNoValueToAShortTypeLongOptionFails()", span="293-293"];
m16_292 [file="CommandLineParserFixture.cs", label="CommandLine.Tests.CommandLineParserFixture", span=""];
m18_12 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m18_0 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41"];
m18_1 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="43-43"];
m18_2 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings(writer))", span="44-44"];
m18_6 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="50-50"];
m18_3 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="45-45"];
m18_4 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] {''--help''}, options)", span="47-47"];
m18_5 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="success.Should().Be.False()", span="49-49"];
m18_7 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingConstructor()", span="41-41"];
m18_11 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.SimpleOptionsWithHelpOption()", span="33-33"];
m18_14 [cluster="Unk.False", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.False", span=""];
m18_8 [cluster="System.IO.StringWriter.StringWriter()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m18_15 [cluster="System.IO.StringWriter.ToString()", file="CommandLineParserSettingsFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m18_36 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486"];
m18_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m18_27 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m18_28 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m18_29 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="71-71"];
m18_30 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(new CommandLineParserSettings())", span="72-72"];
m18_32 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options, writer)", span="75-75"];
m18_34 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="78-78"];
m18_31 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="73-73"];
m18_33 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="success.Should().Be.False()", span="77-77"];
m18_35 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingArgument()", span="69-69"];
m18_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564"];
m18_16 [cluster="Unk.Equal", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.Equal", span=""];
m18_13 [cluster="Unk.Should", file="CommandLineParserSettingsFixture.cs", label="Entry Unk.Should", span=""];
m18_17 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Entry CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m18_18 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var writer = new StringWriter()", span="56-56"];
m18_19 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var settings = new CommandLineParserSettings()", span="57-57"];
m18_20 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="settings.HelpWriter = writer", span="58-58"];
m18_25 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="writer.ToString().Should().Equal(''MockOptions::GetUsage()'')", span="65-65"];
m18_21 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="ICommandLineParser parser = new CommandLineParser(settings)", span="59-59"];
m18_22 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="var options = new SimpleOptionsWithHelpOption()", span="60-60"];
m18_23 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="bool success = parser.ParseArguments(new string[] { ''--help'' }, options)", span="62-62"];
m18_24 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="success.Should().Be.False()", span="64-64"];
m18_26 [cluster="CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", file="CommandLineParserSettingsFixture.cs", label="Exit CommandLine.Tests.CommandLineParserSettingsFixture.SettingHelpWriterUsingProperty()", span="54-54"];
m20_4 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53"];
m20_5 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="return DebugStringUtil.ConvertOptionsToString(this);", span="55-55"];
m20_6 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ToString()", file="ComplexOptions.cs", label="Exit CommandLine.Tests.Mocks.ComplexOptions.ToString()", span="53-53"];
m20_0 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m20_1 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="StartOffset = 0", span="37-37"];
m20_2 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Bytes = 0", span="38-38"];
m20_3 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="ComplexOptions.cs", label="Exit CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m20_7 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="ComplexOptions.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m20_8 [file="ComplexOptions.cs", label="CommandLine.Tests.Mocks.ComplexOptions", span=""];
m22_13 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m22_2 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m22_3 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="var yearsPart = new StringBuilder(years.Length * 4)", span="56-56"];
m22_4 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label=years, span="58-58"];
m22_7 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(string.Concat(''''', y))", span="62-62"];
m22_8 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append(y)", span="64-64"];
m22_9 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Append('', '')", span="65-65"];
m22_10 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="yearsPart.Remove(yearsPart.Length - 2, 2)", span="67-67"];
m22_11 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="return yearsPart.ToString();", span="69-69"];
m22_5 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="string y = year.ToString(CultureInfo.InvariantCulture)", span="60-60"];
m22_6 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="y.Length == 2", span="61-61"];
m22_12 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.FormatYears(int[])", span="54-54"];
m22_44 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m22_45 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="new CopyrightInfo(''Authors, Inc.'')", span="117-117"];
m22_46 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfNoYearsAreSupplied()", span="115-115"];
m22_27 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83"];
m22_28 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(true, ''X & Y Group'', 2006, 2007)", span="85-85"];
m22_29 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 2006, 2007 X & Y Group'')", span="87-87"];
m22_30 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.UpperSymbolTwoConsecutiveYears()", span="83-83"];
m22_0 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m22_1 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.CopyleftInfo.CopyleftInfo(bool, string, params int[])", span="44-44"];
m22_15 [cluster="string.Concat(string, string)", file="CopyrightInfoFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m22_47 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m22_48 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="var info = new CopyleftInfo(true, ''Free Company, Inc.'', 96, 97, 98, 2005)", span="123-123"];
m22_49 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="info.ToString().Should().Equal(''Copyleft (C) '96, '97, '98, 2005 Free Company, Inc.'')", span="125-125"];
m22_50 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DerivedClass()", span="121-121"];
m22_25 [cluster="Unk.Should", file="CopyrightInfoFixture.cs", label="Entry Unk.Should", span=""];
m22_35 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="179-179"];
m22_51 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130"];
m22_52 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="var info = new CopyrightInfo (''ManOnTheMoon, Inc.'', 2019)", span="132-132"];
m22_53 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="int i=0", span="134-134"];
m22_55 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="info.ToString().Length.Should().Equal(37)", span="136-136"];
m22_54 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="i<10", span="134-134"];
m22_56 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="i++", span="134-134"];
m22_57 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.ShouldNotGrowWhenConvertedToString()", span="130-130"];
m22_31 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91"];
m22_32 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''W & Z, Inc.'', 2005, 2007)", span="93-93"];
m22_33 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 2005 - 2007 W & Z, Inc.'')", span="95-95"];
m22_34 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolTwoNonConsecutiveYears()", span="91-91"];
m22_17 [cluster="System.Text.StringBuilder.Remove(int, int)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m22_23 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="193-193"];
m22_43 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166"];
m22_36 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m22_37 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(''CommandLine, Ltd'', 1999, 2003, 2004, 2007)", span="101-101"];
m22_38 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (C) 1999 - 2003, 2004 - 2007 CommandLine, Ltd'')", span="103-103"];
m22_39 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.DefaultSymbolSeveralYears()", span="99-99"];
m22_24 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="209-209"];
m22_18 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m22_16 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfoFixture.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m22_14 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfoFixture.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m22_26 [cluster="Unk.Equal", file="CopyrightInfoFixture.cs", label="Entry Unk.Equal", span=""];
m22_19 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m22_20 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="var copyright = new CopyrightInfo(false, ''Authors, Inc.'', 2007)", span="77-77"];
m22_21 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="copyright.ToString().Should().Equal(''Copyright (c) 2007 Authors, Inc.'')", span="79-79"];
m22_22 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.LowerSymbolOneYear()", span="75-75"];
m22_40 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Entry CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m22_41 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="new CopyrightInfo(null, 2000)", span="110-110"];
m22_42 [cluster="CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", file="CopyrightInfoFixture.cs", label="Exit CommandLine.Text.Tests.CopyrightInfoFixture.WillThrowExceptionIfAuthorIsNull()", span="108-108"];
m23_33 [cluster="System.Text.StringBuilder.Append(object)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m23_16 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59"];
m23_19 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="var baseOA = attr as BaseOptionAttribute", span="61-61"];
m23_22 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(baseOA.ShortName)", span="67-67"];
m23_24 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(''/'')", span="70-70"];
m23_26 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(baseOA.LongName)", span="75-75"];
m23_27 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append('': '')", span="77-77"];
m23_28 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(field.GetValue(instance))", span="78-78"];
m23_29 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(Environment.NewLine)", span="79-79"];
m23_20 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA != null", span="63-63"];
m23_21 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA.HasShortName", span="65-65"];
m23_23 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA.HasLongName", span="68-68"];
m23_25 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="baseOA.HasLongName", span="73-73"];
m23_30 [cluster="CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.AppendBaseOptionAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="59-59"];
m23_31 [cluster="System.Text.StringBuilder.Append(string)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m23_12 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m23_0 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m23_1 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="var builder = new StringBuilder(256)", span="41-41"];
m23_2 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="var type = instance.GetType()", span="42-42"];
m23_8 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="AppendBaseOptionAttribute(builder, instance, field, attr)", span="51-51"];
m23_9 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="AppendValueListAttribute(builder, instance, field, attr)", span="52-52"];
m23_10 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="return builder.ToString();", span="56-56"];
m23_3 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="var fields = type.GetFields()", span="43-43"];
m23_4 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label=fields, span="45-45"];
m23_5 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="object[] attrs = field.GetCustomAttributes(false)", span="47-47"];
m23_6 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="attrs.Length > 0", span="48-48"];
m23_7 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="object attr = attrs[0]", span="50-50"];
m23_11 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m23_13 [cluster="object.GetType()", file="DebugStringUtil.cs", label="Entry object.GetType()", span="0-0"];
m23_32 [cluster="System.Reflection.FieldInfo.GetValue(object)", file="DebugStringUtil.cs", label="Entry System.Reflection.FieldInfo.GetValue(object)", span="0-0"];
m23_18 [cluster="System.Text.StringBuilder.ToString()", file="DebugStringUtil.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m23_14 [cluster="System.Type.GetFields()", file="DebugStringUtil.cs", label="Entry System.Type.GetFields()", span="0-0"];
m23_15 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="DebugStringUtil.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m23_17 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Entry CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83"];
m23_34 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="var valueList = attr as ValueListAttribute", span="85-85"];
m23_36 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="IList<string> values = (IList<string>)field.GetValue(instance)", span="89-89"];
m23_38 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(''non-option value: '')", span="92-92"];
m23_39 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(value)", span="93-93"];
m23_40 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="builder.Append(Environment.NewLine)", span="94-94"];
m23_35 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="valueList != null", span="87-87"];
m23_37 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label=values, span="90-90"];
m23_41 [cluster="CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", file="DebugStringUtil.cs", label="Exit CommandLine.Tests.DebugStringUtil.AppendValueListAttribute(System.Text.StringBuilder, object, System.Reflection.FieldInfo, object)", span="83-83"];
m25_19 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="EnumeratorsFixture.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335"];
m25_20 [cluster="CommandLine.IArgumentEnumerator.MoveNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.IArgumentEnumerator.MoveNext()", span="532-532"];
m25_23 [cluster="Unk.False", file="EnumeratorsFixture.cs", label="Entry Unk.False", span=""];
m25_47 [cluster="CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", file="EnumeratorsFixture.cs", label="Entry CommandLine.OneCharStringEnumerator.OneCharStringEnumerator(string)", span="628-628"];
m25_25 [cluster="Unk.True", file="EnumeratorsFixture.cs", label="Entry Unk.True", span=""];
m25_24 [cluster="Unk.Null", file="EnumeratorsFixture.cs", label="Entry Unk.Null", span=""];
m25_0 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39"];
m25_1 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueOne = ''one''", span="41-41"];
m25_2 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueTwo = ''two''", span="42-42"];
m25_4 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string[] values = { valueOne, valueTwo, valueThree }", span="45-45"];
m25_7 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(valueOne)", span="49-49"];
m25_3 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="string valueThree = ''three''", span="43-43"];
m25_8 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(valueTwo)", span="50-50"];
m25_11 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(valueTwo)", span="55-55"];
m25_12 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(valueThree)", span="56-56"];
m25_15 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(valueThree)", span="61-61"];
m25_5 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new StringArrayEnumerator(values)", span="46-46"];
m25_6 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="47-47"];
m25_9 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="51-51"];
m25_10 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="53-53"];
m25_13 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="57-57"];
m25_14 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="59-59"];
m25_16 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Be.Null()", span="62-62"];
m25_17 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.True()", span="63-63"];
m25_18 [cluster="CommandLine.Tests.EnumeratorsFixture.StringIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.StringIteration()", span="39-39"];
m25_22 [cluster="Unk.Equal", file="EnumeratorsFixture.cs", label="Entry Unk.Equal", span=""];
m25_21 [cluster="Unk.Should", file="EnumeratorsFixture.cs", label="Entry Unk.Should", span=""];
m25_48 [cluster="CommandLine.IArgumentEnumerator.GetRemainingFromNext()", file="EnumeratorsFixture.cs", label="Entry CommandLine.IArgumentEnumerator.GetRemainingFromNext()", span="527-527"];
m25_26 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Entry CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67"];
m25_27 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="IArgumentEnumerator e = new OneCharStringEnumerator(''abcd'')", span="69-69"];
m25_28 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="70-70"];
m25_29 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''a'')", span="72-72"];
m25_30 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(''b'')", span="73-73"];
m25_31 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.GetRemainingFromNext().Should().Equal(''bcd'')", span="74-74"];
m25_32 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="75-75"];
m25_33 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="77-77"];
m25_34 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''b'')", span="79-79"];
m25_35 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(''c'')", span="80-80"];
m25_36 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.GetRemainingFromNext().Should().Equal(''cd'')", span="81-81"];
m25_37 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="82-82"];
m25_38 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="84-84"];
m25_39 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''c'')", span="86-86"];
m25_40 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Next.Should().Equal(''d'')", span="87-87"];
m25_41 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.GetRemainingFromNext().Should().Equal(''d'')", span="88-88"];
m25_42 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.False()", span="89-89"];
m25_43 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.MoveNext()", span="91-91"];
m25_44 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.Current.Should().Equal(''d'')", span="93-93"];
m25_45 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="e.IsLast.Should().Be.True()", span="94-94"];
m25_46 [cluster="CommandLine.Tests.EnumeratorsFixture.CharIteration()", file="EnumeratorsFixture.cs", label="Exit CommandLine.Tests.EnumeratorsFixture.CharIteration()", span="67-67"];
m29_0 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41"];
m29_1 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myprog'')", span="43-43"];
m29_2 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="string s = hi", span="44-44"];
m29_5 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''a message'', sw)", span="49-49"];
m29_3 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="s.Should().Equal(''myprog'')", span="46-46"];
m29_4 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="48-48"];
m29_6 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="sw.ToString().Should().Equal(''myprog: a message'' + Environment.NewLine)", span="51-51"];
m29_7 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.OnlyProgramName()", span="41-41"];
m29_11 [cluster="System.IO.StringWriter.StringWriter()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m29_13 [cluster="System.IO.StringWriter.ToString()", file="HeadingInfoFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m29_22 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298"];
m29_8 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="286-286"];
m29_10 [cluster="Unk.Equal", file="HeadingInfoFixture.cs", label="Entry Unk.Equal", span=""];
m29_12 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string, System.IO.TextWriter)", span="343-343"];
m29_9 [cluster="Unk.Should", file="HeadingInfoFixture.cs", label="Entry Unk.Should", span=""];
m29_14 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Entry CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m29_15 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var hi = new HeadingInfo(''myecho'', ''2.5'')", span="57-57"];
m29_16 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="string s = hi", span="58-58"];
m29_19 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="hi.WriteMessage(''hello unit-test'', sw)", span="63-63"];
m29_17 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="s.Should().Equal(''myecho 2.5'')", span="60-60"];
m29_18 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="var sw = new StringWriter()", span="62-62"];
m29_20 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="sw.ToString().Should().Equal(''myecho: hello unit-test'' + Environment.NewLine)", span="65-65"];
m29_21 [cluster="CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", file="HeadingInfoFixture.cs", label="Exit CommandLine.Text.Tests.HeadingInfoFixture.ProgramNameAndVersion()", span="55-55"];
m31_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m31_15 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="946-946"];
m31_27 [cluster="System.IO.StringWriter.ToString()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m31_24 [cluster="System.IO.StringWriter.StringWriter()", file="HelpOptionAttributeFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m31_14 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="921-921"];
m31_30 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m31_31 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="89-89"];
m31_32 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="90-90"];
m31_33 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''math.xml'', ''-oresult.xml'' }, options, writer)", span="92-93"];
m31_35 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="97-97"];
m31_34 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="ResultShouldBeFalse()", span="95-95"];
m31_36 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="(helpText.Length > 0).Should().Be.True()", span="98-98"];
m31_37 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Console.Write(helpText)", span="100-100"];
m31_38 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.BadInputActivatesHelp()", span="87-87"];
m31_41 [cluster="System.Console.Write(string)", file="HelpOptionAttributeFixture.cs", label="Entry System.Console.Write(string)", span="0-0"];
m31_12 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298"];
m31_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166"];
m31_25 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1486-1486"];
m31_40 [cluster="Unk.True", file="HelpOptionAttributeFixture.cs", label="Entry Unk.True", span=""];
m31_16 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m31_17 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="76-76"];
m31_18 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="77-77"];
m31_19 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''-imath.xml'', ''-oresult.xml'' }, options, writer)", span="79-80"];
m31_21 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="writer.ToString().Length.Should().Equal(0)", span="83-83"];
m31_20 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="ResultShouldBeTrue()", span="82-82"];
m31_22 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.CorrectInputNotActivatesHelp()", span="74-74"];
m31_42 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", span="104-104"];
m31_43 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="var options = new MockOptions()", span="106-106"];
m31_44 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="var writer = new StringWriter()", span="107-107"];
m31_45 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''--help'' }, options, writer)", span="109-110"];
m31_47 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="string helpText = writer.ToString()", span="114-114"];
m31_46 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="ResultShouldBeFalse()", span="112-112"];
m31_48 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="(helpText.Length > 0).Should().Be.True()", span="115-115"];
m31_49 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.ExplicitHelpActivation()", span="104-104"];
m31_0 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m31_1 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60"];
m31_2 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61"];
m31_3 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62"];
m31_4 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63"];
m31_5 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64"];
m31_6 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65"];
m31_7 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66"];
m31_8 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="help.AddOptions(this)", span="67-67"];
m31_9 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="return help;", span="68-68"];
m31_10 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", file="HelpOptionAttributeFixture.cs", label="Exit CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
m31_29 [cluster="Unk.Equal", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m31_11 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="681-681"];
m31_28 [cluster="Unk.Should", file="HelpOptionAttributeFixture.cs", label="Entry Unk.Should", span=""];
m31_23 [cluster="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.HelpOptionAttributeFixture.MockOptions.MockOptions()", span="43-43"];
m31_26 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="HelpOptionAttributeFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m31_50 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", span=""];
m31_51 [file="HelpOptionAttributeFixture.cs", label="CommandLine.Tests.HelpOptionAttributeFixture", span=""];
m33_125 [cluster="string.Format(System.IFormatProvider, string, object)", file="HelpTextFixture.cs", label="Entry string.Format(System.IFormatProvider, string, object)", span="0-0"];
m33_175 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="398-398"];
m33_176 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="400-400"];
m33_177 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''0'', ''-ap'' }, options)", span="402-403"];
m33_178 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="405-405"];
m33_179 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadMutualExclusiveness()", span="398-398"];
m33_154 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m33_195 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433"];
m33_196 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="string optionHelp = null", span="436-436"];
m33_197 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs", label="e.Option.ShortName.Value", prediction=19, span="438-438"];
m33_202 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.Required", span="449-449"];
m33_204 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="e.Option.HelpText = optionHelp", span="454-454"];
m33_198 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs", label="'v'", prediction=20, span="440-440"];
m33_200 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", color=green, community=0, file="HelpTextFixture.cs", label="'i'", prediction=21, span="444-444"];
m33_199 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Kommentar umfassend Operationen.''", span="441-441"];
m33_201 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Gibt den Eingang an zu bearbeitenden Datei.''", span="445-445"];
m33_203 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="optionHelp = ''Erforderlich. '' + optionHelp", span="451-451"];
m33_205 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat_FormatOptionHelpText(object, CommandLine.Text.FormatOptionHelpTextEventArgs)", span="433-433"];
m33_152 [cluster="CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.RPEOptions()", span="6-6"];
m33_193 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object, System.IO.TextWriter)", span="1735-1735"];
m33_138 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="279-279"];
m33_139 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var sw = new StringWriter()", span="281-281"];
m33_140 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var options = new RPEOptions()", span="282-282"];
m33_141 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                MutuallyExclusive = true, CaseSensitive = true, HelpWriter = sw})", span="283-284"];
m33_144 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var outsw = sw.ToString()", span="289-289"];
m33_142 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var result = parser.ParseArguments(new string[] {''--option-b'', ''hello'', ''-cWORLD''}, options)", span="285-285"];
m33_143 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="287-287"];
m33_145 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Console.WriteLine(outsw)", span="291-291"];
m33_146 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="var lines = outsw.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="293-293"];
m33_147 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''--option-b option violates format.'')", span="295-295"];
m33_148 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''-c/--option-c option violates format.'')", span="296-296"];
m33_149 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''-a required option is missing.'')", span="297-297"];
m33_150 [cluster="CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InvokeRenderParsingErrorsText()", span="279-279"];
m33_181 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="409-409"];
m33_182 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="411-411"];
m33_183 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(true, true, Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''zero'', ''-pa'' }, options)", span="413-414"];
m33_184 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="416-416"];
m33_185 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormatAndMutualExclusiveness()", span="409-409"];
m33_58 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="173-173"];
m33_59 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="175-175"];
m33_60 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescriptionAndNoSpaces())", span="176-176"];
m33_61 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="177-177"];
m33_62 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="179-179"];
m33_63 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''  v, verbose    Before '')", span="180-180"];
m33_64 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''                012345678901234567890123'')", span="181-181"];
m33_65 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''                After'')", span="182-182"];
m33_66 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[5].Should().Equal(''  input-file    Before '')", span="183-183"];
m33_67 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''                012345678901234567890123'')", span="184-184"];
m33_68 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="lines[7].Should().Equal(''                456789 After'')", span="185-185"];
m33_69 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongHelpTextWithoutSpaces()", span="173-173"];
m33_21 [cluster="CommandLine.Text.HelpText.AddOptions(object)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="946-946"];
m33_121 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="651-651"];
m33_134 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="271-271"];
m33_135 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="273-273"];
m33_136 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="local.ToString().Should().Equal('''')", span="275-275"];
m33_137 [cluster="CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CreateBasicInstance()", span="271-271"];
m33_20 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="921-921"];
m33_151 [cluster="System.IO.StringWriter.StringWriter()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
m33_163 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.ComplexOptionsWithHelp()", span="89-89"];
m33_19 [cluster="string.Concat(string, string)", file="HelpTextFixture.cs", label="Entry string.Concat(string, string)", span="0-0"];
m33_86 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="209-209"];
m33_87 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="var local = new HelpText(''Customizing Test.'')", span="211-211"];
m33_88 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.FormatOptionHelpText += new EventHandler<FormatOptionHelpTextEventArgs>(CustomizeOptionsFormat_FormatOptionHelpText)", span="212-212"];
m33_89 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="213-213"];
m33_90 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsWithDescription())", span="214-214"];
m33_91 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="215-215"];
m33_92 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="217-217"];
m33_93 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="219-219"];
m33_94 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="221-221"];
m33_95 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''Customizing Test.'')", span="222-222"];
m33_96 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''Pre-Options.'')", span="223-223"];
m33_97 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''  v, verbose       Kommentar umfassend Operationen.'')", span="224-224"];
m33_98 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''  i, input-file    Erforderlich. Gibt den Eingang an zu bearbeitenden Datei.'')", span="225-225"];
m33_99 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="226-226"];
m33_100 [cluster="CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.CustomizeOptionsFormat()", span="209-209"];
m33_170 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="387-387"];
m33_171 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="389-389"];
m33_172 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-i0'' }, options)", span="391-392"];
m33_173 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="394-394"];
m33_174 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequiredAndBadFormat()", span="387-387"];
m33_14 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="681-681"];
m33_16 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="179-179"];
m33_44 [cluster="Unk.Should", file="HelpTextFixture.cs", label="Entry Unk.Should", span=""];
m33_57 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescription.MockOptionsWithLongDescription()", span="65-65"];
m33_102 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithDescription.MockOptionsWithDescription()", span="56-56"];
m33_158 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="365-365"];
m33_159 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="367-367"];
m33_160 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-iIN.FILE'', ''-oOUT.FILE'', ''--offset'', ''abc'' }, options)", span="369-370"];
m33_161 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="372-372"];
m33_162 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithBadFormat()", span="365-365"];
m33_42 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="1131-1131"];
m33_156 [cluster="Unk.False", file="HelpTextFixture.cs", label="Entry Unk.False", span=""];
m33_157 [cluster="System.IO.StringWriter.ToString()", file="HelpTextFixture.cs", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
m33_25 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="131-131"];
m33_26 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="_helpText.AddPreOptionsLine(string.Empty)", span="133-133"];
m33_27 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddAnEmptyPreOptionsLineIsAllowed()", span="131-131"];
m33_15 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="298-298"];
m33_46 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="157-157"];
m33_47 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.MaximumDisplayWidth = 40", span="159-159"];
m33_48 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="_helpText.AddOptions(new MockOptionsWithLongDescription())", span="160-160"];
m33_49 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string help = _helpText.ToString()", span="161-161"];
m33_50 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new[] {Environment.NewLine}, StringSplitOptions.None)", span="163-163"];
m33_51 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''  v, verbose    This is the description'')", span="164-164"];
m33_52 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''                of the verbosity to '')", span="166-166"];
m33_53 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''                test out the wrapping '')", span="167-167"];
m33_54 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[5].Should().Equal(''                capabilities of the '')", span="168-168"];
m33_55 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''                Help Text.'')", span="169-169"];
m33_56 [cluster="CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.WhenHelpTextIsLongerThanWidthItWillWrapAroundAsIfInAColumn()", span="157-157"];
m33_123 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="166-166"];
m33_122 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string)", span="286-286"];
m33_41 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="936-936"];
m33_153 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m33_194 [cluster="Unk.Exactly", file="HelpTextFixture.cs", label="Entry Unk.Exactly", span=""];
m33_18 [cluster="string.IsNullOrEmpty(string)", file="HelpTextFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m33_126 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="253-253"];
m33_127 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="var local = new HelpText {\r\n                AddDashesToOption = true,\r\n                Heading = new HeadingInfo(''AddOptionsWithDashes''),\r\n                Copyright = new CopyrightInfo(''Author'', DateTime.Now.Year)\r\n            }", prediction=22, span="255-259"];
m33_128 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", prediction=23, span="260-260"];
m33_129 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="string help = local.ToString()", prediction=24, span="262-262"];
m33_130 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="Console.WriteLine(help)", prediction=25, span="264-264"];
m33_131 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="266-266"];
m33_132 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", color=green, community=0, file="HelpTextFixture.cs", label="lines[3].Should().Equal(''  -s, --something    Input something here.'')", prediction=26, span="267-267"];
m33_133 [cluster="CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.AddOptionsWithDashes()", span="253-253"];
m33_164 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564"];
m33_17 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="HelpTextFixture.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="1004-1004"];
m33_101 [cluster="EventHandler<FormatOptionHelpTextEventArgs>.cstr", file="HelpTextFixture.cs", label="Entry EventHandler<FormatOptionHelpTextEventArgs>.cstr", span=""];
m33_165 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="376-376"];
m33_166 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="var options = new ComplexOptionsWithHelp()", span="378-378"];
m33_167 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="bool result = new CommandLineParser(new CommandLineParserSettings(Console.Out)).ParseArguments(\r\n                new string[] { ''-j0'' }, options)", span="380-381"];
m33_168 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="result.Should().Be.False()", span="383-383"];
m33_169 [cluster="CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.DetailedHelpWithMissingRequired()", span="376-376"];
m33_71 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="189-189"];
m33_72 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="191-191"];
m33_73 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.MaximumDisplayWidth = 40", span="192-192"];
m33_74 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')", span="193-193"];
m33_75 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="194-194"];
m33_76 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="195-195"];
m33_77 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="197-197"];
m33_78 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="199-199"];
m33_79 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(''Before '')", span="200-200"];
m33_80 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''0123456789012345678901234567890123456789'')", span="201-201"];
m33_81 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[3].Should().Equal(''012 After'')", span="202-202"];
m33_82 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 3].Should().Equal(''Before '')", span="203-203"];
m33_83 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Equal(''0123456789012345678901234567890123456789'')", span="204-204"];
m33_84 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Equal('' After'')", span="205-205"];
m33_85 [cluster="CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.LongPreAndPostLinesWithoutSpaces()", span="189-189"];
m33_186 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="421-421"];
m33_187 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var options = new ComplexOptions()", span="423-423"];
m33_188 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="var writer = new StringWriter()", span="424-424"];
m33_189 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="new CommandLineParser(new CommandLineParserSettings(false,  false, writer)).ParseArguments(new string[0], options, writer)", span="426-426"];
m33_190 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="options.InternalLastPostParsingState.Errors.Should().Count.Exactly(2)", span="428-428"];
m33_191 [cluster="CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.MultipleRequiredFields_WithMoreThanOneRequiredFieldNotSpecified_ReportsAllMissingRequiredFields()", span="421-421"];
m33_0 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="98-98"];
m33_1 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="var help = new HelpText(new HeadingInfo(''unittest'', ''1.9''))", span="100-100"];
m33_2 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AdditionalNewLineAfterOption = true", span="101-101"];
m33_3 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.Copyright = new CopyrightInfo(''CommandLine.dll Author'', 2005, 2011)", span="102-102"];
m33_4 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="string errors = help.RenderParsingErrorsText(this, 2)", span="105-105"];
m33_6 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="HelpTextFixture.cs", label="help.AddPreOptionsLine(string.Concat(Environment.NewLine, ''ERROR(S):''))", prediction=27, span="108-108"];
m33_7 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", color=green, community=0, file="HelpTextFixture.cs", label="help.AddPreOptionsLine(errors)", prediction=27, span="109-109"];
m33_8 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''This is free software. You may redistribute copies of it under the terms of'')", span="112-112"];
m33_9 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", span="113-113"];
m33_10 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddPreOptionsLine(''Usage: Please run the unit...'')", span="114-114"];
m33_11 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="help.AddOptions(this)", span="115-115"];
m33_12 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="return help;", span="117-117"];
m33_5 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="!string.IsNullOrEmpty(errors)", span="106-106"];
m33_13 [cluster="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp.GetUsage()", span="98-98"];
m33_103 [cluster="System.Console.WriteLine(string)", file="HelpTextFixture.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m33_192 [cluster="CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Tests.Mocks.ComplexOptions.ComplexOptions()", span="35-35"];
m33_40 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptions.MockOptions()", span="47-47"];
m33_70 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsWithLongDescriptionAndNoSpaces.MockOptionsWithLongDescriptionAndNoSpaces()", span="74-74"];
m33_28 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="140-140"];
m33_29 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="var local = new HelpText(''Heading Info.'')", span="142-142"];
m33_30 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a first pre-options line.'')", span="143-143"];
m33_31 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''This is a second pre-options line.'')", span="144-144"];
m33_32 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptions())", span="145-145"];
m33_33 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a first post-options line.'')", span="146-146"];
m33_34 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''This is a second post-options line.'')", span="147-147"];
m33_35 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="149-149"];
m33_36 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="151-151"];
m33_37 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="lines[lines.Length - 2].Should().Equal(''This is a first post-options line.'')", span="152-152"];
m33_38 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="lines[lines.Length - 1].Should().Equal(''This is a second post-options line.'')", span="153-153"];
m33_39 [cluster="CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.PostOptionsLinesFeatureAdded()", span="140-140"];
m33_22 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="125-125"];
m33_23 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="_helpText = new HelpText(new HeadingInfo(_ThisAssembly.Title, _ThisAssembly.Version))", span="127-127"];
m33_24 [cluster="CommandLine.Text.Tests.HelpTextFixture.SetUp()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.SetUp()", span="125-125"];
m33_124 [cluster="CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.MockOptionsSimple.MockOptionsSimple()", span="83-83"];
m33_180 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool, bool, System.IO.TextWriter)", span="1603-1603"];
m33_45 [cluster="Unk.Equal", file="HelpTextFixture.cs", label="Entry Unk.Equal", span=""];
m33_43 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m33_155 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="HelpTextFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717"];
m33_104 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Entry CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="230-230"];
m33_105 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var year = DateTime.Now.Year", span="232-232"];
m33_106 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="var local = new HelpText()", span="233-233"];
m33_108 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Copyright = new CopyrightInfo(''Author'', year)", span="235-235"];
m33_116 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[1].Should().Equal(string.Format(CultureInfo.InvariantCulture, ''Copyright (C) {0} Author'', year))", span="246-246"];
m33_107 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.Heading = new HeadingInfo(''Parameterless Constructor Test.'')", span="234-234"];
m33_109 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPreOptionsLine(''Pre-Options.'')", span="236-236"];
m33_110 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddOptions(new MockOptionsSimple())", span="237-237"];
m33_111 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="local.AddPostOptionsLine(''Post-Options.'')", span="238-238"];
m33_112 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string help = local.ToString()", span="240-240"];
m33_113 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Console.WriteLine(help)", span="242-242"];
m33_114 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="string[] lines = help.Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="244-244"];
m33_115 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[0].Should().Equal(''Parameterless Constructor Test.'')", span="245-245"];
m33_117 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[2].Should().Equal(''Pre-Options.'')", span="247-247"];
m33_118 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[4].Should().Equal(''  s, something    Input something here.'')", span="248-248"];
m33_119 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="lines[6].Should().Equal(''Post-Options.'')", span="249-249"];
m33_120 [cluster="CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", file="HelpTextFixture.cs", label="Exit CommandLine.Text.Tests.HelpTextFixture.InstancingWithParameterlessConstructor()", span="230-230"];
m33_206 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", span=""];
m33_207 [file="HelpTextFixture.cs", label="CommandLine.Text.Tests.HelpTextFixture", span=""];
m39_41 [cluster="System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", file="MultiLineTextAttribute.cs", label="Entry System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", span="0-0"];
m39_25 [cluster="System.Array.ForEach<T>(T[], System.Action<T>)", file="MultiLineTextAttribute.cs", label="Entry System.Array.ForEach<T>(T[], System.Action<T>)", span="0-0"];
m39_21 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110"];
m39_22 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", color=green, community=0, file="MultiLineTextAttribute.cs", label="var strArray = new string[] {_line1, _line2, _line3, _line4, _line5}", prediction=29, span="112-112"];
m39_23 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", color=green, community=1, file="MultiLineTextAttribute.cs", label="Array.ForEach( strArray, (line) =>\r\n            {\r\n                if (!string.IsNullOrEmpty(line)) { action( line ); }\r\n            })", prediction=30, span="113-116"];
m39_24 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.AddToHelpText(System.Action<string>)", span="110-110"];
m39_17 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", span="103-103"];
m39_18 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line5, ''line5'')", prediction=31, span="106-106"];
m39_19 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="_line5 = line5", prediction=32, span="107-107"];
m39_20 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string, string)", span="103-103"];
m39_37 [cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", span="139-139"];
m39_38 [cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", color=green, community=0, file="MultiLineTextAttribute.cs", label="int index = Array.FindLastIndex(strArray, (str) => { return !string.IsNullOrEmpty(str); })", prediction=33, span="141-141"];
m39_39 [cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", color=green, community=0, file="MultiLineTextAttribute.cs", label="return index + 1;", prediction=34, span="144-144"];
m39_40 [cluster="CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.GetLastLineWithText(string[])", span="139-139"];
m39_0 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", span="46-46"];
m39_1 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line1, ''line1'')", prediction=35, span="48-48"];
m39_2 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="_line1 = line1", prediction=36, span="49-49"];
m39_3 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string)", span="46-46"];
m39_5 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", span="58-58"];
m39_6 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line2, ''line2'')", prediction=37, span="61-61"];
m39_7 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="_line2 = line2", prediction=38, span="62-62"];
m39_8 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string)", span="58-58"];
m39_9 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", span="72-72"];
m39_10 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line3, ''line3'')", prediction=39, span="75-75"];
m39_11 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="_line3 = line3", prediction=40, span="76-76"];
m39_12 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string)", span="72-72"];
m39_42 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="141-141"];
m39_26 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="113-116"];
m39_28 [cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs", label="action( line )", prediction=30, span="115-115"];
m39_27 [cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs", label="!string.IsNullOrEmpty(line)", prediction=42, span="115-115"];
m39_29 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="113-116"];
m39_43 [cluster="lambda expression", color=green, community=0, file="MultiLineTextAttribute.cs", label="return !string.IsNullOrEmpty(str);", prediction=43, span="141-141"];
m39_44 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="141-141"];
m39_30 [cluster="string.IsNullOrEmpty(string)", file="MultiLineTextAttribute.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m39_32 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119"];
m39_33 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs", label=before, prediction=44, span="123-123"];
m39_34 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs", label="AddToHelpText(helpText.AddPreOptionsLine)", prediction=45, span="125-125"];
m39_35 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", color=green, community=0, file="MultiLineTextAttribute.cs", label="AddToHelpText(helpText.AddPostOptionsLine)", prediction=45, span="129-129"];
m39_36 [cluster="CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="119-119"];
m39_31 [cluster="System.Action<T>.Invoke(T)", file="MultiLineTextAttribute.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m39_4 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="1004-1004"];
m39_13 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", span="87-87"];
m39_14 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="Assumes.NotNullOrEmpty(line4, ''line4'')", prediction=47, span="90-90"];
m39_15 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", color=green, community=0, file="MultiLineTextAttribute.cs", label="_line4 = line4", prediction=48, span="91-91"];
m39_16 [cluster="CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultiLineTextAttribute.MultiLineTextAttribute(string, string, string, string)", span="87-87"];
m39_45 [file="MultiLineTextAttribute.cs", label="System.Action<string>", span=""];
m39_46 [file="MultiLineTextAttribute.cs", label="CommandLine.Text.MultiLineTextAttribute", span=""];
m40_9 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="MultiLineTextAttributeFixture.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m40_10 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m40_8 [cluster="object.GetType()", file="MultiLineTextAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m40_12 [cluster="Unk.Equal", file="MultiLineTextAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m40_0 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m40_1 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="IEnumerable<AssemblyLicenseAttribute> licenseAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyLicenseAttribute), false) as AssemblyLicenseAttribute[]", prediction=49, span="45-45"];
m40_2 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="licenseAttributes.Count().Should().Equal(1)", prediction=50, span="47-47"];
m40_3 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="string license = licenseAttributes.Single().Value", prediction=51, span="49-49"];
m40_4 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="string[] lines = license.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", prediction=52, span="50-50"];
m40_5 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="lines[0].Should().Equal(@''This is free software. You may redistribute copies of it under the terms of'')", prediction=53, span="51-51"];
m40_6 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="lines[1].Should().Equal(@''the MIT License <http://www.opensource.org/licenses/mit-license.php>.'')", prediction=52, span="52-52"];
m40_7 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyLicenseShouldOfferReadOnlyPropertyNamedValue()", span="43-43"];
m40_14 [cluster="string.Split(string[], System.StringSplitOptions)", file="MultiLineTextAttributeFixture.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m40_11 [cluster="Unk.Should", file="MultiLineTextAttributeFixture.cs", label="Entry Unk.Should", span=""];
m40_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MultiLineTextAttributeFixture.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m40_15 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Entry CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56"];
m40_16 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="IEnumerable<AssemblyUsageAttribute> usageAttributes = this.GetType().Assembly.GetCustomAttributes(typeof(AssemblyUsageAttribute), false) as AssemblyUsageAttribute[]", prediction=55, span="58-58"];
m40_17 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="usageAttributes.Count().Should().Equal(1)", prediction=56, span="60-60"];
m40_18 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", color=green, community=0, file="MultiLineTextAttributeFixture.cs", label="usageAttributes.Single().Value.Should().Equal(@''[no usage, this is a dll]'' + Environment.NewLine)", prediction=55, span="61-61"];
m40_19 [cluster="CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", file="MultiLineTextAttributeFixture.cs", label="Exit CommandLine.Text.Tests.MultiLineTextAttributeFixture.AssemblyUsageShouldOfferReadOnlyPropertyNamedValue()", span="56-56"];
m40_20 [file="MultiLineTextAttributeFixture.cs", label="CommandLine.Text.Tests.MultiLineTextAttributeFixture", span=""];
m41_44 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m41_45 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="98-98"];
m41_46 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="99-99"];
m41_47 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="101-101"];
m41_48 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionFails()", span="96-96"];
m41_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m41_23 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m41_18 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56"];
m41_19 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="58-58"];
m41_20 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-i'', ''1'', ''--file=mystuff.xml'' }, options)", span="59-59"];
m41_21 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="61-61"];
m41_22 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsFails()", span="56-56"];
m41_49 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSetAndOneOption.OptionsWithMultipleSetAndOneOption()", span="35-35"];
m41_2 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40"];
m41_3 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Parser = new CommandLineParser(new CommandLineParserSettings {MutuallyExclusive = true})", span="42-42"];
m41_4 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.CreateInstance()", span="40-40"];
m41_38 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m41_31 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m41_32 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="78-78"];
m41_33 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'' }, options)", span="79-79"];
m41_35 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Green.Should().Equal((byte) 167)", span="82-82"];
m41_36 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Hue.Should().Equal((short) 205)", span="83-83"];
m41_34 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="81-81"];
m41_37 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingTwoMutuallyExclusiveOptionsInTwoSetSucceeds()", span="76-76"];
m41_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m41_5 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m41_13 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m41_24 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m41_25 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="67-67"];
m41_26 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'', ''-v'' }, options)", span="68-68"];
m41_28 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.FileName.Should().Equal(''mystuff.xml'')", span="71-71"];
m41_29 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Verbose.Should().Equal(true)", span="72-72"];
m41_27 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="70-70"];
m41_30 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionWithAnotherOptionSucceeds()", span="65-65"];
m41_50 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m41_51 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSetAndOneOption()", span="107-107"];
m41_52 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g100'', ''-h200'', ''-cRgbColorSet'' }, options)", span="108-108"];
m41_54 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Green.Should().Equal((byte) 100)", span="111-111"];
m41_55 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.Hue.Should().Equal((short) 200)", span="112-112"];
m41_56 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.DefaultColorSet.Should().Equal(ColorSet.RgbColorSet)", span="113-113"];
m41_53 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="110-110"];
m41_57 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingMutuallyExclusiveOptionsAndRequiredOptionSucceeds()", span="105-105"];
m41_39 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m41_40 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithMultipleSet()", span="89-89"];
m41_41 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-g167'', ''--hue'', ''205'', ''--saturation=37'' }, options)", span="90-90"];
m41_42 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeFalse()", span="92-92"];
m41_43 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingThreeMutuallyExclusiveOptionsInTwoSetFails()", span="87-87"];
m41_17 [cluster="Unk.Equal", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Equal", span=""];
m41_0 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m41_1 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.MutuallyExclusiveParsingFixture()", span="38-38"];
m41_16 [cluster="Unk.Should", file="MutuallyExclusiveParsingFixture.cs", label="Entry Unk.Should", span=""];
m41_7 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46"];
m41_8 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="var options = new OptionsWithDefaultSet()", span="48-48"];
m41_9 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--file=mystuff.xml'' }, options)", span="49-49"];
m41_11 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="options.FileName.Should().Equal(''mystuff.xml'')", span="52-52"];
m41_10 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="ResultShouldBeTrue()", span="51-51"];
m41_12 [cluster="CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", file="MutuallyExclusiveParsingFixture.cs", label="Exit CommandLine.Tests.MutuallyExclusiveParsingFixture.ParsingOneMutuallyExclusiveOptionSucceeds()", span="46-46"];
m41_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="MutuallyExclusiveParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m41_58 [file="MutuallyExclusiveParsingFixture.cs", label="CommandLine.Tests.MutuallyExclusiveParsingFixture", span=""];
m43_0 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="Entry CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m43_1 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="ByteValue = 0", span="37-37"];
m43_2 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="ShortValue = 0", span="38-38"];
m43_3 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="IntegerValue = 0", span="39-39"];
m43_4 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="LongValue = 0", span="40-40"];
m43_5 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="FloatValue = 0", span="41-41"];
m43_6 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="DoubleValue = 0", span="42-42"];
m43_7 [cluster="CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", file="NumberSetOptions.cs", label="Exit CommandLine.Tests.Mocks.NumberSetOptions.NumberSetOptions()", span="35-35"];
m43_8 [file="NumberSetOptions.cs", label="CommandLine.Tests.Mocks.NumberSetOptions", span=""];
m46_12 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="57-57"];
m46_13 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="59-59"];
m46_14 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'', ''alfa'', ''beta'', ''gamma'' }, options)", span="60-60"];
m46_16 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="63-63"];
m46_15 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="62-62"];
m46_17 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongName()", span="57-57"];
m46_56 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123"];
m46_57 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArrayAndValueList()", span="125-125"];
m46_58 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-shere'', ''-i999'', ''--strarr=0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' , ''--switch'', ''f1.xml'', ''f2.xml''}, options)", span="126-127"];
m46_60 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''here'')", span="130-130"];
m46_61 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="options.IntegerValue.Should().Equal(999)", span="131-131"];
m46_62 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''0'', ''1'', ''2'', ''3'', ''4'', ''5'', ''6'', ''7'', ''8'', ''9'' }, options.StringArrayValue)", span="132-132"];
m46_63 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", span="133-133"];
m46_64 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''f1.xml'', ''f2.xml'' }, options.Items)", span="134-134"];
m46_59 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="129-129"];
m46_65 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithValueList()", span="123-123"];
m46_66 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArrayAndValueList.SimpleOptionsWithArrayAndValueList()", span="35-35"];
m46_83 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="164-164"];
m46_84 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="166-166"];
m46_85 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''one'', ''2'', ''3'' }, options)", span="167-167"];
m46_86 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="169-169"];
m46_87 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="171-171"];
m46_88 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-yone'', ''2'', ''3'' }, options)", span="172-172"];
m46_89 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="174-174"];
m46_90 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="176-176"];
m46_91 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--intarr'', ''1'', ''two'', ''3'' }, options)", span="177-177"];
m46_92 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="179-179"];
m46_93 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="181-181"];
m46_94 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--intarr=1'', ''2'', ''three'' }, options)", span="182-182"];
m46_95 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="184-184"];
m46_96 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingBadValueToAnIntegerArrayOptionFails()", span="164-164"];
m46_18 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="67-67"];
m46_19 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="69-69"];
m46_20 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-zapple'', ''kiwi'' }, options)", span="70-70"];
m46_22 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="73-73"];
m46_21 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="72-72"];
m46_23 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithValueAdjacent()", span="67-67"];
m46_55 [cluster="Unk.True", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m46_97 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="189-189"];
m46_98 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="191-191"];
m46_99 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'' }, options)", span="192-192"];
m46_100 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="194-194"];
m46_101 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="196-196"];
m46_102 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--intarr'' }, options)", span="197-197"];
m46_103 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="199-199"];
m46_104 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAnIntegerArrayOptionFails()", span="189-189"];
m46_170 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338"];
m46_171 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''-w'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="340-340"];
m46_172 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithShortName()", span="338-338"];
m46_185 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="OptionArrayAttributeParsingFixture.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m46_46 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="109-109"];
m46_47 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="111-111"];
m46_48 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-i'', ''191919'', ''-z'', ''one'', ''two'', ''three'', ''--switch'', ''--string=near'' }, options)", span="112-113"];
m46_50 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="options.IntegerValue.Should().Equal(191919)", span="116-116"];
m46_51 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="117-117"];
m46_52 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", span="118-118"];
m46_53 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''near'')", span="119-119"];
m46_49 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="115-115"];
m46_54 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameWithOptionsBeforeAndAfter()", span="109-109"];
m46_10 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m46_163 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324"];
m46_164 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''-v'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="326-326"];
m46_165 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithShortName()", span="324-324"];
m46_76 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m46_195 [cluster="CommandLine.Tests.OptionsWithUIntArray.OptionsWithUIntArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionsWithUIntArray.OptionsWithUIntArray()", span="34-34"];
m46_24 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="77-77"];
m46_25 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="79-79"];
m46_26 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr=apple'', ''kiwi'' }, options)", span="80-80"];
m46_28 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''apple'', ''kiwi'' }, options.StringArrayValue)", span="83-83"];
m46_27 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="82-82"];
m46_29 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingLongNameWithEqualSign()", span="77-77"];
m46_131 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="257-257"];
m46_132 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="259-259"];
m46_133 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string=after''\r\n            }, options)", span="260-265"];
m46_135 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="268-268"];
m46_136 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="269-269"];
m46_137 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="270-270"];
m46_138 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''after'')", span="271-271"];
m46_134 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="267-267"];
m46_139 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="273-273"];
m46_140 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''--string'', ''before'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="274-279"];
m46_142 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''before'')", span="282-282"];
m46_143 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="283-283"];
m46_144 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="284-284"];
m46_145 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="285-285"];
m46_141 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="281-281"];
m46_146 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="287-287"];
m46_147 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-s'', ''near-the-center'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="288-293"];
m46_149 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="296-296"];
m46_150 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="297-297"];
m46_151 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''near-the-center'')", span="298-298"];
m46_152 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="299-299"];
m46_148 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="295-295"];
m46_153 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="301-301"];
m46_154 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''--switch'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-i'', ''1234'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''--string'', ''I'm really playing with the parser!''\r\n            }, options)", span="302-309"];
m46_156 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", span="312-312"];
m46_157 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="313-313"];
m46_158 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="314-314"];
m46_159 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options.IntegerValue.Should().Equal(1234)", span="315-315"];
m46_160 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="316-316"];
m46_161 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''I'm really playing with the parser!'')", span="317-317"];
m46_155 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="311-311"];
m46_162 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationTwo()", span="257-257"];
m46_2 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47"];
m46_3 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="49-49"];
m46_4 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-z'', ''alfa'', ''beta'', ''gamma'' }, options)", span="50-50"];
m46_6 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''alfa'', ''beta'', ''gamma'' }, options.StringArrayValue)", span="53-53"];
m46_5 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="52-52"];
m46_7 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortName()", span="47-47"];
m46_166 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m46_196 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m46_197 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="387-387"];
m46_198 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''-s'', ''just a string'',\r\n                ''-o'', ''10'', ''20'', ''30'', ''40'',\r\n                ''-t'', ''11'', ''22'', ''33'', ''44'',\r\n                ''-b''\r\n            }, options)", span="388-393"];
m46_200 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="options.SomeStringValue.Should().Equal(''just a string'')", span="396-396"];
m46_201 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="397-397"];
m46_202 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="398-398"];
m46_203 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="options.SomeBooleanValue.Should().Be.True()", span="399-399"];
m46_199 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="395-395"];
m46_204 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArrayUsingShortNames()", span="385-385"];
m46_37 [cluster="Unk.Should", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m46_39 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98"];
m46_40 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="100-100"];
m46_41 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-s'', ''before'', ''-z'', ''one'', ''two'', ''three'' }, options)", span="101-101"];
m46_43 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''before'')", span="104-104"];
m46_44 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="105-105"];
m46_42 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="103-103"];
m46_45 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionBefore()", span="98-98"];
m46_11 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual<T>(T[], T[])", span="39-39"];
m46_9 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m46_186 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367"];
m46_187 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new OptionsWithUIntArray()", span="369-369"];
m46_188 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Result = CommandLineParser.Default.ParseArguments(new string[] {\r\n                ''--somestr'', ''just a string'',\r\n                ''--arrayone'', ''10'', ''20'', ''30'', ''40'',\r\n                ''--arraytwo'', ''11'', ''22'', ''33'', ''44'',\r\n                ''--somebool''\r\n            }, options)", span="370-375"];
m46_190 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="options.SomeStringValue.Should().Equal(''just a string'')", span="378-378"];
m46_191 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {10, 20, 30, 40}, options.ArrayOne)", span="379-379"];
m46_192 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new uint[] {11, 22, 33, 44}, options.ArrayTwo)", span="380-380"];
m46_193 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="options.SomeBooleanValue.Should().Be.True()", span="381-381"];
m46_189 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="377-377"];
m46_194 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseTwoUIntConsecutiveArray()", span="367-367"];
m46_111 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217"];
m46_112 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="219-219"];
m46_113 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="220-224"];
m46_115 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="227-227"];
m46_116 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="228-228"];
m46_117 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="229-229"];
m46_114 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="226-226"];
m46_118 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="231-231"];
m46_119 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four'',\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4''\r\n            }, options)", span="232-236"];
m46_121 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="239-239"];
m46_122 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="240-240"];
m46_123 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="241-241"];
m46_120 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="238-238"];
m46_124 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="243-243"];
m46_125 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] {\r\n                ''-q'', ''0.1'', ''0.2'', ''0.3'', ''0.4'',\r\n                ''-y'', ''1'', ''2'', ''3'', ''4'',\r\n                ''-z'', ''one'', ''two'', ''three'', ''four''\r\n            }, options)", span="244-248"];
m46_127 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, .2, .3, .4 }, options.DoubleArrayValue)", span="251-251"];
m46_128 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3, 4 }, options.IntegerArrayValue)", span="252-252"];
m46_129 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'', ''four'' }, options.StringArrayValue)", span="253-253"];
m46_126 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="250-250"];
m46_130 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDifferentArraysTogether_CombinationOne()", span="217-217"];
m46_77 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="154-154"];
m46_78 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="156-156"];
m46_79 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-y'', ''1'', ''2'', ''3'' }, options)", span="157-157"];
m46_81 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new int[] { 1, 2, 3 }, options.IntegerArrayValue)", span="160-160"];
m46_80 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="159-159"];
m46_82 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseIntegerArrayOptionUsingShortName()", span="154-154"];
m46_105 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205"];
m46_106 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="207-207"];
m46_107 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-q'', ''0.1'', ''2.3'', ''0.9'' }, options)", span="208-208"];
m46_109 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { .1, 2.3, .9 }, options.DoubleArrayValue)", span="211-211"];
m46_108 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="210-210"];
m46_110 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseDoubleArrayOptionUsingShortName()", span="205-205"];
m46_8 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithArray.SimpleOptionsWithArray()", span="35-35"];
m46_176 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m46_177 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var actualCulture = Thread.CurrentThread.CurrentCulture", span="353-353"];
m46_178 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''it-IT'')", span="354-354"];
m46_183 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Thread.CurrentThread.CurrentCulture = actualCulture", span="361-361"];
m46_179 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="355-355"];
m46_180 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-q'', ''1,2'', ''1,23'', ''1,234'' }, options)", span="356-356"];
m46_182 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new double[] { 1.2, 1.23, 1.234 }, options.DoubleArrayValue)", span="359-359"];
m46_181 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="358-358"];
m46_184 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseCultureSpecificNumber()", span="351-351"];
m46_68 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138"];
m46_69 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="140-140"];
m46_70 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-z'' }, options)", span="141-141"];
m46_71 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="143-143"];
m46_72 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="options = new SimpleOptionsWithArray()", span="145-145"];
m46_73 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''--strarr'' }, options)", span="146-146"];
m46_74 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="148-148"];
m46_75 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.PassingNoValueToAStringArrayOptionFails()", span="138-138"];
m46_167 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m46_168 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''--bstrarr'', ''a'', ''b'', ''c'' }, new SimpleOptionsWithBadOptionArray())", span="333-333"];
m46_169 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToStringWithLongName()", span="331-331"];
m46_173 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345"];
m46_174 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="base.Parser.ParseArguments(new string[] { ''--bintarr'', ''1'', ''2'', ''3'' }, new SimpleOptionsWithBadOptionArray())", span="347-347"];
m46_175 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.WillThrowExceptionIfOptionArrayAttributeBoundToIntegerWithLongName()", span="345-345"];
m46_38 [cluster="Unk.Equal", file="OptionArrayAttributeParsingFixture.cs", label="Entry Unk.Equal", span=""];
m46_67 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m46_0 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m46_1 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.OptionArrayAttributeParsingFixture()", span="42-42"];
m46_30 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Entry CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87"];
m46_31 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithArray()", span="89-89"];
m46_32 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''-z'', ''one'', ''two'', ''three'', ''-s'', ''after'' }, options)", span="90-90"];
m46_34 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'', ''three'' }, options.StringArrayValue)", span="93-93"];
m46_35 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''after'')", span="94-94"];
m46_33 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="92-92"];
m46_36 [cluster="CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", file="OptionArrayAttributeParsingFixture.cs", label="Exit CommandLine.Tests.OptionArrayAttributeParsingFixture.ParseStringArrayOptionUsingShortNameAndStringOptionAfter()", span="87-87"];
m46_205 [file="OptionArrayAttributeParsingFixture.cs", label="CommandLine.Tests.OptionArrayAttributeParsingFixture", span=""];
m52_19 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateInstance()", span="83-83"];
m52_20 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_omBuilder = new OptionMapBuilder(3)", span="85-85"];
m52_24 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="_optionMap = _omBuilder.OptionMap", span="90-90"];
m52_25 [cluster="CommandLine.Tests.OptionMapFixture.CreateInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateInstance()", span="83-83"];
m52_29 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.ManageOptions()", prediction=58, span="100-100"];
m52_30 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.Options[0].Should().Be.SameAs(_optionMap[_omBuilder.Names[0]])", prediction=59, span="102-102"];
m52_31 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", color=green, community=0, file="OptionMapFixture.cs", label="_omBuilder.Options[1].Should().Be.SameAs(_optionMap[_omBuilder.Names[1]])", prediction=60, span="103-103"];
m52_36 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="108-108"];
m52_37 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="var shortOi = _optionMap[''y'']", span="110-110"];
m52_38 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="shortOi.Should().Be.Null()", span="111-111"];
m52_39 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentShortOption()", span="108-108"];
m52_6 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", file="OptionMapFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(bool)", span="1553-1553"];
m52_8 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="54-54"];
m52_9 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="var oa = new OptionAttribute(shortName, longName)", prediction=61, span="56-56"];
m52_10 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="var oi = oa.CreateOptionInfo()", prediction=61, span="57-57"];
m52_11 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_optionMap[oa.UniqueName] = oi", prediction=63, span="58-58"];
m52_13 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_names.Add(oa.UniqueName)", prediction=61, span="60-60"];
m52_12 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", color=green, community=0, file="OptionMapFixture.cs", label="_options.Add(oi)", prediction=61, span="59-59"];
m52_14 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.AppendOption(string, string)", span="54-54"];
m52_5 [cluster="CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="1086-1086"];
m52_26 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="1293-1293"];
m52_27 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="_optionMap = null", span="96-96"];
m52_28 [cluster="CommandLine.Tests.OptionMapFixture.ShutdownInstance()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ShutdownInstance()", span="94-94"];
m52_40 [cluster="Unk.Null", file="OptionMapFixture.cs", label="Entry Unk.Null", span=""];
m52_0 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="47-47"];
m52_1 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_optionMap = new OptionMap(capacity, new CommandLineParserSettings(true))", span="50-50"];
m52_2 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_options = new List<OptionInfo>(capacity)", span="50-50"];
m52_3 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="_names = new List<string>(capacity)", span="51-51"];
m52_4 [cluster="CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.OptionMapBuilder.OptionMapBuilder(int)", span="47-47"];
m52_34 [cluster="Unk.Should", file="OptionMapFixture.cs", label="Entry Unk.Should", span=""];
m52_53 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="var option3 = attribute3.CreateOptionInfo()", span="134-134"];
m52_56 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", prediction=66, span="138-138"];
m52_54 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute1.UniqueName] = option1", span="136-136"];
m52_55 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute2.UniqueName] = option2", span="137-137"];
m52_57 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache != null", prediction=67, span="140-140"];
m52_59 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", span="143-143"];
m52_62 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="121-121"];
m52_66 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", span="152-152"];
m52_67 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option2", span="153-153"];
m52_58 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", color=green, community=0, file="OptionMapFixture.cs", label="optionCache[attribute1.UniqueName] = option1", prediction=68, span="142-142"];
m52_60 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", span="144-144"];
m52_63 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", span=""];
m52_68 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache[attribute2.UniqueName]= option3", span="154-154"];
m52_61 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="return map;", span="147-147"];
m52_64 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="map[attribute3.UniqueName] = option3", span="148-148"];
m52_69 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="return map;", span="157-157"];
m52_65 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="optionCache != null", span="150-150"];
m52_70 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.Internal.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>)", span="131-131"];
m52_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionMapFixture.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="204-204"];
m52_16 [cluster="Unk.CreateOptionInfo", file="OptionMapFixture.cs", label="Entry Unk.CreateOptionInfo", span=""];
m52_35 [cluster="Unk.SameAs", file="OptionMapFixture.cs", label="Entry Unk.SameAs", span=""];
m52_45 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", span="121-121"];
m52_46 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map == null", span="123-123"];
m52_47 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="map = new OptionMap (3, new CommandLineParserSettings (true))", span="125-125"];
m52_51 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="var option1 = attribute1.CreateOptionInfo()", span="132-132"];
m52_52 [cluster="CommandLine.Tests.OptionMapFixture.CreateMap(ref CommandLine.OptionMap, System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>)", file="OptionMapFixture.cs", label="var option2 = attribute2.CreateOptionInfo()", span="133-133"];
m52_17 [cluster="Unk.Add", file="OptionMapFixture.cs", label="Entry Unk.Add", span=""];
m52_18 [cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m52_41 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Entry CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="115-115"];
m52_42 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="var longOi = _optionMap[''nomorebugshere'']", span="117-117"];
m52_43 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="longOi.Should().Be.Null()", span="118-118"];
m52_44 [cluster="CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.RetrieveNotExistentLongOption()", span="115-115"];
m52_7 [cluster="System.Collections.Generic.List<T>.List(int)", file="OptionMapFixture.cs", label="Entry System.Collections.Generic.List<T>.List(int)", span="0-0"];
m52_32 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="_omBuilder.Options[2].Should().Be.SameAs(_optionMap[_omBuilder.Names[2]])", span="104-104"];
m52_33 [cluster="CommandLine.Tests.OptionMapFixture.ManageOptions()", file="OptionMapFixture.cs", label="Exit CommandLine.Tests.OptionMapFixture.ManageOptions()", span="100-100"];
m53_0 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="Entry CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m53_1 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="return DebugStringUtil.ConvertOptionsToString(this);", span="35-35"];
m53_2 [cluster="CommandLine.Tests.Mocks.OptionsBase.ToString()", file="OptionsBase.cs", label="Exit CommandLine.Tests.Mocks.OptionsBase.ToString()", span="33-33"];
m53_3 [cluster="CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", file="OptionsBase.cs", label="Entry CommandLine.Tests.DebugStringUtil.ConvertOptionsToString(object)", span="39-39"];
m53_4 [file="OptionsBase.cs", label="CommandLine.Tests.Mocks.OptionsBase", span=""];
m55_0 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m55_1 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="FileId = int.MinValue", span="37-37"];
m55_2 [cluster="CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", file="OptionsWithDefaultSet.cs", label="Exit CommandLine.Tests.Mocks.OptionsWithDefaultSet.OptionsWithDefaultSet()", span="35-35"];
m55_3 [file="OptionsWithDefaultSet.cs", label="CommandLine.Tests.Mocks.OptionsWithDefaultSet", span=""];
m56_0 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m56_1 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Red = 0", span="37-37"];
m56_2 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Green = 0", span="38-38"];
m56_3 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Blue = 0", span="39-39"];
m56_4 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Hue = 0", span="40-40"];
m56_5 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Saturation = 0", span="41-41"];
m56_6 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Value = 0", span="42-42"];
m56_7 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="OptionsWithMultipleSet.cs", label="Exit CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m56_8 [file="OptionsWithMultipleSet.cs", label="CommandLine.Tests.Mocks.OptionsWithMultipleSet", span=""];
m67_47 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m67_49 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m67_48 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m67_20 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m67_59 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="361-361"];
m67_4 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="95-95"];
m67_5 [cluster="lambda expression", file="Program.cs", label="HelpText.DefaultParsingErrorsHandler(this, current)", span="95-95"];
m67_6 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="95-95"];
m67_52 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m67_7 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="Program.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="840-840"];
m67_55 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m67_17 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="Program.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m67_57 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m67_51 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m67_58 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m67_18 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="1564-1564"];
m67_56 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m67_54 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m67_0 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Entry SampleApp.Program.Options.GetUsage()", span="93-93"];
m67_1 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="return HelpText.AutoBuild(this, (HelpText current) => HelpText.DefaultParsingErrorsHandler(this, current));", span="95-95"];
m67_2 [cluster="SampleApp.Program.Options.GetUsage()", file="Program.cs", label="Exit SampleApp.Program.Options.GetUsage()", span="93-93"];
m67_46 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m67_50 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m67_16 [cluster="SampleApp.Program.Options.Options()", file="Program.cs", label="Entry SampleApp.Program.Options.Options()", span="55-55"];
m67_21 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Entry SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m67_22 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="173-173"];
m67_24 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="176-176"];
m67_26 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="178-178"];
m67_27 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="179-179"];
m67_29 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="183-183"];
m67_30 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="184-184"];
m67_31 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="185-185"];
m67_32 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="186-186"];
m67_33 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="187-187"];
m67_36 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="191-191"];
m67_41 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="199-199"];
m67_42 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="200-200"];
m67_23 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="174-174"];
m67_25 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="177-177"];
m67_28 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="181-181"];
m67_34 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="189-189"];
m67_40 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="198-198"];
m67_35 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="190-190"];
m67_37 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append(op)", span="193-193"];
m67_38 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="194-194"];
m67_39 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="196-196"];
m67_43 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="203-203"];
m67_44 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="204-204"];
m67_45 [cluster="SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", file="Program.cs", label="Exit SampleApp.Program.DoCoreTask(SampleApp.Program.Options)", span="171-171"];
m67_53 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m67_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="Program.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="793-793"];
m67_19 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717"];
m67_8 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Entry SampleApp.Program.Main(string[])", span="156-156"];
m67_9 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="161-161"];
m67_11 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="163-163"];
m67_10 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="162-162"];
m67_13 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="166-166"];
m67_12 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="164-164"];
m67_14 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="168-168"];
m67_15 [cluster="SampleApp.Program.Main(string[])", file="Program.cs", label="Exit SampleApp.Program.Main(string[])", span="156-156"];
m67_60 [file="Program.cs", label="SampleApp.Program.Options", span=""];
m69_10 [cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", span="102-102"];
m69_11 [cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs", label="_target = new MockObject()", span="104-104"];
m69_12 [cluster="CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.CreateInstance()", span="102-102"];
m69_32 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", span="133-133"];
m69_33 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="var pair = ReflectionUtil.RetrieveMethod<MockAttribute>(_target)", span="135-135"];
m69_34 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="pair.Should().Not.Be.Null()", span="137-137"];
m69_35 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="pair.Left.Name.Should().Equal(''DoNothing'')", span="138-138"];
m69_36 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.GetMethodByAttribute()", span="133-133"];
m69_16 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", span="114-114"];
m69_17 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="var list = ReflectionUtil.RetrievePropertyList<MockAttribute>(_target)", span="116-116"];
m69_18 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="list.Should().Count.Exactly(2)", span="118-118"];
m69_19 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="list[0].Left.Name.Should().Equal(''StringField'')", span="119-119"];
m69_20 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="list[1].Left.Name.Should().Equal(''BooleanField'')", span="120-120"];
m69_21 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="PrintFieldList<MockAttribute>(list)", span="122-122"];
m69_22 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="var anotherList = ReflectionUtil.RetrievePropertyList<AnotherMockAttribute>(_target)", span="124-124"];
m69_23 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="anotherList.Should().Count.Exactly(1)", span="126-126"];
m69_24 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="anotherList[0].Left.Name.Should().Equal(''IntField'')", span="127-127"];
m69_25 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="PrintFieldList<AnotherMockAttribute>(anotherList)", span="129-129"];
m69_26 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.GetFieldsByAttribute()", span="114-114"];
m69_31 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="182-182"];
m69_48 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Console.WriteLine(''Attribute: {0}'', list[0].Right.GetType())", span="185-185"];
m69_49 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label=list, span="186-186"];
m69_50 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Console.WriteLine(''\tField: {0}'', pair.Left.Name)", span="188-188"];
m69_51 [cluster="CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.PrintFieldList<TAttribute>(System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>)", span="182-182"];
m69_0 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", span="59-59"];
m69_1 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs", label="IntField = 0", span="61-61"];
m69_2 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.MockObject.MockObject()", span="59-59"];
m69_39 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", span="142-142"];
m69_40 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="var list = ReflectionUtil.RetrievePropertyAttributeList<MockWithValueAttribute>(new AnotherMockObject())", span="144-144"];
m69_41 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list.Should().Not.Be.Null()", span="146-146"];
m69_42 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list.Should().Count.Exactly(3)", span="147-147"];
m69_43 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list[0].StringValue.Should().Equal(''applied to X'')", span="148-148"];
m69_44 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list[1].StringValue.Should().Equal(''applied to Y'')", span="149-149"];
m69_45 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="list[2].StringValue.Should().Equal(''applied to Z'')", span="150-150"];
m69_46 [cluster="CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.GetFieldsAttributeList()", span="142-142"];
m69_47 [cluster="CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="1920-1920"];
m69_37 [cluster="CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="1882-1882"];
m69_29 [cluster="Unk.Exactly", file="ReflectionUtilFixture.cs", label="Entry Unk.Exactly", span=""];
m69_52 [cluster="object.GetType()", file="ReflectionUtilFixture.cs", label="Entry object.GetType()", span="0-0"];
m69_5 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", span="81-81"];
m69_6 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="X = 0", span="83-83"];
m69_7 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Y = 0", span="84-84"];
m69_8 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Z = 0", span="85-85"];
m69_9 [cluster="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject.AnotherMockObject()", span="81-81"];
m69_27 [cluster="CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="ReflectionUtilFixture.cs", label="Entry CommandLine.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="1856-1856"];
m69_38 [cluster="Unk.Null", file="ReflectionUtilFixture.cs", label="Entry Unk.Null", span=""];
m69_53 [cluster="System.Console.WriteLine(string, object)", file="ReflectionUtilFixture.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m69_30 [cluster="Unk.Equal", file="ReflectionUtilFixture.cs", label="Entry Unk.Equal", span=""];
m69_13 [cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", span="108-108"];
m69_14 [cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs", label="_target = null", span="110-110"];
m69_15 [cluster="CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.ShutdownInstance()", span="108-108"];
m69_28 [cluster="Unk.Should", file="ReflectionUtilFixture.cs", label="Entry Unk.Should", span=""];
m69_3 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", file="ReflectionUtilFixture.cs", label="Entry CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", span="74-74"];
m69_4 [cluster="CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", file="ReflectionUtilFixture.cs", label="Exit CommandLine.Tests.ReflectionUtilFixture.MockObject.DoNothing()", span="74-74"];
m69_54 [file="ReflectionUtilFixture.cs", label="CommandLine.Tests.ReflectionUtilFixture.MockObject", span=""];
m69_55 [file="ReflectionUtilFixture.cs", label="CommandLine.Tests.ReflectionUtilFixture.AnotherMockObject", span=""];
m70_14 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler(CommandLine.CommandLineOptionsBase, CommandLine.Text.HelpText)", span="840-840"];
m70_5 [cluster="CommandLine.Text.HelpText.HelpText()", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="651-651"];
m70_10 [cluster="CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object, CommandLine.Text.HandleParsingErrorsDelegate)", span="793-793"];
m70_11 [cluster="lambda expression", file="RPEOptions.cs", label="Entry lambda expression", span="33-34"];
m70_12 [cluster="lambda expression", file="RPEOptions.cs", label="HelpText.DefaultParsingErrorsHandler(this, current)", span="34-34"];
m70_13 [cluster="lambda expression", file="RPEOptions.cs", label="Exit lambda expression", span="33-34"];
m70_7 [cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs", label="Entry CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", span="31-31"];
m70_8 [cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs", label="return HelpText.AutoBuild(this, delegate(HelpText current) {\r\n                HelpText.DefaultParsingErrorsHandler(this, current); });", span="33-34"];
m70_9 [cluster="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", file="RPEOptions.cs", label="Exit CommandLine.Tests.Mocks.RPEOptionsForAutoBuild.GetUsage()", span="31-31"];
m70_6 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", file="RPEOptions.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText(CommandLine.CommandLineOptionsBase, int)", span="1004-1004"];
m70_0 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="Entry CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18"];
m70_1 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="LastPostParsingState.Errors.Count > 0", span="20-20"];
m70_2 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="return new HelpText().RenderParsingErrorsText(this, 0);", span="22-22"];
m70_3 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="return '''';", span="24-24"];
m70_4 [cluster="CommandLine.Tests.Mocks.RPEOptions.GetUsage()", file="RPEOptions.cs", label="Exit CommandLine.Tests.Mocks.RPEOptions.GetUsage()", span="18-18"];
m70_15 [file="RPEOptions.cs", label="CommandLine.Tests.Mocks.RPEOptions", span=""];
m70_16 [file="RPEOptions.cs", label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild", span=""];
m71_0 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m71_1 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs", label="IntegerValue = 0", span="35-35"];
m71_2 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="SimpleOptions.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m71_3 [file="SimpleOptions.cs", label="CommandLine.Tests.Mocks.SimpleOptions", span=""];
m72_3 [cluster="CommandLine.Text.HelpText.AutoBuild(object)", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Text.HelpText.AutoBuild(object)", span="780-780"];
m72_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m72_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="return HelpText.AutoBuild(this);", span="14-14"];
m72_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", file="SimpleOptionsForAutoBuid.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid.GetUsage()", span="12-12"];
m72_4 [file="SimpleOptionsForAutoBuid.cs", label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid", span=""];
m76_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m76_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="BadIntegerValue = 0", span="39-39"];
m76_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", file="SimpleOptionsWithBadOptionArray.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray.SimpleOptionsWithBadOptionArray()", span="37-37"];
m76_3 [file="SimpleOptionsWithBadOptionArray.cs", label="CommandLine.Tests.Mocks.SimpleOptionsWithBadOptionArray", span=""];
m79_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m79_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="FileAccess = FileAccess.Read", span="40-40"];
m79_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", file="SimpleOptionsWithEnum.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithEnum.SimpleOptionsWithEnum()", span="38-38"];
m79_3 [file="SimpleOptionsWithEnum.cs", label="CommandLine.Tests.Mocks.SimpleOptionsWithEnum", span=""];
m80_0 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42"];
m80_1 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="return ''MockOptions::GetUsage()'';", span="44-44"];
m80_2 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", file="SimpleOptionsWithHelpOption.cs", label="Exit CommandLine.Tests.Mocks.SimpleOptionsWithHelpOption.GetUsage()", span="42-42"];
m83_10 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="Singleton.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m83_14 [cluster="System.Console.WriteLine(object)", file="Singleton.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m83_20 [cluster="CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", file="Singleton.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithMultipleSet.OptionsWithMultipleSet()", span="35-35"];
m83_0 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="41-41"];
m83_1 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="var options = new SimpleOptions()", span="43-43"];
m83_2 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                    new string[] { ''-s'', ''another string'', ''-i100'', ''--switch'' }, options)", span="44-45"];
m83_4 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="options.StringValue.Should().Equal(''another string'')", span="48-48"];
m83_5 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="options.IntegerValue.Should().Equal(100)", span="49-49"];
m83_6 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="options.BooleanValue.Should().Be.True()", span="50-50"];
m83_7 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Console.WriteLine(options)", span="51-51"];
m83_3 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="result.Should().Be.True()", span="47-47"];
m83_8 [cluster="CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", file="Singleton.cs", label="Exit CommandLine.Tests.Singleton.ParseStringIntegerBoolOptions()", span="41-41"];
m83_12 [cluster="Unk.True", file="Singleton.cs", label="Entry Unk.True", span=""];
m83_13 [cluster="Unk.Equal", file="Singleton.cs", label="Entry Unk.Equal", span=""];
m83_9 [cluster="CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptions.SimpleOptions()", span="33-33"];
m83_11 [cluster="Unk.Should", file="Singleton.cs", label="Entry Unk.Should", span=""];
m83_15 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="Entry CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55"];
m83_16 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="var options = new OptionsWithMultipleSet()", span="57-57"];
m83_17 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="bool result = CommandLineParser.Default.ParseArguments(\r\n                new string[] { ''-r1'', ''-g2'', ''-b3'', ''-h4'', ''-s5'', ''-v6'' }, options)", span="58-59"];
m83_18 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="result.Should().Be.True()", span="61-61"];
m83_19 [cluster="CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", file="Singleton.cs", label="Exit CommandLine.Tests.Singleton.DefaultDoesntSupportMutuallyExclusiveOptions()", span="55-55"];
m89_20 [cluster="CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsOfPlugInX.OptionsOfPlugInX()", span="41-41"];
m89_18 [cluster="Unk.True", file="UnknownArgumentsFixture.cs", label="Entry Unk.True", span=""];
m89_15 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="1543-1543"];
m89_14 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="1692-1692"];
m89_0 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m89_1 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="string[] args = { ''--plugin'', ''addonX'', ''--filename'', ''input.dat'' }", span="44-44"];
m89_2 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var appOptions = new OptionsForAppWithPlugIns()", span="45-45"];
m89_4 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result1 = parser.ParseArguments(args, appOptions)", span="48-48"];
m89_8 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var result2 = parser.ParseArguments(args, plugInXOptions)", span="54-54"];
m89_3 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings {\r\n                IgnoreUnknownArguments = true, CaseSensitive = true })", span="46-47"];
m89_6 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="appOptions.PlugInName.Should().Equal(''addonX'')", span="51-51"];
m89_5 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="result1.Should().Be.True()", span="50-50"];
m89_7 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="var plugInXOptions = new OptionsOfPlugInX()", span="53-53"];
m89_10 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="plugInXOptions.InputFileName.Should().Equal(''input.dat'')", span="57-57"];
m89_11 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="plugInXOptions.ReadOffset.Should().Equal(10L)", span="58-58"];
m89_9 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="result2.Should().Be.True()", span="56-56"];
m89_12 [cluster="CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", file="UnknownArgumentsFixture.cs", label="Exit CommandLine.Tests.UnknownArgumentsFixture.ParseValidUnknownArguments()", span="42-42"];
m89_19 [cluster="Unk.Equal", file="UnknownArgumentsFixture.cs", label="Entry Unk.Equal", span=""];
m89_17 [cluster="Unk.Should", file="UnknownArgumentsFixture.cs", label="Entry Unk.Should", span=""];
m89_13 [cluster="CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsForAppWithPlugIns.OptionsForAppWithPlugIns()", span="35-35"];
m89_16 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="UnknownArgumentsFixture.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="1717-1717"];
m91_15 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockSpecializedList.MockSpecializedList()", span="41-41"];
m91_3 [cluster="CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.ValueListAttribute(System.Type)", span="304-304"];
m91_12 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m91_13 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new MockSpecializedList().GetType())", span="75-75"];
m91_14 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfStringSubType()", span="73-73"];
m91_22 [cluster="CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.MockOptions.MockOptions()", span="45-45"];
m91_27 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m91_28 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", span="91-91"];
m91_29 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var values = ValueListAttribute.GetReference(options)", span="93-93"];
m91_33 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="base.ElementsShouldBeEqual(new string[] { ''value0'', ''value1'', ''value2'' }, options.Values)", span="98-98"];
m91_30 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value0'')", span="94-94"];
m91_31 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value1'')", span="95-95"];
m91_32 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Add(''value2'')", span="96-96"];
m91_34 [cluster="CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.UseGenericListOfStringInterfaceReference()", span="89-89"];
m91_16 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m91_17 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="var options = new MockOptions()", span="81-81"];
m91_18 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="IList<string> values = ValueListAttribute.GetReference(options)", span="83-83"];
m91_19 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.Should().Not.Be.Null()", span="84-84"];
m91_20 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="values.GetType().Should().Equal(typeof(List<string>))", span="85-85"];
m91_21 [cluster="CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.GetGenericListOfStringInterfaceReference()", span="79-79"];
m91_4 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m91_5 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<object>().GetType())", span="63-63"];
m91_6 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsIncompatible()", span="61-61"];
m91_35 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m91_23 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="328-328"];
m91_8 [cluster="object.GetType()", file="ValueListAttributeFixture.cs", label="Entry object.GetType()", span="0-0"];
m91_25 [cluster="Unk.Null", file="ValueListAttributeFixture.cs", label="Entry Unk.Null", span=""];
m91_36 [cluster="CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.BaseFixture.ElementsShouldBeEqual(string[], System.Collections.Generic.IList<string>)", span="48-48"];
m91_0 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m91_1 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(null)", span="56-56"];
m91_2 [cluster="CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.WillThrowExceptionIfConcreteTypeIsNull()", span="54-54"];
m91_26 [cluster="Unk.Equal", file="ValueListAttributeFixture.cs", label="Entry Unk.Equal", span=""];
m91_24 [cluster="Unk.Should", file="ValueListAttributeFixture.cs", label="Entry Unk.Should", span=""];
m91_9 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m91_10 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="new ValueListAttribute(new List<string>().GetType())", span="69-69"];
m91_11 [cluster="CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", file="ValueListAttributeFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeFixture.ConcreteTypeIsGenericListOfString()", span="67-67"];
m91_7 [cluster="System.Collections.Generic.List<T>.List()", file="ValueListAttributeFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m91_37 [file="ValueListAttributeFixture.cs", label="CommandLine.Tests.ValueListAttributeFixture", span=""];
m92_14 [cluster="CommandLine.ICommandLineParser.ParseArguments(string[], object)", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.ICommandLineParser.ParseArguments(string[], object)", span="1471-1471"];
m92_20 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m92_21 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", span="63-63"];
m92_22 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''file.a'', ''file.b'', ''file.c'' }, options)", span="64-64"];
m92_24 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.InputFilenames[0].Should().Equal(''file.a'')", span="67-67"];
m92_25 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.InputFilenames[1].Should().Equal(''file.b'')", span="68-68"];
m92_26 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.InputFilenames[2].Should().Equal(''file.c'')", span="69-69"];
m92_27 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.OutputFile.Should().Be.Null()", span="70-70"];
m92_28 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="options.Overwrite.Should().Be.False()", span="71-71"];
m92_29 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="72-72"];
m92_23 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="66-66"];
m92_30 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemInsideBounds()", span="61-61"];
m92_39 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeFalse()", span="64-64"];
m92_19 [cluster="System.Console.WriteLine(object)", file="ValueListAttributeParsingFixture.cs", label="Entry System.Console.WriteLine(object)", span="0-0"];
m92_33 [cluster="Unk.False", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.False", span=""];
m92_34 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m92_35 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumThree()", span="78-78"];
m92_36 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                    new string[] { ''file.a'', ''file.b'', ''file.c'', ''file.d'' }, options)", span="79-80"];
m92_37 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="82-82"];
m92_38 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemOutsideBounds()", span="76-76"];
m92_31 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumThree.OptionsWithValueListMaximumThree()", span="35-35"];
m92_18 [cluster="Unk.True", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.True", span=""];
m92_48 [cluster="Unk.Zero", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Zero", span=""];
m92_13 [cluster="CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.SimpleOptionsWithValueList.SimpleOptionsWithValueList()", span="35-35"];
m92_0 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40"];
m92_1 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeParsingFixture()", span="40-40"];
m92_32 [cluster="Unk.Null", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Null", span=""];
m92_47 [cluster="CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.Mocks.OptionsWithValueListMaximumZero.OptionsWithValueListMaximumZero()", span="36-36"];
m92_17 [cluster="Unk.Equal", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Equal", span=""];
m92_2 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m92_3 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="var options = new SimpleOptionsWithValueList()", span="47-47"];
m92_4 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(\r\n                new string[] { ''--switch'', ''file1.ext'', ''file2.ext'', ''file3.ext'', ''-s'', ''out.ext'' }, options)", span="48-49"];
m92_6 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.Items[0].Should().Equal(''file1.ext'')", span="52-52"];
m92_7 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.Items[1].Should().Equal(''file2.ext'')", span="53-53"];
m92_8 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.Items[2].Should().Equal(''file3.ext'')", span="54-54"];
m92_9 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.StringValue.Should().Equal(''out.ext'')", span="55-55"];
m92_10 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="options.BooleanValue.Should().Be.True()", span="56-56"];
m92_11 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="57-57"];
m92_5 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="51-51"];
m92_12 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListAttributeIsolatesNonOptionValues()", span="45-45"];
m92_16 [cluster="Unk.Should", file="ValueListAttributeParsingFixture.cs", label="Entry Unk.Should", span=""];
m92_49 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m92_50 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="99-99"];
m92_51 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { ''some'', ''value'' }, options)", span="101-101"];
m92_52 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeFalse()", span="102-102"];
m92_53 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroFailes()", span="97-97"];
m92_40 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m92_41 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="var options = new OptionsWithValueListMaximumZero()", span="88-88"];
m92_42 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Result = base.Parser.ParseArguments(new string[] { }, options)", span="89-89"];
m92_44 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="options.Junk.Should().Count.Zero()", span="92-92"];
m92_45 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Console.WriteLine(options)", span="93-93"];
m92_43 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="ResultShouldBeTrue()", span="91-91"];
m92_46 [cluster="CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", file="ValueListAttributeParsingFixture.cs", label="Exit CommandLine.Tests.ValueListAttributeParsingFixture.ValueListWithMaxElemSetToZeroSucceeds()", span="86-86"];
m92_15 [cluster="CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", file="ValueListAttributeParsingFixture.cs", label="Entry CommandLine.Tests.CommandLineParserBaseFixture.ResultShouldBeTrue()", span="58-58"];
m92_54 [file="ValueListAttributeParsingFixture.cs", label="CommandLine.Tests.ValueListAttributeParsingFixture", span=""];
m0_1 -> m0_5  [color=darkseagreen4, key=1, label=ae, style=dashed];
m0_13 -> m0_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
m5_0 -> m5_6  [color=green, key=1, label=object, style=dashed];
m5_4 -> m5_14  [color=green, key=1, label=list, style=dashed];
m5_4 -> m5_15  [color=green, key=1, label=list, style=dashed];
m5_7 -> m5_11  [color=green, key=1, label=property, style=dashed];
m5_50 -> m5_52  [color=green, key=1, label=data, style=dashed];
m5_43 -> m5_54  [color=green, key=1, label=cached, style=dashed];
m5_46 -> m5_48  [color=green, key=1, label=method, style=dashed];
m5_60 -> m5_68  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_60 -> m5_70  [color=darkseagreen4, key=1, label=list, style=dashed];
m5_66 -> m5_68  [color=darkseagreen4, key=1, label=attribute, style=dashed];
m5_58 -> m5_71  [color=darkseagreen4, key=1, label=cached, style=dashed];
m5_30 -> m5_32  [color=green, key=1, label=method, style=dashed];
m5_34 -> m5_36  [color=green, key=1, label=data, style=dashed];
m5_80 -> m5_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m5_80 -> m5_94  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_95 -> m5_97  [color=darkseagreen4, key=1, label=found, style=dashed];
m5_82 -> m5_98  [color=darkseagreen4, key=1, label=cached, style=dashed];
m7_9 -> m7_12  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_9 -> m7_13  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m7_11 -> m7_13  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_11 -> m7_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_14 -> m7_14  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_0 -> m7_3  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m7_0 -> m7_4  [color=darkseagreen4, key=1, label="T[]", style=dashed];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_2 -> m7_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m7_5 -> m7_5  [color=darkseagreen4, key=1, label=i, style=dashed];
m14_19 -> m14_9  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m14_19 -> m14_15  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserBaseFixture", style=dashed];
m16_11 -> m16_14  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_11 -> m16_15  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_245 -> m16_248  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_257 -> m16_260  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_251 -> m16_254  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_76 -> m16_79  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_76 -> m16_80  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_76 -> m16_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_227 -> m16_230  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_32 -> m16_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_32 -> m16_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_32 -> m16_37  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_32 -> m16_38  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_32 -> m16_39  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_69 -> m16_72  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_57  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_58  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_59  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_54 -> m16_64  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_155 -> m16_158  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_155 -> m16_159  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_221 -> m16_224  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_139 -> m16_142  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_139 -> m16_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_87 -> m16_90  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_22 -> m16_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_22 -> m16_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_22 -> m16_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_22 -> m16_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_205 -> m16_208  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_205 -> m16_209  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_205 -> m16_210  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_205 -> m16_211  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_215 -> m16_218  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_199 -> m16_202  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_233 -> m16_236  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_44 -> m16_47  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_44 -> m16_48  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_44 -> m16_49  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_44 -> m16_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_44 -> m16_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_239 -> m16_242  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_114 -> m16_117  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_114 -> m16_118  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_114 -> m16_119  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_98 -> m16_101  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_105 -> m16_108  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_105 -> m16_109  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_105 -> m16_110  [color=darkseagreen4, key=1, label=options, style=dashed];
m16_292 -> m16_3  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_13  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_24  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_56  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_71  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_78  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_89  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_100  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_107  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_124  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_130  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_151  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_157  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_166  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_171  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_176  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_181  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_186  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_196  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_201  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_207  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_217  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_223  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_229  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_235  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_241  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_247  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_253  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_259  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_265  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_271  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_277  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_283  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m16_292 -> m16_289  [color=darkseagreen4, key=1, label="CommandLine.Tests.CommandLineParserFixture", style=dashed];
m18_1 -> m18_6  [color=darkseagreen4, key=1, label=writer, style=dashed];
m18_29 -> m18_34  [color=darkseagreen4, key=1, label=writer, style=dashed];
m18_18 -> m18_25  [color=darkseagreen4, key=1, label=writer, style=dashed];
m20_8 -> m20_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.ComplexOptions", style=dashed];
m22_2 -> m22_4  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m22_3 -> m22_7  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m22_3 -> m22_8  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m22_3 -> m22_9  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m22_3 -> m22_10  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m22_3 -> m22_11  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m22_5 -> m22_7  [color=darkseagreen4, key=1, label=y, style=dashed];
m22_5 -> m22_8  [color=darkseagreen4, key=1, label=y, style=dashed];
m22_52 -> m22_55  [color=darkseagreen4, key=1, label=info, style=dashed];
m22_53 -> m22_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m22_56 -> m22_56  [color=darkseagreen4, key=1, label=i, style=dashed];
m23_16 -> m23_22  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_16 -> m23_24  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_16 -> m23_26  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_16 -> m23_27  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_16 -> m23_28  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_16 -> m23_29  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_19 -> m23_21  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m23_19 -> m23_22  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m23_19 -> m23_23  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m23_19 -> m23_25  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m23_19 -> m23_26  [color=darkseagreen4, key=1, label=baseOA, style=dashed];
m23_0 -> m23_8  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_0 -> m23_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m23_1 -> m23_8  [color=darkseagreen4, key=1, label=builder, style=dashed];
m23_1 -> m23_9  [color=darkseagreen4, key=1, label=builder, style=dashed];
m23_1 -> m23_10  [color=darkseagreen4, key=1, label=builder, style=dashed];
m23_4 -> m23_8  [color=darkseagreen4, key=1, label=field, style=dashed];
m23_4 -> m23_9  [color=darkseagreen4, key=1, label=field, style=dashed];
m23_7 -> m23_9  [color=darkseagreen4, key=1, label=attr, style=dashed];
m23_17 -> m23_38  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_17 -> m23_39  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_17 -> m23_40  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m23_37 -> m23_39  [color=darkseagreen4, key=1, label=value, style=dashed];
m25_1 -> m25_7  [color=darkseagreen4, key=1, label=valueOne, style=dashed];
m25_2 -> m25_8  [color=darkseagreen4, key=1, label=valueTwo, style=dashed];
m25_2 -> m25_11  [color=darkseagreen4, key=1, label=valueTwo, style=dashed];
m25_3 -> m25_12  [color=darkseagreen4, key=1, label=valueThree, style=dashed];
m25_3 -> m25_15  [color=darkseagreen4, key=1, label=valueThree, style=dashed];
m25_5 -> m25_7  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_8  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_9  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_10  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_11  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_12  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_13  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_14  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_15  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_16  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_5 -> m25_17  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_29  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_30  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_31  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_32  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_33  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_34  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_35  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_36  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_37  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_38  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_39  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_40  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_41  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_42  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_43  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_44  [color=darkseagreen4, key=1, label=e, style=dashed];
m25_27 -> m25_45  [color=darkseagreen4, key=1, label=e, style=dashed];
m29_1 -> m29_5  [color=darkseagreen4, key=1, label=hi, style=dashed];
m29_4 -> m29_6  [color=darkseagreen4, key=1, label=sw, style=dashed];
m29_15 -> m29_19  [color=darkseagreen4, key=1, label=hi, style=dashed];
m29_18 -> m29_20  [color=darkseagreen4, key=1, label=sw, style=dashed];
m31_35 -> m31_37  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m31_18 -> m31_21  [color=darkseagreen4, key=1, label=writer, style=dashed];
m31_1 -> m31_3  [color=darkseagreen4, key=1, label=help, style=dashed];
m31_1 -> m31_4  [color=darkseagreen4, key=1, label=help, style=dashed];
m31_1 -> m31_5  [color=darkseagreen4, key=1, label=help, style=dashed];
m31_1 -> m31_6  [color=darkseagreen4, key=1, label=help, style=dashed];
m31_1 -> m31_7  [color=darkseagreen4, key=1, label=help, style=dashed];
m31_1 -> m31_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m31_1 -> m31_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m31_50 -> m31_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture.MockOptions", style=dashed];
m31_51 -> m31_20  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m31_51 -> m31_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m31_51 -> m31_46  [color=darkseagreen4, key=1, label="CommandLine.Tests.HelpOptionAttributeFixture", style=dashed];
m33_195 -> m33_197  [color=green, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m33_195 -> m33_202  [color=darkseagreen4, key=1, label="CommandLine.Text.FormatOptionHelpTextEventArgs", style=dashed];
m33_146 -> m33_148  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_146 -> m33_149  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_62 -> m33_64  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_62 -> m33_65  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_62 -> m33_66  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_62 -> m33_67  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_62 -> m33_68  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_87 -> m33_89  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_87 -> m33_90  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_87 -> m33_91  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_94 -> m33_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_94 -> m33_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_94 -> m33_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_94 -> m33_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_50 -> m33_52  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_50 -> m33_53  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_50 -> m33_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_50 -> m33_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_72 -> m33_74  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_72 -> m33_75  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_72 -> m33_76  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_78 -> m33_80  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_78 -> m33_81  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_78 -> m33_82  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_78 -> m33_83  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_78 -> m33_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_187 -> m33_189  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_187 -> m33_190  [color=darkseagreen4, key=1, label=options, style=dashed];
m33_1 -> m33_6  [color=green, key=1, label=help, style=dashed];
m33_1 -> m33_7  [color=green, key=1, label=help, style=dashed];
m33_1 -> m33_8  [color=darkseagreen4, key=1, label=help, style=dashed];
m33_1 -> m33_9  [color=darkseagreen4, key=1, label=help, style=dashed];
m33_1 -> m33_10  [color=darkseagreen4, key=1, label=help, style=dashed];
m33_1 -> m33_11  [color=darkseagreen4, key=1, label=help, style=dashed];
m33_1 -> m33_12  [color=darkseagreen4, key=1, label=help, style=dashed];
m33_4 -> m33_7  [color=green, key=1, label=errors, style=dashed];
m33_29 -> m33_31  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_29 -> m33_32  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_29 -> m33_33  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_29 -> m33_34  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_36 -> m33_38  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_105 -> m33_116  [color=darkseagreen4, key=1, label=year, style=dashed];
m33_106 -> m33_109  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_106 -> m33_110  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_106 -> m33_111  [color=darkseagreen4, key=1, label=local, style=dashed];
m33_114 -> m33_116  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_114 -> m33_117  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_114 -> m33_118  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_114 -> m33_119  [color=darkseagreen4, key=1, label=lines, style=dashed];
m33_206 -> m33_11  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture.ComplexOptionsWithHelp", style=dashed];
m33_207 -> m33_26  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m33_207 -> m33_48  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m33_207 -> m33_60  [color=darkseagreen4, key=1, label="CommandLine.Text.Tests.HelpTextFixture", style=dashed];
m39_21 -> m39_23  [color=green, key=1, label="System.Action<string>", style=dashed];
m39_21 -> m39_28  [color=green, key=1, label="System.Action<string>", style=dashed];
m39_23 -> m39_26  [color=green, key=1, label="lambda expression", style=dashed];
m39_38 -> m39_42  [color=green, key=1, label="lambda expression", style=dashed];
m39_26 -> m39_28  [color=green, key=1, label=string, style=dashed];
m39_32 -> m39_34  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
m39_32 -> m39_35  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
m39_45 -> m39_28  [color=green, key=1, label="System.Action<string>", style=dashed];
m39_46 -> m39_34  [color=green, key=1, label="CommandLine.Text.MultiLineTextAttribute", style=dashed];
m39_46 -> m39_35  [color=green, key=1, label="CommandLine.Text.MultiLineTextAttribute", style=dashed];
m40_4 -> m40_6  [color=green, key=1, label=lines, style=dashed];
m40_16 -> m40_18  [color=green, key=1, label=usageAttributes, style=dashed];
m41_32 -> m41_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_32 -> m41_36  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_25 -> m41_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_25 -> m41_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_51 -> m41_54  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_51 -> m41_55  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_51 -> m41_56  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_8 -> m41_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m41_58 -> m41_10  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m41_58 -> m41_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m41_58 -> m41_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m41_58 -> m41_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m41_58 -> m41_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m41_58 -> m41_47  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m41_58 -> m41_53  [color=darkseagreen4, key=1, label="CommandLine.Tests.MutuallyExclusiveParsingFixture", style=dashed];
m46_13 -> m46_16  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_57 -> m46_60  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_57 -> m46_61  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_57 -> m46_62  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_57 -> m46_63  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_57 -> m46_64  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_19 -> m46_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_47 -> m46_50  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_47 -> m46_51  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_47 -> m46_52  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_47 -> m46_53  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_25 -> m46_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_132 -> m46_135  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_132 -> m46_136  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_132 -> m46_137  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_132 -> m46_138  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_139 -> m46_142  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_139 -> m46_143  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_139 -> m46_144  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_139 -> m46_145  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_146 -> m46_149  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_146 -> m46_150  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_146 -> m46_151  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_146 -> m46_152  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_153 -> m46_156  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_153 -> m46_157  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_153 -> m46_158  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_153 -> m46_159  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_153 -> m46_160  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_153 -> m46_161  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_3 -> m46_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_197 -> m46_200  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_197 -> m46_201  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_197 -> m46_202  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_197 -> m46_203  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_40 -> m46_43  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_40 -> m46_44  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_187 -> m46_190  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_187 -> m46_191  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_187 -> m46_192  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_187 -> m46_193  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_112 -> m46_115  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_112 -> m46_116  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_112 -> m46_117  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_118 -> m46_121  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_118 -> m46_122  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_118 -> m46_123  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_124 -> m46_127  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_124 -> m46_128  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_124 -> m46_129  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_78 -> m46_81  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_106 -> m46_109  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_179 -> m46_182  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_31 -> m46_34  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_31 -> m46_35  [color=darkseagreen4, key=1, label=options, style=dashed];
m46_205 -> m46_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_6  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_15  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_16  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_21  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_22  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_27  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_28  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_34  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_42  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_44  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_49  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_51  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_59  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_62  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_64  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_71  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_74  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_80  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_81  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_86  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_89  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_92  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_95  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_100  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_103  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_108  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_109  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_114  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_115  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_116  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_117  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_120  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_121  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_122  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_123  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_126  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_127  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_128  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_129  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_134  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_135  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_136  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_137  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_141  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_143  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_144  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_145  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_148  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_149  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_150  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_152  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_155  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_157  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_158  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_160  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_164  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_168  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_171  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_174  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_181  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_182  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_189  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_191  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_192  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_199  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_201  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m46_205 -> m46_202  [color=darkseagreen4, key=1, label="CommandLine.Tests.OptionArrayAttributeParsingFixture", style=dashed];
m52_9 -> m52_13  [color=darkseagreen4, key=1, label=oa, style=dashed];
m52_10 -> m52_12  [color=darkseagreen4, key=1, label=oi, style=dashed];
m52_53 -> m52_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_53 -> m52_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_53 -> m52_68  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m52_53 -> m52_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.Internal.OptionInfo>", style=dashed];
m52_53 -> m52_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_53 -> m52_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_53 -> m52_60  [color=darkseagreen4, key=1, label=option3, style=dashed];
m52_56 -> m52_62  [color=green, key=1, label=attribute1, style=dashed];
m52_55 -> m52_62  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_55 -> m52_63  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_55 -> m52_69  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_55 -> m52_70  [color=darkseagreen4, key=1, label="ref CommandLine.Internal.OptionMap", style=dashed];
m52_57 -> m52_60  [color=green, key=1, label=attribute2, style=dashed];
m52_57 -> m52_63  [color=green, key=1, label=attribute2, style=dashed];
m52_57 -> m52_68  [color=green, key=1, label=attribute2, style=dashed];
m52_59 -> m52_62  [color=darkseagreen4, key=1, label=option1, style=dashed];
m52_58 -> m52_61  [color=green, key=1, label=attribute3, style=dashed];
m52_60 -> m52_63  [color=darkseagreen4, key=1, label=option2, style=dashed];
m52_63 -> m52_12  [color=green, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m52_63 -> m52_13  [color=green, key=1, label="CommandLine.Tests.OptionMapFixture.OptionMapBuilder", style=dashed];
m52_61 -> m52_68  [color=darkseagreen4, key=1, label=option3, style=dashed];
m52_45 -> m52_57  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>", style=dashed];
m52_45 -> m52_60  [color=darkseagreen4, key=1, label="System.Collections.Generic.IDictionary<string, CommandLine.OptionInfo>", style=dashed];
m52_45 -> m52_61  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m52_45 -> m52_62  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m52_47 -> m52_61  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m52_47 -> m52_62  [color=darkseagreen4, key=1, label="ref CommandLine.OptionMap", style=dashed];
m53_4 -> m53_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.OptionsBase", style=dashed];
m67_1 -> m67_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m67_21 -> m67_24  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_26  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_27  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_29  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_30  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_31  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_32  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_33  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_36  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_41  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_21 -> m67_42  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_34 -> m67_37  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_34 -> m67_38  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_34 -> m67_39  [color=darkseagreen4, key=1, label=builder, style=dashed];
m67_8 -> m67_11  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m67_9 -> m67_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m67_9 -> m67_13  [color=darkseagreen4, key=1, label=options, style=dashed];
m67_60 -> m67_1  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m67_60 -> m67_5  [color=darkseagreen4, key=1, label="SampleApp.Program.Options", style=dashed];
m69_33 -> m69_35  [color=darkseagreen4, key=1, label=pair, style=dashed];
m69_17 -> m69_19  [color=darkseagreen4, key=1, label=list, style=dashed];
m69_17 -> m69_20  [color=darkseagreen4, key=1, label=list, style=dashed];
m69_17 -> m69_21  [color=darkseagreen4, key=1, label=list, style=dashed];
m69_22 -> m69_24  [color=darkseagreen4, key=1, label=anotherList, style=dashed];
m69_22 -> m69_25  [color=darkseagreen4, key=1, label=anotherList, style=dashed];
m69_31 -> m69_49  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<CommandLine.Pair<System.Reflection.PropertyInfo, TAttribute>>", style=dashed];
m69_40 -> m69_42  [color=darkseagreen4, key=1, label=list, style=dashed];
m69_40 -> m69_43  [color=darkseagreen4, key=1, label=list, style=dashed];
m69_40 -> m69_44  [color=darkseagreen4, key=1, label=list, style=dashed];
m69_40 -> m69_45  [color=darkseagreen4, key=1, label=list, style=dashed];
m70_8 -> m70_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m70_15 -> m70_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptions", style=dashed];
m70_15 -> m70_2  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptions", style=dashed];
m70_16 -> m70_8  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild", style=dashed];
m70_16 -> m70_12  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.RPEOptionsForAutoBuild", style=dashed];
m72_4 -> m72_1  [color=darkseagreen4, key=1, label="CommandLine.Tests.Mocks.SimpleOptionsForAutoBuid", style=dashed];
m83_1 -> m83_4  [color=darkseagreen4, key=1, label=options, style=dashed];
m83_1 -> m83_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m83_1 -> m83_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m83_1 -> m83_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m89_2 -> m89_6  [color=darkseagreen4, key=1, label=appOptions, style=dashed];
m89_7 -> m89_10  [color=darkseagreen4, key=1, label=plugInXOptions, style=dashed];
m89_7 -> m89_11  [color=darkseagreen4, key=1, label=plugInXOptions, style=dashed];
m91_28 -> m91_33  [color=darkseagreen4, key=1, label=options, style=dashed];
m91_29 -> m91_31  [color=darkseagreen4, key=1, label=values, style=dashed];
m91_29 -> m91_32  [color=darkseagreen4, key=1, label=values, style=dashed];
m91_18 -> m91_20  [color=darkseagreen4, key=1, label=values, style=dashed];
m91_37 -> m91_33  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeFixture", style=dashed];
m92_21 -> m92_24  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_21 -> m92_25  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_21 -> m92_26  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_21 -> m92_27  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_21 -> m92_28  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_21 -> m92_29  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_3 -> m92_6  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_3 -> m92_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_3 -> m92_8  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_3 -> m92_9  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_3 -> m92_10  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_3 -> m92_11  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_41 -> m92_44  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_41 -> m92_45  [color=darkseagreen4, key=1, label=options, style=dashed];
m92_54 -> m92_5  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m92_54 -> m92_23  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m92_54 -> m92_37  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m92_54 -> m92_43  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
m92_54 -> m92_52  [color=darkseagreen4, key=1, label="CommandLine.Tests.ValueListAttributeParsingFixture", style=dashed];
}
