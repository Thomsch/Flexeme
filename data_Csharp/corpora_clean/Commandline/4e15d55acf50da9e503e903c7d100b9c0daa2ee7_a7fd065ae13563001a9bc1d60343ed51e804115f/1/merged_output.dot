digraph  {
n63 [label="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions", span=""];
n64 [label=writer, span=""];
n65 [label=writer, span=""];
n66 [label=writer, span=""];
n0 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
n1 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="var help = new HelpText(new HeadingInfo(''MyProgram'', ''1.0''))", span="60-60"];
n2 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", color=red, community=0, label="0: help.Copyright = new CopyrightInfo(''Authors, Inc.'', 2007)", span="61-61"];
n11 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="84-84"];
n12 [cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="60-60"];
n3 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", color=red, community=0, label="0: help.AddPreOptionsLine(''This software is under the terms of the XYZ License'')", span="62-62"];
n4 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddPreOptionsLine(''(http://license-text.org/show.cgi?xyz).'')", span="63-63"];
n5 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddPreOptionsLine(''Usage: myprog --input equations-file.xml -o result-file.xml'')", span="64-64"];
n6 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddPreOptionsLine(''       myprog -i equations-file.xml --paralell'')", span="65-65"];
n7 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", color=red, community=0, label="0: help.AddPreOptionsLine(''       myprog -i equations-file.xml -vo result-file.xml'')", span="66-66"];
n8 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="help.AddOptions(this)", span="67-67"];
n9 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="return help;", span="68-68"];
n13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="56-56"];
n14 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="378-378"];
n15 [cluster="CommandLine.Text.HelpText.AddOptions(object)", label="Entry CommandLine.Text.HelpText.AddOptions(object)", span="398-398"];
n10 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.GetUsage()", span="58-58"];
n16 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", span="74-74"];
n17 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", label="var options = new MockOptions()", span="76-76"];
n18 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", label="var writer = new StringWriter()", span="77-77"];
n24 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.MockOptions()", label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions.MockOptions()", span="43-43"];
n20 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", label="var result = parser.ParseArguments(\r\n                    new string[] { ''-imath.xml'', ''-oresult.xml'' }, options)", span="79-80"];
n19 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", color=red, community=0, label="0: var parser = new Parser(with => with.UseHelpWriter(writer))", span="78-78"];
n25 [cluster="System.IO.StringWriter.StringWriter()", label="Entry System.IO.StringWriter.StringWriter()", span="0-0"];
n33 [cluster="lambda expression", color=red, community=0, label="0: with.UseHelpWriter(writer)", span="78-78"];
n22 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", label="writer.ToString().Length.Should().Be(0)", span="83-83"];
n26 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.Parser.ParserConfigurator>)", span="66-66"];
n21 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", label="result.Should().BeTrue()", span="82-82"];
n27 [cluster="CommandLine.Parser.ParseArguments(string[], object)", label="Entry CommandLine.Parser.ParseArguments(string[], object)", span="130-130"];
n28 [cluster="Unk.Should", label="Entry Unk.Should", span=""];
n29 [cluster="Unk.BeTrue", label="Entry Unk.BeTrue", span=""];
n23 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Correct_input_not_activates_help()", span="74-74"];
n30 [cluster="System.IO.StringWriter.ToString()", label="Entry System.IO.StringWriter.ToString()", span="0-0"];
n31 [cluster="Unk.Be", label="Entry Unk.Be", span=""];
n32 [cluster="lambda expression", label="Entry lambda expression", span="78-78"];
n34 [cluster="lambda expression", label="Exit lambda expression", span="78-78"];
n35 [cluster="CommandLine.Parser.ParserConfigurator.UseHelpWriter(System.IO.TextWriter)", label="Entry CommandLine.Parser.ParserConfigurator.UseHelpWriter(System.IO.TextWriter)", span="68-68"];
n36 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", span="87-87"];
n37 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="var options = new MockOptions()", span="89-89"];
n38 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="var writer = new StringWriter()", span="90-90"];
n40 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="var result = parser.ParseArguments(\r\n                    new string[] { ''math.xml'', ''-oresult.xml'' }, options)", span="92-93"];
n39 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="var parser = new Parser(with => with.UseHelpWriter(writer))", span="91-91"];
n49 [cluster="lambda expression", label="with.UseHelpWriter(writer)", span="91-91"];
n42 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="string helpText = writer.ToString()", span="97-97"];
n41 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="result.Should().BeFalse()", span="95-95"];
n46 [cluster="Unk.BeFalse", label="Entry Unk.BeFalse", span=""];
n43 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="(helpText.Length > 0).Should().BeTrue()", span="98-98"];
n44 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="Console.Write(helpText)", span="100-100"];
n45 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Bad_input_activates_help()", span="87-87"];
n47 [cluster="System.Console.Write(string)", label="Entry System.Console.Write(string)", span="0-0"];
n48 [cluster="lambda expression", label="Entry lambda expression", span="91-91"];
n50 [cluster="lambda expression", label="Exit lambda expression", span="91-91"];
n51 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", label="Entry CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", span="104-104"];
n52 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", label="var options = new MockOptions()", span="106-106"];
n53 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", label="var writer = new StringWriter()", span="107-107"];
n55 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", color=red, community=0, label="0: var result = parser.ParseArguments(\r\n                    new string[] { ''--help'' }, options)", span="109-110"];
n54 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", label="var parser = new Parser(with => with.UseHelpWriter(writer))", span="108-108"];
n61 [cluster="lambda expression", label="with.UseHelpWriter(writer)", span="108-108"];
n57 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", label="string helpText = writer.ToString()", span="114-114"];
n56 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", color=red, community=0, label="0: result.Should().BeFalse()", span="112-112"];
n58 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", label="(helpText.Length > 0).Should().BeTrue()", span="115-115"];
n59 [cluster="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", label="Exit CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.Explicit_help_activation()", span="104-104"];
n60 [cluster="lambda expression", label="Entry lambda expression", span="108-108"];
n62 [cluster="lambda expression", label="Exit lambda expression", span="108-108"];
m1_0 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18"];
m1_2 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="20-20"];
m1_1 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="string.IsNullOrEmpty(helpText)", span="20-20"];
m1_3 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="formatStyles == null", span="21-21"];
m1_4 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="throw new ArgumentNullException(''formatStyles'');", span="21-21"];
m1_5 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="sample == null", span="22-22"];
m1_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="AttributesFixture.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_9 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="this.sample = sample", span="26-26"];
m1_21 [cluster="CommandLine.Text.Example.Equals(object)", file="AttributesFixture.cs", label="return Equals(other);", span="64-64"];
m1_18 [cluster="lambda expression", file="AttributesFixture.cs", label="Entry lambda expression", span="33-33"];
m1_19 [cluster="lambda expression", file="AttributesFixture.cs", label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="33-33"];
m1_22 [cluster="lambda expression", file="AttributesFixture.cs", label="Entry lambda expression", span="33-33"];
m1_20 [cluster="lambda expression", file="AttributesFixture.cs", label="Exit lambda expression", span="33-33"];
m1_23 [cluster="lambda expression", file="AttributesFixture.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="33-33"];
m1_10 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="AttributesFixture.cs", label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18"];
m1_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="AttributesFixture.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
m1_8 [cluster="System.Collections.Generic.List<T>.List()", file="AttributesFixture.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m1_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="AttributesFixture.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m1_16 [cluster="lambda expression", file="AttributesFixture.cs", label="Exit lambda expression", span="29-29"];
m1_17 [cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="AttributesFixture.cs", label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m1_24 [cluster="lambda expression", file="AttributesFixture.cs", label="Exit lambda expression", span="33-33"];
m1_30 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="AttributesFixture.cs", label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.GetDescriptorInfo(name, specs, StringComparer.InvariantCulture)\r\n                )", span="53-56"];
m1_32 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="AttributesFixture.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39"];
m1_31 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="AttributesFixture.cs", label="Assert.True(expectedSequence.All(a => result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="59-59"];
m1_33 [cluster="lambda expression", file="AttributesFixture.cs", label="Entry lambda expression", span="55-55"];
m1_26 [cluster="Unk.SequenceEqual", file="AttributesFixture.cs", label="Entry Unk.SequenceEqual", span=""];
m1_27 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="AttributesFixture.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="39-39"];
m1_28 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="AttributesFixture.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="42-45"];
m1_39 [cluster="lambda expression", file="AttributesFixture.cs", label="Entry lambda expression", span="59-59"];
m1_36 [cluster="lambda expression", file="AttributesFixture.cs", label="Entry lambda expression", span="59-59"];
m1_37 [cluster="lambda expression", file="AttributesFixture.cs", label="result.Item1.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="59-59"];
m1_38 [cluster="lambda expression", file="AttributesFixture.cs", label="Exit lambda expression", span="59-59"];
m1_34 [cluster="string.Equals(string)", file="AttributesFixture.cs", label="Entry string.Equals(string)", span="0-0"];
m1_35 [cluster="Unk.SequenceEqual", file="AttributesFixture.cs", label="Entry Unk.SequenceEqual", span=""];
m1_40 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="AttributesFixture.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m1_15 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="AttributesFixture.cs", label="Exit CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="29-29"];
m1_14 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="AttributesFixture.cs", label="Entry CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="29-29"];
m1_41 [cluster="lambda expression", file="AttributesFixture.cs", label="CommandLine.Text.Example", span=""];
m1_12 [cluster="System.ArgumentException.ArgumentException(string, string)", file="AttributesFixture.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_11 [cluster="string.IsNullOrEmpty(string)", file="AttributesFixture.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_29 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=green, community=0, file="AttributesFixture.cs", label="0: var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, -1, -1, '\0', null, typeof(string), string.Empty, string.Empty, new List<string>()),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, 3, 4, '\0', null, typeof(IEnumerable<int>), string.Empty, string.Empty, new List<string>())\r\n                }", span="46-50"];
m1_25 [cluster="object.Equals(object)", file="AttributesFixture.cs", label="Entry object.Equals(object)", span="0-0"];
m1_45 [file="AttributesFixture.cs", label=specs, span=""];
m1_46 [file="AttributesFixture.cs", label=result, span=""];
m1_47 [file="AttributesFixture.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m1_42 [file="AttributesFixture.cs", label=specs, span=""];
m1_43 [file="AttributesFixture.cs", label=result, span=""];
m1_44 [file="AttributesFixture.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m3_164 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="303-303"];
m3_165 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var fakeResult = new NotParsed<Simple_Options>(\r\n                TypeInfo.Create(typeof(Simple_Options)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="306-312"];
m3_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="315-315"];
m3_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="318-318"];
m3_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="320-320"];
m3_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="321-321"];
m3_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="327-327"];
m3_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="328-328"];
m3_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="329-329"];
m3_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue         Define a string value here.'')", span="330-330"];
m3_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[6].ShouldBeEquivalentTo(''-s, --shortandlong    Example with both short and long name.'')", span="331-331"];
m3_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[7].ShouldBeEquivalentTo(''-i                    Define a int sequence here.'')", span="332-332"];
m3_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[8].ShouldBeEquivalentTo(''-x                    Define a boolean or switch value here.'')", span="333-333"];
m3_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[9].ShouldBeEquivalentTo(''--help                Display this help screen.'')", span="334-334"];
m3_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="303-303"];
m3_220 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="437-437"];
m3_221 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Options_With_HelpText_And_MetaValue>(TypeInfo.Create(typeof(Options_With_HelpText_And_MetaValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="441-444"];
m3_222 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="448-448"];
m3_223 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="449-449"];
m3_224 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="450-450"];
m3_225 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="451-451"];
m3_226 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="452-452"];
m3_227 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="453-453"];
m3_228 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="454-454"];
m3_229 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="455-455"];
m3_230 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="456-456"];
m3_231 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="457-457"];
m3_232 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="437-437"];
m3_40 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="CommandLineParser.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Internal.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="100-100"];
m3_41 [cluster="System.IO.TextWriter.Write(string)", file="CommandLineParser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m3_42 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", span="144-144"];
m3_43 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="bool hadError = false", span="146-146"];
m3_44 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="0: var optionMap = OptionInfo.CreateMap(options, _settings)", span="147-147"];
m3_45 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="optionMap.SetDefaults()", span="148-148"];
m3_46 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="var target = new TargetWrapper(options)", span="149-149"];
m3_47 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="IArgumentEnumerator arguments = new StringArrayEnumerator(args)", span="151-151"];
m3_48 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="arguments.MoveNext()", span="152-152"];
m3_49 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="string argument = arguments.Current", span="154-154"];
m3_50 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="!string.IsNullOrEmpty(argument)", span="155-155"];
m3_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="404-404"];
m3_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb) })", span="407-408"];
m3_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="409-412"];
m3_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="415-415"];
m3_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="418-418"];
m3_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="421-421"];
m3_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="422-422"];
m3_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="428-428"];
m3_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="429-429"];
m3_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="430-430"];
m3_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="431-431"];
m3_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="432-432"];
m3_217 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="404-404"];
m3_19 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="345-345"];
m3_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="49-49"];
m3_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="CommandLineParser.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<Simple_Options>(TypeInfo.Create(typeof(Simple_Options)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="53-56"];
m3_21 [cluster="string.ToNotEmptyLines()", file="CommandLineParser.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m3_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="356-356"];
m3_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="CommandLineParser.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="60-60"];
m3_3 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings()", span="52-52"];
m3_136 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="CommandLineParser.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360"];
m3_38 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="186-186"];
m3_39 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="CommandLineParser.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m3_36 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.DoParseArguments(string[], object)", span="120-120"];
m3_4 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(bool)", span="55-55"];
m3_134 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="CommandLineParser.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="305-305"];
m3_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="CommandLineParser.cs", label="sut.MaximumDisplayWidth = 40", span="140-140"];
m3_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", color=red, community=0, file="CommandLineParser.cs", label="0: sut.AddOptions(\r\n                new NotParsed<Simple_Options_With_HelpText_Set_To_Long_Description>(\r\n                    TypeInfo.Create(typeof(Simple_Options_With_HelpText_Set_To_Long_Description)),\r\n                    Enumerable.Empty<Error>()))", span="141-144"];
m3_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", span="135-135"];
m3_250 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="490-490"];
m3_251 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var fakeResult = new NotParsed<Options_With_Usage_Attribute>(\r\n                TypeInfo.Create(typeof(Options_With_Usage_Attribute)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="493-498"];
m3_252 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="501-501"];
m3_253 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var text = helpText.ToString()", span="504-504"];
m3_254 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="505-505"];
m3_255 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="507-507"];
m3_256 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="508-508"];
m3_257 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="514-514"];
m3_258 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="515-515"];
m3_259 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="516-516"];
m3_260 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="517-517"];
m3_261 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="518-518"];
m3_262 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="519-519"];
m3_263 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="520-520"];
m3_264 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="521-521"];
m3_265 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="522-522"];
m3_266 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="523-523"];
m3_267 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[12].ShouldBeEquivalentTo(''List:'')", span="524-524"];
m3_268 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[13].ShouldBeEquivalentTo(''mono testapp.exe -l 1,2'')", span="525-525"];
m3_269 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[14].ShouldBeEquivalentTo(''Value:'')", span="526-526"];
m3_270 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[15].ShouldBeEquivalentTo(''mono testapp.exe value'')", span="527-527"];
m3_271 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[16].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="528-528"];
m3_272 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[17].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="529-529"];
m3_273 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[18].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="530-530"];
m3_274 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[19].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="531-531"];
m3_275 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[20].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="532-532"];
m3_276 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[21].ShouldBeEquivalentTo(''-l              List.'')", span="533-533"];
m3_277 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[22].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="534-534"];
m3_278 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[23].ShouldBeEquivalentTo(''--version       Display version information.'')", span="535-535"];
m3_279 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[24].ShouldBeEquivalentTo(''value pos. 0    Value.'')", span="536-536"];
m3_280 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="490-490"];
m3_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="215-215"];
m3_7 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="CommandLineParser.cs", label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="29-34"];
m3_139 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="CommandLineParser.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="393-393"];
m3_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="43-43"];
m3_16 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="83-83"];
m3_15 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="25-25"];
m3_14 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="44-44"];
m3_17 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseArguments(string[], object)", span="90-90"];
m3_5 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="_settings = new CommandLineParserSettings(false, false, Console.Error)", span="57-57"];
m3_298 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", span="570-570"];
m3_299 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="CommandLineParser.cs", label="ReflectionHelper.SetAttributeOverride(new Dictionary<Type, Attribute>())", span="574-574"];
m3_300 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="CommandLineParser.cs", label="ParserResult<Simple_Options> fakeResult = new NotParsed<Simple_Options>(\r\n                    TypeInfo.Create(typeof(Simple_Options)),\r\n                    new Error[]\r\n                        {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                        })", span="576-582"];
m3_301 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="CommandLineParser.cs", label="HelpText.AutoBuild(fakeResult, ht => ht, ex => ex)", span="583-583"];
m3_302 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.AutoBuild_when_no_assembly_attributes()", span="570-570"];
m3_51 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="0: ArgumentParser parser = ArgumentParser.Create(argument, _settings.IgnoreUnknownArguments)", span="157-157"];
m3_52 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="parser != null", span="158-158"];
m3_53 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="Internal.ParserState result = parser.Parse(arguments, optionMap, options)", span="160-160"];
m3_54 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="(result & Internal.ParserState.Failure) == Internal.ParserState.Failure", span="161-161"];
m3_55 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="SetParserStateIfNeeded(options, parser.PostParsingState)", span="163-163"];
m3_56 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="hadError = true", span="164-164"];
m3_57 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="(result & Internal.ParserState.MoveOnNextElement) == Internal.ParserState.MoveOnNextElement", span="168-168"];
m3_58 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="0: arguments.MoveNext()", span="169-169"];
m3_59 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", color=green, community=0, file="CommandLineParser.cs", label="0: target.IsValueListDefined", span="171-171"];
m3_60 [cluster="CommandLine.CommandLineParser.DoParseArgumentsCore(string[], object)", file="CommandLineParser.cs", label="!target.AddValueItemIfAllowed(argument)", span="173-173"];
m3_79 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="helpOption.ShortName != null", span="192-192"];
m3_80 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="ArgumentParser.CompareShort(args[i], helpOption.ShortName, caseSensitive)", span="194-194"];
m3_81 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return true;", span="196-196"];
m3_82 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="!string.IsNullOrEmpty(helpOption.LongName)", span="200-200"];
m3_83 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="ArgumentParser.CompareLong(args[i], helpOption.LongName, caseSensitive)", span="202-202"];
m3_84 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return true;", span="204-204"];
m3_85 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="i++", span="190-190"];
m3_141 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="481-481"];
m3_25 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var pair = ReflectionUtil.RetrieveMethod<HelpOptionAttribute>(options)", span="122-122"];
m3_26 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="var helpWriter = _settings.HelpWriter", span="123-123"];
m3_27 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="_args = args", span="126-126"];
m3_28 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="pair != null && helpWriter != null", span="128-128"];
m3_29 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="ParseHelp(args, pair.Right) || !DoParseArgumentsUsingVerbs(args, options)", span="131-131"];
m3_30 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="string helpText", span="133-133"];
m3_31 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="HelpOptionAttribute.InvokeMethod(options, pair, out helpText)", span="134-134"];
m3_32 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="helpWriter.Write(helpText)", span="135-135"];
m3_33 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return false;", span="136-136"];
m3_34 [cluster="CommandLine.CommandLineParser.DoParseArguments(string[], object)", file="CommandLineParser.cs", label="return true;", span="138-138"];
m3_119 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="261-282"];
m3_120 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="283-284"];
m3_121 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="287-287"];
m3_93 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var property = list[0].Left", span="219-219"];
m3_94 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="property.GetValue(options, null) == null", span="221-221"];
m3_95 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="property.SetValue(options, new CommandLine.ParserState(), null)", span="224-224"];
m3_96 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var parserState = (IParserState) property.GetValue(options, null)", span="226-226"];
m3_97 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label=errors, span="227-227"];
m3_98 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="parserState.Errors.Add(error)", span="229-229"];
m3_99 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", span="212-212"];
m3_100 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43"];
m3_101 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m3_103 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="CommandLineParser.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m3_104 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="CommandLineParser.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m3_105 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose()", span="233-233"];
m3_106 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Dispose(true)", span="235-235"];
m3_107 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="GC.SuppressFinalize(this)", span="237-237"];
m3_108 [cluster="CommandLine.CommandLineParser.Dispose()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.Dispose()", span="233-233"];
m3_109 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.Dispose(bool)", span="240-240"];
m3_110 [cluster="System.GC.SuppressFinalize(object)", file="CommandLineParser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m3_111 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=_disposed, span="242-242"];
m3_112 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="return;", span="244-244"];
m3_113 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label=disposing, span="246-246"];
m3_114 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings != null", span="248-248"];
m3_115 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_settings.Dispose()", span="250-250"];
m3_116 [cluster="CommandLine.CommandLineParser.Dispose(bool)", file="CommandLineParser.cs", label="_disposed = true", span="252-252"];
m3_304 [cluster="Unk.SetAttributeOverride", file="CommandLineParser.cs", label="Entry Unk.SetAttributeOverride", span=""];
m3_281 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="543-543"];
m3_282 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="var handlers = new CultureInfo(''en-US'').MakeCultureHandlers()", span="546-546"];
m3_283 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="var fakeResult =\r\n                new NotParsed<Options_With_Default_Set_To_Sequence>(\r\n                    typeof(Options_With_Default_Set_To_Sequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="547-550"];
m3_284 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="handlers.ChangeCulture()", span="553-553"];
m3_286 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="handlers.ResetCulture()", span="555-555"];
m3_285 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="554-554"];
m3_287 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="var text = helpText.ToString()", span="558-558"];
m3_288 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="559-559"];
m3_289 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="561-561"];
m3_290 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="562-562"];
m3_291 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="563-563"];
m3_292 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="543-543"];
m3_309 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="583-583"];
m3_143 [cluster="lambda expression", file="CommandLineParser.cs", label="err.Tag", span="263-263"];
m3_145 [cluster="lambda expression", file="CommandLineParser.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="266-266"];
m3_147 [cluster="lambda expression", file="CommandLineParser.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="268-268"];
m3_149 [cluster="lambda expression", file="CommandLineParser.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="270-270"];
m3_151 [cluster="lambda expression", file="CommandLineParser.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="272-272"];
m3_153 [cluster="lambda expression", file="CommandLineParser.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="274-274"];
m3_157 [cluster="lambda expression", file="CommandLineParser.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="278-278"];
m3_142 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="261-282"];
m3_144 [cluster="lambda expression", file="CommandLineParser.cs", label="ErrorType.BadFormatTokenError", span="265-265"];
m3_146 [cluster="lambda expression", file="CommandLineParser.cs", label="ErrorType.MissingValueOptionError", span="267-267"];
m3_148 [cluster="lambda expression", file="CommandLineParser.cs", label="ErrorType.UnknownOptionError", span="269-269"];
m3_150 [cluster="lambda expression", file="CommandLineParser.cs", label="ErrorType.MissingRequiredOptionError", span="271-271"];
m3_152 [cluster="lambda expression", file="CommandLineParser.cs", label="ErrorType.SequenceOutOfRangeError", span="273-273"];
m3_154 [cluster="lambda expression", file="CommandLineParser.cs", label="ErrorType.NoVerbSelectedError", span="275-275"];
m3_156 [cluster="lambda expression", file="CommandLineParser.cs", label="ErrorType.BadVerbSelectedError", span="277-277"];
m3_158 [cluster="lambda expression", file="CommandLineParser.cs", label="throw new InvalidOperationException();", span="280-280"];
m3_155 [cluster="lambda expression", file="CommandLineParser.cs", label="return ''ERR no-verb-selected'';", span="276-276"];
m3_159 [cluster="lambda expression", file="CommandLineParser.cs", label="Exit lambda expression", span="261-282"];
m3_161 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="284-284"];
m3_162 [cluster="lambda expression", file="CommandLineParser.cs", label="string.Empty", span="284-284"];
m3_163 [cluster="lambda expression", file="CommandLineParser.cs", label="Exit lambda expression", span="284-284"];
m3_306 [cluster="lambda expression", file="CommandLineParser.cs", label="Entry lambda expression", span="583-583"];
m3_307 [cluster="lambda expression", file="CommandLineParser.cs", label=ht, span="583-583"];
m3_308 [cluster="lambda expression", file="CommandLineParser.cs", label="Exit lambda expression", span="583-583"];
m3_310 [cluster="lambda expression", file="CommandLineParser.cs", label=ex, span="583-583"];
m3_311 [cluster="lambda expression", file="CommandLineParser.cs", label="Exit lambda expression", span="583-583"];
m3_179 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, int)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, int)", span="283-283"];
m3_219 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="CommandLineParser.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m3_66 [cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="CommandLineParser.cs", label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="125-125"];
m3_297 [cluster="Unk.Be", file="CommandLineParser.cs", label="Entry Unk.Be", span=""];
m3_181 [cluster="Unk.StartWithEquivalent", file="CommandLineParser.cs", label="Entry Unk.StartWithEquivalent", span=""];
m3_137 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="CommandLineParser.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="446-446"];
m3_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="CommandLineParser.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<Options_With_MetaValue>(TypeInfo.Create(typeof(Options_With_MetaValue)), Enumerable.Empty<Error>()))", span="123-125"];
m3_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="119-119"];
m3_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="CommandLineParser.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="128-128"];
m3_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="130-130"];
m3_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="151-151"];
m3_117 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="244-244"];
m3_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_has_hidden_option_it_should_not_be_added_to_help_text_output()", file="CommandLineParser.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="190-190"];
m3_296 [cluster="System.Action.Invoke()", file="CommandLineParser.cs", label="Entry System.Action.Invoke()", span="0-0"];
m3_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CommandLineParser.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="72-72"];
m3_35 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="CommandLineParser.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m3_78 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="i < args.Length", span="190-190"];
m3_86 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="return false;", span="209-209"];
m3_87 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", span="186-186"];
m3_88 [cluster="CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", file="CommandLineParser.cs", label="Entry CommandLine.Internal.ArgumentParser.CompareShort(string, char?, bool)", span="100-100"];
m3_90 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="214-214"];
m3_91 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="list.Count == 0", span="215-215"];
m3_92 [cluster="CommandLine.CommandLineParser.SetParserStateIfNeeded(object, System.Collections.Generic.IEnumerable<CommandLine.ParsingError>)", file="CommandLineParser.cs", label="return;", span="217-217"];
m3_118 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="247-260"];
m3_249 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="539-539"];
m3_37 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="CommandLineParser.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="150-150"];
m3_65 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="119-119"];
m3_0 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser()", span="49-49"];
m3_1 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="_settings = new CommandLineParserSettings()", span="51-51"];
m3_2 [cluster="CommandLine.CommandLineParser.CommandLineParser()", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser()", span="49-49"];
m3_138 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="CommandLineParser.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382"];
m3_140 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="CommandLineParser.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408"];
m3_233 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="462-462"];
m3_234 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="ParserResult<Options_With_Usage_Attribute> result =\r\n                new NotParsed<Options_With_Usage_Attribute>(\r\n                    TypeInfo.Create(typeof(Options_With_Usage_Attribute)), Enumerable.Empty<Error>())", span="465-467"];
m3_235 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="var text = HelpText.RenderUsageText(result)", span="470-470"];
m3_236 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="var lines = text.ToNotEmptyLines()", span="473-473"];
m3_237 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="476-476"];
m3_238 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="477-477"];
m3_239 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="478-478"];
m3_240 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="479-479"];
m3_241 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="480-480"];
m3_242 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="481-481"];
m3_243 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="482-482"];
m3_244 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[7].ShouldBeEquivalentTo(''List:'')", span="483-483"];
m3_245 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[8].ShouldBeEquivalentTo(''  mono testapp.exe -l 1,2'')", span="484-484"];
m3_246 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[9].ShouldBeEquivalentTo(''Value:'')", span="485-485"];
m3_247 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="lines[10].ShouldBeEquivalentTo(''  mono testapp.exe value'')", span="486-486"];
m3_248 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="462-462"];
m3_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="CommandLineParser.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="147-147"];
m3_132 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="CommandLineParser.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="294-294"];
m3_294 [cluster="System.Globalization.CultureInfo.MakeCultureHandlers()", file="CommandLineParser.cs", label="Entry System.Globalization.CultureInfo.MakeCultureHandlers()", span="17-17"];
m3_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="42-42"];
m3_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="152-152"];
m3_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column_given_width_of_40()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="148-148"];
m3_133 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="CommandLineParser.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m3_6 [cluster="CommandLine.CommandLineParser.CommandLineParser(bool)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(bool)", span="55-55"];
m3_8 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="66-66"];
m3_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Assumes.NotNull(settings, ''settings'', SR.ArgumentNullException_CommandLineParserSettingsInstanceCannotBeNull)", span="68-68"];
m3_10 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="_settings = settings", span="69-69"];
m3_11 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="CommandLineParser.cs", label="Exit CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="66-66"];
m3_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="339-339"];
m3_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="342-347"];
m3_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="350-350"];
m3_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="353-353"];
m3_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="356-356"];
m3_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="357-357"];
m3_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which'')", span="363-363"];
m3_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="364-364"];
m3_190 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="365-365"];
m3_191 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="366-366"];
m3_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[6].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="367-367"];
m3_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="339-339"];
m3_131 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="CommandLineParser.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="221-221"];
m3_68 [cluster="CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", file="CommandLineParser.cs", label="Entry CommandLine.Internal.StringArrayEnumerator.StringArrayEnumerator(string[])", span="47-47"];
m3_76 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="bool caseSensitive = _settings.CaseSensitive", span="188-188"];
m3_77 [cluster="CommandLine.CommandLineParser.ParseHelp(string[], CommandLine.HelpOptionAttribute)", file="CommandLineParser.cs", label="int i = 0", span="190-190"];
m3_135 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="CommandLineParser.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="316-316"];
m3_293 [cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="CommandLineParser.cs", label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0"];
m3_295 [cluster="System.Type.ToTypeInfo()", file="CommandLineParser.cs", label="Entry System.Type.ToTypeInfo()", span="178-178"];
m3_160 [cluster="System.InvalidOperationException.InvalidOperationException()", file="CommandLineParser.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m3_305 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool, int)", file="CommandLineParser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool, int)", span="205-205"];
m3_180 [cluster="Unk.Should", file="CommandLineParser.cs", label="Entry Unk.Should", span=""];
m3_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", span="372-372"];
m3_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(Commit_Verb), true)\r\n                    })", span="375-380"];
m3_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="var helpText = HelpText.AutoBuild(fakeResult, maxDisplayWidth: 100)", span="383-383"];
m3_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="386-386"];
m3_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="389-389"];
m3_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="390-390"];
m3_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch      Use the interactive patch selection interface to chose which changes to commit.'')", span="396-396"];
m3_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''--amend          Used to amend the tip of the current branch.'')", span="397-397"];
m3_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''-m, --message    Use the given message as the commit message.'')", span="398-398"];
m3_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="399-399"];
m3_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text_given_display_width_100()", span="372-372"];
m3_122 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="CommandLine.CommandLineParser", span=""];
m3_123 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="292-292"];
m3_124 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="293-293"];
m3_125 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="294-294"];
m3_126 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="295-295"];
m3_127 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="296-296"];
m3_128 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="297-297"];
m3_129 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="298-298"];
m3_130 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="CommandLineParser.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="244-244"];
m3_303 [cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", file="CommandLineParser.cs", label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary()", span="0-0"];
m3_218 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="CommandLineParser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m5_66 [cluster="Unk.SingleOrDefault", file="HelpOptionAttribute.cs", label="Entry Unk.SingleOrDefault", span=""];
m5_28 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m5_77 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="HelpOptionAttribute.cs", label="return new NotParsed<object>(typeof(NullInstance), types, errors);", span="97-97"];
m5_78 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="HelpOptionAttribute.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="95-95"];
m5_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m5_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="HelpOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m5_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m5_45 [cluster="Unk.>", file="HelpOptionAttribute.cs", label="Entry Unk.>", span=""];
m5_49 [cluster="Unk.MakeNotParsed", file="HelpOptionAttribute.cs", label="Entry Unk.MakeNotParsed", span=""];
m5_44 [cluster="Unk.Any", file="HelpOptionAttribute.cs", label="Entry Unk.Any", span=""];
m5_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m5_31 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpOptionAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m5_36 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="62-62"];
m5_42 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="69-78"];
m5_43 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="62-62"];
m5_48 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpOptionAttribute.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m5_68 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpOptionAttribute.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m5_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m5_35 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="HelpOptionAttribute.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432"];
m5_40 [cluster="System.StringComparer.Equals(string, string)", file="HelpOptionAttribute.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m5_56 [cluster="Unk.Single", file="HelpOptionAttribute.cs", label="Entry Unk.Single", span=""];
m5_67 [cluster="Unk.ToMaybe", file="HelpOptionAttribute.cs", label="Entry Unk.ToMaybe", span=""];
m5_41 [cluster="string.Concat(string, string)", file="HelpOptionAttribute.cs", label="Entry string.Concat(string, string)", span="0-0"];
m5_73 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="90-90"];
m5_5 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="23-23"];
m5_12 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="23-23"];
m5_6 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="24-24"];
m5_16 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="24-24"];
m5_4 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="21-26"];
m5_11 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="23-23"];
m5_7 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="return explodedTokens;", span="25-25"];
m5_15 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="24-24"];
m5_8 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="21-26"];
m5_13 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="23-23"];
m5_17 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="24-24"];
m5_38 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="48-49"];
m5_37 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="47-49"];
m5_39 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="47-49"];
m5_51 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="69-69"];
m5_54 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="73-73"];
m5_59 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="73-73"];
m5_50 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="69-69"];
m5_53 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="72-73"];
m5_61 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="78-78"];
m5_52 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="69-69"];
m5_55 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="72-73"];
m5_58 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="73-73"];
m5_60 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="73-73"];
m5_62 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="v.Item2", span="78-78"];
m5_63 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="78-78"];
m5_71 [cluster="lambda expression", color=red, community=0, file="HelpOptionAttribute.cs", label="0: nameComparer.Equals(v.Item1.Name, verb)", span="87-87"];
m5_70 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Entry lambda expression", span="87-87"];
m5_72 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="87-87"];
m5_74 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90"];
m5_75 [cluster="lambda expression", file="HelpOptionAttribute.cs", label="Exit lambda expression", span="90-90"];
m5_29 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="HelpOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m5_32 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="HelpOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m5_79 [cluster="CommandLine.NotParsed<T>.NotParsed(System.Type, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpOptionAttribute.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(System.Type, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="152-152"];
m5_34 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m5_64 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", color=red, community=0, file="HelpOptionAttribute.cs", label="0: return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="86-92"];
m5_65 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="HelpOptionAttribute.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="81-81"];
m5_47 [cluster="Unk.Select", file="HelpOptionAttribute.cs", label="Entry Unk.Select", span=""];
m5_27 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpOptionAttribute.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m5_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m5_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="return Choose(\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-30"];
m5_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m5_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m5_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m5_19 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="arguments.Empty()", span="40-40"];
m5_20 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="return MakeNotParsed(types, new NoVerbSelectedError());", span="42-42"];
m5_21 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="var firstArg = arguments.First()", span="45-45"];
m5_22 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-49"];
m5_23 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="var verbs = Verb.SelectFromTypes(types)", span="51-51"];
m5_24 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="return preprocCompare(''help'')\r\n                ? MakeNotParsed(types,\r\n                    MakeHelpVerbRequestedError(verbs,\r\n                        arguments.Skip(1).SingleOrDefault() ?? string.Empty, nameComparer))\r\n                : preprocCompare(''version'')\r\n                    ? MakeNotParsed(types, new VersionRequestedError())\r\n                    : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="53-59"];
m5_25 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="HelpOptionAttribute.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m5_69 [cluster="Unk.Return", file="HelpOptionAttribute.cs", label="Entry Unk.Return", span=""];
m5_57 [cluster="Unk.AutoDefault", file="HelpOptionAttribute.cs", label="Entry Unk.AutoDefault", span=""];
m5_30 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpOptionAttribute.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m5_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="HelpOptionAttribute.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m5_76 [cluster="HelpVerbRequestedError.cstr", file="HelpOptionAttribute.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m5_80 [file="HelpOptionAttribute.cs", label="System.StringComparer", span=""];
m5_81 [file="HelpOptionAttribute.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m5_82 [file="HelpOptionAttribute.cs", label="System.StringComparer", span=""];
m5_83 [file="HelpOptionAttribute.cs", label=firstArg, span=""];
m5_84 [file="HelpOptionAttribute.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m5_85 [file="HelpOptionAttribute.cs", label="System.StringComparer", span=""];
m5_86 [file="HelpOptionAttribute.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m5_87 [file="HelpOptionAttribute.cs", label=string, span=""];
m5_88 [file="HelpOptionAttribute.cs", label="System.StringComparer", span=""];
m6_0 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="10-10"];
m6_1 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="HelpVerbOptionAttribute.cs", label="this.index = index", span="13-13"];
m6_2 [cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="10-10"];
m6_6 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m6_7 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m6_8 [cluster="T.ToMaybe<T>()", file="HelpVerbOptionAttribute.cs", label="Entry T.ToMaybe<T>()", span="79-79"];
m6_3 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="HelpVerbOptionAttribute.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="16-16"];
m6_4 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="HelpVerbOptionAttribute.cs", label="return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Min),\r\n                attribute.Max == -1 ? Maybe.Nothing<int>() : Maybe.Just(attribute.Max),\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="18-24"];
m6_5 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="HelpVerbOptionAttribute.cs", label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="16-16"];
m6_9 [file="HelpVerbOptionAttribute.cs", label="CommandLine.Core.ValueSpecification", span=""];
m7_5 [cluster="string.String(char, int)", file="OptionAttribute.cs", label="Entry string.String(char, int)", span="0-0"];
m7_0 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="47-47"];
m7_1 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName = new string(shortName, 1)", span="49-49"];
m7_2 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", color=red, community=0, file="OptionAttribute.cs", label="0: ShortName = shortName", span="50-50"];
m7_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", color=red, community=0, file="OptionAttribute.cs", label="0: LongName = null", span="51-51"];
m7_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="47-47"];
m7_21 [cluster="string.IsNullOrEmpty(string)", file="OptionAttribute.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m7_11 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="70-70"];
m7_12 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: ShortName = shortName", span="72-72"];
m7_13 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: LongName = longName", span="73-73"];
m7_15 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName = new string(shortName, 1)", span="76-76"];
m7_16 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: !string.IsNullOrEmpty(longName)", span="78-78"];
m7_17 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName = longName", span="80-80"];
m7_14 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: ShortName != null", span="74-74"];
m7_18 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName == null", span="82-82"];
m7_19 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", color=red, community=0, file="OptionAttribute.cs", label="0: throw new InvalidOperationException();", span="84-84"];
m7_20 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="70-70"];
m7_6 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="58-58"];
m7_7 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", color=red, community=0, file="OptionAttribute.cs", label="0: _uniqueName = longName", span="60-60"];
m7_9 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", color=red, community=0, file="OptionAttribute.cs", label="0: LongName = longName", span="62-62"];
m7_8 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", color=red, community=0, file="OptionAttribute.cs", label="0: ShortName = null", span="61-61"];
m7_10 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="58-58"];
m7_22 [cluster="System.InvalidOperationException.InvalidOperationException()", file="OptionAttribute.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m7_23 [file="OptionAttribute.cs", label="CommandLine.OptionAttribute", span=""];
m9_0 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char)", span="49-49"];
m9_1 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char)", span="49-49"];
m9_7 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="74-74"];
m9_8 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs", label="Separator = separator", span="77-77"];
m9_9 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="74-74"];
m9_2 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string)", span="55-55"];
m9_3 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string)", span="55-55"];
m9_4 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs", label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="62-62"];
m9_5 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs", label="Separator = ':'", span="65-65"];
m9_6 [cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="OptionListAttribute.cs", label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="62-62"];
m9_10 [file="OptionListAttribute.cs", label="CommandLine.OptionListAttribute", span=""];
m11_39 [cluster="System.Nullable<T>.ToString()", file="Program.cs", label="Entry System.Nullable<T>.ToString()", span="0-0"];
m11_41 [cluster="System.Console.WriteLine()", file="Program.cs", label="Entry System.Console.WriteLine()", span="0-0"];
m11_40 [cluster="System.Console.WriteLine(string, object)", file="Program.cs", label="Entry System.Console.WriteLine(string, object)", span="0-0"];
m11_12 [cluster="System.Environment.Exit(int)", file="Program.cs", label="Entry System.Environment.Exit(int)", span="0-0"];
m11_51 [cluster="CommandLine.Text.HeadingInfo.WriteMessage(string)", file="Program.cs", label="Entry CommandLine.Text.HeadingInfo.WriteMessage(string)", span="124-124"];
m11_0 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="Entry CommandLine.Demo.Program.Main(string[])", span="52-52"];
m11_1 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="var options = new Options()", span="57-57"];
m11_3 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="!parser.ParseArguments(args, options)", span="59-59"];
m11_2 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="var parser = new CommandLineParser(new CommandLineParserSettings(Console.Error))", span="58-58"];
m11_5 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="DoCoreTask(options)", span="62-62"];
m11_4 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="Environment.Exit(1)", span="60-60"];
m11_6 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="Environment.Exit(0)", span="63-63"];
m11_7 [cluster="CommandLine.Demo.Program.Main(string[])", file="Program.cs", label="Exit CommandLine.Demo.Program.Main(string[])", span="52-52"];
m11_44 [cluster="System.Enum.ToString()", file="Program.cs", label="Entry System.Enum.ToString()", span="0-0"];
m11_8 [cluster="CommandLine.Demo.Program.Options.Options()", file="Program.cs", label="Entry CommandLine.Demo.Program.Options.Options()", span="51-51"];
m11_47 [cluster="System.Text.StringBuilder.Remove(int, int)", file="Program.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m11_9 [cluster="CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", file="Program.cs", label="Entry CommandLine.CommandLineParser.CommandLineParser(CommandLine.CommandLineParserSettings)", span="63-63"];
m11_49 [cluster="string.IsNullOrEmpty(string)", file="Program.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m11_43 [cluster="string.ToLowerInvariant()", file="Program.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m11_50 [cluster="string.Format(string, object)", file="Program.cs", label="Entry string.Format(string, object)", span="0-0"];
m11_10 [cluster="CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", file="Program.cs", label="Entry CommandLine.CommandLineParserSettings.CommandLineParserSettings(System.IO.TextWriter)", span="73-73"];
m11_48 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m11_46 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m11_13 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Entry CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", span="66-66"];
m11_14 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="options.VerboseLevel == null", span="68-68"];
m11_16 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [on]: {0}'', (options.VerboseLevel < 0 || options.VerboseLevel > 2) ? ''#invalid value#'' : options.VerboseLevel.ToString())", span="71-71"];
m11_18 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''input file: {0} ...'', options.InputFile)", span="73-73"];
m11_19 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="options.DefinitionFiles", span="74-74"];
m11_21 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''  start offset: {0}'', options.StartOffset)", span="78-78"];
m11_22 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''  tabular data computation: {0}'', options.Calculate.ToString().ToLowerInvariant())", span="79-79"];
m11_23 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''  on errors: {0}'', options.IgnoreErrors ? ''continue'' : ''stop processing'')", span="80-80"];
m11_24 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''  optimize for: {0}'', options.Optimization.ToString().ToLowerInvariant())", span="81-81"];
m11_25 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="options.AllowedOperators != null", span="82-82"];
m11_28 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="options.AllowedOperators", span="86-86"];
m11_33 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="!string.IsNullOrEmpty(options.OutputFile)", span="94-94"];
m11_34 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(string.Format(''writing elaborated data: {0} ...'', options.OutputFile))", span="95-95"];
m11_15 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''verbose [off]'')", span="69-69"];
m11_17 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="72-72"];
m11_20 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''  using definition file: {0}'', defFile)", span="76-76"];
m11_26 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="var builder = new StringBuilder()", span="84-84"];
m11_32 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine()", span="93-93"];
m11_27 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="builder.Append(''  allowed operators: '')", span="85-85"];
m11_29 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="builder.Append(op)", span="88-88"];
m11_30 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="builder.Append('', '')", span="89-89"];
m11_31 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(builder.Remove(builder.Length - 2, 2).ToString())", span="91-91"];
m11_35 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="_headingInfo.WriteMessage(''elaborated data:'')", span="98-98"];
m11_36 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Console.WriteLine(''[...]'')", span="99-99"];
m11_37 [cluster="CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", file="Program.cs", label="Exit CommandLine.Demo.Program.DoCoreTask(CommandLine.Demo.Program.Options)", span="66-66"];
m11_38 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m11_42 [cluster="bool.ToString()", file="Program.cs", label="Entry bool.ToString()", span="0-0"];
m11_45 [cluster="System.Text.StringBuilder.StringBuilder()", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m11_11 [cluster="CommandLine.CommandLineParser.ParseArguments(string[], object)", file="Program.cs", label="Entry CommandLine.CommandLineParser.ParseArguments(string[], object)", span="87-87"];
m15_6 [cluster="lambda expression", file="TargetWrapper.cs", label="groups.Count() > 1", span="27-27"];
m15_48 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="TargetWrapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m15_0 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="Entry CommandLine.Internal.TargetWrapper.TargetWrapper(object)", span="43-43"];
m15_1 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="_target = target", span="45-45"];
m15_2 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="_vla = ValueListAttribute.GetAttribute(_target)", span="46-46"];
m15_70 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="TargetWrapper.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="65-65"];
m15_71 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="TargetWrapper.cs", label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )\r\n                    );\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="67-83"];
m15_72 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="TargetWrapper.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="65-65"];
m15_68 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="TargetWrapper.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283"];
m15_44 [cluster="Unk.Any", file="TargetWrapper.cs", label="Entry Unk.Any", span=""];
m15_63 [cluster="CommandLine.Core.Specification.IsValue()", file="TargetWrapper.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="16-16"];
m15_10 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="return false;", span="59-59"];
m15_58 [cluster="Unk.IsNothing", file="TargetWrapper.cs", label="Entry Unk.IsNothing", span=""];
m15_14 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="TargetWrapper.cs", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
m15_69 [cluster="Unk.FromSpecification", file="TargetWrapper.cs", label="Entry Unk.FromSpecification", span=""];
m15_84 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="TargetWrapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m15_64 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="TargetWrapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m15_89 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="TargetWrapper.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316"];
m15_23 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="26-26"];
m15_36 [cluster="lambda expression", color=green, community=0, file="TargetWrapper.cs", label="0: List<string> setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList()", span="41-45"];
m15_37 [cluster="lambda expression", file="TargetWrapper.cs", label="var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName))\r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList()", span="47-56"];
m15_35 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="39-62"];
m15_45 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="43-44"];
m15_49 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="45-45"];
m15_56 [cluster="lambda expression", file="TargetWrapper.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)", span="50-52"];
m15_46 [cluster="lambda expression", color=green, community=0, file="TargetWrapper.cs", label="0: sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required", span="43-44"];
m15_47 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="43-44"];
m15_38 [cluster="lambda expression", file="TargetWrapper.cs", label="requiredButEmpty.Any()", span="57-57"];
m15_52 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="49-49"];
m15_55 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="50-52"];
m15_60 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="54-56"];
m15_39 [cluster="lambda expression", file="TargetWrapper.cs", label="return requiredButEmpty.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="58-59"];
m15_41 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="39-62"];
m15_4 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="_valueList = ValueListAttribute.GetReference(_target)", span="49-49"];
m15_74 [cluster="lambda expression", file="TargetWrapper.cs", label="var options = specProps.Where(\r\n                        sp => sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )\r\n                    )", span="69-76"];
m15_7 [cluster="CommandLine.ValueListAttribute.GetReference(object)", file="TargetWrapper.cs", label="Entry CommandLine.ValueListAttribute.GetReference(object)", span="77-77"];
m15_76 [cluster="lambda expression", file="TargetWrapper.cs", label="return options.Select(s => Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))));", span="79-80"];
m15_51 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="45-45"];
m15_50 [cluster="lambda expression", file="TargetWrapper.cs", label="((OptionSpecification)s.Specification).SetName", span="45-45"];
m15_57 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="50-52"];
m15_16 [cluster="lambda expression", file="TargetWrapper.cs", label="sp.Specification.IsOption()", span="23-23"];
m15_53 [cluster="lambda expression", file="TargetWrapper.cs", label="sp.Specification.IsOption()", span="49-49"];
m15_80 [cluster="lambda expression", file="TargetWrapper.cs", label="sp.Specification.ConversionType.ToDescriptorKind() == TypeDescriptorKind.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (!sp.Specification.IsMinNotSpecified() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min)\r\n                            || (!sp.Specification.IsMaxNotSpecified() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max)\r\n                        )", span="70-75"];
m15_40 [cluster="lambda expression", file="TargetWrapper.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="61-61"];
m15_54 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="49-49"];
m15_62 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="54-56"];
m15_61 [cluster="lambda expression", file="TargetWrapper.cs", label="sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required", span="54-56"];
m15_65 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="58-59"];
m15_3 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label=IsValueListDefined, span="47-47"];
m15_5 [cluster="CommandLine.Internal.TargetWrapper.TargetWrapper(object)", file="TargetWrapper.cs", label="Exit CommandLine.Internal.TargetWrapper.TargetWrapper(object)", span="43-43"];
m15_15 [cluster="lambda expression", file="TargetWrapper.cs", label="CommandLine.Internal.TargetWrapper", span=""];
m15_19 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="24-25"];
m15_73 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="67-83"];
m15_75 [cluster="lambda expression", file="TargetWrapper.cs", label="options.Any()", span="77-77"];
m15_79 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="70-75"];
m15_9 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="_vla.MaximumElements == 0 || _valueList.Count == _vla.MaximumElements", span="57-57"];
m15_26 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="29-31"];
m15_78 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="67-83"];
m15_86 [cluster="lambda expression", file="TargetWrapper.cs", label="Entry lambda expression", span="79-80"];
m15_17 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="23-23"];
m15_81 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="70-75"];
m15_67 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="58-59"];
m15_66 [cluster="lambda expression", file="TargetWrapper.cs", label="Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="58-59"];
m15_21 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="24-25"];
m15_20 [cluster="lambda expression", file="TargetWrapper.cs", label="((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust()", span="24-25"];
m15_77 [cluster="lambda expression", file="TargetWrapper.cs", label="return Enumerable.Empty<Nothing<Error>>();", span="82-82"];
m15_8 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="Entry CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", span="55-55"];
m15_28 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="29-31"];
m15_27 [cluster="lambda expression", file="TargetWrapper.cs", label="Maybe.Just<Error>(\r\n                            new MutuallyExclusiveSetError(\r\n                                NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)))", span="29-31"];
m15_88 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="79-80"];
m15_87 [cluster="lambda expression", file="TargetWrapper.cs", label="Maybe.Just<Error>(new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)))", span="79-80"];
m15_24 [cluster="lambda expression", file="TargetWrapper.cs", label="((OptionSpecification)g.Specification).SetName", span="26-26"];
m15_25 [cluster="lambda expression", file="TargetWrapper.cs", label="Exit lambda expression", span="26-26"];
m15_43 [cluster="Unk.Concat", file="TargetWrapper.cs", label="Entry Unk.Concat", span=""];
m15_32 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="TargetWrapper.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="37-37"];
m15_33 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=green, community=0, file="TargetWrapper.cs", label="0: return specProps =>\r\n            {\r\n                List<string> setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList();\r\n                \r\n                var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName))\r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList();\r\n                    if (requiredButEmpty.Any()) {\r\n                        return requiredButEmpty.Select(s => Maybe.Just<Error>(new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))));\r\n                    }\r\n                    return Enumerable.Empty<Nothing<Error>>();\r\n                };", span="39-62"];
m15_34 [cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="TargetWrapper.cs", label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="37-37"];
m15_31 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="TargetWrapper.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m15_13 [cluster="CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", file="TargetWrapper.cs", label="Exit CommandLine.Internal.TargetWrapper.AddValueItemIfAllowed(string)", span="55-55"];
m15_82 [cluster="System.Type.ToDescriptorKind()", file="TargetWrapper.cs", label="Entry System.Type.ToDescriptorKind()", span="22-22"];
m15_22 [cluster="Unk.IsJust", file="TargetWrapper.cs", label="Entry Unk.IsJust", span=""];
m15_42 [cluster="Unk.ToList", file="TargetWrapper.cs", label="Entry Unk.ToList", span=""];
m15_11 [cluster="Unk.GroupBy", file="TargetWrapper.cs", label="Entry Unk.GroupBy", span=""];
m15_12 [cluster="Unk.Count", file="TargetWrapper.cs", label="Entry Unk.Count", span=""];
m15_29 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="TargetWrapper.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294"];
m15_18 [cluster="CommandLine.Core.Specification.IsOption()", file="TargetWrapper.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="11-11"];
m15_83 [cluster="Unk.IsMinNotSpecified", file="TargetWrapper.cs", label="Entry Unk.IsMinNotSpecified", span=""];
m15_30 [cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="TargetWrapper.cs", label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60"];
m15_59 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="TargetWrapper.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m15_85 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="TargetWrapper.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="106-106"];
m15_90 [file="TargetWrapper.cs", label=setsWithTrue, span=""];
m17_3 [cluster="CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", file="VerbOptionAttribute.cs", label="Entry CommandLine.Internal.Assumes.NotNullOrEmpty(string, string)", span="61-61"];
m17_0 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Entry CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="47-47"];
m17_1 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Assumes.NotNullOrEmpty(longName, ''longName'')", span="50-50"];
m17_2 [cluster="CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", file="VerbOptionAttribute.cs", label="Exit CommandLine.VerbOptionAttribute.VerbOptionAttribute(string)", span="47-47"];
n63 -> n8  [color=darkseagreen4, key=1, label="CommandLine.Tests.Unit.Attributes.HelpOptionAttributeFixture.MockOptions", style=dashed];
n64 -> n33  [color=red, key=1, label=writer, style=dashed];
n65 -> n49  [color=darkseagreen4, key=1, label=writer, style=dashed];
n66 -> n61  [color=darkseagreen4, key=1, label=writer, style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n11  [key=2, style=dotted];
n1 -> n12  [key=2, style=dotted];
n1 -> n3  [color=red, key=1, label=help, style=dashed];
n1 -> n4  [color=darkseagreen4, key=1, label=help, style=dashed];
n1 -> n5  [color=darkseagreen4, key=1, label=help, style=dashed];
n1 -> n6  [color=darkseagreen4, key=1, label=help, style=dashed];
n1 -> n7  [color=red, key=1, label=help, style=dashed];
n1 -> n8  [color=darkseagreen4, key=1, label=help, style=dashed];
n1 -> n9  [color=darkseagreen4, key=1, label=help, style=dashed];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n13  [color=red, key=2, style=dotted];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n14  [color=red, key=2, style=dotted];
n4 -> n5  [key=0, style=solid];
n4 -> n14  [key=2, style=dotted];
n5 -> n6  [key=0, style=solid];
n5 -> n14  [key=2, style=dotted];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n14  [key=2, style=dotted];
n7 -> n8  [color=red, key=0, style=solid];
n7 -> n14  [color=red, key=2, style=dotted];
n8 -> n9  [key=0, style=solid];
n8 -> n15  [key=2, style=dotted];
n9 -> n10  [key=0, style=solid];
n10 -> n0  [color=blue, key=0, style=bold];
n16 -> n17  [key=0, style=solid];
n17 -> n18  [key=0, style=solid];
n17 -> n24  [key=2, style=dotted];
n17 -> n20  [color=darkseagreen4, key=1, label=options, style=dashed];
n18 -> n19  [color=red, key=0, style=solid];
n18 -> n25  [key=2, style=dotted];
n18 -> n33  [color=red, key=1, label=writer, style=dashed];
n18 -> n22  [color=darkseagreen4, key=1, label=writer, style=dashed];
n20 -> n21  [key=0, style=solid];
n20 -> n27  [key=2, style=dotted];
n19 -> n20  [color=red, key=0, style=solid];
n19 -> n26  [color=red, key=2, style=dotted];
n19 -> n33  [color=red, key=1, label="CommandLine.Parser.ParserConfigurator", style=dashed];
n33 -> n34  [color=red, key=0, style=solid];
n33 -> n35  [color=red, key=2, style=dotted];
n22 -> n23  [key=0, style=solid];
n22 -> n30  [key=2, style=dotted];
n22 -> n28  [key=2, style=dotted];
n22 -> n31  [key=2, style=dotted];
n21 -> n22  [key=0, style=solid];
n21 -> n28  [key=2, style=dotted];
n21 -> n29  [key=2, style=dotted];
n23 -> n16  [color=blue, key=0, style=bold];
n32 -> n33  [color=red, key=0, style=solid];
n34 -> n32  [color=blue, key=0, style=bold];
n36 -> n37  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n37 -> n24  [key=2, style=dotted];
n37 -> n40  [color=darkseagreen4, key=1, label=options, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n25  [key=2, style=dotted];
n38 -> n49  [color=darkseagreen4, key=1, label=writer, style=dashed];
n38 -> n42  [color=darkseagreen4, key=1, label=writer, style=dashed];
n40 -> n41  [key=0, style=solid];
n40 -> n27  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n26  [key=2, style=dotted];
n39 -> n49  [color=darkseagreen4, key=1, label="CommandLine.Parser.ParserConfigurator", style=dashed];
n49 -> n50  [key=0, style=solid];
n49 -> n35  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n42 -> n30  [key=2, style=dotted];
n42 -> n44  [color=darkseagreen4, key=1, label=helpText, style=dashed];
n41 -> n42  [key=0, style=solid];
n41 -> n28  [key=2, style=dotted];
n41 -> n46  [key=2, style=dotted];
n43 -> n44  [key=0, style=solid];
n43 -> n28  [key=2, style=dotted];
n43 -> n29  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n47  [key=2, style=dotted];
n45 -> n36  [color=blue, key=0, style=bold];
n48 -> n49  [key=0, style=solid];
n50 -> n48  [color=blue, key=0, style=bold];
n51 -> n52  [key=0, style=solid];
n52 -> n53  [key=0, style=solid];
n52 -> n24  [key=2, style=dotted];
n52 -> n55  [color=red, key=1, label=options, style=dashed];
n53 -> n54  [key=0, style=solid];
n53 -> n25  [key=2, style=dotted];
n53 -> n61  [color=darkseagreen4, key=1, label=writer, style=dashed];
n53 -> n57  [color=darkseagreen4, key=1, label=writer, style=dashed];
n55 -> n56  [color=red, key=0, style=solid];
n55 -> n27  [color=red, key=2, style=dotted];
n54 -> n55  [color=red, key=0, style=solid];
n54 -> n26  [key=2, style=dotted];
n54 -> n61  [color=darkseagreen4, key=1, label="CommandLine.Parser.ParserConfigurator", style=dashed];
n61 -> n62  [key=0, style=solid];
n61 -> n35  [key=2, style=dotted];
n57 -> n58  [key=0, style=solid];
n57 -> n30  [key=2, style=dotted];
n56 -> n57  [color=red, key=0, style=solid];
n56 -> n28  [color=red, key=2, style=dotted];
n56 -> n46  [color=red, key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n28  [key=2, style=dotted];
n58 -> n29  [key=2, style=dotted];
n59 -> n51  [color=blue, key=0, style=bold];
n60 -> n61  [key=0, style=solid];
n62 -> n60  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m1_0 -> m1_5  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_0 -> m1_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_0 -> m1_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m1_0 -> m1_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_15  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_2 -> m1_10  [key=0, style=solid];
m1_2 -> m1_12  [key=2, style=dotted];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m1_1 -> m1_3  [key=0, style=solid];
m1_1 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_10  [key=2, style=dotted];
m1_3 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_3 -> m1_19  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_3 -> m1_5  [key=0, style=solid];
m1_4 -> m1_12  [key=2, style=dotted];
m1_4 -> m1_13  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_4 -> m1_10  [key=0, style=solid];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_21 -> m1_23  [key=0, style=solid];
m1_21 -> m1_24  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m1_18 -> m1_24  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_21  [color=darkseagreen4, key=1, label=other, style=dashed];
m1_19 -> m1_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_19 -> m1_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_25  [key=2, style=dotted];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_22  [key=0, style=solid];
m1_20 -> m1_18  [color=blue, key=0, style=bold];
m1_23 -> m1_18  [color=blue, key=0, style=bold];
m1_23 -> m1_25  [key=2, style=dotted];
m1_23 -> m1_26  [key=2, style=dotted];
m1_23 -> m1_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m1_23 -> m1_24  [key=0, style=solid];
m1_10 -> m1_0  [color=blue, key=0, style=bold];
m1_7 -> m1_8  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_6 -> m1_10  [key=0, style=solid];
m1_6 -> m1_13  [key=2, style=dotted];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_14  [color=blue, key=0, style=bold];
m1_17 -> m1_16  [color=blue, key=0, style=bold];
m1_24 -> m1_30  [key=0, style=solid];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_24 -> m1_19  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.Example other", style=bold];
m1_24 -> m1_31  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m1_24 -> m1_22  [color=blue, key=0, style=bold];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_32  [key=0, style=solid];
m1_30 -> m1_9  [key=2, style=dotted];
m1_30 -> m1_10  [key=2, style=dotted];
m1_30 -> m1_11  [key=2, style=dotted];
m1_30 -> m1_33  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_30 -> m1_37  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=2, style=dotted];
m1_32 -> m1_35  [key=2, style=dotted];
m1_32 -> m1_25  [key=2, style=dotted];
m1_32 -> m1_27  [color=blue, key=0, style=bold];
m1_31 -> m1_33  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_12  [key=2, style=dotted];
m1_31 -> m1_13  [key=2, style=dotted];
m1_31 -> m1_36  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_33 -> m1_24  [color=blue, key=0, style=bold];
m1_33 -> m1_34  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=2, style=dotted];
m1_28 -> m1_26  [color=blue, key=0, style=bold];
m1_28 -> m1_29  [color=green, key=0, style=solid];
m1_28 -> m1_6  [key=2, style=dotted];
m1_28 -> m1_31  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=2, style=dotted];
m1_37 -> m1_40  [key=2, style=dotted];
m1_37 -> m1_21  [key=2, style=dotted];
m1_38 -> m1_36  [color=blue, key=0, style=bold];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_17  [key=2, style=dotted];
m1_35 -> m1_33  [color=blue, key=0, style=bold];
m1_40 -> m1_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_25  [key=2, style=dotted];
m1_40 -> m1_26  [key=2, style=dotted];
m1_40 -> m1_0  [color=darkorchid, key=3, label="Field variable System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings> formatStyles", style=bold];
m1_15 -> m1_17  [key=2, style=dotted];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_14  [color=blue, key=0, style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_41 -> m1_39  [color=blue, key=0, style=bold];
m1_41 -> m1_7  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_8  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_9  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_22  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_27  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_41 -> m1_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m1_29 -> m1_30  [color=green, key=0, style=solid];
m1_29 -> m1_7  [color=green, key=2, style=dotted];
m1_29 -> m1_8  [color=green, key=2, style=dotted];
m1_29 -> m1_34  [color=green, key=1, label=specs, style=dashed];
m1_45 -> m1_34  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_46 -> m1_37  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_47 -> m1_40  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m1_42 -> m1_15  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_43 -> m1_19  [color=darkseagreen4, key=1, label=result, style=dashed];
m1_44 -> m1_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m3_164 -> m3_165  [key=0, style=solid];
m3_165 -> m3_166  [key=0, style=solid];
m3_165 -> m3_35  [key=2, style=dotted];
m3_165 -> m3_36  [key=2, style=dotted];
m3_165 -> m3_131  [key=2, style=dotted];
m3_165 -> m3_136  [key=2, style=dotted];
m3_165 -> m3_133  [key=2, style=dotted];
m3_166 -> m3_167  [key=0, style=solid];
m3_166 -> m3_179  [key=2, style=dotted];
m3_167 -> m3_168  [key=0, style=solid];
m3_167 -> m3_4  [key=2, style=dotted];
m3_167 -> m3_21  [key=2, style=dotted];
m3_167 -> m3_39  [key=2, style=dotted];
m3_167 -> m3_169  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_170  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_176  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_167 -> m3_177  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_168 -> m3_169  [key=0, style=solid];
m3_168 -> m3_180  [key=2, style=dotted];
m3_168 -> m3_181  [key=2, style=dotted];
m3_169 -> m3_170  [key=0, style=solid];
m3_169 -> m3_180  [key=2, style=dotted];
m3_169 -> m3_181  [key=2, style=dotted];
m3_170 -> m3_171  [key=0, style=solid];
m3_170 -> m3_5  [key=2, style=dotted];
m3_171 -> m3_172  [key=0, style=solid];
m3_171 -> m3_5  [key=2, style=dotted];
m3_172 -> m3_173  [key=0, style=solid];
m3_172 -> m3_5  [key=2, style=dotted];
m3_173 -> m3_174  [key=0, style=solid];
m3_173 -> m3_5  [key=2, style=dotted];
m3_174 -> m3_175  [key=0, style=solid];
m3_174 -> m3_5  [key=2, style=dotted];
m3_175 -> m3_176  [key=0, style=solid];
m3_175 -> m3_5  [key=2, style=dotted];
m3_176 -> m3_177  [key=0, style=solid];
m3_176 -> m3_5  [key=2, style=dotted];
m3_177 -> m3_178  [key=0, style=solid];
m3_177 -> m3_5  [key=2, style=dotted];
m3_178 -> m3_164  [color=blue, key=0, style=bold];
m3_220 -> m3_221  [key=0, style=solid];
m3_221 -> m3_222  [key=0, style=solid];
m3_221 -> m3_3  [key=2, style=dotted];
m3_221 -> m3_19  [key=2, style=dotted];
m3_221 -> m3_35  [key=2, style=dotted];
m3_221 -> m3_36  [key=2, style=dotted];
m3_221 -> m3_37  [key=2, style=dotted];
m3_221 -> m3_38  [key=2, style=dotted];
m3_221 -> m3_20  [key=2, style=dotted];
m3_222 -> m3_223  [key=0, style=solid];
m3_222 -> m3_4  [key=2, style=dotted];
m3_222 -> m3_21  [key=2, style=dotted];
m3_222 -> m3_39  [key=2, style=dotted];
m3_222 -> m3_224  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_222 -> m3_225  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_222 -> m3_226  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_222 -> m3_227  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_222 -> m3_228  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_222 -> m3_229  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_222 -> m3_230  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_222 -> m3_231  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_223 -> m3_224  [key=0, style=solid];
m3_223 -> m3_5  [key=2, style=dotted];
m3_224 -> m3_225  [key=0, style=solid];
m3_224 -> m3_5  [key=2, style=dotted];
m3_225 -> m3_226  [key=0, style=solid];
m3_225 -> m3_5  [key=2, style=dotted];
m3_226 -> m3_227  [key=0, style=solid];
m3_226 -> m3_5  [key=2, style=dotted];
m3_227 -> m3_228  [key=0, style=solid];
m3_227 -> m3_5  [key=2, style=dotted];
m3_228 -> m3_229  [key=0, style=solid];
m3_228 -> m3_5  [key=2, style=dotted];
m3_229 -> m3_230  [key=0, style=solid];
m3_229 -> m3_5  [key=2, style=dotted];
m3_230 -> m3_231  [key=0, style=solid];
m3_230 -> m3_5  [key=2, style=dotted];
m3_231 -> m3_232  [key=0, style=solid];
m3_231 -> m3_5  [key=2, style=dotted];
m3_232 -> m3_220  [color=blue, key=0, style=bold];
m3_40 -> m3_41  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_3  [key=2, style=dotted];
m3_41 -> m3_19  [key=2, style=dotted];
m3_41 -> m3_35  [key=2, style=dotted];
m3_41 -> m3_36  [key=2, style=dotted];
m3_41 -> m3_37  [key=2, style=dotted];
m3_41 -> m3_38  [key=2, style=dotted];
m3_41 -> m3_20  [key=2, style=dotted];
m3_41 -> m3_41  [color=darkorchid, key=3, label="Property variable System.Func<bool, string> VersionCommandText", style=bold];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_4  [key=2, style=dotted];
m3_42 -> m3_21  [key=2, style=dotted];
m3_42 -> m3_39  [key=2, style=dotted];
m3_42 -> m3_44  [color=green, key=1, label=object, style=dashed];
m3_42 -> m3_45  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_42 -> m3_46  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_42 -> m3_47  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_42 -> m3_48  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_42 -> m3_49  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_42 -> m3_53  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_42 -> m3_55  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_43 -> m3_44  [color=green, key=0, style=solid];
m3_43 -> m3_5  [key=2, style=dotted];
m3_43 -> m3_62  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m3_43 -> m3_33  [color=darkorchid, key=3, label="Local variable bool hadError", style=bold];
m3_44 -> m3_45  [color=green, key=0, style=solid];
m3_44 -> m3_5  [key=2, style=dotted];
m3_44 -> m3_65  [color=green, key=2, style=dotted];
m3_44 -> m3_53  [color=green, key=1, label=optionMap, style=dashed];
m3_44 -> m3_62  [color=green, key=1, label=optionMap, style=dashed];
m3_45 -> m3_46  [key=0, style=solid];
m3_45 -> m3_5  [key=2, style=dotted];
m3_45 -> m3_66  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_5  [key=2, style=dotted];
m3_46 -> m3_59  [color=green, key=1, label=target, style=dashed];
m3_46 -> m3_67  [key=2, style=dotted];
m3_46 -> m3_60  [color=darkseagreen4, key=1, label=target, style=dashed];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_5  [key=2, style=dotted];
m3_47 -> m3_58  [color=green, key=1, label=arguments, style=dashed];
m3_47 -> m3_53  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m3_47 -> m3_68  [key=2, style=dotted];
m3_47 -> m3_49  [color=darkseagreen4, key=1, label=arguments, style=dashed];
m3_48 -> m3_49  [key=0, style=solid];
m3_48 -> m3_5  [key=2, style=dotted];
m3_48 -> m3_62  [key=0, style=solid];
m3_48 -> m3_69  [key=2, style=dotted];
m3_49 -> m3_50  [key=0, style=solid];
m3_49 -> m3_5  [key=2, style=dotted];
m3_49 -> m3_51  [color=green, key=1, label=argument, style=dashed];
m3_49 -> m3_60  [color=darkseagreen4, key=1, label=argument, style=dashed];
m3_50 -> m3_40  [color=blue, key=0, style=bold];
m3_50 -> m3_51  [color=green, key=0, style=solid];
m3_50 -> m3_48  [key=0, style=solid];
m3_50 -> m3_70  [key=2, style=dotted];
m3_205 -> m3_206  [key=0, style=solid];
m3_206 -> m3_207  [key=0, style=solid];
m3_206 -> m3_37  [key=2, style=dotted];
m3_206 -> m3_218  [key=2, style=dotted];
m3_207 -> m3_208  [key=0, style=solid];
m3_207 -> m3_35  [key=2, style=dotted];
m3_207 -> m3_219  [key=2, style=dotted];
m3_207 -> m3_140  [key=2, style=dotted];
m3_208 -> m3_209  [key=0, style=solid];
m3_208 -> m3_179  [key=2, style=dotted];
m3_209 -> m3_210  [key=0, style=solid];
m3_209 -> m3_4  [key=2, style=dotted];
m3_209 -> m3_21  [key=2, style=dotted];
m3_209 -> m3_39  [key=2, style=dotted];
m3_209 -> m3_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_209 -> m3_216  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_210 -> m3_211  [key=0, style=solid];
m3_210 -> m3_180  [key=2, style=dotted];
m3_210 -> m3_181  [key=2, style=dotted];
m3_211 -> m3_212  [key=0, style=solid];
m3_211 -> m3_180  [key=2, style=dotted];
m3_211 -> m3_181  [key=2, style=dotted];
m3_212 -> m3_213  [key=0, style=solid];
m3_212 -> m3_5  [key=2, style=dotted];
m3_213 -> m3_214  [key=0, style=solid];
m3_213 -> m3_5  [key=2, style=dotted];
m3_214 -> m3_215  [key=0, style=solid];
m3_214 -> m3_5  [key=2, style=dotted];
m3_215 -> m3_216  [key=0, style=solid];
m3_215 -> m3_5  [key=2, style=dotted];
m3_216 -> m3_217  [key=0, style=solid];
m3_216 -> m3_5  [key=2, style=dotted];
m3_217 -> m3_205  [color=blue, key=0, style=bold];
m3_19 -> m3_22  [color=darkseagreen4, key=1, label="System.IO.TextWriter", style=dashed];
m3_19 -> m3_23  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_19 -> m3_18  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_21  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_22 -> m3_23  [key=0, style=solid];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_18  [key=2, style=dotted];
m3_23 -> m3_3  [key=2, style=dotted];
m3_23 -> m3_19  [key=2, style=dotted];
m3_23 -> m3_35  [key=2, style=dotted];
m3_23 -> m3_36  [key=2, style=dotted];
m3_23 -> m3_37  [key=2, style=dotted];
m3_23 -> m3_38  [key=2, style=dotted];
m3_23 -> m3_20  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_12  [key=2, style=dotted];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_12  [key=2, style=dotted];
m3_24 -> m3_19  [color=blue, key=0, style=bold];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_4  [key=2, style=dotted];
m3_24 -> m3_21  [key=2, style=dotted];
m3_24 -> m3_39  [key=2, style=dotted];
m3_24 -> m3_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_24 -> m3_33  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_38 -> m3_76  [key=0, style=solid];
m3_38 -> m3_33  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
m3_38 -> m3_18  [color=darkorchid, key=3, label="Parameter variable string[] args", style=bold];
m3_38 -> m3_34  [color=darkorchid, key=3, label="method methodReturn bool ParseHelp", style=bold];
m3_38 -> m3_78  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_38 -> m3_79  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m3_38 -> m3_80  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_38 -> m3_82  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m3_38 -> m3_83  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_36 -> m3_18  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_69 -> m3_70  [color=red, key=0, style=solid];
m3_70 -> m3_71  [color=red, key=0, style=solid];
m3_70 -> m3_35  [color=red, key=2, style=dotted];
m3_70 -> m3_36  [color=red, key=2, style=dotted];
m3_70 -> m3_37  [color=red, key=2, style=dotted];
m3_70 -> m3_38  [color=red, key=2, style=dotted];
m3_67 -> m3_68  [key=0, style=solid];
m3_250 -> m3_251  [key=0, style=solid];
m3_251 -> m3_252  [key=0, style=solid];
m3_251 -> m3_35  [key=2, style=dotted];
m3_251 -> m3_36  [key=2, style=dotted];
m3_251 -> m3_131  [key=2, style=dotted];
m3_252 -> m3_253  [key=0, style=solid];
m3_252 -> m3_179  [key=2, style=dotted];
m3_253 -> m3_254  [key=0, style=solid];
m3_253 -> m3_4  [key=2, style=dotted];
m3_254 -> m3_255  [key=0, style=solid];
m3_254 -> m3_21  [key=2, style=dotted];
m3_254 -> m3_39  [key=2, style=dotted];
m3_254 -> m3_256  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_257  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_258  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_259  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_260  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_261  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_262  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_263  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_264  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_265  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_266  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_267  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_268  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_269  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_270  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_271  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_272  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_273  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_274  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_275  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_276  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_277  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_278  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_254 -> m3_279  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_255 -> m3_256  [key=0, style=solid];
m3_255 -> m3_180  [key=2, style=dotted];
m3_255 -> m3_181  [key=2, style=dotted];
m3_256 -> m3_257  [key=0, style=solid];
m3_256 -> m3_180  [key=2, style=dotted];
m3_256 -> m3_181  [key=2, style=dotted];
m3_257 -> m3_258  [key=0, style=solid];
m3_257 -> m3_5  [key=2, style=dotted];
m3_258 -> m3_259  [key=0, style=solid];
m3_258 -> m3_5  [key=2, style=dotted];
m3_259 -> m3_260  [key=0, style=solid];
m3_259 -> m3_5  [key=2, style=dotted];
m3_260 -> m3_261  [key=0, style=solid];
m3_260 -> m3_5  [key=2, style=dotted];
m3_261 -> m3_262  [key=0, style=solid];
m3_261 -> m3_5  [key=2, style=dotted];
m3_262 -> m3_263  [key=0, style=solid];
m3_262 -> m3_5  [key=2, style=dotted];
m3_263 -> m3_264  [key=0, style=solid];
m3_263 -> m3_5  [key=2, style=dotted];
m3_264 -> m3_265  [key=0, style=solid];
m3_264 -> m3_5  [key=2, style=dotted];
m3_265 -> m3_266  [key=0, style=solid];
m3_265 -> m3_5  [key=2, style=dotted];
m3_266 -> m3_267  [key=0, style=solid];
m3_266 -> m3_5  [key=2, style=dotted];
m3_267 -> m3_268  [key=0, style=solid];
m3_267 -> m3_5  [key=2, style=dotted];
m3_268 -> m3_269  [key=0, style=solid];
m3_268 -> m3_5  [key=2, style=dotted];
m3_269 -> m3_270  [key=0, style=solid];
m3_269 -> m3_5  [key=2, style=dotted];
m3_270 -> m3_271  [key=0, style=solid];
m3_270 -> m3_5  [key=2, style=dotted];
m3_271 -> m3_272  [key=0, style=solid];
m3_271 -> m3_5  [key=2, style=dotted];
m3_272 -> m3_273  [key=0, style=solid];
m3_272 -> m3_5  [key=2, style=dotted];
m3_273 -> m3_274  [key=0, style=solid];
m3_273 -> m3_5  [key=2, style=dotted];
m3_274 -> m3_275  [key=0, style=solid];
m3_274 -> m3_5  [key=2, style=dotted];
m3_275 -> m3_276  [key=0, style=solid];
m3_275 -> m3_5  [key=2, style=dotted];
m3_276 -> m3_277  [key=0, style=solid];
m3_276 -> m3_5  [key=2, style=dotted];
m3_277 -> m3_278  [key=0, style=solid];
m3_277 -> m3_5  [key=2, style=dotted];
m3_278 -> m3_279  [key=0, style=solid];
m3_278 -> m3_5  [key=2, style=dotted];
m3_279 -> m3_280  [key=0, style=solid];
m3_279 -> m3_5  [key=2, style=dotted];
m3_280 -> m3_250  [color=blue, key=0, style=bold];
m3_102 -> m3_103  [key=0, style=solid];
m3_102 -> m3_5  [key=2, style=dotted];
m3_7 -> m3_8  [key=0, style=solid];
m3_7 -> m3_16  [key=2, style=dotted];
m3_7 -> n12  [key=2, style=dotted];
m3_7 -> m3_18  [key=2, style=dotted];
m3_7 -> m3_19  [key=2, style=dotted];
m3_7 -> m3_20  [key=2, style=dotted];
m3_13 -> m3_16  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_13 -> m3_14  [key=0, style=solid];
m3_13 -> m3_15  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_13 -> m3_18  [color=darkorchid, key=3, label="method methodReturn bool ParseArguments", style=bold];
m3_13 -> m3_5  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_16 -> m3_44  [color=darkorchid, key=3, label="Property variable System.Func<CommandLine.Error, string> FormatError", style=bold];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_12  [key=2, style=dotted];
m3_15 -> m3_6  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_14 -> m3_12  [key=2, style=dotted];
m3_14 -> m3_5  [key=2, style=dotted];
m3_17 -> m3_13  [color=blue, key=0, style=bold];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_7  [key=2, style=dotted];
m3_298 -> m3_299  [key=0, style=solid];
m3_299 -> m3_300  [key=0, style=solid];
m3_299 -> m3_303  [key=2, style=dotted];
m3_299 -> m3_304  [key=2, style=dotted];
m3_300 -> m3_301  [key=0, style=solid];
m3_300 -> m3_35  [key=2, style=dotted];
m3_300 -> m3_36  [key=2, style=dotted];
m3_300 -> m3_131  [key=2, style=dotted];
m3_300 -> m3_136  [key=2, style=dotted];
m3_300 -> m3_133  [key=2, style=dotted];
m3_301 -> m3_302  [key=0, style=solid];
m3_301 -> m3_305  [key=2, style=dotted];
m3_301 -> m3_306  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_301 -> m3_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_302 -> m3_298  [color=blue, key=0, style=bold];
m3_51 -> m3_52  [color=green, key=0, style=solid];
m3_51 -> m3_71  [color=green, key=2, style=dotted];
m3_51 -> m3_53  [color=green, key=1, label=parser, style=dashed];
m3_51 -> m3_55  [color=green, key=1, label=parser, style=dashed];
m3_52 -> m3_53  [key=0, style=solid];
m3_52 -> m3_3  [key=2, style=dotted];
m3_52 -> m3_19  [key=2, style=dotted];
m3_52 -> m3_35  [key=2, style=dotted];
m3_52 -> m3_36  [key=2, style=dotted];
m3_52 -> m3_37  [key=2, style=dotted];
m3_52 -> m3_38  [key=2, style=dotted];
m3_52 -> m3_20  [key=2, style=dotted];
m3_52 -> m3_59  [color=green, key=0, style=solid];
m3_53 -> m3_54  [key=0, style=solid];
m3_53 -> m3_4  [key=2, style=dotted];
m3_53 -> m3_21  [key=2, style=dotted];
m3_53 -> m3_39  [key=2, style=dotted];
m3_53 -> m3_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_53 -> m3_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_53 -> m3_57  [color=darkseagreen4, key=1, label=result, style=dashed];
m3_53 -> m3_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_53 -> m3_59  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_53 -> m3_72  [key=2, style=dotted];
m3_54 -> m3_55  [key=0, style=solid];
m3_54 -> m3_5  [key=2, style=dotted];
m3_54 -> m3_57  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_55 -> m3_5  [key=2, style=dotted];
m3_55 -> m3_73  [key=2, style=dotted];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_5  [key=2, style=dotted];
m3_56 -> m3_62  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m3_56 -> m3_48  [key=0, style=solid];
m3_57 -> m3_58  [color=green, key=0, style=solid];
m3_57 -> m3_5  [key=2, style=dotted];
m3_57 -> m3_48  [key=0, style=solid];
m3_58 -> m3_59  [key=0, style=solid];
m3_58 -> m3_5  [key=2, style=dotted];
m3_58 -> m3_48  [color=green, key=0, style=solid];
m3_58 -> m3_69  [color=green, key=2, style=dotted];
m3_59 -> m3_60  [color=green, key=0, style=solid];
m3_59 -> m3_5  [key=2, style=dotted];
m3_59 -> m3_48  [color=green, key=0, style=solid];
m3_60 -> m3_51  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [key=0, style=solid];
m3_60 -> m3_48  [key=0, style=solid];
m3_60 -> m3_74  [key=2, style=dotted];
m3_79 -> m3_80  [key=0, style=solid];
m3_79 -> m3_82  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_66  [key=2, style=dotted];
m3_80 -> n12  [key=2, style=dotted];
m3_80 -> m3_82  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_80 -> m3_88  [key=2, style=dotted];
m3_81 -> m3_82  [key=0, style=solid];
m3_81 -> m3_35  [key=2, style=dotted];
m3_81 -> m3_36  [key=2, style=dotted];
m3_81 -> m3_37  [key=2, style=dotted];
m3_81 -> m3_38  [key=2, style=dotted];
m3_81 -> m3_87  [key=0, style=solid];
m3_82 -> m3_83  [key=0, style=solid];
m3_82 -> m3_4  [key=2, style=dotted];
m3_82 -> m3_78  [key=2, style=dotted];
m3_82 -> m3_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_82 -> m3_70  [key=2, style=dotted];
m3_82 -> m3_85  [key=0, style=solid];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_5  [key=2, style=dotted];
m3_83 -> m3_85  [key=0, style=solid];
m3_83 -> m3_89  [key=2, style=dotted];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_5  [key=2, style=dotted];
m3_84 -> m3_87  [key=0, style=solid];
m3_85 -> m3_79  [color=blue, key=0, style=bold];
m3_85 -> m3_78  [key=0, style=solid];
m3_85 -> m3_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_5  [key=2, style=dotted];
m3_25 -> m3_29  [color=darkseagreen4, key=1, label=pair, style=dashed];
m3_25 -> m3_37  [key=2, style=dotted];
m3_25 -> m3_28  [color=darkseagreen4, key=1, label=pair, style=dashed];
m3_25 -> m3_31  [color=darkseagreen4, key=1, label=pair, style=dashed];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_5  [key=2, style=dotted];
m3_26 -> m3_28  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m3_26 -> m3_32  [color=darkseagreen4, key=1, label=helpWriter, style=dashed];
m3_27 -> m3_28  [key=0, style=solid];
m3_27 -> m3_5  [key=2, style=dotted];
m3_27 -> m3_29  [color=darkorchid, key=3, label="Property variable System.Func<string> ErrorsHeadingText", style=bold];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_5  [key=2, style=dotted];
m3_28 -> m3_35  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_5  [key=2, style=dotted];
m3_29 -> m3_34  [key=0, style=solid];
m3_29 -> m3_38  [key=2, style=dotted];
m3_29 -> m3_39  [key=2, style=dotted];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_5  [key=2, style=dotted];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_5  [key=2, style=dotted];
m3_31 -> m3_40  [key=2, style=dotted];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_5  [key=2, style=dotted];
m3_32 -> m3_18  [color=darkorchid, key=3, label="Property variable System.Func<bool, string> HelpCommandText", style=bold];
m3_32 -> m3_41  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_5  [key=2, style=dotted];
m3_33 -> m3_36  [key=0, style=solid];
m3_34 -> m3_22  [color=blue, key=0, style=bold];
m3_34 -> m3_36  [key=0, style=solid];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_143  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_119 -> m3_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_119 -> m3_147  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_119 -> m3_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_119 -> m3_151  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_119 -> m3_153  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_119 -> m3_157  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_119 -> m3_121  [color=darkseagreen4, key=1, label=fakeRenderer, style=dashed];
m3_119 -> m3_119  [color=darkorchid, key=3, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer", style=bold];
m3_120 -> m3_121  [key=0, style=solid];
m3_120 -> m3_109  [key=2, style=dotted];
m3_120 -> m3_120  [color=darkorchid, key=3, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer", style=bold];
m3_121 -> m3_119  [color=blue, key=0, style=bold];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_141  [key=2, style=dotted];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_95  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_93 -> m3_96  [color=darkseagreen4, key=1, label=property, style=dashed];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_66  [key=2, style=dotted];
m3_94 -> n12  [key=2, style=dotted];
m3_94 -> m3_96  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_94 -> m3_97  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_94 -> m3_101  [key=2, style=dotted];
m3_95 -> m3_96  [key=0, style=solid];
m3_95 -> m3_102  [key=2, style=dotted];
m3_95 -> m3_103  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_96 -> m3_35  [key=2, style=dotted];
m3_96 -> m3_36  [key=2, style=dotted];
m3_96 -> m3_37  [key=2, style=dotted];
m3_96 -> m3_38  [key=2, style=dotted];
m3_96 -> m3_101  [key=2, style=dotted];
m3_96 -> m3_98  [color=darkseagreen4, key=1, label=parserState, style=dashed];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_4  [key=2, style=dotted];
m3_97 -> m3_21  [key=2, style=dotted];
m3_97 -> m3_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_97 -> m3_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_97 -> m3_101  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_97 -> m3_102  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_97 -> m3_103  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_5  [key=2, style=dotted];
m3_98 -> m3_97  [key=0, style=solid];
m3_98 -> m3_104  [key=2, style=dotted];
m3_99 -> m3_100  [key=0, style=solid];
m3_99 -> m3_5  [key=2, style=dotted];
m3_99 -> m3_73  [color=blue, key=0, style=bold];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_5  [key=2, style=dotted];
m3_101 -> m3_102  [key=0, style=solid];
m3_101 -> m3_5  [key=2, style=dotted];
m3_103 -> m3_104  [key=0, style=solid];
m3_103 -> m3_5  [key=2, style=dotted];
m3_104 -> m3_93  [color=blue, key=0, style=bold];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_107  [key=0, style=solid];
m3_106 -> m3_66  [key=2, style=dotted];
m3_106 -> m3_108  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_106 -> m3_109  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_110  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_19  [key=2, style=dotted];
m3_108 -> m3_35  [key=2, style=dotted];
m3_108 -> m3_36  [key=2, style=dotted];
m3_108 -> m3_37  [key=2, style=dotted];
m3_108 -> m3_38  [key=2, style=dotted];
m3_108 -> m3_20  [key=2, style=dotted];
m3_108 -> m3_105  [color=blue, key=0, style=bold];
m3_109 -> m3_110  [key=0, style=solid];
m3_109 -> m3_4  [key=2, style=dotted];
m3_109 -> m3_21  [key=2, style=dotted];
m3_109 -> m3_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_109 -> m3_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_109 -> m3_113  [color=darkseagreen4, key=1, label=bool, style=dashed];
m3_109 -> m3_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_109 -> m3_115  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_109 -> m3_33  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m3_109 -> m3_34  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_5  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_5  [key=2, style=dotted];
m3_111 -> m3_113  [key=0, style=solid];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_5  [key=2, style=dotted];
m3_112 -> m3_117  [key=0, style=solid];
m3_113 -> m3_114  [key=0, style=solid];
m3_113 -> m3_5  [key=2, style=dotted];
m3_113 -> m3_117  [key=0, style=solid];
m3_114 -> m3_115  [key=0, style=solid];
m3_114 -> m3_5  [key=2, style=dotted];
m3_114 -> m3_116  [key=0, style=solid];
m3_115 -> m3_116  [key=0, style=solid];
m3_115 -> m3_5  [key=2, style=dotted];
m3_115 -> m3_118  [key=2, style=dotted];
m3_116 -> m3_105  [color=blue, key=0, style=bold];
m3_116 -> m3_117  [key=0, style=solid];
m3_281 -> m3_282  [key=0, style=solid];
m3_282 -> m3_283  [key=0, style=solid];
m3_282 -> m3_293  [key=2, style=dotted];
m3_282 -> m3_294  [key=2, style=dotted];
m3_282 -> m3_284  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m3_282 -> m3_286  [color=darkseagreen4, key=1, label=handlers, style=dashed];
m3_283 -> m3_284  [key=0, style=solid];
m3_283 -> m3_35  [key=2, style=dotted];
m3_283 -> m3_295  [key=2, style=dotted];
m3_283 -> m3_131  [key=2, style=dotted];
m3_283 -> m3_285  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m3_284 -> m3_285  [key=0, style=solid];
m3_284 -> m3_296  [key=2, style=dotted];
m3_286 -> m3_287  [key=0, style=solid];
m3_286 -> m3_296  [key=2, style=dotted];
m3_285 -> m3_286  [key=0, style=solid];
m3_285 -> m3_179  [key=2, style=dotted];
m3_285 -> m3_287  [color=darkseagreen4, key=1, label=helpText, style=dashed];
m3_287 -> m3_288  [key=0, style=solid];
m3_287 -> m3_4  [key=2, style=dotted];
m3_288 -> m3_289  [key=0, style=solid];
m3_288 -> m3_21  [key=2, style=dotted];
m3_288 -> m3_39  [key=2, style=dotted];
m3_288 -> m3_290  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_288 -> m3_291  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_289 -> m3_290  [key=0, style=solid];
m3_289 -> m3_180  [key=2, style=dotted];
m3_289 -> m3_297  [key=2, style=dotted];
m3_290 -> m3_291  [key=0, style=solid];
m3_290 -> m3_180  [key=2, style=dotted];
m3_290 -> m3_297  [key=2, style=dotted];
m3_291 -> m3_292  [key=0, style=solid];
m3_291 -> m3_180  [key=2, style=dotted];
m3_291 -> m3_297  [key=2, style=dotted];
m3_292 -> m3_281  [color=blue, key=0, style=bold];
m3_309 -> m3_310  [key=0, style=solid];
m3_143 -> m3_144  [key=0, style=solid];
m3_143 -> m3_146  [key=0, style=solid];
m3_143 -> m3_148  [key=0, style=solid];
m3_143 -> m3_150  [key=0, style=solid];
m3_143 -> m3_152  [key=0, style=solid];
m3_143 -> m3_154  [key=0, style=solid];
m3_143 -> m3_156  [key=0, style=solid];
m3_143 -> m3_158  [key=0, style=solid];
m3_145 -> m3_159  [key=0, style=solid];
m3_147 -> m3_159  [key=0, style=solid];
m3_149 -> m3_159  [key=0, style=solid];
m3_151 -> m3_159  [key=0, style=solid];
m3_153 -> m3_159  [key=0, style=solid];
m3_157 -> m3_159  [key=0, style=solid];
m3_142 -> m3_143  [key=0, style=solid];
m3_142 -> m3_145  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_142 -> m3_147  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_142 -> m3_149  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_142 -> m3_151  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_142 -> m3_153  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_142 -> m3_157  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m3_144 -> m3_145  [key=0, style=solid];
m3_146 -> m3_147  [key=0, style=solid];
m3_148 -> m3_149  [key=0, style=solid];
m3_150 -> m3_151  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_154 -> m3_155  [key=0, style=solid];
m3_156 -> m3_157  [key=0, style=solid];
m3_158 -> m3_159  [key=0, style=solid];
m3_158 -> m3_160  [key=2, style=dotted];
m3_155 -> m3_159  [key=0, style=solid];
m3_159 -> m3_142  [color=blue, key=0, style=bold];
m3_161 -> m3_162  [key=0, style=solid];
m3_162 -> m3_163  [key=0, style=solid];
m3_163 -> m3_161  [color=blue, key=0, style=bold];
m3_306 -> m3_307  [key=0, style=solid];
m3_307 -> m3_308  [key=0, style=solid];
m3_308 -> m3_306  [color=blue, key=0, style=bold];
m3_310 -> m3_311  [key=0, style=solid];
m3_311 -> m3_309  [color=blue, key=0, style=bold];
m3_62 -> m3_62  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_75  [key=2, style=dotted];
m3_62 -> m3_66  [key=2, style=dotted];
m3_62 -> m3_35  [key=2, style=dotted];
m3_62 -> m3_36  [key=2, style=dotted];
m3_62 -> m3_37  [key=2, style=dotted];
m3_62 -> m3_38  [key=2, style=dotted];
m3_61 -> m3_62  [color=darkseagreen4, key=1, label=hadError, style=dashed];
m3_61 -> m3_48  [key=0, style=solid];
m3_63 -> m3_64  [key=0, style=solid];
m3_63 -> m3_4  [key=2, style=dotted];
m3_63 -> m3_21  [key=2, style=dotted];
m3_63 -> m3_39  [key=2, style=dotted];
m3_64 -> m3_42  [color=blue, key=0, style=bold];
m3_64 -> m3_65  [key=0, style=solid];
m3_64 -> m3_5  [key=2, style=dotted];
m3_74 -> m3_75  [key=0, style=solid];
m3_74 -> m3_5  [key=2, style=dotted];
m3_117 -> m3_109  [color=blue, key=0, style=bold];
m3_117 -> m3_118  [key=0, style=solid];
m3_89 -> m3_90  [key=0, style=solid];
m3_89 -> m3_4  [key=2, style=dotted];
m3_89 -> m3_78  [key=2, style=dotted];
m3_89 -> m3_91  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_18 -> m3_27  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_18 -> m3_29  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_18 -> m3_35  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m3_18 -> m3_33  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m3_18 -> m3_13  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m3_18 -> m3_25  [key=0, style=solid];
m3_18 -> m3_31  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_18 -> m3_19  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m3_18 -> m3_34  [color=darkorchid, key=3, label="method methodReturn bool DoParseArguments", style=bold];
m3_35 -> m3_36  [key=0, style=solid];
m3_35 -> m3_39  [key=2, style=dotted];
m3_78 -> m3_78  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m3_78 -> m3_79  [key=0, style=solid];
m3_78 -> m3_86  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_66  [key=2, style=dotted];
m3_87 -> n12  [key=2, style=dotted];
m3_87 -> m3_89  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_87 -> m3_38  [color=blue, key=0, style=bold];
m3_88 -> m3_89  [key=0, style=solid];
m3_88 -> m3_35  [key=2, style=dotted];
m3_88 -> m3_36  [key=2, style=dotted];
m3_88 -> m3_37  [key=2, style=dotted];
m3_88 -> m3_38  [key=2, style=dotted];
m3_90 -> m3_91  [key=0, style=solid];
m3_90 -> m3_5  [key=2, style=dotted];
m3_90 -> m3_100  [key=2, style=dotted];
m3_90 -> m3_93  [color=darkseagreen4, key=1, label=list, style=dashed];
m3_91 -> m3_92  [key=0, style=solid];
m3_91 -> m3_5  [key=2, style=dotted];
m3_91 -> m3_93  [key=0, style=solid];
m3_92 -> m3_86  [color=blue, key=0, style=bold];
m3_92 -> m3_99  [key=0, style=solid];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_35  [key=2, style=dotted];
m3_118 -> m3_36  [key=2, style=dotted];
m3_118 -> m3_131  [key=2, style=dotted];
m3_118 -> m3_132  [key=2, style=dotted];
m3_118 -> m3_133  [key=2, style=dotted];
m3_118 -> m3_134  [key=2, style=dotted];
m3_118 -> m3_135  [key=2, style=dotted];
m3_118 -> m3_136  [key=2, style=dotted];
m3_118 -> m3_137  [key=2, style=dotted];
m3_118 -> m3_138  [key=2, style=dotted];
m3_118 -> m3_139  [key=2, style=dotted];
m3_118 -> m3_140  [key=2, style=dotted];
m3_118 -> m3_121  [color=darkseagreen4, key=1, label=fakeResult, style=dashed];
m3_73 -> m3_42  [color=darkorchid, key=3, label="Parameter variable object options", style=bold];
m3_73 -> m3_90  [key=0, style=solid];
m3_73 -> m3_94  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_73 -> m3_95  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_73 -> m3_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m3_73 -> m3_97  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ParsingError>", style=dashed];
m3_73 -> m3_74  [key=0, style=solid];
m3_73 -> m3_5  [key=2, style=dotted];
m3_65 -> m3_61  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_233 -> m3_234  [key=0, style=solid];
m3_234 -> m3_235  [key=0, style=solid];
m3_234 -> m3_35  [key=2, style=dotted];
m3_234 -> m3_36  [key=2, style=dotted];
m3_234 -> m3_37  [key=2, style=dotted];
m3_235 -> m3_236  [key=0, style=solid];
m3_235 -> m3_249  [key=2, style=dotted];
m3_236 -> m3_237  [key=0, style=solid];
m3_236 -> m3_21  [key=2, style=dotted];
m3_236 -> m3_238  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_239  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_240  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_241  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_242  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_243  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_244  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_245  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_246  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_236 -> m3_247  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_237 -> m3_238  [key=0, style=solid];
m3_237 -> m3_5  [key=2, style=dotted];
m3_238 -> m3_239  [key=0, style=solid];
m3_238 -> m3_5  [key=2, style=dotted];
m3_239 -> m3_240  [key=0, style=solid];
m3_239 -> m3_5  [key=2, style=dotted];
m3_240 -> m3_241  [key=0, style=solid];
m3_240 -> m3_5  [key=2, style=dotted];
m3_241 -> m3_242  [key=0, style=solid];
m3_241 -> m3_5  [key=2, style=dotted];
m3_242 -> m3_243  [key=0, style=solid];
m3_242 -> m3_5  [key=2, style=dotted];
m3_243 -> m3_244  [key=0, style=solid];
m3_243 -> m3_5  [key=2, style=dotted];
m3_244 -> m3_245  [key=0, style=solid];
m3_244 -> m3_5  [key=2, style=dotted];
m3_245 -> m3_246  [key=0, style=solid];
m3_245 -> m3_5  [key=2, style=dotted];
m3_246 -> m3_247  [key=0, style=solid];
m3_246 -> m3_5  [key=2, style=dotted];
m3_247 -> m3_248  [key=0, style=solid];
m3_247 -> m3_5  [key=2, style=dotted];
m3_248 -> m3_233  [color=blue, key=0, style=bold];
m3_71 -> m3_72  [key=0, style=solid];
m3_71 -> m3_4  [key=2, style=dotted];
m3_71 -> m3_78  [key=2, style=dotted];
m3_71 -> m3_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_71 -> m3_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_71 -> m3_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_71 -> m3_76  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_5  [key=2, style=dotted];
m3_75 -> m3_76  [key=0, style=solid];
m3_75 -> m3_5  [key=2, style=dotted];
m3_72 -> m3_73  [key=0, style=solid];
m3_72 -> m3_5  [key=2, style=dotted];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_4  [color=blue, key=0, style=bold];
m3_8 -> m3_9  [key=0, style=solid];
m3_8 -> m3_4  [key=2, style=dotted];
m3_8 -> m3_21  [key=2, style=dotted];
m3_8 -> m3_10  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParserSettings", style=dashed];
m3_8 -> m3_11  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_8 -> m3_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_9 -> m3_10  [key=0, style=solid];
m3_9 -> m3_5  [key=2, style=dotted];
m3_9 -> m3_12  [key=2, style=dotted];
m3_10 -> m3_11  [key=0, style=solid];
m3_10 -> m3_5  [key=2, style=dotted];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_5  [key=2, style=dotted];
m3_11 -> m3_8  [color=blue, key=0, style=bold];
m3_182 -> m3_183  [key=0, style=solid];
m3_183 -> m3_184  [key=0, style=solid];
m3_183 -> m3_35  [key=2, style=dotted];
m3_183 -> m3_36  [key=2, style=dotted];
m3_183 -> m3_140  [key=2, style=dotted];
m3_184 -> m3_185  [key=0, style=solid];
m3_184 -> m3_179  [key=2, style=dotted];
m3_185 -> m3_186  [key=0, style=solid];
m3_185 -> m3_4  [key=2, style=dotted];
m3_185 -> m3_21  [key=2, style=dotted];
m3_185 -> m3_39  [key=2, style=dotted];
m3_185 -> m3_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_185 -> m3_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_185 -> m3_189  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_185 -> m3_190  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_185 -> m3_191  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_185 -> m3_192  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_186 -> m3_187  [key=0, style=solid];
m3_186 -> m3_180  [key=2, style=dotted];
m3_186 -> m3_181  [key=2, style=dotted];
m3_187 -> m3_188  [key=0, style=solid];
m3_187 -> m3_180  [key=2, style=dotted];
m3_187 -> m3_181  [key=2, style=dotted];
m3_188 -> m3_189  [key=0, style=solid];
m3_188 -> m3_5  [key=2, style=dotted];
m3_189 -> m3_190  [key=0, style=solid];
m3_189 -> m3_5  [key=2, style=dotted];
m3_190 -> m3_191  [key=0, style=solid];
m3_190 -> m3_5  [key=2, style=dotted];
m3_191 -> m3_192  [key=0, style=solid];
m3_191 -> m3_5  [key=2, style=dotted];
m3_192 -> m3_193  [key=0, style=solid];
m3_192 -> m3_5  [key=2, style=dotted];
m3_193 -> m3_182  [color=blue, key=0, style=bold];
m3_68 -> m3_69  [key=0, style=solid];
m3_68 -> m3_66  [key=2, style=dotted];
m3_68 -> n12  [key=2, style=dotted];
m3_68 -> m3_70  [color=red, key=1, label=sut, style=dashed];
m3_68 -> m3_71  [color=darkseagreen4, key=1, label=sut, style=dashed];
m3_76 -> m3_77  [key=0, style=solid];
m3_76 -> m3_5  [key=2, style=dotted];
m3_76 -> m3_80  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m3_76 -> m3_83  [color=darkseagreen4, key=1, label=caseSensitive, style=dashed];
m3_77 -> m3_67  [color=blue, key=0, style=bold];
m3_77 -> m3_78  [key=0, style=solid];
m3_77 -> m3_80  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_77 -> m3_83  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_77 -> m3_85  [color=darkseagreen4, key=1, label=i, style=dashed];
m3_194 -> m3_195  [key=0, style=solid];
m3_195 -> m3_196  [key=0, style=solid];
m3_195 -> m3_35  [key=2, style=dotted];
m3_195 -> m3_36  [key=2, style=dotted];
m3_195 -> m3_140  [key=2, style=dotted];
m3_196 -> m3_197  [key=0, style=solid];
m3_196 -> m3_179  [key=2, style=dotted];
m3_197 -> m3_198  [key=0, style=solid];
m3_197 -> m3_4  [key=2, style=dotted];
m3_197 -> m3_21  [key=2, style=dotted];
m3_197 -> m3_39  [key=2, style=dotted];
m3_197 -> m3_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_197 -> m3_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_197 -> m3_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_197 -> m3_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_197 -> m3_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_198 -> m3_199  [key=0, style=solid];
m3_198 -> m3_180  [key=2, style=dotted];
m3_198 -> m3_181  [key=2, style=dotted];
m3_199 -> m3_200  [key=0, style=solid];
m3_199 -> m3_5  [key=2, style=dotted];
m3_200 -> m3_201  [key=0, style=solid];
m3_200 -> m3_5  [key=2, style=dotted];
m3_201 -> m3_202  [key=0, style=solid];
m3_201 -> m3_5  [key=2, style=dotted];
m3_202 -> m3_203  [key=0, style=solid];
m3_202 -> m3_5  [key=2, style=dotted];
m3_203 -> m3_204  [key=0, style=solid];
m3_203 -> m3_5  [key=2, style=dotted];
m3_204 -> m3_194  [color=blue, key=0, style=bold];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_21  [key=2, style=dotted];
m3_122 -> m3_124  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_122 -> m3_125  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_122 -> m3_126  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_122 -> m3_127  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_122 -> m3_128  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_122 -> m3_129  [color=darkseagreen4, key=1, label=lines, style=dashed];
m3_122 -> m3_44  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_51  [color=green, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_1  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_5  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_10  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_16  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_22  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_23  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_26  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_27  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_29  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_35  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_76  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_106  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_107  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_111  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_114  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_115  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_116  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_122 -> m3_120  [color=darkseagreen4, key=1, label="CommandLine.CommandLineParser", style=dashed];
m3_123 -> m3_124  [key=0, style=solid];
m3_123 -> m3_5  [key=2, style=dotted];
m3_124 -> m3_125  [key=0, style=solid];
m3_124 -> m3_5  [key=2, style=dotted];
m3_125 -> m3_126  [key=0, style=solid];
m3_125 -> m3_5  [key=2, style=dotted];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_5  [key=2, style=dotted];
m3_127 -> m3_128  [key=0, style=solid];
m3_127 -> m3_5  [key=2, style=dotted];
m3_128 -> m3_129  [key=0, style=solid];
m3_128 -> m3_5  [key=2, style=dotted];
m3_129 -> m3_130  [key=0, style=solid];
m3_129 -> m3_5  [key=2, style=dotted];
m3_130 -> m3_117  [color=blue, key=0, style=bold];
m5_28 -> m5_77  [key=0, style=solid];
m5_28 -> m5_46  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
m5_28 -> m5_34  [color=darkorchid, key=3, label="Parameter variable CommandLine.Error[] errors", style=bold];
m5_77 -> m5_78  [key=0, style=solid];
m5_77 -> m5_79  [key=2, style=dotted];
m5_78 -> m5_28  [color=blue, key=0, style=bold];
m5_36 -> m5_42  [color=red, key=0, style=solid];
m5_36 -> m5_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_36 -> m5_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m5_36 -> m5_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_42 -> m5_43  [color=red, key=0, style=solid];
m5_42 -> m5_44  [color=red, key=2, style=dotted];
m5_42 -> m5_45  [color=red, key=2, style=dotted];
m5_42 -> m5_32  [color=red, key=2, style=dotted];
m5_42 -> m5_46  [color=red, key=2, style=dotted];
m5_42 -> m5_47  [color=red, key=2, style=dotted];
m5_42 -> m5_48  [color=red, key=2, style=dotted];
m5_42 -> m5_29  [color=red, key=2, style=dotted];
m5_42 -> m5_49  [color=red, key=2, style=dotted];
m5_42 -> m5_50  [color=red, key=1, label="lambda expression", style=dashed];
m5_42 -> m5_53  [color=red, key=1, label="lambda expression", style=dashed];
m5_42 -> m5_61  [color=red, key=1, label="lambda expression", style=dashed];
m5_43 -> m5_36  [color=blue, key=0, style=bold];
m5_73 -> m5_74  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_9  [key=2, style=dotted];
m5_5 -> m5_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_14  [key=2, style=dotted];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_10  [key=2, style=dotted];
m5_6 -> m5_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_16 -> m5_17  [key=0, style=solid];
m5_16 -> m5_18  [key=2, style=dotted];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_4 -> m5_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_4 -> m5_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_11 -> m5_12  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_8 -> m5_4  [color=blue, key=0, style=bold];
m5_13 -> m5_11  [color=blue, key=0, style=bold];
m5_17 -> m5_15  [color=blue, key=0, style=bold];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_40  [key=2, style=dotted];
m5_38 -> m5_41  [key=2, style=dotted];
m5_37 -> m5_38  [key=0, style=solid];
m5_39 -> m5_37  [color=blue, key=0, style=bold];
m5_51 -> m5_52  [key=0, style=solid];
m5_51 -> m5_29  [key=2, style=dotted];
m5_51 -> m5_40  [key=2, style=dotted];
m5_54 -> m5_55  [key=0, style=solid];
m5_54 -> m5_56  [key=2, style=dotted];
m5_54 -> m5_57  [key=2, style=dotted];
m5_54 -> m5_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_59 -> m5_60  [key=0, style=solid];
m5_59 -> m5_29  [key=2, style=dotted];
m5_59 -> m5_40  [key=2, style=dotted];
m5_50 -> m5_51  [key=0, style=solid];
m5_53 -> m5_54  [key=0, style=solid];
m5_61 -> m5_62  [key=0, style=solid];
m5_52 -> m5_50  [color=blue, key=0, style=bold];
m5_55 -> m5_53  [color=blue, key=0, style=bold];
m5_58 -> m5_59  [key=0, style=solid];
m5_60 -> m5_58  [color=blue, key=0, style=bold];
m5_62 -> m5_63  [key=0, style=solid];
m5_63 -> m5_61  [color=blue, key=0, style=bold];
m5_71 -> m5_72  [color=red, key=0, style=solid];
m5_71 -> m5_40  [color=red, key=2, style=dotted];
m5_70 -> m5_71  [color=red, key=0, style=solid];
m5_72 -> m5_70  [color=blue, key=0, style=bold];
m5_74 -> m5_75  [key=0, style=solid];
m5_74 -> m5_76  [key=2, style=dotted];
m5_75 -> m5_73  [color=blue, key=0, style=bold];
m5_34 -> m5_64  [color=red, key=0, style=solid];
m5_34 -> m5_71  [color=red, key=1, label=string, style=dashed];
m5_64 -> m5_65  [color=red, key=0, style=solid];
m5_64 -> m5_66  [color=red, key=2, style=dotted];
m5_64 -> m5_67  [color=red, key=2, style=dotted];
m5_64 -> m5_68  [color=red, key=2, style=dotted];
m5_64 -> m5_69  [color=red, key=2, style=dotted];
m5_64 -> m5_70  [color=red, key=1, label="lambda expression", style=dashed];
m5_64 -> m5_73  [color=red, key=1, label="lambda expression", style=dashed];
m5_65 -> m5_34  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_0 -> m5_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=2, style=dotted];
m5_1 -> m5_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m5_1 -> m5_1  [color=darkorchid, key=3, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> ", style=bold];
m5_2 -> m5_0  [color=blue, key=0, style=bold];
m5_3 -> m5_19  [key=0, style=solid];
m5_3 -> m5_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m5_3 -> m5_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_3 -> m5_22  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_3 -> m5_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_3 -> m5_23  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m5_3 -> m5_24  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m5_3 -> m5_28  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> Choose", style=bold];
m5_19 -> m5_20  [key=0, style=solid];
m5_19 -> m5_21  [key=0, style=solid];
m5_19 -> m5_26  [key=2, style=dotted];
m5_20 -> m5_25  [key=0, style=solid];
m5_20 -> m5_27  [key=2, style=dotted];
m5_20 -> m5_28  [key=2, style=dotted];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_29  [key=2, style=dotted];
m5_21 -> m5_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m5_22 -> m5_23  [key=0, style=solid];
m5_22 -> m5_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_22 -> m5_24  [color=darkseagreen4, key=1, label=preprocCompare, style=dashed];
m5_22 -> m5_22  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> preprocCompare", style=bold];
m5_23 -> m5_24  [key=0, style=solid];
m5_23 -> m5_30  [key=2, style=dotted];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_31  [key=2, style=dotted];
m5_24 -> m5_32  [key=2, style=dotted];
m5_24 -> m5_33  [key=2, style=dotted];
m5_24 -> m5_34  [key=2, style=dotted];
m5_24 -> m5_28  [key=2, style=dotted];
m5_24 -> m5_35  [key=2, style=dotted];
m5_24 -> m5_36  [key=2, style=dotted];
m5_25 -> m5_3  [color=blue, key=0, style=bold];
m5_80 -> m5_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_80 -> m5_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_80 -> m5_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_80 -> m5_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_81 -> m5_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_81 -> m5_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m5_82 -> m5_38  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_83 -> m5_38  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m5_84 -> m5_51  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_84 -> m5_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_84 -> m5_59  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m5_85 -> m5_51  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_85 -> m5_54  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_85 -> m5_59  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m5_86 -> m5_54  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m5_87 -> m5_71  [color=red, key=1, label=string, style=dashed];
m5_88 -> m5_71  [color=red, key=1, label="System.StringComparer", style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_2 -> m6_0  [color=blue, key=0, style=bold];
m6_3 -> m6_4  [key=0, style=solid];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_0  [key=2, style=dotted];
m6_4 -> m6_6  [key=2, style=dotted];
m6_4 -> m6_7  [key=2, style=dotted];
m6_4 -> m6_8  [key=2, style=dotted];
m6_5 -> m6_3  [color=blue, key=0, style=bold];
m6_9 -> m6_1  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m7_0 -> m7_1  [color=red, key=0, style=solid];
m7_0 -> m7_2  [color=red, key=1, label=char, style=dashed];
m7_0 -> m7_4  [color=green, key=0, style=solid];
m7_1 -> m7_2  [color=red, key=0, style=solid];
m7_1 -> m7_5  [color=red, key=2, style=dotted];
m7_2 -> m7_3  [color=red, key=0, style=solid];
m7_3 -> m7_4  [color=red, key=0, style=solid];
m7_4 -> m7_0  [color=blue, key=0, style=bold];
m7_11 -> m7_12  [color=red, key=0, style=solid];
m7_11 -> m7_13  [color=red, key=1, label=string, style=dashed];
m7_11 -> m7_15  [color=red, key=1, label=char, style=dashed];
m7_11 -> m7_16  [color=red, key=1, label=string, style=dashed];
m7_11 -> m7_17  [color=red, key=1, label=string, style=dashed];
m7_11 -> m7_20  [color=green, key=0, style=solid];
m7_12 -> m7_13  [color=red, key=0, style=solid];
m7_13 -> m7_14  [color=red, key=0, style=solid];
m7_15 -> m7_18  [color=red, key=0, style=solid];
m7_15 -> m7_5  [color=red, key=2, style=dotted];
m7_16 -> m7_17  [color=red, key=0, style=solid];
m7_16 -> m7_18  [color=red, key=0, style=solid];
m7_16 -> m7_21  [color=red, key=2, style=dotted];
m7_17 -> m7_18  [color=red, key=0, style=solid];
m7_14 -> m7_15  [color=red, key=0, style=solid];
m7_14 -> m7_16  [color=red, key=0, style=solid];
m7_18 -> m7_19  [color=red, key=0, style=solid];
m7_18 -> m7_20  [color=red, key=0, style=solid];
m7_19 -> m7_20  [color=red, key=0, style=solid];
m7_19 -> m7_22  [color=red, key=2, style=dotted];
m7_20 -> m7_11  [color=blue, key=0, style=bold];
m7_6 -> m7_7  [color=red, key=0, style=solid];
m7_6 -> m7_9  [color=red, key=1, label=string, style=dashed];
m7_6 -> m7_10  [color=green, key=0, style=solid];
m7_7 -> m7_8  [color=red, key=0, style=solid];
m7_9 -> m7_10  [color=red, key=0, style=solid];
m7_8 -> m7_9  [color=red, key=0, style=solid];
m7_10 -> m7_6  [color=blue, key=0, style=bold];
m7_23 -> m7_1  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_2  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_3  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_7  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_8  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_9  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_12  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_13  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_14  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_15  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_17  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m7_23 -> m7_18  [color=red, key=1, label="CommandLine.OptionAttribute", style=dashed];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_7 -> m9_8  [key=0, style=solid];
m9_8 -> m9_9  [key=0, style=solid];
m9_9 -> m9_7  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_4  [color=blue, key=0, style=bold];
m9_10 -> m9_5  [color=darkseagreen4, key=1, label="CommandLine.OptionListAttribute", style=dashed];
m9_10 -> m9_8  [color=darkseagreen4, key=1, label="CommandLine.OptionListAttribute", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_3  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_8  [key=2, style=dotted];
m11_1 -> m11_3  [color=darkseagreen4, key=1, label=options, style=dashed];
m11_1 -> m11_5  [color=darkseagreen4, key=1, label=options, style=dashed];
m11_3 -> m11_4  [key=0, style=solid];
m11_3 -> m11_5  [key=0, style=solid];
m11_3 -> m11_11  [key=2, style=dotted];
m11_2 -> m11_3  [key=0, style=solid];
m11_2 -> m11_9  [key=2, style=dotted];
m11_2 -> m11_10  [key=2, style=dotted];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_13  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_4 -> m11_12  [key=2, style=dotted];
m11_6 -> m11_7  [key=0, style=solid];
m11_6 -> m11_12  [key=2, style=dotted];
m11_7 -> m11_0  [color=blue, key=0, style=bold];
m11_13 -> m11_14  [key=0, style=solid];
m11_13 -> m11_16  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_18  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_19  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_21  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_22  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_23  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_24  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_25  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_28  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_33  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_34  [color=darkseagreen4, key=1, label="CommandLine.Demo.Program.Options", style=dashed];
m11_13 -> m11_1  [color=darkorchid, key=3, label="Parameter variable CommandLine.Demo.Program.Options options", style=bold];
m11_14 -> m11_15  [key=0, style=solid];
m11_14 -> m11_16  [key=0, style=solid];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_39  [key=2, style=dotted];
m11_16 -> m11_40  [key=2, style=dotted];
m11_18 -> m11_19  [key=0, style=solid];
m11_18 -> m11_40  [key=2, style=dotted];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_21  [key=0, style=solid];
m11_21 -> m11_22  [key=0, style=solid];
m11_21 -> m11_40  [key=2, style=dotted];
m11_22 -> m11_23  [key=0, style=solid];
m11_22 -> m11_42  [key=2, style=dotted];
m11_22 -> m11_43  [key=2, style=dotted];
m11_22 -> m11_40  [key=2, style=dotted];
m11_23 -> m11_24  [key=0, style=solid];
m11_23 -> m11_40  [key=2, style=dotted];
m11_24 -> m11_25  [key=0, style=solid];
m11_24 -> m11_44  [key=2, style=dotted];
m11_24 -> m11_43  [key=2, style=dotted];
m11_24 -> m11_40  [key=2, style=dotted];
m11_25 -> m11_26  [key=0, style=solid];
m11_25 -> m11_32  [key=0, style=solid];
m11_28 -> m11_29  [key=0, style=solid];
m11_28 -> m11_31  [key=0, style=solid];
m11_33 -> m11_34  [key=0, style=solid];
m11_33 -> m11_35  [key=0, style=solid];
m11_33 -> m11_49  [key=2, style=dotted];
m11_34 -> m11_37  [key=0, style=solid];
m11_34 -> m11_50  [key=2, style=dotted];
m11_34 -> m11_51  [key=2, style=dotted];
m11_15 -> m11_17  [key=0, style=solid];
m11_15 -> m11_38  [key=2, style=dotted];
m11_17 -> m11_18  [key=0, style=solid];
m11_17 -> m11_41  [key=2, style=dotted];
m11_20 -> m11_19  [key=0, style=solid];
m11_20 -> m11_40  [key=2, style=dotted];
m11_26 -> m11_27  [key=0, style=solid];
m11_26 -> m11_45  [key=2, style=dotted];
m11_26 -> m11_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_26 -> m11_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_26 -> m11_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m11_32 -> m11_33  [key=0, style=solid];
m11_32 -> m11_41  [key=2, style=dotted];
m11_27 -> m11_28  [key=0, style=solid];
m11_27 -> m11_46  [key=2, style=dotted];
m11_29 -> m11_30  [key=0, style=solid];
m11_29 -> m11_46  [key=2, style=dotted];
m11_30 -> m11_28  [key=0, style=solid];
m11_30 -> m11_46  [key=2, style=dotted];
m11_31 -> m11_32  [key=0, style=solid];
m11_31 -> m11_47  [key=2, style=dotted];
m11_31 -> m11_48  [key=2, style=dotted];
m11_31 -> m11_38  [key=2, style=dotted];
m11_35 -> m11_36  [key=0, style=solid];
m11_35 -> m11_51  [key=2, style=dotted];
m11_36 -> m11_37  [key=0, style=solid];
m11_36 -> m11_38  [key=2, style=dotted];
m11_37 -> m11_13  [color=blue, key=0, style=bold];
m15_6 -> m15_7  [key=0, style=solid];
m15_6 -> m15_8  [key=0, style=solid];
m15_6 -> m15_12  [key=2, style=dotted];
m15_0 -> m15_1  [key=0, style=solid];
m15_1 -> m15_4  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_0  [color=blue, key=0, style=bold];
m15_2 -> m15_3  [key=0, style=solid];
m15_2 -> m15_6  [key=2, style=dotted];
m15_70 -> m15_71  [key=0, style=solid];
m15_71 -> m15_74  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m15_71 -> m15_72  [key=0, style=solid];
m15_72 -> m15_70  [color=blue, key=0, style=bold];
m15_10 -> m15_13  [key=0, style=solid];
m15_23 -> m15_24  [key=0, style=solid];
m15_36 -> m15_37  [color=green, key=0, style=solid];
m15_36 -> m15_10  [color=green, key=2, style=dotted];
m15_36 -> m15_13  [color=green, key=2, style=dotted];
m15_36 -> m15_42  [color=green, key=2, style=dotted];
m15_36 -> m15_45  [color=green, key=1, label="lambda expression", style=dashed];
m15_36 -> m15_49  [color=green, key=1, label="lambda expression", style=dashed];
m15_36 -> m15_56  [color=green, key=1, label=setsWithTrue, style=dashed];
m15_37 -> m15_38  [key=0, style=solid];
m15_37 -> m15_10  [key=2, style=dotted];
m15_37 -> m15_43  [key=2, style=dotted];
m15_37 -> m15_42  [key=2, style=dotted];
m15_37 -> m15_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_37 -> m15_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_37 -> m15_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_37 -> m15_39  [color=darkseagreen4, key=1, label=requiredButEmpty, style=dashed];
m15_35 -> m15_36  [color=green, key=0, style=solid];
m15_35 -> m15_37  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m15_45 -> m15_46  [color=green, key=0, style=solid];
m15_49 -> m15_50  [key=0, style=solid];
m15_56 -> m15_57  [key=0, style=solid];
m15_56 -> m15_58  [key=2, style=dotted];
m15_56 -> m15_59  [key=2, style=dotted];
m15_46 -> m15_47  [color=green, key=0, style=solid];
m15_46 -> m15_18  [color=green, key=2, style=dotted];
m15_46 -> m15_48  [color=green, key=2, style=dotted];
m15_47 -> m15_45  [color=blue, key=0, style=bold];
m15_38 -> m15_39  [key=0, style=solid];
m15_38 -> m15_40  [key=0, style=solid];
m15_38 -> m15_44  [key=2, style=dotted];
m15_52 -> m15_53  [key=0, style=solid];
m15_55 -> m15_56  [key=0, style=solid];
m15_60 -> m15_61  [key=0, style=solid];
m15_39 -> m15_13  [key=2, style=dotted];
m15_39 -> m15_41  [key=0, style=solid];
m15_39 -> m15_65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_41 -> m15_35  [color=blue, key=0, style=bold];
m15_4 -> m15_10  [key=2, style=dotted];
m15_4 -> m15_5  [key=0, style=solid];
m15_4 -> m15_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_4 -> m15_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_4 -> m15_7  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_74 -> m15_10  [key=2, style=dotted];
m15_74 -> m15_75  [key=0, style=solid];
m15_74 -> m15_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_74 -> m15_76  [color=darkseagreen4, key=1, label=options, style=dashed];
m15_7 -> m15_13  [key=2, style=dotted];
m15_7 -> m15_9  [key=0, style=solid];
m15_7 -> m15_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_76 -> m15_13  [key=2, style=dotted];
m15_76 -> m15_78  [key=0, style=solid];
m15_76 -> m15_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_51 -> m15_49  [color=blue, key=0, style=bold];
m15_50 -> m15_51  [key=0, style=solid];
m15_57 -> m15_55  [color=blue, key=0, style=bold];
m15_16 -> m15_18  [key=2, style=dotted];
m15_16 -> m15_17  [key=0, style=solid];
m15_53 -> m15_18  [key=2, style=dotted];
m15_53 -> m15_54  [key=0, style=solid];
m15_80 -> m15_48  [key=2, style=dotted];
m15_80 -> m15_81  [key=0, style=solid];
m15_80 -> m15_82  [key=2, style=dotted];
m15_80 -> m15_83  [key=2, style=dotted];
m15_80 -> m15_84  [key=2, style=dotted];
m15_80 -> m15_85  [key=2, style=dotted];
m15_40 -> m15_41  [key=0, style=solid];
m15_40 -> m15_14  [key=2, style=dotted];
m15_54 -> m15_52  [color=blue, key=0, style=bold];
m15_62 -> m15_60  [color=blue, key=0, style=bold];
m15_61 -> m15_62  [key=0, style=solid];
m15_61 -> m15_63  [key=2, style=dotted];
m15_61 -> m15_64  [key=2, style=dotted];
m15_65 -> m15_66  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_3 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_5 -> m15_11  [key=2, style=dotted];
m15_5 -> m15_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m15_5 -> m15_0  [color=blue, key=0, style=bold];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_1  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m15_15 -> m15_2  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m15_15 -> m15_3  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m15_15 -> m15_4  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m15_15 -> m15_9  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m15_15 -> m15_11  [color=darkseagreen4, key=1, label="CommandLine.Internal.TargetWrapper", style=dashed];
m15_19 -> m15_20  [key=0, style=solid];
m15_73 -> m15_74  [key=0, style=solid];
m15_75 -> m15_76  [key=0, style=solid];
m15_75 -> m15_44  [key=2, style=dotted];
m15_75 -> m15_77  [key=0, style=solid];
m15_79 -> m15_80  [key=0, style=solid];
m15_9 -> m15_3  [color=blue, key=0, style=bold];
m15_9 -> m15_10  [key=0, style=solid];
m15_9 -> m15_11  [key=0, style=solid];
m15_26 -> m15_27  [key=0, style=solid];
m15_78 -> m15_73  [color=blue, key=0, style=bold];
m15_86 -> m15_87  [key=0, style=solid];
m15_17 -> m15_15  [color=blue, key=0, style=bold];
m15_81 -> m15_79  [color=blue, key=0, style=bold];
m15_67 -> m15_65  [color=blue, key=0, style=bold];
m15_66 -> m15_67  [key=0, style=solid];
m15_66 -> m15_68  [key=2, style=dotted];
m15_66 -> m15_69  [key=2, style=dotted];
m15_66 -> m15_31  [key=2, style=dotted];
m15_21 -> m15_19  [color=blue, key=0, style=bold];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_22  [key=2, style=dotted];
m15_77 -> m15_78  [key=0, style=solid];
m15_77 -> m15_14  [key=2, style=dotted];
m15_8 -> m15_9  [key=0, style=solid];
m15_8 -> m15_14  [key=2, style=dotted];
m15_8 -> m15_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_8 -> m15_10  [color=darkorchid, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
m15_8 -> m15_12  [color=darkorchid, key=3, label="method methodReturn bool AddValueItemIfAllowed", style=bold];
m15_28 -> m15_26  [color=blue, key=0, style=bold];
m15_27 -> m15_28  [key=0, style=solid];
m15_27 -> m15_29  [key=2, style=dotted];
m15_27 -> m15_30  [key=2, style=dotted];
m15_27 -> m15_31  [key=2, style=dotted];
m15_88 -> m15_86  [color=blue, key=0, style=bold];
m15_87 -> m15_88  [key=0, style=solid];
m15_87 -> m15_89  [key=2, style=dotted];
m15_87 -> m15_69  [key=2, style=dotted];
m15_87 -> m15_31  [key=2, style=dotted];
m15_24 -> m15_25  [key=0, style=solid];
m15_25 -> m15_23  [color=blue, key=0, style=bold];
m15_32 -> m15_33  [color=green, key=0, style=solid];
m15_33 -> m15_34  [color=green, key=0, style=solid];
m15_33 -> m15_36  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m15_33 -> m15_37  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m15_34 -> m15_32  [color=blue, key=0, style=bold];
m15_13 -> m15_8  [color=blue, key=0, style=bold];
m15_11 -> m15_12  [key=0, style=solid];
m15_11 -> m15_14  [key=2, style=dotted];
m15_12 -> m15_13  [key=0, style=solid];
m15_90 -> m15_56  [color=darkseagreen4, key=1, label=setsWithTrue, style=dashed];
m17_0 -> m17_1  [key=0, style=solid];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=2, style=dotted];
m17_2 -> m17_0  [color=blue, key=0, style=bold];
}
