digraph  {
d34 [cluster="CommandLine.TokenError.GetHashCode()", color=green, community=0, label="0: return new { this.Tag, this.Token }.GetHashCode();", span="164-164"];
d87 [label="CommandLine.TokenError", span=""];
d33 [cluster="CommandLine.TokenError.GetHashCode()", label="Entry CommandLine.TokenError.GetHashCode()", span="162-162"];
d35 [cluster="CommandLine.TokenError.GetHashCode()", label="Exit CommandLine.TokenError.GetHashCode()", span="162-162"];
d36 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
d55 [cluster="CommandLine.NamedError.GetHashCode()", color=green, community=0, label="0: return this.Tag.GetHashCode() ^ this.NameInfo.GetHashCode();", span="237-237"];
d88 [label="CommandLine.NamedError", span=""];
d54 [cluster="CommandLine.NamedError.GetHashCode()", label="Entry CommandLine.NamedError.GetHashCode()", span="235-235"];
d56 [cluster="CommandLine.NamedError.GetHashCode()", label="Exit CommandLine.NamedError.GetHashCode()", span="235-235"];
d14 [cluster="System.Enum.GetHashCode()", label="Entry System.Enum.GetHashCode()", span="0-0"];
d57 [cluster="CommandLine.NameInfo.GetHashCode()", label="Entry CommandLine.NameInfo.GetHashCode()", span="98-98"];
d23 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="this.token = token", span="131-131"];
d29 [cluster="CommandLine.TokenError.Equals(object)", label="return this.Equals(other);", span="152-152"];
d30 [cluster="CommandLine.TokenError.Equals(object)", label="return base.Equals(obj);", span="155-155"];
d39 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="return this.Tag.Equals(other.Tag) && this.Token.Equals(other.Token);", span="179-179"];
d11 [cluster="CommandLine.Error.GetHashCode()", label="Entry CommandLine.Error.GetHashCode()", span="98-98"];
d45 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="this.nameInfo = nameInfo", span="204-204"];
d50 [cluster="CommandLine.NamedError.Equals(object)", label="return this.Equals(other);", span="225-225"];
d51 [cluster="CommandLine.NamedError.Equals(object)", label="return base.Equals(obj);", span="228-228"];
d60 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="return this.Tag.Equals(other.Tag) && this.NameInfo.Equals(other.NameInfo);", span="252-252"];
d12 [cluster="CommandLine.Error.GetHashCode()", label="return this.Tag.GetHashCode();", span="100-100"];
d20 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="Entry CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="126-126"];
d21 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="token == null", span="129-129"];
d24 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="Exit CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", span="126-126"];
d27 [cluster="CommandLine.TokenError.Equals(object)", label="var other = obj as TokenError", span="149-149"];
d28 [cluster="CommandLine.TokenError.Equals(object)", label="other != null", span="150-150"];
d31 [cluster="CommandLine.TokenError.Equals(object)", label="Exit CommandLine.TokenError.Equals(object)", span="147-147"];
d32 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="Entry CommandLine.TokenError.Equals(CommandLine.TokenError)", span="172-172"];
d26 [cluster="CommandLine.TokenError.Equals(object)", label="Entry CommandLine.TokenError.Equals(object)", span="147-147"];
d3 [cluster="CommandLine.Error.Equals(object)", label="Entry CommandLine.Error.Equals(object)", span="83-83"];
d37 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="other == null", span="174-174"];
d40 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="Exit CommandLine.TokenError.Equals(CommandLine.TokenError)", span="172-172"];
d19 [cluster="System.Enum.Equals(object)", label="Entry System.Enum.Equals(object)", span="0-0"];
d41 [cluster="string.Equals(string)", label="Entry string.Equals(string)", span="0-0"];
d13 [cluster="CommandLine.Error.GetHashCode()", label="Exit CommandLine.Error.GetHashCode()", span="98-98"];
d44 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="Entry CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="201-201"];
d46 [cluster="CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", label="Exit CommandLine.NamedError.NamedError(CommandLine.ErrorType, CommandLine.NameInfo)", span="201-201"];
d48 [cluster="CommandLine.NamedError.Equals(object)", label="var other = obj as NamedError", span="222-222"];
d49 [cluster="CommandLine.NamedError.Equals(object)", label="other != null", span="223-223"];
d52 [cluster="CommandLine.NamedError.Equals(object)", label="Exit CommandLine.NamedError.Equals(object)", span="220-220"];
d53 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="Entry CommandLine.NamedError.Equals(CommandLine.NamedError)", span="245-245"];
d47 [cluster="CommandLine.NamedError.Equals(object)", label="Entry CommandLine.NamedError.Equals(object)", span="220-220"];
d58 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="other == null", span="247-247"];
d61 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="Exit CommandLine.NamedError.Equals(CommandLine.NamedError)", span="245-245"];
d62 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="108-108"];
d86 [label="CommandLine.Error", span=""];
d22 [cluster="CommandLine.TokenError.TokenError(CommandLine.ErrorType, string)", label="throw new ArgumentNullException(''token'');", span="129-129"];
d16 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="return false;", span="112-112"];
d8 [cluster="CommandLine.Error.Equals(object)", label="Exit CommandLine.Error.Equals(object)", span="83-83"];
d4 [cluster="CommandLine.Error.Equals(object)", label="var other = obj as Error", span="85-85"];
d7 [cluster="CommandLine.Error.Equals(object)", label="return base.Equals(obj);", span="91-91"];
d9 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="Entry CommandLine.Error.Equals(CommandLine.Error)", span="108-108"];
d38 [cluster="CommandLine.TokenError.Equals(CommandLine.TokenError)", label="return false;", span="176-176"];
d17 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="return this.Tag.Equals(other.Tag);", span="115-115"];
d59 [cluster="CommandLine.NamedError.Equals(CommandLine.NamedError)", label="return false;", span="249-249"];
d1 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="this.tag = tag", span="67-67"];
d6 [cluster="CommandLine.Error.Equals(object)", label="return this.Equals(other);", span="88-88"];
d25 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d15 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="other == null", span="110-110"];
d18 [cluster="CommandLine.Error.Equals(CommandLine.Error)", label="Exit CommandLine.Error.Equals(CommandLine.Error)", span="108-108"];
d5 [cluster="CommandLine.Error.Equals(object)", label="other != null", span="86-86"];
d10 [cluster="object.Equals(object)", label="Entry object.Equals(object)", span="0-0"];
d0 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="Entry CommandLine.Error.Error(CommandLine.ErrorType)", span="65-65"];
d2 [cluster="CommandLine.Error.Error(CommandLine.ErrorType)", label="Exit CommandLine.Error.Error(CommandLine.ErrorType)", span="65-65"];
m0_130 [cluster="string.Split(params char[])", file="NameInfo.cs", label="Entry string.Split(params char[])", span="0-0"];
m0_62 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="NameInfo.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m0_14 [cluster="Unk.nameLookup", file="NameInfo.cs", label="Entry Unk.nameLookup", span=""];
m0_75 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="NameInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m0_128 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="NameInfo.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m0_8 [cluster="string.StartsWith(string, System.StringComparison)", file="NameInfo.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m0_56 [cluster="Unk.SkipWhile", file="NameInfo.cs", label="Entry Unk.SkipWhile", span=""];
m0_108 [cluster="CommandLine.Core.Token.Name(string)", file="NameInfo.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m0_129 [cluster="System.Action<T>.Invoke(T)", file="NameInfo.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m0_30 [cluster="Unk.Any", file="NameInfo.cs", label="Entry Unk.Any", span=""];
m0_9 [cluster="CommandLine.Core.Token.Value(string)", file="NameInfo.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m0_13 [cluster="Unk.IsName", file="NameInfo.cs", label="Entry Unk.IsName", span=""];
m0_32 [cluster="System.Func<T, TResult>.Invoke(T)", file="NameInfo.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_15 [cluster="Unk.Where", file="NameInfo.cs", label="Entry Unk.Where", span=""];
m0_18 [cluster="Unk.Create", file="NameInfo.cs", label="Entry Unk.Create", span=""];
m0_74 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="NameInfo.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_109 [cluster="string.Substring(int, int)", file="NameInfo.cs", label="Entry string.Substring(int, int)", span="0-0"];
m0_110 [cluster="string.String(char, int)", file="NameInfo.cs", label="Entry string.String(char, int)", span="0-0"];
m0_22 [cluster="Unk.Contains", file="NameInfo.cs", label="Entry Unk.Contains", span=""];
m0_73 [cluster="Unk.ToMaybe", file="NameInfo.cs", label="Entry Unk.ToMaybe", span=""];
m0_61 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="NameInfo.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m0_80 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="56-56"];
m0_20 [cluster="lambda expression", file="NameInfo.cs", label="!unkTokens.Contains(x)", span="29-29"];
m0_19 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="29-29"];
m0_21 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="29-29"];
m0_37 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="36-36"];
m0_41 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="38-38"];
m0_44 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="39-39"];
m0_48 [cluster="lambda expression", file="NameInfo.cs", label="tokens.Concat(values)", span="40-40"];
m0_47 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="40-40"];
m0_38 [cluster="lambda expression", file="NameInfo.cs", label="arg.EqualsOrdinal(''--'')", span="36-36"];
m0_39 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="36-36"];
m0_42 [cluster="lambda expression", file="NameInfo.cs", label="!arg.EqualsOrdinal(''--'')", span="38-38"];
m0_43 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="38-38"];
m0_45 [cluster="lambda expression", file="NameInfo.cs", label="!arg.EqualsOrdinal(''--'')", span="39-39"];
m0_46 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="39-39"];
m0_49 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="40-40"];
m0_59 [cluster="lambda expression", file="NameInfo.cs", label="optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))", span="50-52"];
m0_58 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="49-52"];
m0_66 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="52-52"];
m0_70 [cluster="lambda expression", file="NameInfo.cs", label="replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t }))", span="55-57"];
m0_69 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="54-57"];
m0_84 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="59-59"];
m0_64 [cluster="lambda expression", file="NameInfo.cs", label="Tuple.Create(i + 1, sep)", span="51-51"];
m0_60 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="49-52"];
m0_63 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="51-51"];
m0_65 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="51-51"];
m0_67 [cluster="lambda expression", file="NameInfo.cs", label="x.Item1 < 0", span="52-52"];
m0_68 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="52-52"];
m0_78 [cluster="lambda expression", file="NameInfo.cs", label="x.Item1 == i", span="55-55"];
m0_81 [cluster="lambda expression", file="NameInfo.cs", label="t.Text.Split(r.Item2).Select(Token.Value)", span="56-56"];
m0_71 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="54-57"];
m0_77 [cluster="lambda expression", file="NameInfo.cs", label="Entry lambda expression", span="55-55"];
m0_79 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="55-55"];
m0_82 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="56-56"];
m0_85 [cluster="lambda expression", file="NameInfo.cs", label=x, span="59-59"];
m0_86 [cluster="lambda expression", file="NameInfo.cs", label="Exit lambda expression", span="59-59"];
m0_34 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="NameInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m0_10 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="109-109"];
m0_114 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="113-113"];
m0_118 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="yield return Token.Name(text);", span="119-119"];
m0_119 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="yield break;", span="120-120"];
m0_122 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="yield break;", span="125-125"];
m0_124 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="yield return Token.Name(parts[0]);", span="128-128"];
m0_125 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="yield return Token.Value(parts[1]);", span="129-129"];
m0_115 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="var text = value.Substring(2)", span="115-115"];
m0_121 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="onError(new BadFormatTokenError(value))", span="124-124"];
m0_116 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="var equalIndex = text.IndexOf('=')", span="116-116"];
m0_123 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="var parts = text.Split('=')", span="127-127"];
m0_117 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="equalIndex <= 0", span="117-117"];
m0_120 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="equalIndex == 1", span="122-122"];
m0_126 [cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="NameInfo.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="109-109"];
m0_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="NameInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m0_17 [cluster="Unk.Concat", file="NameInfo.cs", label="Entry Unk.Concat", span=""];
m0_40 [cluster="string.EqualsOrdinal(string)", file="NameInfo.cs", label="Entry string.EqualsOrdinal(string)", span="35-35"];
m0_31 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="NameInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m0_127 [cluster="string.IndexOf(char)", file="NameInfo.cs", label="Entry string.IndexOf(char)", span="0-0"];
m0_35 [cluster="Unk.Select", file="NameInfo.cs", label="Entry Unk.Select", span=""];
m0_36 [cluster="CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", file="NameInfo.cs", label="Entry CommandLine.Core.StatePair<T1>.MapValue<T1, T2>(System.Func<T1, T2>)", span="66-66"];
m0_0 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="NameInfo.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="12-12"];
m0_1 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="NameInfo.cs", label="var errors = new List<Error>()", span="16-16"];
m0_3 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="NameInfo.cs", label="var tokens = (from arg in arguments\r\n                          from token in !arg.StartsWith(''-'', StringComparison.Ordinal)\r\n                               ? new[] { Token.Value(arg) }\r\n                               : arg.StartsWith(''--'', StringComparison.Ordinal)\r\n                                     ? TokenizeLongName(arg, onError)\r\n                                     : TokenizeShortName(arg, nameLookup)\r\n                          select token).ToList()", span="19-25"];
m0_4 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="NameInfo.cs", label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).ToList()", span="27-27"];
m0_2 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="NameInfo.cs", label="Action<Error> onError = errors.Add", span="17-17"];
m0_5 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="NameInfo.cs", label="return StatePair.Create(tokens.Where(x=>!unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="29-29"];
m0_6 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="NameInfo.cs", label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="12-12"];
m0_23 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="NameInfo.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="32-32"];
m0_24 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="NameInfo.cs", label="arguments.Any(arg => arg.EqualsOrdinal(''--''))", span="36-36"];
m0_25 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="NameInfo.cs", label="var tokenizerResult = tokenizer(arguments.TakeWhile(arg => !arg.EqualsOrdinal(''--'')))", span="38-38"];
m0_26 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="NameInfo.cs", label="var values = arguments.SkipWhile(arg => !arg.EqualsOrdinal(''--'')).Skip(1).Select(Token.Value)", span="39-39"];
m0_28 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="NameInfo.cs", label="return tokenizer(arguments);", span="42-42"];
m0_27 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="NameInfo.cs", label="return tokenizerResult.MapValue(tokens => tokens.Concat(values));", span="40-40"];
m0_29 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="NameInfo.cs", label="Exit CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="32-32"];
m0_12 [cluster="Unk.ToList", file="NameInfo.cs", label="Entry Unk.ToList", span=""];
m0_76 [cluster="Unk.Return", file="NameInfo.cs", label="Entry Unk.Return", span=""];
m0_112 [cluster="System.Collections.Generic.List<T>.Add(T)", file="NameInfo.cs", label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0"];
m0_107 [cluster="char.IsDigit(char)", file="NameInfo.cs", label="Entry char.IsDigit(char)", span="0-0"];
m0_7 [cluster="System.Collections.Generic.List<T>.List()", file="NameInfo.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m0_16 [cluster="UnknownOptionError.cstr", file="NameInfo.cs", label="Entry UnknownOptionError.cstr", span=""];
m0_113 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="NameInfo.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m0_57 [cluster="Unk.SelectMany", file="NameInfo.cs", label="Entry Unk.SelectMany", span=""];
m0_72 [cluster="Unk.FirstOrDefault", file="NameInfo.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_83 [cluster="Unk.Split", file="NameInfo.cs", label="Entry Unk.Split", span=""];
m0_11 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="64-64"];
m0_87 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="68-68"];
m0_90 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="yield return Token.Value(value);", span="74-74"];
m0_91 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="yield break;", span="75-75"];
m0_93 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="yield return Token.Name(text);", span="80-80"];
m0_94 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="yield break;", span="81-81"];
m0_96 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="yield return Token.Name(first);", span="85-85"];
m0_102 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="yield return Token.Name(n);", span="95-95"];
m0_104 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="yield return Token.Value(text.Substring(seen.Count()));", span="104-104"];
m0_88 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="var text = value.Substring(1)", span="70-70"];
m0_92 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="value.Length == 2", span="78-78"];
m0_100 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="!seen.Contains(c) && nameLookup(n)", span="92-92"];
m0_89 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="char.IsDigit(text[0])", span="72-72"];
m0_95 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="var first = text.Substring(0, 1)", span="84-84"];
m0_98 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="text.Substring(1)", span="89-89"];
m0_103 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="seen.Count() < text.Length", span="102-102"];
m0_97 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="var seen = new List<char> { first[0] }", span="87-87"];
m0_101 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="seen.Add(c)", span="94-94"];
m0_99 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="var n = new string(c, 1)", span="91-91"];
m0_105 [cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="NameInfo.cs", label="Exit CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="64-64"];
m0_50 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="NameInfo.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45"];
m0_51 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="NameInfo.cs", label="var replaces = tokens.Value.Select((t,i) =>\r\n                optionSequenceWithSeparatorLookup(t.Text)\r\n                    .Return(sep => Tuple.Create(i + 1, sep),\r\n                        Tuple.Create(-1, '\0'))).SkipWhile(x => x.Item1 < 0)", span="49-52"];
m0_52 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="NameInfo.cs", label="var exploded = tokens.Value.Select((t, i) =>\r\n                        replaces.FirstOrDefault(x => x.Item1 == i).ToMaybe()\r\n                            .Return(r => t.Text.Split(r.Item2).Select(Token.Value),\r\n                                Enumerable.Empty<Token>().Concat(new[]{ t })))", span="54-57"];
m0_54 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="NameInfo.cs", label="return StatePair.Create(flattened, tokens.Errors);", span="61-61"];
m0_53 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="NameInfo.cs", label="var flattened = exploded.SelectMany(x => x)", span="59-59"];
m0_55 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="NameInfo.cs", label="Exit CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45"];
m0_111 [cluster="System.Collections.Generic.List<T>.Contains(T)", file="NameInfo.cs", label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0"];
m0_106 [cluster="string.Substring(int)", file="NameInfo.cs", label="Entry string.Substring(int)", span="0-0"];
m0_131 [file="NameInfo.cs", label=unkTokens, span=""];
m0_132 [file="NameInfo.cs", label=values, span=""];
m0_133 [file="NameInfo.cs", label="System.Func<string, CSharpx.Maybe<char>>", span=""];
m0_134 [file="NameInfo.cs", label=int, span=""];
m0_135 [file="NameInfo.cs", label=replaces, span=""];
m0_136 [file="NameInfo.cs", label=int, span=""];
m0_137 [file="NameInfo.cs", label="CommandLine.Core.Token", span=""];
m1_0 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="ReflectionExtensions.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="45-45"];
m1_1 [cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="ReflectionExtensions.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="45-45"];
m1_2 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="ReflectionExtensions.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="54-54"];
m1_3 [cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="ReflectionExtensions.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="54-54"];
m1_4 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="64-64"];
m1_5 [cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="ReflectionExtensions.cs", label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="64-64"];
m2_10 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Token.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_12 [cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Token.cs", label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="58-58"];
m2_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="Token.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="37-37"];
m2_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="Token.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="40-41"];
m2_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="Token.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="42-43"];
m2_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="Token.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="55-55"];
m2_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="Token.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="46-52"];
m2_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="Token.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="37-37"];
m2_8 [cluster="OptionSpecification.cstr", file="Token.cs", label="Entry OptionSpecification.cstr", span=""];
m2_19 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Token.cs", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m2_15 [cluster="Unk.True", file="Token.cs", label="Entry Unk.True", span=""];
m2_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="Token.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="13-13"];
m2_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="Token.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="16-17"];
m2_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="Token.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, ',', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="18-19"];
m2_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="Token.cs", label="Assert.True(expectedTokens.SequenceEqual(result.Value))", span="31-31"];
m2_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="Token.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    StatePair.Create(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture))", span="22-28"];
m2_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="Token.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="13-13"];
m2_26 [cluster="lambda expression", file="Token.cs", label="Entry lambda expression", span="52-52"];
m2_17 [cluster="lambda expression", file="Token.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="28-28"];
m2_16 [cluster="lambda expression", file="Token.cs", label="Entry lambda expression", span="28-28"];
m2_18 [cluster="lambda expression", file="Token.cs", label="Exit lambda expression", span="28-28"];
m2_27 [cluster="lambda expression", file="Token.cs", label="NameLookup.WithSeparator(optionName, specs, StringComparer.InvariantCulture)", span="52-52"];
m2_28 [cluster="lambda expression", file="Token.cs", label="Exit lambda expression", span="52-52"];
m2_6 [cluster="CommandLine.Core.Token.Name(string)", file="Token.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m2_14 [cluster="Unk.SequenceEqual", file="Token.cs", label="Entry Unk.SequenceEqual", span=""];
m2_13 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", file="Token.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CommandLine.Infrastructure.Maybe<char>>)", span="44-44"];
m2_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Token.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m2_7 [cluster="CommandLine.Core.Token.Value(string)", file="Token.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m2_9 [cluster="System.Collections.Generic.List<T>.List()", file="Token.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_29 [file="Token.cs", label=specs, span=""];
m2_30 [file="Token.cs", label=specs, span=""];
m4_4 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", file="TokenPartitioner.cs", label="Entry CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", span="78-78"];
m4_5 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", file="TokenPartitioner.cs", label="Exit CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action)", span="78-78"];
m4_2 [cluster="CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", file="TokenPartitioner.cs", label="Entry CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", span="64-64"];
m4_3 [cluster="CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", file="TokenPartitioner.cs", label="Exit CommandLine.IParser.ParseArguments(string[], object, System.Action<string, object>)", span="64-64"];
m4_0 [cluster="CommandLine.IParser.ParseArguments(string[], object)", file="TokenPartitioner.cs", label="Entry CommandLine.IParser.ParseArguments(string[], object)", span="49-49"];
m4_1 [cluster="CommandLine.IParser.ParseArguments(string[], object)", file="TokenPartitioner.cs", label="Exit CommandLine.IParser.ParseArguments(string[], object)", span="49-49"];
m4_6 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TokenPartitioner.cs", label="Entry CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="95-95"];
m4_7 [cluster="CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", file="TokenPartitioner.cs", label="Exit CommandLine.IParser.ParseArgumentsStrict(string[], object, System.Action<string, object>, System.Action)", span="95-95"];
d34 -> d35  [color=green, key=0, style=solid];
d34 -> d36  [color=green, key=2, style=dotted];
d87 -> d34  [color=green, key=1, label="CommandLine.TokenError", style=dashed];
d87 -> d23  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
d87 -> d29  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
d87 -> d30  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
d87 -> d39  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
d33 -> d34  [color=green, key=0, style=solid];
d35 -> d33  [color=blue, key=0, style=bold];
d55 -> d56  [color=green, key=0, style=solid];
d55 -> d14  [color=green, key=2, style=dotted];
d55 -> d57  [color=green, key=2, style=dotted];
d88 -> d55  [color=green, key=1, label="CommandLine.NamedError", style=dashed];
d88 -> d45  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
d88 -> d50  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
d88 -> d51  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
d88 -> d60  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
d54 -> d55  [color=green, key=0, style=solid];
d56 -> d54  [color=blue, key=0, style=bold];
d23 -> d24  [key=0, style=solid];
d29 -> d31  [key=0, style=solid];
d29 -> d32  [key=2, style=dotted];
d30 -> d31  [key=0, style=solid];
d30 -> d3  [key=2, style=dotted];
d39 -> d40  [key=0, style=solid];
d39 -> d19  [key=2, style=dotted];
d39 -> d41  [key=2, style=dotted];
d11 -> d33  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
d11 -> d54  [color=darkorchid, key=3, label="method methodReturn int GetHashCode", style=bold];
d11 -> d12  [key=0, style=solid];
d45 -> d46  [key=0, style=solid];
d50 -> d52  [key=0, style=solid];
d50 -> d53  [key=2, style=dotted];
d51 -> d52  [key=0, style=solid];
d51 -> d3  [key=2, style=dotted];
d60 -> d61  [key=0, style=solid];
d60 -> d19  [key=2, style=dotted];
d60 -> d62  [key=2, style=dotted];
d12 -> d14  [key=2, style=dotted];
d12 -> d13  [key=0, style=solid];
d20 -> d23  [color=darkseagreen4, key=1, label=string, style=dashed];
d20 -> d21  [key=0, style=solid];
d21 -> d23  [key=0, style=solid];
d21 -> d22  [key=0, style=solid];
d24 -> d20  [color=blue, key=0, style=bold];
d27 -> d29  [color=darkseagreen4, key=1, label=other, style=dashed];
d27 -> d28  [key=0, style=solid];
d28 -> d29  [key=0, style=solid];
d28 -> d30  [key=0, style=solid];
d31 -> d26  [color=blue, key=0, style=bold];
d32 -> d39  [color=darkseagreen4, key=1, label="CommandLine.TokenError", style=dashed];
d32 -> d27  [color=darkorchid, key=3, label="Parameter variable CommandLine.TokenError other", style=bold];
d32 -> d37  [key=0, style=solid];
d32 -> d16  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d26 -> d30  [color=darkseagreen4, key=1, label=object, style=dashed];
d26 -> d27  [key=0, style=solid];
d26 -> d32  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d26 -> d3  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d3 -> d26  [color=darkorchid, key=3, label="Parameter variable object obj", style=bold];
d3 -> d4  [key=0, style=solid];
d3 -> d7  [color=darkseagreen4, key=1, label=object, style=dashed];
d3 -> d9  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d3 -> d47  [color=darkorchid, key=3, label="Parameter variable object obj", style=bold];
d37 -> d39  [key=0, style=solid];
d37 -> d38  [key=0, style=solid];
d40 -> d32  [color=blue, key=0, style=bold];
d13 -> d11  [color=blue, key=0, style=bold];
d44 -> d45  [key=0, style=solid];
d46 -> d44  [color=blue, key=0, style=bold];
d48 -> d50  [color=darkseagreen4, key=1, label=other, style=dashed];
d48 -> d49  [key=0, style=solid];
d49 -> d50  [key=0, style=solid];
d49 -> d51  [key=0, style=solid];
d52 -> d47  [color=blue, key=0, style=bold];
d53 -> d60  [color=darkseagreen4, key=1, label="CommandLine.NamedError", style=dashed];
d53 -> d48  [color=darkorchid, key=3, label="Parameter variable CommandLine.NamedError other", style=bold];
d53 -> d58  [key=0, style=solid];
d53 -> d16  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d47 -> d51  [color=darkseagreen4, key=1, label=object, style=dashed];
d47 -> d3  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d47 -> d48  [key=0, style=solid];
d47 -> d53  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d58 -> d60  [key=0, style=solid];
d58 -> d59  [key=0, style=solid];
d61 -> d53  [color=blue, key=0, style=bold];
d86 -> d12  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d86 -> d1  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d86 -> d6  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d86 -> d7  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d86 -> d17  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d22 -> d24  [key=0, style=solid];
d22 -> d25  [key=2, style=dotted];
d16 -> d18  [key=0, style=solid];
d8 -> d3  [color=blue, key=0, style=bold];
d4 -> d5  [key=0, style=solid];
d4 -> d6  [color=darkseagreen4, key=1, label=other, style=dashed];
d7 -> d8  [key=0, style=solid];
d7 -> d10  [key=2, style=dotted];
d9 -> d16  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d9 -> d4  [color=darkorchid, key=3, label="Parameter variable CommandLine.Error other", style=bold];
d9 -> d15  [key=0, style=solid];
d9 -> d17  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
d38 -> d40  [key=0, style=solid];
d17 -> d19  [key=2, style=dotted];
d17 -> d18  [key=0, style=solid];
d59 -> d61  [key=0, style=solid];
d1 -> d2  [key=0, style=solid];
d6 -> d8  [key=0, style=solid];
d6 -> d9  [key=2, style=dotted];
d15 -> d16  [key=0, style=solid];
d15 -> d17  [key=0, style=solid];
d18 -> d9  [color=blue, key=0, style=bold];
d5 -> d7  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d0 -> d1  [key=0, style=solid];
d2 -> d0  [color=blue, key=0, style=bold];
m0_80 -> m0_81  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_22  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_21 -> m0_19  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_41 -> m0_42  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_17  [key=2, style=dotted];
m0_47 -> m0_48  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_38 -> m0_40  [key=2, style=dotted];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_40  [key=2, style=dotted];
m0_43 -> m0_41  [color=blue, key=0, style=bold];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_40  [key=2, style=dotted];
m0_46 -> m0_44  [color=blue, key=0, style=bold];
m0_49 -> m0_47  [color=blue, key=0, style=bold];
m0_59 -> m0_60  [key=0, style=solid];
m0_59 -> m0_32  [key=2, style=dotted];
m0_59 -> m0_61  [key=2, style=dotted];
m0_59 -> m0_62  [key=2, style=dotted];
m0_59 -> m0_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_64  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_66 -> m0_67  [key=0, style=solid];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_72  [key=2, style=dotted];
m0_70 -> m0_73  [key=2, style=dotted];
m0_70 -> m0_74  [key=2, style=dotted];
m0_70 -> m0_75  [key=2, style=dotted];
m0_70 -> m0_76  [key=2, style=dotted];
m0_70 -> m0_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_70 -> m0_80  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_69 -> m0_81  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_61  [key=2, style=dotted];
m0_60 -> m0_58  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_65 -> m0_63  [color=blue, key=0, style=bold];
m0_67 -> m0_68  [key=0, style=solid];
m0_68 -> m0_66  [color=blue, key=0, style=bold];
m0_78 -> m0_79  [key=0, style=solid];
m0_81 -> m0_82  [key=0, style=solid];
m0_81 -> m0_83  [key=2, style=dotted];
m0_81 -> m0_35  [key=2, style=dotted];
m0_71 -> m0_69  [color=blue, key=0, style=bold];
m0_77 -> m0_78  [key=0, style=solid];
m0_79 -> m0_77  [color=blue, key=0, style=bold];
m0_82 -> m0_80  [color=blue, key=0, style=bold];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_84  [color=blue, key=0, style=bold];
m0_10 -> m0_114  [key=0, style=solid];
m0_10 -> m0_118  [color=crimson, key=0, style=bold];
m0_10 -> m0_119  [color=crimson, key=0, style=bold];
m0_10 -> m0_122  [color=crimson, key=0, style=bold];
m0_10 -> m0_124  [color=crimson, key=0, style=bold];
m0_10 -> m0_125  [color=crimson, key=0, style=bold];
m0_10 -> m0_115  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_10 -> m0_121  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_126  [key=0, style=solid];
m0_114 -> m0_8  [key=2, style=dotted];
m0_118 -> m0_119  [key=0, style=solid];
m0_118 -> m0_108  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_122 -> m0_123  [key=0, style=solid];
m0_124 -> m0_125  [key=0, style=solid];
m0_124 -> m0_108  [key=2, style=dotted];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_9  [key=2, style=dotted];
m0_115 -> m0_116  [key=0, style=solid];
m0_115 -> m0_106  [key=2, style=dotted];
m0_115 -> m0_118  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_115 -> m0_123  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_121 -> m0_122  [key=0, style=solid];
m0_121 -> m0_128  [key=2, style=dotted];
m0_121 -> m0_129  [key=2, style=dotted];
m0_116 -> m0_117  [key=0, style=solid];
m0_116 -> m0_127  [key=2, style=dotted];
m0_116 -> m0_120  [color=darkseagreen4, key=1, label=equalIndex, style=dashed];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_130  [key=2, style=dotted];
m0_123 -> m0_125  [color=darkseagreen4, key=1, label=parts, style=dashed];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_120  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_123  [key=0, style=solid];
m0_126 -> m0_10  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_0 -> m0_4  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_7  [key=2, style=dotted];
m0_1 -> m0_5  [color=darkseagreen4, key=1, label=errors, style=dashed];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_8  [key=2, style=dotted];
m0_3 -> m0_9  [key=2, style=dotted];
m0_3 -> m0_10  [key=2, style=dotted];
m0_3 -> m0_11  [key=2, style=dotted];
m0_3 -> m0_12  [key=2, style=dotted];
m0_3 -> m0_3  [color=darkseagreen4, key=1, label=arg, style=dashed];
m0_3 -> m0_5  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_13  [key=2, style=dotted];
m0_4 -> m0_14  [key=2, style=dotted];
m0_4 -> m0_12  [key=2, style=dotted];
m0_4 -> m0_4  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_4 -> m0_20  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m0_2 -> m0_3  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_15  [key=2, style=dotted];
m0_5 -> m0_16  [key=2, style=dotted];
m0_5 -> m0_17  [key=2, style=dotted];
m0_5 -> m0_18  [key=2, style=dotted];
m0_5 -> m0_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_5  [color=darkseagreen4, key=1, label=t, style=dashed];
m0_6 -> m0_0  [color=blue, key=0, style=bold];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_23 -> m0_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_23 -> m0_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_28  [key=0, style=solid];
m0_24 -> m0_30  [key=2, style=dotted];
m0_24 -> m0_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_31  [key=2, style=dotted];
m0_25 -> m0_32  [key=2, style=dotted];
m0_25 -> m0_41  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_25 -> m0_27  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_33  [key=2, style=dotted];
m0_26 -> m0_34  [key=2, style=dotted];
m0_26 -> m0_35  [key=2, style=dotted];
m0_26 -> m0_44  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_26 -> m0_48  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_32  [key=2, style=dotted];
m0_27 -> m0_29  [key=0, style=solid];
m0_27 -> m0_36  [key=2, style=dotted];
m0_27 -> m0_47  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_2  [color=darkorchid, key=3, label="Property variable string LongName", style=bold];
m0_29 -> m0_23  [color=blue, key=0, style=bold];
m0_11 -> m0_87  [key=0, style=solid];
m0_11 -> m0_90  [color=crimson, key=0, style=bold];
m0_11 -> m0_91  [color=crimson, key=0, style=bold];
m0_11 -> m0_93  [color=crimson, key=0, style=bold];
m0_11 -> m0_94  [color=crimson, key=0, style=bold];
m0_11 -> m0_96  [color=crimson, key=0, style=bold];
m0_11 -> m0_102  [color=crimson, key=0, style=bold];
m0_11 -> m0_104  [color=crimson, key=0, style=bold];
m0_11 -> m0_88  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_11 -> m0_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_11 -> m0_100  [color=darkseagreen4, key=1, label="System.Func<string, bool>", style=dashed];
m0_87 -> m0_88  [key=0, style=solid];
m0_87 -> m0_105  [key=0, style=solid];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_9  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_108  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_108  [key=2, style=dotted];
m0_102 -> m0_98  [key=0, style=solid];
m0_102 -> m0_108  [key=2, style=dotted];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_113  [key=2, style=dotted];
m0_104 -> m0_106  [key=2, style=dotted];
m0_104 -> m0_9  [key=2, style=dotted];
m0_88 -> m0_89  [key=0, style=solid];
m0_88 -> m0_106  [key=2, style=dotted];
m0_88 -> m0_93  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_88 -> m0_95  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_88 -> m0_98  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_88 -> m0_103  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_88 -> m0_104  [color=darkseagreen4, key=1, label=text, style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_92 -> m0_95  [key=0, style=solid];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_103  [key=0, style=solid];
m0_100 -> m0_111  [key=2, style=dotted];
m0_100 -> m0_32  [key=2, style=dotted];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_92  [key=0, style=solid];
m0_89 -> m0_107  [key=2, style=dotted];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_109  [key=2, style=dotted];
m0_95 -> m0_97  [color=darkseagreen4, key=1, label=first, style=dashed];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_103  [key=0, style=solid];
m0_98 -> m0_106  [key=2, style=dotted];
m0_98 -> m0_100  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_98 -> m0_101  [color=darkseagreen4, key=1, label=c, style=dashed];
m0_103 -> m0_104  [key=0, style=solid];
m0_103 -> m0_105  [key=0, style=solid];
m0_103 -> m0_113  [key=2, style=dotted];
m0_97 -> m0_98  [key=0, style=solid];
m0_97 -> m0_7  [key=2, style=dotted];
m0_97 -> m0_100  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_97 -> m0_101  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_97 -> m0_103  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_97 -> m0_104  [color=darkseagreen4, key=1, label=seen, style=dashed];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_112  [key=2, style=dotted];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_110  [key=2, style=dotted];
m0_99 -> m0_102  [color=darkseagreen4, key=1, label=n, style=dashed];
m0_105 -> m0_11  [color=blue, key=0, style=bold];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_59  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m0_50 -> m0_52  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m0_50 -> m0_54  [color=darkseagreen4, key=1, label="CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>", style=dashed];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_35  [key=2, style=dotted];
m0_51 -> m0_56  [key=2, style=dotted];
m0_51 -> m0_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_51 -> m0_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_51 -> m0_70  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_35  [key=2, style=dotted];
m0_52 -> m0_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_18  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_55 -> m0_50  [color=blue, key=0, style=bold];
m0_131 -> m0_20  [color=darkseagreen4, key=1, label=unkTokens, style=dashed];
m0_132 -> m0_48  [color=darkseagreen4, key=1, label=values, style=dashed];
m0_133 -> m0_59  [color=darkseagreen4, key=1, label="System.Func<string, CSharpx.Maybe<char>>", style=dashed];
m0_134 -> m0_64  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_135 -> m0_70  [color=darkseagreen4, key=1, label=replaces, style=dashed];
m0_136 -> m0_78  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_137 -> m0_81  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [color=blue, key=0, style=bold];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_6  [key=2, style=dotted];
m2_21 -> m2_7  [key=2, style=dotted];
m2_21 -> m2_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_8  [key=2, style=dotted];
m2_22 -> m2_9  [key=2, style=dotted];
m2_22 -> m2_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_14  [key=2, style=dotted];
m2_24 -> m2_15  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_10  [key=2, style=dotted];
m2_23 -> m2_6  [key=2, style=dotted];
m2_23 -> m2_7  [key=2, style=dotted];
m2_23 -> m2_11  [key=2, style=dotted];
m2_23 -> m2_12  [key=2, style=dotted];
m2_23 -> m2_13  [key=2, style=dotted];
m2_23 -> m2_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_20  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_14  [key=2, style=dotted];
m2_4 -> m2_15  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_11  [key=2, style=dotted];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_13  [key=2, style=dotted];
m2_3 -> m2_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_26 -> m2_27  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_19  [key=2, style=dotted];
m2_28 -> m2_26  [color=blue, key=0, style=bold];
m2_29 -> m2_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m2_30 -> m2_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_4  [color=blue, key=0, style=bold];
m4_2 -> m4_3  [key=0, style=solid];
m4_3 -> m4_2  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_0  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_6  [color=blue, key=0, style=bold];
}
