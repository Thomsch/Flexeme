digraph  {
m0_7 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ParserResult.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_18 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Parsed(T)", span="100-100"];
m0_19 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Parsed(T)", span="100-100"];
m0_37 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_38 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs", label="this.errors = errors", span="166-166"];
m0_39 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_20 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Equals(object)", span="118-118"];
m0_21 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="var other = obj as Parsed<T>", span="120-120"];
m0_24 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="return base.Equals(obj);", span="126-126"];
m0_22 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="other != null", span="121-121"];
m0_23 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="return Equals(other);", span="123-123"];
m0_25 [cluster="CommandLine.Parsed<T>.Equals(object)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Equals(object)", span="118-118"];
m0_54 [cluster="Unk.SequenceEqual", file="ParserResult.cs", label="Entry Unk.SequenceEqual", span=""];
m0_27 [cluster="object.Equals(object)", file="ParserResult.cs", label="Entry object.Equals(object)", span="0-0"];
m0_46 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="208-208"];
m0_50 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="other == null", span="210-210"];
m0_52 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", color=red, community=0, file="ParserResult.cs", label="0: return this.Tag.Equals(other.Tag) && Errors.SequenceEqual(other.Errors);", span="215-215"];
m0_51 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="return false;", span="212-212"];
m0_53 [cluster="CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.Equals(CommandLine.NotParsed<T>)", span="208-208"];
m0_15 [cluster="CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", span="94-94"];
m0_16 [cluster="CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", file="ParserResult.cs", label="this.value = value", span="97-97"];
m0_17 [cluster="CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Parsed(T, CommandLine.TypeInfo)", span="94-94"];
m0_36 [cluster="System.Enum.Equals(object)", file="ParserResult.cs", label="Entry System.Enum.Equals(object)", span="0-0"];
m0_8 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m0_9 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="return new TypeInfo(current, choices);", span="36-36"];
m0_10 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Exit CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m0_0 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Entry CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="13-13"];
m0_1 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="this.current = current", span="15-15"];
m0_2 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="this.choices = choices", span="16-16"];
m0_3 [cluster="CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="ParserResult.cs", label="Exit CommandLine.TypeInfo.TypeInfo(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="13-13"];
m0_4 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ParserResult.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m0_5 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ParserResult.cs", label="return new TypeInfo(current, Enumerable.Empty<Type>());", span="31-31"];
m0_6 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ParserResult.cs", label="Exit CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m0_26 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", span="143-143"];
m0_32 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="other == null", span="145-145"];
m0_34 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", color=red, community=0, file="ParserResult.cs", label="0: return this.Tag.Equals(other.Tag)\r\n                    && Value.Equals(other.Value);", span="150-151"];
m0_33 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="return false;", span="147-147"];
m0_35 [cluster="CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.Equals(CommandLine.Parsed<T>)", span="143-143"];
m0_40 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.Equals(object)", span="182-182"];
m0_41 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="var other = obj as NotParsed<T>", span="184-184"];
m0_44 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="return base.Equals(obj);", span="190-190"];
m0_42 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="other != null", span="185-185"];
m0_43 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="return Equals(other);", span="187-187"];
m0_45 [cluster="CommandLine.NotParsed<T>.Equals(object)", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.Equals(object)", span="182-182"];
m0_47 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="ParserResult.cs", label="Entry CommandLine.NotParsed<T>.GetHashCode()", span="197-197"];
m0_48 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="ParserResult.cs", label="return new { Tag, Errors }.GetHashCode();", span="200-200"];
m0_49 [cluster="CommandLine.NotParsed<T>.GetHashCode()", file="ParserResult.cs", label="Exit CommandLine.NotParsed<T>.GetHashCode()", span="197-197"];
m0_11 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", span="66-66"];
m0_12 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="this.tag = tag", span="68-68"];
m0_13 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="this.typeInfo = typeInfo", span="69-69"];
m0_14 [cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", file="ParserResult.cs", label="Exit CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, CommandLine.TypeInfo)", span="66-66"];
m0_31 [cluster="object.GetHashCode()", file="ParserResult.cs", label="Entry object.GetHashCode()", span="0-0"];
m0_28 [cluster="CommandLine.Parsed<T>.GetHashCode()", file="ParserResult.cs", label="Entry CommandLine.Parsed<T>.GetHashCode()", span="133-133"];
m0_29 [cluster="CommandLine.Parsed<T>.GetHashCode()", file="ParserResult.cs", label="return new { Tag, Value }.GetHashCode();", span="135-135"];
m0_30 [cluster="CommandLine.Parsed<T>.GetHashCode()", file="ParserResult.cs", label="Exit CommandLine.Parsed<T>.GetHashCode()", span="133-133"];
m0_55 [file="ParserResult.cs", label="CommandLine.TypeInfo", span=""];
m0_56 [file="ParserResult.cs", label="CommandLine.ParserResult<T>", span=""];
m0_57 [file="ParserResult.cs", label="CommandLine.Parsed<T>", span=""];
m0_58 [file="ParserResult.cs", label="CommandLine.NotParsed<T>", span=""];
m1_0 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m1_1 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="result.Tag == ResultType.Ok", span="14-14"];
m1_2 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="16-16"];
m1_4 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="return Enumerable.Empty<TMessage>();", span="19-19"];
m1_3 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="return ok.Value.Messages;", span="17-17"];
m1_5 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ResultExtensions.cs", label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m1_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ResultExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m2_4 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="36-36"];
m2_32 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="TypeConverter.cs", label="0: result.Match(_ => { }, e => e.RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) }))", span="39-40"];
m2_31 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture)", span="38-38"];
m2_33 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return Maybe.OfEither(result);", span="41-41"];
m2_34 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="36-36"];
m2_35 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="44-44"];
m2_44 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="TypeConverter.cs", label="0: Func<string, object> changeType = input =>\r\n            {\r\n                Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (input == null) ? empty() : withValue();\r\n                };\r\n\r\n                return input.IsBooleanString()\r\n                    ? input.ToBoolean() : conversionType.IsEnum\r\n                        ? input.ToEnum(conversionType) : safeChangeType();\r\n            }", span="46-74"];
m2_45 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="TypeConverter.cs", label="0: Func<string, object> makeType = input =>\r\n            {\r\n                try\r\n                {\r\n                    var ctor = conversionType.GetConstructor(new[] { typeof(string) });\r\n                    return ctor.Invoke(new object[] { input });\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');\r\n                }\r\n            }", span="76-87"];
m2_46 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="TypeConverter.cs", label="0: return Either.Protect(\r\n                conversionType.IsPrimitiveEx() || ReflectionHelper.IsFSharpOptionType(conversionType)\r\n                    ? changeType\r\n                    : makeType, value);", span="89-92"];
m2_47 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="44-44"];
m2_0 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m2_1 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return scalar\r\n                ? ChangeTypeScalar(values.Single(), conversionType, conversionCulture)\r\n                : ChangeTypeSequence(values, conversionType, conversionCulture);", span="15-17"];
m2_2 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m2_101 [cluster="System.Enum.IsDefined(System.Type, object)", file="TypeConverter.cs", label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0"];
m2_76 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14"];
m2_13 [cluster="System.ApplicationException.ApplicationException(string)", file="TypeConverter.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m2_16 [cluster="Unk.Any", file="TypeConverter.cs", label="Entry Unk.Any", span=""];
m2_70 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8"];
m2_71 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="TypeConverter.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m2_99 [cluster="System.Enum.Parse(System.Type, string)", file="TypeConverter.cs", label="Entry System.Enum.Parse(System.Type, string)", span="0-0"];
m2_58 [cluster="System.Func<TResult>.Invoke()", file="TypeConverter.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m2_12 [cluster="T.ToMaybe<T>()", file="TypeConverter.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m2_19 [cluster="CSharpx.Maybe.Just<T>(T)", file="TypeConverter.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m2_28 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="33-33"];
m2_38 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="39-39"];
m2_40 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="39-40"];
m2_41 [cluster="lambda expression", color=green, community=0, file="TypeConverter.cs", label="0: e.RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) })", span="39-40"];
m2_42 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="39-40"];
m2_52 [cluster="lambda expression", color=green, community=0, file="TypeConverter.cs", label="0: Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (input == null) ? empty() : withValue();\r\n                }", span="48-69"];
m2_63 [cluster="lambda expression", color=green, community=0, file="TypeConverter.cs", label="0: Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture)", span="60-64"];
m2_73 [cluster="lambda expression", color=green, community=0, file="TypeConverter.cs", label="0: isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(input, type, conversionCulture))\r\n                                : Convert.ChangeType(input, type, conversionCulture)", span="62-64"];
m2_65 [cluster="lambda expression", file="TypeConverter.cs", label="return (input == null) ? empty() : withValue();", span="68-68"];
m2_53 [cluster="lambda expression", color=green, community=0, file="TypeConverter.cs", label="0: return input.IsBooleanString()\r\n                    ? input.ToBoolean() : conversionType.IsEnum\r\n                        ? input.ToEnum(conversionType) : safeChangeType();", span="71-73"];
m2_51 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="46-74"];
m2_60 [cluster="lambda expression", file="TypeConverter.cs", label="var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType)", span="50-50"];
m2_62 [cluster="lambda expression", file="TypeConverter.cs", label="var type = getUnderlyingType() ?? conversionType", span="58-58"];
m2_64 [cluster="lambda expression", file="TypeConverter.cs", label="Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null", span="66-66"];
m2_72 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="61-64"];
m2_74 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="61-64"];
m2_54 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="46-74"];
m2_83 [cluster="lambda expression", file="TypeConverter.cs", label="return ctor.Invoke(new object[] { input });", span="81-81"];
m2_39 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="39-39"];
m2_61 [cluster="lambda expression", file="TypeConverter.cs", label="Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="52-56"];
m2_68 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="54-56"];
m2_82 [cluster="lambda expression", file="TypeConverter.cs", label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="80-80"];
m2_66 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="48-69"];
m2_59 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="48-69"];
m2_78 [cluster="lambda expression", file="TypeConverter.cs", label="isFsOption ? FSharpOptionHelper.None(type) : null", span="66-66"];
m2_81 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="76-87"];
m2_86 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="76-87"];
m2_67 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="53-56"];
m2_69 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="53-56"];
m2_77 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="66-66"];
m2_79 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="66-66"];
m2_85 [cluster="lambda expression", file="TypeConverter.cs", label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="85-85"];
m2_84 [cluster="lambda expression", file="TypeConverter.cs", label=Exception, span="83-83"];
m2_21 [cluster="lambda expression", file="TypeConverter.cs", label="ChangeTypeScalar(value, type, conversionCulture)", span="29-29"];
m2_20 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="29-29"];
m2_22 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="29-29"];
m2_24 [cluster="lambda expression", file="TypeConverter.cs", label="Entry lambda expression", span="31-31"];
m2_26 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="31-31"];
m2_25 [cluster="lambda expression", file="TypeConverter.cs", label="a.MatchNothing()", span="31-31"];
m2_29 [cluster="lambda expression", file="TypeConverter.cs", label="((Just<object>)c).Value", span="33-33"];
m2_30 [cluster="lambda expression", file="TypeConverter.cs", label="Exit lambda expression", span="33-33"];
m2_43 [cluster="Unk.RethrowWhenAbsentIn", file="TypeConverter.cs", label="Entry Unk.RethrowWhenAbsentIn", span=""];
m2_75 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="TypeConverter.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m2_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m2_57 [cluster="string.ToEnum(System.Type)", file="TypeConverter.cs", label="Entry string.ToEnum(System.Type)", span="95-95"];
m2_49 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m2_48 [cluster="System.Type.IsPrimitiveEx()", file="TypeConverter.cs", label="Entry System.Type.IsPrimitiveEx()", span="209-209"];
m2_5 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="20-20"];
m2_6 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJust(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="22-27"];
m2_7 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture))", span="29-29"];
m2_8 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="31-33"];
m2_9 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="20-20"];
m2_15 [cluster="Unk.Select", file="TypeConverter.cs", label="Entry Unk.Select", span=""];
m2_23 [cluster="Unk.ChangeTypeScalar", file="TypeConverter.cs", label="Entry Unk.ChangeTypeScalar", span=""];
m2_37 [cluster="Unk.OfEither", file="TypeConverter.cs", label="Entry Unk.OfEither", span=""];
m2_36 [cluster="Unk.Match", file="TypeConverter.cs", label="Entry Unk.Match", span=""];
m2_50 [cluster="Unk.Protect", file="TypeConverter.cs", label="Entry Unk.Protect", span=""];
m2_56 [cluster="string.ToBoolean()", file="TypeConverter.cs", label="Entry string.ToBoolean()", span="66-66"];
m2_10 [cluster="System.Type.GetGenericArguments()", file="TypeConverter.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m2_89 [cluster="System.FormatException.FormatException(string)", file="TypeConverter.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m2_87 [cluster="System.Type.GetConstructor(System.Type[])", file="TypeConverter.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m2_17 [cluster="CSharpx.Maybe.Nothing<T>()", file="TypeConverter.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m2_14 [cluster="Unk.FromJust", file="TypeConverter.cs", label="Entry Unk.FromJust", span=""];
m2_90 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="95-95"];
m2_91 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="object parsedValue", span="97-97"];
m2_92 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="parsedValue = Enum.Parse(conversionType, value)", span="100-100"];
m2_95 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Enum.IsDefined(conversionType, parsedValue)", span="106-106"];
m2_93 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label=ArgumentException, span="102-102"];
m2_96 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="return parsedValue;", span="108-108"];
m2_94 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="throw new FormatException();", span="104-104"];
m2_97 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="throw new FormatException();", span="110-110"];
m2_98 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="TypeConverter.cs", label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="95-95"];
m2_55 [cluster="string.IsBooleanString()", file="TypeConverter.cs", label="Entry string.IsBooleanString()", span="60-60"];
m2_27 [cluster="Unk.MatchNothing", file="TypeConverter.cs", label="Entry Unk.MatchNothing", span=""];
m2_88 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="TypeConverter.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m2_18 [cluster="Unk.ToUntypedArray", file="TypeConverter.cs", label="Entry Unk.ToUntypedArray", span=""];
m2_100 [cluster="System.FormatException.FormatException()", file="TypeConverter.cs", label="Entry System.FormatException.FormatException()", span="0-0"];
m2_80 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TypeConverter.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22"];
m2_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="TypeConverter.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m2_104 [file="TypeConverter.cs", label="System.Type", span=""];
m2_105 [file="TypeConverter.cs", label="System.Globalization.CultureInfo", span=""];
m2_106 [file="TypeConverter.cs", label=string, span=""];
m2_107 [file="TypeConverter.cs", label=isFsOption, span=""];
m2_108 [file="TypeConverter.cs", label=type, span=""];
m2_102 [file="TypeConverter.cs", label="System.Globalization.CultureInfo", span=""];
m2_103 [file="TypeConverter.cs", label=type, span=""];
m0_18 -> m0_19  [key=0, style=solid];
m0_19 -> m0_18  [color=blue, key=0, style=bold];
m0_37 -> m0_38  [key=0, style=solid];
m0_38 -> m0_39  [key=0, style=solid];
m0_39 -> m0_37  [color=blue, key=0, style=bold];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_24  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_20 -> m0_26  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_23  [color=darkseagreen4, key=1, label=other, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_27  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_24  [key=0, style=solid];
m0_23 -> m0_25  [key=0, style=solid];
m0_23 -> m0_26  [key=2, style=dotted];
m0_25 -> m0_20  [color=blue, key=0, style=bold];
m0_46 -> m0_50  [key=0, style=solid];
m0_46 -> m0_52  [color=red, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m0_46 -> m0_41  [color=darkorchid, key=3, label="Parameter variable CommandLine.NotParsed<T> other", style=bold];
m0_46 -> m0_33  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m0_50 -> m0_51  [key=0, style=solid];
m0_50 -> m0_52  [color=red, key=0, style=solid];
m0_52 -> m0_53  [color=red, key=0, style=solid];
m0_52 -> m0_36  [color=red, key=2, style=dotted];
m0_52 -> m0_54  [color=red, key=2, style=dotted];
m0_51 -> m0_53  [key=0, style=solid];
m0_53 -> m0_46  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_17  [key=0, style=solid];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_0  [key=2, style=dotted];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m0_1 -> m0_2  [key=0, style=solid];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_0  [key=2, style=dotted];
m0_5 -> m0_7  [key=2, style=dotted];
m0_6 -> m0_4  [color=blue, key=0, style=bold];
m0_26 -> m0_32  [key=0, style=solid];
m0_26 -> m0_34  [color=red, key=1, label="CommandLine.Parsed<T>", style=dashed];
m0_26 -> m0_21  [color=darkorchid, key=3, label="Parameter variable CommandLine.Parsed<T> other", style=bold];
m0_26 -> m0_33  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_34  [color=red, key=0, style=solid];
m0_34 -> m0_35  [color=red, key=0, style=solid];
m0_34 -> m0_36  [color=red, key=2, style=dotted];
m0_34 -> m0_27  [color=red, key=2, style=dotted];
m0_33 -> m0_35  [key=0, style=solid];
m0_35 -> m0_26  [color=blue, key=0, style=bold];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_44  [color=darkseagreen4, key=1, label=object, style=dashed];
m0_40 -> m0_46  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_43  [color=darkseagreen4, key=1, label=other, style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_27  [key=2, style=dotted];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [key=0, style=solid];
m0_43 -> m0_46  [key=2, style=dotted];
m0_45 -> m0_40  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_31  [key=2, style=dotted];
m0_49 -> m0_47  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [color=darkseagreen4, key=1, label="CommandLine.TypeInfo", style=dashed];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_14  [key=0, style=solid];
m0_14 -> m0_11  [color=blue, key=0, style=bold];
m0_28 -> m0_29  [key=0, style=solid];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=2, style=dotted];
m0_30 -> m0_28  [color=blue, key=0, style=bold];
m0_55 -> m0_1  [color=darkseagreen4, key=1, label="CommandLine.TypeInfo", style=dashed];
m0_55 -> m0_2  [color=darkseagreen4, key=1, label="CommandLine.TypeInfo", style=dashed];
m0_56 -> m0_12  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_56 -> m0_13  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m0_57 -> m0_16  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m0_57 -> m0_23  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m0_57 -> m0_24  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m0_57 -> m0_29  [color=darkseagreen4, key=1, label="CommandLine.Parsed<T>", style=dashed];
m0_57 -> m0_34  [color=red, key=1, label="CommandLine.Parsed<T>", style=dashed];
m0_58 -> m0_38  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m0_58 -> m0_43  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m0_58 -> m0_44  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m0_58 -> m0_48  [color=darkseagreen4, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m0_58 -> m0_52  [color=red, key=1, label="CommandLine.NotParsed<T>", style=dashed];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_2  [color=darkseagreen4, key=1, label="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>", style=dashed];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=0, style=solid];
m1_2 -> m1_3  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_6  [key=2, style=dotted];
m1_3 -> m1_5  [key=0, style=solid];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m2_4 -> m2_31  [key=0, style=solid];
m2_4 -> m2_0  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo conversionCulture", style=bold];
m2_32 -> m2_33  [color=green, key=0, style=solid];
m2_32 -> m2_36  [color=green, key=2, style=dotted];
m2_32 -> m2_38  [color=green, key=1, label="lambda expression", style=dashed];
m2_32 -> m2_40  [color=green, key=1, label="lambda expression", style=dashed];
m2_31 -> m2_32  [color=green, key=0, style=solid];
m2_31 -> m2_35  [key=2, style=dotted];
m2_31 -> m2_33  [color=darkseagreen4, key=1, label=result, style=dashed];
m2_33 -> m2_34  [key=0, style=solid];
m2_33 -> m2_37  [key=2, style=dotted];
m2_34 -> m2_4  [color=blue, key=0, style=bold];
m2_35 -> m2_44  [color=green, key=0, style=solid];
m2_35 -> m2_52  [color=green, key=1, label="System.Type", style=dashed];
m2_35 -> m2_63  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_35 -> m2_73  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_35 -> m2_53  [color=green, key=1, label="System.Type", style=dashed];
m2_35 -> m2_45  [color=green, key=1, label="System.Type", style=dashed];
m2_35 -> m2_46  [color=green, key=1, label=string, style=dashed];
m2_35 -> m2_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_35 -> m2_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_35 -> m2_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_35 -> m2_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_35 -> m2_82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_35 -> m2_4  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo conversionCulture", style=bold];
m2_44 -> m2_44  [color=green, key=3, label="Local variable System.Func<string, object> changeType", style=bold];
m2_44 -> m2_45  [color=green, key=0, style=solid];
m2_44 -> m2_52  [color=green, key=1, label=string, style=dashed];
m2_44 -> m2_63  [color=green, key=1, label=string, style=dashed];
m2_44 -> m2_73  [color=green, key=1, label=string, style=dashed];
m2_44 -> m2_65  [color=green, key=1, label=string, style=dashed];
m2_44 -> m2_53  [color=green, key=1, label=string, style=dashed];
m2_44 -> m2_46  [color=green, key=1, label=changeType, style=dashed];
m2_45 -> m2_45  [color=green, key=3, label="Local variable System.Func<string, object> makeType", style=bold];
m2_45 -> m2_46  [color=green, key=0, style=solid];
m2_45 -> m2_83  [color=green, key=1, label=string, style=dashed];
m2_46 -> m2_47  [color=green, key=0, style=solid];
m2_46 -> m2_48  [color=green, key=2, style=dotted];
m2_46 -> m2_49  [color=green, key=2, style=dotted];
m2_46 -> m2_50  [color=green, key=2, style=dotted];
m2_47 -> m2_35  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_4  [key=2, style=dotted];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_5  [key=2, style=dotted];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_40 -> m2_41  [color=green, key=0, style=solid];
m2_41 -> m2_42  [color=green, key=0, style=solid];
m2_41 -> m2_43  [color=green, key=2, style=dotted];
m2_42 -> m2_40  [color=blue, key=0, style=bold];
m2_52 -> m2_53  [color=green, key=0, style=solid];
m2_63 -> m2_64  [color=green, key=0, style=solid];
m2_63 -> m2_65  [color=green, key=1, label=withValue, style=dashed];
m2_73 -> m2_74  [color=green, key=0, style=solid];
m2_73 -> m2_75  [color=green, key=2, style=dotted];
m2_73 -> m2_76  [color=green, key=2, style=dotted];
m2_65 -> m2_66  [key=0, style=solid];
m2_65 -> m2_58  [key=2, style=dotted];
m2_53 -> m2_54  [color=green, key=0, style=solid];
m2_53 -> m2_55  [color=green, key=2, style=dotted];
m2_53 -> m2_56  [color=green, key=2, style=dotted];
m2_53 -> m2_57  [color=green, key=2, style=dotted];
m2_53 -> m2_58  [color=green, key=2, style=dotted];
m2_51 -> m2_52  [color=green, key=0, style=solid];
m2_51 -> m2_63  [color=green, key=1, label=string, style=dashed];
m2_51 -> m2_73  [color=green, key=1, label=string, style=dashed];
m2_51 -> m2_53  [color=green, key=1, label=string, style=dashed];
m2_51 -> m2_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_60 -> m2_63  [color=green, key=1, label=isFsOption, style=dashed];
m2_60 -> m2_73  [color=green, key=1, label=isFsOption, style=dashed];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_49  [key=2, style=dotted];
m2_60 -> m2_68  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m2_60 -> m2_64  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m2_60 -> m2_78  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m2_62 -> m2_63  [color=green, key=0, style=solid];
m2_62 -> m2_73  [color=green, key=1, label=type, style=dashed];
m2_62 -> m2_58  [key=2, style=dotted];
m2_62 -> m2_64  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_62 -> m2_78  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_64 -> m2_65  [key=0, style=solid];
m2_72 -> m2_73  [color=green, key=0, style=solid];
m2_74 -> m2_72  [color=blue, key=0, style=bold];
m2_54 -> m2_51  [color=blue, key=0, style=bold];
m2_83 -> m2_86  [key=0, style=solid];
m2_83 -> m2_88  [key=2, style=dotted];
m2_39 -> m2_38  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_68 -> m2_69  [key=0, style=solid];
m2_68 -> m2_70  [key=2, style=dotted];
m2_68 -> m2_71  [key=2, style=dotted];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_87  [key=2, style=dotted];
m2_66 -> m2_59  [color=blue, key=0, style=bold];
m2_59 -> m2_60  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_80  [key=2, style=dotted];
m2_81 -> m2_83  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_81 -> m2_82  [key=0, style=solid];
m2_86 -> m2_81  [color=blue, key=0, style=bold];
m2_67 -> m2_68  [key=0, style=solid];
m2_69 -> m2_67  [color=blue, key=0, style=bold];
m2_77 -> m2_78  [key=0, style=solid];
m2_79 -> m2_77  [color=blue, key=0, style=bold];
m2_85 -> m2_86  [key=0, style=solid];
m2_85 -> m2_89  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_24 -> m2_25  [key=0, style=solid];
m2_26 -> m2_24  [color=blue, key=0, style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m2_57 -> m2_35  [color=darkorchid, key=3, label="Parameter variable System.Type conversionType", style=bold];
m2_57 -> m2_91  [color=darkorchid, key=3, label="method methodReturn object ToEnum", style=bold];
m2_5 -> m2_0  [color=darkorchid, key=3, label="Parameter variable System.Globalization.CultureInfo conversionCulture", style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m2_5 -> m2_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [key=2, style=dotted];
m2_6 -> m2_11  [key=2, style=dotted];
m2_6 -> m2_12  [key=2, style=dotted];
m2_6 -> m2_13  [key=2, style=dotted];
m2_6 -> m2_14  [key=2, style=dotted];
m2_6 -> m2_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_6 -> m2_8  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_15  [key=2, style=dotted];
m2_7 -> m2_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_16  [key=2, style=dotted];
m2_8 -> m2_17  [key=2, style=dotted];
m2_8 -> m2_15  [key=2, style=dotted];
m2_8 -> m2_18  [key=2, style=dotted];
m2_8 -> m2_19  [key=2, style=dotted];
m2_8 -> m2_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_8 -> m2_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_9 -> m2_5  [color=blue, key=0, style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_90 -> m2_95  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_91 -> m2_92  [key=0, style=solid];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_95  [key=0, style=solid];
m2_92 -> m2_99  [key=2, style=dotted];
m2_92 -> m2_96  [color=darkseagreen4, key=1, label=parsedValue, style=dashed];
m2_95 -> m2_96  [key=0, style=solid];
m2_95 -> m2_97  [key=0, style=solid];
m2_95 -> m2_101  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_96 -> m2_98  [key=0, style=solid];
m2_94 -> m2_98  [key=0, style=solid];
m2_94 -> m2_100  [key=2, style=dotted];
m2_97 -> m2_98  [key=0, style=solid];
m2_97 -> m2_100  [key=2, style=dotted];
m2_98 -> m2_90  [color=blue, key=0, style=bold];
m2_104 -> m2_52  [color=green, key=1, label="System.Type", style=dashed];
m2_104 -> m2_53  [color=green, key=1, label="System.Type", style=dashed];
m2_104 -> m2_60  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_104 -> m2_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_104 -> m2_68  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_104 -> m2_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_104 -> m2_82  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m2_105 -> m2_52  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_105 -> m2_63  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_105 -> m2_73  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_106 -> m2_63  [color=green, key=1, label=string, style=dashed];
m2_106 -> m2_73  [color=green, key=1, label=string, style=dashed];
m2_106 -> m2_65  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_107 -> m2_73  [color=green, key=1, label=isFsOption, style=dashed];
m2_107 -> m2_68  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m2_107 -> m2_78  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m2_108 -> m2_73  [color=green, key=1, label=type, style=dashed];
m2_108 -> m2_78  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_102 -> m2_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m2_103 -> m2_21  [color=darkseagreen4, key=1, label=type, style=dashed];
}
