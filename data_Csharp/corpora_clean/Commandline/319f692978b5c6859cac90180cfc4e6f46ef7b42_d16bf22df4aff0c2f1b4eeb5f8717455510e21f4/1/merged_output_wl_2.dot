digraph  {
n70 [label=reader, span=""];
n71 [label=header, span=""];
n0 [cluster="ReadText.Demo.Program.Main(string[])", label="Entry ReadText.Demo.Program.Main(string[])", span="12-12"];
n1 [cluster="ReadText.Demo.Program.Main(string[])", color=red, community=0, label="0: Func<IOptions, string> reader = opts =>\r\n		        {\r\n		            var fromTop = opts.GetType() == typeof(HeadOptions);\r\n		            return opts.Lines.HasValue\r\n		                ? ReadLines(opts.FileName, fromTop, (int)opts.Lines)\r\n		                : ReadBytes(opts.FileName, fromTop, (int)opts.Bytes);\r\n		        }", span="14-20"];
n4 [cluster="ReadText.Demo.Program.Main(string[])", color=red, community=0, label="0: var result = Parser.Default.ParseArguments<HeadOptions, TailOptions>(args)", span="41-41"];
n2 [cluster="ReadText.Demo.Program.Main(string[])", color=red, community=0, label="0: Func<IOptions, string> header = opts =>\r\n		        {\r\n		            if (opts.Quiet)\r\n		            {\r\n		                return string.Empty;\r\n		            }\r\n                    var fromTop = opts.GetType() == typeof(HeadOptions);\r\n		            var builder = new StringBuilder(''Reading '');\r\n		            builder = opts.Lines.HasValue\r\n		                ? builder.Append(opts.Lines).Append('' lines'')\r\n		                : builder.Append(opts.Bytes).Append('' bytes'');\r\n		            builder = fromTop ? builder.Append('' from top:'') : builder.Append('' from bottom:'');\r\n		            return builder.ToString();\r\n		        }", span="21-34"];
n16 [cluster="lambda expression", label="var fromTop = opts.GetType() == typeof(HeadOptions)", span="16-16"];
n17 [cluster="lambda expression", color=red, community=0, label="0: return opts.Lines.HasValue\r\n		                ? ReadLines(opts.FileName, fromTop, (int)opts.Lines)\r\n		                : ReadBytes(opts.FileName, fromTop, (int)opts.Bytes);", span="17-19"];
n5 [cluster="ReadText.Demo.Program.Main(string[])", color=red, community=0, label="0: var texts = result\r\n                .Return(\r\n                    (HeadOptions opts) => Tuple.Create(header(opts), reader(opts)),\r\n                    (TailOptions opts) => Tuple.Create(header(opts), reader(opts)),\r\n                    _ => MakeError())", span="42-46"];
n42 [cluster="lambda expression", color=red, community=0, label="0: Tuple.Create(header(opts), reader(opts))", span="44-44"];
n47 [cluster="lambda expression", label="Tuple.Create(header(opts), reader(opts))", span="45-45"];
n3 [cluster="ReadText.Demo.Program.Main(string[])", color=red, community=0, label="0: Action<string> printIfNotEmpty = text =>\r\n                {\r\n                    if (text.Length == 0) { return; }\r\n                    Console.WriteLine(text);\r\n                }", span="35-39"];
n23 [cluster="lambda expression", label="opts.Quiet", span="23-23"];
n25 [cluster="lambda expression", color=red, community=0, label="0: var fromTop = opts.GetType() == typeof(HeadOptions)", span="27-27"];
n27 [cluster="lambda expression", label="builder = opts.Lines.HasValue\r\n		                ? builder.Append(opts.Lines).Append('' lines'')\r\n		                : builder.Append(opts.Bytes).Append('' bytes'')", span="29-31"];
n36 [cluster="lambda expression", color=red, community=0, label="0: text.Length == 0", span="37-37"];
n38 [cluster="lambda expression", color=red, community=0, label="0: Console.WriteLine(text)", span="38-38"];
n6 [cluster="ReadText.Demo.Program.Main(string[])", label="printIfNotEmpty(texts.Item1)", span="48-48"];
n7 [cluster="ReadText.Demo.Program.Main(string[])", color=red, community=0, label="0: printIfNotEmpty(texts.Item2)", span="49-49"];
n10 [cluster="CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", span="25-25"];
n11 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="101-101"];
n41 [cluster="lambda expression", label="Entry lambda expression", span="44-44"];
n46 [cluster="lambda expression", label="Entry lambda expression", span="45-45"];
n49 [cluster="lambda expression", label="Entry lambda expression", span="46-46"];
n8 [cluster="ReadText.Demo.Program.Main(string[])", label="return texts.Equals(MakeError()) ? 1 : 0;", span="51-51"];
n12 [cluster="System.Action<T>.Invoke(T)", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
n9 [cluster="ReadText.Demo.Program.Main(string[])", label="Exit ReadText.Demo.Program.Main(string[])", span="12-12"];
n13 [cluster="ReadText.Demo.Program.MakeError()", label="Entry ReadText.Demo.Program.MakeError()", span="74-74"];
n14 [cluster="System.Tuple<T1, T2>.Equals(object)", label="Entry System.Tuple<T1, T2>.Equals(object)", span="0-0"];
n15 [cluster="lambda expression", label="Entry lambda expression", span="14-20"];
n19 [cluster="object.GetType()", label="Entry object.GetType()", span="0-0"];
n18 [cluster="lambda expression", label="Exit lambda expression", span="14-20"];
n20 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", label="Entry ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54"];
n21 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", label="Entry ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64"];
n22 [cluster="lambda expression", label="Entry lambda expression", span="21-34"];
n24 [cluster="lambda expression", label="return string.Empty;", span="25-25"];
n26 [cluster="lambda expression", label="var builder = new StringBuilder(''Reading '')", span="28-28"];
n28 [cluster="lambda expression", label="builder = fromTop ? builder.Append('' from top:'') : builder.Append('' from bottom:'')", span="32-32"];
n31 [cluster="System.Text.StringBuilder.StringBuilder(string)", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
n32 [cluster="System.Text.StringBuilder.Append(object)", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
n33 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n29 [cluster="lambda expression", color=red, community=0, label="0: return builder.ToString();", span="33-33"];
n30 [cluster="lambda expression", label="Exit lambda expression", span="21-34"];
n34 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n35 [cluster="lambda expression", label="Entry lambda expression", span="35-39"];
n37 [cluster="lambda expression", color=red, community=0, label="0: return;", span="37-37"];
n39 [cluster="lambda expression", label="Exit lambda expression", span="35-39"];
n40 [cluster="System.Console.WriteLine(string)", label="Entry System.Console.WriteLine(string)", span="0-0"];
n43 [cluster="lambda expression", label="Exit lambda expression", span="44-44"];
n44 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n45 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
n48 [cluster="lambda expression", label="Exit lambda expression", span="45-45"];
n50 [cluster="lambda expression", label="MakeError()", span="46-46"];
n51 [cluster="lambda expression", label="Exit lambda expression", span="46-46"];
n52 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", color=red, community=0, label="0: var lines = File.ReadAllLines(fileName)", span="56-56"];
n53 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", color=red, community=0, label="0: fromTop", span="57-57"];
n54 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", color=red, community=0, label="0: return string.Join(Environment.NewLine, lines.Take(count));", span="59-59"];
n55 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", color=red, community=0, label="0: return string.Join(Environment.NewLine, lines.Reverse().Take(count));", span="61-61"];
n57 [cluster="System.IO.File.ReadAllLines(string)", label="Entry System.IO.File.ReadAllLines(string)", span="0-0"];
n56 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", label="Exit ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54"];
n58 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
n59 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n60 [cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0"];
n61 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", label="var bytes = File.ReadAllBytes(fileName)", span="66-66"];
n62 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", label=fromTop, span="67-67"];
n63 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", label="return Encoding.UTF8.GetString(bytes, 0, count);", span="69-69"];
n64 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", label="return Encoding.UTF8.GetString(bytes, bytes.Length - count, count);", span="71-71"];
n66 [cluster="System.IO.File.ReadAllBytes(string)", label="Entry System.IO.File.ReadAllBytes(string)", span="0-0"];
n65 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", label="Exit ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64"];
n67 [cluster="System.Text.Encoding.GetString(byte[], int, int)", label="Entry System.Text.Encoding.GetString(byte[], int, int)", span="0-0"];
n68 [cluster="ReadText.Demo.Program.MakeError()", label="return Tuple.Create(''\0'', ''\0'');", span="76-76"];
n69 [cluster="ReadText.Demo.Program.MakeError()", label="Exit ReadText.Demo.Program.MakeError()", span="74-74"];
d27 [cluster="CommandLine.Text.Example.GetHashCode()", color=green, community=0, label="0: return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="76-76"];
d41 [label="CommandLine.Text.Example", span=""];
d26 [cluster="CommandLine.Text.Example.GetHashCode()", label="Entry CommandLine.Text.Example.GetHashCode()", span="74-74"];
d28 [cluster="CommandLine.Text.Example.GetHashCode()", label="Exit CommandLine.Text.Example.GetHashCode()", span="74-74"];
d29 [cluster="object.GetHashCode()", label="Entry object.GetHashCode()", span="0-0"];
d32 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", color=green, community=0, label="0: return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="91-93"];
d24 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84"];
d30 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="other == null", span="86-86"];
d33 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="84-84"];
d34 [cluster="string.Equals(string)", label="Entry string.Equals(string)", span="0-0"];
d35 [cluster="Unk.SequenceEqual", label="Entry Unk.SequenceEqual", span=""];
d25 [cluster="object.Equals(object)", label="Entry object.Equals(object)", span="0-0"];
d7 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="this.helpText = helpText", span="24-24"];
d8 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="this.formatStyles = formatStyles", span="25-25"];
d9 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="this.sample = sample", span="26-26"];
d21 [cluster="CommandLine.Text.Example.Equals(object)", label="return Equals(other);", span="64-64"];
d22 [cluster="CommandLine.Text.Example.Equals(object)", label="return base.Equals(obj);", span="67-67"];
d18 [cluster="CommandLine.Text.Example.Equals(object)", label="Entry CommandLine.Text.Example.Equals(object)", span="59-59"];
d19 [cluster="CommandLine.Text.Example.Equals(object)", label="var other = obj as Example", span="61-61"];
d31 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", label="return false;", span="88-88"];
d0 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18"];
d5 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="sample == null", span="22-22"];
d10 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="18-18"];
d20 [cluster="CommandLine.Text.Example.Equals(object)", label="other != null", span="62-62"];
d23 [cluster="CommandLine.Text.Example.Equals(object)", label="Exit CommandLine.Text.Example.Equals(object)", span="59-59"];
d40 [cluster="CommandLine.UnParserSettings.UnParserSettings()", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
d1 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="string.IsNullOrEmpty(helpText)", span="20-20"];
d3 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="formatStyles == null", span="21-21"];
d6 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="throw new ArgumentNullException(''sample'');", span="22-22"];
d2 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="20-20"];
d4 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", label="throw new ArgumentNullException(''formatStyles'');", span="21-21"];
d37 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", label="return example.FormatStyles.Any()\r\n                ? example.FormatStyles\r\n                : new[] { new UnParserSettings { Consumed = true } };", span="113-115"];
d11 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
d13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
d12 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
d36 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", label="Entry CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111"];
d38 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", label="Exit CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="111-111"];
d39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_257 [cluster="System.Text.StringBuilder.Append(char)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m1_127 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303"];
m1_119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="287-287"];
m1_121 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="throw new ArgumentNullException(''current'');", span="288-288"];
m1_124 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296"];
m1_125 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="errors.Empty()", span="297-297"];
m1_118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="parserResult == null", span="287-287"];
m1_120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="current == null", span="288-288"];
m1_122 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes().Empty()", span="290-290"];
m1_123 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="291-291"];
m1_126 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="return current;", span="298-298"];
m1_128 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
m1_129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
m1_48 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", span="18-18"];
m1_58 [cluster="Unk.Any", file="HelpText.cs", label="Entry Unk.Any", span=""];
m1_0 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
m1_1 [cluster="CommandLine.Text.HelpText.HelpText()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
m1_379 [cluster="string.PadRight(int)", file="HelpText.cs", label="Entry string.PadRight(int)", span="0-0"];
m1_460 [cluster="T.ToStringInvariant<T>()", file="HelpText.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m1_61 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m1_176 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396"];
m1_175 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="391-391"];
m1_174 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="391-391"];
m1_177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
m1_273 [cluster="System.Text.StringBuilder.SafeToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
m1_272 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m1_92 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpText.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m1_90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m1_402 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
m1_135 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
m1_267 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595"];
m1_266 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="int ExtraLength = 10", span="582-582"];
m1_268 [cluster="CommandLine.Text.HelpText.ToString()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.ToString()", span="580-580"];
m1_269 [cluster="string.SafeLength()", file="HelpText.cs", label="Entry string.SafeLength()", span="50-50"];
m1_139 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m1_140 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="return AddLine(postOptionsHelp, value);", span="335-335"];
m1_141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
m1_271 [cluster="string.IsNullOrEmpty(string)", file="HelpText.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m1_474 [cluster="string.ToLowerInvariant()", file="HelpText.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m1_426 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="839-839"];
m1_437 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="853-853"];
m1_442 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=AddDashesToOption, span="862-862"];
m1_436 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="852-852"];
m1_438 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="++specLength", span="854-854"];
m1_439 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="856-856"];
m1_441 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += spec.LongName.Length", span="861-861"];
m1_443 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="863-863"];
m1_444 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += metaLength", span="865-865"];
m1_429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var specLength = 0", span="841-841"];
m1_430 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasShort = spec.ShortName.Length > 0", span="843-843"];
m1_431 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var hasLong = spec.LongName.Length > 0", span="844-844"];
m1_433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="847-847"];
m1_434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="848-848"];
m1_435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasShort, span="850-850"];
m1_432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="var metaLength = 0", span="846-846"];
m1_440 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label=hasLong, span="859-859"];
m1_446 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="specLength += 2", span="869-869"];
m1_447 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return specLength;", span="871-871"];
m1_445 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="hasShort && hasLong", span="868-868"];
m1_448 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="839-839"];
m1_258 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="HelpText.cs", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
m1_325 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="664-671"];
m1_187 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="662-662"];
m1_326 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="662-662"];
m1_255 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
m1_381 [cluster="string.Trim()", file="HelpText.cs", label="Entry string.Trim()", span="0-0"];
m1_270 [cluster="System.Text.StringBuilder.SafeLength()", file="HelpText.cs", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
m1_327 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="HelpText.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="43-43"];
m1_380 [cluster="string.FormatInvariant(params object[])", file="HelpText.cs", label="Entry string.FormatInvariant(params object[])", span="25-25"];
m1_23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="HelpText.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m1_298 [cluster="string.Substring(int)", file="HelpText.cs", label="Entry string.Substring(int)", span="0-0"];
m1_200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m1_201 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", color=green, community=0, file="HelpText.cs", label="0: return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466"];
m1_202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
m1_314 [cluster="System.Type.GetUsageData()", file="HelpText.cs", label="Entry System.Type.GetUsageData()", span="38-38"];
m1_401 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
m1_59 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m1_323 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="HelpText.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m1_130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m1_205 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="483-483"];
m1_204 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="parserResult == null", span="483-483"];
m1_208 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield break;", span="488-488"];
m1_211 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line.ToString();", span="495-495"];
m1_216 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="yield return line;", span="506-506"];
m1_206 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var meaningfulErrors =\r\n                ((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes()", span="485-486"];
m1_210 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494"];
m1_212 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500"];
m1_213 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="mutuallyErrs.Length > 0", span="501-501"];
m1_215 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label=lines, span="505-505"];
m1_207 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors.Empty()", span="487-487"];
m1_209 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491"];
m1_214 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504"];
m1_217 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
m1_51 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="HelpText.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m1_340 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="719-719"];
m1_348 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(''  '')", span="721-721"];
m1_349 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="722-726"];
m1_350 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="728-730"];
m1_352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="734-734"];
m1_363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i])", span="753-753"];
m1_366 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append('' '')", span="757-757"];
m1_369 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="763-763"];
m1_373 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="772-773"];
m1_375 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="778-781"];
m1_376 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="return this;", span="783-783"];
m1_353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="735-735"];
m1_351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var optionHelpText = specification.HelpText", span="732-732"];
m1_354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="737-738"];
m1_362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="751-751"];
m1_359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var words = optionHelpText.Split(' ')", span="748-748"];
m1_360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var i = 0", span="749-749"];
m1_364 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="754-754"];
m1_365 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="755-755"];
m1_367 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer++", span="758-758"];
m1_368 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="761-761"];
m1_370 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="wordBuffer = widthOfHelpText", span="764-764"];
m1_372 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="771-771"];
m1_374 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText.Length > widthOfHelpText", span="775-775"];
m1_356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="741-741"];
m1_357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="!string.IsNullOrEmpty(optionHelpText)", span="743-743"];
m1_355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="specification.Required", span="740-740"];
m1_358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="var wordBuffer = 0", span="747-747"];
m1_361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i < words.Length", span="749-749"];
m1_371 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="i++", span="749-749"];
m1_377 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="719-719"];
m1_344 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="702-702"];
m1_343 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="704-709"];
m1_306 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="702-702"];
m1_403 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
m1_131 [cluster="string.Concat(string, string)", file="HelpText.cs", label="Entry string.Concat(string, string)", span="0-0"];
m1_96 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="270-270"];
m1_261 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="565-570"];
m1_262 [cluster="lambda expression", file="HelpText.cs", label="config.PreferShortName = s.PreferShortName", span="567-567"];
m1_263 [cluster="lambda expression", file="HelpText.cs", label="config.GroupSwitches = s.GroupSwitches", span="568-568"];
m1_264 [cluster="lambda expression", file="HelpText.cs", label="config.UseEqualToken = s.UseEqualToken", span="569-569"];
m1_148 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="345-345"];
m1_155 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="356-356"];
m1_164 [cluster="lambda expression", file="HelpText.cs", label="AddPreOptionsLine(line)", span="368-368"];
m1_172 [cluster="lambda expression", file="HelpText.cs", label="AddPostOptionsLine(line)", span="380-380"];
m1_338 [cluster="lambda expression", file="HelpText.cs", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="687-687"];
m1_384 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="725-725"];
m1_388 [cluster="lambda expression", file="HelpText.cs", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="726-726"];
m1_399 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="792-796"];
m1_405 [cluster="lambda expression", file="HelpText.cs", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="799-802"];
m1_423 [cluster="lambda expression", file="HelpText.cs", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="830-832"];
m1_265 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="565-570"];
m1_147 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="345-345"];
m1_149 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="345-345"];
m1_154 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="356-356"];
m1_156 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="356-356"];
m1_163 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="368-368"];
m1_165 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="368-368"];
m1_171 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="380-380"];
m1_173 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="380-380"];
m1_337 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="686-687"];
m1_339 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="686-687"];
m1_383 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="725-725"];
m1_387 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="726-726"];
m1_385 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="725-725"];
m1_389 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="726-726"];
m1_398 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="792-796"];
m1_404 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="799-802"];
m1_400 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="792-796"];
m1_406 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="799-802"];
m1_422 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="828-835"];
m1_424 [cluster="lambda expression", file="HelpText.cs", label="return Math.Max(length, specLength);", span="834-834"];
m1_409 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="811-811"];
m1_413 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="812-812"];
m1_70 [cluster="lambda expression", file="HelpText.cs", label="auto.AddPreOptionsLines(lines)", span="236-236"];
m1_309 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="642-642"];
m1_410 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="811-811"];
m1_414 [cluster="lambda expression", file="HelpText.cs", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="812-812"];
m1_391 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="738-738"];
m1_392 [cluster="lambda expression", file="HelpText.cs", label="optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="738-738"];
m1_425 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="828-835"];
m1_63 [cluster="lambda expression", file="HelpText.cs", label="license.AddToHelpText(auto, true)", span="220-220"];
m1_67 [cluster="lambda expression", file="HelpText.cs", label="usage.AddToHelpText(auto, true)", span="233-233"];
m1_100 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271"];
m1_113 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(parserResult, current)", span="277-277"];
m1_107 [cluster="lambda expression", file="HelpText.cs", label="DefaultParsingErrorsHandler(pr, current)", span="276-276"];
m1_224 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="491-491"];
m1_69 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="236-236"];
m1_411 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="811-811"];
m1_415 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="812-812"];
m1_71 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="236-236"];
m1_311 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="642-642"];
m1_310 [cluster="lambda expression", file="HelpText.cs", label="v.Index", span="642-642"];
m1_393 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="738-738"];
m1_73 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="239-239"];
m1_62 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="220-220"];
m1_64 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="220-220"];
m1_66 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="233-233"];
m1_68 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="233-233"];
m1_99 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="271-271"];
m1_101 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="271-271"];
m1_112 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="277-277"];
m1_114 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="277-277"];
m1_106 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="276-276"];
m1_108 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="276-276"];
m1_226 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="491-491"];
m1_225 [cluster="lambda expression", file="HelpText.cs", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491"];
m1_231 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="518-518"];
m1_103 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="271-271"];
m1_109 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="276-276"];
m1_115 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="277-277"];
m1_316 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="651-659"];
m1_93 [cluster="lambda expression", file="HelpText.cs", label="Entry lambda expression", span="267-267"];
m1_75 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="239-239"];
m1_74 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.NoVerbSelectedError", span="239-239"];
m1_233 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="518-518"];
m1_232 [cluster="lambda expression", file="HelpText.cs", label=example, span="518-518"];
m1_105 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="271-271"];
m1_104 [cluster="lambda expression", file="HelpText.cs", label=e, span="271-271"];
m1_111 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="276-276"];
m1_110 [cluster="lambda expression", file="HelpText.cs", label=e, span="276-276"];
m1_117 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="277-277"];
m1_116 [cluster="lambda expression", file="HelpText.cs", label=e, span="277-277"];
m1_321 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="651-659"];
m1_317 [cluster="lambda expression", file="HelpText.cs", label="var prop = tuple.Item1", span="653-653"];
m1_318 [cluster="lambda expression", file="HelpText.cs", label="var attr = tuple.Item2", span="654-654"];
m1_95 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="267-267"];
m1_94 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
m1_97 [cluster="lambda expression", file="HelpText.cs", label="e.Tag == ErrorType.HelpVerbRequestedError", span="270-270"];
m1_320 [cluster="lambda expression", file="HelpText.cs", label="return Tuple.Create(attr, examples);", span="658-658"];
m1_319 [cluster="lambda expression", file="HelpText.cs", label="var examples = (IEnumerable<Example>)prop.GetGetMethod().Invoke(null, null)", span="656-656"];
m1_98 [cluster="lambda expression", file="HelpText.cs", label="Exit lambda expression", span="270-270"];
m1_397 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m1_88 [cluster="System.ArgumentException.ArgumentException(string, string)", file="HelpText.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m1_386 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="786-786"];
m1_395 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="788-803"];
m1_396 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="786-786"];
m1_473 [cluster="T.ToStringLocal<T>()", file="HelpText.cs", label="Entry T.ToStringLocal<T>()", span="20-20"];
m1_4 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m1_5 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m1_329 [cluster="Unk.Concat", file="HelpText.cs", label="Entry Unk.Concat", span=""];
m1_476 [cluster="System.Text.StringBuilder.ToString(int, int)", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0"];
m1_76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m1_81 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268"];
m1_84 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273"];
m1_83 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271"];
m1_86 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277"];
m1_80 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
m1_79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
m1_82 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270"];
m1_85 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274"];
m1_78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263"];
m1_77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="parserResult.Tag != ParserResultType.NotParsed", span="262-262"];
m1_87 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
m1_220 [cluster="int.Spaces()", file="HelpText.cs", label="Entry int.Spaces()", span="35-35"];
m1_65 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="HelpText.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m1_223 [cluster="System.Text.StringBuilder.ToString()", file="HelpText.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_254 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
m1_475 [cluster="System.Text.StringBuilder.StringBuilder()", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m1_166 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m1_168 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="380-380"];
m1_169 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="return this;", span="381-381"];
m1_167 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379"];
m1_170 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
m1_60 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m1_184 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413"];
m1_181 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentNullException(''types'');", span="407-407"];
m1_182 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="408-408"];
m1_180 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="types == null", span="407-407"];
m1_183 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="408-408"];
m1_185 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
m1_253 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m1_312 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop.GetGetMethod().Invoke(null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="650-659"];
m1_313 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
m1_162 [cluster="string.Split(string[], System.StringSplitOptions)", file="HelpText.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_203 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
m1_227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m1_228 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="return RenderUsageText(parserResult, example => example);", span="518-518"];
m1_229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
m1_146 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
m1_295 [cluster="string.Split(params char[])", file="HelpText.cs", label="Entry string.Split(params char[])", span="0-0"];
m1_24 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m1_328 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="HelpText.cs", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
m1_394 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="894-894"];
m1_470 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="908-910"];
m1_469 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label=asEnumerable, span="907-907"];
m1_468 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="var builder = new StringBuilder()", span="906-906"];
m1_465 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="var asEnumerable = value as IEnumerable", span="902-902"];
m1_471 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return builder.Length > 0\r\n                ? builder.ToString(0, builder.Length - 1)\r\n                : string.Empty;", span="912-914"];
m1_466 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="asEnumerable == null", span="903-903"];
m1_462 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return value.ToStringLocal().ToLowerInvariant();", span="897-897"];
m1_464 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return value.ToStringLocal();", span="900-900"];
m1_467 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="return value.ToStringLocal();", span="904-904"];
m1_463 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="value is string", span="899-899"];
m1_461 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="value is bool", span="896-896"];
m1_472 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="894-894"];
m1_25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m1_36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227"];
m1_34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223"];
m1_26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207"];
m1_31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto = onError(auto)", span="216-216"];
m1_35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageAttr.IsJust() || usageLines.IsJust()", span="225-225"];
m1_37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="heading.Length > 0", span="228-228"];
m1_38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddPreOptionsLine(heading)", span="229-229"];
m1_33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222"];
m1_40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236"];
m1_44 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddOptions(parserResult)", span="245-245"];
m1_43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242"];
m1_41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239"];
m1_30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="errors.OnlyMeaningfulOnes().Any()", span="215-215"];
m1_27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="var errors = Enumerable.Empty<Error>()", span="209-209"];
m1_32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
m1_39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233"];
m1_42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="auto.AddDashesToOption = false", span="241-241"];
m1_45 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="return auto;", span="247-247"];
m1_28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211"];
m1_29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213"];
m1_46 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
m1_50 [cluster="System.Func<T, TResult>.Invoke(T)", file="HelpText.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m1_47 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpText.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_218 [cluster="Unk.Where", file="HelpText.cs", label="Entry Unk.Where", span=""];
m1_91 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpText.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m1_256 [cluster="Unk.GetAssemblyName", file="HelpText.cs", label="Entry Unk.GetAssemblyName", span=""];
m1_382 [cluster="string.String(char, int)", file="HelpText.cs", label="Entry string.String(char, int)", span="0-0"];
m1_297 [cluster="System.Math.Min(int, int)", file="HelpText.cs", label="Entry System.Math.Min(int, int)", span="0-0"];
m1_322 [cluster="System.Reflection.PropertyInfo.GetGetMethod()", file="HelpText.cs", label="Entry System.Reflection.PropertyInfo.GetGetMethod()", span="0-0"];
m1_308 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
m1_412 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="HelpText.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
m1_259 [cluster="Unk.Append", file="HelpText.cs", label="Entry Unk.Append", span=""];
m1_54 [cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331"];
m1_179 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="674-674"];
m1_330 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var maxLength = GetMaxLength(specifications)", span="679-679"];
m1_331 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="681-681"];
m1_333 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="685-687"];
m1_334 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="return this;", span="689-689"];
m1_332 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="var remainingSpace = maximumLength - (maxLength + 6)", span="683-683"];
m1_335 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="674-674"];
m1_222 [cluster="System.Text.StringBuilder.Append(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_132 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m1_133 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="return info.ToString();", span="313-313"];
m1_134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
m1_138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="712-712"];
m1_345 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="AddLine(preOptionsHelp, value, maximumLength)", span="714-714"];
m1_346 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="return this;", span="716-716"];
m1_347 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="712-712"];
m1_142 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="818-818"];
m1_416 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="AddLine(builder, value, MaximumDisplayWidth)", span="820-820"];
m1_417 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="return this;", span="822-822"];
m1_418 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="818-818"];
m1_178 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m1_300 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="637-639"];
m1_299 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="636-636"];
m1_301 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="640-642"];
m1_302 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="643-645"];
m1_303 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
m1_274 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m1_281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i])", span="609-609"];
m1_284 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append('' '')", span="613-613"];
m1_287 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(words[i].Substring(0, maximumLength))", span="619-619"];
m1_293 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.Append(value)", span="631-631"];
m1_277 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var words = value.Split(' ')", span="604-604"];
m1_280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length < (maximumLength - wordBuffer)", span="607-607"];
m1_278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var i = 0", span="605-605"];
m1_282 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer += words[i].Length", span="610-610"];
m1_283 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="611-611"];
m1_285 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer++", span="614-614"];
m1_286 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="words[i].Length >= maximumLength && wordBuffer == 0", span="617-617"];
m1_288 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="wordBuffer = maximumLength", span="620-620"];
m1_290 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="626-626"];
m1_292 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="value.Length > maximumLength", span="629-629"];
m1_275 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="600-600"];
m1_291 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="627-627"];
m1_276 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="var wordBuffer = 0", span="603-603"];
m1_279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i < words.Length", span="605-605"];
m1_289 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="i++", span="605-605"];
m1_294 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
m1_10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m1_17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
m1_18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
m1_19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.sentenceBuilder = sentenceBuilder", span="104-104"];
m1_20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.heading = heading", span="105-105"];
m1_21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="this.copyright = copyright", span="106-106"];
m1_12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
m1_14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''heading'');", span="98-98"];
m1_16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="throw new ArgumentNullException(''copyright'');", span="99-99"];
m1_15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="copyright == null", span="99-99"];
m1_11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="sentenceBuilder == null", span="97-97"];
m1_13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="heading == null", span="98-98"];
m1_22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
m1_390 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="806-806"];
m1_407 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="808-815"];
m1_408 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="806-806"];
m1_72 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m1_143 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="345-345"];
m1_144 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="346-346"];
m1_145 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
m1_428 [cluster="System.Math.Max(int, int)", file="HelpText.cs", label="Entry System.Math.Max(int, int)", span="0-0"];
m1_221 [cluster="Unk.formatError", file="HelpText.cs", label="Entry Unk.formatError", span=""];
m1_336 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="825-825"];
m1_419 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="827-835"];
m1_420 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="825-825"];
m1_378 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="HelpText.cs", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m1_186 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="HelpText.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m1_342 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="692-692"];
m1_341 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="694-699"];
m1_305 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="692-692"];
m1_296 [cluster="string.Substring(int, int)", file="HelpText.cs", label="Entry string.Substring(int, int)", span="0-0"];
m1_188 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m1_191 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429"];
m1_190 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="throw new ArgumentNullException(''result'');", span="424-424"];
m1_189 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="result == null", span="424-424"];
m1_192 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
m1_427 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="874-874"];
m1_449 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var specLength = 0", span="876-876"];
m1_450 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var hasMeta = spec.MetaName.Length > 0", span="878-878"];
m1_452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="spec.MetaValue.Length > 0", span="881-881"];
m1_453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="metaLength = spec.MetaValue.Length + 1", span="882-882"];
m1_455 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="885-885"];
m1_456 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="887-887"];
m1_458 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="return specLength;", span="891-891"];
m1_451 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="var metaLength = 0", span="880-880"];
m1_454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label=hasMeta, span="884-884"];
m1_457 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="specLength += metaLength", span="889-889"];
m1_459 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="874-874"];
m1_57 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m1_136 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324"];
m1_137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
m1_315 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
m1_304 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="HelpText.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m1_56 [cluster="System.Func<TResult>.Invoke()", file="HelpText.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m1_49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m1_193 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m1_194 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=green, community=0, file="HelpText.cs", label="0: types == null", span="441-441"];
m1_195 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=green, community=0, file="HelpText.cs", label="0: throw new ArgumentNullException(''types'');", span="441-441"];
m1_196 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="types.Length == 0", span="442-442"];
m1_198 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", color=green, community=0, file="HelpText.cs", label="0: return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447"];
m1_197 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="442-442"];
m1_199 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
m1_150 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m1_151 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="lines.ForEach(line => AddPostOptionsLine(line))", span="356-356"];
m1_152 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="return this;", span="357-357"];
m1_153 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
m1_52 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m1_157 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m1_159 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="lines.ForEach(line => AddPreOptionsLine(line))", span="368-368"];
m1_160 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="return this;", span="369-369"];
m1_158 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367"];
m1_161 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
m1_230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m1_234 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530"];
m1_235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
m1_53 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m1_247 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=green, community=0, file="HelpText.cs", label="0: yield return exampleText.ToString();", span="557-557"];
m1_246 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556"];
m1_248 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=green, community=0, file="HelpText.cs", label="0: var styles = example.GetFormatStylesOrDefault()", span="558-558"];
m1_250 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=green, community=0, file="HelpText.cs", label="0: var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570"];
m1_245 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var example = mapperFunc(e)", span="554-554"];
m1_243 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550"];
m1_249 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", color=green, community=0, file="HelpText.cs", label="0: styles", span="559-559"];
m1_251 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield return commandLine.ToString();", span="571-571"];
m1_244 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label=examples, span="552-552"];
m1_237 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="throw new ArgumentNullException(''parserResult'');", span="542-542"];
m1_236 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="parserResult == null", span="542-542"];
m1_240 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="yield break;", span="546-546"];
m1_238 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544"];
m1_241 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var usageTuple = usage.FromJustOrFail()", span="548-548"];
m1_242 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="var examples = usageTuple.Item2", span="549-549"];
m1_239 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="usage.MatchNothing()", span="545-545"];
m1_252 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="HelpText.cs", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
m1_421 [cluster="Unk.Aggregate", file="HelpText.cs", label="Entry Unk.Aggregate", span=""];
m1_260 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="HelpText.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m1_219 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="HelpText.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m1_89 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="HelpText.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m1_55 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="HelpText.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
m1_307 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpText.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m1_477 [file="HelpText.cs", label="CommandLine.Text.HelpText", span=""];
m1_481 [file="HelpText.cs", label=s, span=""];
m1_482 [file="HelpText.cs", label=string, span=""];
m1_483 [file="HelpText.cs", label=maxLength, span=""];
m1_484 [file="HelpText.cs", label=remainingSpace, span=""];
m1_485 [file="HelpText.cs", label=int, span=""];
m1_486 [file="HelpText.cs", label="CommandLine.Core.Specification", span=""];
m1_488 [file="HelpText.cs", label="CommandLine.Core.OptionSpecification", span=""];
m1_478 [file="HelpText.cs", label=auto, span=""];
m1_489 [file="HelpText.cs", label="CommandLine.Core.ValueSpecification", span=""];
m1_487 [file="HelpText.cs", label=optionHelpText, span=""];
m1_479 [file="HelpText.cs", label="CommandLine.ParserResult<T>", span=""];
m1_480 [file="HelpText.cs", label=pr, span=""];
m2_32 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="28-28"];
m2_40 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m2_117 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m2_142 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m2_119 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="171-171"];
m2_120 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="173-174"];
m2_121 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="171-171"];
m2_81 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="139-139"];
m2_82 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="141-141"];
m2_83 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="142-142"];
m2_85 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="145-145"];
m2_87 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="148-148"];
m2_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="151-151"];
m2_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="153-153"];
m2_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="154-154"];
m2_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="157-157"];
m2_84 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="144-144"];
m2_86 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="147-147"];
m2_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="149-150"];
m2_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="152-152"];
m2_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="139-139"];
m2_98 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m2_39 [cluster="Unk.Any", file="UnParserExtensions.cs", label="Entry Unk.Any", span=""];
m2_35 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="209-209"];
m2_100 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_130 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="185-185"];
m2_131 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="187-189"];
m2_132 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken, ''='', '' '')\r\n                    .ToString();", span="190-195"];
m2_133 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="185-185"];
m2_144 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="209-209"];
m2_145 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="211-211"];
m2_147 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="212-212"];
m2_149 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="213-213"];
m2_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="214-214"];
m2_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="215-215"];
m2_146 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="211-211"];
m2_148 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="212-212"];
m2_150 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="213-213"];
m2_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="214-214"];
m2_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="215-215"];
m2_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="216-216"];
m2_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="209-209"];
m2_37 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m2_135 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m2_46 [cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m2_113 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m2_34 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
m2_66 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m2_108 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m2_112 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m2_30 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m2_122 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="174-174"];
m2_4 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="65-65"];
m2_5 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="65-65"];
m2_55 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="94-95"];
m2_74 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' ')", span="129-129"];
m2_51 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="89-89"];
m2_50 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="89-89"];
m2_54 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="94-95"];
m2_60 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="100-100"];
m2_64 [cluster="lambda expression", file="UnParserExtensions.cs", label="!shortSwitches.Contains(info)", span="114-114"];
m2_63 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="114-114"];
m2_67 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="117-117"];
m2_70 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="124-124"];
m2_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="133-133"];
m2_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="129-129"];
m2_77 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="133-133"];
m2_52 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="89-89"];
m2_56 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="94-95"];
m2_61 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="100-100"];
m2_62 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="100-100"];
m2_65 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="114-114"];
m2_68 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="117-117"];
m2_69 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="117-117"];
m2_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="((OptionSpecification)info.Specification).ShortName", span="124-124"];
m2_72 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="124-124"];
m2_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="129-129"];
m2_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="133-133"];
m2_103 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="150-150"];
m2_102 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="149-150"];
m2_104 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="149-150"];
m2_110 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="163-163"];
m2_115 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="167-168"];
m2_114 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="167-168"];
m2_109 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="162-163"];
m2_111 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="162-163"];
m2_116 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="167-168"];
m2_123 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="174-174"];
m2_124 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="174-174"];
m2_129 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m2_49 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m2_101 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m2_141 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m2_45 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m2_53 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m2_41 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m2_157 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="131-131"];
m2_80 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m2_36 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m2_76 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m2_38 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m2_143 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m2_118 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m2_59 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="198-198"];
m2_33 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m2_48 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m2_97 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="171-171"];
m2_44 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m2_128 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="185-185"];
m2_95 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="160-160"];
m2_105 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="162-163"];
m2_106 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="165-168"];
m2_107 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="160-160"];
m2_47 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m2_96 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m2_43 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m2_3 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="77-77"];
m2_134 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m2_31 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m2_28 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m2_158 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m2_99 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m2_6 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="77-77"];
m2_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="options == null", span="79-79"];
m2_10 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="configuration(settings)", span="82-82"];
m2_12 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="85-85"];
m2_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="91-98"];
m2_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="79-79"];
m2_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var settings = new UnParserSettings()", span="81-81"];
m2_11 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="settings.Consumed = true", span="83-83"];
m2_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="113-115"];
m2_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="122-125"];
m2_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings)).Append(' '))", span="128-129"];
m2_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="86-86"];
m2_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="88-89"];
m2_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="100-104"];
m2_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="117-120"];
m2_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="106-111"];
m2_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="126-127"];
m2_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="130-131"];
m2_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="132-133"];
m2_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="135-136"];
m2_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="77-77"];
m2_42 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m2_125 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="177-177"];
m2_126 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="179-182"];
m2_127 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="177-177"];
m2_57 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m2_27 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m2_0 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="63-63"];
m2_1 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="return parser.FormatCommandLine(options, config => {});", span="65-65"];
m2_2 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="63-63"];
m2_58 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m2_136 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="198-198"];
m2_137 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="200-202"];
m2_138 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="204-204"];
m2_139 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="206-206"];
m2_140 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="198-198"];
m2_159 [file="UnParserExtensions.cs", label=builder, span=""];
m2_160 [file="UnParserExtensions.cs", label=T, span=""];
m2_161 [file="UnParserExtensions.cs", label=shortSwitches, span=""];
m2_162 [file="UnParserExtensions.cs", label=settings, span=""];
m2_163 [file="UnParserExtensions.cs", label=sep, span=""];
m2_164 [file="UnParserExtensions.cs", label=doubQt, span=""];
m3_0 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", file="UsageAttribute.cs", label="Entry CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", span="12-12"];
m3_1 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", color=red, community=0, file="UsageAttribute.cs", label="1: this.groups = groups", span="14-14"];
m3_2 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", file="UsageAttribute.cs", label="Exit CommandLine.Text.UsageAttribute.UsageAttribute(System.Collections.Generic.IDictionary<string, string>)", span="12-12"];
m3_3 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="UsageAttribute.cs", label="Entry CommandLine.Text.UsageAttribute.UsageAttribute()", span="17-17"];
m3_4 [cluster="CommandLine.Text.UsageAttribute.UsageAttribute()", file="UsageAttribute.cs", label="Exit CommandLine.Text.UsageAttribute.UsageAttribute()", span="17-17"];
m3_5 [file="UsageAttribute.cs", label="CommandLine.Text.UsageAttribute", span=""];
n70 -> n42  [color=red, key=1, label=reader, style=dashed];
n70 -> n47  [color=darkseagreen4, key=1, label=reader, style=dashed];
n71 -> n42  [color=red, key=1, label=header, style=dashed];
n71 -> n47  [color=darkseagreen4, key=1, label=header, style=dashed];
n0 -> n1  [color=red, key=0, style=solid];
n0 -> n4  [color=red, key=1, label="string[]", style=dashed];
n1 -> n2  [color=red, key=0, style=solid];
n1 -> n16  [color=red, key=1, label="ReadText.Demo.IOptions", style=dashed];
n1 -> n17  [color=red, key=1, label="ReadText.Demo.IOptions", style=dashed];
n1 -> n5  [color=red, key=1, label=reader, style=dashed];
n1 -> n42  [color=red, key=1, label=reader, style=dashed];
n1 -> n47  [color=red, key=1, label=reader, style=dashed];
n1 -> n1  [color=red, key=3, label="Local variable System.Func<ReadText.Demo.IOptions, string> reader", style=bold];
n4 -> n5  [color=red, key=0, style=solid];
n4 -> n10  [color=red, key=2, style=dotted];
n2 -> n3  [color=red, key=0, style=solid];
n2 -> n23  [color=red, key=1, label="ReadText.Demo.IOptions", style=dashed];
n2 -> n25  [color=red, key=1, label="ReadText.Demo.IOptions", style=dashed];
n2 -> n27  [color=red, key=1, label="ReadText.Demo.IOptions", style=dashed];
n2 -> n5  [color=red, key=1, label=header, style=dashed];
n2 -> n42  [color=red, key=1, label=header, style=dashed];
n2 -> n47  [color=red, key=1, label=header, style=dashed];
n2 -> n2  [color=red, key=3, label="Local variable System.Func<ReadText.Demo.IOptions, string> header", style=bold];
n16 -> n17  [color=red, key=0, style=solid];
n16 -> n19  [key=2, style=dotted];
n17 -> n18  [color=red, key=0, style=solid];
n17 -> n20  [color=red, key=2, style=dotted];
n17 -> n21  [color=red, key=2, style=dotted];
n5 -> n6  [color=red, key=0, style=solid];
n5 -> n11  [color=red, key=2, style=dotted];
n5 -> n41  [color=red, key=1, label="lambda expression", style=dashed];
n5 -> n46  [color=red, key=1, label="lambda expression", style=dashed];
n5 -> n49  [color=red, key=1, label="lambda expression", style=dashed];
n5 -> n7  [color=red, key=1, label=texts, style=dashed];
n5 -> n8  [color=red, key=1, label=texts, style=dashed];
n42 -> n43  [color=red, key=0, style=solid];
n42 -> n44  [color=red, key=2, style=dotted];
n42 -> n45  [color=red, key=2, style=dotted];
n47 -> n48  [key=0, style=solid];
n47 -> n44  [key=2, style=dotted];
n47 -> n45  [key=2, style=dotted];
n3 -> n4  [color=red, key=0, style=solid];
n3 -> n36  [color=red, key=1, label=string, style=dashed];
n3 -> n38  [color=red, key=1, label=string, style=dashed];
n3 -> n6  [color=red, key=1, label=printIfNotEmpty, style=dashed];
n3 -> n7  [color=red, key=1, label=printIfNotEmpty, style=dashed];
n3 -> n3  [color=red, key=3, label="Local variable System.Action<string> printIfNotEmpty", style=bold];
n23 -> n24  [key=0, style=solid];
n23 -> n25  [color=red, key=0, style=solid];
n25 -> n26  [color=red, key=0, style=solid];
n25 -> n19  [color=red, key=2, style=dotted];
n25 -> n28  [color=red, key=1, label=fromTop, style=dashed];
n27 -> n28  [key=0, style=solid];
n27 -> n32  [key=2, style=dotted];
n27 -> n33  [key=2, style=dotted];
n27 -> n27  [color=darkseagreen4, key=1, label=builder, style=dashed];
n36 -> n37  [color=red, key=0, style=solid];
n36 -> n38  [color=red, key=0, style=solid];
n38 -> n39  [color=red, key=0, style=solid];
n38 -> n40  [color=red, key=2, style=dotted];
n6 -> n7  [color=red, key=0, style=solid];
n6 -> n12  [key=2, style=dotted];
n7 -> n8  [color=red, key=0, style=solid];
n7 -> n12  [color=red, key=2, style=dotted];
n41 -> n42  [color=red, key=0, style=solid];
n46 -> n47  [key=0, style=solid];
n49 -> n50  [key=0, style=solid];
n8 -> n9  [key=0, style=solid];
n8 -> n13  [key=2, style=dotted];
n8 -> n14  [key=2, style=dotted];
n9 -> n0  [color=blue, key=0, style=bold];
n13 -> n68  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [color=red, key=1, label="ReadText.Demo.IOptions", style=dashed];
n18 -> n15  [color=blue, key=0, style=bold];
n20 -> n52  [color=red, key=0, style=solid];
n20 -> n53  [color=red, key=1, label=bool, style=dashed];
n20 -> n54  [color=red, key=1, label=int, style=dashed];
n20 -> n55  [color=red, key=1, label=int, style=dashed];
n20 -> n1  [color=red, key=3, label="Parameter variable bool fromTop", style=bold];
n21 -> n61  [key=0, style=solid];
n21 -> n62  [color=darkseagreen4, key=1, label=bool, style=dashed];
n21 -> n63  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n64  [color=darkseagreen4, key=1, label=int, style=dashed];
n21 -> n1  [color=red, key=3, label="Parameter variable bool fromTop", style=bold];
n22 -> n23  [key=0, style=solid];
n22 -> n25  [color=red, key=1, label="ReadText.Demo.IOptions", style=dashed];
n22 -> n27  [color=darkseagreen4, key=1, label="ReadText.Demo.IOptions", style=dashed];
n24 -> n30  [key=0, style=solid];
n26 -> n27  [key=0, style=solid];
n26 -> n31  [key=2, style=dotted];
n28 -> n29  [color=red, key=0, style=solid];
n28 -> n33  [key=2, style=dotted];
n28 -> n28  [color=darkseagreen4, key=1, label=builder, style=dashed];
n29 -> n30  [color=red, key=0, style=solid];
n29 -> n34  [color=red, key=2, style=dotted];
n30 -> n22  [color=blue, key=0, style=bold];
n35 -> n36  [color=red, key=0, style=solid];
n35 -> n38  [color=red, key=1, label=string, style=dashed];
n37 -> n39  [color=red, key=0, style=solid];
n39 -> n35  [color=blue, key=0, style=bold];
n43 -> n41  [color=blue, key=0, style=bold];
n48 -> n46  [color=blue, key=0, style=bold];
n50 -> n51  [key=0, style=solid];
n50 -> n13  [key=2, style=dotted];
n51 -> n49  [color=blue, key=0, style=bold];
n52 -> n53  [color=red, key=0, style=solid];
n52 -> n57  [color=red, key=2, style=dotted];
n52 -> n54  [color=red, key=1, label=lines, style=dashed];
n52 -> n55  [color=red, key=1, label=lines, style=dashed];
n53 -> n54  [color=red, key=0, style=solid];
n53 -> n55  [color=red, key=0, style=solid];
n54 -> n56  [color=red, key=0, style=solid];
n54 -> n58  [color=red, key=2, style=dotted];
n54 -> n59  [color=red, key=2, style=dotted];
n55 -> n56  [color=red, key=0, style=solid];
n55 -> n60  [color=red, key=2, style=dotted];
n55 -> n58  [color=red, key=2, style=dotted];
n55 -> n59  [color=red, key=2, style=dotted];
n56 -> n20  [color=blue, key=0, style=bold];
n61 -> n62  [key=0, style=solid];
n61 -> n66  [key=2, style=dotted];
n61 -> n63  [color=darkseagreen4, key=1, label=bytes, style=dashed];
n61 -> n64  [color=darkseagreen4, key=1, label=bytes, style=dashed];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=0, style=solid];
n63 -> n65  [key=0, style=solid];
n63 -> n67  [key=2, style=dotted];
n64 -> n65  [key=0, style=solid];
n64 -> n67  [key=2, style=dotted];
n65 -> n21  [color=blue, key=0, style=bold];
n68 -> n69  [key=0, style=solid];
n68 -> n45  [key=2, style=dotted];
n69 -> n13  [color=blue, key=0, style=bold];
d27 -> d28  [color=green, key=0, style=solid];
d27 -> d29  [color=green, key=2, style=dotted];
d41 -> d27  [color=green, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d32  [color=green, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d7  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d8  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d9  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d21  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d41 -> d22  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
d26 -> d27  [color=green, key=0, style=solid];
d28 -> d26  [color=blue, key=0, style=bold];
d32 -> d33  [color=green, key=0, style=solid];
d32 -> d34  [color=green, key=2, style=dotted];
d32 -> d35  [color=green, key=2, style=dotted];
d32 -> d25  [color=green, key=2, style=dotted];
d24 -> d32  [color=green, key=1, label="CommandLine.Text.Example", style=dashed];
d24 -> d30  [key=0, style=solid];
d24 -> d19  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.Example other", style=bold];
d24 -> d31  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d30 -> d32  [color=green, key=0, style=solid];
d30 -> d31  [key=0, style=solid];
d33 -> d24  [color=blue, key=0, style=bold];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d21 -> d24  [key=2, style=dotted];
d21 -> d23  [key=0, style=solid];
d22 -> d25  [key=2, style=dotted];
d22 -> d23  [key=0, style=solid];
d18 -> d24  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
d18 -> d22  [color=darkseagreen4, key=1, label=object, style=dashed];
d18 -> d19  [key=0, style=solid];
d19 -> d21  [color=darkseagreen4, key=1, label=other, style=dashed];
d19 -> d20  [key=0, style=solid];
d31 -> d33  [key=0, style=solid];
d0 -> d7  [color=darkseagreen4, key=1, label=string, style=dashed];
d0 -> d8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
d0 -> d9  [color=darkseagreen4, key=1, label=object, style=dashed];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
d0 -> d5  [color=darkseagreen4, key=1, label=object, style=dashed];
d5 -> d7  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d10 -> d0  [color=blue, key=0, style=bold];
d20 -> d21  [key=0, style=solid];
d20 -> d22  [key=0, style=solid];
d23 -> d18  [color=blue, key=0, style=bold];
d40 -> d0  [color=darkorchid, key=3, label="Field variable System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings> formatStyles", style=bold];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d1 -> d11  [key=2, style=dotted];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d6 -> d10  [key=0, style=solid];
d6 -> d13  [key=2, style=dotted];
d2 -> d10  [key=0, style=solid];
d2 -> d12  [key=2, style=dotted];
d4 -> d10  [key=0, style=solid];
d4 -> d13  [key=2, style=dotted];
d37 -> d40  [key=2, style=dotted];
d37 -> d38  [key=0, style=solid];
d37 -> d39  [key=2, style=dotted];
d36 -> d37  [key=0, style=solid];
d38 -> d36  [color=blue, key=0, style=bold];
m1_102 -> m1_127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_102 -> m1_124  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_102 -> m1_118  [key=0, style=solid];
m1_102 -> m1_120  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_102 -> m1_122  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_102 -> m1_123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_102 -> m1_126  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_127 -> m1_56  [key=2, style=dotted];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_131  [key=2, style=dotted];
m1_127 -> m1_57  [key=2, style=dotted];
m1_127 -> m1_72  [key=2, style=dotted];
m1_119 -> m1_23  [key=2, style=dotted];
m1_119 -> m1_128  [key=0, style=solid];
m1_121 -> m1_23  [key=2, style=dotted];
m1_121 -> m1_128  [key=0, style=solid];
m1_124 -> m1_130  [key=2, style=dotted];
m1_124 -> m1_127  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_124 -> m1_125  [key=0, style=solid];
m1_125 -> m1_127  [key=0, style=solid];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_129  [key=2, style=dotted];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_120  [key=0, style=solid];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=0, style=solid];
m1_122 -> m1_124  [key=0, style=solid];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_48  [key=2, style=dotted];
m1_122 -> m1_129  [key=2, style=dotted];
m1_123 -> m1_128  [key=0, style=solid];
m1_126 -> m1_128  [key=0, style=solid];
m1_128 -> m1_102  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_61 -> m1_176  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_61 -> m1_174  [key=0, style=solid];
m1_176 -> m1_56  [key=2, style=dotted];
m1_176 -> m1_179  [key=2, style=dotted];
m1_176 -> m1_177  [key=0, style=solid];
m1_176 -> m1_178  [key=2, style=dotted];
m1_175 -> m1_23  [key=2, style=dotted];
m1_175 -> m1_177  [key=0, style=solid];
m1_174 -> m1_176  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_177 -> m1_61  [color=blue, key=0, style=bold];
m1_135 -> m1_266  [key=0, style=solid];
m1_267 -> m1_223  [key=2, style=dotted];
m1_267 -> m1_222  [key=2, style=dotted];
m1_267 -> m1_268  [key=0, style=solid];
m1_267 -> m1_24  [key=2, style=dotted];
m1_267 -> m1_269  [key=2, style=dotted];
m1_267 -> m1_270  [key=2, style=dotted];
m1_267 -> m1_271  [key=2, style=dotted];
m1_267 -> m1_272  [key=2, style=dotted];
m1_267 -> m1_273  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_268 -> m1_135  [color=blue, key=0, style=bold];
m1_139 -> m1_140  [key=0, style=solid];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_142  [key=2, style=dotted];
m1_141 -> m1_139  [color=blue, key=0, style=bold];
m1_426 -> m1_429  [key=0, style=solid];
m1_426 -> m1_430  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_426 -> m1_431  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_426 -> m1_433  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_426 -> m1_434  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_426 -> m1_441  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_437 -> m1_438  [key=0, style=solid];
m1_437 -> m1_439  [key=0, style=solid];
m1_442 -> m1_443  [key=0, style=solid];
m1_442 -> m1_444  [key=0, style=solid];
m1_436 -> m1_437  [key=0, style=solid];
m1_436 -> m1_436  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_436 -> m1_438  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_436 -> m1_439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_438 -> m1_438  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_438 -> m1_439  [key=0, style=solid];
m1_439 -> m1_439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_439 -> m1_440  [key=0, style=solid];
m1_439 -> m1_441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_439 -> m1_446  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_439 -> m1_447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_441 -> m1_443  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_441 -> m1_444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_443 -> m1_443  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_443 -> m1_444  [key=0, style=solid];
m1_444 -> m1_444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_444 -> m1_445  [key=0, style=solid];
m1_444 -> m1_446  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_444 -> m1_447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_429 -> m1_436  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_429 -> m1_441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_429 -> m1_430  [key=0, style=solid];
m1_429 -> m1_446  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_429 -> m1_447  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_435  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m1_430 -> m1_445  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_440  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m1_431 -> m1_445  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_435  [key=0, style=solid];
m1_434 -> m1_439  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_434 -> m1_444  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_434 -> m1_435  [key=0, style=solid];
m1_435 -> m1_436  [key=0, style=solid];
m1_435 -> m1_440  [key=0, style=solid];
m1_432 -> m1_439  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_432 -> m1_444  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_432 -> m1_433  [key=0, style=solid];
m1_440 -> m1_441  [key=0, style=solid];
m1_440 -> m1_445  [key=0, style=solid];
m1_446 -> m1_446  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_446 -> m1_447  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_445 -> m1_446  [key=0, style=solid];
m1_445 -> m1_447  [key=0, style=solid];
m1_448 -> m1_426  [color=blue, key=0, style=bold];
m1_325 -> m1_325  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
m1_325 -> m1_326  [key=0, style=solid];
m1_325 -> m1_327  [key=2, style=dotted];
m1_325 -> m1_328  [key=2, style=dotted];
m1_325 -> m1_305  [key=2, style=dotted];
m1_325 -> m1_306  [key=2, style=dotted];
m1_325 -> m1_329  [key=2, style=dotted];
m1_187 -> m1_325  [key=0, style=solid];
m1_326 -> m1_187  [color=blue, key=0, style=bold];
m1_200 -> m1_201  [color=green, key=0, style=solid];
m1_201 -> m1_202  [color=green, key=0, style=solid];
m1_201 -> m1_130  [color=green, key=2, style=dotted];
m1_201 -> m1_203  [color=green, key=2, style=dotted];
m1_202 -> m1_200  [color=blue, key=0, style=bold];
m1_130 -> m1_204  [key=0, style=solid];
m1_130 -> m1_208  [color=crimson, key=0, style=bold];
m1_130 -> m1_211  [color=crimson, key=0, style=bold];
m1_130 -> m1_216  [color=crimson, key=0, style=bold];
m1_130 -> m1_206  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_130 -> m1_210  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
m1_130 -> m1_212  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
m1_205 -> m1_23  [key=2, style=dotted];
m1_205 -> m1_217  [key=0, style=solid];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_206  [key=0, style=solid];
m1_208 -> m1_209  [key=0, style=solid];
m1_211 -> m1_223  [key=2, style=dotted];
m1_211 -> m1_209  [key=0, style=solid];
m1_216 -> m1_215  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_48  [key=2, style=dotted];
m1_206 -> m1_209  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m1_206 -> m1_212  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
m1_210 -> m1_219  [key=2, style=dotted];
m1_210 -> m1_220  [key=2, style=dotted];
m1_210 -> m1_222  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_221  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_89  [key=2, style=dotted];
m1_212 -> m1_50  [key=2, style=dotted];
m1_212 -> m1_214  [color=darkseagreen4, key=1, label=mutuallyErrs, style=dashed];
m1_213 -> m1_217  [key=0, style=solid];
m1_213 -> m1_214  [key=0, style=solid];
m1_215 -> m1_217  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_209  [key=0, style=solid];
m1_207 -> m1_129  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_212  [key=0, style=solid];
m1_209 -> m1_218  [key=2, style=dotted];
m1_209 -> m1_224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_162  [key=2, style=dotted];
m1_217 -> m1_130  [color=blue, key=0, style=bold];
m1_340 -> m1_348  [key=0, style=solid];
m1_340 -> m1_349  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_384  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_388  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_350  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_352  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_340 -> m1_369  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_373  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_353  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_340 -> m1_351  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_340 -> m1_354  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_340 -> m1_355  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_340 -> m1_356  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_340 -> m1_362  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_365  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_368  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_370  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_340 -> m1_374  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_348 -> m1_222  [key=2, style=dotted];
m1_348 -> m1_349  [key=0, style=solid];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_24  [key=2, style=dotted];
m1_349 -> m1_378  [key=2, style=dotted];
m1_349 -> m1_383  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_349 -> m1_387  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_350 -> m1_223  [key=2, style=dotted];
m1_350 -> m1_222  [key=2, style=dotted];
m1_350 -> m1_351  [key=0, style=solid];
m1_350 -> m1_379  [key=2, style=dotted];
m1_352 -> m1_353  [key=0, style=solid];
m1_352 -> m1_354  [key=0, style=solid];
m1_352 -> m1_49  [key=2, style=dotted];
m1_363 -> m1_222  [key=2, style=dotted];
m1_363 -> m1_364  [key=0, style=solid];
m1_366 -> m1_222  [key=2, style=dotted];
m1_366 -> m1_367  [key=0, style=solid];
m1_369 -> m1_222  [key=2, style=dotted];
m1_369 -> m1_370  [key=0, style=solid];
m1_369 -> m1_296  [key=2, style=dotted];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_382  [key=2, style=dotted];
m1_373 -> m1_272  [key=2, style=dotted];
m1_375 -> m1_222  [key=2, style=dotted];
m1_375 -> m1_376  [key=0, style=solid];
m1_375 -> m1_272  [key=2, style=dotted];
m1_376 -> m1_377  [key=0, style=solid];
m1_353 -> m1_203  [key=2, style=dotted];
m1_353 -> m1_353  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_353 -> m1_354  [key=0, style=solid];
m1_351 -> m1_352  [key=0, style=solid];
m1_351 -> m1_353  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_351 -> m1_354  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_354 -> m1_375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_354 -> m1_355  [key=0, style=solid];
m1_354 -> m1_52  [key=2, style=dotted];
m1_354 -> m1_391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_354 -> m1_392  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_354 -> m1_356  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_354 -> m1_357  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_354 -> m1_359  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_354 -> m1_372  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_368  [key=0, style=solid];
m1_359 -> m1_363  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_359 -> m1_369  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_359 -> m1_362  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_359 -> m1_360  [key=0, style=solid];
m1_359 -> m1_295  [key=2, style=dotted];
m1_359 -> m1_361  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_359 -> m1_364  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_359 -> m1_365  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_359 -> m1_368  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_360 -> m1_363  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_360 -> m1_369  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_360 -> m1_362  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_364  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_360 -> m1_365  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_360 -> m1_368  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_360 -> m1_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_364 -> m1_364  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_367  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_364 -> m1_372  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_371  [key=0, style=solid];
m1_367 -> m1_367  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_367 -> m1_371  [key=0, style=solid];
m1_367 -> m1_372  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_368 -> m1_369  [key=0, style=solid];
m1_368 -> m1_372  [key=0, style=solid];
m1_370 -> m1_372  [key=0, style=solid];
m1_372 -> m1_373  [key=0, style=solid];
m1_372 -> m1_375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_372 -> m1_372  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_372 -> m1_297  [key=2, style=dotted];
m1_372 -> m1_298  [key=2, style=dotted];
m1_372 -> m1_381  [key=2, style=dotted];
m1_372 -> m1_374  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_374 -> m1_375  [key=0, style=solid];
m1_374 -> m1_357  [key=0, style=solid];
m1_356 -> m1_375  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_356 -> m1_359  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_356 -> m1_372  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_356 -> m1_356  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_356 -> m1_357  [key=0, style=solid];
m1_356 -> m1_380  [key=2, style=dotted];
m1_357 -> m1_375  [key=0, style=solid];
m1_357 -> m1_271  [key=2, style=dotted];
m1_357 -> m1_358  [key=0, style=solid];
m1_355 -> m1_356  [key=0, style=solid];
m1_355 -> m1_357  [key=0, style=solid];
m1_358 -> m1_362  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_358 -> m1_359  [key=0, style=solid];
m1_358 -> m1_364  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_358 -> m1_368  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_358 -> m1_372  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_372  [key=0, style=solid];
m1_371 -> m1_361  [key=0, style=solid];
m1_371 -> m1_371  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_377 -> m1_340  [color=blue, key=0, style=bold];
m1_344 -> m1_306  [color=blue, key=0, style=bold];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_50  [key=2, style=dotted];
m1_343 -> m1_328  [key=2, style=dotted];
m1_306 -> m1_343  [key=0, style=solid];
m1_96 -> m1_97  [key=0, style=solid];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_263  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
m1_261 -> m1_264  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
m1_262 -> m1_263  [key=0, style=solid];
m1_263 -> m1_264  [key=0, style=solid];
m1_264 -> m1_265  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_57  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_139  [key=2, style=dotted];
m1_164 -> m1_165  [key=0, style=solid];
m1_164 -> m1_57  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_139  [key=2, style=dotted];
m1_338 -> m1_339  [key=0, style=solid];
m1_338 -> m1_340  [key=2, style=dotted];
m1_384 -> m1_222  [key=2, style=dotted];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_386  [key=2, style=dotted];
m1_388 -> m1_222  [key=2, style=dotted];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_390  [key=2, style=dotted];
m1_399 -> m1_400  [key=0, style=solid];
m1_399 -> m1_401  [key=2, style=dotted];
m1_399 -> m1_402  [key=2, style=dotted];
m1_399 -> m1_403  [key=2, style=dotted];
m1_399 -> m1_272  [key=2, style=dotted];
m1_405 -> m1_406  [key=0, style=solid];
m1_405 -> m1_272  [key=2, style=dotted];
m1_405 -> m1_402  [key=2, style=dotted];
m1_405 -> m1_403  [key=2, style=dotted];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_426  [key=2, style=dotted];
m1_423 -> m1_427  [key=2, style=dotted];
m1_265 -> m1_261  [color=blue, key=0, style=bold];
m1_147 -> m1_148  [key=0, style=solid];
m1_149 -> m1_147  [color=blue, key=0, style=bold];
m1_154 -> m1_155  [key=0, style=solid];
m1_156 -> m1_154  [color=blue, key=0, style=bold];
m1_163 -> m1_164  [key=0, style=solid];
m1_165 -> m1_163  [color=blue, key=0, style=bold];
m1_171 -> m1_172  [key=0, style=solid];
m1_173 -> m1_171  [color=blue, key=0, style=bold];
m1_337 -> m1_338  [key=0, style=solid];
m1_339 -> m1_337  [color=blue, key=0, style=bold];
m1_383 -> m1_384  [key=0, style=solid];
m1_387 -> m1_388  [key=0, style=solid];
m1_385 -> m1_383  [color=blue, key=0, style=bold];
m1_389 -> m1_387  [color=blue, key=0, style=bold];
m1_398 -> m1_399  [key=0, style=solid];
m1_404 -> m1_405  [key=0, style=solid];
m1_400 -> m1_398  [color=blue, key=0, style=bold];
m1_406 -> m1_404  [color=blue, key=0, style=bold];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_424  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_428  [key=2, style=dotted];
m1_409 -> m1_410  [key=0, style=solid];
m1_413 -> m1_414  [key=0, style=solid];
m1_70 -> m1_72  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_412  [key=2, style=dotted];
m1_414 -> m1_402  [key=2, style=dotted];
m1_414 -> m1_415  [key=0, style=solid];
m1_391 -> m1_392  [key=0, style=solid];
m1_392 -> m1_392  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_392 -> m1_393  [key=0, style=solid];
m1_392 -> m1_394  [key=2, style=dotted];
m1_392 -> m1_380  [key=2, style=dotted];
m1_425 -> m1_422  [color=blue, key=0, style=bold];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_65  [key=2, style=dotted];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_65  [key=2, style=dotted];
m1_100 -> m1_102  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_113 -> m1_102  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_107 -> m1_102  [key=2, style=dotted];
m1_107 -> m1_108  [key=0, style=solid];
m1_224 -> m1_225  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_411 -> m1_409  [color=blue, key=0, style=bold];
m1_415 -> m1_413  [color=blue, key=0, style=bold];
m1_71 -> m1_69  [color=blue, key=0, style=bold];
m1_311 -> m1_309  [color=blue, key=0, style=bold];
m1_310 -> m1_311  [key=0, style=solid];
m1_393 -> m1_391  [color=blue, key=0, style=bold];
m1_73 -> m1_74  [key=0, style=solid];
m1_62 -> m1_63  [key=0, style=solid];
m1_64 -> m1_62  [color=blue, key=0, style=bold];
m1_66 -> m1_67  [key=0, style=solid];
m1_68 -> m1_66  [color=blue, key=0, style=bold];
m1_99 -> m1_100  [key=0, style=solid];
m1_101 -> m1_99  [color=blue, key=0, style=bold];
m1_112 -> m1_113  [key=0, style=solid];
m1_114 -> m1_112  [color=blue, key=0, style=bold];
m1_106 -> m1_107  [key=0, style=solid];
m1_108 -> m1_106  [color=blue, key=0, style=bold];
m1_226 -> m1_224  [color=blue, key=0, style=bold];
m1_225 -> m1_226  [key=0, style=solid];
m1_231 -> m1_232  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_109 -> m1_110  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_318  [color=darkseagreen4, key=1, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>", style=dashed];
m1_93 -> m1_94  [key=0, style=solid];
m1_75 -> m1_73  [color=blue, key=0, style=bold];
m1_74 -> m1_75  [key=0, style=solid];
m1_233 -> m1_231  [color=blue, key=0, style=bold];
m1_232 -> m1_233  [key=0, style=solid];
m1_105 -> m1_103  [color=blue, key=0, style=bold];
m1_104 -> m1_105  [key=0, style=solid];
m1_111 -> m1_109  [color=blue, key=0, style=bold];
m1_110 -> m1_111  [key=0, style=solid];
m1_117 -> m1_115  [color=blue, key=0, style=bold];
m1_116 -> m1_117  [key=0, style=solid];
m1_321 -> m1_316  [color=blue, key=0, style=bold];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_319  [color=darkseagreen4, key=1, label=prop, style=dashed];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_320  [color=darkseagreen4, key=1, label=attr, style=dashed];
m1_95 -> m1_93  [color=blue, key=0, style=bold];
m1_94 -> m1_95  [key=0, style=solid];
m1_97 -> m1_98  [key=0, style=solid];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> n45  [key=2, style=dotted];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_322  [key=2, style=dotted];
m1_319 -> m1_323  [key=2, style=dotted];
m1_98 -> m1_96  [color=blue, key=0, style=bold];
m1_386 -> m1_395  [key=0, style=solid];
m1_386 -> m1_399  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_386 -> m1_405  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_395 -> m1_223  [key=2, style=dotted];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_24  [key=2, style=dotted];
m1_395 -> m1_397  [key=2, style=dotted];
m1_395 -> m1_398  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_395 -> m1_404  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_396 -> m1_386  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [color=blue, key=0, style=bold];
m1_76 -> m1_100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_76 -> m1_113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_76 -> m1_83  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_76 -> m1_86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_76 -> m1_79  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_76 -> m1_77  [key=0, style=solid];
m1_81 -> m1_57  [key=2, style=dotted];
m1_81 -> m1_87  [key=0, style=solid];
m1_81 -> m1_4  [key=2, style=dotted];
m1_84 -> m1_89  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_90  [key=2, style=dotted];
m1_84 -> m1_86  [color=darkseagreen4, key=1, label=err, style=dashed];
m1_83 -> m1_25  [key=2, style=dotted];
m1_83 -> m1_87  [key=0, style=solid];
m1_83 -> m1_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_83 -> m1_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_86 -> m1_25  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_86 -> m1_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_86 -> m1_112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_86 -> m1_115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_80 -> m1_81  [key=0, style=solid];
m1_80 -> m1_82  [key=0, style=solid];
m1_80 -> m1_58  [key=2, style=dotted];
m1_80 -> m1_93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_79 -> m1_84  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_82  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_82 -> m1_84  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_58  [key=2, style=dotted];
m1_82 -> m1_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_85 -> m1_47  [key=2, style=dotted];
m1_85 -> m1_107  [color=darkseagreen4, key=1, label=pr, style=dashed];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_91  [key=2, style=dotted];
m1_85 -> m1_92  [key=2, style=dotted];
m1_78 -> m1_87  [key=0, style=solid];
m1_78 -> m1_88  [key=2, style=dotted];
m1_77 -> m1_79  [key=0, style=solid];
m1_77 -> m1_78  [key=0, style=solid];
m1_87 -> m1_76  [color=blue, key=0, style=bold];
m1_166 -> m1_167  [key=0, style=solid];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_146  [key=2, style=dotted];
m1_168 -> m1_171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_169 -> m1_170  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_162  [key=2, style=dotted];
m1_170 -> m1_166  [color=blue, key=0, style=bold];
m1_60 -> m1_184  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_60 -> m1_180  [key=0, style=solid];
m1_60 -> m1_182  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_184 -> m1_187  [key=2, style=dotted];
m1_184 -> m1_56  [key=2, style=dotted];
m1_184 -> m1_179  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_181 -> m1_23  [key=2, style=dotted];
m1_181 -> m1_185  [key=0, style=solid];
m1_182 -> m1_184  [key=0, style=solid];
m1_182 -> m1_183  [key=0, style=solid];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_182  [key=0, style=solid];
m1_183 -> m1_186  [key=2, style=dotted];
m1_183 -> m1_185  [key=0, style=solid];
m1_185 -> m1_60  [color=blue, key=0, style=bold];
m1_253 -> m1_312  [key=0, style=solid];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_314  [key=2, style=dotted];
m1_312 -> m1_315  [key=2, style=dotted];
m1_312 -> m1_316  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_313 -> m1_253  [color=blue, key=0, style=bold];
m1_227 -> m1_228  [key=0, style=solid];
m1_228 -> m1_230  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_229 -> m1_227  [color=blue, key=0, style=bold];
m1_394 -> m1_465  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_394 -> m1_462  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_394 -> m1_464  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_394 -> m1_467  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_394 -> m1_461  [key=0, style=solid];
m1_394 -> m1_463  [color=darkseagreen4, key=1, label=T, style=dashed];
m1_470 -> m1_222  [key=2, style=dotted];
m1_470 -> m1_469  [key=0, style=solid];
m1_470 -> m1_473  [key=2, style=dotted];
m1_469 -> m1_470  [key=0, style=solid];
m1_469 -> m1_471  [key=0, style=solid];
m1_468 -> m1_470  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_468 -> m1_469  [key=0, style=solid];
m1_468 -> m1_475  [key=2, style=dotted];
m1_468 -> m1_471  [color=darkseagreen4, key=1, label=builder, style=dashed];
m1_465 -> m1_469  [color=darkseagreen4, key=1, label=asEnumerable, style=dashed];
m1_465 -> m1_466  [key=0, style=solid];
m1_471 -> m1_472  [key=0, style=solid];
m1_471 -> m1_476  [key=2, style=dotted];
m1_466 -> m1_468  [key=0, style=solid];
m1_466 -> m1_467  [key=0, style=solid];
m1_462 -> m1_473  [key=2, style=dotted];
m1_462 -> m1_472  [key=0, style=solid];
m1_462 -> m1_474  [key=2, style=dotted];
m1_464 -> m1_473  [key=2, style=dotted];
m1_464 -> m1_472  [key=0, style=solid];
m1_467 -> m1_473  [key=2, style=dotted];
m1_467 -> m1_472  [key=0, style=solid];
m1_463 -> m1_465  [key=0, style=solid];
m1_463 -> m1_464  [key=0, style=solid];
m1_461 -> m1_462  [key=0, style=solid];
m1_461 -> m1_463  [key=0, style=solid];
m1_472 -> m1_394  [color=blue, key=0, style=bold];
m1_25 -> m1_34  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_31  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
m1_25 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_29  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_43  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_25 -> m1_44  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_36 -> m1_56  [key=2, style=dotted];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [color=darkseagreen4, key=1, label=heading, style=dashed];
m1_34 -> m1_53  [key=2, style=dotted];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_54  [key=2, style=dotted];
m1_34 -> m1_40  [color=darkseagreen4, key=1, label=usageLines, style=dashed];
m1_26 -> m1_36  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_0  [key=2, style=dotted];
m1_26 -> m1_31  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_32  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_42  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_43  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_44  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_26 -> m1_45  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_36  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_50  [key=2, style=dotted];
m1_31 -> m1_31  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_38  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_39  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_40  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_42  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_43  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_44  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_31 -> m1_45  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_35 -> m1_36  [key=0, style=solid];
m1_35 -> m1_39  [key=0, style=solid];
m1_35 -> m1_55  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_39  [key=0, style=solid];
m1_38 -> m1_57  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_35  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
m1_33 -> m1_51  [key=2, style=dotted];
m1_33 -> m1_39  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_52  [key=2, style=dotted];
m1_40 -> m1_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_44 -> m1_61  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_43 -> m1_60  [key=2, style=dotted];
m1_43 -> m1_45  [key=0, style=solid];
m1_43 -> m1_59  [key=2, style=dotted];
m1_41 -> m1_49  [key=2, style=dotted];
m1_41 -> m1_44  [key=0, style=solid];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_58  [key=2, style=dotted];
m1_41 -> m1_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_30 -> m1_49  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_48  [key=2, style=dotted];
m1_30 -> m1_32  [key=0, style=solid];
m1_27 -> m1_47  [key=2, style=dotted];
m1_27 -> m1_41  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_27 -> m1_28  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_52  [key=2, style=dotted];
m1_32 -> m1_51  [key=2, style=dotted];
m1_32 -> m1_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_52  [key=2, style=dotted];
m1_39 -> m1_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_42 -> m1_43  [key=0, style=solid];
m1_45 -> m1_46  [key=0, style=solid];
m1_28 -> m1_32  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_29 -> m1_41  [color=darkseagreen4, key=1, label=errors, style=dashed];
m1_29 -> m1_30  [key=0, style=solid];
m1_46 -> m1_25  [color=blue, key=0, style=bold];
m1_179 -> m1_330  [key=0, style=solid];
m1_179 -> m1_332  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_179 -> m1_333  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m1_179 -> m1_338  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_336  [key=2, style=dotted];
m1_330 -> m1_332  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_330 -> m1_333  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_330 -> m1_338  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_24  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_146  [key=2, style=dotted];
m1_333 -> m1_337  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_334 -> m1_335  [key=0, style=solid];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_338  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m1_335 -> m1_179  [color=blue, key=0, style=bold];
m1_132 -> m1_133  [key=0, style=solid];
m1_133 -> m1_135  [key=2, style=dotted];
m1_133 -> m1_134  [key=0, style=solid];
m1_134 -> m1_132  [color=blue, key=0, style=bold];
m1_138 -> m1_345  [key=0, style=solid];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_274  [key=2, style=dotted];
m1_346 -> m1_347  [key=0, style=solid];
m1_347 -> m1_138  [color=blue, key=0, style=bold];
m1_142 -> m1_416  [key=0, style=solid];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_274  [key=2, style=dotted];
m1_417 -> m1_418  [key=0, style=solid];
m1_418 -> m1_142  [color=blue, key=0, style=bold];
m1_178 -> m1_299  [key=0, style=solid];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_89  [key=2, style=dotted];
m1_300 -> m1_305  [key=2, style=dotted];
m1_300 -> m1_306  [key=2, style=dotted];
m1_300 -> m1_307  [key=2, style=dotted];
m1_300 -> m1_302  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_304  [key=2, style=dotted];
m1_299 -> m1_301  [color=darkseagreen4, key=1, label=specs, style=dashed];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_89  [key=2, style=dotted];
m1_301 -> m1_308  [key=2, style=dotted];
m1_301 -> m1_309  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_302 -> m1_307  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_47  [key=2, style=dotted];
m1_303 -> m1_178  [color=blue, key=0, style=bold];
m1_274 -> m1_281  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_274 -> m1_284  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_274 -> m1_287  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_274 -> m1_293  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_277  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_274 -> m1_280  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_274 -> m1_283  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_274 -> m1_286  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_274 -> m1_288  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_274 -> m1_290  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_274 -> m1_291  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m1_274 -> m1_292  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_281 -> m1_222  [key=2, style=dotted];
m1_281 -> m1_282  [key=0, style=solid];
m1_284 -> m1_222  [key=2, style=dotted];
m1_284 -> m1_285  [key=0, style=solid];
m1_287 -> m1_222  [key=2, style=dotted];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_296  [key=2, style=dotted];
m1_293 -> m1_222  [key=2, style=dotted];
m1_293 -> m1_294  [key=0, style=solid];
m1_277 -> m1_281  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_277 -> m1_287  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_277 -> m1_278  [key=0, style=solid];
m1_277 -> m1_295  [key=2, style=dotted];
m1_277 -> m1_279  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_277 -> m1_280  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_277 -> m1_282  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_277 -> m1_283  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_277 -> m1_286  [color=darkseagreen4, key=1, label=words, style=dashed];
m1_280 -> m1_281  [key=0, style=solid];
m1_280 -> m1_286  [key=0, style=solid];
m1_278 -> m1_281  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_287  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_280  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_279  [key=0, style=solid];
m1_278 -> m1_282  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_283  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_286  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_278 -> m1_289  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_282 -> m1_282  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_285  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_282 -> m1_290  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_289  [key=0, style=solid];
m1_285 -> m1_285  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_285 -> m1_289  [key=0, style=solid];
m1_285 -> m1_290  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_290  [key=0, style=solid];
m1_288 -> m1_290  [key=0, style=solid];
m1_290 -> m1_293  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_290 -> m1_290  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_297  [key=2, style=dotted];
m1_290 -> m1_298  [key=2, style=dotted];
m1_290 -> m1_292  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_292 -> m1_293  [key=0, style=solid];
m1_292 -> m1_275  [key=0, style=solid];
m1_275 -> m1_272  [key=2, style=dotted];
m1_275 -> m1_276  [key=0, style=solid];
m1_291 -> m1_272  [key=2, style=dotted];
m1_291 -> m1_292  [key=0, style=solid];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_280  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_276 -> m1_282  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_276 -> m1_286  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_276 -> m1_290  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
m1_279 -> m1_280  [key=0, style=solid];
m1_279 -> m1_290  [key=0, style=solid];
m1_289 -> m1_279  [key=0, style=solid];
m1_289 -> m1_289  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_294 -> m1_274  [color=blue, key=0, style=bold];
m1_10 -> m1_19  [color=darkseagreen4, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
m1_10 -> m1_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_10 -> m1_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_10 -> m1_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_24  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_24  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_12 -> m1_23  [key=2, style=dotted];
m1_12 -> m1_22  [key=0, style=solid];
m1_14 -> m1_23  [key=2, style=dotted];
m1_14 -> m1_22  [key=0, style=solid];
m1_16 -> m1_23  [key=2, style=dotted];
m1_16 -> m1_22  [key=0, style=solid];
m1_15 -> m1_17  [key=0, style=solid];
m1_15 -> m1_16  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [key=0, style=solid];
m1_22 -> m1_10  [color=blue, key=0, style=bold];
m1_390 -> m1_407  [key=0, style=solid];
m1_390 -> m1_410  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_390 -> m1_414  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_407 -> m1_223  [key=2, style=dotted];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_24  [key=2, style=dotted];
m1_407 -> m1_378  [key=2, style=dotted];
m1_407 -> m1_403  [key=2, style=dotted];
m1_407 -> m1_409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_407 -> m1_413  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_408 -> m1_390  [color=blue, key=0, style=bold];
m1_72 -> m1_143  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_146  [key=2, style=dotted];
m1_143 -> m1_147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_144 -> m1_145  [key=0, style=solid];
m1_145 -> m1_72  [color=blue, key=0, style=bold];
m1_336 -> m1_419  [key=0, style=solid];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_421  [key=2, style=dotted];
m1_419 -> m1_422  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_420 -> m1_336  [color=blue, key=0, style=bold];
m1_342 -> m1_305  [color=blue, key=0, style=bold];
m1_341 -> m1_342  [key=0, style=solid];
m1_341 -> m1_50  [key=2, style=dotted];
m1_341 -> m1_328  [key=2, style=dotted];
m1_305 -> m1_341  [key=0, style=solid];
m1_188 -> m1_191  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_188 -> m1_189  [key=0, style=solid];
m1_191 -> m1_56  [key=2, style=dotted];
m1_191 -> m1_179  [key=2, style=dotted];
m1_191 -> m1_192  [key=0, style=solid];
m1_191 -> m1_178  [key=2, style=dotted];
m1_190 -> m1_23  [key=2, style=dotted];
m1_190 -> m1_192  [key=0, style=solid];
m1_189 -> m1_191  [key=0, style=solid];
m1_189 -> m1_190  [key=0, style=solid];
m1_192 -> m1_188  [color=blue, key=0, style=bold];
m1_427 -> m1_449  [key=0, style=solid];
m1_427 -> m1_450  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_427 -> m1_452  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_427 -> m1_453  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_427 -> m1_455  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_427 -> m1_456  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_449 -> m1_450  [key=0, style=solid];
m1_449 -> m1_455  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_449 -> m1_456  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_454  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
m1_452 -> m1_453  [key=0, style=solid];
m1_452 -> m1_454  [key=0, style=solid];
m1_453 -> m1_454  [key=0, style=solid];
m1_453 -> m1_457  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_455 -> m1_455  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_455 -> m1_457  [key=0, style=solid];
m1_455 -> m1_460  [key=2, style=dotted];
m1_456 -> m1_456  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_456 -> m1_457  [key=0, style=solid];
m1_456 -> m1_460  [key=2, style=dotted];
m1_458 -> m1_459  [key=0, style=solid];
m1_451 -> m1_452  [key=0, style=solid];
m1_451 -> m1_457  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
m1_454 -> m1_455  [key=0, style=solid];
m1_454 -> m1_456  [key=0, style=solid];
m1_457 -> m1_458  [key=0, style=solid];
m1_457 -> m1_457  [color=darkseagreen4, key=1, label=specLength, style=dashed];
m1_459 -> m1_427  [color=blue, key=0, style=bold];
m1_57 -> m1_136  [key=0, style=solid];
m1_136 -> m1_137  [key=0, style=solid];
m1_136 -> m1_138  [key=2, style=dotted];
m1_137 -> m1_57  [color=blue, key=0, style=bold];
m1_193 -> m1_194  [color=green, key=0, style=solid];
m1_193 -> m1_198  [color=green, key=1, label=int, style=dashed];
m1_193 -> m1_196  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m1_194 -> m1_195  [color=green, key=0, style=solid];
m1_194 -> m1_196  [color=green, key=0, style=solid];
m1_195 -> m1_199  [color=green, key=0, style=solid];
m1_195 -> m1_23  [color=green, key=2, style=dotted];
m1_196 -> m1_198  [color=green, key=0, style=solid];
m1_196 -> m1_197  [key=0, style=solid];
m1_198 -> m1_199  [color=green, key=0, style=solid];
m1_198 -> m1_187  [color=green, key=2, style=dotted];
m1_198 -> m1_56  [color=green, key=2, style=dotted];
m1_198 -> m1_179  [color=green, key=2, style=dotted];
m1_197 -> m1_199  [key=0, style=solid];
m1_197 -> m1_186  [key=2, style=dotted];
m1_199 -> m1_193  [color=blue, key=0, style=bold];
m1_150 -> m1_151  [key=0, style=solid];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_146  [key=2, style=dotted];
m1_151 -> m1_154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_152 -> m1_153  [key=0, style=solid];
m1_153 -> m1_150  [color=blue, key=0, style=bold];
m1_157 -> m1_158  [key=0, style=solid];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_146  [key=2, style=dotted];
m1_159 -> m1_163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m1_160 -> m1_161  [key=0, style=solid];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_162  [key=2, style=dotted];
m1_161 -> m1_157  [color=blue, key=0, style=bold];
m1_230 -> m1_234  [key=0, style=solid];
m1_234 -> m1_203  [key=2, style=dotted];
m1_234 -> m1_53  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_235 -> m1_230  [color=blue, key=0, style=bold];
m1_53 -> m1_247  [color=green, key=0, style=bold];
m1_53 -> m1_236  [key=0, style=solid];
m1_53 -> m1_240  [color=crimson, key=0, style=bold];
m1_53 -> m1_251  [color=crimson, key=0, style=bold];
m1_53 -> m1_238  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_53 -> m1_245  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>", style=dashed];
m1_247 -> m1_248  [color=green, key=0, style=solid];
m1_247 -> m1_223  [color=green, key=2, style=dotted];
m1_246 -> m1_247  [color=green, key=0, style=solid];
m1_246 -> m1_219  [key=2, style=dotted];
m1_246 -> m1_257  [key=2, style=dotted];
m1_248 -> m1_249  [color=green, key=0, style=solid];
m1_248 -> m1_258  [color=green, key=2, style=dotted];
m1_250 -> m1_251  [color=green, key=0, style=solid];
m1_250 -> m1_219  [color=green, key=2, style=dotted];
m1_250 -> m1_220  [color=green, key=2, style=dotted];
m1_250 -> m1_259  [color=green, key=2, style=dotted];
m1_250 -> m1_257  [color=green, key=2, style=dotted];
m1_250 -> m1_260  [color=green, key=2, style=dotted];
m1_250 -> m1_222  [color=green, key=2, style=dotted];
m1_250 -> m1_261  [color=green, key=1, label="lambda expression", style=dashed];
m1_245 -> m1_250  [color=green, key=1, label=example, style=dashed];
m1_245 -> m1_248  [color=green, key=1, label=example, style=dashed];
m1_245 -> m1_246  [key=0, style=solid];
m1_245 -> m1_50  [key=2, style=dotted];
m1_243 -> m1_250  [color=green, key=1, label=appAlias, style=dashed];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_256  [key=2, style=dotted];
m1_249 -> m1_250  [color=green, key=0, style=solid];
m1_249 -> m1_244  [color=green, key=0, style=solid];
m1_249 -> m1_262  [color=green, key=1, label=s, style=dashed];
m1_249 -> m1_263  [color=green, key=1, label=s, style=dashed];
m1_249 -> m1_264  [color=green, key=1, label=s, style=dashed];
m1_251 -> m1_249  [color=green, key=0, style=solid];
m1_251 -> m1_223  [key=2, style=dotted];
m1_244 -> m1_245  [key=0, style=solid];
m1_244 -> m1_252  [key=0, style=solid];
m1_237 -> m1_23  [key=2, style=dotted];
m1_237 -> m1_252  [key=0, style=solid];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_238  [key=0, style=solid];
m1_240 -> m1_241  [key=0, style=solid];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_253  [key=2, style=dotted];
m1_238 -> m1_241  [color=darkseagreen4, key=1, label=usage, style=dashed];
m1_241 -> m1_243  [color=darkseagreen4, key=1, label=usageTuple, style=dashed];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_255  [key=2, style=dotted];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_244  [color=darkseagreen4, key=1, label=examples, style=dashed];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_241  [key=0, style=solid];
m1_239 -> m1_254  [key=2, style=dotted];
m1_252 -> m1_53  [color=blue, key=0, style=bold];
m1_477 -> m1_198  [color=green, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_17  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_18  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_19  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_140  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_143  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_148  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_144  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_151  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_152  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_159  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_164  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_160  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_168  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_172  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_169  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_176  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_184  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_191  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_267  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_300  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_325  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_330  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_331  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_333  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_338  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_334  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_341  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_343  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_345  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_346  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_348  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_349  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_384  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_388  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_350  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_352  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_363  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_366  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_369  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_373  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_375  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_376  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_395  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_399  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_405  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_416  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_417  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_419  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_423  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_437  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_477 -> m1_442  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m1_481 -> m1_262  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_481 -> m1_263  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_481 -> m1_264  [color=darkseagreen4, key=1, label=s, style=dashed];
m1_482 -> m1_338  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_483 -> m1_338  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
m1_484 -> m1_338  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
m1_485 -> m1_384  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_485 -> m1_388  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_486 -> m1_384  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_486 -> m1_388  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_488 -> m1_399  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_488 -> m1_405  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m1_478 -> m1_70  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_478 -> m1_63  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_478 -> m1_67  [color=darkseagreen4, key=1, label=auto, style=dashed];
m1_489 -> m1_410  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_489 -> m1_414  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
m1_487 -> m1_392  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
m1_479 -> m1_100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_479 -> m1_113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m1_480 -> m1_107  [color=darkseagreen4, key=1, label=pr, style=dashed];
m2_119 -> m2_120  [key=0, style=solid];
m2_120 -> m2_121  [key=0, style=solid];
m2_120 -> m2_108  [key=2, style=dotted];
m2_120 -> m2_33  [key=2, style=dotted];
m2_120 -> m2_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_121 -> m2_119  [color=blue, key=0, style=bold];
m2_81 -> m2_82  [key=0, style=solid];
m2_81 -> m2_83  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_81 -> m2_85  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_81 -> m2_87  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m2_81 -> m2_89  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_81 -> m2_125  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_82 -> m2_83  [key=0, style=solid];
m2_82 -> m2_31  [key=2, style=dotted];
m2_82 -> m2_85  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_82 -> m2_91  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_82 -> m2_92  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_82 -> m2_93  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_83 -> m2_84  [key=0, style=solid];
m2_83 -> m2_86  [key=0, style=solid];
m2_85 -> m2_93  [key=0, style=solid];
m2_85 -> m2_95  [key=2, style=dotted];
m2_85 -> m2_96  [key=2, style=dotted];
m2_87 -> m2_88  [key=0, style=solid];
m2_87 -> m2_97  [key=2, style=dotted];
m2_87 -> m2_103  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_87 -> m2_91  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_89 -> m2_90  [key=0, style=solid];
m2_89 -> m2_98  [key=2, style=dotted];
m2_89 -> m2_91  [color=darkseagreen4, key=1, label=e, style=dashed];
m2_91 -> m2_90  [key=0, style=solid];
m2_91 -> m2_100  [key=2, style=dotted];
m2_91 -> m2_96  [key=2, style=dotted];
m2_91 -> m2_40  [key=2, style=dotted];
m2_92 -> m2_93  [key=0, style=solid];
m2_92 -> m2_101  [key=2, style=dotted];
m2_93 -> m2_94  [key=0, style=solid];
m2_93 -> m2_48  [key=2, style=dotted];
m2_84 -> m2_85  [key=0, style=solid];
m2_86 -> m2_87  [key=0, style=solid];
m2_88 -> m2_89  [key=0, style=solid];
m2_88 -> m2_103  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_88 -> m2_91  [color=darkseagreen4, key=1, label=format, style=dashed];
m2_88 -> m2_88  [color=darkorchid, key=3, label="Local variable System.Func<object, object> format", style=bold];
m2_90 -> m2_91  [key=0, style=solid];
m2_90 -> m2_92  [key=0, style=solid];
m2_90 -> m2_99  [key=2, style=dotted];
m2_94 -> m2_81  [color=blue, key=0, style=bold];
m2_35 -> m2_145  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_35 -> m2_155  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m2_130 -> m2_131  [key=0, style=solid];
m2_130 -> m2_132  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m2_131 -> m2_132  [key=0, style=solid];
m2_132 -> m2_133  [key=0, style=solid];
m2_132 -> m2_134  [key=2, style=dotted];
m2_132 -> m2_118  [key=2, style=dotted];
m2_132 -> m2_135  [key=2, style=dotted];
m2_132 -> m2_48  [key=2, style=dotted];
m2_133 -> m2_130  [color=blue, key=0, style=bold];
m2_144 -> m2_145  [key=0, style=solid];
m2_144 -> m2_147  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_144 -> m2_149  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_144 -> m2_151  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_144 -> m2_153  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_145 -> m2_146  [key=0, style=solid];
m2_145 -> m2_147  [key=0, style=solid];
m2_147 -> m2_148  [key=0, style=solid];
m2_147 -> m2_149  [key=0, style=solid];
m2_147 -> m2_30  [key=2, style=dotted];
m2_147 -> m2_141  [key=2, style=dotted];
m2_147 -> m2_142  [key=2, style=dotted];
m2_149 -> m2_150  [key=0, style=solid];
m2_149 -> m2_151  [key=0, style=solid];
m2_149 -> m2_30  [key=2, style=dotted];
m2_149 -> m2_157  [key=2, style=dotted];
m2_149 -> m2_158  [key=2, style=dotted];
m2_151 -> m2_152  [key=0, style=solid];
m2_151 -> m2_153  [key=0, style=solid];
m2_153 -> m2_154  [key=0, style=solid];
m2_153 -> m2_155  [key=0, style=solid];
m2_153 -> m2_98  [key=2, style=dotted];
m2_153 -> m2_99  [key=2, style=dotted];
m2_146 -> m2_156  [key=0, style=solid];
m2_148 -> m2_156  [key=0, style=solid];
m2_150 -> m2_156  [key=0, style=solid];
m2_152 -> m2_156  [key=0, style=solid];
m2_154 -> m2_156  [key=0, style=solid];
m2_155 -> m2_156  [key=0, style=solid];
m2_156 -> m2_144  [color=blue, key=0, style=bold];
m2_122 -> m2_123  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_4  [color=blue, key=0, style=bold];
m2_55 -> m2_56  [key=0, style=solid];
m2_55 -> m2_57  [key=2, style=dotted];
m2_55 -> m2_58  [key=2, style=dotted];
m2_55 -> m2_59  [key=2, style=dotted];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_76  [key=2, style=dotted];
m2_74 -> m2_44  [key=2, style=dotted];
m2_74 -> m2_40  [key=2, style=dotted];
m2_51 -> m2_52  [key=0, style=solid];
m2_51 -> m2_53  [key=2, style=dotted];
m2_51 -> m2_40  [key=2, style=dotted];
m2_50 -> m2_51  [key=0, style=solid];
m2_54 -> m2_55  [key=0, style=solid];
m2_60 -> m2_61  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=2, style=dotted];
m2_63 -> m2_64  [key=0, style=solid];
m2_67 -> m2_68  [key=0, style=solid];
m2_70 -> m2_71  [key=0, style=solid];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_80  [key=2, style=dotted];
m2_78 -> m2_44  [key=2, style=dotted];
m2_78 -> m2_40  [key=2, style=dotted];
m2_73 -> m2_74  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_52 -> m2_50  [color=blue, key=0, style=bold];
m2_56 -> m2_54  [color=blue, key=0, style=bold];
m2_61 -> m2_62  [key=0, style=solid];
m2_62 -> m2_60  [color=blue, key=0, style=bold];
m2_65 -> m2_63  [color=blue, key=0, style=bold];
m2_68 -> m2_69  [key=0, style=solid];
m2_69 -> m2_67  [color=blue, key=0, style=bold];
m2_71 -> m2_72  [key=0, style=solid];
m2_72 -> m2_70  [color=blue, key=0, style=bold];
m2_75 -> m2_73  [color=blue, key=0, style=bold];
m2_79 -> m2_77  [color=blue, key=0, style=bold];
m2_103 -> m2_104  [key=0, style=solid];
m2_103 -> m2_95  [key=2, style=dotted];
m2_102 -> m2_103  [key=0, style=solid];
m2_104 -> m2_102  [color=blue, key=0, style=bold];
m2_110 -> m2_111  [key=0, style=solid];
m2_110 -> m2_112  [key=2, style=dotted];
m2_110 -> m2_113  [key=2, style=dotted];
m2_115 -> m2_116  [key=0, style=solid];
m2_115 -> m2_66  [key=2, style=dotted];
m2_115 -> m2_117  [key=2, style=dotted];
m2_115 -> m2_118  [key=2, style=dotted];
m2_114 -> m2_115  [key=0, style=solid];
m2_109 -> m2_110  [key=0, style=solid];
m2_111 -> m2_109  [color=blue, key=0, style=bold];
m2_116 -> m2_114  [color=blue, key=0, style=bold];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_122  [color=blue, key=0, style=bold];
m2_59 -> m2_59  [color=darkorchid, key=3, label="method methodReturn object NormalizeValue", style=bold];
m2_128 -> m2_125  [color=darkorchid, key=3, label="Parameter variable CommandLine.UnParserSettings settings", style=bold];
m2_95 -> m2_105  [key=0, style=solid];
m2_95 -> m2_106  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_95 -> m2_81  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_95 -> m2_88  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m2_105 -> m2_106  [key=0, style=solid];
m2_105 -> m2_110  [color=darkseagreen4, key=1, label=string, style=dashed];
m2_105 -> m2_115  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m2_105 -> m2_105  [color=darkorchid, key=3, label="Local variable System.Func<string, string> doubQt", style=bold];
m2_106 -> m2_107  [key=0, style=solid];
m2_106 -> m2_108  [key=2, style=dotted];
m2_106 -> m2_33  [key=2, style=dotted];
m2_106 -> m2_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_107 -> m2_95  [color=blue, key=0, style=bold];
m2_3 -> m2_0  [color=darkorchid, key=3, label="Parameter variable T options", style=bold];
m2_3 -> m2_1  [color=darkorchid, key=3, label="Parameter variable System.Action<CommandLine.UnParserSettings> configuration", style=bold];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_10  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m2_6 -> m2_12  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_6 -> m2_15  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_6 -> m2_55  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_7 -> m2_8  [key=0, style=solid];
m2_7 -> m2_9  [key=0, style=solid];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> n12  [key=2, style=dotted];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_30  [key=2, style=dotted];
m2_12 -> m2_14  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_12 -> m2_15  [color=darkseagreen4, key=1, label=type, style=dashed];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_34  [key=2, style=dotted];
m2_15 -> m2_35  [key=2, style=dotted];
m2_15 -> m2_36  [key=2, style=dotted];
m2_15 -> m2_54  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_15 -> m2_15  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_15 -> m2_19  [color=darkseagreen4, key=1, label=specs, style=dashed];
m2_8 -> m2_26  [key=0, style=solid];
m2_8 -> m2_27  [key=2, style=dotted];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_28  [key=2, style=dotted];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_9 -> m2_18  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_9 -> m2_20  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_9 -> m2_22  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_9 -> m2_74  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_11 -> m2_12  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_37  [key=2, style=dotted];
m2_18 -> m2_63  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_18 -> m2_21  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m2_18 -> m2_22  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m2_20 -> m2_21  [key=0, style=solid];
m2_20 -> m2_39  [key=2, style=dotted];
m2_20 -> m2_40  [key=2, style=dotted];
m2_20 -> m2_41  [key=2, style=dotted];
m2_20 -> m2_42  [key=2, style=dotted];
m2_20 -> m2_43  [key=2, style=dotted];
m2_20 -> m2_44  [key=2, style=dotted];
m2_20 -> m2_20  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_20 -> m2_22  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_74  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_23  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_24  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_78  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_20 -> m2_25  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_22 -> m2_23  [key=0, style=solid];
m2_22 -> m2_47  [key=2, style=dotted];
m2_22 -> m2_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_31  [key=2, style=dotted];
m2_13 -> m2_51  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_13 -> m2_20  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_32  [key=2, style=dotted];
m2_14 -> m2_33  [key=2, style=dotted];
m2_14 -> m2_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_37  [key=2, style=dotted];
m2_16 -> m2_38  [key=2, style=dotted];
m2_16 -> m2_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_16 -> m2_16  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_16 -> m2_18  [color=darkseagreen4, key=1, label=allOptSpecs, style=dashed];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_37  [key=2, style=dotted];
m2_19 -> m2_67  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_19 -> m2_19  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_19 -> m2_23  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_19 -> m2_24  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_38  [key=2, style=dotted];
m2_17 -> m2_17  [color=darkseagreen4, key=1, label=info, style=dashed];
m2_17 -> m2_64  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_17 -> m2_20  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_39  [key=2, style=dotted];
m2_21 -> m2_45  [key=2, style=dotted];
m2_21 -> m2_46  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_39  [key=2, style=dotted];
m2_23 -> m2_45  [key=2, style=dotted];
m2_23 -> m2_46  [key=2, style=dotted];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_47  [key=2, style=dotted];
m2_24 -> m2_77  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_48  [key=2, style=dotted];
m2_25 -> m2_49  [key=2, style=dotted];
m2_26 -> m2_6  [color=blue, key=0, style=bold];
m2_125 -> m2_126  [key=0, style=solid];
m2_126 -> m2_127  [key=0, style=solid];
m2_126 -> m2_31  [key=2, style=dotted];
m2_126 -> m2_128  [key=2, style=dotted];
m2_126 -> m2_44  [key=2, style=dotted];
m2_126 -> m2_81  [key=2, style=dotted];
m2_126 -> m2_129  [key=2, style=dotted];
m2_126 -> m2_48  [key=2, style=dotted];
m2_127 -> m2_125  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [color=darkorchid, key=3, label="method methodReturn string FormatCommandLine", style=bold];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_2 -> m2_0  [color=blue, key=0, style=bold];
m2_136 -> m2_137  [key=0, style=solid];
m2_136 -> m2_138  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_136 -> m2_139  [color=darkseagreen4, key=1, label=object, style=dashed];
m2_137 -> m2_138  [key=0, style=solid];
m2_137 -> m2_139  [key=0, style=solid];
m2_137 -> m2_30  [key=2, style=dotted];
m2_137 -> m2_141  [key=2, style=dotted];
m2_137 -> m2_142  [key=2, style=dotted];
m2_138 -> m2_140  [key=0, style=solid];
m2_138 -> m2_143  [key=2, style=dotted];
m2_139 -> m2_140  [key=0, style=solid];
m2_140 -> m2_136  [color=blue, key=0, style=bold];
m2_159 -> m2_51  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_159 -> m2_74  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_159 -> m2_78  [color=darkseagreen4, key=1, label=builder, style=dashed];
m2_160 -> m2_55  [color=darkseagreen4, key=1, label=T, style=dashed];
m2_161 -> m2_64  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m2_162 -> m2_74  [color=darkseagreen4, key=1, label=settings, style=dashed];
m2_163 -> m2_103  [color=darkseagreen4, key=1, label=sep, style=dashed];
m2_164 -> m2_115  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m3_0 -> m3_1  [color=red, key=0, style=solid];
m3_1 -> m3_2  [color=red, key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_4 -> m3_3  [color=blue, key=0, style=bold];
m3_5 -> m3_1  [color=red, key=1, label="CommandLine.Text.UsageAttribute", style=dashed];
}
