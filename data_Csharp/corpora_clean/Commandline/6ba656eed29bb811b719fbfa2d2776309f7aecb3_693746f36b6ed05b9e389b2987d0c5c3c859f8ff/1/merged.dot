digraph  {
n146 [label="CommandLine.Parser", span=""];
n147 [label="System.Collections.Generic.IEnumerable<string>", span=""];
n148 [label=factory, span=""];
n149 [label="System.Func<T>", span=""];
n150 [label="System.Collections.Generic.IEnumerable<string>", span=""];
n151 [label="System.Collections.Generic.IEnumerable<string>", span=""];
n152 [label="params System.Type[]", span=""];
n153 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
n154 [label="CommandLine.ParserSettings", span=""];
n155 [label=normalize, span=""];
n156 [label="CommandLine.ParserResult<T>", span=""];
n157 [label="System.IO.TextWriter", span=""];
n0 [label="Entry lambda expression", span="21-21", cluster="lambda expression"];
n1 [label="new Parser(new ParserSettings { HelpWriter = Console.Error })", span="21-21", cluster="lambda expression"];
n2 [label="Exit lambda expression", span="21-21", cluster="lambda expression"];
n3 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)"];
n4 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25", cluster="CommandLine.ParserSettings.ParserSettings()"];
n5 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()"];
n6 [label="settings = new ParserSettings { Consumed = true }", span="28-28", cluster="CommandLine.Parser.Parser()"];
n7 [label="Exit CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()"];
n8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)"];
n9 [label="configuration == null", span="39-39", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)"];
n12 [label="configuration(settings)", span="42-42", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)"];
n10 [label="throw new ArgumentNullException(''configuration'');", span="39-39", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)"];
n11 [label="settings = new ParserSettings()", span="41-41", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)"];
n13 [label="settings.Consumed = true", span="43-43", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)"];
n16 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)"];
n14 [label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)"];
n15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n17 [label="this.settings = settings", span="48-48", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)"];
n18 [label="this.settings.Consumed = true", span="49-49", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)"];
n19 [label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)"];
n20 [label="Entry CommandLine.Parser.~Parser()", span="55-55", cluster="CommandLine.Parser.~Parser()"];
n21 [label="Dispose(false)", span="57-57", cluster="CommandLine.Parser.~Parser()"];
n22 [label="Exit CommandLine.Parser.~Parser()", span="55-55", cluster="CommandLine.Parser.~Parser()"];
n23 [label="Entry CommandLine.Parser.Dispose(bool)", span="216-216", cluster="CommandLine.Parser.Dispose(bool)"];
n24 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)"];
n25 [label="args == null", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)"];
n28 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="93-101", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)"];
n35 [label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="94-100", cluster="lambda expression"];
n26 [label="throw new ArgumentNullException(''args'');", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)"];
n27 [label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="89-91", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)"];
n30 [label="Entry System.Type.IsMutable()", span="139-139", cluster="System.Type.IsMutable()"];
n31 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)"];
n32 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()"];
n29 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)"];
n33 [label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)"];
n34 [label="Entry lambda expression", span="94-100", cluster="lambda expression"];
n36 [label="Exit lambda expression", span="94-100", cluster="lambda expression"];
n37 [label="Entry CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198", cluster="CommandLine.Parser.HandleUnknownArguments(bool)"];
n38 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n39 [label="Entry lambda expression", span="96-96", cluster="lambda expression"];
n40 [label="Tokenize(arguments, optionSpecs, settings)", span="96-96", cluster="lambda expression"];
n41 [label="Exit lambda expression", span="96-96", cluster="lambda expression"];
n42 [label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)"];
n43 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n44 [label="factory == null", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n48 [label="args == null", span="119-119", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n50 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="121-129", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n54 [label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="122-128", cluster="lambda expression"];
n45 [label="throw new ArgumentNullException(''factory'');", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n46 [label="!typeof(T).IsMutable()", span="118-118", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n47 [label="throw new ArgumentException(''factory'');", span="118-118", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n49 [label="throw new ArgumentNullException(''args'');", span="119-119", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n51 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)"];
n53 [label="Entry lambda expression", span="122-128", cluster="lambda expression"];
n52 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)"];
n55 [label="Exit lambda expression", span="122-128", cluster="lambda expression"];
n56 [label="Entry lambda expression", span="124-124", cluster="lambda expression"];
n57 [label="Tokenize(arguments, optionSpecs, settings)", span="124-124", cluster="lambda expression"];
n58 [label="Exit lambda expression", span="124-124", cluster="lambda expression"];
n59 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n60 [label="args == null", span="146-146", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n62 [label="types == null", span="147-147", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n64 [label="types.Length == 0", span="148-148", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n66 [label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="150-158", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n70 [label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="151-157", cluster="lambda expression"];
n61 [label="throw new ArgumentNullException(''args'');", span="146-146", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n63 [label="throw new ArgumentNullException(''types'');", span="147-147", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n65 [label="throw new ArgumentOutOfRangeException(''types'');", span="148-148", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n67 [label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])"];
n68 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
n69 [label="Entry lambda expression", span="151-157", cluster="lambda expression"];
n71 [label="Exit lambda expression", span="151-157", cluster="lambda expression"];
n72 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n73 [label="Entry lambda expression", span="152-152", cluster="lambda expression"];
n74 [label="Tokenize(arguments, optionSpecs, settings)", span="152-152", cluster="lambda expression"];
n75 [label="Exit lambda expression", span="152-152", cluster="lambda expression"];
n76 [label="Entry CommandLine.Parser.Dispose()", span="164-164", cluster="CommandLine.Parser.Dispose()"];
n77 [label="Dispose(true)", span="166-166", cluster="CommandLine.Parser.Dispose()"];
n78 [label="GC.SuppressFinalize(this)", span="168-168", cluster="CommandLine.Parser.Dispose()", color=red, community=0];
n79 [label="Exit CommandLine.Parser.Dispose()", span="164-164", cluster="CommandLine.Parser.Dispose()"];
n80 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)"];
n81 [label="var normalize = settings.IgnoreUnknownArguments\r\n                ? toks => Tokenizer.Normalize(toks,\r\n                    name => NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound)\r\n                : new Func<IEnumerable<Token>, IEnumerable<Token>>(toks => toks)", span="176-179", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)"];
n91 [label="Tokenizer.Normalize(toks,\r\n                    name => NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound)", span="177-178", cluster="lambda expression"];
n95 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound", span="178-178", cluster="lambda expression"];
n82 [label="var tokens = settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="181-186", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)"];
n102 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="185-185", cluster="lambda expression"];
n105 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="185-185", cluster="lambda expression"];
n108 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="186-186", cluster="lambda expression"];
n83 [label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer))", span="187-187", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)"];
n111 [label="NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer)", span="187-187", cluster="lambda expression"];
n86 [label="Entry Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", span="", cluster="Func<IEnumerable<Token>, IEnumerable<Token>>.cstr"];
n99 [label=toks, span="179-179", cluster="lambda expression"];
n87 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)"];
n88 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)"];
n101 [label="Entry lambda expression", span="184-185", cluster="lambda expression"];
n107 [label="Entry lambda expression", span="186-186", cluster="lambda expression"];
n84 [label="return explodedTokens;", span="188-188", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)"];
n89 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
n110 [label="Entry lambda expression", span="187-187", cluster="lambda expression"];
n85 [label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)"];
n90 [label="Entry lambda expression", span="177-178", cluster="lambda expression"];
n92 [label="Exit lambda expression", span="177-178", cluster="lambda expression"];
n93 [label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)"];
n94 [label="Entry lambda expression", span="178-178", cluster="lambda expression"];
n96 [label="Exit lambda expression", span="178-178", cluster="lambda expression"];
n97 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n98 [label="Entry lambda expression", span="179-179", cluster="lambda expression"];
n100 [label="Exit lambda expression", span="179-179", cluster="lambda expression"];
n103 [label="Exit lambda expression", span="184-185", cluster="lambda expression"];
n104 [label="Entry lambda expression", span="185-185", cluster="lambda expression"];
n106 [label="Exit lambda expression", span="185-185", cluster="lambda expression"];
n109 [label="Exit lambda expression", span="186-186", cluster="lambda expression"];
n112 [label="Exit lambda expression", span="187-187", cluster="lambda expression"];
n113 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n114 [label="return DisplayHelp(\r\n                parseFunc(),\r\n                settings.HelpWriter);", span="193-195", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)"];
n115 [label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)"];
n116 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
n117 [label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)"];
n118 [label="return ignoreUnknownArguments\r\n                ? Enumerable.Empty<ErrorType>().Concat(ErrorType.UnknownOptionError)\r\n                : Enumerable.Empty<ErrorType>();", span="200-202", cluster="CommandLine.Parser.HandleUnknownArguments(bool)"];
n119 [label="Exit CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198", cluster="CommandLine.Parser.HandleUnknownArguments(bool)"];
n120 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
n121 [label="Entry System.Collections.Generic.IEnumerable<T>.Concat<T>(T)", span="94-94", cluster="System.Collections.Generic.IEnumerable<T>.Concat<T>(T)"];
n122 [label="parserResult.WithNotParsed(\r\n                errors =>\r\n                    Maybe.Merge(errors.ToMaybe(), helpWriter.ToMaybe())\r\n                        .Do((errs, writer) => writer.Write(HelpText.AutoBuild(parserResult)))\r\n                )", span="207-211", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)"];
n127 [label="Maybe.Merge(errors.ToMaybe(), helpWriter.ToMaybe())\r\n                        .Do((errs, writer) => writer.Write(HelpText.AutoBuild(parserResult)))", span="209-210", cluster="lambda expression"];
n134 [label="writer.Write(HelpText.AutoBuild(parserResult))", span="210-210", cluster="lambda expression"];
n123 [label="return parserResult;", span="213-213", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)"];
n125 [label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="58-58", cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)"];
n126 [label="Entry lambda expression", span="208-210", cluster="lambda expression"];
n124 [label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)"];
n128 [label="Exit lambda expression", span="208-210", cluster="lambda expression"];
n129 [label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331", cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()"];
n130 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()"];
n131 [label="Entry CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", span="163-163", cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)"];
n132 [label="Entry CSharpx.Maybe<System.Tuple<T1, T2>>.Do<T1, T2>(System.Action<T1, T2>)", span="312-312", cluster="CSharpx.Maybe<System.Tuple<T1, T2>>.Do<T1, T2>(System.Action<T1, T2>)"];
n133 [label="Entry lambda expression", span="210-210", cluster="lambda expression"];
n135 [label="Exit lambda expression", span="210-210", cluster="lambda expression"];
n136 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n137 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)"];
n138 [label=disposed, span="218-218", cluster="CommandLine.Parser.Dispose(bool)"];
n140 [label=disposing, span="220-220", cluster="CommandLine.Parser.Dispose(bool)"];
n139 [label="return;", span="218-218", cluster="CommandLine.Parser.Dispose(bool)"];
n141 [label="settings != null", span="222-222", cluster="CommandLine.Parser.Dispose(bool)"];
n144 [label="Exit CommandLine.Parser.Dispose(bool)", span="216-216", cluster="CommandLine.Parser.Dispose(bool)"];
n142 [label="settings.Dispose()", span="223-223", cluster="CommandLine.Parser.Dispose(bool)"];
n143 [label="disposed = true", span="225-225", cluster="CommandLine.Parser.Dispose(bool)"];
n145 [label="Entry CommandLine.ParserSettings.Dispose()", span="119-119", cluster="CommandLine.ParserSettings.Dispose()"];
m0_41 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="6-6", cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="ParserSettingsTests.cs"];
m0_42 [label="Entry Humanizer.Localisation.Formatters.SlovenianFormatter.SlovenianFormatter()", span="7-7", cluster="Humanizer.Localisation.Formatters.SlovenianFormatter.SlovenianFormatter()", file="ParserSettingsTests.cs"];
m0_51 [label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter(string)", span="6-6", cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter(string)", file="ParserSettingsTests.cs"];
m0_48 [label="Entry Humanizer.Localisation.Formatters.DefaultFormatter.DefaultFormatter(string)", span="16-16", cluster="Humanizer.Localisation.Formatters.DefaultFormatter.DefaultFormatter(string)", file="ParserSettingsTests.cs"];
m0_38 [label="Entry Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", span="54-54", cluster="Humanizer.Configuration.LocaliserRegistry<TLocaliser>.Register(string, TLocaliser)", file="ParserSettingsTests.cs"];
m0_37 [label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="7-7", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="ParserSettingsTests.cs"];
m0_0 [label="Entry Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", span="6-6", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_1 [label="Register(''ar'', new ArabicFormatter())", span="8-8", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_2 [label="Register(''he'', new HebrewFormatter())", span="9-9", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_3 [label="Register(''ro'', new RomanianFormatter())", span="10-10", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_4 [label="Register(''ru'', new RussianFormatter())", span="11-11", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_5 [label="Register(''sl'', new SlovenianFormatter())", span="12-12", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_6 [label="Register(''sr'', new SerbianFormatter(''sr''))", span="13-13", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_7 [label="Register(''sr-Latn'', new SerbianFormatter(''sr-Latn''))", span="14-14", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_8 [label="RegisterCzechSlovakPolishFormatter(''cs'')", span="15-15", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_9 [label="RegisterCzechSlovakPolishFormatter(''pl'')", span="16-16", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_10 [label="RegisterCzechSlovakPolishFormatter(''sk'')", span="17-17", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_11 [label="RegisterDefaultFormatter(''bg'')", span="18-18", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_12 [label="RegisterDefaultFormatter(''pt-BR'')", span="19-19", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_13 [label="RegisterDefaultFormatter(''sv'')", span="20-20", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_14 [label="RegisterDefaultFormatter(''tr'')", span="21-21", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_15 [label="RegisterDefaultFormatter(''vi'')", span="22-22", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_16 [label="RegisterDefaultFormatter(''en-US'')", span="23-23", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_17 [label="RegisterDefaultFormatter(''af'')", span="24-24", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_18 [label="RegisterDefaultFormatter(''da'')", span="25-25", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_19 [label="RegisterDefaultFormatter(''de'')", span="26-26", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_20 [label="RegisterDefaultFormatter(''el'')", span="27-27", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_21 [label="RegisterDefaultFormatter(''es'')", span="28-28", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_22 [label="RegisterDefaultFormatter(''fa'')", span="29-29", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_23 [label="RegisterDefaultFormatter(''fi-FI'')", span="30-30", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_24 [label="RegisterDefaultFormatter(''fr'')", span="31-31", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_25 [label="RegisterDefaultFormatter(''fr-BE'')", span="32-32", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_26 [label="RegisterDefaultFormatter(''hu'')", span="33-33", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_27 [label="RegisterDefaultFormatter(''id'')", span="34-34", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_28 [label="RegisterDefaultFormatter(''ja'')", span="35-35", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_29 [label="RegisterDefaultFormatter(''nb'')", span="36-36", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_30 [label="RegisterDefaultFormatter(''nb-NO'')", span="37-37", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_31 [label="RegisterDefaultFormatter(''nl'')", span="38-38", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_32 [label="RegisterDefaultFormatter(''bn-BD'')", span="39-39", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_33 [label="RegisterDefaultFormatter(''it'')", span="40-40", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_34 [label="RegisterDefaultFormatter(''uz-Latn-UZ'')", span="41-41", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_35 [label="RegisterDefaultFormatter(''uz-Cyrl-UZ'')", span="42-42", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_36 [label="Exit Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", span="6-6", cluster="Humanizer.Configuration.FormatterRegistry.FormatterRegistry()", file="ParserSettingsTests.cs"];
m0_43 [label="Entry Humanizer.Localisation.Formatters.SerbianFormatter.SerbianFormatter(string)", span="6-6", cluster="Humanizer.Localisation.Formatters.SerbianFormatter.SerbianFormatter(string)", file="ParserSettingsTests.cs"];
m0_45 [label="Entry Humanizer.Configuration.FormatterRegistry.RegisterDefaultFormatter(string)", span="45-45", cluster="Humanizer.Configuration.FormatterRegistry.RegisterDefaultFormatter(string)", file="ParserSettingsTests.cs"];
m0_46 [label="Register(localeCode, new DefaultFormatter(localeCode))", span="47-47", cluster="Humanizer.Configuration.FormatterRegistry.RegisterDefaultFormatter(string)", file="ParserSettingsTests.cs"];
m0_47 [label="Exit Humanizer.Configuration.FormatterRegistry.RegisterDefaultFormatter(string)", span="45-45", cluster="Humanizer.Configuration.FormatterRegistry.RegisterDefaultFormatter(string)", file="ParserSettingsTests.cs"];
m0_44 [label="Entry Humanizer.Configuration.FormatterRegistry.RegisterCzechSlovakPolishFormatter(string)", span="50-50", cluster="Humanizer.Configuration.FormatterRegistry.RegisterCzechSlovakPolishFormatter(string)", file="ParserSettingsTests.cs"];
m0_49 [label="Register(localeCode, new CzechSlovakPolishFormatter(localeCode))", span="52-52", cluster="Humanizer.Configuration.FormatterRegistry.RegisterCzechSlovakPolishFormatter(string)", file="ParserSettingsTests.cs"];
m0_50 [label="Exit Humanizer.Configuration.FormatterRegistry.RegisterCzechSlovakPolishFormatter(string)", span="50-50", cluster="Humanizer.Configuration.FormatterRegistry.RegisterCzechSlovakPolishFormatter(string)", file="ParserSettingsTests.cs"];
m0_39 [label="Entry Humanizer.Localisation.Formatters.HebrewFormatter.HebrewFormatter()", span="7-7", cluster="Humanizer.Localisation.Formatters.HebrewFormatter.HebrewFormatter()", file="ParserSettingsTests.cs"];
m0_40 [label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="17-17", cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="ParserSettingsTests.cs"];
m0_52 [label="Humanizer.Configuration.FormatterRegistry", span="", file="ParserSettingsTests.cs"];
m1_26 [label="Entry Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatter()", span="77-77", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatter()", file="TypeConverterTests.cs"];
m1_27 [label="var humanized = _testCollection.Humanize(sc => string.Format(''SomeObject #{0} - {1}'', sc.SomeInt, sc.SomeString))", span="79-79", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatter()", file="TypeConverterTests.cs"];
m1_28 [label="Assert.Equal(''SomeObject #1 - One, SomeObject #2 - Two, and SomeObject #3 - Three'', humanized)", span="80-80", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatter()", file="TypeConverterTests.cs"];
m1_29 [label="Exit Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatter()", span="77-77", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatter()", file="TypeConverterTests.cs"];
m1_39 [label="Entry System.Collections.Generic.IEnumerable<T>.Humanize<T>(System.Func<T, string>, string)", span="51-51", cluster="System.Collections.Generic.IEnumerable<T>.Humanize<T>(System.Func<T, string>, string)", file="TypeConverterTests.cs"];
m1_3 [label="Entry Humanizer.Tests.CollectionHumanizeTests.HumanizeReturnsOnlyNameWhenCollectionContainsOneItem()", span="19-19", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeReturnsOnlyNameWhenCollectionContainsOneItem()", file="TypeConverterTests.cs"];
m1_4 [label="var collection = new List<string> { ''A String'' }", span="21-21", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeReturnsOnlyNameWhenCollectionContainsOneItem()", file="TypeConverterTests.cs"];
m1_5 [label="Assert.Equal(''A String'', collection.Humanize())", span="23-23", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeReturnsOnlyNameWhenCollectionContainsOneItem()", file="TypeConverterTests.cs"];
m1_6 [label="Exit Humanizer.Tests.CollectionHumanizeTests.HumanizeReturnsOnlyNameWhenCollectionContainsOneItem()", span="19-19", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeReturnsOnlyNameWhenCollectionContainsOneItem()", file="TypeConverterTests.cs"];
m1_19 [label="Entry Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesOxfordComma()", span="51-51", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesOxfordComma()", file="TypeConverterTests.cs"];
m1_20 [label="var collection = new List<string>\r\n            {\r\n                ''A String'',\r\n                ''Another String'',\r\n                ''A Third String'',\r\n            }", span="53-58", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesOxfordComma()", file="TypeConverterTests.cs"];
m1_21 [label="Assert.Equal(''A String, Another String, or A Third String'', collection.Humanize(''or''))", span="60-60", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesOxfordComma()", file="TypeConverterTests.cs"];
m1_22 [label="Exit Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesOxfordComma()", span="51-51", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesOxfordComma()", file="TypeConverterTests.cs"];
m1_35 [label="Entry Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatterWhenSeparatorIsProvided()", span="84-84", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatterWhenSeparatorIsProvided()", file="TypeConverterTests.cs"];
m1_36 [label="var humanized = _testCollection.Humanize(sc => string.Format(''SomeObject #{0} - {1}'', sc.SomeInt, sc.SomeString), ''or'')", span="86-86", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatterWhenSeparatorIsProvided()", file="TypeConverterTests.cs"];
m1_37 [label="Assert.Equal(''SomeObject #1 - One, SomeObject #2 - Two, or SomeObject #3 - Three'', humanized)", span="87-87", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatterWhenSeparatorIsProvided()", file="TypeConverterTests.cs"];
m1_38 [label="Exit Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatterWhenSeparatorIsProvided()", span="84-84", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesObjectFormatterWhenSeparatorIsProvided()", file="TypeConverterTests.cs"];
m1_30 [label="Entry System.Collections.Generic.IEnumerable<T>.Humanize<T>(System.Func<T, string>)", span="27-27", cluster="System.Collections.Generic.IEnumerable<T>.Humanize<T>(System.Func<T, string>)", file="TypeConverterTests.cs"];
m1_23 [label="Entry Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsToToString()", span="71-71", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsToToString()", file="TypeConverterTests.cs"];
m1_24 [label="Assert.Equal(''ToString, ToString, or ToString'', _testCollection.Humanize(''or''))", span="73-73", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsToToString()", file="TypeConverterTests.cs"];
m1_25 [label="Exit Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsToToString()", span="71-71", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsToToString()", file="TypeConverterTests.cs"];
m1_14 [label="Entry System.Collections.Generic.IEnumerable<T>.Humanize<T>(string)", span="40-40", cluster="System.Collections.Generic.IEnumerable<T>.Humanize<T>(string)", file="TypeConverterTests.cs"];
m1_40 [label="Entry lambda expression", span="86-86", cluster="lambda expression", file="TypeConverterTests.cs"];
m1_31 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="TypeConverterTests.cs"];
m1_32 [label="string.Format(''SomeObject #{0} - {1}'', sc.SomeInt, sc.SomeString)", span="79-79", cluster="lambda expression", file="TypeConverterTests.cs"];
m1_33 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="TypeConverterTests.cs"];
m1_41 [label="string.Format(''SomeObject #{0} - {1}'', sc.SomeInt, sc.SomeString)", span="86-86", cluster="lambda expression", file="TypeConverterTests.cs"];
m1_42 [label="Exit lambda expression", span="86-86", cluster="lambda expression", file="TypeConverterTests.cs"];
m1_8 [label="Entry System.Collections.Generic.IEnumerable<T>.Humanize<T>()", span="17-17", cluster="System.Collections.Generic.IEnumerable<T>.Humanize<T>()", file="TypeConverterTests.cs"];
m1_0 [label="Entry Humanizer.Tests.SomeClass.ToString()", span="9-9", cluster="Humanizer.Tests.SomeClass.ToString()", file="TypeConverterTests.cs"];
m1_1 [label="return ''ToString'';", span="11-11", cluster="Humanizer.Tests.SomeClass.ToString()", file="TypeConverterTests.cs"];
m1_2 [label="Exit Humanizer.Tests.SomeClass.ToString()", span="9-9", cluster="Humanizer.Tests.SomeClass.ToString()", file="TypeConverterTests.cs"];
m1_34 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="TypeConverterTests.cs"];
m1_9 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="TypeConverterTests.cs"];
m1_10 [label="Entry Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesSeparatorWhenMoreThanOneItemIsInCollection()", span="27-27", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesSeparatorWhenMoreThanOneItemIsInCollection()", file="TypeConverterTests.cs"];
m1_11 [label="var collection = new List<string>\r\n            {\r\n                ''A String'',\r\n                ''Another String'',\r\n            }", span="29-33", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesSeparatorWhenMoreThanOneItemIsInCollection()", file="TypeConverterTests.cs"];
m1_12 [label="Assert.Equal(''A String or Another String'', collection.Humanize(''or''))", span="35-35", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesSeparatorWhenMoreThanOneItemIsInCollection()", file="TypeConverterTests.cs"];
m1_13 [label="Exit Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesSeparatorWhenMoreThanOneItemIsInCollection()", span="27-27", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeUsesSeparatorWhenMoreThanOneItemIsInCollection()", file="TypeConverterTests.cs"];
m1_15 [label="Entry Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsSeparatorToAnd()", span="39-39", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsSeparatorToAnd()", file="TypeConverterTests.cs"];
m1_16 [label="var collection = new List<string>\r\n            {\r\n                ''A String'',\r\n                ''Another String'',\r\n            }", span="41-45", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsSeparatorToAnd()", file="TypeConverterTests.cs"];
m1_17 [label="Assert.Equal(''A String and Another String'', collection.Humanize())", span="47-47", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsSeparatorToAnd()", file="TypeConverterTests.cs"];
m1_18 [label="Exit Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsSeparatorToAnd()", span="39-39", cluster="Humanizer.Tests.CollectionHumanizeTests.HumanizeDefaultsSeparatorToAnd()", file="TypeConverterTests.cs"];
m1_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TypeConverterTests.cs"];
m1_43 [label="Humanizer.Tests.CollectionHumanizeTests", span="", file="TypeConverterTests.cs"];
n146 -> n6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n50  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n77  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n78  [key=1, style=dashed, color=red, label="CommandLine.Parser"];
n146 -> n138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n146 -> n143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
n147 -> n35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n148 -> n35  [key=1, style=dashed, color=darkseagreen4, label=factory];
n149 -> n54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
n150 -> n54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n151 -> n70  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n152 -> n70  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n153 -> n91  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n153 -> n95  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n153 -> n102  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n153 -> n105  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n153 -> n108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n153 -> n111  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n154 -> n91  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
n154 -> n95  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
n154 -> n102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
n154 -> n105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
n154 -> n108  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
n154 -> n111  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
n155 -> n102  [key=1, style=dashed, color=darkseagreen4, label=normalize];
n156 -> n127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n156 -> n134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n157 -> n127  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
n0 -> n1  [key=0, style=solid];
n1 -> n2  [key=0, style=solid];
n1 -> n3  [key=2, style=dotted];
n1 -> n4  [key=2, style=dotted];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n17  [key=0, style=solid];
n5 -> n6  [key=0, style=solid];
n6 -> n7  [key=0, style=solid];
n6 -> n4  [key=2, style=dotted];
n7 -> n5  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n8 -> n12  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.ParserSettings>"];
n9 -> n10  [key=0, style=solid];
n9 -> n11  [key=0, style=solid];
n12 -> n13  [key=0, style=solid];
n12 -> n16  [key=2, style=dotted];
n10 -> n14  [key=0, style=solid];
n10 -> n15  [key=2, style=dotted];
n11 -> n12  [key=0, style=solid];
n11 -> n4  [key=2, style=dotted];
n13 -> n14  [key=0, style=solid];
n14 -> n8  [key=0, style=bold, color=blue];
n17 -> n18  [key=0, style=solid];
n18 -> n19  [key=0, style=solid];
n19 -> n3  [key=0, style=bold, color=blue];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n21 -> n23  [key=2, style=dotted];
n22 -> n20  [key=0, style=bold, color=blue];
n23 -> n138  [key=0, style=solid];
n23 -> n140  [key=1, style=dashed, color=darkseagreen4, label=bool];
n24 -> n25  [key=0, style=solid];
n24 -> n28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n24 -> n35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=0, style=solid];
n28 -> n29  [key=0, style=solid];
n28 -> n33  [key=2, style=dotted];
n28 -> n34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n35 -> n36  [key=0, style=solid];
n35 -> n37  [key=2, style=dotted];
n35 -> n38  [key=2, style=dotted];
n35 -> n39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n26 -> n29  [key=0, style=solid];
n26 -> n15  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n30  [key=2, style=dotted];
n27 -> n31  [key=2, style=dotted];
n27 -> n32  [key=2, style=dotted];
n27 -> n35  [key=1, style=dashed, color=darkseagreen4, label=factory];
n29 -> n24  [key=0, style=bold, color=blue];
n33 -> n114  [key=0, style=solid];
n34 -> n35  [key=0, style=solid];
n36 -> n34  [key=0, style=bold, color=blue];
n37 -> n118  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n40 -> n42  [key=2, style=dotted];
n41 -> n39  [key=0, style=bold, color=blue];
n42 -> n81  [key=0, style=solid];
n42 -> n91  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n42 -> n95  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n42 -> n82  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n42 -> n102  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n42 -> n105  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n42 -> n108  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n42 -> n83  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n42 -> n111  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n43 -> n44  [key=0, style=solid];
n43 -> n48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n43 -> n50  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
n43 -> n54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
n44 -> n45  [key=0, style=solid];
n44 -> n46  [key=0, style=solid];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n33  [key=2, style=dotted];
n50 -> n53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n54 -> n55  [key=0, style=solid];
n54 -> n31  [key=2, style=dotted];
n54 -> n37  [key=2, style=dotted];
n54 -> n38  [key=2, style=dotted];
n54 -> n56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n45 -> n51  [key=0, style=solid];
n45 -> n15  [key=2, style=dotted];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=0, style=solid];
n46 -> n30  [key=2, style=dotted];
n47 -> n51  [key=0, style=solid];
n47 -> n52  [key=2, style=dotted];
n49 -> n51  [key=0, style=solid];
n49 -> n15  [key=2, style=dotted];
n51 -> n43  [key=0, style=bold, color=blue];
n53 -> n54  [key=0, style=solid];
n55 -> n53  [key=0, style=bold, color=blue];
n56 -> n57  [key=0, style=solid];
n57 -> n58  [key=0, style=solid];
n57 -> n42  [key=2, style=dotted];
n58 -> n56  [key=0, style=bold, color=blue];
n59 -> n60  [key=0, style=solid];
n59 -> n62  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n59 -> n64  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n59 -> n66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n59 -> n70  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n60 -> n61  [key=0, style=solid];
n60 -> n62  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=0, style=solid];
n64 -> n65  [key=0, style=solid];
n64 -> n66  [key=0, style=solid];
n66 -> n67  [key=0, style=solid];
n66 -> n33  [key=2, style=dotted];
n66 -> n69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n70 -> n71  [key=0, style=solid];
n70 -> n37  [key=2, style=dotted];
n70 -> n72  [key=2, style=dotted];
n70 -> n73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n61 -> n67  [key=0, style=solid];
n61 -> n15  [key=2, style=dotted];
n63 -> n67  [key=0, style=solid];
n63 -> n15  [key=2, style=dotted];
n65 -> n67  [key=0, style=solid];
n65 -> n68  [key=2, style=dotted];
n67 -> n59  [key=0, style=bold, color=blue];
n69 -> n70  [key=0, style=solid];
n71 -> n69  [key=0, style=bold, color=blue];
n73 -> n74  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n42  [key=2, style=dotted];
n75 -> n73  [key=0, style=bold, color=blue];
n76 -> n77  [key=0, style=solid];
n77 -> n78  [key=0, style=solid, color=red];
n77 -> n23  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid, color=red];
n78 -> n80  [key=2, style=dotted, color=red];
n79 -> n76  [key=0, style=bold, color=blue];
n81 -> n82  [key=0, style=solid];
n81 -> n86  [key=2, style=dotted];
n81 -> n91  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
n81 -> n99  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
n81 -> n102  [key=1, style=dashed, color=darkseagreen4, label=normalize];
n91 -> n92  [key=0, style=solid];
n91 -> n93  [key=2, style=dotted];
n91 -> n94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n95 -> n96  [key=0, style=solid];
n95 -> n97  [key=2, style=dotted];
n82 -> n83  [key=0, style=solid];
n82 -> n87  [key=2, style=dotted];
n82 -> n88  [key=2, style=dotted];
n82 -> n101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n82 -> n107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n102 -> n103  [key=0, style=solid];
n102 -> n88  [key=2, style=dotted];
n102 -> n104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n105 -> n106  [key=0, style=solid];
n105 -> n97  [key=2, style=dotted];
n108 -> n109  [key=0, style=solid];
n108 -> n97  [key=2, style=dotted];
n83 -> n84  [key=0, style=solid];
n83 -> n89  [key=2, style=dotted];
n83 -> n110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n111 -> n112  [key=0, style=solid];
n111 -> n113  [key=2, style=dotted];
n99 -> n100  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n84 -> n85  [key=0, style=solid];
n110 -> n111  [key=0, style=solid];
n85 -> n42  [key=0, style=bold, color=blue];
n90 -> n91  [key=0, style=solid];
n92 -> n90  [key=0, style=bold, color=blue];
n94 -> n95  [key=0, style=solid];
n96 -> n94  [key=0, style=bold, color=blue];
n98 -> n99  [key=0, style=solid];
n100 -> n98  [key=0, style=bold, color=blue];
n103 -> n101  [key=0, style=bold, color=blue];
n104 -> n105  [key=0, style=solid];
n106 -> n104  [key=0, style=bold, color=blue];
n109 -> n107  [key=0, style=bold, color=blue];
n112 -> n110  [key=0, style=bold, color=blue];
n114 -> n115  [key=0, style=solid];
n114 -> n116  [key=2, style=dotted];
n114 -> n117  [key=2, style=dotted];
n115 -> n33  [key=0, style=bold, color=blue];
n117 -> n122  [key=0, style=solid];
n117 -> n127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n117 -> n134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n117 -> n123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=2, style=dotted];
n118 -> n121  [key=2, style=dotted];
n119 -> n37  [key=0, style=bold, color=blue];
n122 -> n123  [key=0, style=solid];
n122 -> n125  [key=2, style=dotted];
n122 -> n126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n127 -> n128  [key=0, style=solid];
n127 -> n129  [key=2, style=dotted];
n127 -> n130  [key=2, style=dotted];
n127 -> n131  [key=2, style=dotted];
n127 -> n132  [key=2, style=dotted];
n127 -> n133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=2, style=dotted];
n134 -> n137  [key=2, style=dotted];
n123 -> n124  [key=0, style=solid];
n126 -> n127  [key=0, style=solid];
n124 -> n117  [key=0, style=bold, color=blue];
n128 -> n126  [key=0, style=bold, color=blue];
n133 -> n134  [key=0, style=solid];
n135 -> n133  [key=0, style=bold, color=blue];
n138 -> n139  [key=0, style=solid];
n138 -> n140  [key=0, style=solid];
n140 -> n141  [key=0, style=solid];
n140 -> n144  [key=0, style=solid];
n139 -> n144  [key=0, style=solid];
n141 -> n142  [key=0, style=solid];
n141 -> n143  [key=0, style=solid];
n144 -> n23  [key=0, style=bold, color=blue];
n142 -> n143  [key=0, style=solid];
n142 -> n145  [key=2, style=dotted];
n143 -> n144  [key=0, style=solid];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_37  [key=2, style=dotted];
m0_1 -> m0_38  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_39  [key=2, style=dotted];
m0_2 -> m0_38  [key=2, style=dotted];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> m0_40  [key=2, style=dotted];
m0_3 -> m0_38  [key=2, style=dotted];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_41  [key=2, style=dotted];
m0_4 -> m0_38  [key=2, style=dotted];
m0_5 -> m0_6  [key=0, style=solid];
m0_5 -> m0_42  [key=2, style=dotted];
m0_5 -> m0_38  [key=2, style=dotted];
m0_6 -> m0_7  [key=0, style=solid];
m0_6 -> m0_43  [key=2, style=dotted];
m0_6 -> m0_38  [key=2, style=dotted];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_43  [key=2, style=dotted];
m0_7 -> m0_38  [key=2, style=dotted];
m0_8 -> m0_9  [key=0, style=solid];
m0_8 -> m0_44  [key=2, style=dotted];
m0_9 -> m0_10  [key=0, style=solid];
m0_9 -> m0_44  [key=2, style=dotted];
m0_10 -> m0_11  [key=0, style=solid];
m0_10 -> m0_44  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_45  [key=2, style=dotted];
m0_12 -> m0_13  [key=0, style=solid];
m0_12 -> m0_45  [key=2, style=dotted];
m0_13 -> m0_14  [key=0, style=solid];
m0_13 -> m0_45  [key=2, style=dotted];
m0_14 -> m0_15  [key=0, style=solid];
m0_14 -> m0_45  [key=2, style=dotted];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_45  [key=2, style=dotted];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_45  [key=2, style=dotted];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_45  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_18 -> m0_45  [key=2, style=dotted];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_45  [key=2, style=dotted];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_45  [key=2, style=dotted];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_45  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_45  [key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_45  [key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_45  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_45  [key=2, style=dotted];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_45  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_27 -> m0_45  [key=2, style=dotted];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_45  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_45  [key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_45  [key=2, style=dotted];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_45  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_45  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_45  [key=2, style=dotted];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_45  [key=2, style=dotted];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_45  [key=2, style=dotted];
m0_36 -> m0_0  [key=0, style=bold, color=blue];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_11  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_12  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_13  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_14  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_15  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_16  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_17  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_18  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_19  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_20  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_21  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_22  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_23  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_25  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_26  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_27  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_28  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_29  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_30  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_31  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_32  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_33  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_34  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_45 -> m0_35  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_48  [key=2, style=dotted];
m0_46 -> m0_38  [key=2, style=dotted];
m0_47 -> m0_45  [key=0, style=bold, color=blue];
m0_44 -> m0_49  [key=0, style=solid];
m0_44 -> m0_8  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_44 -> m0_9  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_44 -> m0_40  [key=3, color=darkorchid, style=bold, label="Parameter variable string localeCode"];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_51  [key=2, style=dotted];
m0_49 -> m0_38  [key=2, style=dotted];
m0_50 -> m0_44  [key=0, style=bold, color=blue];
m0_52 -> m0_1  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_5  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_6  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_7  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_9  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_12  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_13  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_14  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_15  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_16  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_17  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_18  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_19  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_20  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_21  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_22  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_23  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_25  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_26  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_27  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_28  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_29  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_30  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_31  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_32  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_33  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_35  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m0_52 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Configuration.FormatterRegistry"];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_30  [key=2, style=dotted];
m1_27 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_9  [key=2, style=dotted];
m1_29 -> m1_26  [key=0, style=bold, color=blue];
m1_3 -> m1_4  [key=0, style=solid];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_7  [key=2, style=dotted];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_8  [key=2, style=dotted];
m1_5 -> m1_9  [key=2, style=dotted];
m1_6 -> m1_3  [key=0, style=bold, color=blue];
m1_19 -> m1_20  [key=0, style=solid];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_7  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_14  [key=2, style=dotted];
m1_21 -> m1_9  [key=2, style=dotted];
m1_22 -> m1_19  [key=0, style=bold, color=blue];
m1_35 -> m1_36  [key=0, style=solid];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=2, style=dotted];
m1_36 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_9  [key=2, style=dotted];
m1_38 -> m1_35  [key=0, style=bold, color=blue];
m1_23 -> m1_24  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_14  [key=2, style=dotted];
m1_24 -> m1_9  [key=2, style=dotted];
m1_25 -> m1_23  [key=0, style=bold, color=blue];
m1_40 -> m1_41  [key=0, style=solid];
m1_31 -> m1_32  [key=0, style=solid];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_34  [key=2, style=dotted];
m1_33 -> m1_31  [key=0, style=bold, color=blue];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_34  [key=2, style=dotted];
m1_42 -> m1_40  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_7  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_12 -> m1_9  [key=2, style=dotted];
m1_13 -> m1_10  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_7  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_9  [key=2, style=dotted];
m1_18 -> m1_15  [key=0, style=bold, color=blue];
m1_43 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.CollectionHumanizeTests"];
m1_43 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.CollectionHumanizeTests"];
m1_43 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Tests.CollectionHumanizeTests"];
}
