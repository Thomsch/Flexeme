digraph  {
n170 [label="System.StringComparer", span=""];
n171 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
n172 [label="CSharpx.Maybe<System.Func<T>>", span=""];
n173 [label=specProps, span=""];
n174 [label=makeDefault, span=""];
n175 [label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", span=""];
n176 [label="System.Collections.Generic.IEnumerable<string>", span=""];
n177 [label=optionSpecs, span=""];
n178 [label="System.StringComparer", span=""];
n179 [label="System.Globalization.CultureInfo", span=""];
n180 [label=typeInfo, span=""];
n181 [label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", span=""];
n182 [label=token, span=""];
n183 [label=specPropsWithValue, span=""];
n0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture,\r\n                nonFatalErrors);", span="21-34", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=red, community=2];
n5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="25-25", cluster="lambda expression", color=red, community=0];
n12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="25-25", cluster="lambda expression", color=red, community=0];
n6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="26-28", cluster="lambda expression", color=red, community=2];
n16 [label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="28-28", cluster="lambda expression", color=red, community=0];
n2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n4 [label="Entry lambda expression", span="23-30", cluster="lambda expression"];
n9 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)"];
n11 [label="Entry lambda expression", span="25-25", cluster="lambda expression"];
n7 [label="return explodedTokens;", span="29-29", cluster="lambda expression", color=red, community=0];
n10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)"];
n15 [label="Entry lambda expression", span="28-28", cluster="lambda expression"];
n8 [label="Exit lambda expression", span="23-30", cluster="lambda expression"];
n13 [label="Exit lambda expression", span="25-25", cluster="lambda expression"];
n14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n17 [label="Exit lambda expression", span="28-28", cluster="lambda expression"];
n18 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n19 [label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="45-45", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n23 [label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="56-60", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n52 [label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="57-60", cluster="lambda expression"];
n25 [label="Func<ParserResult<T>> buildUp = () =>\r\n            {\r\n                var tokenizerResult = tokenizer(arguments, optionSpecs);\r\n\r\n                var tokens = tokenizerResult.SucceededWith();\r\n\r\n                var partitions = TokenPartitioner.Partition(\r\n                    tokens,\r\n                    name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer));\r\n\r\n                var optionSpecPropsResult =\r\n                    OptionMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                        partitions.Options,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                        nameComparer);\r\n\r\n                var valueSpecPropsResult =\r\n                    ValueMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                        partitions.Values,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture));\r\n\r\n                var missingValueErrors = from token in partitions.Errors\r\n                    select\r\n                        new MissingValueOptionError(\r\n                            optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))\r\n                                .FromOptionSpecification());\r\n\r\n                var specPropsWithValue =\r\n                    optionSpecPropsResult.SucceededWith().Concat(valueSpecPropsResult.SucceededWith());\r\n\r\n                Func<T> buildMutable = () =>\r\n                {\r\n                    var mutable = factory.Return(f => f(), Activator.CreateInstance<T>());\r\n                    mutable =\r\n                        mutable.SetProperties(specPropsWithValue, sp => sp.Value.IsJust(), sp => sp.Value.FromJust())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                                sp => sp.Specification.DefaultValue.FromJust())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp =>\r\n                                    sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing(),\r\n                                sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray());\r\n                    return mutable;\r\n                };\r\n\r\n                Func<T> buildImmutable = () =>\r\n                {\r\n                    var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray());\r\n                    var values = (from prms in ctor.GetParameters()\r\n                        join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                        select\r\n                            sp.Value.Return(\r\n                                v => v,\r\n                                sp.Specification.DefaultValue.Return(\r\n                                    d => d,\r\n                                    sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray();\r\n                    var immutable = (T)ctor.Invoke(values);\r\n                    return immutable;\r\n                };\r\n\r\n                var instance = typeInfo.IsMutable() ? buildMutable() : buildImmutable();\r\n\r\n                var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup(tokens));\r\n\r\n                var allErrors =\r\n                    tokenizerResult.SuccessfulMessages()\r\n                        .Concat(missingValueErrors)\r\n                        .Concat(optionSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(valueSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(validationErrors)\r\n                        .Memorize();\r\n\r\n                var warnings = from e in allErrors where nonFatalErrors.Contains(e.Tag) select e;\r\n\r\n                return allErrors.Except(warnings).ToParserResult(instance);\r\n            }", span="65-145", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n68 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="67-67", cluster="lambda expression"];
n70 [label="var partitions = TokenPartitioner.Partition(\r\n                    tokens,\r\n                    name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="71-73", cluster="lambda expression"];
n103 [label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="73-73", cluster="lambda expression"];
n71 [label="var optionSpecPropsResult =\r\n                    OptionMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                        partitions.Options,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                        nameComparer)", span="75-80", cluster="lambda expression"];
n107 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79", cluster="lambda expression"];
n72 [label="var valueSpecPropsResult =\r\n                    ValueMapper.MapValues(\r\n                        (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                        partitions.Values,\r\n                        (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-86", cluster="lambda expression"];
n111 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="86-86", cluster="lambda expression"];
n73 [label="var missingValueErrors = from token in partitions.Errors\r\n                    select\r\n                        new MissingValueOptionError(\r\n                            optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))\r\n                                .FromOptionSpecification())", span="88-92", cluster="lambda expression"];
n114 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="91-91", cluster="lambda expression"];
n75 [label="Func<T> buildMutable = () =>\r\n                {\r\n                    var mutable = factory.Return(f => f(), Activator.CreateInstance<T>());\r\n                    mutable =\r\n                        mutable.SetProperties(specPropsWithValue, sp => sp.Value.IsJust(), sp => sp.Value.FromJust())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                                sp => sp.Specification.DefaultValue.FromJust())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp =>\r\n                                    sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing(),\r\n                                sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray());\r\n                    return mutable;\r\n                }", span="97-113", cluster="lambda expression"];
n118 [label="var mutable = factory.Return(f => f(), Activator.CreateInstance<T>())", span="99-99", cluster="lambda expression"];
n80 [label="var warnings = from e in allErrors where nonFatalErrors.Contains(e.Tag) select e", span="142-142", cluster="lambda expression"];
n26 [label="var preprocessorErrors = arguments.Any()\r\n                ? arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))\r\n                : Enumerable.Empty<Error>()", span="147-149", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n27 [label="var result = arguments.Any()\r\n                ? preprocessorErrors.Any()\r\n                    ? notParsed(preprocessorErrors)\r\n                    : buildUp()\r\n                : buildUp()", span="151-155", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n20 [label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="47-48", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n30 [label="Entry Unk.Return", span="", cluster="Unk.Return"];
n40 [label="Entry lambda expression", span="45-45", cluster="lambda expression"];
n76 [label="Func<T> buildImmutable = () =>\r\n                {\r\n                    var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray());\r\n                    var values = (from prms in ctor.GetParameters()\r\n                        join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                        select\r\n                            sp.Value.Return(\r\n                                v => v,\r\n                                sp.Specification.DefaultValue.Return(\r\n                                    d => d,\r\n                                    sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray();\r\n                    var immutable = (T)ctor.Invoke(values);\r\n                    return immutable;\r\n                }", span="115-128", cluster="lambda expression"];
n153 [label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="117-117", cluster="lambda expression"];
n77 [label="var instance = typeInfo.IsMutable() ? buildMutable() : buildImmutable()", span="130-130", cluster="lambda expression"];
n21 [label="var specs = from pt in specProps select pt.Specification", span="50-50", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n31 [label="Entry Unk.GetSpecifications", span="", cluster="Unk.GetSpecifications"];
n45 [label="Entry lambda expression", span="47-48", cluster="lambda expression"];
n22 [label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="52-54", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n32 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate"];
n33 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()"];
n24 [label="Func<IEnumerable<Error>, ParserResult<T>> notParsed =\r\n                errs => new NotParsed<T>(makeDefault().GetType().ToTypeInfo(), errs)", span="62-63", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n62 [label="new NotParsed<T>(makeDefault().GetType().ToTypeInfo(), errs)", span="63-63", cluster="lambda expression"];
n34 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
n35 [label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11", cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)"];
n36 [label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="11-11", cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
n37 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
n28 [label="return result;", span="157-157", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n38 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n39 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
n29 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="37-37", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)"];
n41 [label="f().GetType()", span="45-45", cluster="lambda expression"];
n42 [label="Exit lambda expression", span="45-45", cluster="lambda expression"];
n43 [label="Entry Unk.f", span="", cluster="Unk.f"];
n44 [label="Entry Unk.GetType", span="", cluster="Unk.GetType"];
n46 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="47-48", cluster="lambda expression"];
n47 [label="Exit lambda expression", span="47-48", cluster="lambda expression"];
n48 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="103-103", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)"];
n49 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()"];
n50 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)"];
n51 [label="Entry lambda expression", span="56-60", cluster="lambda expression"];
n53 [label="Exit lambda expression", span="56-60", cluster="lambda expression"];
n54 [label="Entry System.Type.IsMutable()", span="139-139", cluster="System.Type.IsMutable()"];
n55 [label="Entry System.Activator.CreateInstance<T>()", span="0-0", cluster="System.Activator.CreateInstance<T>()"];
n56 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray"];
n57 [label="Entry Unk.>", span="", cluster="Unk.>"];
n58 [label="Entry lambda expression", span="58-58", cluster="lambda expression"];
n59 [label="f()", span="58-58", cluster="lambda expression"];
n60 [label="Exit lambda expression", span="58-58", cluster="lambda expression"];
n61 [label="Entry lambda expression", span="63-63", cluster="lambda expression"];
n63 [label="Exit lambda expression", span="63-63", cluster="lambda expression"];
n64 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n65 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()"];
n66 [label="Entry System.Type.ToTypeInfo()", span="174-174", cluster="System.Type.ToTypeInfo()"];
n67 [label="Entry lambda expression", span="65-145", cluster="lambda expression"];
n69 [label="var tokens = tokenizerResult.SucceededWith()", span="69-69", cluster="lambda expression"];
n83 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)"];
n79 [label="var allErrors =\r\n                    tokenizerResult.SuccessfulMessages()\r\n                        .Concat(missingValueErrors)\r\n                        .Concat(optionSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(valueSpecPropsResult.SuccessfulMessages())\r\n                        .Concat(validationErrors)\r\n                        .Memorize()", span="134-140", cluster="lambda expression"];
n84 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="653-653", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()"];
n78 [label="var validationErrors = specPropsWithValue.Validate(SpecificationPropertyRules.Lookup(tokens))", span="132-132", cluster="lambda expression"];
n85 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)"];
n102 [label="Entry lambda expression", span="73-73", cluster="lambda expression"];
n86 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()"];
n87 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues"];
n106 [label="Entry lambda expression", span="79-79", cluster="lambda expression"];
n74 [label="var specPropsWithValue =\r\n                    optionSpecPropsResult.SucceededWith().Concat(valueSpecPropsResult.SucceededWith())", span="94-95", cluster="lambda expression"];
n88 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()"];
n110 [label="Entry lambda expression", span="86-86", cluster="lambda expression"];
n89 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)"];
n90 [label="Entry Unk.Single", span="", cluster="Unk.Single"];
n91 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification"];
n113 [label="Entry lambda expression", span="91-91", cluster="lambda expression"];
n92 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n119 [label="mutable =\r\n                        mutable.SetProperties(specPropsWithValue, sp => sp.Value.IsJust(), sp => sp.Value.FromJust())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                                sp => sp.Specification.DefaultValue.FromJust())\r\n                            .SetProperties(\r\n                                specPropsWithValue,\r\n                                sp =>\r\n                                    sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing(),\r\n                                sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="100-111", cluster="lambda expression"];
n154 [label="var values = (from prms in ctor.GetParameters()\r\n                        join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                        select\r\n                            sp.Value.Return(\r\n                                v => v,\r\n                                sp.Specification.DefaultValue.Return(\r\n                                    d => d,\r\n                                    sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="118-125", cluster="lambda expression"];
n93 [label="Entry Unk.IsMutable", span="", cluster="Unk.IsMutable"];
n81 [label="return allErrors.Except(warnings).ToParserResult(instance);", span="144-144", cluster="lambda expression"];
n94 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)"];
n95 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)"];
n96 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()", span="15-15", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SuccessfulMessages<TSuccess, TMessage>()"];
n97 [label="Entry Unk.Concat", span="", cluster="Unk.Concat"];
n98 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize"];
n99 [label="Entry Unk.Contains", span="", cluster="Unk.Contains"];
n82 [label="Exit lambda expression", span="65-145", cluster="lambda expression"];
n100 [label="Entry Unk.Except", span="", cluster="Unk.Except"];
n101 [label="Entry Unk.ToParserResult", span="", cluster="Unk.ToParserResult"];
n104 [label="Exit lambda expression", span="73-73", cluster="lambda expression"];
n105 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)"];
n108 [label="Exit lambda expression", span="79-79", cluster="lambda expression"];
n109 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)"];
n112 [label="Exit lambda expression", span="86-86", cluster="lambda expression"];
n115 [label="Exit lambda expression", span="91-91", cluster="lambda expression"];
n116 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)"];
n117 [label="Entry lambda expression", span="97-113", cluster="lambda expression"];
n124 [label="Entry lambda expression", span="99-99", cluster="lambda expression"];
n120 [label="return mutable;", span="112-112", cluster="lambda expression"];
n122 [label="Entry Unk.SetProperties", span="", cluster="Unk.SetProperties"];
n123 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)"];
n127 [label="Entry lambda expression", span="101-101", cluster="lambda expression"];
n131 [label="Entry lambda expression", span="101-101", cluster="lambda expression"];
n135 [label="Entry lambda expression", span="104-104", cluster="lambda expression"];
n139 [label="Entry lambda expression", span="105-105", cluster="lambda expression"];
n142 [label="Entry lambda expression", span="108-110", cluster="lambda expression"];
n146 [label="Entry lambda expression", span="111-111", cluster="lambda expression"];
n121 [label="Exit lambda expression", span="97-113", cluster="lambda expression"];
n125 [label="f()", span="99-99", cluster="lambda expression"];
n126 [label="Exit lambda expression", span="99-99", cluster="lambda expression"];
n128 [label="sp.Value.IsJust()", span="101-101", cluster="lambda expression"];
n129 [label="Exit lambda expression", span="101-101", cluster="lambda expression"];
n130 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326", cluster="CSharpx.Maybe<T>.IsJust<T>()"];
n132 [label="sp.Value.FromJust()", span="101-101", cluster="lambda expression"];
n133 [label="Exit lambda expression", span="101-101", cluster="lambda expression"];
n134 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()"];
n136 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="104-104", cluster="lambda expression"];
n137 [label="Exit lambda expression", span="104-104", cluster="lambda expression"];
n138 [label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="334-334", cluster="CSharpx.Maybe<T>.IsNothing<T>()"];
n140 [label="sp.Specification.DefaultValue.FromJust()", span="105-105", cluster="lambda expression"];
n141 [label="Exit lambda expression", span="105-105", cluster="lambda expression"];
n143 [label="sp.Value.IsNothing() && sp.Specification.TargetType == TargetType.Sequence\r\n                                    && sp.Specification.DefaultValue.MatchNothing()", span="109-110", cluster="lambda expression"];
n144 [label="Exit lambda expression", span="108-110", cluster="lambda expression"];
n145 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()"];
n147 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="111-111", cluster="lambda expression"];
n148 [label="Exit lambda expression", span="111-111", cluster="lambda expression"];
n149 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()"];
n150 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()"];
n151 [label="Entry System.Type.CreateEmptyArray()", span="125-125", cluster="System.Type.CreateEmptyArray()"];
n152 [label="Entry lambda expression", span="115-128", cluster="lambda expression"];
n158 [label="Entry Unk.GetConstructor", span="", cluster="Unk.GetConstructor"];
n155 [label="var immutable = (T)ctor.Invoke(values)", span="126-126", cluster="lambda expression"];
n159 [label="Entry Unk.GetParameters", span="", cluster="Unk.GetParameters"];
n160 [label="Entry Unk.ToLower", span="", cluster="Unk.ToLower"];
n161 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()"];
n162 [label="Entry Unk.CreateDefaultForImmutable", span="", cluster="Unk.CreateDefaultForImmutable"];
n164 [label="Entry lambda expression", span="122-122", cluster="lambda expression"];
n167 [label="Entry lambda expression", span="124-124", cluster="lambda expression"];
n156 [label="return immutable;", span="127-127", cluster="lambda expression"];
n163 [label="Entry Unk.Invoke", span="", cluster="Unk.Invoke"];
n157 [label="Exit lambda expression", span="115-128", cluster="lambda expression"];
n165 [label=v, span="122-122", cluster="lambda expression"];
n166 [label="Exit lambda expression", span="122-122", cluster="lambda expression"];
n168 [label=d, span="124-124", cluster="lambda expression"];
n169 [label="Exit lambda expression", span="124-124", cluster="lambda expression"];
m0_78 [label="Entry System.Type.GetGenericTypeDefinition()", span="0-0", cluster="System.Type.GetGenericTypeDefinition()", file="InstanceBuilderTests.cs"];
m0_51 [label="Entry CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", span="137-137", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="InstanceBuilderTests.cs"];
m0_52 [label="object[] a = AssemblyFromWhichToPullInformation.GetCustomAttributes(typeof(TAttribute), false)", span="140-140", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="InstanceBuilderTests.cs"];
m0_53 [label="a.Length <= 0", span="141-141", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="InstanceBuilderTests.cs"];
m0_55 [label="return (TAttribute)a[0];", span="143-143", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="InstanceBuilderTests.cs"];
m0_54 [label="return null;", span="141-141", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="InstanceBuilderTests.cs"];
m0_56 [label="Exit CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", span="137-137", cluster="CommandLine.Internal.ReflectionUtil.GetAttribute<TAttribute>()", file="InstanceBuilderTests.cs"];
m0_39 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="112-112", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_40 [label="IList<TAttribute> list = new List<TAttribute>()", span="115-115", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_41 [label="var info = target.GetType().GetProperties()", span="116-116", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_48 [label="list.Add((TAttribute)attribute)", span="128-128", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_49 [label="return list;", span="134-134", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_42 [label=info, span="118-118", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_43 [label="property != null && (property.CanRead && property.CanWrite)", span="120-120", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_44 [label="var setMethod = property.GetSetMethod()", span="122-122", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_46 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="125-125", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_45 [label="setMethod != null && !setMethod.IsStatic", span="123-123", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_47 [label="attribute != null", span="126-126", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_50 [label="Exit CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", span="112-112", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyAttributeList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_17 [label="Entry System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", span="0-0", cluster="System.Attribute.GetCustomAttribute(System.Reflection.MemberInfo, System.Type, bool)", file="InstanceBuilderTests.cs"];
m0_20 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="70-70", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_21 [label="var info = target.GetType().GetMethods()", span="73-73", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_22 [label=info, span="75-75", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_23 [label="!method.IsStatic", span="77-77", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_27 [label="return null;", span="88-88", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_24 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="79-80", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_26 [label="return new Pair<MethodInfo, TAttribute>(method, (TAttribute)attribute);", span="83-83", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_25 [label="attribute != null", span="81-81", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_28 [label="Exit CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", span="70-70", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethod<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_30 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="91-91", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_31 [label="var info = target.GetType().GetMethods()", span="94-94", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_32 [label=info, span="96-96", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_33 [label="!method.IsStatic", span="98-98", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_37 [label="return null;", span="109-109", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_34 [label="Attribute attribute =\r\n                        Attribute.GetCustomAttribute(method, typeof(TAttribute), false)", span="100-101", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_35 [label="attribute != null", span="102-102", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_36 [label="return (TAttribute)attribute;", span="104-104", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_38 [label="Exit CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", span="91-91", cluster="CommandLine.Internal.ReflectionUtil.RetrieveMethodAttributeOnly<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_18 [label="Entry CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", span="37-37", cluster="CommandLine.Internal.Pair<TLeft, TRight>.Pair(TLeft, TRight)", file="InstanceBuilderTests.cs"];
m0_57 [label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="InstanceBuilderTests.cs"];
m0_74 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="InstanceBuilderTests.cs"];
m0_16 [label="Entry System.Reflection.PropertyInfo.GetSetMethod()", span="0-0", cluster="System.Reflection.PropertyInfo.GetSetMethod()", file="InstanceBuilderTests.cs"];
m0_19 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="InstanceBuilderTests.cs"];
m0_58 [label="Entry CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="151-151", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_59 [label="Pair<PropertyInfo, TAttribute> found = null", span="154-154", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_60 [label="target == null", span="155-155", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_62 [label="var propertiesInfo = target.GetType().GetProperties()", span="156-156", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_69 [label="optionAttr != null && string.CompareOrdinal(uniqueName, optionAttr.UniqueName) == 0", span="167-167", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_72 [label="return found;", span="175-175", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_61 [label="return null;", span="155-155", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_63 [label=propertiesInfo, span="158-158", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_64 [label="property != null && (property.CanRead && property.CanWrite)", span="160-160", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_65 [label="var setMethod = property.GetSetMethod()", span="162-162", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_67 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="165-165", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_70 [label="found = new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute)", span="169-169", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_66 [label="setMethod != null && !setMethod.IsStatic", span="163-163", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_68 [label="var optionAttr = (TAttribute)attribute", span="166-166", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_71 [label="return found;", span="170-170", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_73 [label="Exit CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", span="151-151", cluster="CommandLine.Internal.ReflectionUtil.RetrieveOptionProperty<TAttribute>(object, string)", file="InstanceBuilderTests.cs"];
m0_75 [label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="InstanceBuilderTests.cs"];
m0_76 [label="return type.IsGenericType && type.GetGenericTypeDefinition() == typeof(Nullable<>);", span="180-180", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="InstanceBuilderTests.cs"];
m0_77 [label="Exit CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178", cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", file="InstanceBuilderTests.cs"];
m0_0 [label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_1 [label="IList<Pair<PropertyInfo, TAttribute>> list = new List<Pair<PropertyInfo, TAttribute>>()", span="46-46", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_2 [label="target != null", span="47-47", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_3 [label="var propertiesInfo = target.GetType().GetProperties()", span="49-49", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_10 [label="list.Add(new Pair<PropertyInfo, TAttribute>(property, (TAttribute)attribute))", span="61-61", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_11 [label="return list;", span="67-67", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_4 [label=propertiesInfo, span="51-51", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_5 [label="property != null && (property.CanRead && property.CanWrite)", span="53-53", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_6 [label="var setMethod = property.GetSetMethod()", span="55-55", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_8 [label="var attribute = Attribute.GetCustomAttribute(property, typeof(TAttribute), false)", span="58-58", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_7 [label="setMethod != null && !setMethod.IsStatic", span="56-56", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_9 [label="attribute != null", span="59-59", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", color=red, community=0, file="InstanceBuilderTests.cs"];
m0_12 [label="Exit CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43", cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="InstanceBuilderTests.cs"];
m0_29 [label="Entry System.Type.GetMethods()", span="0-0", cluster="System.Type.GetMethods()", file="InstanceBuilderTests.cs"];
m0_15 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="InstanceBuilderTests.cs"];
m0_13 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="InstanceBuilderTests.cs"];
m1_0 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooserTests.cs"];
m1_1 [label="var assembly = GetExecutingOrEntryAssembly()", span="15-15", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", color=green, community=0, file="InstanceChooserTests.cs"];
m1_2 [label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="InstanceChooserTests.cs"];
m1_3 [label="Entry Unk.GetExecutingOrEntryAssembly", span="", cluster="Unk.GetExecutingOrEntryAssembly", file="InstanceChooserTests.cs"];
m2_88 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", span="20-20", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>)", file="Parser.cs"];
m2_132 [label="Entry CSharpx.Maybe<System.Tuple<T1, T2>>.Do<T1, T2>(System.Action<T1, T2>)", span="312-312", cluster="CSharpx.Maybe<System.Tuple<T1, T2>>.Do<T1, T2>(System.Action<T1, T2>)", file="Parser.cs"];
m2_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m2_9 [label="configuration == null", span="39-39", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m2_12 [label="configuration(settings)", span="42-42", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m2_10 [label="throw new ArgumentNullException(''configuration'');", span="39-39", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m2_11 [label="settings = new ParserSettings()", span="41-41", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m2_13 [label="settings.Consumed = true", span="43-43", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m2_14 [label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m2_37 [label="Entry CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198", cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs"];
m2_118 [label="return ignoreUnknownArguments\r\n                ? Enumerable.Empty<ErrorType>().Concat(ErrorType.UnknownOptionError)\r\n                : Enumerable.Empty<ErrorType>();", span="200-202", cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs"];
m2_119 [label="Exit CommandLine.Parser.HandleUnknownArguments(bool)", span="198-198", cluster="CommandLine.Parser.HandleUnknownArguments(bool)", file="Parser.cs"];
m2_87 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Parser.cs"];
m2_93 [label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78", cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="Parser.cs"];
m2_20 [label="Entry CommandLine.Parser.~Parser()", span="55-55", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m2_21 [label="Dispose(false)", span="57-57", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m2_22 [label="Exit CommandLine.Parser.~Parser()", span="55-55", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m2_86 [label="Entry Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", span="", cluster="Func<IEnumerable<Token>, IEnumerable<Token>>.cstr", file="Parser.cs"];
m2_89 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Parser.cs"];
m2_16 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Parser.cs"];
m2_59 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_60 [label="args == null", span="146-146", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_62 [label="types == null", span="147-147", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_64 [label="types.Length == 0", span="148-148", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_66 [label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="150-158", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_61 [label="throw new ArgumentNullException(''args'');", span="146-146", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_63 [label="throw new ArgumentNullException(''types'');", span="147-147", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_65 [label="throw new ArgumentOutOfRangeException(''types'');", span="148-148", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_67 [label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="144-144", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs"];
m2_3 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m2_17 [label="this.settings = settings", span="48-48", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m2_18 [label="this.settings.Consumed = true", span="49-49", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m2_19 [label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m2_68 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs"];
m2_43 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_44 [label="factory == null", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_48 [label="args == null", span="119-119", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_50 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="121-129", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_45 [label="throw new ArgumentNullException(''factory'');", span="117-117", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_46 [label="!typeof(T).IsMutable()", span="118-118", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_47 [label="throw new ArgumentException(''factory'');", span="118-118", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_49 [label="throw new ArgumentNullException(''args'');", span="119-119", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_51 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="114-114", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_113 [label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27", cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs"];
m2_52 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="Parser.cs"];
m2_120 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="Parser.cs"];
m2_4 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25", cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs"];
m2_84 [label="return explodedTokens;", span="188-188", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", color=red, community=0];
m2_83 [label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer))", span="187-187", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", color=red, community=0];
m2_97 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs"];
m2_5 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m2_6 [label="settings = new ParserSettings { Consumed = true }", span="28-28", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m2_7 [label="Exit CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m2_31 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="Parser.cs"];
m2_116 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Parser.cs"];
m2_117 [label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m2_122 [label="parserResult.WithNotParsed(\r\n                errors =>\r\n                    Maybe.Merge(errors.ToMaybe(), helpWriter.ToMaybe())\r\n                        .Do((_, writer) => writer.Write(HelpText.AutoBuild(parserResult)))\r\n                )", span="207-211", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m2_123 [label="return parserResult;", span="213-213", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m2_124 [label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="205-205", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m2_133 [label="Entry lambda expression", span="210-210", cluster="lambda expression", file="Parser.cs"];
m2_0 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="Parser.cs"];
m2_1 [label="new Parser(new ParserSettings { HelpWriter = Console.Error })", span="21-21", cluster="lambda expression", file="Parser.cs"];
m2_2 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="Parser.cs"];
m2_35 [label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="94-100", cluster="lambda expression", file="Parser.cs"];
m2_34 [label="Entry lambda expression", span="94-100", cluster="lambda expression", file="Parser.cs"];
m2_36 [label="Exit lambda expression", span="94-100", cluster="lambda expression", file="Parser.cs"];
m2_39 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="Parser.cs"];
m2_40 [label="Tokenize(arguments, optionSpecs, settings)", span="96-96", cluster="lambda expression", file="Parser.cs"];
m2_41 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="Parser.cs"];
m2_54 [label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="122-128", cluster="lambda expression", file="Parser.cs"];
m2_53 [label="Entry lambda expression", span="122-128", cluster="lambda expression", file="Parser.cs"];
m2_55 [label="Exit lambda expression", span="122-128", cluster="lambda expression", file="Parser.cs"];
m2_56 [label="Entry lambda expression", span="124-124", cluster="lambda expression", file="Parser.cs"];
m2_57 [label="Tokenize(arguments, optionSpecs, settings)", span="124-124", cluster="lambda expression", file="Parser.cs"];
m2_58 [label="Exit lambda expression", span="124-124", cluster="lambda expression", file="Parser.cs"];
m2_70 [label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments))", span="151-157", cluster="lambda expression", file="Parser.cs"];
m2_69 [label="Entry lambda expression", span="151-157", cluster="lambda expression", file="Parser.cs"];
m2_71 [label="Exit lambda expression", span="151-157", cluster="lambda expression", file="Parser.cs"];
m2_73 [label="Entry lambda expression", span="152-152", cluster="lambda expression", file="Parser.cs"];
m2_74 [label="Tokenize(arguments, optionSpecs, settings)", span="152-152", cluster="lambda expression", file="Parser.cs"];
m2_75 [label="Exit lambda expression", span="152-152", cluster="lambda expression", file="Parser.cs"];
m2_91 [label="Tokenizer.Normalize(toks,\r\n                    name => NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound)", span="177-178", cluster="lambda expression", color=red, community=1, file="Parser.cs"];
m2_95 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer) != NameLookupResult.NoOptionFound", span="178-178", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m2_102 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="185-185", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m2_105 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="185-185", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m2_108 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="186-186", cluster="lambda expression", color=red, community=1, file="Parser.cs"];
m2_111 [label="NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer)", span="187-187", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m2_99 [label=toks, span="179-179", cluster="lambda expression", color=red, community=0, file="Parser.cs"];
m2_101 [label="Entry lambda expression", span="184-185", cluster="lambda expression", file="Parser.cs"];
m2_107 [label="Entry lambda expression", span="186-186", cluster="lambda expression", file="Parser.cs"];
m2_110 [label="Entry lambda expression", span="187-187", cluster="lambda expression", file="Parser.cs"];
m2_90 [label="Entry lambda expression", span="177-178", cluster="lambda expression", file="Parser.cs"];
m2_92 [label="Exit lambda expression", span="177-178", cluster="lambda expression", file="Parser.cs"];
m2_94 [label="Entry lambda expression", span="178-178", cluster="lambda expression", file="Parser.cs"];
m2_96 [label="Exit lambda expression", span="178-178", cluster="lambda expression", file="Parser.cs"];
m2_98 [label="Entry lambda expression", span="179-179", cluster="lambda expression", file="Parser.cs"];
m2_100 [label="Exit lambda expression", span="179-179", cluster="lambda expression", file="Parser.cs"];
m2_103 [label="Exit lambda expression", span="184-185", cluster="lambda expression", file="Parser.cs"];
m2_104 [label="Entry lambda expression", span="185-185", cluster="lambda expression", file="Parser.cs"];
m2_106 [label="Exit lambda expression", span="185-185", cluster="lambda expression", file="Parser.cs"];
m2_109 [label="Exit lambda expression", span="186-186", cluster="lambda expression", file="Parser.cs"];
m2_112 [label="Exit lambda expression", span="187-187", cluster="lambda expression", file="Parser.cs"];
m2_127 [label="Maybe.Merge(errors.ToMaybe(), helpWriter.ToMaybe())\r\n                        .Do((_, writer) => writer.Write(HelpText.AutoBuild(parserResult)))", span="209-210", cluster="lambda expression", file="Parser.cs"];
m2_134 [label="writer.Write(HelpText.AutoBuild(parserResult))", span="210-210", cluster="lambda expression", file="Parser.cs"];
m2_126 [label="Entry lambda expression", span="208-210", cluster="lambda expression", file="Parser.cs"];
m2_128 [label="Exit lambda expression", span="208-210", cluster="lambda expression", file="Parser.cs"];
m2_135 [label="Exit lambda expression", span="210-210", cluster="lambda expression", file="Parser.cs"];
m2_130 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="Parser.cs"];
m2_121 [label="Entry System.Collections.Generic.IEnumerable<T>.Concat<T>(T)", span="94-94", cluster="System.Collections.Generic.IEnumerable<T>.Concat<T>(T)", file="Parser.cs"];
m2_129 [label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331", cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", file="Parser.cs"];
m2_136 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs"];
m2_80 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="Parser.cs"];
m2_32 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="Parser.cs"];
m2_125 [label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="58-58", cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="Parser.cs"];
m2_72 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="35-35", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="Parser.cs"];
m2_145 [label="Entry CommandLine.ParserSettings.Dispose()", span="119-119", cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs"];
m2_30 [label="Entry System.Type.IsMutable()", span="139-139", cluster="System.Type.IsMutable()", file="Parser.cs"];
m2_33 [label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m2_114 [label="return DisplayHelp(\r\n                parseFunc(),\r\n                settings.HelpWriter);", span="193-195", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m2_115 [label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="191-191", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m2_76 [label="Entry CommandLine.Parser.Dispose()", span="164-164", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m2_77 [label="Dispose(true)", span="166-166", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m2_78 [label="GC.SuppressFinalize(this)", span="168-168", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m2_79 [label="Exit CommandLine.Parser.Dispose()", span="164-164", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m2_24 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_25 [label="args == null", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_28 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture,\r\n                    HandleUnknownArguments(settings.IgnoreUnknownArguments)),\r\n                settings);", span="93-101", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_26 [label="throw new ArgumentNullException(''args'');", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_27 [label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="89-91", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_29 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs"];
m2_42 [label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m2_81 [label="return\r\n                Tokenizer.ConfigureTokenizer(\r\n                    settings.NameComparer,\r\n                    settings.IgnoreUnknownArguments,\r\n                    settings.EnableDashDash)(arguments, optionSpecs);", span="176-180", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", color=green, community=1, file="Parser.cs"];
m2_82 [label="var tokens = settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer), normalize)", span="181-186", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", color=red, community=1, file="Parser.cs"];
m2_85 [label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="171-171", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m2_23 [label="Entry CommandLine.Parser.Dispose(bool)", span="216-216", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_138 [label=disposed, span="218-218", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_140 [label=disposing, span="220-220", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_139 [label="return;", span="218-218", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_141 [label="settings != null", span="222-222", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_142 [label="settings.Dispose()", span="223-223", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_143 [label="disposed = true", span="225-225", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_144 [label="Exit CommandLine.Parser.Dispose(bool)", span="216-216", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m2_131 [label="Entry CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", span="163-163", cluster="CSharpx.Maybe.Merge<T1, T2>(CSharpx.Maybe<T1>, CSharpx.Maybe<T2>)", file="Parser.cs"];
m2_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs"];
m2_137 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="Parser.cs"];
m2_146 [label="CommandLine.Parser", span="", file="Parser.cs"];
m2_147 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m2_148 [label=factory, span="", file="Parser.cs"];
m2_149 [label="System.Func<T>", span="", file="Parser.cs"];
m2_150 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m2_151 [label="System.Collections.Generic.IEnumerable<string>", span="", file="Parser.cs"];
m2_152 [label="params System.Type[]", span="", file="Parser.cs"];
m2_153 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="Parser.cs"];
m2_154 [label="CommandLine.ParserSettings", span="", file="Parser.cs"];
m2_155 [label=normalize, span="", file="Parser.cs"];
m2_156 [label="CommandLine.ParserResult<T>", span="", file="Parser.cs"];
m2_157 [label="System.IO.TextWriter", span="", file="Parser.cs"];
n170 -> n5  [key=1, style=dashed, color=red, label="System.StringComparer"];
n170 -> n12  [key=1, style=dashed, color=red, label="System.StringComparer"];
n170 -> n6  [key=1, style=dashed, color=red, label="System.StringComparer"];
n170 -> n16  [key=1, style=dashed, color=red, label="System.StringComparer"];
n171 -> n12  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n171 -> n16  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n172 -> n52  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n172 -> n75  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n172 -> n118  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n173 -> n52  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n173 -> n71  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n173 -> n72  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n173 -> n76  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n173 -> n153  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n174 -> n62  [key=1, style=dashed, color=darkseagreen4, label=makeDefault];
n175 -> n68  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
n176 -> n68  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n177 -> n68  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n177 -> n70  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n177 -> n103  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n177 -> n73  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n178 -> n70  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n178 -> n103  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n178 -> n71  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n178 -> n73  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n178 -> n114  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n179 -> n71  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n179 -> n107  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n179 -> n72  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n179 -> n111  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n180 -> n76  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
n180 -> n153  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
n180 -> n77  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
n181 -> n80  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>"];
n182 -> n114  [key=1, style=dashed, color=darkseagreen4, label=token];
n183 -> n119  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
n183 -> n154  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> n5  [key=1, style=dashed, color=red, label="System.StringComparer"];
n0 -> n12  [key=1, style=dashed, color=red, label="System.StringComparer"];
n0 -> n6  [key=1, style=dashed, color=red, label="System.StringComparer"];
n0 -> n16  [key=1, style=dashed, color=red, label="System.StringComparer"];
n0 -> n3  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> Build"];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=2, style=dotted, color=red];
n1 -> n4  [key=1, style=dashed, color=red, label="lambda expression"];
n1 -> n1  [key=3, color=red, style=bold, label="method methodReturn RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error> "];
n5 -> n6  [key=0, style=solid, color=red];
n5 -> n9  [key=2, style=dotted, color=red];
n5 -> n11  [key=1, style=dashed, color=red, label="lambda expression"];
n12 -> n13  [key=0, style=solid, color=red];
n12 -> n14  [key=2, style=dotted, color=red];
n6 -> n7  [key=0, style=solid, color=red];
n6 -> n10  [key=2, style=dotted, color=red];
n6 -> n15  [key=1, style=dashed, color=red, label="lambda expression"];
n16 -> n17  [key=0, style=solid, color=red];
n16 -> n18  [key=2, style=dotted, color=red];
n2 -> n0  [key=0, style=bold, color=blue];
n3 -> n19  [key=0, style=solid];
n3 -> n23  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n3 -> n52  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n3 -> n25  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n3 -> n68  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
n3 -> n70  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n3 -> n103  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n3 -> n71  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n3 -> n107  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n3 -> n72  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n3 -> n111  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
n3 -> n73  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n3 -> n114  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
n3 -> n75  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n3 -> n118  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
n3 -> n80  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>"];
n3 -> n26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n3 -> n27  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
n4 -> n5  [key=0, style=solid, color=red];
n4 -> n12  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n4 -> n6  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n4 -> n16  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
n11 -> n12  [key=0, style=solid, color=red];
n7 -> n8  [key=0, style=solid, color=red];
n15 -> n16  [key=0, style=solid, color=red];
n8 -> n4  [key=0, style=bold, color=blue];
n13 -> n11  [key=0, style=bold, color=blue];
n17 -> n15  [key=0, style=bold, color=blue];
n19 -> n20  [key=0, style=solid];
n19 -> n30  [key=2, style=dotted];
n19 -> n40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n19 -> n25  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
n19 -> n76  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
n19 -> n153  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
n19 -> n77  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
n23 -> n24  [key=0, style=solid];
n23 -> n62  [key=1, style=dashed, color=darkseagreen4, label=makeDefault];
n23 -> n23  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<T> makeDefault"];
n52 -> n53  [key=0, style=solid];
n52 -> n54  [key=2, style=dotted];
n52 -> n55  [key=2, style=dotted];
n52 -> n30  [key=2, style=dotted];
n52 -> n56  [key=2, style=dotted];
n52 -> n57  [key=2, style=dotted];
n52 -> n58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n52 -> n52  [key=1, style=dashed, color=darkseagreen4, label=p];
n25 -> n26  [key=0, style=solid];
n25 -> n27  [key=1, style=dashed, color=darkseagreen4, label=buildUp];
n25 -> n25  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.ParserResult<T>> buildUp"];
n68 -> n69  [key=0, style=solid];
n68 -> n83  [key=2, style=dotted];
n68 -> n79  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
n70 -> n71  [key=0, style=solid];
n70 -> n85  [key=2, style=dotted];
n70 -> n102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n70 -> n72  [key=1, style=dashed, color=darkseagreen4, label=partitions];
n70 -> n73  [key=1, style=dashed, color=darkseagreen4, label=partitions];
n103 -> n104  [key=0, style=solid];
n103 -> n105  [key=2, style=dotted];
n71 -> n72  [key=0, style=solid];
n71 -> n86  [key=2, style=dotted];
n71 -> n87  [key=2, style=dotted];
n71 -> n71  [key=1, style=dashed, color=darkseagreen4, label=pt];
n71 -> n106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n71 -> n74  [key=1, style=dashed, color=darkseagreen4, label=optionSpecPropsResult];
n71 -> n79  [key=1, style=dashed, color=darkseagreen4, label=optionSpecPropsResult];
n107 -> n108  [key=0, style=solid];
n107 -> n109  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n88  [key=2, style=dotted];
n72 -> n87  [key=2, style=dotted];
n72 -> n72  [key=1, style=dashed, color=darkseagreen4, label=pt];
n72 -> n110  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n72 -> n74  [key=1, style=dashed, color=darkseagreen4, label=valueSpecPropsResult];
n72 -> n79  [key=1, style=dashed, color=darkseagreen4, label=valueSpecPropsResult];
n111 -> n112  [key=0, style=solid];
n111 -> n109  [key=2, style=dotted];
n73 -> n74  [key=0, style=solid];
n73 -> n89  [key=2, style=dotted];
n73 -> n90  [key=2, style=dotted];
n73 -> n91  [key=2, style=dotted];
n73 -> n73  [key=1, style=dashed, color=darkseagreen4, label=token];
n73 -> n113  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n73 -> n114  [key=1, style=dashed, color=darkseagreen4, label=token];
n73 -> n79  [key=1, style=dashed, color=darkseagreen4, label=missingValueErrors];
n114 -> n115  [key=0, style=solid];
n114 -> n116  [key=2, style=dotted];
n75 -> n76  [key=0, style=solid];
n75 -> n77  [key=1, style=dashed, color=darkseagreen4, label=buildMutable];
n118 -> n119  [key=0, style=solid];
n118 -> n55  [key=2, style=dotted];
n118 -> n30  [key=2, style=dotted];
n118 -> n124  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n80 -> n81  [key=0, style=solid];
n80 -> n99  [key=2, style=dotted];
n80 -> n80  [key=1, style=dashed, color=darkseagreen4, label=e];
n26 -> n27  [key=0, style=solid];
n26 -> n34  [key=2, style=dotted];
n26 -> n35  [key=2, style=dotted];
n26 -> n36  [key=2, style=dotted];
n26 -> n37  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n34  [key=2, style=dotted];
n27 -> n38  [key=2, style=dotted];
n27 -> n39  [key=2, style=dotted];
n20 -> n21  [key=0, style=solid];
n20 -> n31  [key=2, style=dotted];
n20 -> n45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n20 -> n23  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n20 -> n52  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n20 -> n25  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n20 -> n71  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n20 -> n72  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n20 -> n76  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n20 -> n153  [key=1, style=dashed, color=darkseagreen4, label=specProps];
n40 -> n41  [key=0, style=solid];
n76 -> n77  [key=0, style=solid];
n153 -> n154  [key=0, style=solid];
n153 -> n56  [key=2, style=dotted];
n153 -> n158  [key=2, style=dotted];
n153 -> n153  [key=1, style=dashed, color=darkseagreen4, label=sp];
n153 -> n155  [key=1, style=dashed, color=darkseagreen4, label=ctor];
n77 -> n78  [key=0, style=solid];
n77 -> n93  [key=2, style=dotted];
n77 -> n39  [key=2, style=dotted];
n77 -> n81  [key=1, style=dashed, color=darkseagreen4, label=instance];
n21 -> n22  [key=0, style=solid];
n21 -> n21  [key=1, style=dashed, color=darkseagreen4, label=pt];
n45 -> n46  [key=0, style=solid];
n22 -> n23  [key=0, style=solid];
n22 -> n32  [key=2, style=dotted];
n22 -> n33  [key=2, style=dotted];
n22 -> n25  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n22 -> n68  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n22 -> n70  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n22 -> n103  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n22 -> n73  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n24 -> n25  [key=0, style=solid];
n24 -> n62  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Error>"];
n24 -> n27  [key=1, style=dashed, color=darkseagreen4, label=notParsed];
n24 -> n24  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.ParserResult<T>> notParsed"];
n62 -> n63  [key=0, style=solid];
n62 -> n64  [key=2, style=dotted];
n62 -> n39  [key=2, style=dotted];
n62 -> n65  [key=2, style=dotted];
n62 -> n66  [key=2, style=dotted];
n28 -> n29  [key=0, style=solid];
n29 -> n3  [key=0, style=bold, color=blue];
n41 -> n42  [key=0, style=solid];
n41 -> n43  [key=2, style=dotted];
n41 -> n44  [key=2, style=dotted];
n42 -> n40  [key=0, style=bold, color=blue];
n46 -> n47  [key=0, style=solid];
n46 -> n48  [key=2, style=dotted];
n46 -> n49  [key=2, style=dotted];
n46 -> n50  [key=2, style=dotted];
n47 -> n45  [key=0, style=bold, color=blue];
n51 -> n52  [key=0, style=solid];
n53 -> n51  [key=0, style=bold, color=blue];
n58 -> n59  [key=0, style=solid];
n59 -> n60  [key=0, style=solid];
n59 -> n43  [key=2, style=dotted];
n60 -> n58  [key=0, style=bold, color=blue];
n61 -> n62  [key=0, style=solid];
n63 -> n61  [key=0, style=bold, color=blue];
n67 -> n68  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n69 -> n84  [key=2, style=dotted];
n69 -> n78  [key=1, style=dashed, color=darkseagreen4, label=tokens];
n79 -> n80  [key=0, style=solid];
n79 -> n96  [key=2, style=dotted];
n79 -> n97  [key=2, style=dotted];
n79 -> n98  [key=2, style=dotted];
n79 -> n81  [key=1, style=dashed, color=darkseagreen4, label=allErrors];
n78 -> n79  [key=0, style=solid];
n78 -> n94  [key=2, style=dotted];
n78 -> n95  [key=2, style=dotted];
n102 -> n103  [key=0, style=solid];
n106 -> n107  [key=0, style=solid];
n74 -> n75  [key=0, style=solid];
n74 -> n84  [key=2, style=dotted];
n74 -> n92  [key=2, style=dotted];
n74 -> n119  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
n74 -> n76  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
n74 -> n154  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
n74 -> n78  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
n110 -> n111  [key=0, style=solid];
n113 -> n114  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n122  [key=2, style=dotted];
n119 -> n123  [key=2, style=dotted];
n119 -> n119  [key=1, style=dashed, color=darkseagreen4, label=mutable];
n119 -> n127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n119 -> n131  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n119 -> n135  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n119 -> n139  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n119 -> n142  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n119 -> n146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n154 -> n155  [key=0, style=solid];
n154 -> n159  [key=2, style=dotted];
n154 -> n160  [key=2, style=dotted];
n154 -> n161  [key=2, style=dotted];
n154 -> n162  [key=2, style=dotted];
n154 -> n30  [key=2, style=dotted];
n154 -> n56  [key=2, style=dotted];
n154 -> n154  [key=1, style=dashed, color=darkseagreen4, label=prms];
n154 -> n164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n154 -> n167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n81 -> n82  [key=0, style=solid];
n81 -> n100  [key=2, style=dotted];
n81 -> n101  [key=2, style=dotted];
n82 -> n67  [key=0, style=bold, color=blue];
n104 -> n102  [key=0, style=bold, color=blue];
n108 -> n106  [key=0, style=bold, color=blue];
n112 -> n110  [key=0, style=bold, color=blue];
n115 -> n113  [key=0, style=bold, color=blue];
n117 -> n118  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n131 -> n132  [key=0, style=solid];
n135 -> n136  [key=0, style=solid];
n139 -> n140  [key=0, style=solid];
n142 -> n143  [key=0, style=solid];
n146 -> n147  [key=0, style=solid];
n121 -> n117  [key=0, style=bold, color=blue];
n125 -> n126  [key=0, style=solid];
n125 -> n43  [key=2, style=dotted];
n126 -> n124  [key=0, style=bold, color=blue];
n128 -> n129  [key=0, style=solid];
n128 -> n130  [key=2, style=dotted];
n129 -> n127  [key=0, style=bold, color=blue];
n132 -> n133  [key=0, style=solid];
n132 -> n134  [key=2, style=dotted];
n133 -> n131  [key=0, style=bold, color=blue];
n136 -> n137  [key=0, style=solid];
n136 -> n138  [key=2, style=dotted];
n136 -> n130  [key=2, style=dotted];
n137 -> n135  [key=0, style=bold, color=blue];
n140 -> n141  [key=0, style=solid];
n140 -> n134  [key=2, style=dotted];
n141 -> n139  [key=0, style=bold, color=blue];
n143 -> n144  [key=0, style=solid];
n143 -> n138  [key=2, style=dotted];
n143 -> n145  [key=2, style=dotted];
n144 -> n142  [key=0, style=bold, color=blue];
n147 -> n148  [key=0, style=solid];
n147 -> n149  [key=2, style=dotted];
n147 -> n150  [key=2, style=dotted];
n147 -> n151  [key=2, style=dotted];
n148 -> n146  [key=0, style=bold, color=blue];
n152 -> n153  [key=0, style=solid];
n155 -> n156  [key=0, style=solid];
n155 -> n163  [key=2, style=dotted];
n164 -> n165  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n157 -> n152  [key=0, style=bold, color=blue];
n165 -> n166  [key=0, style=solid];
n166 -> n164  [key=0, style=bold, color=blue];
n168 -> n169  [key=0, style=solid];
n169 -> n167  [key=0, style=bold, color=blue];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_57  [key=2, style=dotted];
m0_52 -> m0_55  [key=1, style=dashed, color=darkseagreen4, label=a];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_55  [key=0, style=solid];
m0_55 -> m0_56  [key=0, style=solid];
m0_54 -> m0_56  [key=0, style=solid];
m0_56 -> m0_51  [key=0, style=bold, color=blue];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_13  [key=2, style=dotted];
m0_40 -> m0_48  [key=1, style=dashed, color=red, label=list];
m0_40 -> m0_49  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> n65  [key=2, style=dotted];
m0_41 -> m0_15  [key=2, style=dotted];
m0_48 -> m0_42  [key=0, style=solid, color=red];
m0_48 -> m0_19  [key=2, style=dotted, color=red];
m0_49 -> m0_50  [key=0, style=solid];
m0_42 -> m0_43  [key=0, style=solid];
m0_42 -> m0_49  [key=0, style=solid];
m0_42 -> m0_44  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_42 -> m0_46  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_42  [key=0, style=solid];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_16  [key=2, style=dotted];
m0_46 -> m0_47  [key=0, style=solid];
m0_46 -> m0_17  [key=2, style=dotted];
m0_46 -> m0_48  [key=1, style=dashed, color=red, label=attribute];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_42  [key=0, style=solid];
m0_47 -> m0_48  [key=0, style=solid, color=red];
m0_47 -> m0_42  [key=0, style=solid];
m0_50 -> m0_39  [key=0, style=bold, color=blue];
m0_20 -> m0_21  [key=0, style=solid];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> n65  [key=2, style=dotted];
m0_21 -> m0_29  [key=2, style=dotted];
m0_22 -> m0_23  [key=0, style=solid];
m0_22 -> m0_27  [key=0, style=solid];
m0_22 -> m0_24  [key=1, style=dashed, color=red, label=method];
m0_22 -> m0_26  [key=1, style=dashed, color=red, label=method];
m0_23 -> m0_24  [key=0, style=solid, color=red];
m0_23 -> m0_22  [key=0, style=solid];
m0_27 -> m0_28  [key=0, style=solid];
m0_24 -> m0_25  [key=0, style=solid, color=red];
m0_24 -> m0_17  [key=2, style=dotted, color=red];
m0_24 -> m0_26  [key=1, style=dashed, color=red, label=attribute];
m0_26 -> m0_28  [key=0, style=solid, color=red];
m0_26 -> m0_18  [key=2, style=dotted, color=red];
m0_25 -> m0_26  [key=0, style=solid, color=red];
m0_25 -> m0_22  [key=0, style=solid, color=red];
m0_28 -> m0_20  [key=0, style=bold, color=blue];
m0_30 -> m0_31  [key=0, style=solid];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> n65  [key=2, style=dotted];
m0_31 -> m0_29  [key=2, style=dotted];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_37  [key=0, style=solid, color=red];
m0_32 -> m0_34  [key=1, style=dashed, color=darkseagreen4, label=method];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_32  [key=0, style=solid];
m0_37 -> m0_38  [key=0, style=solid, color=red];
m0_34 -> m0_35  [key=0, style=solid];
m0_34 -> m0_17  [key=2, style=dotted];
m0_34 -> m0_36  [key=1, style=dashed, color=red, label=attribute];
m0_35 -> m0_36  [key=0, style=solid, color=red];
m0_35 -> m0_32  [key=0, style=solid];
m0_36 -> m0_38  [key=0, style=solid, color=red];
m0_38 -> m0_30  [key=0, style=bold, color=blue];
m0_58 -> m0_59  [key=0, style=solid, color=red];
m0_58 -> m0_60  [key=1, style=dashed, color=red, label=object];
m0_58 -> m0_62  [key=1, style=dashed, color=red, label=object];
m0_58 -> m0_69  [key=1, style=dashed, color=darkseagreen4, label=string];
m0_59 -> m0_60  [key=0, style=solid, color=red];
m0_59 -> m0_72  [key=1, style=dashed, color=red, label=found];
m0_60 -> m0_61  [key=0, style=solid, color=red];
m0_60 -> m0_62  [key=0, style=solid, color=red];
m0_62 -> m0_63  [key=0, style=solid, color=red];
m0_62 -> n65  [key=2, style=dotted, color=red];
m0_62 -> m0_15  [key=2, style=dotted, color=red];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_63  [key=0, style=solid];
m0_69 -> m0_74  [key=2, style=dotted];
m0_72 -> m0_73  [key=0, style=solid, color=red];
m0_61 -> m0_73  [key=0, style=solid, color=red];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_72  [key=0, style=solid, color=red];
m0_63 -> m0_65  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_63 -> m0_67  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_63 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_63  [key=0, style=solid];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_16  [key=2, style=dotted];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_17  [key=2, style=dotted];
m0_67 -> m0_70  [key=1, style=dashed, color=darkseagreen4, label=attribute];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_18  [key=2, style=dotted];
m0_70 -> m0_72  [key=1, style=dashed, color=red, label=found];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_63  [key=0, style=solid];
m0_68 -> m0_69  [key=0, style=solid];
m0_71 -> m0_73  [key=0, style=solid];
m0_73 -> m0_58  [key=0, style=bold, color=blue];
m0_75 -> m0_76  [key=0, style=solid];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_78  [key=2, style=dotted];
m0_77 -> m0_75  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_2  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_0 -> m0_3  [key=1, style=dashed, color=darkseagreen4, label=object];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_13  [key=2, style=dotted];
m0_1 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_1 -> m0_11  [key=1, style=dashed, color=darkseagreen4, label=list];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_11  [key=0, style=solid];
m0_3 -> m0_4  [key=0, style=solid];
m0_3 -> n65  [key=2, style=dotted];
m0_3 -> m0_15  [key=2, style=dotted];
m0_10 -> m0_4  [key=0, style=solid];
m0_10 -> m0_18  [key=2, style=dotted];
m0_10 -> m0_19  [key=2, style=dotted];
m0_11 -> m0_12  [key=0, style=solid];
m0_4 -> m0_5  [key=0, style=solid];
m0_4 -> m0_11  [key=0, style=solid];
m0_4 -> m0_6  [key=1, style=dashed, color=red, label=property];
m0_4 -> m0_8  [key=1, style=dashed, color=red, label=property];
m0_4 -> m0_10  [key=1, style=dashed, color=darkseagreen4, label=property];
m0_5 -> m0_6  [key=0, style=solid, color=red];
m0_5 -> m0_4  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid, color=red];
m0_6 -> m0_16  [key=2, style=dotted, color=red];
m0_8 -> m0_9  [key=0, style=solid, color=red];
m0_8 -> m0_17  [key=2, style=dotted, color=red];
m0_8 -> m0_10  [key=1, style=dashed, color=red, label=attribute];
m0_7 -> m0_8  [key=0, style=solid, color=red];
m0_7 -> m0_4  [key=0, style=solid, color=red];
m0_9 -> m0_10  [key=0, style=solid, color=red];
m0_9 -> m0_4  [key=0, style=solid, color=red];
m0_12 -> m0_0  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid, color=green];
m1_1 -> m1_2  [key=0, style=solid, color=green];
m1_1 -> m1_3  [key=2, style=dotted, color=green];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.ParserSettings>"];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=0, style=solid];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_16  [key=2, style=dotted];
m2_10 -> m2_14  [key=0, style=solid];
m2_10 -> m2_15  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_4  [key=2, style=dotted];
m2_13 -> m2_14  [key=0, style=solid];
m2_14 -> m2_8  [key=0, style=bold, color=blue];
m2_37 -> m2_118  [key=0, style=solid];
m2_118 -> m2_119  [key=0, style=solid];
m2_118 -> m2_120  [key=2, style=dotted];
m2_118 -> m2_121  [key=2, style=dotted];
m2_119 -> m2_37  [key=0, style=bold, color=blue];
m2_20 -> m2_21  [key=0, style=solid];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_59 -> m2_60  [key=0, style=solid];
m2_59 -> m2_62  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m2_59 -> m2_64  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m2_59 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_59 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_59 -> m2_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<object> ParseArguments"];
m2_60 -> m2_61  [key=0, style=solid];
m2_60 -> m2_62  [key=0, style=solid];
m2_62 -> m2_63  [key=0, style=solid];
m2_62 -> m2_64  [key=0, style=solid];
m2_64 -> m2_65  [key=0, style=solid];
m2_64 -> m2_66  [key=0, style=solid];
m2_66 -> m2_67  [key=0, style=solid];
m2_66 -> m2_33  [key=2, style=dotted];
m2_66 -> m2_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_61 -> m2_67  [key=0, style=solid];
m2_61 -> m2_15  [key=2, style=dotted];
m2_63 -> m2_67  [key=0, style=solid];
m2_63 -> m2_15  [key=2, style=dotted];
m2_65 -> m2_67  [key=0, style=solid];
m2_65 -> m2_68  [key=2, style=dotted];
m2_67 -> m2_59  [key=0, style=bold, color=blue];
m2_3 -> m2_17  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_3  [key=0, style=bold, color=blue];
m2_43 -> m2_44  [key=0, style=solid];
m2_43 -> m2_48  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_43 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m2_43 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m2_43 -> m2_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m2_44 -> m2_45  [key=0, style=solid];
m2_44 -> m2_46  [key=0, style=solid];
m2_48 -> m2_49  [key=0, style=solid];
m2_48 -> m2_50  [key=0, style=solid];
m2_50 -> m2_51  [key=0, style=solid];
m2_50 -> m2_33  [key=2, style=dotted];
m2_50 -> m2_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_45 -> m2_51  [key=0, style=solid];
m2_45 -> m2_15  [key=2, style=dotted];
m2_46 -> m2_47  [key=0, style=solid];
m2_46 -> m2_48  [key=0, style=solid];
m2_46 -> m2_30  [key=2, style=dotted];
m2_47 -> m2_51  [key=0, style=solid];
m2_47 -> m2_52  [key=2, style=dotted];
m2_49 -> m2_51  [key=0, style=solid];
m2_49 -> m2_15  [key=2, style=dotted];
m2_51 -> m2_43  [key=0, style=bold, color=blue];
m2_84 -> m2_85  [key=0, style=solid, color=red];
m2_83 -> m2_84  [key=0, style=solid, color=red];
m2_83 -> m2_89  [key=2, style=dotted, color=red];
m2_83 -> m2_110  [key=1, style=dashed, color=red, label="lambda expression"];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_4  [key=2, style=dotted];
m2_7 -> m2_5  [key=0, style=bold, color=blue];
m2_117 -> m2_122  [key=0, style=solid];
m2_117 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_117 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_117 -> m2_123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_117 -> m2_117  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> DisplayHelp"];
m2_122 -> m2_123  [key=0, style=solid];
m2_122 -> m2_125  [key=2, style=dotted];
m2_122 -> m2_126  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_122 -> m2_101  [key=1, style=dashed, color=green, label="lambda expression"];
m2_123 -> m2_124  [key=0, style=solid];
m2_124 -> m2_117  [key=0, style=bold, color=blue];
m2_133 -> m2_134  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_1 -> m2_4  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=2, style=dotted];
m2_35 -> n3  [key=2, style=dotted];
m2_35 -> m2_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_34 -> m2_35  [key=0, style=solid];
m2_36 -> m2_34  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_41  [key=0, style=solid];
m2_40 -> m2_42  [key=2, style=dotted];
m2_41 -> m2_39  [key=0, style=bold, color=blue];
m2_54 -> m2_55  [key=0, style=solid];
m2_54 -> m2_31  [key=2, style=dotted];
m2_54 -> m2_37  [key=2, style=dotted];
m2_54 -> n3  [key=2, style=dotted];
m2_54 -> m2_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_53 -> m2_54  [key=0, style=solid];
m2_55 -> m2_53  [key=0, style=bold, color=blue];
m2_56 -> m2_57  [key=0, style=solid];
m2_57 -> m2_58  [key=0, style=solid];
m2_57 -> m2_42  [key=2, style=dotted];
m2_58 -> m2_56  [key=0, style=bold, color=blue];
m2_70 -> m2_71  [key=0, style=solid];
m2_70 -> m2_37  [key=2, style=dotted];
m2_70 -> m2_72  [key=2, style=dotted];
m2_70 -> m2_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_69 -> m2_70  [key=0, style=solid];
m2_71 -> m2_69  [key=0, style=bold, color=blue];
m2_73 -> m2_74  [key=0, style=solid];
m2_74 -> m2_75  [key=0, style=solid];
m2_74 -> m2_42  [key=2, style=dotted];
m2_75 -> m2_73  [key=0, style=bold, color=blue];
m2_91 -> m2_92  [key=0, style=solid, color=red];
m2_91 -> m2_93  [key=2, style=dotted, color=red];
m2_91 -> m2_94  [key=1, style=dashed, color=red, label="lambda expression"];
m2_95 -> m2_96  [key=0, style=solid, color=red];
m2_95 -> m2_97  [key=2, style=dotted, color=red];
m2_102 -> m2_103  [key=0, style=solid, color=red];
m2_102 -> m2_88  [key=2, style=dotted, color=red];
m2_102 -> m2_104  [key=1, style=dashed, color=red, label="lambda expression"];
m2_105 -> m2_106  [key=0, style=solid, color=red];
m2_105 -> m2_97  [key=2, style=dotted, color=red];
m2_108 -> m2_109  [key=0, style=solid, color=red];
m2_108 -> m2_97  [key=2, style=dotted, color=red];
m2_111 -> m2_112  [key=0, style=solid, color=red];
m2_111 -> m2_113  [key=2, style=dotted, color=red];
m2_99 -> m2_100  [key=0, style=solid, color=red];
m2_101 -> m2_102  [key=0, style=solid, color=red];
m2_101 -> m2_127  [key=0, style=solid, color=green];
m2_107 -> m2_108  [key=0, style=solid, color=red];
m2_107 -> m2_134  [key=0, style=solid, color=green];
m2_110 -> m2_111  [key=0, style=solid, color=red];
m2_90 -> m2_91  [key=0, style=solid, color=red];
m2_92 -> m2_90  [key=0, style=bold, color=blue];
m2_92 -> m2_101  [key=0, style=bold, color=green];
m2_94 -> m2_95  [key=0, style=solid, color=red];
m2_96 -> m2_94  [key=0, style=bold, color=blue];
m2_96 -> m2_107  [key=0, style=bold, color=green];
m2_98 -> m2_99  [key=0, style=solid, color=red];
m2_100 -> m2_98  [key=0, style=bold, color=blue];
m2_103 -> m2_101  [key=0, style=bold, color=blue];
m2_104 -> m2_105  [key=0, style=solid, color=red];
m2_106 -> m2_104  [key=0, style=bold, color=blue];
m2_109 -> m2_107  [key=0, style=bold, color=blue];
m2_112 -> m2_110  [key=0, style=bold, color=blue];
m2_127 -> m2_128  [key=0, style=solid];
m2_127 -> m2_129  [key=2, style=dotted];
m2_127 -> m2_130  [key=2, style=dotted];
m2_127 -> m2_131  [key=2, style=dotted];
m2_127 -> m2_132  [key=2, style=dotted];
m2_127 -> m2_133  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_127 -> m2_107  [key=1, style=dashed, color=green, label="lambda expression"];
m2_127 -> m2_92  [key=0, style=solid, color=green];
m2_134 -> m2_135  [key=0, style=solid];
m2_134 -> m2_136  [key=2, style=dotted];
m2_134 -> m2_137  [key=2, style=dotted];
m2_134 -> m2_96  [key=0, style=solid, color=green];
m2_126 -> m2_127  [key=0, style=solid];
m2_128 -> m2_126  [key=0, style=bold, color=blue];
m2_135 -> m2_133  [key=0, style=bold, color=blue];
m2_33 -> m2_114  [key=0, style=solid];
m2_33 -> m2_28  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m2_33 -> m2_50  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m2_33 -> m2_66  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m2_33 -> m2_117  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> MakeParserResult"];
m2_114 -> m2_115  [key=0, style=solid];
m2_114 -> m2_116  [key=2, style=dotted];
m2_114 -> m2_117  [key=2, style=dotted];
m2_115 -> m2_33  [key=0, style=bold, color=blue];
m2_76 -> m2_77  [key=0, style=solid];
m2_77 -> m2_78  [key=0, style=solid];
m2_77 -> m2_23  [key=2, style=dotted];
m2_78 -> m2_79  [key=0, style=solid];
m2_78 -> m2_80  [key=2, style=dotted];
m2_79 -> m2_76  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_24 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_24 -> m2_33  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=0, style=solid];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_33  [key=2, style=dotted];
m2_28 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_26 -> m2_29  [key=0, style=solid];
m2_26 -> m2_15  [key=2, style=dotted];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_30  [key=2, style=dotted];
m2_27 -> m2_31  [key=2, style=dotted];
m2_27 -> m2_32  [key=2, style=dotted];
m2_27 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=factory];
m2_29 -> m2_24  [key=0, style=bold, color=blue];
m2_42 -> m2_81  [key=0, style=solid, color=green];
m2_42 -> m2_91  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_42 -> m2_95  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_42 -> m2_82  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m2_42 -> m2_102  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_42 -> m2_105  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_42 -> m2_108  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_42 -> m2_83  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_42 -> m2_111  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_81 -> m2_82  [key=0, style=solid, color=red];
m2_81 -> m2_86  [key=2, style=dotted, color=red];
m2_81 -> m2_91  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m2_81 -> m2_99  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m2_81 -> m2_102  [key=1, style=dashed, color=red, label=normalize];
m2_81 -> m2_85  [key=0, style=solid, color=green];
m2_81 -> m2_83  [key=2, style=dotted, color=green];
m2_81 -> m2_84  [key=2, style=dotted, color=green];
m2_82 -> m2_83  [key=0, style=solid, color=red];
m2_82 -> m2_87  [key=2, style=dotted, color=red];
m2_82 -> m2_88  [key=2, style=dotted, color=red];
m2_82 -> m2_101  [key=1, style=dashed, color=red, label="lambda expression"];
m2_82 -> m2_107  [key=1, style=dashed, color=red, label="lambda expression"];
m2_85 -> m2_42  [key=0, style=bold, color=blue];
m2_23 -> m2_138  [key=0, style=solid];
m2_23 -> m2_140  [key=1, style=dashed, color=darkseagreen4, label=bool];
m2_23 -> m2_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m2_23 -> m2_77  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m2_138 -> m2_139  [key=0, style=solid];
m2_138 -> m2_140  [key=0, style=solid];
m2_140 -> m2_141  [key=0, style=solid];
m2_140 -> m2_144  [key=0, style=solid];
m2_139 -> m2_144  [key=0, style=solid];
m2_141 -> m2_142  [key=0, style=solid];
m2_141 -> m2_143  [key=0, style=solid];
m2_142 -> m2_143  [key=0, style=solid];
m2_142 -> m2_145  [key=2, style=dotted];
m2_143 -> m2_144  [key=0, style=solid];
m2_144 -> m2_23  [key=0, style=bold, color=blue];
m2_146 -> m2_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_50  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_74  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_77  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_78  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_146 -> m2_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m2_147 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_148 -> m2_35  [key=1, style=dashed, color=darkseagreen4, label=factory];
m2_149 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m2_150 -> m2_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_151 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m2_152 -> m2_70  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m2_153 -> m2_91  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_153 -> m2_95  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_153 -> m2_102  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_153 -> m2_105  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_153 -> m2_108  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_153 -> m2_111  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m2_154 -> m2_91  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m2_154 -> m2_95  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m2_154 -> m2_102  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m2_154 -> m2_105  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m2_154 -> m2_108  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m2_154 -> m2_111  [key=1, style=dashed, color=red, label="CommandLine.ParserSettings"];
m2_155 -> m2_102  [key=1, style=dashed, color=red, label=normalize];
m2_156 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_156 -> m2_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m2_157 -> m2_127  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
}
