digraph  {
m2_0 [label="Entry CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="TokenPartitioner.cs"];
m2_1 [label="var expected = new Token[] { }", span="15-15", cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="TokenPartitioner.cs", color=green, community=0];
m2_2 [label="var result = Scalar.Partition(\r\n                new Token[] { },\r\n                name =>\r\n                    new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>())", span="17-22", cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="TokenPartitioner.cs"];
m2_3 [label="expected.ShouldBeEquivalentTo(result)", span="24-24", cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="TokenPartitioner.cs"];
m2_4 [label="Exit CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", span="13-13", cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values_from_empty_token_sequence()", file="TokenPartitioner.cs"];
m2_5 [label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs"];
m2_8 [label="new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="20-22", cluster="lambda expression", color=red, community=1, file="TokenPartitioner.cs"];
m2_6 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="TokenPartitioner.cs"];
m2_7 [label="Entry lambda expression", span="19-22", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_9 [label="Exit lambda expression", span="19-22", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_10 [label="Entry System.Collections.Generic.IEnumerable<T>.Memorize<T>()", span="374-374", cluster="System.Collections.Generic.IEnumerable<T>.Memorize<T>()", file="TokenPartitioner.cs"];
m2_26 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="TokenPartitioner.cs"];
m2_19 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs"];
m2_12 [label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="TokenPartitioner.cs"];
m2_18 [label="Exit CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="TokenPartitioner.cs"];
m2_37 [label="Entry Unk.IsValue", span="", cluster="Unk.IsValue", file="TokenPartitioner.cs"];
m2_20 [label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22", cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs"];
m2_14 [label="Entry CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", span="28-28", cluster="CommandLine.Tests.Unit.Core.ScalarTests.Partition_scalar_values()", file="TokenPartitioner.cs"];
m2_22 [label="new[] { ''str'', ''int'' }.Contains(name)\r\n                        ? Maybe.Just(TypeDescriptor.Create(TargetType.Scalar, Maybe.Nothing<int>()))\r\n                        : Maybe.Nothing<TypeDescriptor>()", span="39-41", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Except<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenPartitioner.cs"];
m2_17 [label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10", cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TokenPartitioner.cs"];
m2_15 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="TokenPartitioner.cs"];
m2_30 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="TokenPartitioner.cs"];
m2_13 [label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs"];
m2_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TokenPartitioner.cs"];
m2_24 [label="!switches.Contains(t)", span="21-21", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_28 [label="!scalars.Contains(t)", span="22-22", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_32 [label="!sequences.Contains(t)", span="23-23", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_23 [label="Exit lambda expression", span="38-41", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_27 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_31 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_34 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_38 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_25 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_29 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_33 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_35 [label="v.IsValue()", span="24-24", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_36 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_39 [label="t.Text", span="31-31", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_40 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="TokenPartitioner.cs"];
m2_11 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitioner.cs"];
m2_41 [label=switches, span="", file="TokenPartitioner.cs"];
m2_42 [label=scalars, span="", file="TokenPartitioner.cs"];
m2_43 [label=sequences, span="", file="TokenPartitioner.cs"];
m2_0 -> m2_1  [key=0, style=solid, color=green];
m2_0 -> m2_2  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m2_0 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m2_1 -> m2_2  [key=0, style=solid, color=green];
m2_1 -> m2_10  [key=2, style=dotted];
m2_1 -> m2_3  [key=1, style=dashed, color=green, label=expected];
m2_1 -> m2_4  [key=1, style=dashed, color=darkseagreen4, label=tokenList];
m2_1 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=tokenList];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_11  [key=2, style=dotted];
m2_2 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=switches];
m2_2 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=switches];
m2_2 -> m2_8  [key=1, style=dashed, color=red, label=switches];
m2_2 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_12  [key=2, style=dotted];
m2_3 -> m2_10  [key=2, style=dotted];
m2_3 -> m2_5  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m2_3 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m2_3 -> m2_8  [key=1, style=dashed, color=red, label=scalars];
m2_3 -> m2_6  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_13  [key=2, style=dotted];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=sequences];
m2_4 -> m2_8  [key=1, style=dashed, color=red, label=sequences];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_14  [key=2, style=dotted];
m2_5 -> m2_15  [key=2, style=dotted];
m2_5 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_5 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_5 -> m2_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_5 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label=nonOptions];
m2_8 -> m2_9  [key=0, style=solid, color=red];
m2_8 -> m2_17  [key=2, style=dotted, color=red];
m2_8 -> m2_18  [key=2, style=dotted, color=red];
m2_8 -> m2_19  [key=2, style=dotted, color=red];
m2_8 -> m2_20  [key=2, style=dotted, color=red];
m2_8 -> m2_21  [key=2, style=dotted, color=red];
m2_8 -> m2_22  [key=2, style=dotted, color=red];
m2_8 -> m2_38  [key=1, style=dashed, color=red, label="lambda expression"];
m2_8 -> m2_10  [key=2, style=dotted];
m2_8 -> m2_11  [key=2, style=dotted];
m2_8 -> m2_12  [key=2, style=dotted];
m2_8 -> m2_13  [key=2, style=dotted];
m2_6 -> m2_7  [key=0, style=solid];
m2_6 -> m2_14  [key=2, style=dotted];
m2_6 -> m2_15  [key=2, style=dotted];
m2_6 -> m2_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_6 -> m2_8  [key=1, style=dashed, color=red, label=values];
m2_7 -> m2_8  [key=0, style=solid, color=red];
m2_7 -> m2_16  [key=2, style=dotted];
m2_7 -> m2_10  [key=2, style=dotted];
m2_9 -> m2_0  [key=0, style=bold, color=blue];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_18 -> m2_14  [key=0, style=bold, color=blue];
m2_14 -> m2_15  [key=0, style=solid];
m2_22 -> m2_10  [key=2, style=dotted];
m2_22 -> m2_11  [key=2, style=dotted];
m2_22 -> m2_12  [key=2, style=dotted];
m2_22 -> m2_13  [key=2, style=dotted];
m2_22 -> m2_23  [key=0, style=solid];
m2_16 -> m2_5  [key=2, style=dotted];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_19  [key=2, style=dotted];
m2_16 -> m2_20  [key=2, style=dotted];
m2_16 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_17 -> m2_6  [key=2, style=dotted];
m2_17 -> m2_18  [key=0, style=solid];
m2_15 -> m2_16  [key=0, style=solid];
m2_15 -> m2_17  [key=1, style=dashed, color=darkseagreen4, label=expected];
m2_15 -> m2_19  [key=2, style=dotted];
m2_15 -> m2_20  [key=2, style=dotted];
m2_21 -> m2_22  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_28 -> m2_29  [key=0, style=solid];
m2_28 -> m2_30  [key=2, style=dotted];
m2_32 -> m2_33  [key=0, style=solid];
m2_32 -> m2_30  [key=2, style=dotted];
m2_23 -> m2_24  [key=0, style=solid];
m2_23 -> m2_21  [key=0, style=bold, color=blue];
m2_27 -> m2_28  [key=0, style=solid];
m2_31 -> m2_32  [key=0, style=solid];
m2_34 -> m2_35  [key=0, style=solid];
m2_38 -> m2_39  [key=0, style=solid];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_29 -> m2_27  [key=0, style=bold, color=blue];
m2_33 -> m2_31  [key=0, style=bold, color=blue];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=2, style=dotted];
m2_36 -> m2_34  [key=0, style=bold, color=blue];
m2_39 -> m2_40  [key=0, style=solid];
m2_40 -> m2_38  [key=0, style=bold, color=blue];
m2_41 -> m2_24  [key=1, style=dashed, color=darkseagreen4, label=switches];
m2_42 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m2_43 -> m2_32  [key=1, style=dashed, color=darkseagreen4, label=sequences];
}
