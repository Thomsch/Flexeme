digraph  {
m0_0 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", span="18-18"];
m0_1 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string)", span="18-18"];
m0_2 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", span="29-29"];
m0_3 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string)", span="29-29"];
m0_8 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", span="68-68"];
m0_9 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string, string)", span="68-68"];
m0_6 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", span="54-54"];
m0_7 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string, string)", span="54-54"];
m0_4 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", file="AssemblyLicenseAttribute.cs", label="Entry CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", span="41-41"];
m0_5 [cluster="CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", file="AssemblyLicenseAttribute.cs", label="Exit CommandLine.Text.AssemblyLicenseAttribute.AssemblyLicenseAttribute(string, string, string)", span="41-41"];
m1_34 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m1_36 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="years.Length == 1", span="164-164"];
m1_37 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="return years[0].ToString(CultureInfo.InvariantCulture);", span="166-166"];
m1_38 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var yearsPart = new StringBuilder(years.Length * 6)", span="169-169"];
m1_40 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="i < years.Length", span="170-170"];
m1_41 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="yearsPart.Append(years[i].ToString(CultureInfo.InvariantCulture))", span="172-172"];
m1_43 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="next < years.Length", span="174-174"];
m1_44 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="yearsPart.Append(years[next] - years[i] > 1 ? '' - '' : '', '')", span="176-176"];
m1_39 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var i = 0", span="170-170"];
m1_46 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="return yearsPart.ToString();", span="180-180"];
m1_42 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="var next = i + 1", span="173-173"];
m1_45 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="i++", span="170-170"];
m1_47 [cluster="CommandLine.Text.CopyrightInfo.FormatYears(int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.FormatYears(int[])", span="162-162"];
m1_33 [cluster="System.Text.StringBuilder.Append(char)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m1_19 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo()", span="75-75"];
m1_32 [cluster="System.Text.StringBuilder.Append(string)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m1_20 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m1_21 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="this.attribute = attribute", span="86-86"];
m1_22 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(System.Reflection.AssemblyCopyrightAttribute)", span="84-84"];
m1_31 [cluster="System.Text.StringBuilder.StringBuilder(int)", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
m1_4 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m1_5 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="string.IsNullOrWhiteSpace(author)", span="62-62"];
m1_7 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="copyrightYears.Length == 0", span="63-63"];
m1_10 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.isSymbolUpper = isSymbolUpper", span="66-66"];
m1_11 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.author = author", span="67-67"];
m1_12 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="this.copyrightYears = copyrightYears", span="68-68"];
m1_13 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="builderSize = 12 + author.Length + (4 * copyrightYears.Length) + ExtraLength", span="69-69"];
m1_6 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="throw new ArgumentException(''author'');", span="62-62"];
m1_8 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="throw new ArgumentOutOfRangeException(''copyrightYears'');", span="63-63"];
m1_9 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="int ExtraLength = 10", span="65-65"];
m1_14 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m1_0 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m1_1 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, int)", span="33-33"];
m1_48 [cluster="int.ToString(System.IFormatProvider)", file="CopyrightInfo.cs", label="Entry int.ToString(System.IFormatProvider)", span="0-0"];
m1_26 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m1_27 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="attribute != null", span="140-140"];
m1_28 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="return attribute.Copyright;", span="142-142"];
m1_29 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="return new StringBuilder(builderSize)\n                .Append(CopyrightWord)\n                .Append(' ')\n                .Append(isSymbolUpper ? SymbolUpper : SymbolLower)\n                .Append(' ')\n                .Append(FormatYears(copyrightYears))\n                .Append(' ')\n                .Append(author)\n                .ToString();", span="145-153"];
m1_30 [cluster="CommandLine.Text.CopyrightInfo.ToString()", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.ToString()", span="138-138"];
m1_23 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m1_24 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="return info.ToString();", span="131-131"];
m1_25 [cluster="CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.implicit operator string(CommandLine.Text.CopyrightInfo)", span="129-129"];
m1_2 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m1_3 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", file="CopyrightInfo.cs", label="Exit CommandLine.Text.CopyrightInfo.CopyrightInfo(string, params int[])", span="46-46"];
m1_35 [cluster="System.Text.StringBuilder.ToString()", file="CopyrightInfo.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m1_17 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="CopyrightInfo.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m1_16 [cluster="System.ArgumentException.ArgumentException(string)", file="CopyrightInfo.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m1_15 [cluster="string.IsNullOrWhiteSpace(string)", file="CopyrightInfo.cs", label="Entry string.IsNullOrWhiteSpace(string)", span="0-0"];
m1_49 [file="CopyrightInfo.cs", label="CommandLine.Text.CopyrightInfo", span=""];
m2_0 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="10-10"];
m2_1 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="var index = -1", span="12-12"];
m2_2 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label=source, span="13-13"];
m2_4 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="predicate(item)", span="16-16"];
m2_3 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="index++", span="15-15"];
m2_5 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="return index;", span="21-21"];
m2_6 [cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensions`1.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="10-10"];
m2_13 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnumerableExtensions`1.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m2_20 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="EnumerableExtensions`1.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m2_14 [cluster="System.Array.CreateInstance(System.Type, int)", file="EnumerableExtensions`1.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m2_15 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="EnumerableExtensions`1.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m2_17 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensions`1.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="31-31"];
m2_18 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensions`1.cs", label="return !source.Any();", span="33-33"];
m2_19 [cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensions`1.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="31-31"];
m2_16 [cluster="System.Array.CopyTo(System.Array, int)", file="EnumerableExtensions`1.cs", label="Entry System.Array.CopyTo(System.Array, int)", span="0-0"];
m2_7 [cluster="System.Func<T, TResult>.Invoke(T)", file="EnumerableExtensions`1.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m2_8 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="24-24"];
m2_9 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="var array = Array.CreateInstance(type, value.Count())", span="26-26"];
m2_10 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="value.ToArray().CopyTo(array, 0)", span="27-27"];
m2_11 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="return array;", span="28-28"];
m2_12 [cluster="CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensions`1.cs", label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="24-24"];
m3_0 [cluster="CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", file="ErrorExtensions.cs", label="Entry CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", span="10-10"];
m3_1 [cluster="CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", file="ErrorExtensions.cs", label="return errors.Any()\r\n                ? (ParserResult<T>)new NotParsed<T>(instance.GetType().ToTypeInfo(), errors)\r\n                : (ParserResult<T>)new Parsed<T>(instance);", span="12-14"];
m3_2 [cluster="CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", file="ErrorExtensions.cs", label="Exit CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", span="10-10"];
m3_4 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ErrorExtensions.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m3_3 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ErrorExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m3_5 [cluster="object.GetType()", file="ErrorExtensions.cs", label="Entry object.GetType()", span="0-0"];
m3_6 [cluster="System.Type.ToTypeInfo()", file="ErrorExtensions.cs", label="Entry System.Type.ToTypeInfo()", span="174-174"];
m3_7 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="ErrorExtensions.cs", label="Entry CommandLine.Parsed<T>.Parsed(T)", span="100-100"];
m4_0 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="23-23"];
m4_1 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="string.IsNullOrEmpty(helpText)", span="25-25"];
m4_3 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="formatStyles == null", span="26-26"];
m4_5 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="sample == null", span="27-27"];
m4_7 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="this.helpText = helpText", span="29-29"];
m4_8 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="this.formatStyles = formatStyles", span="30-30"];
m4_9 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="this.sample = sample", span="31-31"];
m4_2 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="25-25"];
m4_4 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="throw new ArgumentNullException(''formatStyles'');", span="26-26"];
m4_6 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="throw new ArgumentNullException(''sample'');", span="27-27"];
m4_10 [cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", file="Example.cs", label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="23-23"];
m4_16 [cluster="CommandLine.Text.Example.Example(string, object)", file="Example.cs", label="Entry CommandLine.Text.Example.Example(string, object)", span="50-50"];
m4_17 [cluster="CommandLine.Text.Example.Example(string, object)", file="Example.cs", label="Exit CommandLine.Text.Example.Example(string, object)", span="50-50"];
m4_24 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="109-109"];
m4_30 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="other == null", span="111-111"];
m4_32 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="116-118"];
m4_31 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="return false;", span="113-113"];
m4_33 [cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)", file="Example.cs", label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="109-109"];
m4_26 [cluster="CommandLine.Text.Example.GetHashCode()", file="Example.cs", label="Entry CommandLine.Text.Example.GetHashCode()", span="99-99"];
m4_27 [cluster="CommandLine.Text.Example.GetHashCode()", file="Example.cs", label="return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="101-101"];
m4_28 [cluster="CommandLine.Text.Example.GetHashCode()", file="Example.cs", label="Exit CommandLine.Text.Example.GetHashCode()", span="99-99"];
m4_14 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="Example.cs", label="Entry CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="40-40"];
m4_15 [cluster="CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", file="Example.cs", label="Exit CommandLine.Text.Example.Example(string, CommandLine.UnParserSettings, object)", span="40-40"];
m4_25 [cluster="object.Equals(object)", file="Example.cs", label="Entry object.Equals(object)", span="0-0"];
m4_40 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="Example.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m4_39 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Example.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m4_36 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="Example.cs", label="Entry CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="124-124"];
m4_37 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="Example.cs", label="return example.FormatStyles.Any()\r\n                ? example.FormatStyles\r\n                : new[] { new UnParserSettings { Consumed = true } };", span="126-128"];
m4_38 [cluster="CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", file="Example.cs", label="Exit CommandLine.Text.ExampleExtensions.GetFormatStylesOrDefault(CommandLine.Text.Example)", span="124-124"];
m4_34 [cluster="string.Equals(string)", file="Example.cs", label="Entry string.Equals(string)", span="0-0"];
m4_11 [cluster="string.IsNullOrEmpty(string)", file="Example.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m4_12 [cluster="System.ArgumentException.ArgumentException(string, string)", file="Example.cs", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
m4_35 [cluster="Unk.SequenceEqual", file="Example.cs", label="Entry Unk.SequenceEqual", span=""];
m4_13 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Example.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m4_18 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="Entry CommandLine.Text.Example.Equals(object)", span="84-84"];
m4_19 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="var other = obj as Example", span="86-86"];
m4_22 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="return base.Equals(obj);", span="92-92"];
m4_20 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="other != null", span="87-87"];
m4_21 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="return Equals(other);", span="89-89"];
m4_23 [cluster="CommandLine.Text.Example.Equals(object)", file="Example.cs", label="Exit CommandLine.Text.Example.Equals(object)", span="84-84"];
m4_29 [cluster="object.GetHashCode()", file="Example.cs", label="Entry object.GetHashCode()", span="0-0"];
m4_41 [file="Example.cs", label="CommandLine.Text.Example", span=""];
m8_25 [cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m8_27 [cluster="Unk.ToKeyValuePair", file="KeyValuePairHelper.cs", label="Entry Unk.ToKeyValuePair", span=""];
m8_3 [cluster="Unk.Select", file="KeyValuePairHelper.cs", label="Entry Unk.Select", span=""];
m8_45 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m8_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="248-248"];
m8_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m8_39 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m8_4 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="13-13"];
m8_5 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="t.Text.ToKeyValuePair(''true'')", span="13-13"];
m8_6 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="13-13"];
m8_12 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="19-19"];
m8_13 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="f.Text.ToKeyValuePair(s.Text)", span="19-19"];
m8_14 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="19-19"];
m8_21 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="f.IsName()\r\n                            ? f.Text.ToKeyValuePair(tokens.SkipWhile(t => !t.Equals(f)).SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : string.Empty.ToKeyValuePair()", span="27-29"];
m8_20 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="26-29"];
m8_29 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="!t.Equals(f)", span="28-28"];
m8_33 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="t.Equals(f)", span="28-28"];
m8_22 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="26-29"];
m8_28 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m8_32 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m8_35 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Entry lambda expression", span="28-28"];
m8_30 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m8_34 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m8_36 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="v.IsValue()", span="28-28"];
m8_37 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m8_40 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="x.Text", span="28-28"];
m8_41 [cluster="lambda expression", file="KeyValuePairHelper.cs", label="Exit lambda expression", span="28-28"];
m8_0 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10"];
m8_1 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="return tokens.Select(t => t.Text.ToKeyValuePair(''true''));", span="13-13"];
m8_2 [cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10"];
m8_7 [cluster="string.ToKeyValuePair(params string[])", file="KeyValuePairHelper.cs", label="Entry string.ToKeyValuePair(params string[])", span="34-34"];
m8_26 [cluster="Unk.ToArray", file="KeyValuePairHelper.cs", label="Entry Unk.ToArray", span=""];
m8_31 [cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="55-55"];
m8_8 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="16-16"];
m8_9 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="return tokens.Pairwise((f, s) => f.Text.ToKeyValuePair(s.Text));", span="19-19"];
m8_10 [cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="16-16"];
m8_42 [cluster="CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", span="34-34"];
m8_43 [cluster="CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", file="KeyValuePairHelper.cs", label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="36-36"];
m8_44 [cluster="CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ToKeyValuePair(string, params string[])", span="34-34"];
m8_23 [cluster="CommandLine.Core.Token.IsName()", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.Token.IsName()", span="68-68"];
m8_24 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="KeyValuePairHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m8_38 [cluster="CommandLine.Core.Token.IsValue()", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.Token.IsValue()", span="73-73"];
m8_15 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m8_16 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? f.Text.ToKeyValuePair(tokens.SkipWhile(t => !t.Equals(f)).SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : string.Empty.ToKeyValuePair())\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="25-31"];
m8_17 [cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="KeyValuePairHelper.cs", label="Exit CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22"];
m8_18 [cluster="Unk.Pairwise", file="KeyValuePairHelper.cs", label="Entry Unk.Pairwise", span=""];
m8_46 [file="KeyValuePairHelper.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span=""];
m8_47 [file="KeyValuePairHelper.cs", label="CommandLine.Core.Token", span=""];
m9_42 [cluster="System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", file="MultiLineTextAttribute.cs", label="Entry System.Array.FindLastIndex<T>(T[], System.Predicate<T>)", span="0-0"];
m9_38 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="170-170"];
m9_39 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="var index = Array.FindLastIndex(value, str => !string.IsNullOrEmpty(str))", span="172-172"];
m9_40 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="return index + 1;", span="175-175"];
m9_41 [cluster="CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.GetLastLineWithText(string[])", span="170-170"];
m9_4 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="47-47"];
m9_5 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string)", span="47-47"];
m9_2 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="35-35"];
m9_3 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string)", span="35-35"];
m9_6 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="60-60"];
m9_7 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string)", span="60-60"];
m9_43 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="172-172"];
m9_32 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="func(line)", span="152-152"];
m9_31 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Entry lambda expression", span="152-152"];
m9_33 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="152-152"];
m9_44 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="!string.IsNullOrEmpty(str)", span="172-172"];
m9_45 [cluster="lambda expression", file="MultiLineTextAttribute.cs", label="Exit lambda expression", span="172-172"];
m9_46 [cluster="string.IsNullOrEmpty(string)", file="MultiLineTextAttribute.cs", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
m9_35 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m9_36 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="return before\r\n                ? AddToHelpText(helpText, helpText.AddPreOptionsLine)\r\n                : AddToHelpText(helpText, helpText.AddPostOptionsLine);", span="159-161"];
m9_37 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
m9_8 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="74-74"];
m9_9 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line1 == null", span="76-76"];
m9_11 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line2 == null", span="77-77"];
m9_13 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line3 == null", span="78-78"];
m9_15 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line4 == null", span="79-79"];
m9_17 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="line5 == null", span="80-80"];
m9_19 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line1 = line1", span="82-82"];
m9_20 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line2 = line2", span="83-83"];
m9_21 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line3 = line3", span="84-84"];
m9_22 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line4 = line4", span="85-85"];
m9_23 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="this.line5 = line5", span="86-86"];
m9_10 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line1'');", span="76-76"];
m9_12 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line2'');", span="77-77"];
m9_14 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line3'');", span="78-78"];
m9_16 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line4'');", span="79-79"];
m9_18 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="throw new ArgumentException(''line5'');", span="80-80"];
m9_24 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string, string, string, string, string)", span="74-74"];
m9_26 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", span="149-149"];
m9_27 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="var strArray = new[] { line1, line2, line3, line4, line5 }", span="151-151"];
m9_28 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="return strArray.Aggregate(helpText, (current, line) => func(line));", span="152-152"];
m9_29 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, System.Func<string, CommandLine.Text.HelpText>)", span="149-149"];
m9_0 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Entry CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="24-24"];
m9_1 [cluster="CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", file="MultiLineTextAttribute.cs", label="Exit CommandLine.Text.MultilineTextAttribute.MultilineTextAttribute(string)", span="24-24"];
m9_34 [cluster="System.Func<T, TResult>.Invoke(T)", file="MultiLineTextAttribute.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m9_25 [cluster="System.ArgumentException.ArgumentException(string)", file="MultiLineTextAttribute.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m9_30 [cluster="Unk.Aggregate", file="MultiLineTextAttribute.cs", label="Entry Unk.Aggregate", span=""];
m9_47 [file="MultiLineTextAttribute.cs", label="CommandLine.Text.MultilineTextAttribute", span=""];
m9_48 [file="MultiLineTextAttribute.cs", label="System.Func<string, CommandLine.Text.HelpText>", span=""];
m10_17 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Entry CommandLine.NameInfo.GetHashCode()", span="80-80"];
m10_18 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="return new { ShortName, LongName }.GetHashCode();", span="82-82"];
m10_19 [cluster="CommandLine.NameInfo.GetHashCode()", file="NameInfo.cs", label="Exit CommandLine.NameInfo.GetHashCode()", span="80-80"];
m10_0 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m10_1 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="shortName == null", span="22-22"];
m10_3 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="longName == null", span="23-23"];
m10_5 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="this.longName = longName", span="25-25"];
m10_6 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="this.shortName = shortName", span="26-26"];
m10_2 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="throw new ArgumentNullException(''shortName'');", span="22-22"];
m10_4 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="throw new ArgumentNullException(''longName'');", span="23-23"];
m10_7 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m10_15 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m10_21 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="other == null", span="92-92"];
m10_23 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="return ShortName.Equals(other.ShortName) && LongName.Equals(other.LongName);", span="97-97"];
m10_22 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="return false;", span="94-94"];
m10_24 [cluster="CommandLine.NameInfo.Equals(CommandLine.NameInfo)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(CommandLine.NameInfo)", span="90-90"];
m10_16 [cluster="object.Equals(object)", file="NameInfo.cs", label="Entry object.Equals(object)", span="0-0"];
m10_25 [cluster="string.Equals(string)", file="NameInfo.cs", label="Entry string.Equals(string)", span="0-0"];
m10_8 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameInfo.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m10_9 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Entry CommandLine.NameInfo.Equals(object)", span="65-65"];
m10_10 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="var other = obj as NameInfo", span="67-67"];
m10_13 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="return base.Equals(obj);", span="73-73"];
m10_11 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="other != null", span="68-68"];
m10_12 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="return Equals(other);", span="70-70"];
m10_14 [cluster="CommandLine.NameInfo.Equals(object)", file="NameInfo.cs", label="Exit CommandLine.NameInfo.Equals(object)", span="65-65"];
m10_20 [cluster="object.GetHashCode()", file="NameInfo.cs", label="Entry object.GetHashCode()", span="0-0"];
m10_26 [file="NameInfo.cs", label="CommandLine.NameInfo", span=""];
m11_11 [cluster="Unk.SingleOrDefault", file="NameLookup.cs", label="Entry Unk.SingleOrDefault", span=""];
m11_0 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m11_1 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="13-13"];
m11_2 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m11_7 [cluster="string.MatchName(string, string, System.StringComparer)", file="NameLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m11_12 [cluster="Unk.ToMaybe", file="NameLookup.cs", label="Entry Unk.ToMaybe", span=""];
m11_21 [cluster="Unk.Just", file="NameLookup.cs", label="Entry Unk.Just", span=""];
m11_18 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="22-22"];
m11_5 [cluster="lambda expression", file="NameLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="13-13"];
m11_4 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="13-13"];
m11_6 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="13-13"];
m11_16 [cluster="lambda expression", file="NameLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="20-20"];
m11_15 [cluster="lambda expression", file="NameLookup.cs", label="Entry lambda expression", span="20-20"];
m11_17 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="20-20"];
m11_19 [cluster="lambda expression", file="NameLookup.cs", label="Maybe.Just(spec.Separator)", span="22-22"];
m11_20 [cluster="lambda expression", file="NameLookup.cs", label="Exit lambda expression", span="22-22"];
m11_14 [cluster="Unk.Return", file="NameLookup.cs", label="Entry Unk.Return", span=""];
m11_13 [cluster="CSharpx.Maybe.Nothing<T>()", file="NameLookup.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m11_3 [cluster="Unk.Any", file="NameLookup.cs", label="Entry Unk.Any", span=""];
m11_8 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m11_9 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .Return(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="19-22"];
m11_10 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookup.cs", label="Exit CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m11_22 [file="NameLookup.cs", label=string, span=""];
m11_23 [file="NameLookup.cs", label="System.StringComparer", span=""];
m11_24 [file="NameLookup.cs", label=string, span=""];
m11_25 [file="NameLookup.cs", label="System.StringComparer", span=""];
m12_8 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m12_9 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="configuration == null", span="39-39"];
m12_12 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="configuration(settings)", span="42-42"];
m12_10 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="throw new ArgumentNullException(''configuration'');", span="39-39"];
m12_11 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="settings = new ParserSettings()", span="41-41"];
m12_13 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="settings.Consumed = true", span="43-43"];
m12_14 [cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="37-37"];
m12_84 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="33-33"];
m12_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m12_20 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Entry CommandLine.Parser.~Parser()", span="55-55"];
m12_21 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Dispose(false)", span="57-57"];
m12_22 [cluster="CommandLine.Parser.~Parser()", file="Parser.cs", label="Exit CommandLine.Parser.~Parser()", span="55-55"];
m12_86 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m12_16 [cluster="System.Action<T>.Invoke(T)", file="Parser.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m12_58 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142"];
m12_59 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="args == null", span="144-144"];
m12_61 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="types == null", span="145-145"];
m12_63 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="types.Length == 0", span="146-146"];
m12_65 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="148-155"];
m12_60 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="144-144"];
m12_62 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentNullException(''types'');", span="145-145"];
m12_64 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="throw new ArgumentOutOfRangeException(''types'');", span="146-146"];
m12_66 [cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="142-142"];
m12_3 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46"];
m12_17 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="this.settings = settings", span="48-48"];
m12_18 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="this.settings.Consumed = true", span="49-49"];
m12_19 [cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="46-46"];
m12_67 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
m12_42 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="113-113"];
m12_43 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="factory == null", span="116-116"];
m12_47 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="args == null", span="118-118"];
m12_49 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="120-127"];
m12_44 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''factory'');", span="116-116"];
m12_45 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="!typeof(T).IsMutable()", span="117-117"];
m12_46 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentException(''factory'');", span="117-117"];
m12_48 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="118-118"];
m12_50 [cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>)", span="113-113"];
m12_100 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m12_51 [cluster="System.ArgumentException.ArgumentException(string)", file="Parser.cs", label="Entry System.ArgumentException.ArgumentException(string)", span="0-0"];
m12_112 [cluster="Unk.Where", file="Parser.cs", label="Entry Unk.Where", span=""];
m12_4 [cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs", label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25"];
m12_93 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m12_5 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Entry CommandLine.Parser.Parser()", span="26-26"];
m12_6 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="settings = new ParserSettings { Consumed = true }", span="28-28"];
m12_7 [cluster="CommandLine.Parser.Parser()", file="Parser.cs", label="Exit CommandLine.Parser.Parser()", span="26-26"];
m12_31 [cluster="CSharpx.Maybe.Just<T>(T)", file="Parser.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m12_103 [cluster="System.Func<TResult>.Invoke()", file="Parser.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m12_105 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="201-201"];
m12_116 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="parserResult.Tag == ParserResultType.NotParsed", span="203-203"];
m12_117 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="((NotParsed<T>)parserResult).Errors.Any()", span="205-205"];
m12_118 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="207-207"];
m12_119 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="return parserResult;", span="211-211"];
m12_120 [cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs", label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="201-201"];
m12_124 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="207-207"];
m12_0 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="21-21"];
m12_1 [cluster="lambda expression", file="Parser.cs", label="new Parser(new ParserSettings{ HelpWriter = Console.Error })", span="21-21"];
m12_2 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="21-21"];
m12_35 [cluster="lambda expression", file="Parser.cs", label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="94-99"];
m12_34 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="94-99"];
m12_36 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="94-99"];
m12_38 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="96-96"];
m12_39 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="96-96"];
m12_40 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="96-96"];
m12_53 [cluster="lambda expression", file="Parser.cs", label="InstanceBuilder.Build(\r\n                    Maybe.Just(factory),\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="121-126"];
m12_52 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="121-126"];
m12_54 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="121-126"];
m12_55 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="123-123"];
m12_56 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="123-123"];
m12_57 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="123-123"];
m12_69 [cluster="lambda expression", file="Parser.cs", label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    types,\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture)", span="149-154"];
m12_68 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="149-154"];
m12_70 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="149-154"];
m12_72 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="150-150"];
m12_73 [cluster="lambda expression", file="Parser.cs", label="Tokenize(arguments, optionSpecs, settings)", span="150-150"];
m12_74 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="150-150"];
m12_88 [cluster="lambda expression", file="Parser.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="177-177"];
m12_91 [cluster="lambda expression", file="Parser.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="177-177"];
m12_95 [cluster="lambda expression", file="Parser.cs", label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="178-178"];
m12_98 [cluster="lambda expression", file="Parser.cs", label="NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer)", span="179-179"];
m12_87 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="176-177"];
m12_94 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="178-178"];
m12_97 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="179-179"];
m12_89 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="176-177"];
m12_90 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="177-177"];
m12_92 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="177-177"];
m12_96 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="178-178"];
m12_99 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="179-179"];
m12_109 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="196-196"];
m12_110 [cluster="lambda expression", file="Parser.cs", label="errs.Where(e => e.Tag != ErrorType.UnknownOptionError)", span="196-196"];
m12_111 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="196-196"];
m12_113 [cluster="lambda expression", file="Parser.cs", label="Entry lambda expression", span="196-196"];
m12_114 [cluster="lambda expression", file="Parser.cs", label="e.Tag != ErrorType.UnknownOptionError", span="196-196"];
m12_115 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="196-196"];
m12_125 [cluster="lambda expression", file="Parser.cs", label="writer.Write(HelpText.AutoBuild(parserResult))", span="207-207"];
m12_126 [cluster="lambda expression", file="Parser.cs", label="Exit lambda expression", span="207-207"];
m12_121 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Parser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m12_122 [cluster="T.ToMaybe<T>()", file="Parser.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m12_104 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Entry CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="192-192"];
m12_106 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="return ignoreUnknownArguments\r\n                       ? parserResult.Tag == ParserResultType.NotParsed\r\n                            ? ((NotParsed<T>)parserResult).MapErrors(errs => errs.Where(e => e.Tag != ErrorType.UnknownOptionError))\r\n                            : parserResult\r\n                       : parserResult;", span="194-198"];
m12_107 [cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs", label="Exit CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="192-192"];
m12_108 [cluster="Unk.MapErrors", file="Parser.cs", label="Entry Unk.MapErrors", span=""];
m12_123 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="Parser.cs", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
m12_127 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="253-253"];
m12_71 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33"];
m12_85 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Parser.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13"];
m12_79 [cluster="System.GC.SuppressFinalize(object)", file="Parser.cs", label="Entry System.GC.SuppressFinalize(object)", span="0-0"];
m12_32 [cluster="CSharpx.Maybe.Nothing<T>()", file="Parser.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m12_136 [cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs", label="Entry CommandLine.ParserSettings.Dispose()", span="119-119"];
m12_30 [cluster="System.Type.IsMutable()", file="Parser.cs", label="Entry System.Type.IsMutable()", span="139-139"];
m12_33 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="183-183"];
m12_101 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="return DisplayHelp(\r\n                HandleUnknownArguments(\r\n                    parseFunc(),\r\n                    settings.IgnoreUnknownArguments),\r\n                settings.HelpWriter);", span="185-189"];
m12_102 [cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="183-183"];
m12_75 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Entry CommandLine.Parser.Dispose()", span="161-161"];
m12_76 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Dispose(true)", span="163-163"];
m12_77 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="GC.SuppressFinalize(this)", span="165-165"];
m12_78 [cluster="CommandLine.Parser.Dispose()", file="Parser.cs", label="Exit CommandLine.Parser.Dispose()", span="161-161"];
m12_24 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m12_25 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="args == null", span="87-87"];
m12_28 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, settings),\r\n                    args,\r\n                    settings.NameComparer,\r\n                    settings.ParsingCulture),\r\n                settings);", span="93-100"];
m12_26 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="throw new ArgumentNullException(''args'');", span="87-87"];
m12_27 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="var factory = typeof(T).IsMutable()\r\n                ? Maybe.Just<Func<T>>(Activator.CreateInstance<T>)\r\n                : Maybe.Nothing<Func<T>>()", span="89-91"];
m12_29 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="Parser.cs", label="Exit CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m12_41 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="168-168"];
m12_80 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="var tokens = settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer)))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="173-178"];
m12_81 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, settings.NameComparer))", span="179-179"];
m12_82 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="return explodedTokens;", span="180-180"];
m12_83 [cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs", label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="168-168"];
m12_23 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Entry CommandLine.Parser.Dispose(bool)", span="214-214"];
m12_129 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposed, span="216-216"];
m12_131 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label=disposing, span="221-221"];
m12_130 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="return;", span="218-218"];
m12_132 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="settings != null", span="223-223"];
m12_133 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="settings.Dispose()", span="225-225"];
m12_134 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="disposed = true", span="228-228"];
m12_135 [cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs", label="Exit CommandLine.Parser.Dispose(bool)", span="214-214"];
m12_15 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m12_128 [cluster="System.IO.TextWriter.Write(string)", file="Parser.cs", label="Entry System.IO.TextWriter.Write(string)", span="0-0"];
m12_137 [file="Parser.cs", label="CommandLine.Parser", span=""];
m12_138 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m12_139 [file="Parser.cs", label=factory, span=""];
m12_140 [file="Parser.cs", label="System.Func<T>", span=""];
m12_141 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m12_142 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m12_143 [file="Parser.cs", label="params System.Type[]", span=""];
m12_144 [file="Parser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m12_145 [file="Parser.cs", label="CommandLine.ParserSettings", span=""];
m12_146 [file="Parser.cs", label="CommandLine.ParserResult<T>", span=""];
m13_11 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28"];
m13_12 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="30-30"];
m13_13 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .WithParsed<AddOptions>(opts => expected = ''wrong1'')\r\n                .WithParsed<CommitOptions>(opts => expected = ''wrong2'')\r\n                .WithParsed<CloneOptions>(opts => expected = opts.Urls.First())", span="31-35"];
m13_14 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="''https://value.org/user/file.git''.ShouldBeEquivalentTo(expected)", span="37-37"];
m13_15 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_verbs()", span="28-28"];
m13_6 [cluster="CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<T>.WithParsed<T>(System.Action<T>)", span="21-21"];
m13_135 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3, T4>(System.Collections.Generic.IEnumerable<string>)", span="68-68"];
m13_16 [cluster="CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2, T3>(System.Collections.Generic.IEnumerable<string>)", span="46-46"];
m13_65 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75"];
m13_66 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = ''a default''", span="77-77"];
m13_67 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="78-80"];
m13_68 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="82-82"];
m13_69 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_not_parsed()", span="75-75"];
m13_104 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m13_105 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .Return(_ => 0, _ => -1)", span="111-112"];
m13_106 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="(-1).ShouldBeEquivalentTo(expected)", span="114-114"];
m13_107 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code()", span="109-109"];
m13_54 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64"];
m13_55 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="66-66"];
m13_56 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)\r\n                .WithNotParsed(_ => expected = ''changed'')", span="67-69"];
m13_57 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="71-71"];
m13_58 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_proper_lambda_when_parsed()", span="64-64"];
m13_17 [cluster="CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.WithParsed<T>(System.Action<T>)", span="38-38"];
m13_28 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41"];
m13_29 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = ''a default''", span="43-43"];
m13_30 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''-i'', ''aaa'' })\r\n                .WithNotParsed(_ => expected = ''changed'')", span="44-45"];
m13_31 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="47-47"];
m13_32 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_not_parsed()", span="41-41"];
m13_91 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="160-160"];
m13_163 [cluster="CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, T2, T3, T4, T5, TResult>(System.Func<T1, TResult>, System.Func<T2, TResult>, System.Func<T3, TResult>, System.Func<T4, TResult>, System.Func<T5, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="249-249"];
m13_179 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="168-168"];
m13_8 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="22-22"];
m13_9 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="22-22"];
m13_10 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="22-22"];
m13_18 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="33-33"];
m13_21 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="34-34"];
m13_24 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="35-35"];
m13_19 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong1''", span="33-33"];
m13_20 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="33-33"];
m13_22 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong2''", span="34-34"];
m13_23 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="34-34"];
m13_25 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.Urls.First()", span="35-35"];
m13_26 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="35-35"];
m13_34 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="45-45"];
m13_35 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="45-45"];
m13_36 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="45-45"];
m13_42 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="55-55"];
m13_45 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="56-56"];
m13_48 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="57-57"];
m13_51 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="58-58"];
m13_43 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong1''", span="55-55"];
m13_44 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="55-55"];
m13_46 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong2''", span="56-56"];
m13_47 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="56-56"];
m13_49 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong3''", span="57-57"];
m13_50 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="57-57"];
m13_52 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="58-58"];
m13_53 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="58-58"];
m13_59 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="68-68"];
m13_62 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="69-69"];
m13_60 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="68-68"];
m13_61 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="68-68"];
m13_63 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="69-69"];
m13_64 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="69-69"];
m13_70 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="79-79"];
m13_73 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="80-80"];
m13_71 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.StringValue", span="79-79"];
m13_72 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="79-79"];
m13_74 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''changed''", span="80-80"];
m13_75 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="80-80"];
m13_81 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="89-89"];
m13_84 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="89-89"];
m13_82 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="89-89"];
m13_83 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="89-89"];
m13_85 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="-1", span="89-89"];
m13_86 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="89-89"];
m13_92 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="100-100"];
m13_95 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="101-101"];
m13_98 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="102-102"];
m13_101 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="103-103"];
m13_93 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="100-100"];
m13_94 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="100-100"];
m13_96 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="101-101"];
m13_97 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="101-101"];
m13_99 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="102-102"];
m13_100 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="102-102"];
m13_102 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="103-103"];
m13_103 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="103-103"];
m13_108 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="112-112"];
m13_111 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="112-112"];
m13_109 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="112-112"];
m13_110 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="112-112"];
m13_112 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="-1", span="112-112"];
m13_113 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="112-112"];
m13_118 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="123-123"];
m13_121 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="124-124"];
m13_124 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="125-125"];
m13_127 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="126-126"];
m13_119 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="123-123"];
m13_120 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="123-123"];
m13_122 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="124-124"];
m13_123 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="124-124"];
m13_125 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="125-125"];
m13_126 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="125-125"];
m13_128 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="126-126"];
m13_129 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="126-126"];
m13_136 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="137-137"];
m13_139 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="138-138"];
m13_142 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="139-139"];
m13_145 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="140-140"];
m13_137 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong1''", span="137-137"];
m13_138 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="137-137"];
m13_140 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong2''", span="138-138"];
m13_141 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="138-138"];
m13_143 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = ''wrong3''", span="139-139"];
m13_144 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="139-139"];
m13_146 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="expected = opts.FileName", span="140-140"];
m13_147 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="140-140"];
m13_153 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="151-151"];
m13_156 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="152-152"];
m13_154 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="151-151"];
m13_155 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="151-151"];
m13_157 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="152-152"];
m13_158 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="152-152"];
m13_164 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="163-163"];
m13_167 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="164-164"];
m13_170 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="165-165"];
m13_173 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="166-166"];
m13_176 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Entry lambda expression", span="167-167"];
m13_165 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=0, span="163-163"];
m13_166 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="163-163"];
m13_168 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=1, span="164-164"];
m13_169 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="164-164"];
m13_171 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=2, span="165-165"];
m13_172 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="165-165"];
m13_174 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=4, span="166-166"];
m13_175 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="166-166"];
m13_177 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=3, span="167-167"];
m13_178 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="167-167"];
m13_180 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label=5, span="168-168"];
m13_181 [cluster="lambda expression", file="ParserResultExtensionsTests.cs", label="Exit lambda expression", span="168-168"];
m13_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ParserResultExtensionsTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m13_148 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m13_149 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (BaseFileOptions opts) => 1,\r\n                    errs => 2)", span="148-152"];
m13_150 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="1.ShouldBeEquivalentTo(expected)", span="154-154"];
m13_151 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_single_base_verbs()", span="146-146"];
m13_130 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m13_131 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="134-134"];
m13_132 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .WithParsed<AddOptions>(opts => expected = ''wrong1'')\r\n                .WithParsed<CommitOptions>(opts => expected = ''wrong2'')\r\n                .WithParsed<CloneOptions>(opts => expected = ''wrong3'')\r\n                .WithParsed<BaseFileOptions>(opts => expected = opts.FileName)", span="135-140"];
m13_133 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="''dummy.bin''.ShouldBeEquivalentTo(expected)", span="142-142"];
m13_134 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed_for_base_verbs()", span="132-132"];
m13_76 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86"];
m13_77 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .Return(_ => 0, _ => -1)", span="88-89"];
m13_78 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="0.ShouldBeEquivalentTo(expected)", span="91-91"];
m13_79 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code()", span="86-86"];
m13_80 [cluster="CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<TSource>.Return<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="78-78"];
m13_114 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m13_115 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''undefined'', ''-xyz'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    errs => 3)", span="120-126"];
m13_116 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="3.ShouldBeEquivalentTo(expected)", span="128-128"];
m13_117 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_failed_parsing_into_exit_code_for_verbs()", span="118-118"];
m13_33 [cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="59-59"];
m13_37 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51"];
m13_38 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = ''a default''", span="53-53"];
m13_39 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(new[] { ''undefined'', ''-xyz'' })\r\n                .WithParsed<AddOptions>(opts => expected = ''wrong1'')\r\n                .WithParsed<CommitOptions>(opts => expected = ''wrong2'')\r\n                .WithParsed<CloneOptions>(opts => expected = ''wrong3'')\r\n                .WithNotParsed(_ => expected = ''changed'')", span="54-58"];
m13_40 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="''changed''.ShouldBeEquivalentTo(expected)", span="60-60"];
m13_41 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_not_parsed_lambda_when_parsed_for_verbs()", span="51-51"];
m13_159 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m13_160 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions, DerivedAddOptions>(\r\n                new[] { ''derivedadd'', ''dummy.bin'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    (BaseFileOptions opts) => 4,\r\n                    (DerivedAddOptions opts) => 3,\r\n                    errs => 5)", span="160-168"];
m13_161 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="4.ShouldBeEquivalentTo(expected)", span="170-170"];
m13_162 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_multiple_base_verbs()", span="158-158"];
m13_0 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18"];
m13_1 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="var expected = string.Empty", span="20-20"];
m13_2 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Parser.Default.ParseArguments<FakeOptions>(new[] { ''--stringvalue'', ''value'' })\r\n                .WithParsed(opts => expected = opts.StringValue)", span="21-22"];
m13_3 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="''value''.ShouldBeEquivalentTo(expected)", span="24-24"];
m13_4 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Invoke_parsed_lambda_when_parsed()", span="18-18"];
m13_5 [cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85"];
m13_152 [cluster="CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.ParserResult<object>.Return<T1, TResult>(System.Func<T1, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="99-99"];
m13_87 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Entry CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m13_88 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="var expected = Parser.Default.ParseArguments<AddOptions, CommitOptions, CloneOptions>(\r\n                new[] { ''clone'', ''https://value.org/user/file.git'' })\r\n                .Return(\r\n                    (AddOptions opts) => 0,\r\n                    (CommitOptions opts) => 1,\r\n                    (CloneOptions opts) => 2,\r\n                    errs => 3)", span="97-103"];
m13_89 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="2.ShouldBeEquivalentTo(expected)", span="105-105"];
m13_90 [cluster="CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", file="ParserResultExtensionsTests.cs", label="Exit CommandLine.Tests.Unit.ParserResultExtensionsTests.Turn_sucessful_parsing_into_exit_code_for_verbs()", span="95-95"];
m13_7 [cluster="Unk.ShouldBeEquivalentTo", file="ParserResultExtensionsTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m14_20 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m14_21 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="return type.FullName.StartsWith(\r\n                ''Microsoft.FSharp.Core.FSharpOption`1'', StringComparison.Ordinal);", span="37-38"];
m14_22 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m14_1 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="15-15"];
m14_0 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m14_2 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="var attributes = assembly.GetCustomAttributes(typeof(TAttribute), false)", span="16-16"];
m14_3 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="return attributes.Length > 0\r\n                ? Maybe.Just((TAttribute)attributes[0])\r\n                : Maybe.Nothing<TAttribute>();", span="18-20"];
m14_4 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
m14_7 [cluster="System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetCustomAttributes(System.Type, bool)", span="0-0"];
m14_6 [cluster="System.Reflection.Assembly.GetExecutingAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetExecutingAssembly()", span="0-0"];
m14_5 [cluster="System.Reflection.Assembly.GetEntryAssembly()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetEntryAssembly()", span="0-0"];
m14_14 [cluster="System.Reflection.Assembly.GetName()", file="ReflectionHelper.cs", label="Entry System.Reflection.Assembly.GetName()", span="0-0"];
m14_16 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="31-31"];
m14_15 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="29-29"];
m14_17 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="return assembly.GetName().Version.ToStringInvariant();", span="32-32"];
m14_18 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyVersion()", span="29-29"];
m14_19 [cluster="T.ToStringInvariant<T>()", file="ReflectionHelper.cs", label="Entry T.ToStringInvariant<T>()", span="15-15"];
m14_32 [cluster="System.Type.CreateDefaultForImmutable()", file="ReflectionHelper.cs", label="Entry System.Type.CreateDefaultForImmutable()", span="149-149"];
m14_8 [cluster="CSharpx.Maybe.Just<T>(T)", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m14_34 [cluster="Unk.Invoke", file="ReflectionHelper.cs", label="Entry Unk.Invoke", span=""];
m14_30 [cluster="System.Type.GetConstructor(System.Type[])", file="ReflectionHelper.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m14_35 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m14_36 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="var ctor = type.GetConstructor(constructorTypes)", span="52-52"];
m14_37 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="53-54"];
m14_38 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="return ctor.Invoke(values);", span="55-55"];
m14_39 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="50-50"];
m14_33 [cluster="Unk.ToArray", file="ReflectionHelper.cs", label="Entry Unk.ToArray", span=""];
m14_23 [cluster="string.StartsWith(string, System.StringComparison)", file="ReflectionHelper.cs", label="Entry string.StartsWith(string, System.StringComparison)", span="0-0"];
m14_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m14_11 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="var assembly = Assembly.GetEntryAssembly() ?? Assembly.GetExecutingAssembly()", span="25-25"];
m14_10 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m14_12 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="return assembly.GetName().Name;", span="26-26"];
m14_13 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
m14_24 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="41-41"];
m14_25 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var t = typeof(T)", span="43-43"];
m14_26 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var ctor = t.GetConstructor(constructorTypes)", span="44-44"];
m14_27 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="var values = (from prms in ctor.GetParameters()\r\n                          select prms.ParameterType.CreateDefaultForImmutable()).ToArray()", span="45-46"];
m14_28 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="return (T)ctor.Invoke(values);", span="47-47"];
m14_29 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", file="ReflectionHelper.cs", label="Exit CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance<T>(System.Type[])", span="41-41"];
m14_31 [cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionHelper.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m15_30 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="Specification.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m15_31 [cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="27-27"];
m15_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m15_26 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Specification.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m15_0 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Entry CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="39-39"];
m15_1 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.tag = tag", span="43-43"];
m15_2 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.required = required", span="44-44"];
m15_3 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.min = min", span="45-45"];
m15_4 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.max = max", span="46-46"];
m15_5 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.defaultValue = defaultValue", span="47-47"];
m15_6 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.conversionType = conversionType", span="48-48"];
m15_7 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.targetType = targetType", span="49-49"];
m15_8 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.helpText = helpText", span="50-50"];
m15_9 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.metaValue = metaValue", span="51-51"];
m15_10 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="this.enumValues = enumValues", span="52-52"];
m15_11 [cluster="CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="Specification.cs", label="Exit CommandLine.Core.Specification.Specification(CommandLine.Core.SpecificationType, bool, CSharpx.Maybe<int>, CSharpx.Maybe<int>, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="39-39"];
m15_34 [cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="Specification.cs", label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="22-22"];
m15_32 [cluster="string.ToLowerInvariant()", file="Specification.cs", label="Entry string.ToLowerInvariant()", span="0-0"];
m15_29 [cluster="System.Enum.GetNames(System.Type)", file="Specification.cs", label="Entry System.Enum.GetNames(System.Type)", span="0-0"];
m15_12 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m15_13 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var attrs = property.GetCustomAttributes(true)", span="107-107"];
m15_16 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var spec = OptionSpecification.FromAttribute(oa.Single(), property.PropertyType,\r\n                    property.PropertyType.IsEnum\r\n                        ? Enum.GetNames(property.PropertyType)\r\n                        : Enumerable.Empty<string>())", span="111-114"];
m15_18 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec.WithLongName(property.Name.ToLowerInvariant());", span="117-117"];
m15_22 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return ValueSpecification.FromAttribute(va.Single(), property.PropertyType,\r\n                    property.PropertyType.IsEnum\r\n                        ? Enum.GetNames(property.PropertyType)\r\n                        : Enumerable.Empty<string>());", span="125-128"];
m15_14 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var oa = attrs.OfType<OptionAttribute>()", span="108-108"];
m15_20 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="var va = attrs.OfType<ValueAttribute>()", span="122-122"];
m15_15 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="oa.Count() == 1", span="109-109"];
m15_17 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="spec.ShortName.Length == 0 && spec.LongName.Length == 0", span="115-115"];
m15_19 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="return spec;", span="119-119"];
m15_21 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="va.Count() == 1", span="123-123"];
m15_23 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="throw new InvalidOperationException();", span="131-131"];
m15_24 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="Specification.cs", label="Exit CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m15_25 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="Specification.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m15_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Specification.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m15_33 [cluster="CommandLine.Core.OptionSpecification.WithLongName(string)", file="Specification.cs", label="Entry CommandLine.Core.OptionSpecification.WithLongName(string)", span="20-20"];
m15_35 [cluster="System.InvalidOperationException.InvalidOperationException()", file="Specification.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m15_36 [file="Specification.cs", label="CommandLine.Core.Specification", span=""];
m16_5 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m16_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="value == null", span="23-23"];
m16_8 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="return new SpecificationProperty(specification, property, value);", span="25-25"];
m16_7 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="throw new ArgumentNullException(''value'');", span="23-23"];
m16_9 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m16_10 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationProperty.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m16_0 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Entry CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="14-14"];
m16_1 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="this.property = property", span="16-16"];
m16_2 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="this.specification = specification", span="17-17"];
m16_3 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="this.value = value", span="18-18"];
m16_4 [cluster="CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationProperty.cs", label="Exit CommandLine.Core.SpecificationProperty.SpecificationProperty(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="14-14"];
m16_11 [file="SpecificationProperty.cs", label="CommandLine.Core.SpecificationProperty", span=""];
m17_6 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m17_7 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", span="18-18"];
m17_8 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="newValue == null", span="20-20"];
m17_10 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(specProp.Specification, specProp.Property, newValue);", span="22-22"];
m17_9 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newValue'');", span="20-20"];
m17_11 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithValue(CommandLine.Core.SpecificationProperty, CSharpx.Maybe<object>)", span="18-18"];
m17_0 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m17_1 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="newSpecification == null", span="13-13"];
m17_3 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="return SpecificationProperty.Create(newSpecification, specProp.Property, specProp.Value);", span="15-15"];
m17_2 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="throw new ArgumentNullException(''newSpecification'');", span="13-13"];
m17_4 [cluster="CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.WithSpecification(CommandLine.Core.SpecificationProperty, CommandLine.Core.Specification)", span="11-11"];
m17_12 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m17_13 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="specProp.Specification.TargetType", span="27-27"];
m17_15 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType.GetGenericArguments()\r\n                             .SingleOrDefault()\r\n                             .ToMaybe()\r\n                             .FromJust(\r\n                                 new InvalidOperationException(''Sequence properties should be of type IEnumerable<T>.''));", span="30-34"];
m17_16 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="return specProp.Property.PropertyType;", span="36-36"];
m17_14 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="TargetType.Sequence", span="29-29"];
m17_17 [cluster="CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.GetConversionType(CommandLine.Core.SpecificationProperty)", span="25-25"];
m17_18 [cluster="System.Type.GetGenericArguments()", file="SpecificationPropertyExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m17_20 [cluster="T.ToMaybe<T>()", file="SpecificationPropertyExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m17_26 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m17_27 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Entry lambda expression", span="45-45"];
m17_28 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="rule(specProps)", span="45-45"];
m17_29 [cluster="lambda expression", file="SpecificationPropertyExtensions.cs", label="Exit lambda expression", span="45-45"];
m17_23 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="Entry CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m17_24 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="return rules.SelectMany(rule => rule(specProps));", span="45-45"];
m17_25 [cluster="CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="SpecificationPropertyExtensions.cs", label="Exit CommandLine.Core.SpecificationPropertyExtensions.Validate(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m17_5 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m17_21 [cluster="System.InvalidOperationException.InvalidOperationException(string)", file="SpecificationPropertyExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0"];
m17_19 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="SpecificationPropertyExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m17_22 [cluster="Unk.FromJust", file="SpecificationPropertyExtensions.cs", label="Entry Unk.FromJust", span=""];
m17_30 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationPropertyExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m17_31 [file="SpecificationPropertyExtensions.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", span=""];
m18_0 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m18_1 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=green, community=0, file="StringBuilderExtensions.cs", label="0: condition", span="11-11"];
m18_2 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=green, community=0, file="StringBuilderExtensions.cs", label="0: values", span="12-12"];
m18_3 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=green, community=0, file="StringBuilderExtensions.cs", label="2: builder.Append(value)", span="13-13"];
m18_4 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", color=green, community=0, file="StringBuilderExtensions.cs", label="1: return builder;", span="15-15"];
m18_5 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params string[])", span="9-9"];
m18_17 [cluster="System.Text.StringBuilder.AppendFormat(string, params object[])", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.AppendFormat(string, params object[])", span="0-0"];
m18_45 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="85-85"];
m18_46 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="builder.Length > 0", span="87-87"];
m18_47 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="builder[builder.Length - 1] == c", span="88-88"];
m18_48 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs", label="3: builder.Remove(builder.Length - 1, 1)", span="89-89"];
m18_49 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", color=green, community=0, file="StringBuilderExtensions.cs", label="1: return builder;", span="91-91"];
m18_50 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatch(System.Text.StringBuilder, char)", span="85-85"];
m18_14 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="27-27"];
m18_15 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="return condition\r\n                ? builder.AppendFormat(format, args)\r\n                : builder;", span="29-31"];
m18_16 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendFormatWhen(System.Text.StringBuilder, bool, string, params object[])", span="27-27"];
m18_13 [cluster="System.Text.StringBuilder.Append(char)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m18_18 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m18_19 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="return condition\r\n                ? builder.Append(ifTrue)\r\n                : builder.Append(ifFalse);", span="36-38"];
m18_20 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIf(System.Text.StringBuilder, bool, string, string)", span="34-34"];
m18_7 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="18-18"];
m18_8 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label=condition, span="20-20"];
m18_9 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label=values, span="21-21"];
m18_10 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="22-22"];
m18_11 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="return builder;", span="24-24"];
m18_12 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendWhen(System.Text.StringBuilder, bool, params char[])", span="18-18"];
m18_34 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="66-66"];
m18_35 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", color=green, community=0, file="StringBuilderExtensions.cs", label="1: return builder == null\r\n                ? string.Empty\r\n                : builder.ToString();", span="68-70"];
m18_36 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeToString(System.Text.StringBuilder)", span="66-66"];
m18_44 [cluster="System.Text.StringBuilder.Remove(int, int)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Remove(int, int)", span="0-0"];
m18_28 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m18_29 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label=values, span="59-59"];
m18_31 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="builder.Append(value)", span="61-61"];
m18_32 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="return builder;", span="63-63"];
m18_30 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="value.Length > 0", span="60-60"];
m18_33 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.AppendIfNotEmpty(System.Text.StringBuilder, params string[])", span="57-57"];
m18_38 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="73-73"];
m18_39 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="return builder == null ? 0 : builder.Length;", span="75-75"];
m18_40 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.SafeLength(System.Text.StringBuilder)", span="73-73"];
m18_41 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="78-78"];
m18_42 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", color=red, community=0, file="StringBuilderExtensions.cs", label="1: return builder.Length > 0\r\n                ? builder.Remove(builder.Length - 1, 1)\r\n                : builder;", span="80-82"];
m18_43 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEnd(System.Text.StringBuilder, char)", span="78-78"];
m18_21 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m18_22 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="StringBuilderExtensions.cs", label="return condition\r\n                ? ifTrue(builder)\r\n                : ifFalse(builder);", span="44-46"];
m18_23 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.BimapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
m18_6 [cluster="System.Text.StringBuilder.Append(string)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m18_37 [cluster="System.Text.StringBuilder.ToString()", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m18_25 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m18_26 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="StringBuilderExtensions.cs", label="return condition\r\n                ? ifTrue(builder)\r\n                : builder;", span="52-54"];
m18_27 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.MapIf(System.Text.StringBuilder, bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
m18_51 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="94-94"];
m18_52 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", color=red, community=0, file="StringBuilderExtensions.cs", label="1: return condition\r\n                ? builder.TrimEndIfMatch(c)\r\n                : builder;", span="96-98"];
m18_53 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrimEndIfMatchWhen(System.Text.StringBuilder, bool, char)", span="94-94"];
m18_24 [cluster="System.Func<T, TResult>.Invoke(T)", file="StringBuilderExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m18_55 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Entry CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", span="101-101"];
m18_56 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="var bound = builder.Length - 1", span="103-103"];
m18_57 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="builder.Length == 0", span="104-104"];
m18_59 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="builder[bound] != ' '", span="105-105"];
m18_65 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="builder[i] != ' '", span="110-110"];
m18_62 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="var i = bound", span="107-107"];
m18_63 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="i <= bound", span="107-107"];
m18_58 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="return 0;", span="104-104"];
m18_60 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="return 0;", span="105-105"];
m18_61 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="var c = 0", span="106-106"];
m18_66 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="c++", span="111-111"];
m18_68 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="return c;", span="113-113"];
m18_64 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="i < 0", span="109-109"];
m18_67 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="i--", span="107-107"];
m18_69 [cluster="CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", file="StringBuilderExtensions.cs", label="Exit CommandLine.Infrastructure.StringBuilderExtensions.TrailingSpaces(System.Text.StringBuilder)", span="101-101"];
m18_54 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="StringBuilderExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m19_11 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="TokenizerTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m19_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="42-42"];
m19_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="45-46"];
m19_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="47-48"];
m19_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="60-60"];
m19_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="51-57"];
m19_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="42-42"];
m19_19 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m19_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenizerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m19_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="18-18"];
m19_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="21-22"];
m19_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="23-24"];
m19_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Value.Success.ShouldBeEquivalentTo(expectedTokens)", span="36-36"];
m19_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="27-33"];
m19_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="18-18"];
m19_26 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="57-57"];
m19_17 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="33-33"];
m19_16 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="33-33"];
m19_18 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="33-33"];
m19_27 [cluster="lambda expression", file="TokenizerTests.cs", label="NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="57-57"];
m19_28 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="57-57"];
m19_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46"];
m19_6 [cluster="CommandLine.Core.Token.Name(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m19_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenizerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m19_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m19_7 [cluster="CommandLine.Core.Token.Value(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m19_15 [cluster="Unk.ShouldBeEquivalentTo", file="TokenizerTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m19_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="TokenizerTests.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m19_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m19_29 [file="TokenizerTests.cs", label=specs, span=""];
m19_30 [file="TokenizerTests.cs", label=specs, span=""];
m20_14 [cluster="Unk.Create", file="TypeLookup.cs", label="Entry Unk.Create", span=""];
m20_4 [cluster="Unk.SingleOrDefault", file="TypeLookup.cs", label="Entry Unk.SingleOrDefault", span=""];
m20_29 [cluster="Unk.WithNextValue", file="TypeLookup.cs", label="Entry Unk.WithNextValue", span=""];
m20_10 [cluster="string.MatchName(string, string, System.StringComparer)", file="TypeLookup.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m20_6 [cluster="Unk.Map", file="TypeLookup.cs", label="Entry Unk.Map", span=""];
m20_5 [cluster="Unk.ToMaybe", file="TypeLookup.cs", label="Entry Unk.ToMaybe", span=""];
m20_33 [cluster="object.Equals(object)", file="TypeLookup.cs", label="Entry object.Equals(object)", span="0-0"];
m20_0 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m20_1 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => TypeDescriptor.Create(s.TargetType, s.Max))", span="16-19"];
m20_2 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="return info;", span="20-20"];
m20_3 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m20_38 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="38-38"];
m20_8 [cluster="lambda expression", file="TypeLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="16-16"];
m20_7 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="16-16"];
m20_11 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="19-19"];
m20_9 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="16-16"];
m20_12 [cluster="lambda expression", file="TypeLookup.cs", label="TypeDescriptor.Create(s.TargetType, s.Max)", span="19-19"];
m20_13 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="19-19"];
m20_20 [cluster="lambda expression", file="TypeLookup.cs", label="name.MatchName(a.ShortName, a.LongName, comparer)", span="29-29"];
m20_24 [cluster="lambda expression", file="TypeLookup.cs", label="var next = specifications\r\n                                    .SkipWhile(s => s.Equals(first)).Take(1)\r\n                                    .SingleOrDefault(x => x.IsValue()).ToMaybe()\r\n                                    .Map(second => TypeDescriptor.Create(second.TargetType, second.Max))", span="35-38"];
m20_19 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="29-29"];
m20_22 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="32-40"];
m20_21 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="29-29"];
m20_23 [cluster="lambda expression", file="TypeLookup.cs", label="var descr = TypeDescriptor.Create(first.TargetType, first.Max)", span="34-34"];
m20_31 [cluster="lambda expression", file="TypeLookup.cs", label="s.Equals(first)", span="36-36"];
m20_25 [cluster="lambda expression", file="TypeLookup.cs", label="return descr.WithNextValue(next);", span="39-39"];
m20_30 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="36-36"];
m20_34 [cluster="lambda expression", file="TypeLookup.cs", label="Entry lambda expression", span="37-37"];
m20_26 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="32-40"];
m20_32 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="36-36"];
m20_35 [cluster="lambda expression", file="TypeLookup.cs", label="x.IsValue()", span="37-37"];
m20_36 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="37-37"];
m20_39 [cluster="lambda expression", file="TypeLookup.cs", label="TypeDescriptor.Create(second.TargetType, second.Max)", span="38-38"];
m20_40 [cluster="lambda expression", file="TypeLookup.cs", label="Exit lambda expression", span="38-38"];
m20_15 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m20_16 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="var info =\r\n                specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                    .ToMaybe()\r\n                    .Map(\r\n                        first =>\r\n                            {\r\n                                var descr = TypeDescriptor.Create(first.TargetType, first.Max);\r\n                                var next = specifications\r\n                                    .SkipWhile(s => s.Equals(first)).Take(1)\r\n                                    .SingleOrDefault(x => x.IsValue()).ToMaybe()\r\n                                    .Map(second => TypeDescriptor.Create(second.TargetType, second.Max));\r\n                                return descr.WithNextValue(next);\r\n                            })", span="28-40"];
m20_17 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="return info;", span="41-41"];
m20_18 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs", label="Exit CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m20_28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TypeLookup.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m20_27 [cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="TypeLookup.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0"];
m20_37 [cluster="CommandLine.Core.Specification.IsValue()", file="TypeLookup.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m20_41 [file="TypeLookup.cs", label=string, span=""];
m20_42 [file="TypeLookup.cs", label="System.StringComparer", span=""];
m20_43 [file="TypeLookup.cs", label=string, span=""];
m20_44 [file="TypeLookup.cs", label="System.StringComparer", span=""];
m20_45 [file="TypeLookup.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m20_46 [file="TypeLookup.cs", label=T1, span=""];
m21_38 [cluster="System.Type.GetVerbSpecification()", file="UnParserExtensions.cs", label="Entry System.Type.GetVerbSpecification()", span="27-27"];
m21_46 [cluster="System.Text.StringBuilder.Append(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
m21_124 [cluster="Unk.doubQt", file="UnParserExtensions.cs", label="Entry Unk.doubQt", span=""];
m21_149 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="38-38"];
m21_4 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m21_5 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { UseEqualToken = true };", span="63-63"];
m21_6 [cluster="CommandLine.UnParserSettings.WithUseEqualTokenOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithUseEqualTokenOnly()", span="61-61"];
m21_126 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m21_127 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="196-197"];
m21_128 [cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="194-194"];
m21_88 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m21_89 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="164-164"];
m21_90 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="spec.TargetType", span="165-165"];
m21_92 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(FormatWithQuotesIfString(value))", span="168-168"];
m21_94 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var sep = spec.SeperatorOrSpace()", span="171-171"];
m21_96 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="var e = ((IEnumerable)value).GetEnumerator()", span="174-174"];
m21_98 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.Append(format(e.Current)).Append(sep)", span="176-176"];
m21_99 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="builder.TrimEndIfMatch(' ')", span="177-177"];
m21_100 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="return builder.ToString();", span="180-180"];
m21_91 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Scalar", span="167-167"];
m21_93 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="TargetType.Sequence", span="170-170"];
m21_95 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Func<object, object> format = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="172-173"];
m21_97 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="e.MoveNext()", span="175-175"];
m21_101 [cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="162-162"];
m21_35 [cluster="System.Action<T>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m21_105 [cluster="System.Collections.IEnumerable.GetEnumerator()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0"];
m21_45 [cluster="Unk.Any", file="UnParserExtensions.cs", label="Entry Unk.Any", span=""];
m21_41 [cluster="object.IsEmpty()", file="UnParserExtensions.cs", label="Entry object.IsEmpty()", span="233-233"];
m21_107 [cluster="System.Func<T, TResult>.Invoke(T)", file="UnParserExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m21_137 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m21_138 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="var longName =\r\n                optionSpec.LongName.Length > 0\r\n                && !settings.PreferShortName", span="210-212"];
m21_139 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return\r\n                new StringBuilder(longName\r\n                    ? ''--''.JoinTo(optionSpec.LongName)\r\n                    : ''-''.JoinTo(optionSpec.ShortName))\r\n                        .AppendIf(longName && settings.UseEqualToken && optionSpec.ConversionType != typeof(bool), ''='', '' '')\r\n                    .ToString();", span="214-219"];
m21_140 [cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification, CommandLine.UnParserSettings)", span="208-208"];
m21_151 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m21_152 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value == null", span="235-235"];
m21_154 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="236-236"];
m21_156 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="237-237"];
m21_158 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is string && ((string)value).Length == 0", span="238-238"];
m21_160 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="239-239"];
m21_153 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="235-235"];
m21_155 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="236-236"];
m21_157 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="237-237"];
m21_159 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="238-238"];
m21_161 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return true;", span="239-239"];
m21_162 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="return false;", span="240-240"];
m21_163 [cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="233-233"];
m21_43 [cluster="Unk.Where", file="UnParserExtensions.cs", label="Entry Unk.Where", span=""];
m21_142 [cluster="System.Text.StringBuilder.AppendIf(bool, string, string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendIf(bool, string, string)", span="34-34"];
m21_52 [cluster="Unk.TrimEndIfMatchWhen", file="UnParserExtensions.cs", label="Entry Unk.TrimEndIfMatchWhen", span=""];
m21_120 [cluster="string.Replace(string, string)", file="UnParserExtensions.cs", label="Entry string.Replace(string, string)", span="0-0"];
m21_40 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="UnParserExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m21_72 [cluster="Unk.Contains", file="UnParserExtensions.cs", label="Entry Unk.Contains", span=""];
m21_115 [cluster="T.ToMaybe<T>()", file="UnParserExtensions.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m21_119 [cluster="string.Contains(string)", file="UnParserExtensions.cs", label="Entry string.Contains(string)", span="0-0"];
m21_36 [cluster="object.GetType()", file="UnParserExtensions.cs", label="Entry object.GetType()", span="0-0"];
m21_129 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="197-197"];
m21_11 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="83-83"];
m21_12 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="83-83"];
m21_61 [cluster="lambda expression", file="UnParserExtensions.cs", label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="112-113"];
m21_80 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')", span="148-151"];
m21_57 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(verb.Name).Append(' ')", span="107-107"];
m21_56 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="107-107"];
m21_60 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="112-113"];
m21_66 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="118-118"];
m21_70 [cluster="lambda expression", file="UnParserExtensions.cs", label="!shortSwitches.Contains(info)", span="132-132"];
m21_69 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="132-132"];
m21_73 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="135-135"];
m21_76 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="142-142"];
m21_85 [cluster="lambda expression", file="UnParserExtensions.cs", label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="156-156"];
m21_79 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="147-151"];
m21_84 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="156-156"];
m21_58 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="107-107"];
m21_62 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="112-113"];
m21_67 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Option", span="118-118"];
m21_68 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="118-118"];
m21_71 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="132-132"];
m21_74 [cluster="lambda expression", file="UnParserExtensions.cs", label="i.Specification.Tag == SpecificationType.Value", span="135-135"];
m21_75 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="135-135"];
m21_77 [cluster="lambda expression", file="UnParserExtensions.cs", label="((OptionSpecification)info.Specification).ShortName", span="142-142"];
m21_78 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="142-142"];
m21_81 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="147-151"];
m21_86 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="156-156"];
m21_110 [cluster="lambda expression", file="UnParserExtensions.cs", label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="173-173"];
m21_109 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="172-173"];
m21_111 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="172-173"];
m21_117 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="186-186"];
m21_122 [cluster="lambda expression", file="UnParserExtensions.cs", label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="190-191"];
m21_121 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="190-191"];
m21_116 [cluster="lambda expression", file="UnParserExtensions.cs", label="Entry lambda expression", span="185-186"];
m21_118 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="185-186"];
m21_123 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="190-191"];
m21_130 [cluster="lambda expression", file="UnParserExtensions.cs", label="o.Separator != '\0' ? o.Separator : ' '", span="197-197"];
m21_131 [cluster="lambda expression", file="UnParserExtensions.cs", label="Exit lambda expression", span="197-197"];
m21_136 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
m21_55 [cluster="string.TrimEnd(params char[])", file="UnParserExtensions.cs", label="Entry string.TrimEnd(params char[])", span="0-0"];
m21_108 [cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="85-85"];
m21_148 [cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35"];
m21_51 [cluster="System.Text.StringBuilder.TrailingSpaces()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrailingSpaces()", span="101-101"];
m21_59 [cluster="Unk.Append", file="UnParserExtensions.cs", label="Entry Unk.Append", span=""];
m21_47 [cluster="Unk.Select", file="UnParserExtensions.cs", label="Entry Unk.Select", span=""];
m21_164 [cluster="System.Type.GetDefaultValue()", file="UnParserExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="130-130"];
m21_87 [cluster="Unk.FormatValue", file="UnParserExtensions.cs", label="Entry Unk.FormatValue", span=""];
m21_42 [cluster="Unk.Memorize", file="UnParserExtensions.cs", label="Entry Unk.Memorize", span=""];
m21_83 [cluster="Unk.FormatOption", file="UnParserExtensions.cs", label="Entry Unk.FormatOption", span=""];
m21_44 [cluster="Unk.UniqueName", file="UnParserExtensions.cs", label="Entry Unk.UniqueName", span=""];
m21_150 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="UnParserExtensions.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="30-30"];
m21_125 [cluster="string.JoinTo(params string[])", file="UnParserExtensions.cs", label="Entry string.JoinTo(params string[])", span="45-45"];
m21_65 [cluster="object.NormalizeValue()", file="UnParserExtensions.cs", label="Entry object.NormalizeValue()", span="222-222"];
m21_39 [cluster="Unk.Return", file="UnParserExtensions.cs", label="Entry Unk.Return", span=""];
m21_54 [cluster="System.Text.StringBuilder.ToString()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m21_104 [cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="194-194"];
m21_50 [cluster="System.Text.StringBuilder.Append(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m21_135 [cluster="CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.FormatName(CommandLine.UnParserSettings)", span="208-208"];
m21_102 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m21_112 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="185-186"];
m21_113 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="188-191"];
m21_114 [cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="183-183"];
m21_0 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m21_1 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="return new UnParserSettings { GroupSwitches = true };", span="54-54"];
m21_2 [cluster="CommandLine.UnParserSettings.WithGroupSwitchesOnly()", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserSettings.WithGroupSwitchesOnly()", span="52-52"];
m21_53 [cluster="Unk.ForEach", file="UnParserExtensions.cs", label="Entry Unk.ForEach", span=""];
m21_103 [cluster="System.Text.StringBuilder.Append(object)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m21_49 [cluster="Unk.Join", file="UnParserExtensions.cs", label="Entry Unk.Join", span=""];
m21_10 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m21_141 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m21_37 [cluster="System.Text.StringBuilder.StringBuilder()", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
m21_3 [cluster="CommandLine.UnParserSettings.UnParserSettings()", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserSettings.UnParserSettings()", span="15-15"];
m21_165 [cluster="object.Equals(object)", file="UnParserExtensions.cs", label="Entry object.Equals(object)", span="0-0"];
m21_106 [cluster="System.Collections.IEnumerator.MoveNext()", file="UnParserExtensions.cs", label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0"];
m21_82 [cluster="System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", file="UnParserExtensions.cs", label="Entry System.Text.StringBuilder.TrimEndIfMatchWhen(bool, char)", span="94-94"];
m21_13 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m21_14 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="options == null", span="97-97"];
m21_17 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="configuration(settings)", span="100-100"];
m21_19 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var type = options.GetType()", span="103-103"];
m21_22 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var specs =\r\n                (from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info)\r\n                    .Memorize()", span="109-116"];
m21_15 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="throw new ArgumentNullException(''options'');", span="97-97"];
m21_16 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var settings = new UnParserSettings()", span="99-99"];
m21_18 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="settings.Consumed = true", span="101-101"];
m21_25 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var optSpecs = settings.GroupSwitches\r\n                ? allOptSpecs.Where(info => !shortSwitches.Contains(info))\r\n                : allOptSpecs", span="131-133"];
m21_27 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder = settings.GroupSwitches && shortSwitches.Any()\r\n                ? builder.Append('-').Append(string.Join(string.Empty, shortSwitches.Select(\r\n                    info => ((OptionSpecification)info.Specification).ShortName).ToArray())).Append(' ')\r\n                : builder", span="140-143"];
m21_29 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="optSpecs.ForEach(\r\n                opt =>\r\n                    builder\r\n                        .TrimEndIfMatchWhen(builder.TrailingSpaces() > 1, ' ')\r\n                        .Append(FormatOption((OptionSpecification)opt.Specification, opt.Value, settings))\r\n                        .Append(' ')\r\n                )", span="146-152"];
m21_20 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var builder = new StringBuilder()", span="104-104"];
m21_21 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="106-107"];
m21_23 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var allOptSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="118-122"];
m21_26 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="135-138"];
m21_24 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="var shortSwitches = from info in allOptSpecs\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType == TargetType.Switch\r\n                where o.ShortName.Length > 0\r\n                orderby o.UniqueName()\r\n                select info", span="124-129"];
m21_28 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!optSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="144-145"];
m21_30 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="builder\r\n                .TrimEndIfMatchWhen(!valSpecs.Any() || builder.TrailingSpaces() > 1, ' ')", span="153-154"];
m21_31 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="155-156"];
m21_32 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="return builder\r\n                .ToString().TrimEnd(' ');", span="158-159"];
m21_33 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
m21_48 [cluster="Unk.ToArray", file="UnParserExtensions.cs", label="Entry Unk.ToArray", span=""];
m21_132 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m21_133 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="return new StringBuilder()\r\n                    .Append(spec.FormatName(settings))\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="202-205"];
m21_134 [cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object, CommandLine.UnParserSettings)", span="200-200"];
m21_63 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="UnParserExtensions.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m21_34 [cluster="System.ArgumentNullException.ArgumentNullException(string)", file="UnParserExtensions.cs", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
m21_7 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m21_8 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="return parser.FormatCommandLine(options, config => {});", span="83-83"];
m21_9 [cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="81-81"];
m21_64 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="UnParserExtensions.cs", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
m21_143 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m21_144 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="224-226"];
m21_145 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return FSharpOptionHelper.ValueOf(value);", span="228-228"];
m21_146 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="return value;", span="230-230"];
m21_147 [cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="UnParserExtensions.cs", label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="222-222"];
m21_166 [file="UnParserExtensions.cs", label=builder, span=""];
m21_167 [file="UnParserExtensions.cs", label=T, span=""];
m21_168 [file="UnParserExtensions.cs", label=shortSwitches, span=""];
m21_169 [file="UnParserExtensions.cs", label=settings, span=""];
m21_170 [file="UnParserExtensions.cs", label=sep, span=""];
m21_171 [file="UnParserExtensions.cs", label=doubQt, span=""];
m23_0 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="18-18"];
m23_1 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.index = index", span="20-20"];
m23_2 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="this.metaName = string.Empty", span="21-21"];
m23_3 [cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs", label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="18-18"];
m23_4 [file="ValueAttribute.cs", label="CommandLine.ValueAttribute", span=""];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_3  [key=0, style=solid];
m0_3 -> m0_2  [color=blue, key=0, style=bold];
m0_8 -> m0_9  [key=0, style=solid];
m0_9 -> m0_8  [color=blue, key=0, style=bold];
m0_6 -> m0_7  [key=0, style=solid];
m0_7 -> m0_6  [color=blue, key=0, style=bold];
m0_4 -> m0_5  [key=0, style=solid];
m0_5 -> m0_4  [color=blue, key=0, style=bold];
m1_34 -> m1_36  [key=0, style=solid];
m1_34 -> m1_37  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_34 -> m1_38  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_34 -> m1_40  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_34 -> m1_41  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_34 -> m1_43  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_34 -> m1_44  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_38  [key=0, style=solid];
m1_37 -> m1_47  [key=0, style=solid];
m1_37 -> m1_48  [key=2, style=dotted];
m1_38 -> m1_39  [key=0, style=solid];
m1_38 -> m1_31  [key=2, style=dotted];
m1_38 -> m1_41  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m1_38 -> m1_44  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m1_38 -> m1_46  [color=darkseagreen4, key=1, label=yearsPart, style=dashed];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_46  [key=0, style=solid];
m1_40 -> m1_40  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_48  [key=2, style=dotted];
m1_41 -> m1_32  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_45  [key=0, style=solid];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_32  [key=2, style=dotted];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_39 -> m1_42  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_39 -> m1_44  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_39 -> m1_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_35  [key=2, style=dotted];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_44  [color=darkseagreen4, key=1, label=next, style=dashed];
m1_45 -> m1_40  [key=0, style=solid];
m1_45 -> m1_45  [color=darkseagreen4, key=1, label=i, style=dashed];
m1_47 -> m1_34  [color=blue, key=0, style=bold];
m1_18 -> m1_19  [key=0, style=solid];
m1_19 -> m1_18  [color=blue, key=0, style=bold];
m1_20 -> m1_21  [key=0, style=solid];
m1_21 -> m1_22  [key=0, style=solid];
m1_22 -> m1_20  [color=blue, key=0, style=bold];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_7  [color=darkseagreen4, key=1, label="params int[]", style=dashed];
m1_4 -> m1_10  [color=darkseagreen4, key=1, label=bool, style=dashed];
m1_4 -> m1_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_4 -> m1_12  [color=darkseagreen4, key=1, label="params int[]", style=dashed];
m1_4 -> m1_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_7  [key=0, style=solid];
m1_5 -> m1_15  [key=2, style=dotted];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_9  [key=0, style=solid];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_6 -> m1_14  [key=0, style=solid];
m1_6 -> m1_16  [key=2, style=dotted];
m1_8 -> m1_14  [key=0, style=solid];
m1_8 -> m1_17  [key=2, style=dotted];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_13  [color=darkseagreen4, key=1, label=ExtraLength, style=dashed];
m1_9 -> m1_9  [color=darkorchid, key=3, label="Local variable int ExtraLength", style=bold];
m1_14 -> m1_4  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [color=blue, key=0, style=bold];
m1_26 -> m1_27  [key=0, style=solid];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_29  [key=0, style=solid];
m1_28 -> m1_30  [key=0, style=solid];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=2, style=dotted];
m1_29 -> m1_32  [key=2, style=dotted];
m1_29 -> m1_33  [key=2, style=dotted];
m1_29 -> m1_34  [key=2, style=dotted];
m1_29 -> m1_35  [key=2, style=dotted];
m1_30 -> m1_26  [color=blue, key=0, style=bold];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_26  [color=darkorchid, key=3, label="method methodReturn string op_Implicit", style=bold];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_26  [key=2, style=dotted];
m1_25 -> m1_23  [color=blue, key=0, style=bold];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [color=blue, key=0, style=bold];
m1_49 -> m1_10  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m1_49 -> m1_11  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m1_49 -> m1_12  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m1_49 -> m1_13  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m1_49 -> m1_21  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m1_49 -> m1_27  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m1_49 -> m1_28  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m1_49 -> m1_29  [color=darkseagreen4, key=1, label="CommandLine.Text.CopyrightInfo", style=dashed];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<TSource>", style=dashed];
m2_0 -> m2_4  [color=darkseagreen4, key=1, label="System.Func<TSource, bool>", style=dashed];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_1 -> m2_1  [color=darkorchid, key=3, label="Local variable int index", style=bold];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_5  [key=0, style=solid];
m2_2 -> m2_4  [color=darkseagreen4, key=1, label=item, style=dashed];
m2_4 -> m2_2  [key=0, style=solid];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_7  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_3  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_3 -> m2_5  [color=darkseagreen4, key=1, label=index, style=dashed];
m2_5 -> m2_6  [key=0, style=solid];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_17 -> m2_18  [key=0, style=solid];
m2_18 -> m2_19  [key=0, style=solid];
m2_18 -> m2_20  [key=2, style=dotted];
m2_19 -> m2_17  [color=blue, key=0, style=bold];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<object>", style=dashed];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_13  [key=2, style=dotted];
m2_9 -> m2_14  [key=2, style=dotted];
m2_9 -> m2_11  [color=darkseagreen4, key=1, label=array, style=dashed];
m2_10 -> m2_11  [key=0, style=solid];
m2_10 -> m2_15  [key=2, style=dotted];
m2_10 -> m2_16  [key=2, style=dotted];
m2_11 -> m2_12  [key=0, style=solid];
m2_12 -> m2_8  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_7  [key=2, style=dotted];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m4_0 -> m4_5  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_0 -> m4_7  [color=darkseagreen4, key=1, label=string, style=dashed];
m4_0 -> m4_8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>", style=dashed];
m4_0 -> m4_9  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_1 -> m4_11  [key=2, style=dotted];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_2 -> m4_10  [key=0, style=solid];
m4_2 -> m4_12  [key=2, style=dotted];
m4_4 -> m4_10  [key=0, style=solid];
m4_4 -> m4_13  [key=2, style=dotted];
m4_6 -> m4_10  [key=0, style=solid];
m4_6 -> m4_13  [key=2, style=dotted];
m4_10 -> m4_0  [color=blue, key=0, style=bold];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_16  [color=blue, key=0, style=bold];
m4_24 -> m4_30  [key=0, style=solid];
m4_24 -> m4_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m4_24 -> m4_19  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.Example other", style=bold];
m4_24 -> m4_31  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m4_30 -> m4_31  [key=0, style=solid];
m4_30 -> m4_32  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_34  [key=2, style=dotted];
m4_32 -> m4_35  [key=2, style=dotted];
m4_32 -> m4_25  [key=2, style=dotted];
m4_31 -> m4_33  [key=0, style=solid];
m4_33 -> m4_24  [color=blue, key=0, style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_27 -> m4_28  [key=0, style=solid];
m4_27 -> m4_29  [key=2, style=dotted];
m4_28 -> m4_26  [color=blue, key=0, style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_15 -> m4_14  [color=blue, key=0, style=bold];
m4_40 -> m4_0  [color=darkorchid, key=3, label="Field variable object sample", style=bold];
m4_36 -> m4_37  [key=0, style=solid];
m4_37 -> m4_38  [key=0, style=solid];
m4_37 -> m4_39  [key=2, style=dotted];
m4_37 -> m4_40  [key=2, style=dotted];
m4_38 -> m4_36  [color=blue, key=0, style=bold];
m4_18 -> m4_19  [key=0, style=solid];
m4_18 -> m4_22  [color=darkseagreen4, key=1, label=object, style=dashed];
m4_18 -> m4_24  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m4_19 -> m4_20  [key=0, style=solid];
m4_19 -> m4_21  [color=darkseagreen4, key=1, label=other, style=dashed];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_25  [key=2, style=dotted];
m4_20 -> m4_21  [key=0, style=solid];
m4_20 -> m4_22  [key=0, style=solid];
m4_21 -> m4_23  [key=0, style=solid];
m4_21 -> m4_24  [key=2, style=dotted];
m4_23 -> m4_18  [color=blue, key=0, style=bold];
m4_41 -> m4_7  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m4_41 -> m4_8  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m4_41 -> m4_9  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m4_41 -> m4_21  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m4_41 -> m4_22  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m4_41 -> m4_27  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m4_41 -> m4_32  [color=darkseagreen4, key=1, label="CommandLine.Text.Example", style=dashed];
m8_39 -> m8_40  [key=0, style=solid];
m8_4 -> m8_5  [key=0, style=solid];
m8_5 -> m8_6  [key=0, style=solid];
m8_5 -> m8_7  [key=2, style=dotted];
m8_6 -> m8_4  [color=blue, key=0, style=bold];
m8_12 -> m8_13  [key=0, style=solid];
m8_13 -> m8_14  [key=0, style=solid];
m8_13 -> m8_7  [key=2, style=dotted];
m8_14 -> m8_12  [color=blue, key=0, style=bold];
m8_21 -> m8_22  [key=0, style=solid];
m8_21 -> m8_23  [key=2, style=dotted];
m8_21 -> m8_24  [key=2, style=dotted];
m8_21 -> m8_25  [key=2, style=dotted];
m8_21 -> m8_3  [key=2, style=dotted];
m8_21 -> m8_26  [key=2, style=dotted];
m8_21 -> m8_27  [key=2, style=dotted];
m8_21 -> m8_7  [key=2, style=dotted];
m8_21 -> m8_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_21 -> m8_32  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_21 -> m8_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_21 -> m8_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_20 -> m8_21  [key=0, style=solid];
m8_20 -> m8_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_20 -> m8_33  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_29 -> m8_30  [key=0, style=solid];
m8_29 -> m8_31  [key=2, style=dotted];
m8_33 -> m8_34  [key=0, style=solid];
m8_33 -> m8_31  [key=2, style=dotted];
m8_22 -> m8_20  [color=blue, key=0, style=bold];
m8_28 -> m8_29  [key=0, style=solid];
m8_32 -> m8_33  [key=0, style=solid];
m8_35 -> m8_36  [key=0, style=solid];
m8_30 -> m8_28  [color=blue, key=0, style=bold];
m8_34 -> m8_32  [color=blue, key=0, style=bold];
m8_36 -> m8_37  [key=0, style=solid];
m8_36 -> m8_38  [key=2, style=dotted];
m8_37 -> m8_35  [color=blue, key=0, style=bold];
m8_40 -> m8_41  [key=0, style=solid];
m8_41 -> m8_39  [color=blue, key=0, style=bold];
m8_0 -> m8_1  [key=0, style=solid];
m8_1 -> m8_2  [key=0, style=solid];
m8_1 -> m8_3  [key=2, style=dotted];
m8_1 -> m8_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_2 -> m8_0  [color=blue, key=0, style=bold];
m8_7 -> m8_1  [color=darkorchid, key=3, label="Parameter variable string[] values", style=bold];
m8_8 -> m8_9  [key=0, style=solid];
m8_9 -> m8_10  [key=0, style=solid];
m8_9 -> m8_11  [key=2, style=dotted];
m8_9 -> m8_12  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_10 -> m8_8  [color=blue, key=0, style=bold];
m8_42 -> m8_43  [key=0, style=solid];
m8_43 -> m8_44  [key=0, style=solid];
m8_43 -> m8_45  [key=2, style=dotted];
m8_44 -> m8_42  [color=blue, key=0, style=bold];
m8_15 -> m8_16  [key=0, style=solid];
m8_15 -> m8_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_16 -> m8_17  [key=0, style=solid];
m8_16 -> m8_18  [key=2, style=dotted];
m8_16 -> m8_19  [key=2, style=dotted];
m8_16 -> m8_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m8_16 -> m8_16  [color=darkseagreen4, key=1, label=t, style=dashed];
m8_17 -> m8_15  [color=blue, key=0, style=bold];
m8_46 -> m8_21  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
m8_47 -> m8_29  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m8_47 -> m8_33  [color=darkseagreen4, key=1, label="CommandLine.Core.Token", style=dashed];
m9_38 -> m9_39  [key=0, style=solid];
m9_39 -> m9_40  [key=0, style=solid];
m9_39 -> m9_42  [key=2, style=dotted];
m9_39 -> m9_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_40 -> m9_41  [key=0, style=solid];
m9_41 -> m9_38  [color=blue, key=0, style=bold];
m9_4 -> m9_5  [key=0, style=solid];
m9_5 -> m9_4  [color=blue, key=0, style=bold];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_2  [color=blue, key=0, style=bold];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_6  [color=blue, key=0, style=bold];
m9_43 -> m9_44  [key=0, style=solid];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_34  [key=2, style=dotted];
m9_31 -> m9_32  [key=0, style=solid];
m9_33 -> m9_31  [color=blue, key=0, style=bold];
m9_44 -> m9_45  [key=0, style=solid];
m9_44 -> m9_46  [key=2, style=dotted];
m9_45 -> m9_43  [color=blue, key=0, style=bold];
m9_35 -> m9_36  [key=0, style=solid];
m9_36 -> m9_37  [key=0, style=solid];
m9_36 -> m9_26  [key=2, style=dotted];
m9_37 -> m9_35  [color=blue, key=0, style=bold];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_11  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_13  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_15  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_17  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_19  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_21  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_22  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_8 -> m9_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m9_9 -> m9_10  [key=0, style=solid];
m9_9 -> m9_11  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_13  [key=0, style=solid];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_15 -> m9_16  [key=0, style=solid];
m9_15 -> m9_17  [key=0, style=solid];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_19  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_20 -> m9_21  [key=0, style=solid];
m9_21 -> m9_22  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_10 -> m9_24  [key=0, style=solid];
m9_10 -> m9_25  [key=2, style=dotted];
m9_12 -> m9_24  [key=0, style=solid];
m9_12 -> m9_25  [key=2, style=dotted];
m9_14 -> m9_24  [key=0, style=solid];
m9_14 -> m9_25  [key=2, style=dotted];
m9_16 -> m9_24  [key=0, style=solid];
m9_16 -> m9_25  [key=2, style=dotted];
m9_18 -> m9_24  [key=0, style=solid];
m9_18 -> m9_25  [key=2, style=dotted];
m9_24 -> m9_8  [color=blue, key=0, style=bold];
m9_26 -> m9_27  [key=0, style=solid];
m9_26 -> m9_28  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
m9_26 -> m9_32  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Text.HelpText>", style=dashed];
m9_26 -> m9_35  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText helpText", style=bold];
m9_27 -> m9_28  [key=0, style=solid];
m9_28 -> m9_29  [key=0, style=solid];
m9_28 -> m9_30  [key=2, style=dotted];
m9_28 -> m9_31  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m9_29 -> m9_26  [color=blue, key=0, style=bold];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [color=blue, key=0, style=bold];
m9_47 -> m9_19  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m9_47 -> m9_20  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m9_47 -> m9_21  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m9_47 -> m9_22  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m9_47 -> m9_23  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m9_47 -> m9_27  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m9_47 -> m9_36  [color=darkseagreen4, key=1, label="CommandLine.Text.MultilineTextAttribute", style=dashed];
m9_48 -> m9_32  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Text.HelpText>", style=dashed];
m10_17 -> m10_18  [key=0, style=solid];
m10_18 -> m10_19  [key=0, style=solid];
m10_18 -> m10_20  [key=2, style=dotted];
m10_19 -> m10_17  [color=blue, key=0, style=bold];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_3  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_0 -> m10_6  [color=darkseagreen4, key=1, label=string, style=dashed];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_3  [key=0, style=solid];
m10_3 -> m10_4  [key=0, style=solid];
m10_3 -> m10_5  [key=0, style=solid];
m10_5 -> m10_6  [key=0, style=solid];
m10_6 -> m10_7  [key=0, style=solid];
m10_2 -> m10_7  [key=0, style=solid];
m10_2 -> m10_8  [key=2, style=dotted];
m10_4 -> m10_7  [key=0, style=solid];
m10_4 -> m10_8  [key=2, style=dotted];
m10_7 -> m10_0  [color=blue, key=0, style=bold];
m10_15 -> m10_21  [key=0, style=solid];
m10_15 -> m10_23  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m10_15 -> m10_10  [color=darkorchid, key=3, label="Parameter variable CommandLine.NameInfo other", style=bold];
m10_15 -> m10_22  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m10_21 -> m10_22  [key=0, style=solid];
m10_21 -> m10_23  [key=0, style=solid];
m10_23 -> m10_24  [key=0, style=solid];
m10_23 -> m10_25  [key=2, style=dotted];
m10_22 -> m10_24  [key=0, style=solid];
m10_24 -> m10_15  [color=blue, key=0, style=bold];
m10_9 -> m10_10  [key=0, style=solid];
m10_9 -> m10_13  [color=darkseagreen4, key=1, label=object, style=dashed];
m10_9 -> m10_15  [color=darkorchid, key=3, label="method methodReturn bool Equals", style=bold];
m10_10 -> m10_11  [key=0, style=solid];
m10_10 -> m10_12  [color=darkseagreen4, key=1, label=other, style=dashed];
m10_13 -> m10_14  [key=0, style=solid];
m10_13 -> m10_16  [key=2, style=dotted];
m10_11 -> m10_12  [key=0, style=solid];
m10_11 -> m10_13  [key=0, style=solid];
m10_12 -> m10_14  [key=0, style=solid];
m10_12 -> m10_15  [key=2, style=dotted];
m10_14 -> m10_9  [color=blue, key=0, style=bold];
m10_26 -> m10_5  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m10_26 -> m10_6  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m10_26 -> m10_12  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m10_26 -> m10_13  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m10_26 -> m10_18  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m10_26 -> m10_23  [color=darkseagreen4, key=1, label="CommandLine.NameInfo", style=dashed];
m11_0 -> m11_1  [key=0, style=solid];
m11_0 -> m11_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_1 -> m11_2  [key=0, style=solid];
m11_1 -> m11_3  [key=2, style=dotted];
m11_1 -> m11_4  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_2 -> m11_0  [color=blue, key=0, style=bold];
m11_18 -> m11_19  [key=0, style=solid];
m11_5 -> m11_6  [key=0, style=solid];
m11_5 -> m11_7  [key=2, style=dotted];
m11_4 -> m11_5  [key=0, style=solid];
m11_6 -> m11_4  [color=blue, key=0, style=bold];
m11_16 -> m11_17  [key=0, style=solid];
m11_16 -> m11_7  [key=2, style=dotted];
m11_15 -> m11_16  [key=0, style=solid];
m11_17 -> m11_15  [color=blue, key=0, style=bold];
m11_19 -> m11_20  [key=0, style=solid];
m11_19 -> m11_21  [key=2, style=dotted];
m11_20 -> m11_18  [color=blue, key=0, style=bold];
m11_8 -> m11_9  [key=0, style=solid];
m11_8 -> m11_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_9 -> m11_10  [key=0, style=solid];
m11_9 -> m11_11  [key=2, style=dotted];
m11_9 -> m11_12  [key=2, style=dotted];
m11_9 -> m11_13  [key=2, style=dotted];
m11_9 -> m11_14  [key=2, style=dotted];
m11_9 -> m11_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_9 -> m11_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m11_10 -> m11_8  [color=blue, key=0, style=bold];
m11_22 -> m11_5  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_23 -> m11_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m11_24 -> m11_16  [color=darkseagreen4, key=1, label=string, style=dashed];
m11_25 -> m11_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_12  [color=darkseagreen4, key=1, label="System.Action<CommandLine.ParserSettings>", style=dashed];
m12_9 -> m12_10  [key=0, style=solid];
m12_9 -> m12_11  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_16  [key=2, style=dotted];
m12_10 -> m12_14  [key=0, style=solid];
m12_10 -> m12_15  [key=2, style=dotted];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_4  [key=2, style=dotted];
m12_13 -> m12_14  [key=0, style=solid];
m12_14 -> m12_8  [color=blue, key=0, style=bold];
m12_20 -> m12_21  [key=0, style=solid];
m12_21 -> m12_22  [key=0, style=solid];
m12_21 -> m12_23  [key=2, style=dotted];
m12_22 -> m12_20  [color=blue, key=0, style=bold];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_61  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m12_58 -> m12_63  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m12_58 -> m12_65  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_58 -> m12_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_58 -> m12_33  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<object> ParseArguments", style=bold];
m12_59 -> m12_60  [key=0, style=solid];
m12_59 -> m12_61  [key=0, style=solid];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_63  [key=0, style=solid];
m12_63 -> m12_64  [key=0, style=solid];
m12_63 -> m12_65  [key=0, style=solid];
m12_65 -> m12_66  [key=0, style=solid];
m12_65 -> m12_33  [key=2, style=dotted];
m12_65 -> m12_68  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_60 -> m12_66  [key=0, style=solid];
m12_60 -> m12_15  [key=2, style=dotted];
m12_62 -> m12_66  [key=0, style=solid];
m12_62 -> m12_15  [key=2, style=dotted];
m12_64 -> m12_66  [key=0, style=solid];
m12_64 -> m12_67  [key=2, style=dotted];
m12_66 -> m12_58  [color=blue, key=0, style=bold];
m12_3 -> m12_17  [key=0, style=solid];
m12_17 -> m12_18  [key=0, style=solid];
m12_18 -> m12_19  [key=0, style=solid];
m12_19 -> m12_3  [color=blue, key=0, style=bold];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_47  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_42 -> m12_49  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m12_42 -> m12_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m12_42 -> m12_33  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> ParseArguments", style=bold];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_45  [key=0, style=solid];
m12_47 -> m12_48  [key=0, style=solid];
m12_47 -> m12_49  [key=0, style=solid];
m12_49 -> m12_50  [key=0, style=solid];
m12_49 -> m12_33  [key=2, style=dotted];
m12_49 -> m12_52  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_44 -> m12_50  [key=0, style=solid];
m12_44 -> m12_15  [key=2, style=dotted];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_47  [key=0, style=solid];
m12_45 -> m12_30  [key=2, style=dotted];
m12_46 -> m12_50  [key=0, style=solid];
m12_46 -> m12_51  [key=2, style=dotted];
m12_48 -> m12_50  [key=0, style=solid];
m12_48 -> m12_15  [key=2, style=dotted];
m12_50 -> m12_42  [color=blue, key=0, style=bold];
m12_5 -> m12_6  [key=0, style=solid];
m12_6 -> m12_7  [key=0, style=solid];
m12_6 -> m12_4  [key=2, style=dotted];
m12_7 -> m12_5  [color=blue, key=0, style=bold];
m12_105 -> m12_116  [key=0, style=solid];
m12_105 -> m12_117  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m12_105 -> m12_118  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m12_105 -> m12_125  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m12_105 -> m12_119  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m12_105 -> m12_104  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
m12_105 -> m12_105  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> DisplayHelp", style=bold];
m12_116 -> m12_117  [key=0, style=solid];
m12_116 -> m12_119  [key=0, style=solid];
m12_117 -> m12_118  [key=0, style=solid];
m12_117 -> m12_119  [key=0, style=solid];
m12_117 -> m12_121  [key=2, style=dotted];
m12_118 -> m12_119  [key=0, style=solid];
m12_118 -> m12_122  [key=2, style=dotted];
m12_118 -> m12_123  [key=2, style=dotted];
m12_118 -> m12_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_119 -> m12_120  [key=0, style=solid];
m12_120 -> m12_105  [color=blue, key=0, style=bold];
m12_124 -> m12_125  [key=0, style=solid];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_2 -> m12_0  [color=blue, key=0, style=bold];
m12_35 -> m12_36  [key=0, style=solid];
m12_35 -> m12_37  [key=2, style=dotted];
m12_35 -> m12_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_34 -> m12_35  [key=0, style=solid];
m12_36 -> m12_34  [color=blue, key=0, style=bold];
m12_38 -> m12_39  [key=0, style=solid];
m12_39 -> m12_40  [key=0, style=solid];
m12_39 -> m12_41  [key=2, style=dotted];
m12_40 -> m12_38  [color=blue, key=0, style=bold];
m12_53 -> m12_54  [key=0, style=solid];
m12_53 -> m12_31  [key=2, style=dotted];
m12_53 -> m12_37  [key=2, style=dotted];
m12_53 -> m12_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_52 -> m12_53  [key=0, style=solid];
m12_54 -> m12_52  [color=blue, key=0, style=bold];
m12_55 -> m12_56  [key=0, style=solid];
m12_56 -> m12_57  [key=0, style=solid];
m12_56 -> m12_41  [key=2, style=dotted];
m12_57 -> m12_55  [color=blue, key=0, style=bold];
m12_69 -> m12_70  [key=0, style=solid];
m12_69 -> m12_71  [key=2, style=dotted];
m12_69 -> m12_72  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_68 -> m12_69  [key=0, style=solid];
m12_70 -> m12_68  [color=blue, key=0, style=bold];
m12_72 -> m12_73  [key=0, style=solid];
m12_73 -> m12_74  [key=0, style=solid];
m12_73 -> m12_41  [key=2, style=dotted];
m12_74 -> m12_72  [color=blue, key=0, style=bold];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_85  [key=2, style=dotted];
m12_88 -> m12_90  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_93  [key=2, style=dotted];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_93  [key=2, style=dotted];
m12_98 -> m12_99  [key=0, style=solid];
m12_98 -> m12_100  [key=2, style=dotted];
m12_87 -> m12_88  [key=0, style=solid];
m12_94 -> m12_95  [key=0, style=solid];
m12_97 -> m12_98  [key=0, style=solid];
m12_89 -> m12_87  [color=blue, key=0, style=bold];
m12_90 -> m12_91  [key=0, style=solid];
m12_92 -> m12_90  [color=blue, key=0, style=bold];
m12_96 -> m12_94  [color=blue, key=0, style=bold];
m12_99 -> m12_97  [color=blue, key=0, style=bold];
m12_109 -> m12_110  [key=0, style=solid];
m12_110 -> m12_111  [key=0, style=solid];
m12_110 -> m12_112  [key=2, style=dotted];
m12_110 -> m12_113  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_111 -> m12_109  [color=blue, key=0, style=bold];
m12_113 -> m12_114  [key=0, style=solid];
m12_114 -> m12_115  [key=0, style=solid];
m12_115 -> m12_113  [color=blue, key=0, style=bold];
m12_125 -> m12_126  [key=0, style=solid];
m12_125 -> m12_127  [key=2, style=dotted];
m12_125 -> m12_128  [key=2, style=dotted];
m12_126 -> m12_124  [color=blue, key=0, style=bold];
m12_104 -> m12_106  [key=0, style=solid];
m12_106 -> m12_107  [key=0, style=solid];
m12_106 -> m12_108  [key=2, style=dotted];
m12_106 -> m12_109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_107 -> m12_104  [color=blue, key=0, style=bold];
m12_33 -> m12_101  [key=0, style=solid];
m12_33 -> m12_28  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m12_33 -> m12_49  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m12_33 -> m12_65  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc", style=bold];
m12_33 -> m12_105  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> MakeParserResult", style=bold];
m12_101 -> m12_102  [key=0, style=solid];
m12_101 -> m12_103  [key=2, style=dotted];
m12_101 -> m12_104  [key=2, style=dotted];
m12_101 -> m12_105  [key=2, style=dotted];
m12_102 -> m12_33  [color=blue, key=0, style=bold];
m12_75 -> m12_76  [key=0, style=solid];
m12_76 -> m12_77  [key=0, style=solid];
m12_76 -> m12_23  [key=2, style=dotted];
m12_77 -> m12_78  [key=0, style=solid];
m12_77 -> m12_79  [key=2, style=dotted];
m12_78 -> m12_75  [color=blue, key=0, style=bold];
m12_24 -> m12_25  [key=0, style=solid];
m12_24 -> m12_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_24 -> m12_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_24 -> m12_33  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> ParseArguments", style=bold];
m12_25 -> m12_26  [key=0, style=solid];
m12_25 -> m12_27  [key=0, style=solid];
m12_28 -> m12_29  [key=0, style=solid];
m12_28 -> m12_33  [key=2, style=dotted];
m12_28 -> m12_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_26 -> m12_29  [key=0, style=solid];
m12_26 -> m12_15  [key=2, style=dotted];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_30  [key=2, style=dotted];
m12_27 -> m12_31  [key=2, style=dotted];
m12_27 -> m12_32  [key=2, style=dotted];
m12_27 -> m12_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m12_29 -> m12_24  [color=blue, key=0, style=bold];
m12_41 -> m12_80  [key=0, style=solid];
m12_41 -> m12_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_41 -> m12_91  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_41 -> m12_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_41 -> m12_81  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_41 -> m12_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_80 -> m12_81  [key=0, style=solid];
m12_80 -> m12_84  [key=2, style=dotted];
m12_80 -> m12_85  [key=2, style=dotted];
m12_80 -> m12_87  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_80 -> m12_94  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_86  [key=2, style=dotted];
m12_81 -> m12_97  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m12_82 -> m12_83  [key=0, style=solid];
m12_83 -> m12_41  [color=blue, key=0, style=bold];
m12_23 -> m12_129  [key=0, style=solid];
m12_23 -> m12_131  [color=darkseagreen4, key=1, label=bool, style=dashed];
m12_23 -> m12_21  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m12_23 -> m12_76  [color=darkorchid, key=3, label="Parameter variable bool disposing", style=bold];
m12_129 -> m12_130  [key=0, style=solid];
m12_129 -> m12_131  [key=0, style=solid];
m12_131 -> m12_132  [key=0, style=solid];
m12_131 -> m12_135  [key=0, style=solid];
m12_130 -> m12_135  [key=0, style=solid];
m12_132 -> m12_133  [key=0, style=solid];
m12_132 -> m12_134  [key=0, style=solid];
m12_133 -> m12_134  [key=0, style=solid];
m12_133 -> m12_136  [key=2, style=dotted];
m12_134 -> m12_135  [key=0, style=solid];
m12_135 -> m12_23  [color=blue, key=0, style=bold];
m12_137 -> m12_6  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_11  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_12  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_13  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_17  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_18  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_21  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_28  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_35  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_39  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_49  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_53  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_56  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_65  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_69  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_73  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_76  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_77  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_129  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_132  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_133  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_137 -> m12_134  [color=darkseagreen4, key=1, label="CommandLine.Parser", style=dashed];
m12_138 -> m12_35  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_139 -> m12_35  [color=darkseagreen4, key=1, label=factory, style=dashed];
m12_140 -> m12_53  [color=darkseagreen4, key=1, label="System.Func<T>", style=dashed];
m12_141 -> m12_53  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_142 -> m12_69  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m12_143 -> m12_69  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
m12_144 -> m12_88  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_144 -> m12_91  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_144 -> m12_95  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_144 -> m12_98  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m12_145 -> m12_88  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m12_145 -> m12_91  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m12_145 -> m12_95  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m12_145 -> m12_98  [color=darkseagreen4, key=1, label="CommandLine.ParserSettings", style=dashed];
m12_146 -> m12_125  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
m13_11 -> m13_12  [key=0, style=solid];
m13_12 -> m13_13  [key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_16  [key=2, style=dotted];
m13_13 -> m13_17  [key=2, style=dotted];
m13_13 -> m13_18  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_13 -> m13_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_13 -> m13_24  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_14 -> m13_15  [key=0, style=solid];
m13_14 -> m13_7  [key=2, style=dotted];
m13_15 -> m13_11  [color=blue, key=0, style=bold];
m13_65 -> m13_66  [key=0, style=solid];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_29  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_5  [key=2, style=dotted];
m13_67 -> m13_6  [key=2, style=dotted];
m13_67 -> m13_33  [key=2, style=dotted];
m13_67 -> m13_70  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_67 -> m13_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_68 -> m13_69  [key=0, style=solid];
m13_68 -> m13_7  [key=2, style=dotted];
m13_69 -> m13_65  [color=blue, key=0, style=bold];
m13_104 -> m13_105  [key=0, style=solid];
m13_105 -> m13_106  [key=0, style=solid];
m13_105 -> m13_5  [key=2, style=dotted];
m13_105 -> m13_80  [key=2, style=dotted];
m13_105 -> m13_108  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_105 -> m13_111  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_7  [key=2, style=dotted];
m13_107 -> m13_104  [color=blue, key=0, style=bold];
m13_54 -> m13_55  [key=0, style=solid];
m13_55 -> m13_56  [key=0, style=solid];
m13_56 -> m13_57  [key=0, style=solid];
m13_56 -> m13_5  [key=2, style=dotted];
m13_56 -> m13_6  [key=2, style=dotted];
m13_56 -> m13_33  [key=2, style=dotted];
m13_56 -> m13_59  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_56 -> m13_62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_57 -> m13_58  [key=0, style=solid];
m13_57 -> m13_7  [key=2, style=dotted];
m13_58 -> m13_54  [color=blue, key=0, style=bold];
m13_28 -> m13_29  [key=0, style=solid];
m13_29 -> m13_30  [key=0, style=solid];
m13_29 -> m13_29  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_30 -> m13_31  [key=0, style=solid];
m13_30 -> m13_5  [key=2, style=dotted];
m13_30 -> m13_33  [key=2, style=dotted];
m13_30 -> m13_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_31 -> m13_32  [key=0, style=solid];
m13_31 -> m13_7  [key=2, style=dotted];
m13_32 -> m13_28  [color=blue, key=0, style=bold];
m13_179 -> m13_180  [key=0, style=solid];
m13_8 -> m13_9  [key=0, style=solid];
m13_9 -> m13_10  [key=0, style=solid];
m13_10 -> m13_8  [color=blue, key=0, style=bold];
m13_18 -> m13_19  [key=0, style=solid];
m13_21 -> m13_22  [key=0, style=solid];
m13_24 -> m13_25  [key=0, style=solid];
m13_19 -> m13_20  [key=0, style=solid];
m13_20 -> m13_18  [color=blue, key=0, style=bold];
m13_22 -> m13_23  [key=0, style=solid];
m13_23 -> m13_21  [color=blue, key=0, style=bold];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_27  [key=2, style=dotted];
m13_26 -> m13_24  [color=blue, key=0, style=bold];
m13_34 -> m13_35  [key=0, style=solid];
m13_35 -> m13_36  [key=0, style=solid];
m13_36 -> m13_34  [color=blue, key=0, style=bold];
m13_42 -> m13_43  [key=0, style=solid];
m13_45 -> m13_46  [key=0, style=solid];
m13_48 -> m13_49  [key=0, style=solid];
m13_51 -> m13_52  [key=0, style=solid];
m13_43 -> m13_44  [key=0, style=solid];
m13_44 -> m13_42  [color=blue, key=0, style=bold];
m13_46 -> m13_47  [key=0, style=solid];
m13_47 -> m13_45  [color=blue, key=0, style=bold];
m13_49 -> m13_50  [key=0, style=solid];
m13_50 -> m13_48  [color=blue, key=0, style=bold];
m13_52 -> m13_53  [key=0, style=solid];
m13_53 -> m13_51  [color=blue, key=0, style=bold];
m13_59 -> m13_60  [key=0, style=solid];
m13_62 -> m13_63  [key=0, style=solid];
m13_60 -> m13_61  [key=0, style=solid];
m13_61 -> m13_59  [color=blue, key=0, style=bold];
m13_63 -> m13_64  [key=0, style=solid];
m13_64 -> m13_62  [color=blue, key=0, style=bold];
m13_70 -> m13_71  [key=0, style=solid];
m13_73 -> m13_74  [key=0, style=solid];
m13_71 -> m13_72  [key=0, style=solid];
m13_72 -> m13_70  [color=blue, key=0, style=bold];
m13_74 -> m13_75  [key=0, style=solid];
m13_75 -> m13_73  [color=blue, key=0, style=bold];
m13_81 -> m13_82  [key=0, style=solid];
m13_84 -> m13_85  [key=0, style=solid];
m13_82 -> m13_83  [key=0, style=solid];
m13_83 -> m13_81  [color=blue, key=0, style=bold];
m13_85 -> m13_86  [key=0, style=solid];
m13_86 -> m13_84  [color=blue, key=0, style=bold];
m13_92 -> m13_93  [key=0, style=solid];
m13_95 -> m13_96  [key=0, style=solid];
m13_98 -> m13_99  [key=0, style=solid];
m13_101 -> m13_102  [key=0, style=solid];
m13_93 -> m13_94  [key=0, style=solid];
m13_94 -> m13_92  [color=blue, key=0, style=bold];
m13_96 -> m13_97  [key=0, style=solid];
m13_97 -> m13_95  [color=blue, key=0, style=bold];
m13_99 -> m13_100  [key=0, style=solid];
m13_100 -> m13_98  [color=blue, key=0, style=bold];
m13_102 -> m13_103  [key=0, style=solid];
m13_103 -> m13_101  [color=blue, key=0, style=bold];
m13_108 -> m13_109  [key=0, style=solid];
m13_111 -> m13_112  [key=0, style=solid];
m13_109 -> m13_110  [key=0, style=solid];
m13_110 -> m13_108  [color=blue, key=0, style=bold];
m13_112 -> m13_113  [key=0, style=solid];
m13_113 -> m13_111  [color=blue, key=0, style=bold];
m13_118 -> m13_119  [key=0, style=solid];
m13_121 -> m13_122  [key=0, style=solid];
m13_124 -> m13_125  [key=0, style=solid];
m13_127 -> m13_128  [key=0, style=solid];
m13_119 -> m13_120  [key=0, style=solid];
m13_120 -> m13_118  [color=blue, key=0, style=bold];
m13_122 -> m13_123  [key=0, style=solid];
m13_123 -> m13_121  [color=blue, key=0, style=bold];
m13_125 -> m13_126  [key=0, style=solid];
m13_126 -> m13_124  [color=blue, key=0, style=bold];
m13_128 -> m13_129  [key=0, style=solid];
m13_129 -> m13_127  [color=blue, key=0, style=bold];
m13_136 -> m13_137  [key=0, style=solid];
m13_139 -> m13_140  [key=0, style=solid];
m13_142 -> m13_143  [key=0, style=solid];
m13_145 -> m13_146  [key=0, style=solid];
m13_137 -> m13_138  [key=0, style=solid];
m13_138 -> m13_136  [color=blue, key=0, style=bold];
m13_140 -> m13_141  [key=0, style=solid];
m13_141 -> m13_139  [color=blue, key=0, style=bold];
m13_143 -> m13_144  [key=0, style=solid];
m13_144 -> m13_142  [color=blue, key=0, style=bold];
m13_146 -> m13_147  [key=0, style=solid];
m13_147 -> m13_145  [color=blue, key=0, style=bold];
m13_153 -> m13_154  [key=0, style=solid];
m13_156 -> m13_157  [key=0, style=solid];
m13_154 -> m13_155  [key=0, style=solid];
m13_155 -> m13_153  [color=blue, key=0, style=bold];
m13_157 -> m13_158  [key=0, style=solid];
m13_158 -> m13_156  [color=blue, key=0, style=bold];
m13_164 -> m13_165  [key=0, style=solid];
m13_167 -> m13_168  [key=0, style=solid];
m13_170 -> m13_171  [key=0, style=solid];
m13_173 -> m13_174  [key=0, style=solid];
m13_176 -> m13_177  [key=0, style=solid];
m13_165 -> m13_166  [key=0, style=solid];
m13_166 -> m13_164  [color=blue, key=0, style=bold];
m13_168 -> m13_169  [key=0, style=solid];
m13_169 -> m13_167  [color=blue, key=0, style=bold];
m13_171 -> m13_172  [key=0, style=solid];
m13_172 -> m13_170  [color=blue, key=0, style=bold];
m13_174 -> m13_175  [key=0, style=solid];
m13_175 -> m13_173  [color=blue, key=0, style=bold];
m13_177 -> m13_178  [key=0, style=solid];
m13_178 -> m13_176  [color=blue, key=0, style=bold];
m13_180 -> m13_181  [key=0, style=solid];
m13_181 -> m13_179  [color=blue, key=0, style=bold];
m13_148 -> m13_149  [key=0, style=solid];
m13_149 -> m13_150  [key=0, style=solid];
m13_149 -> m13_135  [key=2, style=dotted];
m13_149 -> m13_152  [key=2, style=dotted];
m13_149 -> m13_153  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_149 -> m13_156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_150 -> m13_151  [key=0, style=solid];
m13_150 -> m13_7  [key=2, style=dotted];
m13_151 -> m13_148  [color=blue, key=0, style=bold];
m13_130 -> m13_131  [key=0, style=solid];
m13_131 -> m13_132  [key=0, style=solid];
m13_132 -> m13_133  [key=0, style=solid];
m13_132 -> m13_135  [key=2, style=dotted];
m13_132 -> m13_17  [key=2, style=dotted];
m13_132 -> m13_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_132 -> m13_139  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_132 -> m13_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_132 -> m13_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_133 -> m13_134  [key=0, style=solid];
m13_133 -> m13_7  [key=2, style=dotted];
m13_134 -> m13_130  [color=blue, key=0, style=bold];
m13_76 -> m13_77  [key=0, style=solid];
m13_77 -> m13_78  [key=0, style=solid];
m13_77 -> m13_5  [key=2, style=dotted];
m13_77 -> m13_80  [key=2, style=dotted];
m13_77 -> m13_81  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_77 -> m13_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_78 -> m13_79  [key=0, style=solid];
m13_78 -> m13_7  [key=2, style=dotted];
m13_79 -> m13_76  [color=blue, key=0, style=bold];
m13_114 -> m13_115  [key=0, style=solid];
m13_115 -> m13_116  [key=0, style=solid];
m13_115 -> m13_16  [key=2, style=dotted];
m13_115 -> m13_91  [key=2, style=dotted];
m13_115 -> m13_118  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_115 -> m13_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_115 -> m13_124  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_115 -> m13_127  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_116 -> m13_117  [key=0, style=solid];
m13_116 -> m13_7  [key=2, style=dotted];
m13_117 -> m13_114  [color=blue, key=0, style=bold];
m13_37 -> m13_38  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid];
m13_38 -> m13_29  [color=darkorchid, key=3, label="Local variable string expected", style=bold];
m13_39 -> m13_40  [key=0, style=solid];
m13_39 -> m13_16  [key=2, style=dotted];
m13_39 -> m13_17  [key=2, style=dotted];
m13_39 -> m13_33  [key=2, style=dotted];
m13_39 -> m13_42  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_39 -> m13_45  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_39 -> m13_48  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_39 -> m13_51  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_7  [key=2, style=dotted];
m13_41 -> m13_37  [color=blue, key=0, style=bold];
m13_159 -> m13_160  [key=0, style=solid];
m13_160 -> m13_161  [key=0, style=solid];
m13_160 -> m13_135  [key=2, style=dotted];
m13_160 -> m13_163  [key=2, style=dotted];
m13_160 -> m13_164  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_160 -> m13_167  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_160 -> m13_170  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_160 -> m13_173  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_160 -> m13_176  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_160 -> m13_179  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_161 -> m13_162  [key=0, style=solid];
m13_161 -> m13_7  [key=2, style=dotted];
m13_162 -> m13_159  [color=blue, key=0, style=bold];
m13_0 -> m13_1  [key=0, style=solid];
m13_1 -> m13_2  [key=0, style=solid];
m13_2 -> m13_3  [key=0, style=solid];
m13_2 -> m13_5  [key=2, style=dotted];
m13_2 -> m13_6  [key=2, style=dotted];
m13_2 -> m13_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_3 -> m13_4  [key=0, style=solid];
m13_3 -> m13_7  [key=2, style=dotted];
m13_4 -> m13_0  [color=blue, key=0, style=bold];
m13_87 -> m13_88  [key=0, style=solid];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_16  [key=2, style=dotted];
m13_88 -> m13_91  [key=2, style=dotted];
m13_88 -> m13_92  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_88 -> m13_95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_88 -> m13_98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_88 -> m13_101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m13_89 -> m13_90  [key=0, style=solid];
m13_89 -> m13_7  [key=2, style=dotted];
m13_90 -> m13_87  [color=blue, key=0, style=bold];
m14_20 -> m14_21  [key=0, style=solid];
m14_21 -> m14_22  [key=0, style=solid];
m14_21 -> m14_23  [key=2, style=dotted];
m14_22 -> m14_20  [color=blue, key=0, style=bold];
m14_1 -> m14_2  [key=0, style=solid];
m14_1 -> m14_5  [key=2, style=dotted];
m14_1 -> m14_6  [key=2, style=dotted];
m14_0 -> m14_1  [key=0, style=solid];
m14_2 -> m14_3  [key=0, style=solid];
m14_2 -> m14_7  [key=2, style=dotted];
m14_3 -> m14_4  [key=0, style=solid];
m14_3 -> m14_8  [key=2, style=dotted];
m14_3 -> m14_9  [key=2, style=dotted];
m14_4 -> m14_0  [color=blue, key=0, style=bold];
m14_16 -> m14_17  [key=0, style=solid];
m14_16 -> m14_5  [key=2, style=dotted];
m14_16 -> m14_6  [key=2, style=dotted];
m14_15 -> m14_16  [key=0, style=solid];
m14_17 -> m14_18  [key=0, style=solid];
m14_17 -> m14_14  [key=2, style=dotted];
m14_17 -> m14_19  [key=2, style=dotted];
m14_18 -> m14_15  [color=blue, key=0, style=bold];
m14_35 -> m14_36  [key=0, style=solid];
m14_36 -> m14_37  [key=0, style=solid];
m14_36 -> m14_30  [key=2, style=dotted];
m14_36 -> m14_38  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m14_37 -> m14_38  [key=0, style=solid];
m14_37 -> m14_31  [key=2, style=dotted];
m14_37 -> m14_32  [key=2, style=dotted];
m14_37 -> m14_33  [key=2, style=dotted];
m14_37 -> m14_37  [color=darkseagreen4, key=1, label=prms, style=dashed];
m14_38 -> m14_39  [key=0, style=solid];
m14_38 -> m14_34  [key=2, style=dotted];
m14_39 -> m14_35  [color=blue, key=0, style=bold];
m14_11 -> m14_12  [key=0, style=solid];
m14_11 -> m14_5  [key=2, style=dotted];
m14_11 -> m14_6  [key=2, style=dotted];
m14_10 -> m14_11  [key=0, style=solid];
m14_12 -> m14_13  [key=0, style=solid];
m14_12 -> m14_14  [key=2, style=dotted];
m14_13 -> m14_10  [color=blue, key=0, style=bold];
m14_24 -> m14_25  [key=0, style=solid];
m14_24 -> m14_26  [color=darkseagreen4, key=1, label="System.Type[]", style=dashed];
m14_25 -> m14_26  [key=0, style=solid];
m14_26 -> m14_27  [key=0, style=solid];
m14_26 -> m14_30  [key=2, style=dotted];
m14_26 -> m14_28  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m14_27 -> m14_28  [key=0, style=solid];
m14_27 -> m14_31  [key=2, style=dotted];
m14_27 -> m14_32  [key=2, style=dotted];
m14_27 -> m14_33  [key=2, style=dotted];
m14_27 -> m14_27  [color=darkseagreen4, key=1, label=prms, style=dashed];
m14_28 -> m14_29  [key=0, style=solid];
m14_28 -> m14_34  [key=2, style=dotted];
m14_29 -> m14_24  [color=blue, key=0, style=bold];
m15_31 -> m15_0  [color=darkorchid, key=3, label="Field variable CSharpx.Maybe<int> min", style=bold];
m15_0 -> m15_1  [key=0, style=solid];
m15_0 -> m15_2  [color=darkseagreen4, key=1, label=bool, style=dashed];
m15_0 -> m15_3  [color=darkseagreen4, key=1, label="CSharpx.Maybe<int>", style=dashed];
m15_0 -> m15_4  [color=darkseagreen4, key=1, label="CSharpx.Maybe<int>", style=dashed];
m15_0 -> m15_5  [color=darkseagreen4, key=1, label="CSharpx.Maybe<object>", style=dashed];
m15_0 -> m15_6  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m15_0 -> m15_7  [color=darkseagreen4, key=1, label="CommandLine.Core.TargetType", style=dashed];
m15_0 -> m15_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_9  [color=darkseagreen4, key=1, label=string, style=dashed];
m15_0 -> m15_10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m15_1 -> m15_2  [key=0, style=solid];
m15_2 -> m15_3  [key=0, style=solid];
m15_3 -> m15_4  [key=0, style=solid];
m15_4 -> m15_5  [key=0, style=solid];
m15_5 -> m15_6  [key=0, style=solid];
m15_6 -> m15_7  [key=0, style=solid];
m15_7 -> m15_8  [key=0, style=solid];
m15_8 -> m15_9  [key=0, style=solid];
m15_9 -> m15_10  [key=0, style=solid];
m15_10 -> m15_11  [key=0, style=solid];
m15_11 -> m15_0  [color=blue, key=0, style=bold];
m15_12 -> m15_13  [key=0, style=solid];
m15_12 -> m15_16  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m15_12 -> m15_18  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m15_12 -> m15_22  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m15_13 -> m15_14  [key=0, style=solid];
m15_13 -> m15_25  [key=2, style=dotted];
m15_13 -> m15_20  [color=darkseagreen4, key=1, label=attrs, style=dashed];
m15_16 -> m15_17  [key=0, style=solid];
m15_16 -> m15_28  [key=2, style=dotted];
m15_16 -> m15_29  [key=2, style=dotted];
m15_16 -> m15_30  [key=2, style=dotted];
m15_16 -> m15_31  [key=2, style=dotted];
m15_16 -> m15_18  [color=darkseagreen4, key=1, label=spec, style=dashed];
m15_16 -> m15_19  [color=darkseagreen4, key=1, label=spec, style=dashed];
m15_18 -> m15_24  [key=0, style=solid];
m15_18 -> m15_32  [key=2, style=dotted];
m15_18 -> m15_33  [key=2, style=dotted];
m15_22 -> m15_24  [key=0, style=solid];
m15_22 -> m15_28  [key=2, style=dotted];
m15_22 -> m15_29  [key=2, style=dotted];
m15_22 -> m15_30  [key=2, style=dotted];
m15_22 -> m15_34  [key=2, style=dotted];
m15_14 -> m15_15  [key=0, style=solid];
m15_14 -> m15_26  [key=2, style=dotted];
m15_14 -> m15_16  [color=darkseagreen4, key=1, label=oa, style=dashed];
m15_20 -> m15_21  [key=0, style=solid];
m15_20 -> m15_26  [key=2, style=dotted];
m15_20 -> m15_22  [color=darkseagreen4, key=1, label=va, style=dashed];
m15_15 -> m15_16  [key=0, style=solid];
m15_15 -> m15_20  [key=0, style=solid];
m15_15 -> m15_27  [key=2, style=dotted];
m15_17 -> m15_18  [key=0, style=solid];
m15_17 -> m15_19  [key=0, style=solid];
m15_19 -> m15_24  [key=0, style=solid];
m15_21 -> m15_22  [key=0, style=solid];
m15_21 -> m15_23  [key=0, style=solid];
m15_21 -> m15_27  [key=2, style=dotted];
m15_23 -> m15_24  [key=0, style=solid];
m15_23 -> m15_35  [key=2, style=dotted];
m15_24 -> m15_12  [color=blue, key=0, style=bold];
m15_36 -> m15_1  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_2  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_3  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_4  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_5  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_6  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_7  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_8  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_9  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m15_36 -> m15_10  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m16_5 -> m16_6  [key=0, style=solid];
m16_5 -> m16_8  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m16_6 -> m16_7  [key=0, style=solid];
m16_6 -> m16_8  [key=0, style=solid];
m16_8 -> m16_9  [key=0, style=solid];
m16_8 -> m16_0  [key=2, style=dotted];
m16_7 -> m16_9  [key=0, style=solid];
m16_7 -> m16_10  [key=2, style=dotted];
m16_9 -> m16_5  [color=blue, key=0, style=bold];
m16_0 -> m16_1  [key=0, style=solid];
m16_0 -> m16_2  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m16_0 -> m16_3  [color=darkseagreen4, key=1, label="CSharpx.Maybe<object>", style=dashed];
m16_1 -> m16_2  [key=0, style=solid];
m16_2 -> m16_3  [key=0, style=solid];
m16_3 -> m16_4  [key=0, style=solid];
m16_4 -> m16_0  [color=blue, key=0, style=bold];
m16_11 -> m16_1  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m16_11 -> m16_2  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m16_11 -> m16_3  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m17_7 -> m17_8  [key=0, style=solid];
m17_7 -> m17_10  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m17_8 -> m17_9  [key=0, style=solid];
m17_8 -> m17_10  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_10 -> m17_6  [key=2, style=dotted];
m17_9 -> m17_11  [key=0, style=solid];
m17_9 -> m17_5  [key=2, style=dotted];
m17_11 -> m17_7  [color=blue, key=0, style=bold];
m17_0 -> m17_1  [key=0, style=solid];
m17_0 -> m17_3  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m17_1 -> m17_2  [key=0, style=solid];
m17_1 -> m17_3  [key=0, style=solid];
m17_3 -> m17_4  [key=0, style=solid];
m17_3 -> m17_6  [key=2, style=dotted];
m17_2 -> m17_4  [key=0, style=solid];
m17_2 -> m17_5  [key=2, style=dotted];
m17_4 -> m17_0  [color=blue, key=0, style=bold];
m17_12 -> m17_13  [key=0, style=solid];
m17_12 -> m17_15  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m17_12 -> m17_16  [color=darkseagreen4, key=1, label="CommandLine.Core.SpecificationProperty", style=dashed];
m17_13 -> m17_14  [key=0, style=solid];
m17_13 -> m17_16  [key=0, style=solid];
m17_15 -> m17_17  [key=0, style=solid];
m17_15 -> m17_18  [key=2, style=dotted];
m17_15 -> m17_19  [key=2, style=dotted];
m17_15 -> m17_20  [key=2, style=dotted];
m17_15 -> m17_21  [key=2, style=dotted];
m17_15 -> m17_22  [key=2, style=dotted];
m17_16 -> m17_17  [key=0, style=solid];
m17_14 -> m17_15  [key=0, style=solid];
m17_17 -> m17_12  [color=blue, key=0, style=bold];
m17_27 -> m17_28  [key=0, style=solid];
m17_28 -> m17_29  [key=0, style=solid];
m17_28 -> m17_30  [key=2, style=dotted];
m17_29 -> m17_27  [color=blue, key=0, style=bold];
m17_23 -> m17_24  [key=0, style=solid];
m17_23 -> m17_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m17_24 -> m17_25  [key=0, style=solid];
m17_24 -> m17_26  [key=2, style=dotted];
m17_24 -> m17_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m17_25 -> m17_23  [color=blue, key=0, style=bold];
m17_31 -> m17_28  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m18_0 -> m18_1  [color=green, key=0, style=solid];
m18_0 -> m18_2  [color=green, key=1, label="params string[]", style=dashed];
m18_0 -> m18_3  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m18_0 -> m18_4  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m18_0 -> m18_0  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder AppendWhen", style=bold];
m18_1 -> m18_2  [color=green, key=0, style=solid];
m18_1 -> m18_4  [color=green, key=0, style=solid];
m18_2 -> m18_3  [color=green, key=0, style=solid];
m18_2 -> m18_4  [color=green, key=0, style=solid];
m18_3 -> m18_2  [color=green, key=0, style=solid];
m18_3 -> m18_6  [color=green, key=2, style=dotted];
m18_4 -> m18_5  [color=green, key=0, style=solid];
m18_5 -> m18_0  [color=blue, key=0, style=bold];
m18_45 -> m18_46  [key=0, style=solid];
m18_45 -> m18_47  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_45 -> m18_48  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m18_45 -> m18_49  [color=green, key=1, label="System.Text.StringBuilder", style=dashed];
m18_45 -> m18_45  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder TrimEndIfMatch", style=bold];
m18_45 -> m18_51  [color=darkorchid, key=3, label="Parameter variable char c", style=bold];
m18_46 -> m18_47  [key=0, style=solid];
m18_46 -> m18_49  [color=green, key=0, style=solid];
m18_47 -> m18_48  [color=green, key=0, style=solid];
m18_47 -> m18_49  [color=green, key=0, style=solid];
m18_48 -> m18_49  [color=green, key=0, style=solid];
m18_48 -> m18_44  [color=green, key=2, style=dotted];
m18_49 -> m18_50  [color=green, key=0, style=solid];
m18_50 -> m18_45  [color=blue, key=0, style=bold];
m18_14 -> m18_15  [key=0, style=solid];
m18_15 -> m18_16  [key=0, style=solid];
m18_15 -> m18_17  [key=2, style=dotted];
m18_16 -> m18_14  [color=blue, key=0, style=bold];
m18_18 -> m18_19  [key=0, style=solid];
m18_19 -> m18_20  [key=0, style=solid];
m18_19 -> m18_6  [key=2, style=dotted];
m18_20 -> m18_18  [color=blue, key=0, style=bold];
m18_7 -> m18_8  [key=0, style=solid];
m18_7 -> m18_9  [color=darkseagreen4, key=1, label="params char[]", style=dashed];
m18_7 -> m18_10  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_7 -> m18_11  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_7 -> m18_7  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder AppendWhen", style=bold];
m18_8 -> m18_9  [key=0, style=solid];
m18_8 -> m18_11  [key=0, style=solid];
m18_9 -> m18_10  [key=0, style=solid];
m18_9 -> m18_11  [key=0, style=solid];
m18_10 -> m18_9  [key=0, style=solid];
m18_10 -> m18_13  [key=2, style=dotted];
m18_11 -> m18_12  [key=0, style=solid];
m18_12 -> m18_7  [color=blue, key=0, style=bold];
m18_34 -> m18_35  [color=green, key=0, style=solid];
m18_35 -> m18_36  [color=green, key=0, style=solid];
m18_35 -> m18_37  [color=green, key=2, style=dotted];
m18_36 -> m18_34  [color=blue, key=0, style=bold];
m18_28 -> m18_29  [key=0, style=solid];
m18_28 -> m18_31  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_28 -> m18_32  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_28 -> m18_28  [color=darkorchid, key=3, label="method methodReturn System.Text.StringBuilder AppendIfNotEmpty", style=bold];
m18_29 -> m18_30  [key=0, style=solid];
m18_29 -> m18_32  [key=0, style=solid];
m18_29 -> m18_31  [color=darkseagreen4, key=1, label=value, style=dashed];
m18_31 -> m18_29  [key=0, style=solid];
m18_31 -> m18_6  [key=2, style=dotted];
m18_32 -> m18_33  [key=0, style=solid];
m18_30 -> m18_31  [key=0, style=solid];
m18_30 -> m18_29  [key=0, style=solid];
m18_33 -> m18_28  [color=blue, key=0, style=bold];
m18_38 -> m18_39  [key=0, style=solid];
m18_39 -> m18_40  [key=0, style=solid];
m18_40 -> m18_38  [color=blue, key=0, style=bold];
m18_41 -> m18_42  [color=red, key=0, style=solid];
m18_42 -> m18_43  [color=red, key=0, style=solid];
m18_42 -> m18_44  [color=red, key=2, style=dotted];
m18_43 -> m18_41  [color=blue, key=0, style=bold];
m18_21 -> m18_22  [key=0, style=solid];
m18_22 -> m18_23  [key=0, style=solid];
m18_22 -> m18_24  [key=2, style=dotted];
m18_23 -> m18_21  [color=blue, key=0, style=bold];
m18_25 -> m18_26  [key=0, style=solid];
m18_26 -> m18_27  [key=0, style=solid];
m18_26 -> m18_24  [key=2, style=dotted];
m18_27 -> m18_25  [color=blue, key=0, style=bold];
m18_51 -> m18_52  [color=red, key=0, style=solid];
m18_52 -> m18_53  [color=red, key=0, style=solid];
m18_52 -> m18_54  [color=red, key=2, style=dotted];
m18_53 -> m18_51  [color=blue, key=0, style=bold];
m18_55 -> m18_56  [key=0, style=solid];
m18_55 -> m18_57  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_55 -> m18_59  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_55 -> m18_65  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
m18_55 -> m18_61  [color=darkorchid, key=3, label="method methodReturn int TrailingSpaces", style=bold];
m18_56 -> m18_57  [key=0, style=solid];
m18_56 -> m18_59  [color=darkseagreen4, key=1, label=bound, style=dashed];
m18_56 -> m18_62  [color=darkseagreen4, key=1, label=bound, style=dashed];
m18_56 -> m18_63  [color=darkseagreen4, key=1, label=bound, style=dashed];
m18_57 -> m18_58  [key=0, style=solid];
m18_57 -> m18_59  [key=0, style=solid];
m18_59 -> m18_60  [key=0, style=solid];
m18_59 -> m18_61  [key=0, style=solid];
m18_65 -> m18_66  [key=0, style=solid];
m18_65 -> m18_68  [key=0, style=solid];
m18_62 -> m18_63  [key=0, style=solid];
m18_62 -> m18_64  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_62 -> m18_65  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_62 -> m18_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_62 -> m18_56  [color=darkorchid, key=3, label="Local variable int i", style=bold];
m18_63 -> m18_64  [key=0, style=solid];
m18_63 -> m18_68  [key=0, style=solid];
m18_58 -> m18_69  [key=0, style=solid];
m18_60 -> m18_69  [key=0, style=solid];
m18_61 -> m18_62  [key=0, style=solid];
m18_61 -> m18_66  [color=darkseagreen4, key=1, label=c, style=dashed];
m18_61 -> m18_68  [color=darkseagreen4, key=1, label=c, style=dashed];
m18_61 -> m18_57  [color=darkorchid, key=3, label="Local variable int c", style=bold];
m18_66 -> m18_67  [key=0, style=solid];
m18_66 -> m18_66  [color=darkseagreen4, key=1, label=c, style=dashed];
m18_66 -> m18_68  [color=darkseagreen4, key=1, label=c, style=dashed];
m18_68 -> m18_69  [key=0, style=solid];
m18_64 -> m18_65  [key=0, style=solid];
m18_64 -> m18_68  [key=0, style=solid];
m18_67 -> m18_63  [key=0, style=solid];
m18_67 -> m18_67  [color=darkseagreen4, key=1, label=i, style=dashed];
m18_69 -> m18_55  [color=blue, key=0, style=bold];
m19_20 -> m19_21  [key=0, style=solid];
m19_21 -> m19_22  [key=0, style=solid];
m19_21 -> m19_6  [key=2, style=dotted];
m19_21 -> m19_7  [key=2, style=dotted];
m19_21 -> m19_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m19_22 -> m19_23  [key=0, style=solid];
m19_22 -> m19_8  [key=2, style=dotted];
m19_22 -> m19_9  [key=2, style=dotted];
m19_22 -> m19_10  [key=2, style=dotted];
m19_22 -> m19_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m19_24 -> m19_25  [key=0, style=solid];
m19_24 -> m19_15  [key=2, style=dotted];
m19_23 -> m19_24  [key=0, style=solid];
m19_23 -> m19_11  [key=2, style=dotted];
m19_23 -> m19_6  [key=2, style=dotted];
m19_23 -> m19_7  [key=2, style=dotted];
m19_23 -> m19_12  [key=2, style=dotted];
m19_23 -> m19_13  [key=2, style=dotted];
m19_23 -> m19_14  [key=2, style=dotted];
m19_23 -> m19_26  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_25 -> m19_20  [color=blue, key=0, style=bold];
m19_0 -> m19_1  [key=0, style=solid];
m19_1 -> m19_2  [key=0, style=solid];
m19_1 -> m19_6  [key=2, style=dotted];
m19_1 -> m19_7  [key=2, style=dotted];
m19_1 -> m19_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m19_2 -> m19_3  [key=0, style=solid];
m19_2 -> m19_8  [key=2, style=dotted];
m19_2 -> m19_9  [key=2, style=dotted];
m19_2 -> m19_10  [key=2, style=dotted];
m19_2 -> m19_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m19_4 -> m19_5  [key=0, style=solid];
m19_4 -> m19_15  [key=2, style=dotted];
m19_3 -> m19_4  [key=0, style=solid];
m19_3 -> m19_11  [key=2, style=dotted];
m19_3 -> m19_6  [key=2, style=dotted];
m19_3 -> m19_7  [key=2, style=dotted];
m19_3 -> m19_12  [key=2, style=dotted];
m19_3 -> m19_13  [key=2, style=dotted];
m19_3 -> m19_14  [key=2, style=dotted];
m19_3 -> m19_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m19_5 -> m19_0  [color=blue, key=0, style=bold];
m19_26 -> m19_27  [key=0, style=solid];
m19_17 -> m19_18  [key=0, style=solid];
m19_17 -> m19_19  [key=2, style=dotted];
m19_16 -> m19_17  [key=0, style=solid];
m19_18 -> m19_16  [color=blue, key=0, style=bold];
m19_27 -> m19_28  [key=0, style=solid];
m19_27 -> m19_19  [key=2, style=dotted];
m19_28 -> m19_26  [color=blue, key=0, style=bold];
m19_29 -> m19_17  [color=darkseagreen4, key=1, label=specs, style=dashed];
m19_30 -> m19_27  [color=darkseagreen4, key=1, label=specs, style=dashed];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_4  [key=2, style=dotted];
m20_1 -> m20_5  [key=2, style=dotted];
m20_1 -> m20_6  [key=2, style=dotted];
m20_1 -> m20_7  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_1 -> m20_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_2 -> m20_3  [key=0, style=solid];
m20_3 -> m20_0  [color=blue, key=0, style=bold];
m20_38 -> m20_39  [key=0, style=solid];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_10  [key=2, style=dotted];
m20_7 -> m20_8  [key=0, style=solid];
m20_11 -> m20_12  [key=0, style=solid];
m20_9 -> m20_7  [color=blue, key=0, style=bold];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_14  [key=2, style=dotted];
m20_13 -> m20_11  [color=blue, key=0, style=bold];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_10  [key=2, style=dotted];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_27  [key=2, style=dotted];
m20_24 -> m20_28  [key=2, style=dotted];
m20_24 -> m20_4  [key=2, style=dotted];
m20_24 -> m20_5  [key=2, style=dotted];
m20_24 -> m20_6  [key=2, style=dotted];
m20_24 -> m20_30  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_24 -> m20_34  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_24 -> m20_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_19 -> m20_20  [key=0, style=solid];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_24  [color=darkseagreen4, key=1, label=T1, style=dashed];
m20_22 -> m20_31  [color=darkseagreen4, key=1, label=T1, style=dashed];
m20_21 -> m20_19  [color=blue, key=0, style=bold];
m20_23 -> m20_24  [key=0, style=solid];
m20_23 -> m20_14  [key=2, style=dotted];
m20_23 -> m20_25  [color=darkseagreen4, key=1, label=descr, style=dashed];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_33  [key=2, style=dotted];
m20_25 -> m20_26  [key=0, style=solid];
m20_25 -> m20_29  [key=2, style=dotted];
m20_30 -> m20_31  [key=0, style=solid];
m20_34 -> m20_35  [key=0, style=solid];
m20_26 -> m20_22  [color=blue, key=0, style=bold];
m20_32 -> m20_30  [color=blue, key=0, style=bold];
m20_35 -> m20_36  [key=0, style=solid];
m20_35 -> m20_37  [key=2, style=dotted];
m20_36 -> m20_34  [color=blue, key=0, style=bold];
m20_39 -> m20_40  [key=0, style=solid];
m20_39 -> m20_14  [key=2, style=dotted];
m20_40 -> m20_38  [color=blue, key=0, style=bold];
m20_15 -> m20_16  [key=0, style=solid];
m20_15 -> m20_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_15 -> m20_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_4  [key=2, style=dotted];
m20_16 -> m20_5  [key=2, style=dotted];
m20_16 -> m20_6  [key=2, style=dotted];
m20_16 -> m20_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_16 -> m20_22  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m20_17 -> m20_18  [key=0, style=solid];
m20_18 -> m20_15  [color=blue, key=0, style=bold];
m20_41 -> m20_8  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_42 -> m20_8  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m20_43 -> m20_20  [color=darkseagreen4, key=1, label=string, style=dashed];
m20_44 -> m20_20  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m20_45 -> m20_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m20_46 -> m20_31  [color=darkseagreen4, key=1, label=T1, style=dashed];
m21_4 -> m21_5  [key=0, style=solid];
m21_5 -> m21_6  [key=0, style=solid];
m21_5 -> m21_3  [key=2, style=dotted];
m21_6 -> m21_4  [color=blue, key=0, style=bold];
m21_126 -> m21_127  [key=0, style=solid];
m21_127 -> m21_128  [key=0, style=solid];
m21_127 -> m21_115  [key=2, style=dotted];
m21_127 -> m21_39  [key=2, style=dotted];
m21_127 -> m21_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_128 -> m21_126  [color=blue, key=0, style=bold];
m21_88 -> m21_89  [key=0, style=solid];
m21_88 -> m21_90  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m21_88 -> m21_92  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_88 -> m21_94  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m21_88 -> m21_96  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_88 -> m21_132  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m21_89 -> m21_90  [key=0, style=solid];
m21_89 -> m21_37  [key=2, style=dotted];
m21_89 -> m21_92  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_89 -> m21_98  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_89 -> m21_99  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_89 -> m21_100  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_90 -> m21_91  [key=0, style=solid];
m21_90 -> m21_93  [key=0, style=solid];
m21_92 -> m21_100  [key=0, style=solid];
m21_92 -> m21_102  [key=2, style=dotted];
m21_92 -> m21_103  [key=2, style=dotted];
m21_94 -> m21_95  [key=0, style=solid];
m21_94 -> m21_104  [key=2, style=dotted];
m21_94 -> m21_110  [color=darkseagreen4, key=1, label=sep, style=dashed];
m21_94 -> m21_98  [color=darkseagreen4, key=1, label=sep, style=dashed];
m21_96 -> m21_97  [key=0, style=solid];
m21_96 -> m21_105  [key=2, style=dotted];
m21_96 -> m21_98  [color=darkseagreen4, key=1, label=e, style=dashed];
m21_98 -> m21_97  [key=0, style=solid];
m21_98 -> m21_107  [key=2, style=dotted];
m21_98 -> m21_103  [key=2, style=dotted];
m21_98 -> m21_46  [key=2, style=dotted];
m21_99 -> m21_100  [key=0, style=solid];
m21_99 -> m21_108  [key=2, style=dotted];
m21_100 -> m21_101  [key=0, style=solid];
m21_100 -> m21_54  [key=2, style=dotted];
m21_91 -> m21_92  [key=0, style=solid];
m21_93 -> m21_94  [key=0, style=solid];
m21_95 -> m21_96  [key=0, style=solid];
m21_95 -> m21_110  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_95 -> m21_98  [color=darkseagreen4, key=1, label=format, style=dashed];
m21_95 -> m21_95  [color=darkorchid, key=3, label="Local variable System.Func<object, object> format", style=bold];
m21_97 -> m21_98  [key=0, style=solid];
m21_97 -> m21_99  [key=0, style=solid];
m21_97 -> m21_106  [key=2, style=dotted];
m21_101 -> m21_88  [color=blue, key=0, style=bold];
m21_41 -> m21_152  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m21_41 -> m21_162  [color=darkorchid, key=3, label="method methodReturn bool IsEmpty", style=bold];
m21_137 -> m21_138  [key=0, style=solid];
m21_137 -> m21_139  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
m21_138 -> m21_139  [key=0, style=solid];
m21_139 -> m21_140  [key=0, style=solid];
m21_139 -> m21_141  [key=2, style=dotted];
m21_139 -> m21_125  [key=2, style=dotted];
m21_139 -> m21_142  [key=2, style=dotted];
m21_139 -> m21_54  [key=2, style=dotted];
m21_140 -> m21_137  [color=blue, key=0, style=bold];
m21_151 -> m21_152  [key=0, style=solid];
m21_151 -> m21_154  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_151 -> m21_156  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_151 -> m21_158  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_151 -> m21_160  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_152 -> m21_153  [key=0, style=solid];
m21_152 -> m21_154  [key=0, style=solid];
m21_154 -> m21_155  [key=0, style=solid];
m21_154 -> m21_156  [key=0, style=solid];
m21_154 -> m21_36  [key=2, style=dotted];
m21_154 -> m21_148  [key=2, style=dotted];
m21_154 -> m21_149  [key=2, style=dotted];
m21_156 -> m21_157  [key=0, style=solid];
m21_156 -> m21_158  [key=0, style=solid];
m21_156 -> m21_36  [key=2, style=dotted];
m21_156 -> m21_164  [key=2, style=dotted];
m21_156 -> m21_165  [key=2, style=dotted];
m21_158 -> m21_159  [key=0, style=solid];
m21_158 -> m21_160  [key=0, style=solid];
m21_160 -> m21_161  [key=0, style=solid];
m21_160 -> m21_162  [key=0, style=solid];
m21_160 -> m21_105  [key=2, style=dotted];
m21_160 -> m21_106  [key=2, style=dotted];
m21_153 -> m21_163  [key=0, style=solid];
m21_155 -> m21_163  [key=0, style=solid];
m21_157 -> m21_163  [key=0, style=solid];
m21_159 -> m21_163  [key=0, style=solid];
m21_161 -> m21_163  [key=0, style=solid];
m21_162 -> m21_163  [key=0, style=solid];
m21_163 -> m21_151  [color=blue, key=0, style=bold];
m21_129 -> m21_130  [key=0, style=solid];
m21_11 -> m21_12  [key=0, style=solid];
m21_12 -> m21_11  [color=blue, key=0, style=bold];
m21_61 -> m21_62  [key=0, style=solid];
m21_61 -> m21_63  [key=2, style=dotted];
m21_61 -> m21_64  [key=2, style=dotted];
m21_61 -> m21_65  [key=2, style=dotted];
m21_80 -> m21_81  [key=0, style=solid];
m21_80 -> m21_51  [key=2, style=dotted];
m21_80 -> m21_82  [key=2, style=dotted];
m21_80 -> m21_83  [key=2, style=dotted];
m21_80 -> m21_50  [key=2, style=dotted];
m21_80 -> m21_46  [key=2, style=dotted];
m21_57 -> m21_58  [key=0, style=solid];
m21_57 -> m21_59  [key=2, style=dotted];
m21_57 -> m21_46  [key=2, style=dotted];
m21_56 -> m21_57  [key=0, style=solid];
m21_60 -> m21_61  [key=0, style=solid];
m21_66 -> m21_67  [key=0, style=solid];
m21_70 -> m21_71  [key=0, style=solid];
m21_70 -> m21_72  [key=2, style=dotted];
m21_69 -> m21_70  [key=0, style=solid];
m21_73 -> m21_74  [key=0, style=solid];
m21_76 -> m21_77  [key=0, style=solid];
m21_85 -> m21_86  [key=0, style=solid];
m21_85 -> m21_87  [key=2, style=dotted];
m21_85 -> m21_50  [key=2, style=dotted];
m21_85 -> m21_46  [key=2, style=dotted];
m21_79 -> m21_80  [key=0, style=solid];
m21_84 -> m21_85  [key=0, style=solid];
m21_58 -> m21_56  [color=blue, key=0, style=bold];
m21_62 -> m21_60  [color=blue, key=0, style=bold];
m21_67 -> m21_68  [key=0, style=solid];
m21_68 -> m21_66  [color=blue, key=0, style=bold];
m21_71 -> m21_69  [color=blue, key=0, style=bold];
m21_74 -> m21_75  [key=0, style=solid];
m21_75 -> m21_73  [color=blue, key=0, style=bold];
m21_77 -> m21_78  [key=0, style=solid];
m21_78 -> m21_76  [color=blue, key=0, style=bold];
m21_81 -> m21_79  [color=blue, key=0, style=bold];
m21_86 -> m21_84  [color=blue, key=0, style=bold];
m21_110 -> m21_111  [key=0, style=solid];
m21_110 -> m21_102  [key=2, style=dotted];
m21_109 -> m21_110  [key=0, style=solid];
m21_111 -> m21_109  [color=blue, key=0, style=bold];
m21_117 -> m21_118  [key=0, style=solid];
m21_117 -> m21_119  [key=2, style=dotted];
m21_117 -> m21_120  [key=2, style=dotted];
m21_122 -> m21_123  [key=0, style=solid];
m21_122 -> m21_72  [key=2, style=dotted];
m21_122 -> m21_124  [key=2, style=dotted];
m21_122 -> m21_125  [key=2, style=dotted];
m21_121 -> m21_122  [key=0, style=solid];
m21_116 -> m21_117  [key=0, style=solid];
m21_118 -> m21_116  [color=blue, key=0, style=bold];
m21_123 -> m21_121  [color=blue, key=0, style=bold];
m21_130 -> m21_131  [key=0, style=solid];
m21_131 -> m21_129  [color=blue, key=0, style=bold];
m21_65 -> m21_65  [color=darkorchid, key=3, label="method methodReturn object NormalizeValue", style=bold];
m21_135 -> m21_132  [color=darkorchid, key=3, label="Parameter variable CommandLine.UnParserSettings settings", style=bold];
m21_102 -> m21_112  [key=0, style=solid];
m21_102 -> m21_113  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_102 -> m21_88  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m21_102 -> m21_95  [color=darkorchid, key=3, label="Parameter variable object value", style=bold];
m21_112 -> m21_113  [key=0, style=solid];
m21_112 -> m21_117  [color=darkseagreen4, key=1, label=string, style=dashed];
m21_112 -> m21_122  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m21_112 -> m21_112  [color=darkorchid, key=3, label="Local variable System.Func<string, string> doubQt", style=bold];
m21_113 -> m21_114  [key=0, style=solid];
m21_113 -> m21_115  [key=2, style=dotted];
m21_113 -> m21_39  [key=2, style=dotted];
m21_113 -> m21_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_114 -> m21_102  [color=blue, key=0, style=bold];
m21_0 -> m21_1  [key=0, style=solid];
m21_1 -> m21_2  [key=0, style=solid];
m21_1 -> m21_3  [key=2, style=dotted];
m21_2 -> m21_0  [color=blue, key=0, style=bold];
m21_10 -> m21_7  [color=darkorchid, key=3, label="Parameter variable T options", style=bold];
m21_10 -> m21_8  [color=darkorchid, key=3, label="Parameter variable System.Action<CommandLine.UnParserSettings> configuration", style=bold];
m21_13 -> m21_14  [key=0, style=solid];
m21_13 -> m21_17  [color=darkseagreen4, key=1, label="System.Action<CommandLine.UnParserSettings>", style=dashed];
m21_13 -> m21_19  [color=darkseagreen4, key=1, label=T, style=dashed];
m21_13 -> m21_22  [color=darkseagreen4, key=1, label=T, style=dashed];
m21_13 -> m21_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m21_14 -> m21_15  [key=0, style=solid];
m21_14 -> m21_16  [key=0, style=solid];
m21_17 -> m21_18  [key=0, style=solid];
m21_17 -> m21_35  [key=2, style=dotted];
m21_19 -> m21_20  [key=0, style=solid];
m21_19 -> m21_36  [key=2, style=dotted];
m21_19 -> m21_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m21_19 -> m21_22  [color=darkseagreen4, key=1, label=type, style=dashed];
m21_22 -> m21_23  [key=0, style=solid];
m21_22 -> m21_40  [key=2, style=dotted];
m21_22 -> m21_41  [key=2, style=dotted];
m21_22 -> m21_42  [key=2, style=dotted];
m21_22 -> m21_60  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_22 -> m21_22  [color=darkseagreen4, key=1, label=info, style=dashed];
m21_22 -> m21_26  [color=darkseagreen4, key=1, label=specs, style=dashed];
m21_15 -> m21_33  [key=0, style=solid];
m21_15 -> m21_34  [key=2, style=dotted];
m21_16 -> m21_17  [key=0, style=solid];
m21_16 -> m21_3  [key=2, style=dotted];
m21_16 -> m21_18  [color=darkseagreen4, key=1, label=settings, style=dashed];
m21_16 -> m21_25  [color=darkseagreen4, key=1, label=settings, style=dashed];
m21_16 -> m21_27  [color=darkseagreen4, key=1, label=settings, style=dashed];
m21_16 -> m21_29  [color=darkseagreen4, key=1, label=settings, style=dashed];
m21_16 -> m21_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m21_18 -> m21_19  [key=0, style=solid];
m21_25 -> m21_26  [key=0, style=solid];
m21_25 -> m21_43  [key=2, style=dotted];
m21_25 -> m21_69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_25 -> m21_28  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m21_25 -> m21_29  [color=darkseagreen4, key=1, label=optSpecs, style=dashed];
m21_27 -> m21_28  [key=0, style=solid];
m21_27 -> m21_45  [key=2, style=dotted];
m21_27 -> m21_46  [key=2, style=dotted];
m21_27 -> m21_47  [key=2, style=dotted];
m21_27 -> m21_48  [key=2, style=dotted];
m21_27 -> m21_49  [key=2, style=dotted];
m21_27 -> m21_50  [key=2, style=dotted];
m21_27 -> m21_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_27 -> m21_76  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_27 -> m21_29  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_27 -> m21_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_27 -> m21_30  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_27 -> m21_31  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_27 -> m21_85  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_27 -> m21_32  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_29 -> m21_30  [key=0, style=solid];
m21_29 -> m21_53  [key=2, style=dotted];
m21_29 -> m21_79  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_20 -> m21_21  [key=0, style=solid];
m21_20 -> m21_37  [key=2, style=dotted];
m21_20 -> m21_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_20 -> m21_27  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_21 -> m21_22  [key=0, style=solid];
m21_21 -> m21_38  [key=2, style=dotted];
m21_21 -> m21_39  [key=2, style=dotted];
m21_21 -> m21_56  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_23 -> m21_24  [key=0, style=solid];
m21_23 -> m21_43  [key=2, style=dotted];
m21_23 -> m21_44  [key=2, style=dotted];
m21_23 -> m21_66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_23 -> m21_23  [color=darkseagreen4, key=1, label=info, style=dashed];
m21_23 -> m21_25  [color=darkseagreen4, key=1, label=allOptSpecs, style=dashed];
m21_26 -> m21_27  [key=0, style=solid];
m21_26 -> m21_43  [key=2, style=dotted];
m21_26 -> m21_73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_26 -> m21_26  [color=darkseagreen4, key=1, label=info, style=dashed];
m21_26 -> m21_30  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m21_26 -> m21_31  [color=darkseagreen4, key=1, label=valSpecs, style=dashed];
m21_24 -> m21_25  [key=0, style=solid];
m21_24 -> m21_44  [key=2, style=dotted];
m21_24 -> m21_24  [color=darkseagreen4, key=1, label=info, style=dashed];
m21_24 -> m21_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m21_24 -> m21_27  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m21_28 -> m21_29  [key=0, style=solid];
m21_28 -> m21_45  [key=2, style=dotted];
m21_28 -> m21_51  [key=2, style=dotted];
m21_28 -> m21_52  [key=2, style=dotted];
m21_30 -> m21_31  [key=0, style=solid];
m21_30 -> m21_45  [key=2, style=dotted];
m21_30 -> m21_51  [key=2, style=dotted];
m21_30 -> m21_52  [key=2, style=dotted];
m21_31 -> m21_32  [key=0, style=solid];
m21_31 -> m21_53  [key=2, style=dotted];
m21_31 -> m21_84  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_32 -> m21_33  [key=0, style=solid];
m21_32 -> m21_54  [key=2, style=dotted];
m21_32 -> m21_55  [key=2, style=dotted];
m21_33 -> m21_13  [color=blue, key=0, style=bold];
m21_132 -> m21_133  [key=0, style=solid];
m21_133 -> m21_134  [key=0, style=solid];
m21_133 -> m21_37  [key=2, style=dotted];
m21_133 -> m21_135  [key=2, style=dotted];
m21_133 -> m21_50  [key=2, style=dotted];
m21_133 -> m21_88  [key=2, style=dotted];
m21_133 -> m21_136  [key=2, style=dotted];
m21_133 -> m21_54  [key=2, style=dotted];
m21_134 -> m21_132  [color=blue, key=0, style=bold];
m21_7 -> m21_8  [key=0, style=solid];
m21_7 -> m21_10  [color=darkorchid, key=3, label="method methodReturn string FormatCommandLine", style=bold];
m21_8 -> m21_9  [key=0, style=solid];
m21_8 -> m21_10  [key=2, style=dotted];
m21_8 -> m21_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m21_9 -> m21_7  [color=blue, key=0, style=bold];
m21_143 -> m21_144  [key=0, style=solid];
m21_143 -> m21_145  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_143 -> m21_146  [color=darkseagreen4, key=1, label=object, style=dashed];
m21_144 -> m21_145  [key=0, style=solid];
m21_144 -> m21_146  [key=0, style=solid];
m21_144 -> m21_36  [key=2, style=dotted];
m21_144 -> m21_148  [key=2, style=dotted];
m21_144 -> m21_149  [key=2, style=dotted];
m21_145 -> m21_147  [key=0, style=solid];
m21_145 -> m21_150  [key=2, style=dotted];
m21_146 -> m21_147  [key=0, style=solid];
m21_147 -> m21_143  [color=blue, key=0, style=bold];
m21_166 -> m21_57  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_166 -> m21_80  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_166 -> m21_85  [color=darkseagreen4, key=1, label=builder, style=dashed];
m21_167 -> m21_61  [color=darkseagreen4, key=1, label=T, style=dashed];
m21_168 -> m21_70  [color=darkseagreen4, key=1, label=shortSwitches, style=dashed];
m21_169 -> m21_80  [color=darkseagreen4, key=1, label=settings, style=dashed];
m21_170 -> m21_110  [color=darkseagreen4, key=1, label=sep, style=dashed];
m21_171 -> m21_122  [color=darkseagreen4, key=1, label=doubQt, style=dashed];
m23_0 -> m23_1  [key=0, style=solid];
m23_1 -> m23_2  [key=0, style=solid];
m23_2 -> m23_3  [key=0, style=solid];
m23_3 -> m23_0  [color=blue, key=0, style=bold];
m23_4 -> m23_1  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
m23_4 -> m23_2  [color=darkseagreen4, key=1, label="CommandLine.ValueAttribute", style=dashed];
}
