digraph  {
m1_8 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs"];
m1_9 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="AssemblyUsageAttribute.cs"];
m1_2 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs"];
m1_3 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="AssemblyUsageAttribute.cs"];
m1_6 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs"];
m1_7 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="AssemblyUsageAttribute.cs"];
m1_0 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs"];
m1_1 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="AssemblyUsageAttribute.cs"];
m1_4 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs"];
m1_5 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="AssemblyUsageAttribute.cs"];
m4_87 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="EnumerableExtensions.cs"];
m4_17 [label="Entry System.Type.GetVerbSpecification()", span="27-27", cluster="System.Type.GetVerbSpecification()", file="EnumerableExtensions.cs"];
m4_31 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="EnumerableExtensions.cs"];
m4_18 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="EnumerableExtensions.cs"];
m4_109 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", span="52-52", cluster="CommandLine.Infrastructure.FSharpOptionHelper.IsSome(object)", file="EnumerableExtensions.cs"];
m4_89 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="93-93", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="EnumerableExtensions.cs"];
m4_90 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="95-96", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="EnumerableExtensions.cs"];
m4_91 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="93-93", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="EnumerableExtensions.cs"];
m4_52 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="61-61", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_53 [label="var builder = new StringBuilder()", span="63-63", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_54 [label="spec.TargetType", span="64-64", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_56 [label="builder.Append(FormatWithQuotesIfString(value))", span="67-67", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_58 [label="var sep = spec.SeperatorOrSpace()", span="70-70", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_60 [label="var e = ((IEnumerable)value).GetEnumerator()", span="73-73", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_62 [label="builder.Append(fmtWithQuotesIfStr(e.Current)).Append(sep)", span="75-75", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_63 [label="builder.TrimEndIfMatch(' ')", span="76-76", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_64 [label="return builder.ToString();", span="79-79", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_55 [label="TargetType.Scalar", span="66-66", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_57 [label="TargetType.Sequence", span="69-69", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_59 [label="Func<object, object> fmtWithQuotesIfStr = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="71-72", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_61 [label="e.MoveNext()", span="74-74", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_65 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="61-61", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="EnumerableExtensions.cs"];
m4_69 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="EnumerableExtensions.cs"];
m4_20 [label="Entry object.IsEmpty()", span="125-125", cluster="object.IsEmpty()", file="EnumerableExtensions.cs"];
m4_71 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="EnumerableExtensions.cs"];
m4_111 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="125-125", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_112 [label="value == null", span="127-127", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_114 [label="ReflectionHelper.IsFSharpOptionType(value.GetType()) && !FSharpOptionHelper.IsSome(value)", span="128-128", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_116 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="129-129", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_118 [label="value is string && ((string)value).Length == 0", span="130-130", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_120 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="131-131", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_113 [label="return true;", span="127-127", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_115 [label="return true;", span="128-128", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_117 [label="return true;", span="129-129", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_119 [label="return true;", span="130-130", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_121 [label="return true;", span="131-131", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_122 [label="return false;", span="132-132", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_123 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="125-125", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="EnumerableExtensions.cs"];
m4_21 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="EnumerableExtensions.cs"];
m4_83 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="EnumerableExtensions.cs"];
m4_95 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="99-99", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="EnumerableExtensions.cs"];
m4_96 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="101-105", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="EnumerableExtensions.cs"];
m4_97 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="99-99", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="EnumerableExtensions.cs"];
m4_19 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="EnumerableExtensions.cs"];
m4_78 [label="Entry T.ToMaybe<T>()", span="105-105", cluster="T.ToMaybe<T>()", file="EnumerableExtensions.cs"];
m4_82 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="EnumerableExtensions.cs"];
m4_15 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="EnumerableExtensions.cs"];
m4_92 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_33 [label="new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) }", span="37-38", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_28 [label="builder.Append(verb.Name).Append(' ')", span="32-32", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_45 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="52-52", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_49 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="55-55", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_32 [label="Entry lambda expression", span="37-38", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_38 [label="Entry lambda expression", span="41-41", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_41 [label="Entry lambda expression", span="46-46", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_44 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_48 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_34 [label="Exit lambda expression", span="37-38", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_39 [label="i.Specification.Tag == SpecificationType.Option", span="41-41", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_40 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_42 [label="i.Specification.Tag == SpecificationType.Value", span="46-46", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_43 [label="Exit lambda expression", span="46-46", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_46 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_50 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_73 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="72-72", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_72 [label="Entry lambda expression", span="71-72", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_74 [label="Exit lambda expression", span="71-72", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_80 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="85-85", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_85 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="89-90", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_84 [label="Entry lambda expression", span="89-90", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_79 [label="Entry lambda expression", span="84-85", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_81 [label="Exit lambda expression", span="84-85", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_86 [label="Exit lambda expression", span="89-90", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_93 [label="o.Separator != '\0' ? o.Separator : ' '", span="96-96", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_94 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="EnumerableExtensions.cs"];
m4_99 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="EnumerableExtensions.cs"];
m4_26 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="EnumerableExtensions.cs"];
m4_24 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="EnumerableExtensions.cs"];
m4_108 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="EnumerableExtensions.cs"];
m4_124 [label="Entry System.Type.GetDefaultValue()", span="119-119", cluster="System.Type.GetDefaultValue()", file="EnumerableExtensions.cs"];
m4_51 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="EnumerableExtensions.cs"];
m4_47 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="EnumerableExtensions.cs"];
m4_110 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", span="39-39", cluster="CommandLine.Infrastructure.FSharpOptionHelper.ValueOf(object)", file="EnumerableExtensions.cs"];
m4_22 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="EnumerableExtensions.cs"];
m4_88 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="EnumerableExtensions.cs"];
m4_37 [label="Entry object.NormalizeValue()", span="114-114", cluster="object.NormalizeValue()", file="EnumerableExtensions.cs"];
m4_25 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="EnumerableExtensions.cs"];
m4_68 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="93-93", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="EnumerableExtensions.cs"];
m4_30 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="EnumerableExtensions.cs"];
m4_98 [label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="108-108", cluster="CommandLine.Core.OptionSpecification.FormatName()", file="EnumerableExtensions.cs"];
m4_66 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="82-82", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="EnumerableExtensions.cs"];
m4_75 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="84-85", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="EnumerableExtensions.cs"];
m4_76 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="87-90", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="EnumerableExtensions.cs"];
m4_77 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="82-82", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="EnumerableExtensions.cs"];
m4_23 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="EnumerableExtensions.cs"];
m4_67 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="EnumerableExtensions.cs"];
m4_16 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="EnumerableExtensions.cs"];
m4_125 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="EnumerableExtensions.cs"];
m4_70 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="EnumerableExtensions.cs"];
m4_100 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="108-108", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="EnumerableExtensions.cs"];
m4_101 [label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="110-111", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="EnumerableExtensions.cs"];
m4_102 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="108-108", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="EnumerableExtensions.cs"];
m4_35 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="EnumerableExtensions.cs"];
m4_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="EnumerableExtensions.cs"];
m4_0 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_1 [label="options == null", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_3 [label="var type = options.GetType()", span="28-28", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_6 [label="var specs =\r\n                from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi),\r\n                            Value = pi.GetValue(options, null).NormalizeValue(), PropertyValue = pi.GetValue(options, null) })\r\n                where !info.PropertyValue.IsEmpty()\r\n                select info", span="34-40", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_2 [label="throw new ArgumentNullException(''options'');", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_4 [label="var builder = new StringBuilder()", span="29-29", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_5 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_9 [label="optSpecs.ForEach(\r\n                opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="51-52", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_10 [label="builder.TrimEndIfMatch(' ')", span="53-53", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_11 [label="valSpecs.ForEach(\r\n                val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="54-55", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_12 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="57-58", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_7 [label="var optSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="41-45", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_8 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="46-49", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_13 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="EnumerableExtensions.cs"];
m4_36 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="EnumerableExtensions.cs"];
m4_103 [label="Entry CommandLine.UnParserExtensions.NormalizeValue(object)", span="114-114", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="EnumerableExtensions.cs"];
m4_104 [label="value != null\r\n                && ReflectionHelper.IsFSharpOptionType(value.GetType())\r\n                && FSharpOptionHelper.IsSome(value)", span="116-118", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="EnumerableExtensions.cs"];
m4_105 [label="return FSharpOptionHelper.ValueOf(value);", span="120-120", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="EnumerableExtensions.cs"];
m4_106 [label="return value;", span="122-122", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="EnumerableExtensions.cs"];
m4_107 [label="Exit CommandLine.UnParserExtensions.NormalizeValue(object)", span="114-114", cluster="CommandLine.UnParserExtensions.NormalizeValue(object)", file="EnumerableExtensions.cs"];
m4_126 [label=builder, span="", file="EnumerableExtensions.cs"];
m4_127 [label=T, span="", file="EnumerableExtensions.cs"];
m4_128 [label=sep, span="", file="EnumerableExtensions.cs"];
m4_129 [label=doubQt, span="", file="EnumerableExtensions.cs"];
m5_14 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Error.cs"];
m5_22 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Error.cs"];
m5_21 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="Error.cs"];
m5_18 [label="Entry CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="16-16", cluster="CommandLine.Core.KeyValuePairHelper.ForScalar(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Error.cs"];
m5_0 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_1 [label="var tokenList = tokens.ToList()", span="16-16", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_2 [label="var switches = Switch.Partition(tokenList, typeLookup).ToList()", span="17-17", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_4 [label="var scalars = Scalar.Partition(tokensExceptSwitches, typeLookup).ToList()", span="19-19", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_6 [label="var sequences = Sequence.Partition(tokensExceptSwitchesAndScalars, typeLookup).ToList()", span="21-21", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_3 [label="var tokensExceptSwitches = tokenList.Where(x => !switches.Contains(x)).ToList()", span="18-18", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_10 [label="return TokenPartitions.Create(\r\n                    KeyValuePairHelper.ForSwitch(switches)\r\n                        .Concat(KeyValuePairHelper.ForScalar(scalars))\r\n                        .Concat(KeyValuePairHelper.ForSequence(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="26-31", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_5 [label="var tokensExceptSwitchesAndScalars = (tokensExceptSwitches.Where(x => !scalars.Contains(x))).ToList()", span="20-20", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_7 [label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Where(x => !sequences.Contains(x)).ToList()", span="22-22", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_8 [label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue()).ToList()", span="23-23", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_9 [label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Where(x => !values.Contains(x))", span="24-24", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_11 [label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_30 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="Error.cs"];
m5_41 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="Error.cs"];
m5_24 [label="!switches.Contains(x)", span="18-18", cluster="lambda expression", file="Error.cs"];
m5_23 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="Error.cs"];
m5_28 [label="!scalars.Contains(x)", span="20-20", cluster="lambda expression", file="Error.cs"];
m5_27 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Error.cs"];
m5_32 [label="!sequences.Contains(x)", span="22-22", cluster="lambda expression", file="Error.cs"];
m5_31 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="Error.cs"];
m5_34 [label="Entry lambda expression", span="23-23", cluster="lambda expression", file="Error.cs"];
m5_39 [label="!values.Contains(x)", span="24-24", cluster="lambda expression", file="Error.cs"];
m5_38 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="Error.cs"];
m5_25 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="Error.cs"];
m5_29 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="Error.cs"];
m5_33 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="Error.cs"];
m5_35 [label="v.IsValue()", span="23-23", cluster="lambda expression", file="Error.cs"];
m5_36 [label="Exit lambda expression", span="23-23", cluster="lambda expression", file="Error.cs"];
m5_40 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="Error.cs"];
m5_42 [label="t.Text", span="30-30", cluster="lambda expression", file="Error.cs"];
m5_43 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="Error.cs"];
m5_15 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="Error.cs"];
m5_16 [label="Entry Unk.Partition", span="", cluster="Unk.Partition", file="Error.cs"];
m5_17 [label="Entry CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="10-10", cluster="CommandLine.Core.KeyValuePairHelper.ForSwitch(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Error.cs"];
m5_13 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="Error.cs"];
m5_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="Error.cs"];
m5_37 [label="Entry Unk.IsValue", span="", cluster="Unk.IsValue", file="Error.cs"];
m5_19 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Error.cs"];
m5_20 [label="Entry CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="22-22", cluster="CommandLine.Core.KeyValuePairHelper.ForSequence(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="Error.cs"];
m5_26 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="Error.cs"];
m5_44 [label=switches, span="", file="Error.cs"];
m5_45 [label=scalars, span="", file="Error.cs"];
m5_46 [label=sequences, span="", file="Error.cs"];
m5_47 [label=values, span="", file="Error.cs"];
m22_45 [label="maybe.MatchJust(out value)", span="137-137", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="HeadingInfo.cs"];
m22_48 [label="Entry CommandLine.Parsing.ArgumentParser.IsInputValue(string)", span="84-84", cluster="CommandLine.Parsing.ArgumentParser.IsInputValue(string)", file="HeadingInfo.cs"];
m22_12 [label="parts.Length == 1 && (argumentEnumerator.IsLast || !ArgumentParser.IsInputValue(argumentEnumerator.Next))", span="51-51", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="HeadingInfo.cs"];
m22_13 [label="return PresentParserState.Failure;", span="53-53", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", color=red, community=0, file="HeadingInfo.cs"];
m22_14 [label="parts.Length == 2", span="56-56", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="HeadingInfo.cs"];
m22_52 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="118-118", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="HeadingInfo.cs"];
m22_34 [label="valueSetting = option.SetValue(items, options)", span="99-99", cluster="CommandLine.Parsing.LongOptionParser.Parse(CommandLine.Parsing.IArgumentEnumerator, CommandLine.Parsing.OptionMap, object)", file="HeadingInfo.cs"];
m22_70 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="HeadingInfo.cs"];
m22_56 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", span="140-140", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool, bool)", file="HeadingInfo.cs"];
m22_3 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29", cluster="CSharpx.Maybe<T>.MatchNothing()", file="HeadingInfo.cs"];
m22_5 [label="Exit CSharpx.Maybe<T>.MatchNothing()", span="29-29", cluster="CSharpx.Maybe<T>.MatchNothing()", color=green, community=0, file="HeadingInfo.cs"];
m22_4 [label="return Tag == MaybeType.Nothing;", span="31-31", cluster="CSharpx.Maybe<T>.MatchNothing()", file="HeadingInfo.cs"];
m22_6 [label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="34-34", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="HeadingInfo.cs"];
m22_7 [label="value = Tag == MaybeType.Just\r\n                ? ((Just<T>)this).Value\r\n                : default(T)", span="36-38", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="HeadingInfo.cs", color=red, community=0];
m22_9 [label="Exit CSharpx.Maybe<T>.MatchJust(out T)", span="34-34", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="HeadingInfo.cs"];
m22_10 [label="Entry CSharpx.Nothing<T>.Nothing()", span="48-48", cluster="CSharpx.Nothing<T>.Nothing()", file="HeadingInfo.cs"];
m22_11 [label="Exit CSharpx.Nothing<T>.Nothing()", span="48-48", cluster="CSharpx.Nothing<T>.Nothing()", file="HeadingInfo.cs"];
m22_15 [label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", file="HeadingInfo.cs"];
m22_16 [label="return new Nothing<T>();", span="77-77", cluster="CSharpx.Maybe.Nothing<T>()", color=green, community=0, file="HeadingInfo.cs"];
m22_18 [label="Entry CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="HeadingInfo.cs"];
m22_20 [label="Exit CSharpx.Maybe.Just<T>(T)", span="80-80", cluster="CSharpx.Maybe.Just<T>(T)", file="HeadingInfo.cs"];
m22_23 [label="return new Just<T1>(((Either1Of2<T1, T2>)either).Value);", span="93-93", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="HeadingInfo.cs"];
m22_25 [label="Exit CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", span="89-89", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="HeadingInfo.cs"];
m22_27 [label="return Equals(value, default(T)) ? Maybe.Nothing<T>() : Maybe.Just(value);", span="107-107", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="HeadingInfo.cs"];
m22_28 [label="Exit CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="HeadingInfo.cs"];
m22_30 [label="Entry CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="HeadingInfo.cs"];
m22_32 [label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : Maybe.Nothing<T2>();", span="113-115", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="HeadingInfo.cs"];
m22_36 [label="T1 value1", span="120-120", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="HeadingInfo.cs"];
m22_40 [label="T1 value1", span="128-128", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="HeadingInfo.cs"];
m22_42 [label="Exit CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="HeadingInfo.cs"];
m22_17 [label="Exit CSharpx.Maybe.Nothing<T>()", span="75-75", cluster="CSharpx.Maybe.Nothing<T>()", color=green, community=0, file="HeadingInfo.cs"];
m22_19 [label="return new Just<T>(value);", span="82-82", cluster="CSharpx.Maybe.Just<T>(T)", file="HeadingInfo.cs"];
m22_21 [label="Entry CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", span="89-89", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="HeadingInfo.cs"];
m22_33 [label="Exit CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", span="110-110", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="HeadingInfo.cs"];
m22_22 [label="either.Tag == Either2Type.Either1Of2", span="91-91", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="HeadingInfo.cs"];
m22_38 [label="Exit CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="HeadingInfo.cs"];
m22_8 [label="return Tag == MaybeType.Just;", span="39-39", cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="HeadingInfo.cs"];
m22_24 [label="return new Nothing<T1>();", span="95-95", cluster="CSharpx.Maybe.OfEither<T1, T2>(CSharpx.Either<T1, T2>)", file="HeadingInfo.cs"];
m22_26 [label="Entry CSharpx.MaybeExtensions.ToMaybe<T>(T)", span="105-105", cluster="CSharpx.MaybeExtensions.ToMaybe<T>(T)", file="HeadingInfo.cs"];
m22_29 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="HeadingInfo.cs"];
m22_31 [label="T1 value1", span="112-112", cluster="CSharpx.MaybeExtensions.Bind<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, CSharpx.Maybe<T2>>)", file="HeadingInfo.cs"];
m22_35 [label="Entry CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", span="118-118", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="HeadingInfo.cs"];
m22_37 [label="return maybe.MatchJust(out value1)\r\n                ? Maybe.Just(func(value1))\r\n                : Maybe.Nothing<T2>();", span="121-123", cluster="CSharpx.MaybeExtensions.Map<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>)", file="HeadingInfo.cs"];
m22_41 [label="return maybe.MatchJust(out value1)\r\n                ? func(value1)\r\n                : noneValue;", span="129-131", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="HeadingInfo.cs"];
m22_43 [label="Entry CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", span="134-134", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="HeadingInfo.cs"];
m22_39 [label="Entry CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.MaybeExtensions.Return<T1, T2>(CSharpx.Maybe<T1>, System.Func<T1, T2>, T2)", file="HeadingInfo.cs"];
m22_44 [label="T value", span="136-136", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="HeadingInfo.cs"];
m22_49 [label="Entry CommandLine.Parsing.OptionInfo.SetValue(string, object)", span="165-165", cluster="CommandLine.Parsing.OptionInfo.SetValue(string, object)", file="HeadingInfo.cs"];
m22_50 [label="Entry CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", span="171-171", cluster="CommandLine.Parsing.ArgumentParser.DefineOptionThatViolatesFormat(CommandLine.Parsing.OptionInfo)", file="HeadingInfo.cs"];
m22_51 [label="Entry CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", span="135-135", cluster="CommandLine.Parsing.ArgumentParser.BooleanToParserState(bool)", file="HeadingInfo.cs"];
m22_64 [label="Entry CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="HeadingInfo.cs"];
m22_65 [label="T value", span="162-162", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="HeadingInfo.cs"];
m22_66 [label="maybe.MatchJust(out value)", span="163-163", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="HeadingInfo.cs"];
m22_68 [label="throw exceptionToThrow ?? new ArgumentException(''Value empty.'');", span="167-167", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="HeadingInfo.cs"];
m22_67 [label="return value;", span="165-165", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="HeadingInfo.cs"];
m22_69 [label="Exit CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", span="160-160", cluster="CSharpx.MaybeExtensions.FromJust<T>(CSharpx.Maybe<T>, System.Exception)", file="HeadingInfo.cs"];
m22_57 [label="Entry lambda expression", span="155-157", cluster="lambda expression", file="HeadingInfo.cs"];
m22_0 [label="Entry CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="HeadingInfo.cs"];
m22_1 [label="this.tag = tag", span="21-21", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="HeadingInfo.cs"];
m22_2 [label="Exit CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", span="19-19", cluster="CSharpx.Maybe<T>.Maybe(CSharpx.MaybeType)", file="HeadingInfo.cs"];
m22_60 [label="Entry lambda expression", span="157-157", cluster="lambda expression", file="HeadingInfo.cs"];
m22_58 [label="CommandLine.Parsing.LongOptionParser", span="", cluster="lambda expression", file="HeadingInfo.cs"];
m22_61 [label="resultSelector(sourceValue, resultValue)", span="157-157", cluster="lambda expression", file="HeadingInfo.cs"];
m22_59 [label="Exit lambda expression", span="155-157", cluster="lambda expression", file="HeadingInfo.cs"];
m22_62 [label="Exit lambda expression", span="157-157", cluster="lambda expression", file="HeadingInfo.cs"];
m22_54 [label="return maybe.Bind(\r\n                sourceValue => valueSelector(sourceValue)\r\n                    .Map(\r\n                        resultValue => resultSelector(sourceValue, resultValue)));", span="154-157", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="HeadingInfo.cs"];
m22_74 [label="Entry CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="HeadingInfo.cs"];
m22_75 [label="return maybe.Tag == MaybeType.Just;", span="177-177", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="HeadingInfo.cs"];
m22_76 [label="Exit CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", span="175-175", cluster="CSharpx.MaybeExtensions.IsJust<T>(CSharpx.Maybe<T>)", file="HeadingInfo.cs"];
m22_55 [label="Exit CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="HeadingInfo.cs"];
m22_71 [label="Entry CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="HeadingInfo.cs"];
m22_72 [label="return maybe.Tag == MaybeType.Nothing;", span="172-172", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="HeadingInfo.cs"];
m22_73 [label="Exit CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", span="170-170", cluster="CSharpx.MaybeExtensions.IsNothing<T>(CSharpx.Maybe<T>)", file="HeadingInfo.cs"];
m22_46 [label="action(value)", span="139-139", cluster="CSharpx.MaybeExtensions.Do<T>(CSharpx.Maybe<T>, System.Action<T>)", file="HeadingInfo.cs"];
m22_53 [label="Entry CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", span="149-149", cluster="CSharpx.MaybeExtensions.SelectMany<TSource, TValue, TResult>(CSharpx.Maybe<TSource>, System.Func<TSource, CSharpx.Maybe<TValue>>, System.Func<TSource, TValue, TResult>)", file="HeadingInfo.cs"];
m22_47 [label="Entry CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", span="163-163", cluster="CommandLine.Parsing.ArgumentParser.EnsureOptionArrayAttributeIsNotBoundToScalar(CommandLine.Parsing.OptionInfo)", file="HeadingInfo.cs"];
m22_63 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="HeadingInfo.cs"];
m22_77 [label="CSharpx.Maybe<T>", span="", file="HeadingInfo.cs"];
m22_78 [label="CSharpx.Just<T>", span="", file="HeadingInfo.cs"];
m22_79 [label="System.Func<TSource, CSharpx.Maybe<TValue>>", span="", file="HeadingInfo.cs"];
m22_80 [label="System.Func<TSource, TValue, TResult>", span="", file="HeadingInfo.cs"];
m22_81 [label=TSource, span="", file="HeadingInfo.cs"];
m25_46 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_47 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="94-97", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_48 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="101-101", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_49 [label="Assert.Equal(''pre-options'', lines[0])", span="102-102", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_50 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="103-103", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_51 [label="Assert.Equal(''--shape          Define a enum value here.'', lines[2])", span="104-104", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_52 [label="Assert.Equal(''--help           Display this help screen.'', lines[3])", span="105-105", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_53 [label="Assert.Equal(''post-options'', lines[4])", span="106-106", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_54 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="90-90", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m25_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="79-79", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs"];
m25_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptions())\r\n                .AddPostOptionsLine(''post-options'')", span="50-53", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_25 [label="Assert.Equal(''pre-options'', lines[0])", span="58-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_26 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="59-59", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_27 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[2])", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_28 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[3])", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_29 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_30 [label="Assert.Equal(''post-options'', lines[5])", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_31 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m25_62 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_63 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="130-130", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_64 [label="sut.MaximumDisplayWidth = 40", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_65 [label="sut.AddOptions(new FakeOptionsWithLongDescription())", span="132-132", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_66 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_67 [label="lines[2].Should().Be(''  v, verbose    This is the description'')", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_68 [label="lines[3].Should().Be(''                of the verbosity to '')", span="138-138", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_69 [label="lines[4].Should().Be(''                test out the wrapping '')", span="139-139", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_70 [label="lines[5].Should().Be(''                capabilities of the '')", span="140-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_71 [label="lines[6].Should().Be(''                Help Text.'')", span="141-141", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_72 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m25_77 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_78 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="150-150", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_79 [label="sut.MaximumDisplayWidth = 40", span="151-151", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_80 [label="sut.AddOptions(new FakeOptionsWithLongDescriptionAndNoSpaces())", span="152-152", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_81 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="155-155", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_82 [label="lines[2].Should().Be(''  v, verbose    Before '')", span="156-156", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_83 [label="lines[3].Should().Be(''                012345678901234567890123'')", span="157-157", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_84 [label="lines[4].Should().Be(''                After'')", span="158-158", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_85 [label="lines[5].Should().Be(''  input-file    Before '')", span="159-159", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_86 [label="lines[6].Should().Be(''                012345678901234567890123'')", span="160-160", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_87 [label="lines[7].Should().Be(''                456789 After'')", span="161-161", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_88 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m25_194 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs"];
m25_169 [label="Entry Unk.True", span="", cluster="Unk.True", file="HelpTextTests.cs"];
m25_119 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="188-188", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs"];
m25_153 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_154 [label="var fakeResult = new ParserResult<FakeOptions>(\r\n                ParserResultType.Options,\r\n                new FakeOptions(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="255-263", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_155 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="266-266", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_156 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="269-269", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_157 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="271-271", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_158 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="272-272", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_159 [label="Assert.Equal(''ERROR(S):'', lines[2])", span="273-273", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_160 [label="Assert.Equal(''Token 'badtoken' is not recognized.'', lines[3])", span="274-274", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_161 [label="Assert.Equal(''A sequence option 'i' is defined with few items than required.'', lines[4])", span="275-275", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_162 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[5])", span="276-276", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_163 [label="Assert.Equal(''-i               Define a int sequence here.'', lines[6])", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_164 [label="Assert.Equal(''-x               Define a boolean or switch value here.'', lines[7])", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_165 [label="Assert.Equal(''--help           Display this help screen.'', lines[8])", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_166 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_168 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", file="HelpTextTests.cs"];
m25_35 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_36 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new FakeOptionsWithHelpTextEnum())\r\n                .AddPostOptionsLine(''post-options'')", span="72-75", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_37 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="79-79", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_38 [label="Assert.Equal(''pre-options'', lines[0])", span="80-80", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_39 [label="Assert.Equal(''--stringvalue    Define a string value here.'', lines[1])", span="81-81", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_40 [label="Assert.Equal(''--shape          Define a enum value here. Valid values: Circle, Square,'', lines[2])", span="82-82", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_41 [label="Assert.Equal(''Triangle'', lines[3])", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_42 [label="Assert.Equal(''--help           Display this help screen.'', lines[4])", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_43 [label="Assert.Equal(''post-options'', lines[5])", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_44 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="68-68", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m25_123 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m25_45 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", span="13-13", cluster="CommandLine.Tests.Fakes.FakeOptionsWithHelpTextEnum.FakeOptionsWithHelpTextEnum()", file="HelpTextTests.cs"];
m25_90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_91 [label="var sut = new HelpText(''Heading Info.'')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_92 [label="sut.MaximumDisplayWidth = 40", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new FakeOptionsForHelp())\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="172-174", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_94 [label="var lines = sut.ToString().Split(new string[] { Environment.NewLine }, StringSplitOptions.None)", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_95 [label="lines[1].Should().Be(''Before '')", span="178-178", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_96 [label="lines[2].Should().Be(''0123456789012345678901234567890123456789'')", span="179-179", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_97 [label="lines[3].Should().Be(''012 After'')", span="180-180", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_98 [label="lines[lines.Length - 3].Should().Be(''Before '')", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_99 [label="lines[lines.Length - 2].Should().Be(''0123456789012345678901234567890123456789'')", span="182-182", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_100 [label="lines[lines.Length - 1].Should().Be('' After'')", span="183-183", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m25_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m25_1 [label="Assert.Equal(string.Empty, new HelpText().ToString())", span="18-18", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m25_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m25_181 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_182 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="315-316", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_183 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(null, null, false)\r\n                    },\r\n                Maybe.Just(verbTypes))", span="317-324", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_184 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="327-327", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_185 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="330-330", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_186 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_187 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_188 [label="Assert.Equal(''add       Add file contents to the index.'', lines[2])", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_189 [label="Assert.Equal(''commit    Record changes to the repository.'', lines[3])", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_190 [label="Assert.Equal(''clone     Clone a repository into a new directory.'', lines[4])", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_191 [label="Assert.Equal(''help      Display more information on a specific command.'', lines[5])", span="337-337", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_192 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="312-312", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_131 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", span="399-399", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, int)", file="HelpTextTests.cs"];
m25_152 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs"];
m25_193 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs"];
m25_127 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="327-327", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs"];
m25_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="33-33", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs"];
m25_55 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m25_56 [label="var sut = new HelpText(''Meta Value.'')\r\n                .AddOptions(new FakeOptionsWithMetaValue())", span="115-116", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m25_57 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="119-119", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m25_58 [label="Assert.Equal(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'', lines[2])", span="121-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m25_59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="111-111", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m25_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="323-323", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs"];
m25_117 [label="Entry CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="23-23", cluster="CommandLine.ParserResult<T>.ParserResult(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="HelpTextTests.cs"];
m25_129 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="353-353", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs"];
m25_61 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithMetaValue.FakeOptionsWithMetaValue()", file="HelpTextTests.cs"];
m25_125 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m25_132 [label="Entry lambda expression", span="209-232", cluster="lambda expression", file="HelpTextTests.cs"];
m25_133 [label="err.Tag", span="211-211", cluster="lambda expression", file="HelpTextTests.cs"];
m25_135 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="214-214", cluster="lambda expression", file="HelpTextTests.cs"];
m25_137 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="216-216", cluster="lambda expression", file="HelpTextTests.cs"];
m25_139 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="218-218", cluster="lambda expression", file="HelpTextTests.cs"];
m25_141 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="220-220", cluster="lambda expression", file="HelpTextTests.cs"];
m25_143 [label="return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;", span="222-222", cluster="lambda expression", file="HelpTextTests.cs"];
m25_145 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="224-224", cluster="lambda expression", file="HelpTextTests.cs"];
m25_149 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="228-228", cluster="lambda expression", file="HelpTextTests.cs"];
m25_134 [label="ErrorType.BadFormatTokenError", span="213-213", cluster="lambda expression", file="HelpTextTests.cs"];
m25_136 [label="ErrorType.MissingValueOptionError", span="215-215", cluster="lambda expression", file="HelpTextTests.cs"];
m25_138 [label="ErrorType.UnknownOptionError", span="217-217", cluster="lambda expression", file="HelpTextTests.cs"];
m25_140 [label="ErrorType.MissingRequiredOptionError", span="219-219", cluster="lambda expression", file="HelpTextTests.cs"];
m25_142 [label="ErrorType.MutuallyExclusiveSetError", span="221-221", cluster="lambda expression", file="HelpTextTests.cs"];
m25_144 [label="ErrorType.SequenceOutOfRangeError", span="223-223", cluster="lambda expression", file="HelpTextTests.cs"];
m25_146 [label="ErrorType.NoVerbSelectedError", span="225-225", cluster="lambda expression", file="HelpTextTests.cs"];
m25_148 [label="ErrorType.BadVerbSelectedError", span="227-227", cluster="lambda expression", file="HelpTextTests.cs"];
m25_150 [label="throw new InvalidOperationException();", span="230-230", cluster="lambda expression", file="HelpTextTests.cs"];
m25_147 [label="return ''ERR no-verb-selected'';", span="226-226", cluster="lambda expression", file="HelpTextTests.cs"];
m25_151 [label="Exit lambda expression", span="209-232", cluster="lambda expression", file="HelpTextTests.cs"];
m25_60 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="56-56", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs"];
m25_120 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m25_75 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpTextTests.cs"];
m25_76 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="HelpTextTests.cs"];
m25_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="427-427", cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs"];
m25_33 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(T)", span="343-343", cluster="CommandLine.Text.HelpText.AddOptions<T>(T)", file="HelpTextTests.cs"];
m25_195 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpTextTests.cs"];
m25_102 [label="Entry CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsForHelp.FakeOptionsForHelp()", file="HelpTextTests.cs"];
m25_126 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="391-391", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs"];
m25_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="37-37", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs"];
m25_89 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", span="31-31", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescriptionAndNoSpaces.FakeOptionsWithLongDescriptionAndNoSpaces()", file="HelpTextTests.cs"];
m25_122 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs"];
m25_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="59-59", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs"];
m25_167 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m25_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs"];
m25_124 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m25_21 [label="Entry string.ToNotEmptyLines()", span="9-9", cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs"];
m25_118 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="HelpTextTests.cs"];
m25_130 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpTextTests.cs"];
m25_121 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs"];
m25_32 [label="Entry CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptions.FakeOptions()", file="HelpTextTests.cs"];
m25_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_9 [label="Assert.Equal(''Unit-tests 2.0'', lines[0])", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_10 [label="Assert.Equal(''Copyright (C) 2005 - 2013 Author'', lines[1])", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_11 [label="Assert.Equal(''pre-options line 1'', lines[2])", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_12 [label="Assert.Equal(''pre-options line 2'', lines[3])", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_13 [label="Assert.Equal(''post-options line 1'', lines[4])", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_14 [label="Assert.Equal(''post-options line 2'', lines[5])", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m25_103 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_104 [label="var fakeResult = new ParserResult<NullInstance>(\r\n                ParserResultType.Options,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new MutuallyExclusiveSetError(new NameInfo(''z'', '''')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false), // should be ignored \r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="192-208", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_105 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.MutuallyExclusiveSetError:\r\n                            return ''ERR '' + ((MutuallyExclusiveSetError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="209-232", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, 2)", span="235-235", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_107 [label="var lines = errorsText.ToNotEmptyLines()", span="238-238", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_108 [label="Assert.Equal(''  ERR badtoken'', lines[0])", span="240-240", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_109 [label="Assert.Equal(''  ERR x, switch'', lines[1])", span="241-241", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_110 [label="Assert.Equal(''  ERR unknown'', lines[2])", span="242-242", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_111 [label="Assert.Equal(''  ERR missing'', lines[3])", span="243-243", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_112 [label="Assert.Equal(''  ERR z'', lines[4])", span="244-244", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_113 [label="Assert.Equal(''  ERR s, sequence'', lines[5])", span="245-245", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_114 [label="Assert.Equal(''  ERR no-verb-selected'', lines[6])", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_115 [label="Assert.Equal(''  ERR badverb'', lines[7])", span="247-247", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_116 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_170 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_171 [label="var fakeResult = new ParserResult<object>(\r\n                ParserResultType.Verbs,\r\n                new NullInstance(),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    },\r\n                Maybe.Nothing<IEnumerable<Type>>())", span="287-294", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_172 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="297-297", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_173 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="300-300", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_174 [label="Assert.True(lines[0].StartsWith(''CommandLine'', StringComparison.Ordinal))", span="302-302", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_175 [label="Assert.True(lines[1].StartsWith(''Copyright (c)'', StringComparison.Ordinal))", span="303-303", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_176 [label="Assert.Equal(''-p, --patch    Use the interactive patch selection interface to chose which'', lines[2])", span="304-304", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_177 [label="Assert.Equal(''changes to commit.'', lines[3])", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_178 [label="Assert.Equal(''--amend        Used to amend the tip of the current branch.'', lines[4])", span="306-306", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_179 [label="Assert.Equal(''--help         Display this help screen.'', lines[5])", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_180 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="284-284", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m25_34 [label="Entry string[].TrimStringArray()", span="14-14", cluster="string[].TrimStringArray()", file="HelpTextTests.cs"];
m25_128 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs"];
m25_5 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="HelpTextTests.cs"];
m25_74 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs"];
m25_73 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", span="22-22", cluster="CommandLine.Tests.Fakes.FakeOptionsWithLongDescription.FakeOptionsWithLongDescription()", file="HelpTextTests.cs"];
m28_66 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraint.FakeOptionsWithSequenceAndOnlyMinConstraint()", file="InstanceBuilderTests.cs"];
m28_28 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="57-57", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m28_77 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                new[] { ''-s'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="184-188", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m28_78 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="191-191", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m28_46 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="InstanceBuilderTests.cs"];
m28_26 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithDouble(),\r\n                new[] { ''0.123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="63-67", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m28_45 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", span="95-95", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs"];
m28_49 [label="Exit lambda expression", span="102-102", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_44 [label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="108-108", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs"];
m28_74 [label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="90-90", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_36 [label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="89-89", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m28_42 [label="var expectedResult = new[] { 1, 20, 300, 4000 }", span="98-98", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs"];
m28_43 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequence(),\r\n                new[] { ''--int-seq'', ''1'', ''20'', ''300'', ''4000'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="101-105", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence()", file="InstanceBuilderTests.cs"];
m28_90 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m28_157 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="373-373", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m28_161 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="396-396", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m28_158 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="376-382", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m28_160 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="386-393", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m28_159 [label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="383-383", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m28_162 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="373-373", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs"];
m28_249 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="560-560", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_251 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-zx'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="566-570", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_252 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="573-573", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_250 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="563-563", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_253 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="560-560", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_34 [label="var expectedResult = -.123D", span="79-79", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m28_64 [label="new FakeOptionsWithSequenceAndOnlyMinConstraint()", span="144-144", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_65 [label="Exit lambda expression", span="144-144", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_117 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", span="14-14", cluster="CommandLine.Tests.Fakes.FakeOptionsWithEnum.FakeOptionsWithEnum()", file="InstanceBuilderTests.cs"];
m28_194 [label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", span="2-2", cluster="CommandLine.Tests.Fakes.FakeOptionWithRequiredAndSet.FakeOptionWithRequiredAndSet()", file="InstanceBuilderTests.cs"];
m28_103 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="236-236", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_104 [label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="239-239", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs"];
m28_105 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue(),\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="242-246", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=1, file="InstanceBuilderTests.cs"];
m28_106 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="249-249", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", color=green, community=0, file="InstanceBuilderTests.cs"];
m28_107 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="236-236", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_237 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="272-272", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs"];
m28_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="16-16", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m28_1 [label="var fakeOptions = new FakeOptions()", span="19-19", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m28_2 [label="var expectedResult = ParserResult.Create(\r\n                ParserResultType.Options,\r\n                fakeOptions, new Error[] { new HelpRequestedError() })", span="20-22", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m28_174 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="InstanceBuilderTests.cs"];
m28_9 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m28_57 [label="new FakeOptions()", span="121-121", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(tokens, name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="24-24", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_241 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="541-541", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_243 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-z'', ''-x'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="547-551", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_244 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="554-554", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_242 [label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="544-544", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_245 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="541-541", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_30 [label="new FakeOptionsWithDouble()", span="64-64", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_7 [label="return explodedTokens;", span="25-25", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_118 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="InstanceBuilderTests.cs"];
m28_76 [label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="181-181", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m28_41 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="InstanceBuilderTests.cs"];
m28_163 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m28_94 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", file="InstanceBuilderTests.cs"];
m28_18 [label="Assert.Equal(expectedResult, result.Value.LongValue)", span="51-51", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m28_67 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="InstanceBuilderTests.cs"];
m28_68 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceBuilderTests.cs"];
m28_69 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="InstanceBuilderTests.cs"];
m28_70 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_40 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_56 [label="Entry lambda expression", span="121-121", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_175 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_5 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="16-16", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m28_12 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_16 [label="var expectedResult = -123", span="41-41", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", color=green, community=0];
m28_4 [label="Assert.True(expectedResult.Equals(result))", span="32-32", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs"];
m28_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="InstanceBuilderTests.cs"];
m28_15 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", span="38-38", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs"];
m28_8 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="103-103", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs"];
m28_13 [label=fakeOptions, span="26-26", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_17 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-123'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="44-48", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_int_value()", file="InstanceBuilderTests.cs", color=green, community=0];
m28_38 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_37 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="76-76", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m28_39 [label="new FakeOptionsWithDouble()", span="83-83", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_51 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="114-114", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m28_54 [label="Assert.True(expectedResult.SequenceEqual(result.Value.IntSequence))", span="127-127", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m28_59 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="138-138", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs"];
m28_50 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequence.FakeOptionsWithSequence()", file="InstanceBuilderTests.cs"];
m28_53 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''-i'', ''10'', ''20'', ''30'', ''40'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="120-124", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m28_61 [label="Assert.True(expected.SequenceEqual(result.Value.StringSequence))", span="150-150", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs"];
m28_52 [label="var expectedResult = new[] { 10, 20, 30, 40 }", span="117-117", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m28_55 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", span="114-114", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range()", file="InstanceBuilderTests.cs"];
m28_58 [label="Exit lambda expression", span="121-121", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_60 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMinConstraint(),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="143-147", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs"];
m28_62 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="138-138", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs"];
m28_63 [label="Entry lambda expression", span="144-144", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_71 [label="Entry lambda expression", span="166-166", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_73 [label="Exit lambda expression", span="166-166", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_72 [label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="166-166", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_75 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="178-178", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m28_21 [label="var firstArg = arguments.First()", span="45-45", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m28_108 [label="Entry lambda expression", span="243-243", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_109 [label="new FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="243-243", cluster="lambda expression", color=green, community=0, file="InstanceBuilderTests.cs"];
m28_110 [label="Exit lambda expression", span="243-243", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_23 [label="var verbs = Verb.SelectFromTypes(types)", span="51-51", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", color=red, community=0];
m28_22 [label="Func<string, bool> preprocCompare = command =>\r\n                    nameComparer.Equals(command, firstArg) ||\r\n                    nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="47-49", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m28_29 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceBuilderTests.cs"];
m28_47 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="InstanceBuilderTests.cs"];
m28_82 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_91 [label="Entry lambda expression", span="204-204", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_100 [label="Entry lambda expression", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_119 [label="Entry lambda expression", span="265-265", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_128 [label="Entry lambda expression", span="290-290", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_137 [label="Entry lambda expression", span="312-312", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_146 [label="Entry lambda expression", span="335-335", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_154 [label="Entry lambda expression", span="358-358", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_185 [label="Entry lambda expression", span="413-413", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_195 [label="Entry lambda expression", span="433-433", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_203 [label="Entry lambda expression", span="453-453", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_212 [label="Entry lambda expression", span="473-473", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_220 [label="Entry lambda expression", span="491-491", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_229 [label="Entry lambda expression", span="510-510", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_238 [label="Entry lambda expression", span="529-529", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_246 [label="Entry lambda expression", span="548-548", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_254 [label="Entry lambda expression", span="567-567", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs"];
m28_31 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="InstanceBuilderTests.cs"];
m28_48 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceBuilderTests.cs"];
m28_84 [label=firstArg, span="", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_83 [label="System.StringComparer", span="", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_93 [label="Exit lambda expression", span="204-204", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_92 [label="new FakeOptionsWithSequenceAndOnlyMinConstraintAsValue()", span="204-204", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_102 [label="Exit lambda expression", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_101 [label="new FakeOptionsWithSequenceAndOnlyMaxConstraint()", span="224-224", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_121 [label="Exit lambda expression", span="265-265", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_120 [label="new FakeOptionsWithEnum()", span="265-265", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_130 [label="Exit lambda expression", span="290-290", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_129 [label="new FakeOptionsWithValues()", span="290-290", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_139 [label="Exit lambda expression", span="312-312", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_138 [label="new FakeOptionsWithSequenceWithoutRange()", span="312-312", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_148 [label="Exit lambda expression", span="335-335", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_147 [label="new FakeOptionsWithSequenceAndSeparator()", span="335-335", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_156 [label="Exit lambda expression", span="358-358", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_155 [label="new FakeOptionsWithSequenceAndSeparator()", span="358-358", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_187 [label="Exit lambda expression", span="413-413", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_186 [label="new FakeOptionsWithSets()", span="413-413", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_197 [label="Exit lambda expression", span="433-433", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_196 [label="new FakeOptionWithRequiredAndSet()", span="433-433", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_205 [label="Exit lambda expression", span="453-453", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_204 [label="new FakeOptionWithRequiredAndSet()", span="453-453", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_214 [label="Exit lambda expression", span="473-473", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_213 [label="new FakeOptionWithRequiredAndSet()", span="473-473", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_222 [label="Exit lambda expression", span="491-491", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_221 [label="new FakeOptionWithRequired()", span="491-491", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_231 [label="Exit lambda expression", span="510-510", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_230 [label="new FakeOptions()", span="510-510", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_240 [label="Exit lambda expression", span="529-529", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_239 [label="new FakeOptions()", span="529-529", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_248 [label="Exit lambda expression", span="548-548", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_247 [label="new FakeOptions()", span="548-548", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_256 [label="Exit lambda expression", span="567-567", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_255 [label="new FakeOptions()", span="567-567", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_165 [label="new FakeOptionsWithValues()", span="387-387", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_164 [label="Entry lambda expression", span="387-387", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_166 [label="Exit lambda expression", span="387-387", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_167 [label="Entry lambda expression", span="388-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_169 [label="Exit lambda expression", span="388-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_168 [label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="389-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_172 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="390-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_176 [label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="390-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_171 [label="Entry lambda expression", span="390-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_173 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_177 [label="Exit lambda expression", span="390-390", cluster="lambda expression", file="InstanceBuilderTests.cs"];
m28_80 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m28_32 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithDouble.FakeOptionsWithDouble()", file="InstanceBuilderTests.cs"];
m28_10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="46-46", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceBuilderTests.cs"];
m28_27 [label="Assert.Equal(expectedResult, result.Value.DoubleValue)", span="70-70", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m28_145 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndSeparator.FakeOptionsWithSequenceAndSeparator()", file="InstanceBuilderTests.cs"];
m28_170 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="InstanceBuilderTests.cs"];
m28_184 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m28_223 [label="Entry CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionWithRequired.FakeOptionWithRequired()", file="InstanceBuilderTests.cs"];
m28_19 [label="arguments.Empty()", span="40-40", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs", color=red, community=0];
m28_127 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", span="6-6", cluster="CommandLine.Tests.Fakes.FakeOptionsWithValues.FakeOptionsWithValues()", file="InstanceBuilderTests.cs"];
m28_33 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", span="76-76", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_double_value()", file="InstanceBuilderTests.cs"];
m28_224 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="503-503", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_226 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new [] { ''-i'', ''10'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="509-513", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_225 [label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="506-506", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_227 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="516-516", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_228 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="503-503", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_79 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="178-178", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs"];
m28_178 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs"];
m28_3 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilderTests.cs"];
m28_215 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="484-484", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m28_217 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequired(),\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="490-494", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m28_218 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="497-497", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m28_216 [label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="487-487", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m28_219 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="484-484", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs"];
m28_206 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="464-464", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m28_208 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] {''''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="472-476", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m28_209 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="479-479", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m28_207 [label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="466-470", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m28_210 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="464-464", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs"];
m28_140 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="324-324", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_142 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''--long-seq'', ''1;1234;59678'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="334-338", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_141 [label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n                {\r\n                    LongSequence = new[] { 1L, 1234L, 59678L },\r\n                    StringSequence = new string[] { }\r\n                }", span="327-331", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_143 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="341-341", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_144 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", span="324-324", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_85 [label="System.Collections.Generic.IEnumerable<string>", span="", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs"];
m28_87 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span="", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs"];
m28_86 [label="System.StringComparer", span="", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs"];
m28_88 [label=string, span="", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs"];
m28_89 [label="System.StringComparer", span="", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_an_error()", file="InstanceBuilderTests.cs"];
m28_95 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="217-217", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_97 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndOnlyMaxConstraint(),\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="223-227", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_96 [label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="220-220", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_98 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="230-230", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_99 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="217-217", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs"];
m28_122 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="277-277", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m28_124 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithValues(),\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="289-293", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m28_123 [label="var expectedResult = new FakeOptionsWithValues\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="280-286", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m28_125 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="296-296", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m28_126 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="277-277", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs"];
m28_20 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InstanceBuilderTests.cs"];
m28_24 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", span="57-57", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m28_25 [label="var expectedResult = .123D", span="60-60", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value()", file="InstanceBuilderTests.cs"];
m28_188 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", span="4-4", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSets.FakeOptionsWithSets()", file="InstanceBuilderTests.cs"];
m28_149 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="347-347", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_151 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceAndSeparator(),\r\n                new[] { ''-s'', ''eml1@xyz.com,test@unit.org,xyz@srv.it'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="357-361", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_150 [label="var expectedResult = new FakeOptionsWithSequenceAndSeparator\r\n            {\r\n                LongSequence = new long[] {},\r\n                StringSequence = new[] { ''eml1@xyz.com'', ''test@unit.org'', ''xyz@srv.it'' }\r\n            }", span="350-354", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_152 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="364-364", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_153 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", span="347-347", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator()", file="InstanceBuilderTests.cs"];
m28_81 [label="System.StringComparer", span="", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs"];
m28_112 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="255-255", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m28_114 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithEnum(),\r\n                new[] { ''--colors'', ''Green'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="264-268", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m28_113 [label="var expectedResult = new FakeOptionsWithEnum\r\n                {\r\n                    Colors = Colors.Green\r\n                }", span="258-261", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m28_115 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="271-271", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m28_116 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", span="255-255", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value()", file="InstanceBuilderTests.cs"];
m28_136 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceWithoutRange.FakeOptionsWithSequenceWithoutRange()", file="InstanceBuilderTests.cs"];
m28_35 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="432-432", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceBuilderTests.cs"];
m28_211 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs"];
m28_232 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="522-522", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_234 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptions(),\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="528-532", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_235 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="535-535", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_233 [label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="525-525", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_236 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="522-522", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs"];
m28_198 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="445-445", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m28_200 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="452-456", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m28_199 [label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="447-450", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m28_201 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="459-459", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m28_202 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="445-445", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs"];
m28_111 [label="Entry CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", span="7-7", cluster="CommandLine.Tests.Fakes.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue()", file="InstanceBuilderTests.cs"];
m28_189 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="425-425", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m28_191 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionWithRequiredAndSet(),\r\n                new[] { ''--ftpurl'', ''str1''},\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="432-436", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m28_190 [label="var expectedResult = new FakeOptionWithRequiredAndSet {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = null\r\n            }", span="427-430", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m28_192 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="439-439", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m28_193 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", span="425-425", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_one_is_true()", file="InstanceBuilderTests.cs"];
m28_179 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="402-402", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m28_181 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSets(),\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="412-416", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m28_182 [label="Assert.True(expectedResult.SequenceEqual(result.Errors))", span="419-419", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m28_180 [label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl'')),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''))\r\n                }", span="405-409", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m28_183 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="402-402", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs"];
m28_131 [label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="302-302", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m28_133 [label="var result = InstanceBuilder.Build(\r\n                () => new FakeOptionsWithSequenceWithoutRange(),\r\n                new[] { ''1'', ''2'', ''3'', ''4'', ''5'', ''6'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="311-315", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m28_132 [label="var expectedResult = new FakeOptionsWithSequenceWithoutRange\r\n                {\r\n                    LongSequence = new[] { 1L, 2L, 3L, 4L, 5L, 6L }\r\n                }", span="305-308", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m28_134 [label="expectedResult.ShouldBeEquivalentTo(result.Value)", span="318-318", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m28_135 [label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", span="302-302", cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints()", file="InstanceBuilderTests.cs"];
m28_257 [label=fakeOptions, span="", file="InstanceBuilderTests.cs"];
m28_258 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="InstanceBuilderTests.cs"];
m31_87 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="271-271", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_94 [label="parserResult == null", span="273-273", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_96 [label="current == null", span="274-274", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_98 [label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="276-276", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_99 [label="return current;", span="277-277", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_100 [label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="279-282", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_102 [label="return current;", span="284-284", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_103 [label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="286-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_105 [label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="290-291", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_106 [label="return current;", span="293-293", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_95 [label="throw new ArgumentNullException(''parserResult'');", span="273-273", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_97 [label="throw new ArgumentNullException(''current'');", span="274-274", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_101 [label="string.IsNullOrEmpty(errors)", span="283-283", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_104 [label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="288-289", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_107 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="271-271", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_108 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="Maybe.cs"];
m31_46 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="Maybe.cs"];
m31_180 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)", file="Maybe.cs"];
m31_0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="Maybe.cs"];
m31_1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()", file="Maybe.cs"];
m31_298 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)", file="Maybe.cs"];
m31_380 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()", file="Maybe.cs"];
m31_243 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Maybe.cs"];
m31_49 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="331-331", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_129 [label="result == null", span="334-334", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_131 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Single),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="336-339", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_130 [label="throw new ArgumentNullException(''result'');", span="334-334", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_132 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="331-331", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_187 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()", file="Maybe.cs"];
m31_186 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="Maybe.cs"];
m31_77 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="Maybe.cs"];
m31_75 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="Maybe.cs"];
m31_322 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="Maybe.cs"];
m31_167 [label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57", cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", file="Maybe.cs"];
m31_121 [label="Entry CommandLine.Text.HelpText.ToString()", span="432-432", cluster="CommandLine.Text.HelpText.ToString()", file="Maybe.cs"];
m31_181 [label="int ExtraLength = 10", span="434-434", cluster="CommandLine.Text.HelpText.ToString()", file="Maybe.cs"];
m31_182 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="435-447", cluster="CommandLine.Text.HelpText.ToString()", file="Maybe.cs"];
m31_183 [label="Exit CommandLine.Text.HelpText.ToString()", span="432-432", cluster="CommandLine.Text.HelpText.ToString()", file="Maybe.cs"];
m31_184 [label="Entry string.SafeLength()", span="40-40", cluster="string.SafeLength()", file="Maybe.cs"];
m31_125 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="321-321", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Maybe.cs"];
m31_126 [label="return AddLine(postOptionsHelp, value);", span="323-323", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Maybe.cs"];
m31_127 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="321-321", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="Maybe.cs"];
m31_110 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="Maybe.cs"];
m31_346 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="696-696", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_349 [label="var specLength = 0", span="698-698", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_350 [label="var hasShort = spec.ShortName.Length > 0", span="700-700", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_351 [label="var hasLong = spec.LongName.Length > 0", span="701-701", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_353 [label="spec.MetaValue.Length > 0", span="704-704", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_354 [label="metaLength = spec.MetaValue.Length + 1", span="705-705", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_361 [label="specLength += spec.LongName.Length", span="718-718", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_356 [label="++specLength", span="709-709", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_366 [label="specLength += 2", span="726-726", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_367 [label="return specLength;", span="728-728", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_355 [label=hasShort, span="707-707", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_365 [label="hasShort && hasLong", span="725-725", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_352 [label="var metaLength = 0", span="703-703", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_360 [label=hasLong, span="716-716", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_359 [label="specLength += metaLength", span="713-713", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_364 [label="specLength += metaLength", span="722-722", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_357 [label=AddDashesToOption, span="710-710", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_358 [label="++specLength", span="711-711", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_362 [label=AddDashesToOption, span="719-719", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_363 [label="specLength += 2", span="720-720", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_368 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="696-696", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_244 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="521-528", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="Maybe.cs"];
m31_142 [label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="519-519", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="Maybe.cs"];
m31_245 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="519-519", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="Maybe.cs"];
m31_301 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="Maybe.cs"];
m31_185 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()", file="Maybe.cs"];
m31_246 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Maybe.cs"];
m31_300 [label="Entry string.FormatInvariant(params object[])", span="20-20", cluster="string.FormatInvariant(params object[])", file="Maybe.cs"];
m31_23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Maybe.cs"];
m31_217 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="Maybe.cs"];
m31_109 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="398-398", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_155 [label="parserResult == null", span="404-404", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_157 [label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="406-407", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_161 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="412-420", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_162 [label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="422-425", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_156 [label="throw new ArgumentNullException(''parserResult'');", span="404-404", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_158 [label="meaningfulErrors.Empty()", span="408-408", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_159 [label="return string.Empty;", span="409-409", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_160 [label="var text = new StringBuilder()", span="411-411", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_163 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="398-398", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="Maybe.cs"];
m31_41 [label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="450-450", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Maybe.cs"];
m31_188 [label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="452-452", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Maybe.cs"];
m31_189 [label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="450-450", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Maybe.cs"];
m31_234 [label="Entry System.Type.GetUsageData()", span="39-39", cluster="System.Type.GetUsageData()", file="Maybe.cs"];
m31_321 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="Maybe.cs"];
m31_47 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="Maybe.cs"];
m31_44 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="Maybe.cs"];
m31_259 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="576-576", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_267 [label="optionsHelp.Append(''  '')", span="578-578", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_268 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="579-583", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_269 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="585-587", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_270 [label="var optionHelpText = specification.HelpText", span="589-589", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_271 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="591-591", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_272 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="592-592", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_273 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="594-595", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_274 [label="specification.Required", span="597-597", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_275 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="598-598", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_281 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="608-608", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_284 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="612-612", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_287 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="618-618", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_288 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="620-620", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_289 [label="wordBuffer = widthOfHelpText", span="621-621", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_292 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="629-630", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_293 [label="optionHelpText.Length > widthOfHelpText", span="632-632", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_276 [label="!string.IsNullOrEmpty(optionHelpText)", span="600-600", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_278 [label="var words = optionHelpText.Split(' ')", span="605-605", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_291 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="628-628", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_294 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="635-638", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_277 [label="var wordBuffer = 0", span="604-604", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_283 [label="wordBuffer += words[i].Length", span="611-611", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_279 [label="var i = 0", span="606-606", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_280 [label="i < words.Length", span="606-606", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_282 [label="optionsHelp.Append(words[i])", span="610-610", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_290 [label="i++", span="606-606", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_286 [label="wordBuffer++", span="615-615", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_285 [label="optionsHelp.Append('' '')", span="614-614", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_295 [label="return this;", span="640-640", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_296 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="576-576", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="Maybe.cs"];
m31_263 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="559-559", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="Maybe.cs"];
m31_225 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="559-559", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="Maybe.cs"];
m31_262 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="561-566", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="Maybe.cs"];
m31_323 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="Maybe.cs"];
m31_112 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="Maybe.cs"];
m31_342 [label="Entry lambda expression", span="685-692", cluster="lambda expression", file="Maybe.cs"];
m31_51 [label="license.AddToHelpText(auto, true)", span="220-220", cluster="lambda expression", file="Maybe.cs"];
m31_55 [label="usage.AddToHelpText(auto, true)", span="223-223", cluster="lambda expression", file="Maybe.cs"];
m31_50 [label="Entry lambda expression", span="220-220", cluster="lambda expression", file="Maybe.cs"];
m31_54 [label="Entry lambda expression", span="223-223", cluster="lambda expression", file="Maybe.cs"];
m31_57 [label="Entry lambda expression", span="225-225", cluster="lambda expression", file="Maybe.cs"];
m31_52 [label="Exit lambda expression", span="220-220", cluster="lambda expression", file="Maybe.cs"];
m31_56 [label="Exit lambda expression", span="223-223", cluster="lambda expression", file="Maybe.cs"];
m31_58 [label="e.Tag == ErrorType.NoVerbSelectedError", span="225-225", cluster="lambda expression", file="Maybe.cs"];
m31_59 [label="Exit lambda expression", span="225-225", cluster="lambda expression", file="Maybe.cs"];
m31_85 [label="DefaultParsingErrorsHandler(parserResult, current)", span="257-257", cluster="lambda expression", file="Maybe.cs"];
m31_92 [label="DefaultParsingErrorsHandler(parserResult, current)", span="263-263", cluster="lambda expression", file="Maybe.cs"];
m31_78 [label="Entry lambda expression", span="253-253", cluster="lambda expression", file="Maybe.cs"];
m31_81 [label="Entry lambda expression", span="256-256", cluster="lambda expression", file="Maybe.cs"];
m31_89 [label="DefaultParsingErrorsHandler(pr, current)", span="262-262", cluster="lambda expression", file="Maybe.cs"];
m31_88 [label="Entry lambda expression", span="262-262", cluster="lambda expression", file="Maybe.cs"];
m31_91 [label="Entry lambda expression", span="263-263", cluster="lambda expression", file="Maybe.cs"];
m31_84 [label="Entry lambda expression", span="257-257", cluster="lambda expression", file="Maybe.cs"];
m31_79 [label="e.Tag == ErrorType.VersionRequestedError", span="253-253", cluster="lambda expression", file="Maybe.cs"];
m31_80 [label="Exit lambda expression", span="253-253", cluster="lambda expression", file="Maybe.cs"];
m31_82 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="256-256", cluster="lambda expression", file="Maybe.cs"];
m31_83 [label="Exit lambda expression", span="256-256", cluster="lambda expression", file="Maybe.cs"];
m31_86 [label="Exit lambda expression", span="257-257", cluster="lambda expression", file="Maybe.cs"];
m31_90 [label="Exit lambda expression", span="262-262", cluster="lambda expression", file="Maybe.cs"];
m31_93 [label="Exit lambda expression", span="263-263", cluster="lambda expression", file="Maybe.cs"];
m31_116 [label="current.AddPreOptionsLine(line)", span="291-291", cluster="lambda expression", file="Maybe.cs"];
m31_115 [label="Entry lambda expression", span="291-291", cluster="lambda expression", file="Maybe.cs"];
m31_117 [label="Exit lambda expression", span="291-291", cluster="lambda expression", file="Maybe.cs"];
m31_173 [label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="417-418", cluster="lambda expression", file="Maybe.cs"];
m31_174 [label="text.AppendLine(line.ToString())", span="419-419", cluster="lambda expression", file="Maybe.cs"];
m31_169 [label="Entry lambda expression", span="413-413", cluster="lambda expression", file="Maybe.cs"];
m31_172 [label="Entry lambda expression", span="415-420", cluster="lambda expression", file="Maybe.cs"];
m31_170 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="413-413", cluster="lambda expression", file="Maybe.cs"];
m31_171 [label="Exit lambda expression", span="413-413", cluster="lambda expression", file="Maybe.cs"];
m31_175 [label="Exit lambda expression", span="415-420", cluster="lambda expression", file="Maybe.cs"];
m31_190 [label="Entry lambda expression", span="452-452", cluster="lambda expression", file="Maybe.cs"];
m31_191 [label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="452-452", cluster="lambda expression", file="Maybe.cs"];
m31_192 [label="Exit lambda expression", span="452-452", cluster="lambda expression", file="Maybe.cs"];
m31_228 [label="Entry lambda expression", span="499-499", cluster="lambda expression", file="Maybe.cs"];
m31_229 [label="v.Index", span="499-499", cluster="lambda expression", file="Maybe.cs"];
m31_230 [label="Exit lambda expression", span="499-499", cluster="lambda expression", file="Maybe.cs"];
m31_236 [label="Entry lambda expression", span="508-516", cluster="lambda expression", file="Maybe.cs"];
m31_237 [label="var prop = tuple.Item1", span="510-510", cluster="lambda expression", file="Maybe.cs"];
m31_238 [label="var attr = tuple.Item2", span="511-511", cluster="lambda expression", file="Maybe.cs"];
m31_239 [label="var examples = (IEnumerable<Example>)prop.GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="513-513", cluster="lambda expression", file="Maybe.cs"];
m31_240 [label="return Tuple.Create(attr.Groups, examples);", span="515-515", cluster="lambda expression", file="Maybe.cs"];
m31_241 [label="Exit lambda expression", span="508-516", cluster="lambda expression", file="Maybe.cs"];
m31_257 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="544-544", cluster="lambda expression", file="Maybe.cs"];
m31_256 [label="Entry lambda expression", span="543-544", cluster="lambda expression", file="Maybe.cs"];
m31_258 [label="Exit lambda expression", span="543-544", cluster="lambda expression", file="Maybe.cs"];
m31_304 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="582-582", cluster="lambda expression", file="Maybe.cs"];
m31_308 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="583-583", cluster="lambda expression", file="Maybe.cs"];
m31_303 [label="Entry lambda expression", span="582-582", cluster="lambda expression", file="Maybe.cs"];
m31_307 [label="Entry lambda expression", span="583-583", cluster="lambda expression", file="Maybe.cs"];
m31_311 [label="Entry lambda expression", span="595-595", cluster="lambda expression", file="Maybe.cs"];
m31_312 [label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="595-595", cluster="lambda expression", file="Maybe.cs"];
m31_305 [label="Exit lambda expression", span="582-582", cluster="lambda expression", file="Maybe.cs"];
m31_309 [label="Exit lambda expression", span="583-583", cluster="lambda expression", file="Maybe.cs"];
m31_313 [label="Exit lambda expression", span="595-595", cluster="lambda expression", file="Maybe.cs"];
m31_319 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="649-653", cluster="lambda expression", file="Maybe.cs"];
m31_325 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="656-659", cluster="lambda expression", file="Maybe.cs"];
m31_318 [label="Entry lambda expression", span="649-653", cluster="lambda expression", file="Maybe.cs"];
m31_324 [label="Entry lambda expression", span="656-659", cluster="lambda expression", file="Maybe.cs"];
m31_320 [label="Exit lambda expression", span="649-653", cluster="lambda expression", file="Maybe.cs"];
m31_326 [label="Exit lambda expression", span="656-659", cluster="lambda expression", file="Maybe.cs"];
m31_330 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="668-668", cluster="lambda expression", file="Maybe.cs"];
m31_334 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="669-669", cluster="lambda expression", file="Maybe.cs"];
m31_329 [label="Entry lambda expression", span="668-668", cluster="lambda expression", file="Maybe.cs"];
m31_333 [label="Entry lambda expression", span="669-669", cluster="lambda expression", file="Maybe.cs"];
m31_331 [label="Exit lambda expression", span="668-668", cluster="lambda expression", file="Maybe.cs"];
m31_335 [label="Exit lambda expression", span="669-669", cluster="lambda expression", file="Maybe.cs"];
m31_343 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="687-689", cluster="lambda expression", file="Maybe.cs"];
m31_344 [label="return Math.Max(length, specLength);", span="691-691", cluster="lambda expression", file="Maybe.cs"];
m31_345 [label="Exit lambda expression", span="685-692", cluster="lambda expression", file="Maybe.cs"];
m31_317 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="Maybe.cs"];
m31_72 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="Maybe.cs"];
m31_306 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="643-643", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_315 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="645-660", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_316 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="643-643", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="Maybe.cs"];
m31_4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="Maybe.cs"];
m31_5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)", file="Maybe.cs"];
m31_248 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="Maybe.cs"];
m31_25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="195-195", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="200-205", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="211-211", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_31 [label="auto = onError(auto)", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_34 [label="(verbsIndex && parserResult.TypeInfo.Multiple.Any()) || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_36 [label="auto.AddVerbs(parserResult.TypeInfo.Multiple.ToArray())", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_37 [label="auto.AddOptions(parserResult)", span="231-231", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_27 [label="var errors = Enumerable.Empty<Error>()", span="207-207", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_33 [label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="222-223", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_35 [label="auto.AddDashesToOption = false", span="227-227", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_38 [label="return auto;", span="233-233", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_30 [label="FilterMeaningfulErrors(errors).Any()", span="213-213", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_39 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", span="195-195", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, bool)", file="Maybe.cs"];
m31_60 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="246-246", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_61 [label="parserResult.Tag != ParserResultType.NotParsed", span="248-248", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_63 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="251-251", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_67 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current));", span="257-257", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_70 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current))\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), true);", span="261-263", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_62 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="249-249", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_64 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="253-253", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_66 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="256-256", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_68 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_65 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="254-254", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_69 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="260-260", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_71 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="246-246", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_177 [label="Entry int.Spaces()", span="30-30", cluster="int.Spaces()", file="Maybe.cs"];
m31_53 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="Maybe.cs"];
m31_168 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="Maybe.cs"];
m31_164 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="Maybe.cs"];
m31_48 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="348-348", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Maybe.cs"];
m31_135 [label="types == null", span="350-350", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Maybe.cs"];
m31_137 [label="types.Length == 0", span="351-351", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Maybe.cs"];
m31_139 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="353-356", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Maybe.cs"];
m31_136 [label="throw new ArgumentNullException(''types'');", span="350-350", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Maybe.cs"];
m31_138 [label="throw new ArgumentOutOfRangeException(''types'');", span="351-351", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Maybe.cs"];
m31_140 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="348-348", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="Maybe.cs"];
m31_231 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="505-505", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="Maybe.cs"];
m31_232 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop.GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr.Groups, examples);\r\n                });", span="507-516", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="Maybe.cs"];
m31_233 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="505-505", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="Maybe.cs"];
m31_113 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="Maybe.cs"];
m31_299 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="Maybe.cs"];
m31_8 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="Maybe.cs"];
m31_9 [label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="Maybe.cs"];
m31_114 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="Maybe.cs"];
m31_214 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="Maybe.cs"];
m31_24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="Maybe.cs"];
m31_247 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="Maybe.cs"];
m31_43 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="Maybe.cs"];
m31_40 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="Maybe.cs"];
m31_165 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Maybe.cs"];
m31_76 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="Maybe.cs"];
m31_302 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="Maybe.cs"];
m31_216 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="Maybe.cs"];
m31_227 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="Maybe.cs"];
m31_332 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="Maybe.cs"];
m31_134 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="531-531", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Maybe.cs"];
m31_249 [label="var maxLength = GetMaxLength(specifications)", span="536-536", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Maybe.cs"];
m31_251 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="540-540", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Maybe.cs"];
m31_252 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="542-544", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Maybe.cs"];
m31_250 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="538-538", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Maybe.cs"];
m31_253 [label="return this;", span="546-546", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Maybe.cs"];
m31_254 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="531-531", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="Maybe.cs"];
m31_179 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="Maybe.cs"];
m31_118 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="301-301", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_119 [label="return info.ToString();", span="303-303", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_120 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="301-301", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="Maybe.cs"];
m31_124 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="569-569", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Maybe.cs"];
m31_264 [label="AddLine(preOptionsHelp, value, maximumLength)", span="571-571", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Maybe.cs"];
m31_265 [label="return this;", span="573-573", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Maybe.cs"];
m31_266 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="569-569", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="Maybe.cs"];
m31_242 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="Maybe.cs"];
m31_128 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="675-675", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Maybe.cs"];
m31_336 [label="AddLine(builder, value, MaximumDisplayWidth)", span="677-677", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Maybe.cs"];
m31_337 [label="return this;", span="679-679", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Maybe.cs"];
m31_338 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="675-675", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="Maybe.cs"];
m31_2 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="Maybe.cs"];
m31_3 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="Maybe.cs"];
m31_219 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="494-496", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Maybe.cs"];
m31_133 [label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="491-491", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Maybe.cs"];
m31_218 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="493-493", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Maybe.cs"];
m31_220 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="497-499", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Maybe.cs"];
m31_221 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="500-502", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Maybe.cs"];
m31_222 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="491-491", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="Maybe.cs"];
m31_193 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="455-455", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_194 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="457-457", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_196 [label="var words = value.Split(' ')", span="461-461", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_199 [label="words[i].Length < (maximumLength - wordBuffer)", span="464-464", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_200 [label="builder.Append(words[i])", span="466-466", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_202 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="468-468", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_203 [label="builder.Append('' '')", span="470-470", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_205 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="474-474", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_206 [label="builder.Append(words[i].Substring(0, maximumLength))", span="476-476", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_207 [label="wordBuffer = maximumLength", span="477-477", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_209 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="483-483", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_210 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="484-484", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_211 [label="value.Length > maximumLength", span="486-486", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_212 [label="builder.Append(value)", span="488-488", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_195 [label="var wordBuffer = 0", span="460-460", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_201 [label="wordBuffer += words[i].Length", span="467-467", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_197 [label="var i = 0", span="462-462", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_198 [label="i < words.Length", span="462-462", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_208 [label="i++", span="462-462", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_204 [label="wordBuffer++", span="471-471", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_213 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="455-455", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="Maybe.cs"];
m31_10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_11 [label="sentenceBuilder == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_13 [label="heading == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_15 [label="copyright == null", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_19 [label="this.sentenceBuilder = sentenceBuilder", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_20 [label="this.heading = heading", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_21 [label="this.copyright = copyright", span="106-106", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_14 [label="throw new ArgumentNullException(''heading'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_16 [label="throw new ArgumentNullException(''copyright'');", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="Maybe.cs"];
m31_310 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="663-663", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_327 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="665-672", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_328 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="663-663", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_348 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="Maybe.cs"];
m31_178 [label="Entry Unk.formatError", span="", cluster="Unk.formatError", file="Maybe.cs"];
m31_255 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="682-682", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="Maybe.cs"];
m31_339 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="684-692", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="Maybe.cs"];
m31_340 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="682-682", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="Maybe.cs"];
m31_297 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="Maybe.cs"];
m31_141 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Maybe.cs"];
m31_261 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="549-549", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="Maybe.cs"];
m31_224 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="549-549", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="Maybe.cs"];
m31_260 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="551-556", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="Maybe.cs"];
m31_215 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="Maybe.cs"];
m31_314 [label="Entry string.FormatLocal(params object[])", span="25-25", cluster="string.FormatLocal(params object[])", file="Maybe.cs"];
m31_143 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="365-365", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_144 [label="result == null", span="367-367", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_146 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Single),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="369-372", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_145 [label="throw new ArgumentNullException(''result'');", span="367-367", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_147 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="365-365", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="Maybe.cs"];
m31_347 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="731-731", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_369 [label="var specLength = 0", span="733-733", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_370 [label="var hasMeta = spec.MetaName.Length > 0", span="735-735", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_372 [label="spec.MetaValue.Length > 0", span="738-738", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_373 [label="metaLength = spec.MetaValue.Length + 1", span="739-739", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_375 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="742-742", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_376 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="744-744", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_371 [label="var metaLength = 0", span="737-737", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_374 [label=hasMeta, span="741-741", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_377 [label="specLength += metaLength", span="746-746", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_378 [label="return specLength;", span="748-748", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_379 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="731-731", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="Maybe.cs"];
m31_73 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="311-311", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Maybe.cs"];
m31_122 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="313-313", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Maybe.cs"];
m31_123 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="311-311", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="Maybe.cs"];
m31_235 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="Maybe.cs"];
m31_223 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="Maybe.cs"];
m31_42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Maybe.cs"];
m31_111 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Maybe.cs"];
m31_148 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="382-382", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Maybe.cs"];
m31_149 [label="types == null", span="384-384", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Maybe.cs"];
m31_151 [label="types.Length == 0", span="385-385", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Maybe.cs"];
m31_153 [label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="387-387", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Maybe.cs"];
m31_150 [label="throw new ArgumentNullException(''types'');", span="384-384", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Maybe.cs"];
m31_152 [label="throw new ArgumentOutOfRangeException(''types'');", span="385-385", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Maybe.cs"];
m31_154 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="382-382", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="Maybe.cs"];
m31_45 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="Maybe.cs"];
m31_6 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="Maybe.cs"];
m31_7 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="Maybe.cs"];
m31_166 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="Maybe.cs"];
m31_341 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="Maybe.cs"];
m31_176 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="Maybe.cs"];
m31_74 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="Maybe.cs"];
m31_226 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="Maybe.cs"];
m31_381 [label="CommandLine.Text.HelpText", span="", file="Maybe.cs"];
m31_382 [label=auto, span="", file="Maybe.cs"];
m31_383 [label="CommandLine.ParserResult<T>", span="", file="Maybe.cs"];
m31_384 [label=pr, span="", file="Maybe.cs"];
m31_385 [label="CommandLine.Text.HelpText", span="", file="Maybe.cs"];
m31_386 [label="System.Func<CommandLine.Error, string>", span="", file="Maybe.cs"];
m31_387 [label=int, span="", file="Maybe.cs"];
m31_388 [label=text, span="", file="Maybe.cs"];
m31_389 [label=string, span="", file="Maybe.cs"];
m31_390 [label=maxLength, span="", file="Maybe.cs"];
m31_391 [label=remainingSpace, span="", file="Maybe.cs"];
m31_392 [label=int, span="", file="Maybe.cs"];
m31_393 [label="CommandLine.Core.Specification", span="", file="Maybe.cs"];
m31_394 [label=optionHelpText, span="", file="Maybe.cs"];
m31_395 [label="CommandLine.Core.OptionSpecification", span="", file="Maybe.cs"];
m31_396 [label="CommandLine.Core.ValueSpecification", span="", file="Maybe.cs"];
m33_5 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="NameExtensions.cs"];
m33_0 [label="Entry CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", span="8-8", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m33_1 [label="value == null", span="10-10", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m33_3 [label="return value.Length == 1\r\n               ? comparer.Equals(value, shortName)\r\n               : comparer.Equals(value, longName);", span="12-14", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m33_2 [label="throw new ArgumentNullException(''value'');", span="10-10", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m33_4 [label="Exit CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", span="8-8", cluster="CommandLine.Core.NameExtensions.MatchName(string, string, string, System.StringComparer)", file="NameExtensions.cs"];
m33_6 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="NameExtensions.cs"];
m34_0 [label="Entry CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="NameLookup.cs"];
m34_1 [label="return from t in tokens\r\n                   where typeLookup(t.Text).MapMaybe(info => t.IsName() && info.TargetType == TargetType.Switch, false)\r\n                   select t;", span="15-17", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="NameLookup.cs"];
m34_2 [label="Exit CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11", cluster="CommandLine.Core.Switch.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="NameLookup.cs"];
m34_5 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="NameLookup.cs"];
m34_6 [label="t.IsName() && info.TargetType == TargetType.Switch", span="16-16", cluster="lambda expression", file="NameLookup.cs"];
m34_7 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="NameLookup.cs"];
m34_4 [label="Entry Unk.MapMaybe", span="", cluster="Unk.MapMaybe", file="NameLookup.cs"];
m34_8 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="NameLookup.cs"];
m34_3 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="NameLookup.cs"];
m34_9 [label=t, span="", file="NameLookup.cs"];
m35_6 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="NameLookupTests.cs"];
m35_9 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookupTests.cs"];
m35_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="NameLookupTests.cs"];
m35_0 [label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="17-17", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs"];
m35_1 [label="var expected = Maybe.Just(''.'')", span="20-20", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs"];
m35_2 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, '.', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="21-22", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs"];
m35_4 [label="expected.ShouldBeEquivalentTo(result)", span="28-28", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs"];
m35_3 [label="var result = NameLookup.WithSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="25-25", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs"];
m35_5 [label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="17-17", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs"];
m35_10 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="NameLookupTests.cs"];
m35_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="NameLookupTests.cs"];
m36_0 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="NullInstance.cs"];
m36_1 [label="Exit CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="NullInstance.cs"];
m37_15 [label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="44-44", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m37_16 [label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="44-44", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="OptionAttribute.cs"];
m37_21 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="72-72", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m37_22 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="72-72", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="OptionAttribute.cs"];
m37_19 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="63-63", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m37_20 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="63-63", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="OptionAttribute.cs"];
m37_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionAttribute.cs"];
m37_0 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_1 [label="shortName == null", span="27-27", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_3 [label="longName == null", span="28-28", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_5 [label="this.shortName = shortName", span="30-30", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_6 [label="this.longName = longName", span="31-31", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_2 [label="throw new ArgumentNullException(''shortName'');", span="27-27", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_4 [label="throw new ArgumentNullException(''longName'');", span="28-28", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_7 [label="this.setName = string.Empty", span="32-32", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_8 [label="this.min = -1", span="33-33", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_9 [label="this.max = -1", span="34-34", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_10 [label="this.separator = '\0'", span="35-35", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_11 [label="this.helpText = string.Empty", span="36-36", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_12 [label="this.metaValue = string.Empty", span="37-37", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_13 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="OptionAttribute.cs"];
m37_17 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="53-53", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m37_18 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="53-53", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="OptionAttribute.cs"];
m37_23 [label="CommandLine.OptionAttribute", span="", file="OptionAttribute.cs"];
m38_86 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="OptionMapper.cs"];
m38_17 [label="Entry System.Type.GetVerbSpecification()", span="27-27", cluster="System.Type.GetVerbSpecification()", file="OptionMapper.cs"];
m38_31 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="OptionMapper.cs"];
m38_18 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="OptionMapper.cs"];
m38_88 [label="Entry CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="OptionMapper.cs"];
m38_89 [label="return (spec as OptionSpecification).ToMaybe()\r\n                .Return(o => o.Separator != '\0' ? o.Separator : ' ', ' ');", span="92-93", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="OptionMapper.cs"];
m38_90 [label="Exit CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", span="90-90", cluster="CommandLine.UnParserExtensions.SeperatorOrSpace(CommandLine.Core.Specification)", file="OptionMapper.cs"];
m38_51 [label="Entry CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_52 [label="var builder = new StringBuilder()", span="60-60", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_53 [label="spec.TargetType", span="61-61", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_55 [label="builder.Append(FormatWithQuotesIfString(value))", span="64-64", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_57 [label="var sep = spec.SeperatorOrSpace()", span="67-67", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_59 [label="var e = ((IEnumerable)value).GetEnumerator()", span="70-70", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_61 [label="builder.Append(fmtWithQuotesIfStr(e.Current)).Append(sep)", span="72-72", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_62 [label="builder.TrimEndIfMatch(' ')", span="73-73", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_63 [label="return builder.ToString();", span="76-76", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_54 [label="TargetType.Scalar", span="63-63", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_56 [label="TargetType.Sequence", span="66-66", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_58 [label="Func<object, object> fmtWithQuotesIfStr = v\r\n                        => sep == ' ' ? FormatWithQuotesIfString(v) : v", span="68-69", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_60 [label="e.MoveNext()", span="71-71", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_64 [label="Exit CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", span="58-58", cluster="CommandLine.UnParserExtensions.FormatValue(CommandLine.Core.Specification, object)", file="OptionMapper.cs"];
m38_68 [label="Entry System.Collections.IEnumerable.GetEnumerator()", span="0-0", cluster="System.Collections.IEnumerable.GetEnumerator()", file="OptionMapper.cs"];
m38_20 [label="Entry object.IsEmpty()", span="111-111", cluster="object.IsEmpty()", file="OptionMapper.cs"];
m38_70 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="OptionMapper.cs"];
m38_102 [label="Entry CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_103 [label="value == null", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_105 [label="value is ValueType && value.Equals(value.GetType().GetDefaultValue())", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_107 [label="value is string && ((string)value).Length == 0", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_109 [label="value is IEnumerable && !((IEnumerable)value).GetEnumerator().MoveNext()", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_104 [label="return true;", span="113-113", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_106 [label="return true;", span="114-114", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_108 [label="return true;", span="115-115", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_110 [label="return true;", span="116-116", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_111 [label="return false;", span="117-117", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_112 [label="Exit CommandLine.UnParserExtensions.IsEmpty(object)", span="111-111", cluster="CommandLine.UnParserExtensions.IsEmpty(object)", file="OptionMapper.cs"];
m38_21 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="OptionMapper.cs"];
m38_82 [label="Entry string.Replace(string, string)", span="0-0", cluster="string.Replace(string, string)", file="OptionMapper.cs"];
m38_94 [label="Entry CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="OptionMapper.cs"];
m38_95 [label="return new StringBuilder()\r\n                    .Append(spec.FormatName())\r\n                    .Append(' ')\r\n                    .AppendWhen(spec.TargetType != TargetType.Switch, FormatValue(spec, value))\r\n                .ToString();", span="98-102", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="OptionMapper.cs"];
m38_96 [label="Exit CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", span="96-96", cluster="CommandLine.UnParserExtensions.FormatOption(CommandLine.Core.OptionSpecification, object)", file="OptionMapper.cs"];
m38_19 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="OptionMapper.cs"];
m38_77 [label="Entry T.ToMaybe<T>()", span="105-105", cluster="T.ToMaybe<T>()", file="OptionMapper.cs"];
m38_81 [label="Entry string.Contains(string)", span="0-0", cluster="string.Contains(string)", file="OptionMapper.cs"];
m38_15 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="OptionMapper.cs"];
m38_91 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="OptionMapper.cs"];
m38_33 [label="new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) }", span="37-37", cluster="lambda expression", file="OptionMapper.cs"];
m38_28 [label="builder.Append(verb.Name).Append(' ')", span="32-32", cluster="lambda expression", file="OptionMapper.cs"];
m38_44 [label="builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' ')", span="50-50", cluster="lambda expression", file="OptionMapper.cs"];
m38_48 [label="builder.Append(FormatValue(val.Specification, val.Value)).Append(' ')", span="52-52", cluster="lambda expression", file="OptionMapper.cs"];
m38_27 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="OptionMapper.cs"];
m38_32 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="OptionMapper.cs"];
m38_37 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="OptionMapper.cs"];
m38_40 [label="Entry lambda expression", span="45-45", cluster="lambda expression", file="OptionMapper.cs"];
m38_43 [label="Entry lambda expression", span="50-50", cluster="lambda expression", file="OptionMapper.cs"];
m38_47 [label="Entry lambda expression", span="52-52", cluster="lambda expression", file="OptionMapper.cs"];
m38_29 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="OptionMapper.cs"];
m38_34 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="OptionMapper.cs"];
m38_38 [label="i.Specification.Tag == SpecificationType.Option", span="40-40", cluster="lambda expression", file="OptionMapper.cs"];
m38_39 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="OptionMapper.cs"];
m38_41 [label="i.Specification.Tag == SpecificationType.Value", span="45-45", cluster="lambda expression", file="OptionMapper.cs"];
m38_42 [label="Exit lambda expression", span="45-45", cluster="lambda expression", file="OptionMapper.cs"];
m38_45 [label="Exit lambda expression", span="50-50", cluster="lambda expression", file="OptionMapper.cs"];
m38_49 [label="Exit lambda expression", span="52-52", cluster="lambda expression", file="OptionMapper.cs"];
m38_72 [label="sep == ' ' ? FormatWithQuotesIfString(v) : v", span="69-69", cluster="lambda expression", file="OptionMapper.cs"];
m38_71 [label="Entry lambda expression", span="68-69", cluster="lambda expression", file="OptionMapper.cs"];
m38_73 [label="Exit lambda expression", span="68-69", cluster="lambda expression", file="OptionMapper.cs"];
m38_79 [label="v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="82-82", cluster="lambda expression", file="OptionMapper.cs"];
m38_84 [label="v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v", span="86-87", cluster="lambda expression", file="OptionMapper.cs"];
m38_83 [label="Entry lambda expression", span="86-87", cluster="lambda expression", file="OptionMapper.cs"];
m38_78 [label="Entry lambda expression", span="81-82", cluster="lambda expression", file="OptionMapper.cs"];
m38_80 [label="Exit lambda expression", span="81-82", cluster="lambda expression", file="OptionMapper.cs"];
m38_85 [label="Exit lambda expression", span="86-87", cluster="lambda expression", file="OptionMapper.cs"];
m38_92 [label="o.Separator != '\0' ? o.Separator : ' '", span="93-93", cluster="lambda expression", file="OptionMapper.cs"];
m38_93 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="OptionMapper.cs"];
m38_98 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="OptionMapper.cs"];
m38_26 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="OptionMapper.cs"];
m38_24 [label="Entry System.Text.StringBuilder.TrimEndIfMatch(char)", span="87-87", cluster="System.Text.StringBuilder.TrimEndIfMatch(char)", file="OptionMapper.cs"];
m38_113 [label="Entry System.Type.GetDefaultValue()", span="119-119", cluster="System.Type.GetDefaultValue()", file="OptionMapper.cs"];
m38_50 [label="Entry Unk.FormatValue", span="", cluster="Unk.FormatValue", file="OptionMapper.cs"];
m38_46 [label="Entry Unk.FormatOption", span="", cluster="Unk.FormatOption", file="OptionMapper.cs"];
m38_22 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="OptionMapper.cs"];
m38_87 [label="Entry string.JoinTo(params string[])", span="45-45", cluster="string.JoinTo(params string[])", file="OptionMapper.cs"];
m38_25 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="OptionMapper.cs"];
m38_67 [label="Entry CommandLine.Core.Specification.SeperatorOrSpace()", span="90-90", cluster="CommandLine.Core.Specification.SeperatorOrSpace()", file="OptionMapper.cs"];
m38_30 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="OptionMapper.cs"];
m38_97 [label="Entry CommandLine.Core.OptionSpecification.FormatName()", span="105-105", cluster="CommandLine.Core.OptionSpecification.FormatName()", file="OptionMapper.cs"];
m38_65 [label="Entry CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionMapper.cs"];
m38_74 [label="Func<string, string> doubQt = v\r\n                => v.Contains(''\'''') ? v.Replace(''\'''', ''\\\'''') : v", span="81-82", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionMapper.cs"];
m38_75 [label="return (value as string)\r\n                .ToMaybe()\r\n                .Return(v => v.Contains(' ') || v.Contains(''\'''')\r\n                    ? ''\''''.JoinTo(doubQt(v), ''\'''') : v, value);", span="84-87", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionMapper.cs"];
m38_76 [label="Exit CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", span="79-79", cluster="CommandLine.UnParserExtensions.FormatWithQuotesIfString(object)", file="OptionMapper.cs"];
m38_23 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach", file="OptionMapper.cs"];
m38_66 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)", file="OptionMapper.cs"];
m38_16 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()", file="OptionMapper.cs"];
m38_114 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="OptionMapper.cs"];
m38_69 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="OptionMapper.cs"];
m38_99 [label="Entry CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="OptionMapper.cs"];
m38_100 [label="return optionSpec.LongName.Length > 0\r\n                ? ''--''.JoinTo(optionSpec.LongName) : ''-''.JoinTo(optionSpec.ShortName);", span="107-108", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="OptionMapper.cs"];
m38_101 [label="Exit CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", span="105-105", cluster="CommandLine.UnParserExtensions.FormatName(CommandLine.Core.OptionSpecification)", file="OptionMapper.cs"];
m38_35 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="OptionMapper.cs"];
m38_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionMapper.cs"];
m38_0 [label="Entry CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_1 [label="options == null", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_3 [label="var type = options.GetType()", span="28-28", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_6 [label="var specs =\r\n                from info in\r\n                    type.GetSpecifications(\r\n                        pi => new { Specification = Specification.FromProperty(pi), Value = pi.GetValue(options, null) })\r\n                where !info.Value.IsEmpty()\r\n                select info", span="34-39", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_2 [label="throw new ArgumentNullException(''options'');", span="26-26", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_4 [label="var builder = new StringBuilder()", span="29-29", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_5 [label="type.GetVerbSpecification()\r\n                .Return(verb => builder.Append(verb.Name).Append(' '), builder)", span="31-32", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_9 [label="optSpecs.ForEach(opt => builder.Append(FormatOption((OptionSpecification)opt.Specification, opt.Value)).Append(' '))", span="50-50", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_10 [label="builder.TrimEndIfMatch(' ')", span="51-51", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_11 [label="valSpecs.ForEach(val => builder.Append(FormatValue(val.Specification, val.Value)).Append(' '))", span="52-52", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_12 [label="return builder\r\n                .ToString().TrimEnd(' ');", span="54-55", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_7 [label="var optSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Option)\r\n                let o = (OptionSpecification)info.Specification\r\n                where o.TargetType != TargetType.Switch || (o.TargetType == TargetType.Switch && ((bool)info.Value))\r\n                orderby o.UniqueName()\r\n                select info", span="40-44", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_8 [label="var valSpecs = from info in specs.Where(i => i.Specification.Tag == SpecificationType.Value)\r\n                let v = (ValueSpecification)info.Specification\r\n                orderby v.Index\r\n                select info", span="45-48", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_13 [label="Exit CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", span="24-24", cluster="CommandLine.UnParserExtensions.FormatCommandLine<T>(CommandLine.Parser, T)", file="OptionMapper.cs"];
m38_36 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="OptionMapper.cs"];
m38_115 [label=builder, span="", file="OptionMapper.cs"];
m38_116 [label=T, span="", file="OptionMapper.cs"];
m38_117 [label=sep, span="", file="OptionMapper.cs"];
m38_118 [label=doubQt, span="", file="OptionMapper.cs"];
m39_4 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T)", span="24-24", cluster="CommandLine.Parser.FormatCommandLine<T>(T)", file="OptionMapperTests.cs"];
m39_3 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="OptionMapperTests.cs"];
m39_6 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", span="26-26", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="OptionMapperTests.cs"];
m39_7 [label="new Parser()\r\n                .FormatCommandLine(options)\r\n                .ShouldBeEquivalentTo(result)", span="28-30", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="OptionMapperTests.cs"];
m39_8 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", span="26-26", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line_for_verbs(CommandLine.Tests.Fakes.AddOptions, string)", file="OptionMapperTests.cs"];
m39_0 [label="Entry CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="17-17", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="OptionMapperTests.cs"];
m39_1 [label="new Parser()\r                .FormatCommandLine(options)\r                .ShouldBeEquivalentTo(result)", span="19-21", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="OptionMapperTests.cs"];
m39_2 [label="Exit CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", span="17-17", cluster="CommandLine.Tests.Unit.UnParserExtensionsTests.UnParsing_instance_returns_command_line(CommandLine.Tests.Fakes.FakeOptions, string)", file="OptionMapperTests.cs"];
m39_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="OptionMapperTests.cs"];
m40_9 [label="Entry CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_10 [label="return new OptionSpecification(\r\n                attribute.ShortName,\r\n                attribute.LongName,\r\n                attribute.Required,\r\n                attribute.SetName,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.Separator,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType,\r\n                attribute.HelpText,\r\n                attribute.MetaValue,\r\n                enumValues);", span="31-43", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_11 [label="Exit CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", span="29-29", cluster="CommandLine.Core.OptionSpecification.FromAttribute(CommandLine.OptionAttribute, System.Type, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_12 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="OptionSpecification.cs"];
m40_0 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_1 [label="this.shortName = shortName", span="20-20", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_2 [label="this.longName = longName", span="21-21", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_3 [label="this.separator = separator", span="22-22", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_4 [label="this.setName = setName", span="23-23", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_5 [label="this.helpText = helpText", span="24-24", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_6 [label="this.metaValue = metaValue", span="25-25", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_7 [label="this.enumValues = enumValues", span="26-26", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_8 [label="Exit CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionSpecification.cs"];
m40_13 [label="CommandLine.Core.OptionSpecification", span="", file="OptionSpecification.cs"];
m41_29 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", span="102-102", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs"];
m41_34 [label="factory == null", span="104-104", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs"];
m41_36 [label="args == null", span="105-105", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs"];
m41_38 [label="return MakeParserResult(\r\n                () => InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, this.settings),\r\n                    args,\r\n                    this.settings.NameComparer,\r\n                    this.settings.ParsingCulture),\r\n                settings);", span="107-114", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs"];
m41_35 [label="throw new ArgumentNullException(''factory'');", span="104-104", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs"];
m41_37 [label="throw new ArgumentNullException(''args'');", span="105-105", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs"];
m41_39 [label="Exit CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", span="102-102", cluster="CommandLine.Parser.ParseArguments<T>(System.Func<T>, string[])", file="Parser.cs"];
m41_44 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs"];
m41_8 [label="Entry CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m41_9 [label="configuration == null", span="38-38", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m41_12 [label="configuration(this.settings)", span="41-41", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m41_10 [label="throw new ArgumentNullException(''configuration'');", span="38-38", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m41_11 [label="this.settings = new ParserSettings()", span="40-40", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m41_13 [label="this.settings.Consumed = true", span="42-42", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m41_14 [label="Exit CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", span="36-36", cluster="CommandLine.Parser.Parser(System.Action<CommandLine.ParserSettings>)", file="Parser.cs"];
m41_20 [label="Entry CommandLine.Parser.~Parser()", span="54-54", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m41_21 [label="Dispose(false)", span="56-56", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m41_22 [label="Exit CommandLine.Parser.~Parser()", span="54-54", cluster="CommandLine.Parser.~Parser()", file="Parser.cs"];
m41_49 [label="Entry CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="129-129", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_50 [label="args == null", span="131-131", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_52 [label="types == null", span="132-132", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_54 [label="types.Length == 0", span="133-133", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_56 [label="return MakeParserResult(\r\n                () => InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, this.settings),\r\n                    types,\r\n                    args,\r\n                    this.settings.NameComparer,\r\n                    this.settings.ParsingCulture),\r\n                settings);", span="135-142", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_51 [label="throw new ArgumentNullException(''args'');", span="131-131", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_53 [label="throw new ArgumentNullException(''types'');", span="132-132", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_55 [label="throw new ArgumentOutOfRangeException(''types'');", span="133-133", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_57 [label="Exit CommandLine.Parser.ParseArguments(string[], params System.Type[])", span="129-129", cluster="CommandLine.Parser.ParseArguments(string[], params System.Type[])", file="Parser.cs"];
m41_33 [label="Entry T.cstr", span="", cluster="T.cstr", file="Parser.cs"];
m41_16 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="Parser.cs"];
m41_3 [label="Entry CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="45-45", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m41_17 [label="this.settings = settings", span="47-47", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m41_18 [label="this.settings.Consumed = true", span="48-48", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m41_19 [label="Exit CommandLine.Parser.Parser(CommandLine.ParserSettings)", span="45-45", cluster="CommandLine.Parser.Parser(CommandLine.ParserSettings)", file="Parser.cs"];
m41_58 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="Parser.cs"];
m41_96 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="Parser.cs"];
m41_4 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="25-25", cluster="CommandLine.ParserSettings.ParserSettings()", file="Parser.cs"];
m41_62 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Parser.cs"];
m41_81 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="Parser.cs"];
m41_5 [label="Entry CommandLine.Parser.Parser()", span="25-25", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m41_6 [label="this.settings = new ParserSettings { Consumed = true }", span="27-27", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m41_7 [label="Exit CommandLine.Parser.Parser()", span="25-25", cluster="CommandLine.Parser.Parser()", file="Parser.cs"];
m41_87 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="Parser.cs"];
m41_89 [label="Entry CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="184-184", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m41_100 [label="parserResult.Errors.Any()", span="186-186", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m41_101 [label="helpWriter.ToMaybe().Do(writer => writer.Write(HelpText.AutoBuild(parserResult)))", span="188-188", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m41_102 [label="return parserResult;", span="191-191", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m41_103 [label="Exit CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", span="184-184", cluster="CommandLine.Parser.DisplayHelp<T>(CommandLine.ParserResult<T>, System.IO.TextWriter)", file="Parser.cs"];
m41_104 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="Parser.cs"];
m41_107 [label="Entry lambda expression", span="188-188", cluster="lambda expression", file="Parser.cs"];
m41_0 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="Parser.cs"];
m41_1 [label="new Parser(new ParserSettings{ HelpWriter = Console.Error })", span="20-20", cluster="lambda expression", file="Parser.cs"];
m41_2 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="Parser.cs"];
m41_30 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="Parser.cs"];
m41_31 [label="new T()", span="89-89", cluster="lambda expression", file="Parser.cs"];
m41_32 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="Parser.cs"];
m41_42 [label="InstanceBuilder.Build(\r\n                    factory,\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, this.settings),\r\n                    args,\r\n                    this.settings.NameComparer,\r\n                    this.settings.ParsingCulture)", span="108-113", cluster="lambda expression", file="Parser.cs"];
m41_41 [label="Entry lambda expression", span="108-113", cluster="lambda expression", file="Parser.cs"];
m41_43 [label="Exit lambda expression", span="108-113", cluster="lambda expression", file="Parser.cs"];
m41_45 [label="Entry lambda expression", span="110-110", cluster="lambda expression", file="Parser.cs"];
m41_46 [label="Tokenize(arguments, optionSpecs, this.settings)", span="110-110", cluster="lambda expression", file="Parser.cs"];
m41_47 [label="Exit lambda expression", span="110-110", cluster="lambda expression", file="Parser.cs"];
m41_60 [label="InstanceChooser.Choose(\r\n                    (arguments, optionSpecs) => Tokenize(arguments, optionSpecs, this.settings),\r\n                    types,\r\n                    args,\r\n                    this.settings.NameComparer,\r\n                    this.settings.ParsingCulture)", span="136-141", cluster="lambda expression", file="Parser.cs"];
m41_59 [label="Entry lambda expression", span="136-141", cluster="lambda expression", file="Parser.cs"];
m41_61 [label="Exit lambda expression", span="136-141", cluster="lambda expression", file="Parser.cs"];
m41_63 [label="Entry lambda expression", span="137-137", cluster="lambda expression", file="Parser.cs"];
m41_64 [label="Tokenize(arguments, optionSpecs, this.settings)", span="137-137", cluster="lambda expression", file="Parser.cs"];
m41_65 [label="Exit lambda expression", span="137-137", cluster="lambda expression", file="Parser.cs"];
m41_76 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer))", span="164-164", cluster="lambda expression", file="Parser.cs"];
m41_79 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="164-164", cluster="lambda expression", file="Parser.cs"];
m41_83 [label="NameLookup.Contains(name, optionSpecs, settings.NameComparer)", span="165-165", cluster="lambda expression", file="Parser.cs"];
m41_75 [label="Entry lambda expression", span="163-164", cluster="lambda expression", file="Parser.cs"];
m41_82 [label="Entry lambda expression", span="165-165", cluster="lambda expression", file="Parser.cs"];
m41_77 [label="Exit lambda expression", span="163-164", cluster="lambda expression", file="Parser.cs"];
m41_78 [label="Entry lambda expression", span="164-164", cluster="lambda expression", file="Parser.cs"];
m41_80 [label="Exit lambda expression", span="164-164", cluster="lambda expression", file="Parser.cs"];
m41_84 [label="Exit lambda expression", span="165-165", cluster="lambda expression", file="Parser.cs"];
m41_93 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="Parser.cs"];
m41_94 [label="errs.Where(e => e.Tag != ErrorType.UnknownOptionError)", span="180-180", cluster="lambda expression", file="Parser.cs"];
m41_95 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="Parser.cs"];
m41_97 [label="Entry lambda expression", span="180-180", cluster="lambda expression", file="Parser.cs"];
m41_98 [label="e.Tag != ErrorType.UnknownOptionError", span="180-180", cluster="lambda expression", file="Parser.cs"];
m41_99 [label="Exit lambda expression", span="180-180", cluster="lambda expression", file="Parser.cs"];
m41_108 [label="writer.Write(HelpText.AutoBuild(parserResult))", span="188-188", cluster="lambda expression", file="Parser.cs"];
m41_109 [label="Exit lambda expression", span="188-188", cluster="lambda expression", file="Parser.cs"];
m41_105 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="Parser.cs"];
m41_88 [label="Entry CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="177-177", cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs"];
m41_90 [label="return ignoreUnknownArguments\r\n                       ? parserResult.MapErrors(errs => errs.Where(e => e.Tag != ErrorType.UnknownOptionError))\r\n                       : parserResult;", span="179-181", cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs"];
m41_91 [label="Exit CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", span="177-177", cluster="CommandLine.Parser.HandleUnknownArguments<T>(CommandLine.ParserResult<T>, bool)", file="Parser.cs"];
m41_24 [label="Entry CommandLine.Parser.ParseArguments<T>(string[])", span="84-84", cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs"];
m41_25 [label="args == null", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs"];
m41_27 [label="return ParseArguments(() => new T(), args);", span="89-89", cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs"];
m41_26 [label="throw new ArgumentNullException(''args'');", span="87-87", cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs"];
m41_28 [label="Exit CommandLine.Parser.ParseArguments<T>(string[])", span="84-84", cluster="CommandLine.Parser.ParseArguments<T>(string[])", file="Parser.cs"];
m41_92 [label="Entry Unk.MapErrors", span="", cluster="Unk.MapErrors", file="Parser.cs"];
m41_110 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="252-252", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="Parser.cs"];
m41_106 [label="Entry CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", span="111-111", cluster="CommandLine.Infrastructure.Maybe<T>.Do<T>(System.Action<T>)", file="Parser.cs"];
m41_74 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="Parser.cs"];
m41_73 [label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", span="33-33", cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>)", file="Parser.cs"];
m41_70 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="Parser.cs"];
m41_119 [label="Entry CommandLine.ParserSettings.Dispose()", span="119-119", cluster="CommandLine.ParserSettings.Dispose()", file="Parser.cs"];
m41_40 [label="Entry CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="168-168", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m41_85 [label="return DisplayHelp(\r\n                HandleUnknownArguments(\r\n                    parseFunc(),\r\n                    settings.IgnoreUnknownArguments),\r\n                settings.HelpWriter);", span="170-174", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m41_86 [label="Exit CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", span="168-168", cluster="CommandLine.Parser.MakeParserResult<T>(System.Func<CommandLine.ParserResult<T>>, CommandLine.ParserSettings)", file="Parser.cs"];
m41_66 [label="Entry CommandLine.Parser.Dispose()", span="148-148", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m41_67 [label="Dispose(true)", span="150-150", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m41_68 [label="GC.SuppressFinalize(this)", span="152-152", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m41_69 [label="Exit CommandLine.Parser.Dispose()", span="148-148", cluster="CommandLine.Parser.Dispose()", file="Parser.cs"];
m41_48 [label="Entry CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="155-155", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m41_71 [label="return settings.EnableDashDash\r\n                ? Tokenizer.PreprocessDashDash(\r\n                        arguments,\r\n                        args =>\r\n                            Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer)))\r\n                : Tokenizer.Tokenize(arguments, name => NameLookup.Contains(name, optionSpecs, settings.NameComparer));", span="160-165", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m41_72 [label="Exit CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", span="155-155", cluster="CommandLine.Parser.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.ParserSettings)", file="Parser.cs"];
m41_23 [label="Entry CommandLine.Parser.Dispose(bool)", span="194-194", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_112 [label="this.disposed", span="196-196", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_114 [label=disposing, span="201-201", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_113 [label="return;", span="198-198", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_115 [label="settings != null", span="203-203", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_116 [label="settings.Dispose()", span="205-205", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_117 [label="this.disposed = true", span="208-208", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_118 [label="Exit CommandLine.Parser.Dispose(bool)", span="194-194", cluster="CommandLine.Parser.Dispose(bool)", file="Parser.cs"];
m41_15 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Parser.cs"];
m41_111 [label="Entry System.IO.TextWriter.Write(string)", span="0-0", cluster="System.IO.TextWriter.Write(string)", file="Parser.cs"];
m41_120 [label="CommandLine.Parser", span="", file="Parser.cs"];
m41_121 [label="System.Func<T>", span="", file="Parser.cs"];
m41_122 [label="string[]", span="", file="Parser.cs"];
m41_123 [label="string[]", span="", file="Parser.cs"];
m41_124 [label="params System.Type[]", span="", file="Parser.cs"];
m41_125 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="Parser.cs"];
m41_126 [label="CommandLine.ParserSettings", span="", file="Parser.cs"];
m41_127 [label="CommandLine.ParserResult<T>", span="", file="Parser.cs"];
m45_11 [label="Entry lambda expression", span="19-20", cluster="lambda expression", file="ParserTests.cs"];
m45_5 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).MapMaybe(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="18-21", cluster="lambda expression", file="ParserTests.cs"];
m45_4 [label="Entry lambda expression", span="17-21", cluster="lambda expression", file="ParserTests.cs"];
m45_12 [label="info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }", span="20-20", cluster="lambda expression", file="ParserTests.cs"];
m45_6 [label="Exit lambda expression", span="17-21", cluster="lambda expression", file="ParserTests.cs"];
m45_13 [label="Exit lambda expression", span="19-20", cluster="lambda expression", file="ParserTests.cs"];
m45_10 [label="Entry Unk.MapMaybe", span="", cluster="Unk.MapMaybe", file="ParserTests.cs"];
m45_0 [label="Entry CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ParserTests.cs"];
m45_1 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).MapMaybe(info =>\r\n                                    info.TargetType == TargetType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                   from t in tseq\r\n                   select t;", span="16-23", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ParserTests.cs"];
m45_2 [label="Exit CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.Scalar.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ParserTests.cs"];
m45_7 [label="Entry CommandLine.Core.Token.IsName()", span="128-128", cluster="CommandLine.Core.Token.IsName()", file="ParserTests.cs"];
m45_8 [label="Entry CommandLine.Core.Token.IsValue()", span="133-133", cluster="CommandLine.Core.Token.IsValue()", file="ParserTests.cs"];
m45_9 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="ParserTests.cs"];
m45_3 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="ParserTests.cs"];
m45_14 [label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>", span="", file="ParserTests.cs"];
m45_15 [label="CommandLine.Core.Token", span="", file="ParserTests.cs"];
m45_16 [label="CommandLine.Core.Token", span="", file="ParserTests.cs"];
m46_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="ReflectionExtensions.cs"];
m46_4 [label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", span="28-28", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_5 [label="maximumItems == null", span="30-30", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_7 [label="return new TypeDescriptor(tag, maximumItems);", span="32-32", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_6 [label="throw new ArgumentNullException(''maximumItems'');", span="30-30", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_8 [label="Exit CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", span="28-28", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_0 [label="Entry CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", span="12-12", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_1 [label="this.targetType = targetType", span="14-14", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_2 [label="this.maxItems = maxItems", span="15-15", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_3 [label="Exit CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", span="12-12", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CommandLine.Infrastructure.Maybe<int>)", file="ReflectionExtensions.cs"];
m46_10 [label="CommandLine.Core.TypeDescriptor", span="", file="ReflectionExtensions.cs"];
m48_17 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="SentenceBuilder.cs"];
m48_0 [label="Entry CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_1 [label="name == null", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_3 [label="helpText == null", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_5 [label="this.name = name", span="18-18", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_6 [label="this.helpText = helpText", span="19-19", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_2 [label="throw new ArgumentNullException(''name'');", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_4 [label="throw new ArgumentNullException(''helpText'');", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_7 [label="Exit CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="SentenceBuilder.cs"];
m48_16 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="SentenceBuilder.cs"];
m48_15 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="SentenceBuilder.cs"];
m48_12 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="SentenceBuilder.cs"];
m48_13 [label="return from type in types\r\n                   let attrs = type.GetCustomAttributes(typeof(VerbAttribute), true)\r\n                   where attrs.Length == 1\r\n                   select Tuple.Create(\r\n                       Verb.FromAttribute((VerbAttribute)attrs.Single()),\r\n                       type);", span="42-47", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="SentenceBuilder.cs"];
m48_14 [label="Exit CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="SentenceBuilder.cs"];
m48_9 [label="Entry CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="SentenceBuilder.cs"];
m48_10 [label="return new Verb(\r\n                attribute.Name,\r\n                attribute.HelpText\r\n                );", span="34-37", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="SentenceBuilder.cs"];
m48_11 [label="Exit CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="SentenceBuilder.cs"];
m48_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SentenceBuilder.cs"];
m48_18 [label="CommandLine.Core.Verb", span="", file="SentenceBuilder.cs"];
m50_39 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="129-129", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="Specification.cs"];
m50_40 [label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = new[] { ''aa'', ''b'' } }", span="132-132", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="Specification.cs"];
m50_41 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                new[] { ''sequence'', ''-s'', ''aa'', ''b'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="135-139", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="Specification.cs"];
m50_43 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="143-143", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="Specification.cs"];
m50_42 [label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="142-142", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="Specification.cs"];
m50_44 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", span="129-129", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_returns_verb_instance()", file="Specification.cs"];
m50_13 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="Specification.cs"];
m50_14 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Specification.cs"];
m50_15 [label="var expectedErrors = new[] { new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true) }", span="56-56", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Specification.cs"];
m50_16 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''commit'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="59-63", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Specification.cs"];
m50_17 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="66-66", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Specification.cs"];
m50_18 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", span="53-53", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_a_valid_verb_generates_HelpVerbRequestedError_with_appropriate_data()", file="Specification.cs"];
m50_38 [label="Entry CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", span="13-13", cluster="CommandLine.Tests.Fakes.ImmutableAddOptions.ImmutableAddOptions(bool, bool, string)", file="Specification.cs"];
m50_5 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="Specification.cs"];
m50_6 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="Specification.cs"];
m50_24 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Specification.cs"];
m50_25 [label="var expected = new AddOptions { Patch = true, FileName = ''dummy.bin''}", span="94-94", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Specification.cs"];
m50_26 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="97-101", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Specification.cs"];
m50_28 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="105-105", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Specification.cs"];
m50_27 [label="Assert.IsType<AddOptions>(((Parsed<object>)result).Value)", span="104-104", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Specification.cs"];
m50_29 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", span="91-91", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_instance()", file="Specification.cs"];
m50_30 [label="Entry CommandLine.Tests.Fakes.AddOptions.AddOptions()", span="7-7", cluster="CommandLine.Tests.Fakes.AddOptions.AddOptions()", file="Specification.cs"];
m50_0 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Specification.cs"];
m50_1 [label="var expectedErrors = new[] { new NoVerbSelectedError() }", span="18-18", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Specification.cs"];
m50_2 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new string[] { },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="21-25", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Specification.cs"];
m50_3 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="28-28", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Specification.cs"];
m50_4 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", span="15-15", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_empty_array_returns_NullInstance()", file="Specification.cs"];
m50_8 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Specification.cs"];
m50_9 [label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="37-37", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Specification.cs"];
m50_10 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="40-44", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Specification.cs"];
m50_11 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="47-47", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Specification.cs"];
m50_12 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", span="34-34", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_generates_HelpVerbRequestedError()", file="Specification.cs"];
m50_31 [label="Entry Unk.>", span="", cluster="Unk.>", file="Specification.cs"];
m50_19 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Specification.cs"];
m50_20 [label="var expectedErrors = new[] { new HelpVerbRequestedError(null, null, false) }", span="75-75", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Specification.cs"];
m50_21 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) },\r\n                new[] { ''help'', ''earthunderalienattack'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="78-82", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Specification.cs"];
m50_22 [label="((NotParsed<object>)result).Errors.ShouldBeEquivalentTo(expectedErrors)", span="85-85", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Specification.cs"];
m50_23 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", span="72-72", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Explicit_help_request_for_an_invalid_verb_generates_HelpVerbRequestedError_with_Matched_set_to_false()", file="Specification.cs"];
m50_46 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="152-152", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="Specification.cs"];
m50_47 [label="var expected = new SequenceOptions { LongSequence = new long[] { }, StringSequence = expectedString }", span="155-155", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="Specification.cs"];
m50_48 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions), typeof(SequenceOptions) },\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="158-162", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="Specification.cs"];
m50_50 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="166-166", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="Specification.cs"];
m50_49 [label="Assert.IsType<SequenceOptions>(((Parsed<object>)result).Value)", span="165-165", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="Specification.cs"];
m50_51 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", span="152-152", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_sequence_verb_with_separator_returns_verb_instance(string[], string[])", file="Specification.cs"];
m50_32 [label="Entry CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="110-110", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="Specification.cs"];
m50_33 [label="var expected = new ImmutableAddOptions(true, default(bool), ''dummy.bin'')", span="113-113", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="Specification.cs"];
m50_34 [label="var result = InstanceChooser.Choose(\r\n                new[] { typeof(ImmutableAddOptions), typeof(ImmutableCommitOptions), typeof(ImmutableCloneOptions) },\r\n                new[] { ''add'', ''--patch'', ''dummy.bin'' },\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture)", span="116-120", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="Specification.cs"];
m50_36 [label="expected.ShouldBeEquivalentTo(((Parsed<object>)result).Value)", span="124-124", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="Specification.cs"];
m50_35 [label="Assert.IsType<ImmutableAddOptions>(((Parsed<object>)result).Value)", span="123-123", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="Specification.cs"];
m50_37 [label="Exit CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", span="110-110", cluster="CommandLine.Tests.Unit.Core.InstanceChooserTests.Parse_existing_verb_returns_verb_immutable_instance()", file="Specification.cs"];
m50_45 [label="Entry CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", span="48-48", cluster="CommandLine.Tests.Fakes.SequenceOptions.SequenceOptions()", file="Specification.cs"];
m50_7 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="Specification.cs"];
m51_254 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)", file="SpecificationExtensions.cs"];
m51_99 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="284-284", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_115 [label="parserResult == null", span="286-286", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_117 [label="current == null", span="287-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_119 [label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="289-289", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_120 [label="return current;", span="290-290", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_121 [label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="292-295", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_123 [label="return current;", span="297-297", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_124 [label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="299-302", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_116 [label="throw new ArgumentNullException(''parserResult'');", span="286-286", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_118 [label="throw new ArgumentNullException(''current'');", span="287-287", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_122 [label="errors.Empty()", span="296-296", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_125 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="284-284", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_126 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="SpecificationExtensions.cs"];
m51_59 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="SpecificationExtensions.cs"];
m51_0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="35-35", cluster="CommandLine.Text.HelpText.HelpText()", file="SpecificationExtensions.cs"];
m51_1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="35-35", cluster="CommandLine.Text.HelpText.HelpText()", file="SpecificationExtensions.cs"];
m51_379 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)", file="SpecificationExtensions.cs"];
m51_460 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()", file="SpecificationExtensions.cs"];
m51_324 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="SpecificationExtensions.cs"];
m51_62 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="388-388", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_171 [label="result == null", span="390-390", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_173 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="392-395", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_172 [label="throw new ArgumentNullException(''result'');", span="390-390", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_174 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="388-388", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_269 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()", file="SpecificationExtensions.cs"];
m51_268 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", file="SpecificationExtensions.cs"];
m51_89 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="SpecificationExtensions.cs"];
m51_87 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="SpecificationExtensions.cs"];
m51_402 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)", file="SpecificationExtensions.cs"];
m51_132 [label="Entry CommandLine.Text.HelpText.ToString()", span="579-579", cluster="CommandLine.Text.HelpText.ToString()", file="SpecificationExtensions.cs"];
m51_262 [label="int ExtraLength = 10", span="581-581", cluster="CommandLine.Text.HelpText.ToString()", file="SpecificationExtensions.cs"];
m51_263 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="582-594", cluster="CommandLine.Text.HelpText.ToString()", file="SpecificationExtensions.cs"];
m51_264 [label="Exit CommandLine.Text.HelpText.ToString()", span="579-579", cluster="CommandLine.Text.HelpText.ToString()", file="SpecificationExtensions.cs"];
m51_265 [label="Entry string.SafeLength()", span="40-40", cluster="string.SafeLength()", file="SpecificationExtensions.cs"];
m51_136 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="332-332", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="SpecificationExtensions.cs"];
m51_137 [label="return AddLine(postOptionsHelp, value);", span="334-334", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="SpecificationExtensions.cs"];
m51_138 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="332-332", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="SpecificationExtensions.cs"];
m51_267 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)", file="SpecificationExtensions.cs"];
m51_252 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()", file="SpecificationExtensions.cs"];
m51_426 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="844-844", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_429 [label="var specLength = 0", span="846-846", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_430 [label="var hasShort = spec.ShortName.Length > 0", span="848-848", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_431 [label="var hasLong = spec.LongName.Length > 0", span="849-849", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_433 [label="spec.MetaValue.Length > 0", span="852-852", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_434 [label="metaLength = spec.MetaValue.Length + 1", span="853-853", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_441 [label="specLength += spec.LongName.Length", span="866-866", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_436 [label="++specLength", span="857-857", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_446 [label="specLength += 2", span="874-874", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_447 [label="return specLength;", span="876-876", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_435 [label=hasShort, span="855-855", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_445 [label="hasShort && hasLong", span="873-873", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_432 [label="var metaLength = 0", span="851-851", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_440 [label=hasLong, span="864-864", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_439 [label="specLength += metaLength", span="861-861", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_444 [label="specLength += metaLength", span="870-870", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_437 [label=AddDashesToOption, span="858-858", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_438 [label="++specLength", span="859-859", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_442 [label=AddDashesToOption, span="867-867", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_443 [label="specLength += 2", span="868-868", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_448 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="844-844", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_255 [label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124", cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", file="SpecificationExtensions.cs"];
m51_325 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="669-676", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="SpecificationExtensions.cs"];
m51_184 [label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="667-667", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="SpecificationExtensions.cs"];
m51_326 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="667-667", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", file="SpecificationExtensions.cs"];
m51_381 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()", file="SpecificationExtensions.cs"];
m51_266 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()", file="SpecificationExtensions.cs"];
m51_327 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="SpecificationExtensions.cs"];
m51_380 [label="Entry string.FormatInvariant(params object[])", span="20-20", cluster="string.FormatInvariant(params object[])", file="SpecificationExtensions.cs"];
m51_23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationExtensions.cs"];
m51_299 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)", file="SpecificationExtensions.cs"];
m51_197 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="457-457", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_198 [label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="463-465", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_199 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="457-457", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_49 [label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="597-597", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationExtensions.cs"];
m51_270 [label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="599-599", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationExtensions.cs"];
m51_271 [label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="597-597", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationExtensions.cs"];
m51_315 [label="Entry System.Type.GetUsageData()", span="38-38", cluster="System.Type.GetUsageData()", file="SpecificationExtensions.cs"];
m51_401 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", file="SpecificationExtensions.cs"];
m51_60 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SpecificationExtensions.cs"];
m51_253 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", file="SpecificationExtensions.cs"];
m51_52 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", file="SpecificationExtensions.cs"];
m51_127 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="476-476", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_201 [label="parserResult == null", span="482-482", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_205 [label="yield break;", span="487-487", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_208 [label="yield return line.ToString();", span="494-494", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_213 [label="yield return line;", span="505-505", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_203 [label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="484-485", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_207 [label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="492-493", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_209 [label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="497-499", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_202 [label="throw new ArgumentNullException(''parserResult'');", span="482-482", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_204 [label="meaningfulErrors.Empty()", span="486-486", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_206 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="489-490", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_210 [label="mutuallyErrs.Length > 0", span="500-500", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_211 [label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="502-503", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_212 [label=lines, span="504-504", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_214 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="476-476", cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs"];
m51_340 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="724-724", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_348 [label="optionsHelp.Append(''  '')", span="726-726", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_349 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="727-731", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_350 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="733-735", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_351 [label="var optionHelpText = specification.HelpText", span="737-737", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_352 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="739-739", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_353 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="740-740", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_354 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="742-743", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_355 [label="specification.Required", span="745-745", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_356 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="746-746", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_362 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="756-756", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_365 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="760-760", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_368 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="766-766", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_369 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="768-768", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_370 [label="wordBuffer = widthOfHelpText", span="769-769", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_373 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="777-778", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_374 [label="optionHelpText.Length > widthOfHelpText", span="780-780", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_357 [label="!string.IsNullOrEmpty(optionHelpText)", span="748-748", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_359 [label="var words = optionHelpText.Split(' ')", span="753-753", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_372 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="776-776", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_375 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="783-786", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_358 [label="var wordBuffer = 0", span="752-752", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_364 [label="wordBuffer += words[i].Length", span="759-759", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_360 [label="var i = 0", span="754-754", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_361 [label="i < words.Length", span="754-754", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_363 [label="optionsHelp.Append(words[i])", span="758-758", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_371 [label="i++", span="754-754", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_367 [label="wordBuffer++", span="763-763", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_366 [label="optionsHelp.Append('' '')", span="762-762", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_376 [label="return this;", span="788-788", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_377 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="724-724", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", file="SpecificationExtensions.cs"];
m51_344 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="707-707", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="SpecificationExtensions.cs"];
m51_307 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="707-707", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="SpecificationExtensions.cs"];
m51_343 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="709-714", cluster="CommandLine.Text.HelpText.MakeVersionEntry()", file="SpecificationExtensions.cs"];
m51_403 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", file="SpecificationExtensions.cs"];
m51_128 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)", file="SpecificationExtensions.cs"];
m51_422 [label="Entry lambda expression", span="833-840", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_64 [label="license.AddToHelpText(auto, true)", span="219-219", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_68 [label="usage.AddToHelpText(auto, true)", span="232-232", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_63 [label="Entry lambda expression", span="219-219", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_67 [label="Entry lambda expression", span="232-232", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_70 [label="Entry lambda expression", span="238-238", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_65 [label="Exit lambda expression", span="219-219", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_69 [label="Exit lambda expression", span="232-232", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_71 [label="e.Tag == ErrorType.NoVerbSelectedError", span="238-238", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_72 [label="Exit lambda expression", span="238-238", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_97 [label="DefaultParsingErrorsHandler(parserResult, current)", span="270-270", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_110 [label="DefaultParsingErrorsHandler(parserResult, current)", span="276-276", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_90 [label="Entry lambda expression", span="266-266", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_93 [label="Entry lambda expression", span="269-269", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_104 [label="DefaultParsingErrorsHandler(pr, current)", span="275-275", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_103 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_106 [label="Entry lambda expression", span="275-275", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_109 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_112 [label="Entry lambda expression", span="276-276", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_96 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_100 [label="Entry lambda expression", span="270-270", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_91 [label="e.Tag == ErrorType.VersionRequestedError", span="266-266", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_92 [label="Exit lambda expression", span="266-266", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_94 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="269-269", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_95 [label="Exit lambda expression", span="269-269", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_98 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_101 [label=e, span="270-270", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_102 [label="Exit lambda expression", span="270-270", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_105 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_107 [label=e, span="275-275", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_108 [label="Exit lambda expression", span="275-275", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_111 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_113 [label=e, span="276-276", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_114 [label="Exit lambda expression", span="276-276", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_144 [label="Entry lambda expression", span="344-344", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_145 [label="AddPreOptionsLine(line)", span="344-344", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_146 [label="Exit lambda expression", span="344-344", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_151 [label="Entry lambda expression", span="355-355", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_152 [label="AddPostOptionsLine(line)", span="355-355", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_153 [label="Exit lambda expression", span="355-355", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_160 [label="Entry lambda expression", span="367-367", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_161 [label="AddPreOptionsLine(line)", span="367-367", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_162 [label="Exit lambda expression", span="367-367", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_168 [label="Entry lambda expression", span="379-379", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_169 [label="AddPostOptionsLine(line)", span="379-379", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_170 [label="Exit lambda expression", span="379-379", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_221 [label="Entry lambda expression", span="490-490", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_222 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="490-490", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_223 [label="Exit lambda expression", span="490-490", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_228 [label="Entry lambda expression", span="517-517", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_229 [label=example, span="517-517", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_230 [label="Exit lambda expression", span="517-517", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_258 [label="config.PreferShortName = s.PreferShortName", span="566-566", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_259 [label="config.GroupSwitches = s.GroupSwitches", span="567-567", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_260 [label="config.UseEqualToken = s.UseEqualToken", span="568-568", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_257 [label="Entry lambda expression", span="564-569", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_261 [label="Exit lambda expression", span="564-569", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_272 [label="Entry lambda expression", span="599-599", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_273 [label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="599-599", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_274 [label="Exit lambda expression", span="599-599", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_310 [label="Entry lambda expression", span="646-646", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_311 [label="v.Index", span="646-646", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_312 [label="Exit lambda expression", span="646-646", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_317 [label="Entry lambda expression", span="655-664", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_318 [label="var prop = tuple.Item1", span="657-657", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_319 [label="var attr = tuple.Item2", span="658-658", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_320 [label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="660-661", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_321 [label="return Tuple.Create(attr, examples);", span="663-663", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_322 [label="Exit lambda expression", span="655-664", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_338 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="692-692", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_337 [label="Entry lambda expression", span="691-692", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_339 [label="Exit lambda expression", span="691-692", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_384 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="730-730", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_388 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="731-731", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_383 [label="Entry lambda expression", span="730-730", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_387 [label="Entry lambda expression", span="731-731", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_391 [label="Entry lambda expression", span="743-743", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_392 [label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="743-743", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_385 [label="Exit lambda expression", span="730-730", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_389 [label="Exit lambda expression", span="731-731", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_393 [label="Exit lambda expression", span="743-743", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_399 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="797-801", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_405 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="804-807", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_398 [label="Entry lambda expression", span="797-801", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_404 [label="Entry lambda expression", span="804-807", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_400 [label="Exit lambda expression", span="797-801", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_406 [label="Exit lambda expression", span="804-807", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_410 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="816-816", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_414 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="817-817", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_409 [label="Entry lambda expression", span="816-816", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_413 [label="Entry lambda expression", span="817-817", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_411 [label="Exit lambda expression", span="816-816", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_415 [label="Exit lambda expression", span="817-817", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_423 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="835-837", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_424 [label="return Math.Max(length, specLength);", span="839-839", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_425 [label="Exit lambda expression", span="833-840", cluster="lambda expression", file="SpecificationExtensions.cs"];
m51_397 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="SpecificationExtensions.cs"];
m51_85 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)", file="SpecificationExtensions.cs"];
m51_386 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="791-791", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_395 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="793-808", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_396 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="791-791", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs"];
m51_4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="58-58", cluster="CommandLine.Text.HelpText.HelpText(string)", file="SpecificationExtensions.cs"];
m51_5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="58-58", cluster="CommandLine.Text.HelpText.HelpText(string)", file="SpecificationExtensions.cs"];
m51_329 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="SpecificationExtensions.cs"];
m51_73 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_74 [label="parserResult.Tag != ParserResultType.NotParsed", span="261-261", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_76 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="264-264", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_80 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="270-270", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_83 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="274-276", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_75 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="262-262", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_77 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="266-266", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_79 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="269-269", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_81 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="272-272", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_78 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="267-267", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_82 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="273-273", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_84 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_217 [label="Entry int.Spaces()", span="30-30", cluster="int.Spaces()", file="SpecificationExtensions.cs"];
m51_66 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", file="SpecificationExtensions.cs"];
m51_220 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="SpecificationExtensions.cs"];
m51_251 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()", file="SpecificationExtensions.cs"];
m51_163 [label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="376-376", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="SpecificationExtensions.cs"];
m51_164 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="378-378", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="SpecificationExtensions.cs"];
m51_165 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="379-379", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="SpecificationExtensions.cs"];
m51_166 [label="return this;", span="380-380", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="SpecificationExtensions.cs"];
m51_167 [label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="376-376", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", file="SpecificationExtensions.cs"];
m51_61 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="404-404", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="SpecificationExtensions.cs"];
m51_177 [label="types == null", span="406-406", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="SpecificationExtensions.cs"];
m51_179 [label="types.Length == 0", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="SpecificationExtensions.cs"];
m51_181 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="409-412", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="SpecificationExtensions.cs"];
m51_178 [label="throw new ArgumentNullException(''types'');", span="406-406", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="SpecificationExtensions.cs"];
m51_180 [label="throw new ArgumentOutOfRangeException(''types'');", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="SpecificationExtensions.cs"];
m51_182 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="404-404", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", file="SpecificationExtensions.cs"];
m51_250 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="652-652", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_313 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="654-664", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_314 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="652-652", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_159 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="SpecificationExtensions.cs"];
m51_200 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_8 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="81-81", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="SpecificationExtensions.cs"];
m51_9 [label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="81-81", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="SpecificationExtensions.cs"];
m51_224 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="515-515", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_225 [label="return RenderUsageText(parserResult, example => example);", span="517-517", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_226 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="515-515", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_143 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", file="SpecificationExtensions.cs"];
m51_296 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="SpecificationExtensions.cs"];
m51_24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)", file="SpecificationExtensions.cs"];
m51_328 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", file="SpecificationExtensions.cs"];
m51_25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="195-195", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="201-206", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="210-210", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="212-212", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_31 [label="auto = onError(auto)", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_34 [label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample)", span="222-222", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_42 [label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="237-238", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_44 [label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="241-241", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_45 [label="auto.AddOptions(parserResult)", span="244-244", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_27 [label="var errors = Enumerable.Empty<Error>()", span="208-208", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="218-219", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_36 [label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="226-226", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_38 [label="auto.AddPreOptionsLine(heading)", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_39 [label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="231-232", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_41 [label="auto.AddPreOptionsLines(usageLines)", span="235-235", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_43 [label="auto.AddDashesToOption = false", span="240-240", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_46 [label="return auto;", span="246-246", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_30 [label="FilterMeaningfulErrors(errors).Any()", span="214-214", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_33 [label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="221-221", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_35 [label="usageAttr.IsJust() || usageLines.Any()", span="224-224", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_40 [label="usageLines.Any()", span="234-234", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_37 [label="heading.Length > 0", span="227-227", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_47 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="195-195", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", file="SpecificationExtensions.cs"];
m51_51 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs"];
m51_48 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationExtensions.cs"];
m51_215 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="SpecificationExtensions.cs"];
m51_88 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationExtensions.cs"];
m51_382 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="SpecificationExtensions.cs"];
m51_298 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)", file="SpecificationExtensions.cs"];
m51_309 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", file="SpecificationExtensions.cs"];
m51_412 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", file="SpecificationExtensions.cs"];
m51_176 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="679-679", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="SpecificationExtensions.cs"];
m51_330 [label="var maxLength = GetMaxLength(specifications)", span="684-684", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="SpecificationExtensions.cs"];
m51_332 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="688-688", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="SpecificationExtensions.cs"];
m51_333 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="690-692", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="SpecificationExtensions.cs"];
m51_331 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="686-686", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="SpecificationExtensions.cs"];
m51_334 [label="return this;", span="694-694", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="SpecificationExtensions.cs"];
m51_335 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="679-679", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", file="SpecificationExtensions.cs"];
m51_219 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="SpecificationExtensions.cs"];
m51_129 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="310-310", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_130 [label="return info.ToString();", span="312-312", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_131 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="310-310", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", file="SpecificationExtensions.cs"];
m51_135 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="717-717", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="SpecificationExtensions.cs"];
m51_345 [label="AddLine(preOptionsHelp, value, maximumLength)", span="719-719", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="SpecificationExtensions.cs"];
m51_346 [label="return this;", span="721-721", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="SpecificationExtensions.cs"];
m51_347 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="717-717", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", file="SpecificationExtensions.cs"];
m51_323 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", file="SpecificationExtensions.cs"];
m51_139 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="823-823", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="SpecificationExtensions.cs"];
m51_416 [label="AddLine(builder, value, MaximumDisplayWidth)", span="825-825", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="SpecificationExtensions.cs"];
m51_417 [label="return this;", span="827-827", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="SpecificationExtensions.cs"];
m51_418 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="823-823", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", file="SpecificationExtensions.cs"];
m51_2 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="47-47", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="SpecificationExtensions.cs"];
m51_3 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="47-47", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", file="SpecificationExtensions.cs"];
m51_301 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="641-643", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_175 [label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="638-638", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_300 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="640-640", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_302 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="644-646", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_303 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="647-649", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_304 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="638-638", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", file="SpecificationExtensions.cs"];
m51_275 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="602-602", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_276 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="604-604", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_278 [label="var words = value.Split(' ')", span="608-608", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_281 [label="words[i].Length < (maximumLength - wordBuffer)", span="611-611", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_282 [label="builder.Append(words[i])", span="613-613", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_284 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="615-615", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_285 [label="builder.Append('' '')", span="617-617", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_287 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="621-621", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_288 [label="builder.Append(words[i].Substring(0, maximumLength))", span="623-623", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_289 [label="wordBuffer = maximumLength", span="624-624", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_291 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="630-630", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_292 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="631-631", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_293 [label="value.Length > maximumLength", span="633-633", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_294 [label="builder.Append(value)", span="635-635", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_277 [label="var wordBuffer = 0", span="607-607", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_283 [label="wordBuffer += words[i].Length", span="614-614", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_279 [label="var i = 0", span="609-609", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_280 [label="i < words.Length", span="609-609", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_290 [label="i++", span="609-609", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_286 [label="wordBuffer++", span="618-618", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_295 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="602-602", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", file="SpecificationExtensions.cs"];
m51_10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="94-94", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_11 [label="sentenceBuilder == null", span="96-96", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_13 [label="heading == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_15 [label="copyright == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_19 [label="this.sentenceBuilder = sentenceBuilder", span="103-103", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_20 [label="this.heading = heading", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_21 [label="this.copyright = copyright", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="96-96", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_14 [label="throw new ArgumentNullException(''heading'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_16 [label="throw new ArgumentNullException(''copyright'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="100-100", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="94-94", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", file="SpecificationExtensions.cs"];
m51_390 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="811-811", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_407 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="813-820", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_408 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="811-811", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_58 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="342-342", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_140 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="344-344", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_141 [label="return this;", span="345-345", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_142 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="342-342", cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_428 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)", file="SpecificationExtensions.cs"];
m51_218 [label="Entry Unk.formatError", span="", cluster="Unk.formatError", file="SpecificationExtensions.cs"];
m51_336 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="830-830", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="SpecificationExtensions.cs"];
m51_419 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="832-840", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="SpecificationExtensions.cs"];
m51_420 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="830-830", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", file="SpecificationExtensions.cs"];
m51_378 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", file="SpecificationExtensions.cs"];
m51_183 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="SpecificationExtensions.cs"];
m51_342 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="697-697", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="SpecificationExtensions.cs"];
m51_306 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="697-697", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="SpecificationExtensions.cs"];
m51_341 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="699-704", cluster="CommandLine.Text.HelpText.MakeHelpEntry()", file="SpecificationExtensions.cs"];
m51_297 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="SpecificationExtensions.cs"];
m51_394 [label="Entry string.FormatLocal(params object[])", span="25-25", cluster="string.FormatLocal(params object[])", file="SpecificationExtensions.cs"];
m51_185 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="421-421", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_186 [label="result == null", span="423-423", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_188 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="425-428", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_187 [label="throw new ArgumentNullException(''result'');", span="423-423", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_189 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="421-421", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs"];
m51_427 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="879-879", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_449 [label="var specLength = 0", span="881-881", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_450 [label="var hasMeta = spec.MetaName.Length > 0", span="883-883", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_452 [label="spec.MetaValue.Length > 0", span="886-886", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_453 [label="metaLength = spec.MetaValue.Length + 1", span="887-887", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_455 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="890-890", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_456 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="892-892", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_451 [label="var metaLength = 0", span="885-885", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_454 [label=hasMeta, span="889-889", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_457 [label="specLength += metaLength", span="894-894", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_458 [label="return specLength;", span="896-896", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_459 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="879-879", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", file="SpecificationExtensions.cs"];
m51_57 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="321-321", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="SpecificationExtensions.cs"];
m51_133 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="323-323", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="SpecificationExtensions.cs"];
m51_134 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="321-321", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="SpecificationExtensions.cs"];
m51_316 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", file="SpecificationExtensions.cs"];
m51_305 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="SpecificationExtensions.cs"];
m51_50 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SpecificationExtensions.cs"];
m51_56 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="SpecificationExtensions.cs"];
m51_190 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="438-438", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="SpecificationExtensions.cs"];
m51_191 [label="types == null", span="440-440", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="SpecificationExtensions.cs"];
m51_193 [label="types.Length == 0", span="441-441", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="SpecificationExtensions.cs"];
m51_195 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="443-446", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="SpecificationExtensions.cs"];
m51_192 [label="throw new ArgumentNullException(''types'');", span="440-440", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="SpecificationExtensions.cs"];
m51_194 [label="throw new ArgumentOutOfRangeException(''types'');", span="441-441", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="SpecificationExtensions.cs"];
m51_196 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="438-438", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", file="SpecificationExtensions.cs"];
m51_147 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="353-353", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_148 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="355-355", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_149 [label="return this;", span="356-356", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_150 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="353-353", cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", file="SpecificationExtensions.cs"];
m51_53 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", file="SpecificationExtensions.cs"];
m51_154 [label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="364-364", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="SpecificationExtensions.cs"];
m51_155 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="366-366", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="SpecificationExtensions.cs"];
m51_156 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="367-367", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="SpecificationExtensions.cs"];
m51_157 [label="return this;", span="368-368", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="SpecificationExtensions.cs"];
m51_158 [label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="364-364", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", file="SpecificationExtensions.cs"];
m51_6 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="69-69", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="SpecificationExtensions.cs"];
m51_7 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="69-69", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", file="SpecificationExtensions.cs"];
m51_227 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="527-527", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_231 [label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="529-529", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_232 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="527-527", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_54 [label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="539-539", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_233 [label="parserResult == null", span="541-541", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_237 [label="yield break;", span="545-545", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_244 [label="yield return exampleText.ToString();", span="556-556", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_248 [label="yield return commandLine.ToString();", span="570-570", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_235 [label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="543-543", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_242 [label="var example = mapperFunc(e)", span="553-553", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_234 [label="throw new ArgumentNullException(''parserResult'');", span="541-541", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_236 [label="usage.MatchNothing()", span="544-544", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_238 [label="var usageTuple = usage.FromJust()", span="547-547", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_239 [label="var examples = usageTuple.Item2", span="548-548", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_240 [label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="549-549", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_241 [label=examples, span="551-551", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_247 [label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="560-569", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_243 [label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="554-555", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_245 [label="var styles = example.GetFormatStylesOrDefault()", span="557-557", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_246 [label=styles, span="558-558", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_249 [label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="539-539", cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", file="SpecificationExtensions.cs"];
m51_421 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="SpecificationExtensions.cs"];
m51_256 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", file="SpecificationExtensions.cs"];
m51_216 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="SpecificationExtensions.cs"];
m51_86 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="SpecificationExtensions.cs"];
m51_55 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326", cluster="CSharpx.Maybe<T>.IsJust<T>()", file="SpecificationExtensions.cs"];
m51_308 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationExtensions.cs"];
m51_461 [label="CommandLine.Text.HelpText", span="", file="SpecificationExtensions.cs"];
m51_462 [label=auto, span="", file="SpecificationExtensions.cs"];
m51_463 [label="CommandLine.ParserResult<T>", span="", file="SpecificationExtensions.cs"];
m51_464 [label=pr, span="", file="SpecificationExtensions.cs"];
m51_465 [label=s, span="", file="SpecificationExtensions.cs"];
m51_466 [label=string, span="", file="SpecificationExtensions.cs"];
m51_467 [label=maxLength, span="", file="SpecificationExtensions.cs"];
m51_468 [label=remainingSpace, span="", file="SpecificationExtensions.cs"];
m51_469 [label=int, span="", file="SpecificationExtensions.cs"];
m51_470 [label="CommandLine.Core.Specification", span="", file="SpecificationExtensions.cs"];
m51_471 [label=optionHelpText, span="", file="SpecificationExtensions.cs"];
m51_472 [label="CommandLine.Core.OptionSpecification", span="", file="SpecificationExtensions.cs"];
m51_473 [label="CommandLine.Core.ValueSpecification", span="", file="SpecificationExtensions.cs"];
m52_0 [label="Entry CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", span="10-10", cluster="CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", file="SpecificationGuards.cs"];
m52_1 [label="return errors.Any()\r\n                ? (ParserResult<T>)new NotParsed<T>(instance.GetType().ToTypeInfo(), errors)\r\n                : (ParserResult<T>)new Parsed<T>(instance);", span="12-14", cluster="CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", file="SpecificationGuards.cs"];
m52_2 [label="Exit CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", span="10-10", cluster="CommandLine.ErrorExtensions.ToParserResult<T>(System.Collections.Generic.IEnumerable<CommandLine.Error>, T)", file="SpecificationGuards.cs"];
m52_4 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationGuards.cs"];
m52_3 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SpecificationGuards.cs"];
m52_5 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="SpecificationGuards.cs"];
m52_6 [label="Entry System.Type.ToTypeInfo()", span="174-174", cluster="System.Type.ToTypeInfo()", file="SpecificationGuards.cs"];
m52_7 [label="Entry CommandLine.Parsed<T>.Parsed(T)", span="100-100", cluster="CommandLine.Parsed<T>.Parsed(T)", file="SpecificationGuards.cs"];
m53_20 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SpecificationProperty.cs"];
m53_21 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="36-36", cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="SpecificationProperty.cs"];
m53_22 [label="var index = -1", span="38-38", cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="SpecificationProperty.cs"];
m53_23 [label=source, span="39-39", cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="SpecificationProperty.cs"];
m53_25 [label="predicate(item)", span="42-42", cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="SpecificationProperty.cs"];
m53_24 [label="index++", span="41-41", cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="SpecificationProperty.cs"];
m53_26 [label="return index;", span="47-47", cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="SpecificationProperty.cs"];
m53_27 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="36-36", cluster="CommandLine.Infrastructure.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="SpecificationProperty.cs"];
m53_34 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="SpecificationProperty.cs"];
m53_29 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="50-50", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="SpecificationProperty.cs"];
m53_30 [label="var array = Array.CreateInstance(type, value.Count())", span="52-52", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="SpecificationProperty.cs"];
m53_31 [label="value.ToArray().CopyTo(array, 0)", span="53-53", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="SpecificationProperty.cs"];
m53_32 [label="return array;", span="54-54", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="SpecificationProperty.cs"];
m53_33 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="50-50", cluster="CommandLine.Infrastructure.EnumerableExtensions.ToArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="SpecificationProperty.cs"];
m53_8 [label="Entry System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="18-18", cluster="System.Collections.Generic.IEnumerable<TSource>.PairwiseImpl<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_19 [label="Entry System.Collections.IEnumerator.MoveNext()", span="0-0", cluster="System.Collections.IEnumerator.MoveNext()", file="SpecificationProperty.cs"];
m53_35 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="SpecificationProperty.cs"];
m53_18 [label="Entry System.Collections.Generic.IEnumerable<T>.GetEnumerator()", span="0-0", cluster="System.Collections.Generic.IEnumerable<T>.GetEnumerator()", file="SpecificationProperty.cs"];
m53_36 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="SpecificationProperty.cs"];
m53_37 [label="Entry System.Array.CopyTo(System.Array, int)", span="0-0", cluster="System.Array.CopyTo(System.Array, int)", file="SpecificationProperty.cs"];
m53_38 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="57-57", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationProperty.cs"];
m53_39 [label="return !source.Any();", span="59-59", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationProperty.cs"];
m53_40 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="57-57", cluster="CommandLine.Infrastructure.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationProperty.cs"];
m53_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="SpecificationProperty.cs"];
m53_7 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="SpecificationProperty.cs"];
m53_9 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_10 [label="var enumerator = source.GetEnumerator()", span="20-20", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_15 [label="yield return selector(left, right);", span="29-29", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_11 [label="enumerator.MoveNext()", span="22-22", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_12 [label="var left = enumerator.Current", span="24-24", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_13 [label="enumerator.MoveNext()", span="26-26", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_14 [label="var right = enumerator.Current", span="28-28", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_16 [label="left = right", span="30-30", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_17 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="18-18", cluster="CommandLine.Infrastructure.EnumerableExtensions.PairwiseImpl<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_0 [label="Entry CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_1 [label="source == null", span="12-12", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_3 [label="selector == null", span="13-13", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_5 [label="return source.PairwiseImpl(selector);", span="15-15", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_2 [label="throw new ArgumentNullException(''source'');", span="12-12", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_4 [label="throw new ArgumentNullException(''selector'');", span="13-13", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_6 [label="Exit CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", span="10-10", cluster="CommandLine.Infrastructure.EnumerableExtensions.Pairwise<TSource, TResult>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, TSource, TResult>)", file="SpecificationProperty.cs"];
m53_28 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationProperty.cs"];
m55_0 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute()", span="44-44", cluster="CommandLine.OptionListAttribute.OptionListAttribute()", file="SpecificationPropertyRules.cs"];
m55_1 [label="AutoLongName = true", span="46-46", cluster="CommandLine.OptionListAttribute.OptionListAttribute()", file="SpecificationPropertyRules.cs"];
m55_2 [label="Separator = DefaultSeparator", span="48-48", cluster="CommandLine.OptionListAttribute.OptionListAttribute()", file="SpecificationPropertyRules.cs"];
m55_3 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute()", span="44-44", cluster="CommandLine.OptionListAttribute.OptionListAttribute()", file="SpecificationPropertyRules.cs"];
m55_11 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="86-86", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="SpecificationPropertyRules.cs"];
m55_12 [label="Separator = separator", span="89-89", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="SpecificationPropertyRules.cs"];
m55_13 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="86-86", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="SpecificationPropertyRules.cs"];
m55_4 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char)", span="55-55", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="SpecificationPropertyRules.cs"];
m55_5 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char)", span="55-55", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="SpecificationPropertyRules.cs"];
m55_6 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string)", span="64-64", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="SpecificationPropertyRules.cs"];
m55_7 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string)", span="64-64", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="SpecificationPropertyRules.cs"];
m55_8 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="74-74", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="SpecificationPropertyRules.cs"];
m55_9 [label="Separator = DefaultSeparator", span="77-77", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="SpecificationPropertyRules.cs"];
m55_10 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="74-74", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="SpecificationPropertyRules.cs"];
m55_14 [label="CommandLine.OptionListAttribute", span="", file="SpecificationPropertyRules.cs"];
m56_18 [label="Entry CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43", cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="StatePair.cs"];
m56_19 [label="return this.Value.GetHashCode() ^ this.Errors.GetHashCode();", span="45-45", cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="StatePair.cs"];
m56_20 [label="Exit CommandLine.Core.StatePair<T>.GetHashCode()", span="43-43", cluster="CommandLine.Core.StatePair<T>.GetHashCode()", file="StatePair.cs"];
m56_34 [label="Entry CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", span="69-69", cluster="CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", file="StatePair.cs"];
m56_35 [label="return new StatePair<T2>(func(statePair.Value), statePair.Errors);", span="73-73", cluster="CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", file="StatePair.cs"];
m56_36 [label="Exit CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", span="69-69", cluster="CommandLine.Core.StatePair.MapValue<T1, T2>(CommandLine.Core.StatePair<T1>, System.Func<T1, T2>)", file="StatePair.cs"];
m56_17 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="StatePair.cs"];
m56_10 [label="Entry CommandLine.Core.StatePair<T>.Equals(object)", span="32-32", cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs"];
m56_11 [label="var other = obj as StatePair<T>", span="34-34", cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs"];
m56_14 [label="return base.Equals(obj);", span="40-40", cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs"];
m56_12 [label="other != null", span="35-35", cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs"];
m56_13 [label="return this.Equals(other);", span="37-37", cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs"];
m56_15 [label="Exit CommandLine.Core.StatePair<T>.Equals(object)", span="32-32", cluster="CommandLine.Core.StatePair<T>.Equals(object)", file="StatePair.cs"];
m56_37 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="StatePair.cs"];
m56_0 [label="Entry CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_1 [label="object.Equals(value, default(T))", span="15-15", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_3 [label="errors == null", span="16-16", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_5 [label="this.value = value", span="18-18", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_6 [label="this.errors = errors", span="19-19", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_2 [label="throw new ArgumentNullException(''value'');", span="15-15", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_4 [label="throw new ArgumentNullException(''errors'');", span="16-16", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_7 [label="Exit CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="13-13", cluster="CommandLine.Core.StatePair<T>.StatePair(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_26 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="StatePair.cs"];
m56_8 [label="Entry object.Equals(object, object)", span="0-0", cluster="object.Equals(object, object)", file="StatePair.cs"];
m56_16 [label="Entry CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48", cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs"];
m56_22 [label="other == null", span="50-50", cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs"];
m56_24 [label="return this.Value.Equals(other.Value) && this.Errors.SequenceEqual(other.Errors);", span="55-55", cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs"];
m56_23 [label="return false;", span="52-52", cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs"];
m56_25 [label="Exit CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", span="48-48", cluster="CommandLine.Core.StatePair<T>.Equals(CommandLine.Core.StatePair<T>)", file="StatePair.cs"];
m56_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="StatePair.cs"];
m56_21 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()", file="StatePair.cs"];
m56_27 [label="Entry CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_28 [label="object.Equals(value, default(T))", span="63-63", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_30 [label="errors == null", span="64-64", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_32 [label="return new StatePair<T>(value, errors);", span="66-66", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_29 [label="throw new ArgumentNullException(''value'');", span="63-63", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_31 [label="throw new ArgumentNullException(''errors'');", span="64-64", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_33 [label="Exit CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="61-61", cluster="CommandLine.Core.StatePair.Create<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="StatePair.cs"];
m56_38 [label="CommandLine.Core.StatePair<T>", span="", file="StatePair.cs"];
m57_51 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="StringExtensions.cs"];
m57_33 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="StringExtensions.cs"];
m57_16 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="62-62", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", file="StringExtensions.cs"];
m57_34 [label="Entry Unk.>", span="", cluster="Unk.>", file="StringExtensions.cs"];
m57_29 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="StringExtensions.cs"];
m57_25 [label="Entry CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringExtensions.cs"];
m57_49 [label="return verb.Length > 0\r\n                      ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                             .ToMaybe()\r\n                             .Return(\r\n                                 v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                                 new HelpVerbRequestedError(null, null, false))\r\n                      : new HelpVerbRequestedError(null, null, false);", span="74-80", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringExtensions.cs"];
m57_50 [label="Exit CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="69-69", cluster="CommandLine.Core.InstanceChooser.CreateHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="StringExtensions.cs"];
m57_31 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="342-342", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="StringExtensions.cs"];
m57_53 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="368-368", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="StringExtensions.cs"];
m57_3 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_12 [label="var verbs = Verb.SelectFromTypes(types)", span="33-33", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_13 [label="return arguments.Empty()\r\n                ? ParserResult.Create<object>(\r\n                    ParserResultType.Verbs, new NullInstance(), new[] { new NoVerbSelectedError() }, Maybe.Just(types))\r\n                : nameComparer.Equals(''help'', arguments.First())\r\n                   ? ParserResult.Create<object>(\r\n                        ParserResultType.Verbs,\r\n                        new NullInstance(), new[] { CreateHelpVerbRequestedError(\r\n                            verbs,\r\n                            arguments.Skip(1).SingleOrDefault() ?? string.Empty,\r\n                            nameComparer) }, Maybe.Just(types))\r\n                   : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture);", span="35-45", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_14 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="26-26", cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_11 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="StringExtensions.cs"];
m57_22 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="StringExtensions.cs"];
m57_41 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="StringExtensions.cs"];
m57_52 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="StringExtensions.cs"];
m57_58 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="StringExtensions.cs"];
m57_5 [label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="19-19", cluster="lambda expression", file="StringExtensions.cs"];
m57_9 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="19-19", cluster="lambda expression", file="StringExtensions.cs"];
m57_4 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="StringExtensions.cs"];
m57_6 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="StringExtensions.cs"];
m57_8 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="StringExtensions.cs"];
m57_10 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="StringExtensions.cs"];
m57_36 [label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="55-55", cluster="lambda expression", file="StringExtensions.cs"];
m57_39 [label="Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2)", span="57-57", cluster="lambda expression", file="StringExtensions.cs"];
m57_44 [label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="57-57", cluster="lambda expression", file="StringExtensions.cs"];
m57_35 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="StringExtensions.cs"];
m57_38 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="StringExtensions.cs"];
m57_46 [label="Entry lambda expression", span="66-66", cluster="lambda expression", file="StringExtensions.cs"];
m57_37 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="StringExtensions.cs"];
m57_40 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="StringExtensions.cs"];
m57_43 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="StringExtensions.cs"];
m57_45 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="StringExtensions.cs"];
m57_47 [label="v.Item2", span="66-66", cluster="lambda expression", file="StringExtensions.cs"];
m57_48 [label="Exit lambda expression", span="66-66", cluster="lambda expression", file="StringExtensions.cs"];
m57_56 [label="nameComparer.Equals(v.Item1.Name, verb)", span="75-75", cluster="lambda expression", file="StringExtensions.cs"];
m57_55 [label="Entry lambda expression", span="75-75", cluster="lambda expression", file="StringExtensions.cs"];
m57_57 [label="Exit lambda expression", span="75-75", cluster="lambda expression", file="StringExtensions.cs"];
m57_59 [label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="78-78", cluster="lambda expression", file="StringExtensions.cs"];
m57_60 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="StringExtensions.cs"];
m57_21 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="StringExtensions.cs"];
m57_23 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="StringExtensions.cs"];
m57_19 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="StringExtensions.cs"];
m57_32 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="StringExtensions.cs"];
m57_18 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="406-406", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="StringExtensions.cs"];
m57_0 [label="Entry CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_1 [label="return Choose(\r\n                (args, optionSpecs) => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer)),\r\n                types,\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-23", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_2 [label="Exit CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceChooser.Choose(System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_7 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="11-11", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="StringExtensions.cs"];
m57_54 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="StringExtensions.cs"];
m57_26 [label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_27 [label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    () => Activator.CreateInstance(verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture)\r\n                : ParserResult.Create<object>(\r\n                    ParserResultType.Verbs,\r\n                    new NullInstance(),\r\n                    new[] { new BadVerbSelectedError(arguments.First()) },\r\n                    Maybe.Just(verbs.Select(v => v.Item2)));", span="55-66", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_28 [label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="48-48", cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="StringExtensions.cs"];
m57_17 [label="Entry CommandLine.NullInstance.NullInstance()", span="9-9", cluster="CommandLine.NullInstance.NullInstance()", file="StringExtensions.cs"];
m57_20 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", span="105-105", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>, CommandLine.Infrastructure.Maybe<System.Collections.Generic.IEnumerable<System.Type>>)", file="StringExtensions.cs"];
m57_42 [label="Entry Unk.CreateInstance", span="", cluster="Unk.CreateInstance", file="StringExtensions.cs"];
m57_15 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="StringExtensions.cs"];
m57_30 [label="Entry Unk.Build", span="", cluster="Unk.Build", file="StringExtensions.cs"];
m57_24 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="StringExtensions.cs"];
m57_61 [label="Entry HelpVerbRequestedError.cstr", span="", cluster="HelpVerbRequestedError.cstr", file="StringExtensions.cs"];
m57_62 [label="System.StringComparer", span="", file="StringExtensions.cs"];
m57_63 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="StringExtensions.cs"];
m57_64 [label="System.Collections.Generic.IEnumerable<string>", span="", file="StringExtensions.cs"];
m57_65 [label="System.StringComparer", span="", file="StringExtensions.cs"];
m57_66 [label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span="", file="StringExtensions.cs"];
m57_67 [label=string, span="", file="StringExtensions.cs"];
m57_68 [label="System.StringComparer", span="", file="StringExtensions.cs"];
m58_37 [label="Entry CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="77-77", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs"];
m58_38 [label="return token.Tag == TokenType.Value;", span="79-79", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs"];
m58_39 [label="Exit CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", span="77-77", cluster="CommandLine.Core.TokenExtensions.IsValue(CommandLine.Core.Token)", file="Token.cs"];
m58_34 [label="Entry CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="72-72", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m58_35 [label="return token.Tag == TokenType.Name;", span="74-74", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m58_36 [label="Exit CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", span="72-72", cluster="CommandLine.Core.TokenExtensions.IsName(CommandLine.Core.Token)", file="Token.cs"];
m58_27 [label="Entry string.GetHashCode()", span="0-0", cluster="string.GetHashCode()", file="Token.cs"];
m58_0 [label="Entry CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m58_1 [label="this.tag = tag", span="15-15", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m58_2 [label="this.text = text", span="16-16", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m58_3 [label="Exit CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", span="13-13", cluster="CommandLine.Core.Token.Token(CommandLine.Core.TokenType, string)", file="Token.cs"];
m58_22 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)", file="Token.cs"];
m58_32 [label="Entry System.Enum.Equals(object)", span="0-0", cluster="System.Enum.Equals(object)", file="Token.cs"];
m58_33 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="Token.cs"];
m58_21 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m58_28 [label="other == null", span="61-61", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m58_30 [label="return this.Tag.Equals(other.Tag) && this.Text.Equals(other.Text);", span="66-66", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m58_29 [label="return false;", span="63-63", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m58_31 [label="Exit CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="Token.cs"];
m58_26 [label="Entry System.Enum.GetHashCode()", span="0-0", cluster="System.Enum.GetHashCode()", file="Token.cs"];
m58_4 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Token.cs"];
m58_5 [label="text == null", span="21-21", cluster="CommandLine.Core.Token.Name(string)", file="Token.cs"];
m58_7 [label="return new Token(TokenType.Name, text);", span="23-23", cluster="CommandLine.Core.Token.Name(string)", file="Token.cs"];
m58_6 [label="throw new ArgumentNullException(''text'');", span="21-21", cluster="CommandLine.Core.Token.Name(string)", file="Token.cs"];
m58_8 [label="Exit CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="Token.cs"];
m58_23 [label="Entry CommandLine.Core.Token.GetHashCode()", span="54-54", cluster="CommandLine.Core.Token.GetHashCode()", file="Token.cs"];
m58_24 [label="return this.Tag.GetHashCode() ^ this.Text.GetHashCode();", span="56-56", cluster="CommandLine.Core.Token.GetHashCode()", file="Token.cs"];
m58_25 [label="Exit CommandLine.Core.Token.GetHashCode()", span="54-54", cluster="CommandLine.Core.Token.GetHashCode()", file="Token.cs"];
m58_9 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Token.cs"];
m58_10 [label="Entry CommandLine.Core.Token.Value(string)", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="Token.cs"];
m58_11 [label="text == null", span="28-28", cluster="CommandLine.Core.Token.Value(string)", file="Token.cs"];
m58_13 [label="return new Token(TokenType.Value, text);", span="30-30", cluster="CommandLine.Core.Token.Value(string)", file="Token.cs"];
m58_12 [label="throw new ArgumentNullException(''text'');", span="28-28", cluster="CommandLine.Core.Token.Value(string)", file="Token.cs"];
m58_14 [label="Exit CommandLine.Core.Token.Value(string)", span="26-26", cluster="CommandLine.Core.Token.Value(string)", file="Token.cs"];
m58_15 [label="Entry CommandLine.Core.Token.Equals(object)", span="43-43", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m58_16 [label="var other = obj as Token", span="45-45", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m58_19 [label="return base.Equals(obj);", span="51-51", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m58_17 [label="other != null", span="46-46", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m58_18 [label="return this.Equals(other);", span="48-48", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m58_20 [label="Exit CommandLine.Core.Token.Equals(object)", span="43-43", cluster="CommandLine.Core.Token.Equals(object)", file="Token.cs"];
m58_40 [label="CommandLine.Core.Token", span="", file="Token.cs"];
m59_0 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="TokenGroup.cs"];
m59_1 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char)", span="42-42", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char)", file="TokenGroup.cs"];
m59_7 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="73-73", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="TokenGroup.cs"];
m59_8 [label="Separator = separator", span="76-76", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="TokenGroup.cs"];
m59_9 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", span="73-73", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string, char)", file="TokenGroup.cs"];
m59_2 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(string)", span="51-51", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="TokenGroup.cs"];
m59_3 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(string)", span="51-51", cluster="CommandLine.OptionListAttribute.OptionListAttribute(string)", file="TokenGroup.cs"];
m59_4 [label="Entry CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="61-61", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="TokenGroup.cs"];
m59_5 [label="Separator = ':'", span="64-64", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="TokenGroup.cs"];
m59_6 [label="Exit CommandLine.OptionListAttribute.OptionListAttribute(char, string)", span="61-61", cluster="CommandLine.OptionListAttribute.OptionListAttribute(char, string)", file="TokenGroup.cs"];
m59_10 [label="CommandLine.OptionListAttribute", span="", file="TokenGroup.cs"];
m62_3 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="TokenPartitioner.cs"];
m62_10 [label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0", cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", file="TokenPartitioner.cs"];
m62_4 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="13-13", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TokenPartitioner.cs"];
m62_5 [label="var optionType = typeof(FSharpOption<>)", span="15-15", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TokenPartitioner.cs"];
m62_6 [label="var typedType = optionType.MakeGenericType(type)", span="16-16", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TokenPartitioner.cs"];
m62_7 [label="return typedType.InvokeMember(\r\n                ''Some'',\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new [] { value });", span="18-23", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TokenPartitioner.cs"];
m62_8 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="13-13", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="TokenPartitioner.cs"];
m62_11 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="26-26", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TokenPartitioner.cs"];
m62_12 [label="var optionType = typeof(FSharpOption<>)", span="28-28", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TokenPartitioner.cs"];
m62_13 [label="var typedType = optionType.MakeGenericType(type)", span="29-29", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TokenPartitioner.cs"];
m62_14 [label="return typedType.InvokeMember(\r\n                ''None'',\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] {});", span="31-36", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TokenPartitioner.cs"];
m62_15 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="26-26", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="TokenPartitioner.cs"];
m62_9 [label="Entry System.Type.MakeGenericType(params System.Type[])", span="0-0", cluster="System.Type.MakeGenericType(params System.Type[])", file="TokenPartitioner.cs"];
m62_0 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="TokenPartitioner.cs"];
m62_1 [label="return type.GetGenericArguments()[0];", span="10-10", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="TokenPartitioner.cs"];
m62_2 [label="Exit CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="TokenPartitioner.cs"];
m63_19 [label="Entry CommandLine.ParserSettings.~ParserSettings()", span="132-132", cluster="CommandLine.ParserSettings.~ParserSettings()", file="TokenPartitionerTests.cs"];
m63_20 [label="Dispose(false)", span="134-134", cluster="CommandLine.ParserSettings.~ParserSettings()", file="TokenPartitionerTests.cs"];
m63_21 [label="Exit CommandLine.ParserSettings.~ParserSettings()", span="132-132", cluster="CommandLine.ParserSettings.~ParserSettings()", file="TokenPartitionerTests.cs"];
m63_6 [label="Entry CommandLine.ParserSettings.ParserSettings(bool, System.IO.TextWriter)", span="82-82", cluster="CommandLine.ParserSettings.ParserSettings(bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_7 [label="Exit CommandLine.ParserSettings.ParserSettings(bool, System.IO.TextWriter)", span="82-82", cluster="CommandLine.ParserSettings.ParserSettings(bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_0 [label="Entry CommandLine.ParserSettings.ParserSettings()", span="49-49", cluster="CommandLine.ParserSettings.ParserSettings()", file="TokenPartitionerTests.cs"];
m63_1 [label="Exit CommandLine.ParserSettings.ParserSettings()", span="49-49", cluster="CommandLine.ParserSettings.ParserSettings()", file="TokenPartitionerTests.cs"];
m63_22 [label="Entry CommandLine.ParserSettings.Dispose(bool)", span="242-242", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_28 [label=_disposed, span="244-244", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_30 [label=disposing, span="249-249", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_29 [label="return;", span="246-246", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_31 [label="_helpWriter != null", span="251-251", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_32 [label="_helpWriter.Dispose()", span="253-253", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_34 [label="_disposed = true", span="257-257", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_33 [label="_helpWriter = null", span="254-254", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_35 [label="Exit CommandLine.ParserSettings.Dispose(bool)", span="242-242", cluster="CommandLine.ParserSettings.Dispose(bool)", file="TokenPartitionerTests.cs"];
m63_2 [label="Entry CommandLine.ParserSettings.ParserSettings(bool)", span="59-59", cluster="CommandLine.ParserSettings.ParserSettings(bool)", file="TokenPartitionerTests.cs"];
m63_3 [label="Exit CommandLine.ParserSettings.ParserSettings(bool)", span="59-59", cluster="CommandLine.ParserSettings.ParserSettings(bool)", file="TokenPartitionerTests.cs"];
m63_27 [label="Entry System.GC.SuppressFinalize(object)", span="0-0", cluster="System.GC.SuppressFinalize(object)", file="TokenPartitionerTests.cs"];
m63_36 [label="Entry System.IO.TextWriter.Dispose()", span="0-0", cluster="System.IO.TextWriter.Dispose()", file="TokenPartitionerTests.cs"];
m63_12 [label="Entry CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", span="120-120", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_13 [label="CaseSensitive = caseSensitive", span="122-122", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_14 [label="MutuallyExclusive = mutuallyExclusive", span="123-123", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_15 [label="HelpWriter = helpWriter", span="124-124", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_16 [label="IgnoreUnknownArguments = ignoreUnknownArguments", span="125-125", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_17 [label="ParsingCulture = Thread.CurrentThread.CurrentCulture", span="126-126", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_18 [label="Exit CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", span="120-120", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_8 [label="Entry CommandLine.ParserSettings.ParserSettings(bool, bool)", span="93-93", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool)", file="TokenPartitionerTests.cs"];
m63_9 [label="Exit CommandLine.ParserSettings.ParserSettings(bool, bool)", span="93-93", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool)", file="TokenPartitionerTests.cs"];
m63_23 [label="Entry CommandLine.ParserSettings.Dispose()", span="235-235", cluster="CommandLine.ParserSettings.Dispose()", file="TokenPartitionerTests.cs"];
m63_24 [label="Dispose(true)", span="237-237", cluster="CommandLine.ParserSettings.Dispose()", file="TokenPartitionerTests.cs"];
m63_25 [label="GC.SuppressFinalize(this)", span="239-239", cluster="CommandLine.ParserSettings.Dispose()", file="TokenPartitionerTests.cs"];
m63_26 [label="Exit CommandLine.ParserSettings.Dispose()", span="235-235", cluster="CommandLine.ParserSettings.Dispose()", file="TokenPartitionerTests.cs"];
m63_4 [label="Entry CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", span="70-70", cluster="CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_5 [label="Exit CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", span="70-70", cluster="CommandLine.ParserSettings.ParserSettings(System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_10 [label="Entry CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", span="106-106", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_11 [label="Exit CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", span="106-106", cluster="CommandLine.ParserSettings.ParserSettings(bool, bool, System.IO.TextWriter)", file="TokenPartitionerTests.cs"];
m63_37 [label="CommandLine.ParserSettings", span="", file="TokenPartitionerTests.cs"];
m65_22 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="TypeLookup.cs"];
m65_24 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="TypeLookup.cs"];
m65_11 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="TypeLookup.cs"];
m65_17 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="TypeLookup.cs"];
m65_13 [label="Entry Unk.Map", span="", cluster="Unk.Map", file="TypeLookup.cs"];
m65_12 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="TypeLookup.cs"];
m65_0 [label="Entry CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_1 [label="name == null", span="16-16", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_3 [label="specifications == null", span="17-17", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_5 [label="comparer == null", span="18-18", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_7 [label="var info = specifications.SingleOrDefault(a => name.MatchName(a.ShortName, a.LongName, comparer))\r\n                .ToMaybe()\r\n                    .Map(\r\n                        s => Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max)))", span="20-24", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_2 [label="throw new ArgumentNullException(''name'');", span="16-16", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_4 [label="throw new ArgumentNullException(''specifications'');", span="17-17", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_6 [label="throw new ArgumentNullException(''comparer'');", span="18-18", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_8 [label="return info;", span="25-25", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_9 [label="Exit CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.TypeLookup.GetDescriptorInfo(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TypeLookup.cs"];
m65_23 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="TypeLookup.cs"];
m65_21 [label="Entry Unk.ToDescriptor", span="", cluster="Unk.ToDescriptor", file="TypeLookup.cs"];
m65_18 [label="Entry lambda expression", span="23-24", cluster="lambda expression", file="TypeLookup.cs"];
m65_15 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="20-20", cluster="lambda expression", file="TypeLookup.cs"];
m65_14 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="TypeLookup.cs"];
m65_16 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="TypeLookup.cs"];
m65_19 [label="Tuple.Create(\r\n                            s.ConversionType.ToDescriptor(), (s.Min < 0 && s.Max < 0) ? Maybe.Nothing<int>() : Maybe.Just(s.Max))", span="23-24", cluster="lambda expression", file="TypeLookup.cs"];
m65_20 [label="Exit lambda expression", span="23-24", cluster="lambda expression", file="TypeLookup.cs"];
m65_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TypeLookup.cs"];
m65_25 [label=string, span="", file="TypeLookup.cs"];
m65_26 [label="System.StringComparer", span="", file="TypeLookup.cs"];
m67_0 [label="Entry CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m67_1 [label="this.index = index", span="23-23", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m67_2 [label="this.min = -1", span="24-24", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m67_3 [label="this.max = -1", span="25-25", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m67_4 [label="Exit CommandLine.ValueAttribute.ValueAttribute(int)", span="21-21", cluster="CommandLine.ValueAttribute.ValueAttribute(int)", file="ValueAttribute.cs"];
m67_5 [label="CommandLine.ValueAttribute", span="", file="ValueAttribute.cs"];
m69_0 [label="Entry CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs"];
m69_1 [label="this.index = index", span="14-14", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs"];
m69_2 [label="Exit CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", span="11-11", cluster="CommandLine.Core.ValueSpecification.ValueSpecification(int, bool, int, int, CommandLine.Infrastructure.Maybe<object>, System.Type)", file="ValueSpecification.cs"];
m69_3 [label="Entry CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs"];
m69_4 [label="return new ValueSpecification(\r\n                attribute.Index,\r\n                attribute.Required,\r\n                attribute.Min,\r\n                attribute.Max,\r\n                attribute.DefaultValue.ToMaybe(),\r\n                conversionType);", span="19-25", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs"];
m69_5 [label="Exit CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", span="17-17", cluster="CommandLine.Core.ValueSpecification.FromAttribute(CommandLine.ValueAttribute, System.Type)", file="ValueSpecification.cs"];
m69_6 [label="Entry T.ToMaybe<T>()", span="82-82", cluster="T.ToMaybe<T>()", file="ValueSpecification.cs"];
m69_7 [label="CommandLine.Core.ValueSpecification", span="", file="ValueSpecification.cs"];
m70_17 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="Verb.cs"];
m70_0 [label="Entry CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_1 [label="name == null", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_3 [label="helpText == null", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_5 [label="this.name = name", span="18-18", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_6 [label="this.helpText = helpText", span="19-19", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_2 [label="throw new ArgumentNullException(''name'');", span="15-15", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_4 [label="throw new ArgumentNullException(''helpText'');", span="16-16", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_7 [label="Exit CommandLine.Core.Verb.Verb(string, string)", span="13-13", cluster="CommandLine.Core.Verb.Verb(string, string)", file="Verb.cs"];
m70_16 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="Verb.cs"];
m70_15 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="Verb.cs"];
m70_12 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs"];
m70_13 [label="return from type in types\r\n                   let attrs = type.GetCustomAttributes(typeof(VerbAttribute), true)\r\n                   where attrs.Length == 1\r\n                   select Tuple.Create(\r\n                       Verb.FromAttribute((VerbAttribute)attrs.Single()),\r\n                       type);", span="42-47", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs"];
m70_14 [label="Exit CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="Verb.cs"];
m70_9 [label="Entry CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs"];
m70_10 [label="return new Verb(\r\n                attribute.Name,\r\n                attribute.HelpText\r\n                );", span="34-37", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs"];
m70_11 [label="Exit CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", span="32-32", cluster="CommandLine.Core.Verb.FromAttribute(CommandLine.VerbAttribute)", file="Verb.cs"];
m70_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="Verb.cs"];
m70_18 [label="CommandLine.Core.Verb", span="", file="Verb.cs"];
m71_6 [label="Entry System.ArgumentException.ArgumentException(string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string)", file="VerbAttribute.cs"];
m71_5 [label="Entry string.IsNullOrWhiteSpace(string)", span="0-0", cluster="string.IsNullOrWhiteSpace(string)", file="VerbAttribute.cs"];
m71_0 [label="Entry CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20", cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs"];
m71_1 [label="string.IsNullOrWhiteSpace(name)", span="22-22", cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs"];
m71_3 [label="this.name = name", span="24-24", cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs"];
m71_2 [label="throw new ArgumentException(''name'');", span="22-22", cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs"];
m71_4 [label="Exit CommandLine.VerbAttribute.VerbAttribute(string)", span="20-20", cluster="CommandLine.VerbAttribute.VerbAttribute(string)", file="VerbAttribute.cs"];
m71_7 [label="CommandLine.VerbAttribute", span="", file="VerbAttribute.cs"];
m1_8 -> m1_9  [key=0, style=solid];
m1_9 -> m1_8  [key=0, style=bold, color=blue];
m1_2 -> m1_3  [key=0, style=solid];
m1_3 -> m1_2  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_6  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_5 -> m1_4  [key=0, style=bold, color=blue];
m4_89 -> m4_90  [key=0, style=solid];
m4_90 -> m4_91  [key=0, style=solid];
m4_90 -> m4_78  [key=2, style=dotted];
m4_90 -> m4_18  [key=2, style=dotted];
m4_90 -> m4_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_91 -> m4_89  [key=0, style=bold, color=blue];
m4_52 -> m4_53  [key=0, style=solid];
m4_52 -> m4_54  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m4_52 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_52 -> m4_58  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m4_52 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_53 -> m4_54  [key=0, style=solid];
m4_53 -> m4_16  [key=2, style=dotted];
m4_53 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_53 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_53 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_53 -> m4_64  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_54 -> m4_55  [key=0, style=solid];
m4_54 -> m4_57  [key=0, style=solid];
m4_56 -> m4_64  [key=0, style=solid];
m4_56 -> m4_66  [key=2, style=dotted];
m4_56 -> m4_67  [key=2, style=dotted];
m4_58 -> m4_59  [key=0, style=solid];
m4_58 -> m4_68  [key=2, style=dotted];
m4_58 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_58 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_69  [key=2, style=dotted];
m4_60 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=e];
m4_62 -> m4_61  [key=0, style=solid];
m4_62 -> m4_71  [key=2, style=dotted];
m4_62 -> m4_67  [key=2, style=dotted];
m4_62 -> m4_31  [key=2, style=dotted];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_24  [key=2, style=dotted];
m4_64 -> m4_65  [key=0, style=solid];
m4_64 -> m4_25  [key=2, style=dotted];
m4_55 -> m4_56  [key=0, style=solid];
m4_57 -> m4_58  [key=0, style=solid];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_59 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label=fmtWithQuotesIfStr];
m4_61 -> m4_62  [key=0, style=solid];
m4_61 -> m4_63  [key=0, style=solid];
m4_61 -> m4_70  [key=2, style=dotted];
m4_65 -> m4_52  [key=0, style=bold, color=blue];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_114  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_111 -> m4_116  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_111 -> m4_118  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_111 -> m4_120  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_112 -> m4_113  [key=0, style=solid];
m4_112 -> m4_114  [key=0, style=solid];
m4_114 -> m4_115  [key=0, style=solid];
m4_114 -> m4_116  [key=0, style=solid];
m4_114 -> m4_15  [key=2, style=dotted];
m4_114 -> m4_108  [key=2, style=dotted];
m4_114 -> m4_109  [key=2, style=dotted];
m4_116 -> m4_117  [key=0, style=solid];
m4_116 -> m4_118  [key=0, style=solid];
m4_116 -> m4_15  [key=2, style=dotted];
m4_116 -> m4_124  [key=2, style=dotted];
m4_116 -> m4_125  [key=2, style=dotted];
m4_118 -> m4_119  [key=0, style=solid];
m4_118 -> m4_120  [key=0, style=solid];
m4_120 -> m4_121  [key=0, style=solid];
m4_120 -> m4_122  [key=0, style=solid];
m4_120 -> m4_69  [key=2, style=dotted];
m4_120 -> m4_70  [key=2, style=dotted];
m4_113 -> m4_123  [key=0, style=solid];
m4_115 -> m4_123  [key=0, style=solid];
m4_117 -> m4_123  [key=0, style=solid];
m4_119 -> m4_123  [key=0, style=solid];
m4_121 -> m4_123  [key=0, style=solid];
m4_122 -> m4_123  [key=0, style=solid];
m4_123 -> m4_111  [key=0, style=bold, color=blue];
m4_95 -> m4_96  [key=0, style=solid];
m4_96 -> m4_97  [key=0, style=solid];
m4_96 -> m4_16  [key=2, style=dotted];
m4_96 -> m4_98  [key=2, style=dotted];
m4_96 -> m4_30  [key=2, style=dotted];
m4_96 -> m4_31  [key=2, style=dotted];
m4_96 -> m4_52  [key=2, style=dotted];
m4_96 -> m4_99  [key=2, style=dotted];
m4_96 -> m4_25  [key=2, style=dotted];
m4_97 -> m4_95  [key=0, style=bold, color=blue];
m4_92 -> m4_93  [key=0, style=solid];
m4_33 -> m4_34  [key=0, style=solid];
m4_33 -> m4_35  [key=2, style=dotted];
m4_33 -> m4_36  [key=2, style=dotted];
m4_33 -> m4_37  [key=2, style=dotted];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_28 -> m4_31  [key=2, style=dotted];
m4_45 -> m4_46  [key=0, style=solid];
m4_45 -> m4_47  [key=2, style=dotted];
m4_45 -> m4_30  [key=2, style=dotted];
m4_45 -> m4_31  [key=2, style=dotted];
m4_49 -> m4_50  [key=0, style=solid];
m4_49 -> m4_51  [key=2, style=dotted];
m4_49 -> m4_30  [key=2, style=dotted];
m4_49 -> m4_31  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_38 -> m4_39  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_44 -> m4_45  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_29 -> m4_27  [key=0, style=bold, color=blue];
m4_34 -> m4_32  [key=0, style=bold, color=blue];
m4_39 -> m4_40  [key=0, style=solid];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_46 -> m4_44  [key=0, style=bold, color=blue];
m4_50 -> m4_48  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_66  [key=2, style=dotted];
m4_72 -> m4_73  [key=0, style=solid];
m4_74 -> m4_72  [key=0, style=bold, color=blue];
m4_80 -> m4_81  [key=0, style=solid];
m4_80 -> m4_82  [key=2, style=dotted];
m4_80 -> m4_83  [key=2, style=dotted];
m4_85 -> m4_86  [key=0, style=solid];
m4_85 -> m4_87  [key=2, style=dotted];
m4_85 -> m4_82  [key=2, style=dotted];
m4_85 -> m4_71  [key=2, style=dotted];
m4_85 -> m4_88  [key=2, style=dotted];
m4_84 -> m4_85  [key=0, style=solid];
m4_79 -> m4_80  [key=0, style=solid];
m4_81 -> m4_79  [key=0, style=bold, color=blue];
m4_86 -> m4_84  [key=0, style=bold, color=blue];
m4_93 -> m4_94  [key=0, style=solid];
m4_94 -> m4_92  [key=0, style=bold, color=blue];
m4_66 -> m4_75  [key=0, style=solid];
m4_66 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_75 -> m4_76  [key=0, style=solid];
m4_75 -> m4_80  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_75 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=2, style=dotted];
m4_76 -> m4_18  [key=2, style=dotted];
m4_76 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_77 -> m4_66  [key=0, style=bold, color=blue];
m4_100 -> m4_101  [key=0, style=solid];
m4_101 -> m4_102  [key=0, style=solid];
m4_101 -> m4_88  [key=2, style=dotted];
m4_102 -> m4_100  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_0 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_0 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=0, style=solid];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_15  [key=2, style=dotted];
m4_3 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_3 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=type];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_19  [key=2, style=dotted];
m4_6 -> m4_20  [key=2, style=dotted];
m4_6 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_6 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_6 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=specs];
m4_2 -> m4_13  [key=0, style=solid];
m4_2 -> m4_14  [key=2, style=dotted];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_16  [key=2, style=dotted];
m4_4 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_10  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_4 -> m4_12  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_17  [key=2, style=dotted];
m4_5 -> m4_18  [key=2, style=dotted];
m4_5 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_23  [key=2, style=dotted];
m4_9 -> m4_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_10 -> m4_11  [key=0, style=solid];
m4_10 -> m4_24  [key=2, style=dotted];
m4_11 -> m4_12  [key=0, style=solid];
m4_11 -> m4_23  [key=2, style=dotted];
m4_11 -> m4_48  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_12 -> m4_13  [key=0, style=solid];
m4_12 -> m4_25  [key=2, style=dotted];
m4_12 -> m4_26  [key=2, style=dotted];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_21  [key=2, style=dotted];
m4_7 -> m4_22  [key=2, style=dotted];
m4_7 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_7 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_7 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_21  [key=2, style=dotted];
m4_8 -> m4_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_8  [key=1, style=dashed, color=darkseagreen4, label=info];
m4_8 -> m4_11  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m4_13 -> m4_0  [key=0, style=bold, color=blue];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_103 -> m4_106  [key=1, style=dashed, color=darkseagreen4, label=object];
m4_104 -> m4_105  [key=0, style=solid];
m4_104 -> m4_106  [key=0, style=solid];
m4_104 -> m4_15  [key=2, style=dotted];
m4_104 -> m4_108  [key=2, style=dotted];
m4_104 -> m4_109  [key=2, style=dotted];
m4_105 -> m4_107  [key=0, style=solid];
m4_105 -> m4_110  [key=2, style=dotted];
m4_106 -> m4_107  [key=0, style=solid];
m4_107 -> m4_103  [key=0, style=bold, color=blue];
m4_126 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_126 -> m4_45  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_126 -> m4_49  [key=1, style=dashed, color=darkseagreen4, label=builder];
m4_127 -> m4_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m4_128 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label=sep];
m4_129 -> m4_85  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_2  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>"];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>"];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_12  [key=2, style=dotted];
m5_1 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=tokenList];
m5_2 -> m5_3  [key=0, style=solid];
m5_2 -> m5_13  [key=2, style=dotted];
m5_2 -> m5_12  [key=2, style=dotted];
m5_2 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=switches];
m5_2 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=switches];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_16  [key=2, style=dotted];
m5_4 -> m5_12  [key=2, style=dotted];
m5_4 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m5_4 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m5_6 -> m5_7  [key=0, style=solid];
m5_6 -> m5_16  [key=2, style=dotted];
m5_6 -> m5_12  [key=2, style=dotted];
m5_6 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=sequences];
m5_6 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=sequences];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_14  [key=2, style=dotted];
m5_3 -> m5_15  [key=2, style=dotted];
m5_3 -> m5_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_3 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=tokensExceptSwitches];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_17  [key=2, style=dotted];
m5_10 -> m5_18  [key=2, style=dotted];
m5_10 -> m5_19  [key=2, style=dotted];
m5_10 -> m5_20  [key=2, style=dotted];
m5_10 -> m5_21  [key=2, style=dotted];
m5_10 -> m5_22  [key=2, style=dotted];
m5_10 -> m5_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_14  [key=2, style=dotted];
m5_5 -> m5_15  [key=2, style=dotted];
m5_5 -> m5_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_5 -> m5_7  [key=1, style=dashed, color=darkseagreen4, label=tokensExceptSwitchesAndScalars];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_14  [key=2, style=dotted];
m5_7 -> m5_15  [key=2, style=dotted];
m5_7 -> m5_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_7 -> m5_9  [key=1, style=dashed, color=darkseagreen4, label=tokensExceptSwitchesAndScalarsAndSeq];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_14  [key=2, style=dotted];
m5_8 -> m5_15  [key=2, style=dotted];
m5_8 -> m5_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_8 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=values];
m5_8 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=values];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_14  [key=2, style=dotted];
m5_9 -> m5_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m5_11 -> m5_0  [key=0, style=bold, color=blue];
m5_41 -> m5_42  [key=0, style=solid];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_26  [key=2, style=dotted];
m5_23 -> m5_24  [key=0, style=solid];
m5_28 -> m5_29  [key=0, style=solid];
m5_28 -> m5_30  [key=2, style=dotted];
m5_27 -> m5_28  [key=0, style=solid];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> m5_30  [key=2, style=dotted];
m5_31 -> m5_32  [key=0, style=solid];
m5_34 -> m5_35  [key=0, style=solid];
m5_39 -> m5_40  [key=0, style=solid];
m5_39 -> m5_30  [key=2, style=dotted];
m5_38 -> m5_39  [key=0, style=solid];
m5_25 -> m5_23  [key=0, style=bold, color=blue];
m5_29 -> m5_27  [key=0, style=bold, color=blue];
m5_33 -> m5_31  [key=0, style=bold, color=blue];
m5_35 -> m5_36  [key=0, style=solid];
m5_35 -> m5_37  [key=2, style=dotted];
m5_36 -> m5_34  [key=0, style=bold, color=blue];
m5_40 -> m5_38  [key=0, style=bold, color=blue];
m5_42 -> m5_43  [key=0, style=solid];
m5_43 -> m5_41  [key=0, style=bold, color=blue];
m5_44 -> m5_24  [key=1, style=dashed, color=darkseagreen4, label=switches];
m5_45 -> m5_28  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m5_46 -> m5_32  [key=1, style=dashed, color=darkseagreen4, label=sequences];
m5_47 -> m5_39  [key=1, style=dashed, color=darkseagreen4, label=values];
m22_45 -> m22_46  [key=0, style=solid];
m22_45 -> m22_47  [key=0, style=solid];
m22_45 -> m22_6  [key=2, style=dotted];
m22_12 -> m22_13  [key=0, style=solid, color=red];
m22_12 -> m22_14  [key=0, style=solid];
m22_12 -> m22_48  [key=2, style=dotted];
m22_13 -> m22_14  [key=0, style=solid, color=red];
m22_13 -> m22_44  [key=0, style=solid];
m22_14 -> m22_12  [key=0, style=bold, color=blue];
m22_14 -> m22_15  [key=0, style=solid];
m22_14 -> m22_27  [key=0, style=solid];
m22_34 -> m22_35  [key=0, style=solid];
m22_34 -> m22_55  [key=2, style=dotted];
m22_34 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m22_3 -> m22_5  [key=1, style=dashed, color=green, label="CommandLine.Parsing.OptionMap"];
m22_3 -> m22_16  [key=1, style=dashed, color=green, label=object];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m22_3 -> m22_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m22_3 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label=object];
m22_3 -> m22_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m22_3 -> m22_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.IArgumentEnumerator"];
m22_3 -> m22_34  [key=1, style=dashed, color=darkseagreen4, label=object];
m22_3 -> m22_40  [key=1, style=dashed, color=darkseagreen4, label=object];
m22_5 -> m22_6  [key=0, style=solid, color=green];
m22_5 -> m22_7  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_9  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_10  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_11  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_15  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_16  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_18  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_20  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_23  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_25  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_27  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_28  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_30  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_32  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_34  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_36  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_40  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_42  [key=1, style=dashed, color=green, label=option];
m22_5 -> m22_3  [key=0, style=bold, color=blue];
m22_4 -> m22_5  [key=0, style=solid, color=green];
m22_4 -> m22_16  [key=1, style=dashed, color=green, label=parts];
m22_4 -> m22_45  [key=2, style=dotted];
m22_4 -> m22_46  [key=2, style=dotted];
m22_4 -> m22_12  [key=1, style=dashed, color=darkseagreen4, label=parts];
m22_4 -> m22_14  [key=1, style=dashed, color=darkseagreen4, label=parts];
m22_4 -> m22_22  [key=1, style=dashed, color=darkseagreen4, label=parts];
m22_4 -> m22_38  [key=1, style=dashed, color=darkseagreen4, label=parts];
m22_6 -> m22_7  [key=0, style=solid, color=red];
m22_7 -> m22_8  [key=0, style=solid, color=red];
m22_7 -> m22_9  [key=0, style=solid];
m22_9 -> m22_10  [key=0, style=solid];
m22_9 -> m22_6  [key=0, style=bold, color=blue];
m22_10 -> m22_11  [key=0, style=solid];
m22_10 -> m22_47  [key=2, style=dotted];
m22_11 -> m22_12  [key=0, style=solid];
m22_11 -> m22_38  [key=0, style=solid];
m22_11 -> m22_10  [key=0, style=bold, color=blue];
m22_15 -> m22_16  [key=0, style=solid, color=green];
m22_15 -> m22_20  [key=0, style=solid];
m22_16 -> m22_17  [key=0, style=solid, color=green];
m22_16 -> m22_49  [key=2, style=dotted, color=green];
m22_16 -> m22_19  [key=1, style=dashed, color=green, label=valueSetting];
m22_16 -> m22_10  [key=2, style=dotted];
m22_18 -> m22_19  [key=0, style=solid];
m22_18 -> m22_50  [key=2, style=dotted];
m22_20 -> m22_21  [key=0, style=solid];
m22_20 -> m22_52  [key=2, style=dotted];
m22_20 -> m22_18  [key=0, style=bold, color=blue];
m22_23 -> m22_24  [key=0, style=solid];
m22_23 -> m22_55  [key=2, style=dotted];
m22_23 -> m22_26  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m22_23 -> m22_25  [key=0, style=solid];
m22_23 -> m22_12  [key=2, style=dotted];
m22_25 -> m22_26  [key=0, style=solid];
m22_25 -> m22_50  [key=2, style=dotted];
m22_25 -> m22_21  [key=0, style=bold, color=blue];
m22_27 -> m22_28  [key=0, style=solid];
m22_27 -> m22_32  [key=0, style=solid];
m22_27 -> m22_29  [key=2, style=dotted];
m22_27 -> m22_15  [key=2, style=dotted];
m22_27 -> m22_18  [key=2, style=dotted];
m22_28 -> m22_29  [key=0, style=solid];
m22_28 -> m22_49  [key=2, style=dotted];
m22_28 -> m22_31  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m22_28 -> m22_26  [key=0, style=bold, color=blue];
m22_30 -> m22_31  [key=0, style=solid];
m22_30 -> m22_50  [key=2, style=dotted];
m22_30 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T1>"];
m22_32 -> m22_33  [key=0, style=solid];
m22_32 -> m22_52  [key=2, style=dotted];
m22_32 -> m22_6  [key=2, style=dotted];
m22_32 -> m22_34  [key=2, style=dotted];
m22_32 -> m22_15  [key=2, style=dotted];
m22_32 -> m22_32  [key=1, style=dashed, color=darkseagreen4, label=value1];
m22_36 -> m22_37  [key=0, style=solid];
m22_36 -> m22_50  [key=2, style=dotted];
m22_40 -> m22_41  [key=0, style=solid];
m22_40 -> m22_57  [key=2, style=dotted];
m22_40 -> m22_43  [key=1, style=dashed, color=darkseagreen4, label=valueSetting];
m22_42 -> m22_43  [key=0, style=solid];
m22_42 -> m22_50  [key=2, style=dotted];
m22_42 -> m22_39  [key=0, style=bold, color=blue];
m22_17 -> m22_18  [key=0, style=solid, color=green];
m22_17 -> m22_19  [key=0, style=solid, color=green];
m22_17 -> m22_15  [key=0, style=bold, color=blue];
m22_19 -> m22_44  [key=0, style=solid];
m22_19 -> m22_51  [key=2, style=dotted];
m22_19 -> m22_20  [key=0, style=solid];
m22_19 -> m22_12  [key=2, style=dotted];
m22_21 -> m22_23  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Either<T1, T2>"];
m22_21 -> m22_22  [key=0, style=solid];
m22_21 -> m22_53  [key=2, style=dotted];
m22_33 -> m22_34  [key=0, style=solid];
m22_33 -> m22_53  [key=2, style=dotted];
m22_33 -> m22_30  [key=0, style=bold, color=blue];
m22_22 -> m22_23  [key=0, style=solid];
m22_22 -> m22_54  [key=2, style=dotted];
m22_22 -> m22_24  [key=0, style=solid];
m22_38 -> m22_40  [key=0, style=solid];
m22_38 -> m22_39  [key=0, style=solid];
m22_38 -> m22_35  [key=0, style=bold, color=blue];
m22_8 -> m22_44  [key=0, style=solid];
m22_8 -> m22_9  [key=0, style=solid];
m22_24 -> m22_25  [key=0, style=solid];
m22_24 -> m22_26  [key=0, style=solid];
m22_24 -> m22_10  [key=2, style=dotted];
m22_26 -> m22_44  [key=0, style=solid];
m22_26 -> m22_51  [key=2, style=dotted];
m22_26 -> m22_27  [key=0, style=solid];
m22_29 -> m22_30  [key=0, style=solid];
m22_29 -> m22_31  [key=0, style=solid];
m22_31 -> m22_44  [key=0, style=solid];
m22_31 -> m22_56  [key=2, style=dotted];
m22_31 -> m22_32  [key=0, style=solid];
m22_35 -> m22_36  [key=0, style=solid];
m22_35 -> m22_37  [key=0, style=solid];
m22_37 -> m22_44  [key=0, style=solid];
m22_37 -> m22_51  [key=2, style=dotted];
m22_37 -> m22_38  [key=0, style=solid];
m22_37 -> m22_6  [key=2, style=dotted];
m22_37 -> m22_34  [key=2, style=dotted];
m22_37 -> m22_18  [key=2, style=dotted];
m22_37 -> m22_15  [key=2, style=dotted];
m22_37 -> m22_37  [key=1, style=dashed, color=darkseagreen4, label=value1];
m22_41 -> m22_42  [key=0, style=solid];
m22_41 -> m22_43  [key=0, style=solid];
m22_41 -> m22_6  [key=2, style=dotted];
m22_41 -> m22_34  [key=2, style=dotted];
m22_41 -> m22_41  [key=1, style=dashed, color=darkseagreen4, label=value1];
m22_43 -> m22_44  [key=0, style=solid];
m22_43 -> m22_51  [key=2, style=dotted];
m22_43 -> m22_45  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m22_43 -> m22_46  [key=1, style=dashed, color=darkseagreen4, label="System.Action<T>"];
m22_39 -> m22_44  [key=0, style=solid];
m22_39 -> m22_40  [key=0, style=solid];
m22_39 -> m22_41  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T1>"];
m22_44 -> m22_3  [key=0, style=bold, color=blue];
m22_44 -> m22_45  [key=0, style=solid];
m22_49 -> m22_50  [key=0, style=solid];
m22_50 -> m22_51  [key=0, style=solid];
m22_50 -> m22_52  [key=2, style=dotted];
m22_51 -> m22_49  [key=0, style=bold, color=blue];
m22_64 -> m22_65  [key=0, style=solid];
m22_64 -> m22_66  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m22_64 -> m22_68  [key=1, style=dashed, color=darkseagreen4, label="System.Exception"];
m22_65 -> m22_66  [key=0, style=solid];
m22_66 -> m22_67  [key=0, style=solid];
m22_66 -> m22_68  [key=0, style=solid];
m22_66 -> m22_6  [key=2, style=dotted];
m22_68 -> m22_69  [key=0, style=solid];
m22_68 -> m22_70  [key=2, style=dotted];
m22_67 -> m22_69  [key=0, style=solid];
m22_69 -> m22_64  [key=0, style=bold, color=blue];
m22_57 -> m22_58  [key=0, style=solid];
m22_57 -> m22_61  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_2 -> m22_0  [key=0, style=bold, color=blue];
m22_60 -> m22_61  [key=0, style=solid];
m22_58 -> m22_59  [key=0, style=solid];
m22_58 -> m22_34  [key=2, style=dotted];
m22_58 -> m22_52  [key=2, style=dotted];
m22_58 -> m22_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_58 -> m22_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m22_58 -> m22_25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m22_58 -> m22_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m22_58 -> m22_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m22_58 -> m22_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m22_58 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m22_58 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parsing.LongOptionParser"];
m22_61 -> m22_62  [key=0, style=solid];
m22_61 -> m22_63  [key=2, style=dotted];
m22_59 -> m22_57  [key=0, style=bold, color=blue];
m22_62 -> m22_60  [key=0, style=bold, color=blue];
m22_54 -> m22_55  [key=0, style=solid];
m22_54 -> m22_56  [key=2, style=dotted];
m22_54 -> m22_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m22_74 -> m22_75  [key=0, style=solid];
m22_75 -> m22_76  [key=0, style=solid];
m22_76 -> m22_74  [key=0, style=bold, color=blue];
m22_55 -> m22_53  [key=0, style=bold, color=blue];
m22_71 -> m22_72  [key=0, style=solid];
m22_72 -> m22_73  [key=0, style=solid];
m22_73 -> m22_71  [key=0, style=bold, color=blue];
m22_46 -> m22_47  [key=0, style=solid];
m22_46 -> m22_48  [key=2, style=dotted];
m22_53 -> m22_54  [key=0, style=solid];
m22_53 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, CSharpx.Maybe<TValue>>"];
m22_53 -> m22_61  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m22_47 -> m22_43  [key=0, style=bold, color=blue];
m22_77 -> m22_1  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m22_77 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m22_77 -> m22_7  [key=1, style=dashed, color=red, label="CSharpx.Maybe<T>"];
m22_77 -> m22_8  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<T>"];
m22_78 -> m22_13  [key=1, style=dashed, color=red, label="CSharpx.Just<T>"];
m22_79 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, CSharpx.Maybe<TValue>>"];
m22_80 -> m22_58  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m22_80 -> m22_61  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TValue, TResult>"];
m22_81 -> m22_61  [key=1, style=dashed, color=darkseagreen4, label=TSource];
m25_46 -> m25_47  [key=0, style=solid];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_3  [key=2, style=dotted];
m25_47 -> m25_19  [key=2, style=dotted];
m25_47 -> m25_45  [key=2, style=dotted];
m25_47 -> m25_33  [key=2, style=dotted];
m25_47 -> m25_20  [key=2, style=dotted];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_4  [key=2, style=dotted];
m25_48 -> m25_21  [key=2, style=dotted];
m25_48 -> m25_34  [key=2, style=dotted];
m25_48 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_48 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_48 -> m25_52  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_48 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_49 -> m25_50  [key=0, style=solid];
m25_49 -> m25_5  [key=2, style=dotted];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_5  [key=2, style=dotted];
m25_51 -> m25_52  [key=0, style=solid];
m25_51 -> m25_5  [key=2, style=dotted];
m25_52 -> m25_53  [key=0, style=solid];
m25_52 -> m25_5  [key=2, style=dotted];
m25_53 -> m25_54  [key=0, style=solid];
m25_53 -> m25_5  [key=2, style=dotted];
m25_54 -> m25_46  [key=0, style=bold, color=blue];
m25_22 -> m25_23  [key=0, style=solid];
m25_23 -> m25_24  [key=0, style=solid];
m25_23 -> m25_3  [key=2, style=dotted];
m25_23 -> m25_19  [key=2, style=dotted];
m25_23 -> m25_32  [key=2, style=dotted];
m25_23 -> m25_33  [key=2, style=dotted];
m25_23 -> m25_20  [key=2, style=dotted];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_4  [key=2, style=dotted];
m25_24 -> m25_21  [key=2, style=dotted];
m25_24 -> m25_34  [key=2, style=dotted];
m25_24 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_24 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_24 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_24 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_24 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_25 -> m25_26  [key=0, style=solid];
m25_25 -> m25_5  [key=2, style=dotted];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_5  [key=2, style=dotted];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_5  [key=2, style=dotted];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_5  [key=2, style=dotted];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_5  [key=2, style=dotted];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_5  [key=2, style=dotted];
m25_31 -> m25_22  [key=0, style=bold, color=blue];
m25_62 -> m25_63  [key=0, style=solid];
m25_63 -> m25_64  [key=0, style=solid];
m25_63 -> m25_60  [key=2, style=dotted];
m25_63 -> m25_17  [key=2, style=dotted];
m25_63 -> m25_65  [key=1, style=dashed, color=darkseagreen4, label=sut];
m25_63 -> m25_66  [key=1, style=dashed, color=darkseagreen4, label=sut];
m25_64 -> m25_65  [key=0, style=solid];
m25_65 -> m25_66  [key=0, style=solid];
m25_65 -> m25_73  [key=2, style=dotted];
m25_65 -> m25_33  [key=2, style=dotted];
m25_66 -> m25_67  [key=0, style=solid];
m25_66 -> m25_4  [key=2, style=dotted];
m25_66 -> m25_74  [key=2, style=dotted];
m25_66 -> m25_68  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_66 -> m25_69  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_66 -> m25_70  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_66 -> m25_71  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_67 -> m25_68  [key=0, style=solid];
m25_67 -> m25_75  [key=2, style=dotted];
m25_67 -> m25_76  [key=2, style=dotted];
m25_68 -> m25_69  [key=0, style=solid];
m25_68 -> m25_75  [key=2, style=dotted];
m25_68 -> m25_76  [key=2, style=dotted];
m25_69 -> m25_70  [key=0, style=solid];
m25_69 -> m25_75  [key=2, style=dotted];
m25_69 -> m25_76  [key=2, style=dotted];
m25_70 -> m25_71  [key=0, style=solid];
m25_70 -> m25_75  [key=2, style=dotted];
m25_70 -> m25_76  [key=2, style=dotted];
m25_71 -> m25_72  [key=0, style=solid];
m25_71 -> m25_75  [key=2, style=dotted];
m25_71 -> m25_76  [key=2, style=dotted];
m25_72 -> m25_62  [key=0, style=bold, color=blue];
m25_77 -> m25_78  [key=0, style=solid];
m25_78 -> m25_79  [key=0, style=solid];
m25_78 -> m25_60  [key=2, style=dotted];
m25_78 -> m25_17  [key=2, style=dotted];
m25_78 -> m25_80  [key=1, style=dashed, color=darkseagreen4, label=sut];
m25_78 -> m25_81  [key=1, style=dashed, color=darkseagreen4, label=sut];
m25_79 -> m25_80  [key=0, style=solid];
m25_80 -> m25_81  [key=0, style=solid];
m25_80 -> m25_89  [key=2, style=dotted];
m25_80 -> m25_33  [key=2, style=dotted];
m25_81 -> m25_82  [key=0, style=solid];
m25_81 -> m25_4  [key=2, style=dotted];
m25_81 -> m25_74  [key=2, style=dotted];
m25_81 -> m25_83  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_81 -> m25_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_81 -> m25_85  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_81 -> m25_86  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_81 -> m25_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_82 -> m25_83  [key=0, style=solid];
m25_82 -> m25_75  [key=2, style=dotted];
m25_82 -> m25_76  [key=2, style=dotted];
m25_83 -> m25_84  [key=0, style=solid];
m25_83 -> m25_75  [key=2, style=dotted];
m25_83 -> m25_76  [key=2, style=dotted];
m25_84 -> m25_85  [key=0, style=solid];
m25_84 -> m25_75  [key=2, style=dotted];
m25_84 -> m25_76  [key=2, style=dotted];
m25_85 -> m25_86  [key=0, style=solid];
m25_85 -> m25_75  [key=2, style=dotted];
m25_85 -> m25_76  [key=2, style=dotted];
m25_86 -> m25_87  [key=0, style=solid];
m25_86 -> m25_75  [key=2, style=dotted];
m25_86 -> m25_76  [key=2, style=dotted];
m25_87 -> m25_88  [key=0, style=solid];
m25_87 -> m25_75  [key=2, style=dotted];
m25_87 -> m25_76  [key=2, style=dotted];
m25_88 -> m25_77  [key=0, style=bold, color=blue];
m25_153 -> m25_154  [key=0, style=solid];
m25_154 -> m25_155  [key=0, style=solid];
m25_154 -> m25_117  [key=2, style=dotted];
m25_154 -> m25_32  [key=2, style=dotted];
m25_154 -> m25_119  [key=2, style=dotted];
m25_154 -> m25_125  [key=2, style=dotted];
m25_154 -> m25_121  [key=2, style=dotted];
m25_154 -> m25_130  [key=2, style=dotted];
m25_155 -> m25_156  [key=0, style=solid];
m25_155 -> m25_167  [key=2, style=dotted];
m25_156 -> m25_157  [key=0, style=solid];
m25_156 -> m25_4  [key=2, style=dotted];
m25_156 -> m25_21  [key=2, style=dotted];
m25_156 -> m25_34  [key=2, style=dotted];
m25_156 -> m25_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_156 -> m25_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_156 -> m25_160  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_156 -> m25_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_156 -> m25_162  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_156 -> m25_163  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_156 -> m25_164  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_156 -> m25_165  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_157 -> m25_158  [key=0, style=solid];
m25_157 -> m25_168  [key=2, style=dotted];
m25_157 -> m25_169  [key=2, style=dotted];
m25_158 -> m25_159  [key=0, style=solid];
m25_158 -> m25_168  [key=2, style=dotted];
m25_158 -> m25_169  [key=2, style=dotted];
m25_159 -> m25_160  [key=0, style=solid];
m25_159 -> m25_5  [key=2, style=dotted];
m25_160 -> m25_161  [key=0, style=solid];
m25_160 -> m25_5  [key=2, style=dotted];
m25_161 -> m25_162  [key=0, style=solid];
m25_161 -> m25_5  [key=2, style=dotted];
m25_162 -> m25_163  [key=0, style=solid];
m25_162 -> m25_5  [key=2, style=dotted];
m25_163 -> m25_164  [key=0, style=solid];
m25_163 -> m25_5  [key=2, style=dotted];
m25_164 -> m25_165  [key=0, style=solid];
m25_164 -> m25_5  [key=2, style=dotted];
m25_165 -> m25_166  [key=0, style=solid];
m25_165 -> m25_5  [key=2, style=dotted];
m25_166 -> m25_153  [key=0, style=bold, color=blue];
m25_35 -> m25_36  [key=0, style=solid];
m25_36 -> m25_37  [key=0, style=solid];
m25_36 -> m25_3  [key=2, style=dotted];
m25_36 -> m25_19  [key=2, style=dotted];
m25_36 -> m25_45  [key=2, style=dotted];
m25_36 -> m25_33  [key=2, style=dotted];
m25_36 -> m25_20  [key=2, style=dotted];
m25_37 -> m25_38  [key=0, style=solid];
m25_37 -> m25_4  [key=2, style=dotted];
m25_37 -> m25_21  [key=2, style=dotted];
m25_37 -> m25_34  [key=2, style=dotted];
m25_37 -> m25_39  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_37 -> m25_40  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_37 -> m25_41  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_37 -> m25_42  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_37 -> m25_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_38 -> m25_39  [key=0, style=solid];
m25_38 -> m25_5  [key=2, style=dotted];
m25_39 -> m25_40  [key=0, style=solid];
m25_39 -> m25_5  [key=2, style=dotted];
m25_40 -> m25_41  [key=0, style=solid];
m25_40 -> m25_5  [key=2, style=dotted];
m25_41 -> m25_42  [key=0, style=solid];
m25_41 -> m25_5  [key=2, style=dotted];
m25_42 -> m25_43  [key=0, style=solid];
m25_42 -> m25_5  [key=2, style=dotted];
m25_43 -> m25_44  [key=0, style=solid];
m25_43 -> m25_5  [key=2, style=dotted];
m25_44 -> m25_35  [key=0, style=bold, color=blue];
m25_90 -> m25_91  [key=0, style=solid];
m25_91 -> m25_92  [key=0, style=solid];
m25_91 -> m25_60  [key=2, style=dotted];
m25_91 -> m25_93  [key=1, style=dashed, color=darkseagreen4, label=sut];
m25_91 -> m25_94  [key=1, style=dashed, color=darkseagreen4, label=sut];
m25_92 -> m25_93  [key=0, style=solid];
m25_93 -> m25_94  [key=0, style=solid];
m25_93 -> m25_19  [key=2, style=dotted];
m25_93 -> m25_102  [key=2, style=dotted];
m25_93 -> m25_33  [key=2, style=dotted];
m25_93 -> m25_20  [key=2, style=dotted];
m25_94 -> m25_95  [key=0, style=solid];
m25_94 -> m25_4  [key=2, style=dotted];
m25_94 -> m25_74  [key=2, style=dotted];
m25_94 -> m25_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_94 -> m25_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_94 -> m25_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_94 -> m25_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_94 -> m25_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_95 -> m25_96  [key=0, style=solid];
m25_95 -> m25_75  [key=2, style=dotted];
m25_95 -> m25_76  [key=2, style=dotted];
m25_96 -> m25_97  [key=0, style=solid];
m25_96 -> m25_75  [key=2, style=dotted];
m25_96 -> m25_76  [key=2, style=dotted];
m25_97 -> m25_98  [key=0, style=solid];
m25_97 -> m25_75  [key=2, style=dotted];
m25_97 -> m25_76  [key=2, style=dotted];
m25_98 -> m25_99  [key=0, style=solid];
m25_98 -> m25_75  [key=2, style=dotted];
m25_98 -> m25_76  [key=2, style=dotted];
m25_99 -> m25_100  [key=0, style=solid];
m25_99 -> m25_75  [key=2, style=dotted];
m25_99 -> m25_76  [key=2, style=dotted];
m25_100 -> m25_101  [key=0, style=solid];
m25_100 -> m25_75  [key=2, style=dotted];
m25_100 -> m25_76  [key=2, style=dotted];
m25_101 -> m25_90  [key=0, style=bold, color=blue];
m25_0 -> m25_1  [key=0, style=solid];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=2, style=dotted];
m25_1 -> m25_4  [key=2, style=dotted];
m25_1 -> m25_5  [key=2, style=dotted];
m25_2 -> m25_0  [key=0, style=bold, color=blue];
m25_181 -> m25_182  [key=0, style=solid];
m25_182 -> m25_183  [key=0, style=solid];
m25_182 -> m25_193  [key=2, style=dotted];
m25_182 -> m25_194  [key=2, style=dotted];
m25_183 -> m25_184  [key=0, style=solid];
m25_183 -> m25_117  [key=2, style=dotted];
m25_183 -> m25_118  [key=2, style=dotted];
m25_183 -> m25_129  [key=2, style=dotted];
m25_183 -> m25_195  [key=2, style=dotted];
m25_184 -> m25_185  [key=0, style=solid];
m25_184 -> m25_167  [key=2, style=dotted];
m25_185 -> m25_186  [key=0, style=solid];
m25_185 -> m25_4  [key=2, style=dotted];
m25_185 -> m25_21  [key=2, style=dotted];
m25_185 -> m25_34  [key=2, style=dotted];
m25_185 -> m25_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_185 -> m25_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_185 -> m25_189  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_185 -> m25_190  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_185 -> m25_191  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_186 -> m25_187  [key=0, style=solid];
m25_186 -> m25_168  [key=2, style=dotted];
m25_186 -> m25_169  [key=2, style=dotted];
m25_187 -> m25_188  [key=0, style=solid];
m25_187 -> m25_168  [key=2, style=dotted];
m25_187 -> m25_169  [key=2, style=dotted];
m25_188 -> m25_189  [key=0, style=solid];
m25_188 -> m25_5  [key=2, style=dotted];
m25_189 -> m25_190  [key=0, style=solid];
m25_189 -> m25_5  [key=2, style=dotted];
m25_190 -> m25_191  [key=0, style=solid];
m25_190 -> m25_5  [key=2, style=dotted];
m25_191 -> m25_192  [key=0, style=solid];
m25_191 -> m25_5  [key=2, style=dotted];
m25_192 -> m25_181  [key=0, style=bold, color=blue];
m25_55 -> m25_56  [key=0, style=solid];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_60  [key=2, style=dotted];
m25_56 -> m25_61  [key=2, style=dotted];
m25_56 -> m25_33  [key=2, style=dotted];
m25_57 -> m25_58  [key=0, style=solid];
m25_57 -> m25_4  [key=2, style=dotted];
m25_57 -> m25_21  [key=2, style=dotted];
m25_57 -> m25_34  [key=2, style=dotted];
m25_58 -> m25_59  [key=0, style=solid];
m25_58 -> m25_5  [key=2, style=dotted];
m25_59 -> m25_55  [key=0, style=bold, color=blue];
m25_132 -> m25_133  [key=0, style=solid];
m25_132 -> m25_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_132 -> m25_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_132 -> m25_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_132 -> m25_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_132 -> m25_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_132 -> m25_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_132 -> m25_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_133 -> m25_134  [key=0, style=solid];
m25_133 -> m25_136  [key=0, style=solid];
m25_133 -> m25_138  [key=0, style=solid];
m25_133 -> m25_140  [key=0, style=solid];
m25_133 -> m25_142  [key=0, style=solid];
m25_133 -> m25_144  [key=0, style=solid];
m25_133 -> m25_146  [key=0, style=solid];
m25_133 -> m25_148  [key=0, style=solid];
m25_133 -> m25_150  [key=0, style=solid];
m25_135 -> m25_151  [key=0, style=solid];
m25_137 -> m25_151  [key=0, style=solid];
m25_139 -> m25_151  [key=0, style=solid];
m25_141 -> m25_151  [key=0, style=solid];
m25_143 -> m25_151  [key=0, style=solid];
m25_145 -> m25_151  [key=0, style=solid];
m25_149 -> m25_151  [key=0, style=solid];
m25_134 -> m25_135  [key=0, style=solid];
m25_136 -> m25_137  [key=0, style=solid];
m25_138 -> m25_139  [key=0, style=solid];
m25_140 -> m25_141  [key=0, style=solid];
m25_142 -> m25_143  [key=0, style=solid];
m25_144 -> m25_145  [key=0, style=solid];
m25_146 -> m25_147  [key=0, style=solid];
m25_148 -> m25_149  [key=0, style=solid];
m25_150 -> m25_151  [key=0, style=solid];
m25_150 -> m25_152  [key=2, style=dotted];
m25_147 -> m25_151  [key=0, style=solid];
m25_151 -> m25_132  [key=0, style=bold, color=blue];
m25_6 -> m25_7  [key=0, style=solid];
m25_7 -> m25_8  [key=0, style=solid];
m25_7 -> m25_16  [key=2, style=dotted];
m25_7 -> m25_17  [key=2, style=dotted];
m25_7 -> m25_18  [key=2, style=dotted];
m25_7 -> m25_19  [key=2, style=dotted];
m25_7 -> m25_20  [key=2, style=dotted];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_4  [key=2, style=dotted];
m25_8 -> m25_21  [key=2, style=dotted];
m25_8 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_8 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_8 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_8 -> m25_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_8 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_9 -> m25_10  [key=0, style=solid];
m25_9 -> m25_5  [key=2, style=dotted];
m25_10 -> m25_11  [key=0, style=solid];
m25_10 -> m25_5  [key=2, style=dotted];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_5  [key=2, style=dotted];
m25_12 -> m25_13  [key=0, style=solid];
m25_12 -> m25_5  [key=2, style=dotted];
m25_13 -> m25_14  [key=0, style=solid];
m25_13 -> m25_5  [key=2, style=dotted];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_5  [key=2, style=dotted];
m25_15 -> m25_6  [key=0, style=bold, color=blue];
m25_103 -> m25_104  [key=0, style=solid];
m25_104 -> m25_105  [key=0, style=solid];
m25_104 -> m25_117  [key=2, style=dotted];
m25_104 -> m25_118  [key=2, style=dotted];
m25_104 -> m25_119  [key=2, style=dotted];
m25_104 -> m25_120  [key=2, style=dotted];
m25_104 -> m25_121  [key=2, style=dotted];
m25_104 -> m25_122  [key=2, style=dotted];
m25_104 -> m25_123  [key=2, style=dotted];
m25_104 -> m25_124  [key=2, style=dotted];
m25_104 -> m25_125  [key=2, style=dotted];
m25_104 -> m25_126  [key=2, style=dotted];
m25_104 -> m25_127  [key=2, style=dotted];
m25_104 -> m25_128  [key=2, style=dotted];
m25_104 -> m25_129  [key=2, style=dotted];
m25_104 -> m25_130  [key=2, style=dotted];
m25_104 -> m25_106  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m25_105 -> m25_106  [key=0, style=solid];
m25_105 -> m25_133  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_135  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_143  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m25_105 -> m25_105  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer"];
m25_106 -> m25_107  [key=0, style=solid];
m25_106 -> m25_131  [key=2, style=dotted];
m25_107 -> m25_108  [key=0, style=solid];
m25_107 -> m25_21  [key=2, style=dotted];
m25_107 -> m25_109  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_107 -> m25_110  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_107 -> m25_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_107 -> m25_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_107 -> m25_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_107 -> m25_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_107 -> m25_115  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_108 -> m25_109  [key=0, style=solid];
m25_108 -> m25_5  [key=2, style=dotted];
m25_109 -> m25_110  [key=0, style=solid];
m25_109 -> m25_5  [key=2, style=dotted];
m25_110 -> m25_111  [key=0, style=solid];
m25_110 -> m25_5  [key=2, style=dotted];
m25_111 -> m25_112  [key=0, style=solid];
m25_111 -> m25_5  [key=2, style=dotted];
m25_112 -> m25_113  [key=0, style=solid];
m25_112 -> m25_5  [key=2, style=dotted];
m25_113 -> m25_114  [key=0, style=solid];
m25_113 -> m25_5  [key=2, style=dotted];
m25_114 -> m25_115  [key=0, style=solid];
m25_114 -> m25_5  [key=2, style=dotted];
m25_115 -> m25_116  [key=0, style=solid];
m25_115 -> m25_5  [key=2, style=dotted];
m25_116 -> m25_103  [key=0, style=bold, color=blue];
m25_170 -> m25_171  [key=0, style=solid];
m25_171 -> m25_172  [key=0, style=solid];
m25_171 -> m25_117  [key=2, style=dotted];
m25_171 -> m25_118  [key=2, style=dotted];
m25_171 -> m25_129  [key=2, style=dotted];
m25_171 -> m25_130  [key=2, style=dotted];
m25_172 -> m25_173  [key=0, style=solid];
m25_172 -> m25_167  [key=2, style=dotted];
m25_173 -> m25_174  [key=0, style=solid];
m25_173 -> m25_4  [key=2, style=dotted];
m25_173 -> m25_21  [key=2, style=dotted];
m25_173 -> m25_34  [key=2, style=dotted];
m25_173 -> m25_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_173 -> m25_176  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_173 -> m25_177  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_173 -> m25_178  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_173 -> m25_179  [key=1, style=dashed, color=darkseagreen4, label=lines];
m25_174 -> m25_175  [key=0, style=solid];
m25_174 -> m25_168  [key=2, style=dotted];
m25_174 -> m25_169  [key=2, style=dotted];
m25_175 -> m25_176  [key=0, style=solid];
m25_175 -> m25_168  [key=2, style=dotted];
m25_175 -> m25_169  [key=2, style=dotted];
m25_176 -> m25_177  [key=0, style=solid];
m25_176 -> m25_5  [key=2, style=dotted];
m25_177 -> m25_178  [key=0, style=solid];
m25_177 -> m25_5  [key=2, style=dotted];
m25_178 -> m25_179  [key=0, style=solid];
m25_178 -> m25_5  [key=2, style=dotted];
m25_179 -> m25_180  [key=0, style=solid];
m25_179 -> m25_5  [key=2, style=dotted];
m25_180 -> m25_170  [key=0, style=bold, color=blue];
m28_28 -> m28_77  [key=0, style=solid];
m28_28 -> m28_24  [key=0, style=bold, color=blue];
m28_77 -> m28_78  [key=0, style=solid];
m28_77 -> m28_79  [key=2, style=dotted];
m28_77 -> m28_80  [key=2, style=dotted];
m28_77 -> m28_9  [key=2, style=dotted];
m28_77 -> m28_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_78 -> m28_28  [key=0, style=bold, color=blue];
m28_78 -> m28_46  [key=2, style=dotted];
m28_78 -> m28_11  [key=2, style=dotted];
m28_78 -> m28_79  [key=0, style=solid];
m28_26 -> m28_9  [key=2, style=dotted];
m28_26 -> m28_27  [key=0, style=solid];
m28_26 -> m28_29  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_45 -> m28_41  [key=0, style=bold, color=blue];
m28_49 -> m28_47  [key=0, style=bold, color=blue];
m28_44 -> m28_46  [key=2, style=dotted];
m28_44 -> m28_11  [key=2, style=dotted];
m28_44 -> m28_45  [key=0, style=solid];
m28_74 -> m28_75  [key=0, style=solid];
m28_74 -> m28_76  [key=2, style=dotted];
m28_36 -> m28_42  [key=0, style=solid];
m28_36 -> m28_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m28_36 -> m28_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m28_36 -> m28_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m28_36 -> m28_20  [key=2, style=dotted];
m28_36 -> m28_37  [key=0, style=solid];
m28_42 -> m28_43  [key=0, style=solid];
m28_42 -> m28_44  [key=2, style=dotted];
m28_42 -> m28_45  [key=2, style=dotted];
m28_42 -> m28_32  [key=2, style=dotted];
m28_42 -> m28_46  [key=2, style=dotted];
m28_42 -> m28_47  [key=2, style=dotted];
m28_42 -> m28_48  [key=2, style=dotted];
m28_42 -> m28_29  [key=2, style=dotted];
m28_42 -> m28_49  [key=2, style=dotted];
m28_42 -> m28_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_42 -> m28_53  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_42 -> m28_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_43 -> m28_36  [key=0, style=bold, color=blue];
m28_43 -> m28_9  [key=2, style=dotted];
m28_43 -> m28_44  [key=0, style=solid];
m28_43 -> m28_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_157 -> m28_158  [key=0, style=solid];
m28_161 -> m28_118  [key=2, style=dotted];
m28_161 -> m28_162  [key=0, style=solid];
m28_158 -> m28_127  [key=2, style=dotted];
m28_158 -> m28_161  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_158 -> m28_159  [key=0, style=solid];
m28_160 -> m28_161  [key=0, style=solid];
m28_160 -> m28_163  [key=2, style=dotted];
m28_160 -> m28_164  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_160 -> m28_167  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_159 -> m28_160  [key=0, style=solid];
m28_162 -> m28_157  [key=0, style=bold, color=blue];
m28_249 -> m28_250  [key=0, style=solid];
m28_251 -> m28_9  [key=2, style=dotted];
m28_251 -> m28_252  [key=0, style=solid];
m28_251 -> m28_254  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_252 -> m28_46  [key=2, style=dotted];
m28_252 -> m28_11  [key=2, style=dotted];
m28_252 -> m28_253  [key=0, style=solid];
m28_250 -> m28_251  [key=0, style=solid];
m28_250 -> m28_252  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_250 -> m28_237  [key=2, style=dotted];
m28_253 -> m28_249  [key=0, style=bold, color=blue];
m28_34 -> m28_64  [key=0, style=solid];
m28_34 -> m28_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_34 -> m28_35  [key=0, style=solid];
m28_34 -> m28_36  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_34 -> m28_34  [key=3, color=darkorchid, style=bold, label="Local variable double expectedResult"];
m28_64 -> m28_65  [key=0, style=solid];
m28_64 -> m28_66  [key=2, style=dotted];
m28_64 -> m28_67  [key=2, style=dotted];
m28_64 -> m28_68  [key=2, style=dotted];
m28_64 -> m28_69  [key=2, style=dotted];
m28_64 -> m28_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_64 -> m28_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_65 -> m28_34  [key=0, style=bold, color=blue];
m28_65 -> m28_63  [key=0, style=bold, color=blue];
m28_103 -> m28_104  [key=0, style=solid, color=green];
m28_104 -> m28_105  [key=0, style=solid, color=green];
m28_104 -> m28_90  [key=2, style=dotted, color=green];
m28_104 -> m28_106  [key=1, style=dashed, color=green, label=expectedResult];
m28_105 -> m28_106  [key=0, style=solid, color=green];
m28_105 -> m28_9  [key=2, style=dotted, color=green];
m28_105 -> m28_108  [key=1, style=dashed, color=green, label="lambda expression"];
m28_106 -> m28_107  [key=0, style=solid, color=green];
m28_106 -> m28_46  [key=2, style=dotted, color=green];
m28_106 -> m28_11  [key=2, style=dotted, color=green];
m28_107 -> m28_103  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_0 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_0 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_0 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_3  [key=2, style=dotted];
m28_1 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_1 -> m28_6  [key=2, style=dotted];
m28_1 -> m28_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m28_2 -> m28_0  [key=0, style=bold, color=blue];
m28_2 -> m28_3  [key=0, style=solid];
m28_2 -> m28_4  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_2 -> m28_7  [key=2, style=dotted];
m28_2 -> m28_8  [key=2, style=dotted];
m28_57 -> m28_6  [key=2, style=dotted];
m28_57 -> m28_58  [key=0, style=solid];
m28_6 -> m28_7  [key=0, style=solid];
m28_6 -> m28_10  [key=2, style=dotted];
m28_6 -> m28_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_241 -> m28_242  [key=0, style=solid];
m28_243 -> m28_9  [key=2, style=dotted];
m28_243 -> m28_244  [key=0, style=solid];
m28_243 -> m28_246  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_244 -> m28_46  [key=2, style=dotted];
m28_244 -> m28_11  [key=2, style=dotted];
m28_244 -> m28_245  [key=0, style=solid];
m28_242 -> m28_243  [key=0, style=solid];
m28_242 -> m28_244  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_242 -> m28_237  [key=2, style=dotted];
m28_245 -> m28_241  [key=0, style=bold, color=blue];
m28_30 -> m28_31  [key=0, style=solid];
m28_30 -> m28_32  [key=2, style=dotted];
m28_7 -> m28_8  [key=0, style=solid];
m28_76 -> m28_77  [key=0, style=solid];
m28_76 -> m28_78  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_76 -> m28_80  [key=2, style=dotted];
m28_76 -> m28_81  [key=2, style=dotted];
m28_41 -> m28_42  [key=0, style=solid];
m28_18 -> m28_19  [key=0, style=solid];
m28_18 -> m28_20  [key=2, style=dotted];
m28_67 -> m28_68  [key=0, style=solid];
m28_67 -> m28_69  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m28_68 -> m28_9  [key=2, style=dotted];
m28_68 -> m28_69  [key=0, style=solid];
m28_68 -> m28_71  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_69 -> m28_46  [key=2, style=dotted];
m28_69 -> m28_11  [key=2, style=dotted];
m28_69 -> m28_70  [key=0, style=solid];
m28_70 -> m28_67  [key=0, style=bold, color=blue];
m28_70 -> m28_71  [key=0, style=solid];
m28_40 -> m28_38  [key=0, style=bold, color=blue];
m28_56 -> m28_57  [key=0, style=solid];
m28_175 -> m28_176  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_5 -> m28_9  [key=2, style=dotted];
m28_5 -> m28_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_5 -> m28_0  [key=0, style=bold, color=blue];
m28_12 -> m28_13  [key=0, style=solid];
m28_12 -> m28_14  [key=2, style=dotted];
m28_16 -> m28_17  [key=0, style=solid, color=green];
m28_16 -> m28_18  [key=2, style=dotted];
m28_16 -> m28_16  [key=3, color=green, style=bold, label="Local variable int expectedResult"];
m28_4 -> m28_5  [key=0, style=solid];
m28_4 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_4 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_4 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_4 -> m28_11  [key=2, style=dotted];
m28_4 -> m28_10  [key=2, style=dotted];
m28_11 -> m28_12  [key=0, style=solid];
m28_15 -> m28_16  [key=0, style=solid, color=green];
m28_8 -> m28_4  [key=0, style=bold, color=blue];
m28_13 -> m28_11  [key=0, style=bold, color=blue];
m28_13 -> m28_14  [key=0, style=solid];
m28_17 -> m28_15  [key=0, style=bold, color=blue];
m28_17 -> m28_18  [key=0, style=solid, color=green];
m28_17 -> m28_9  [key=2, style=dotted, color=green];
m28_17 -> m28_21  [key=1, style=dashed, color=green, label="lambda expression"];
m28_38 -> m28_39  [key=0, style=solid];
m28_38 -> m28_40  [key=2, style=dotted];
m28_38 -> m28_41  [key=2, style=dotted];
m28_37 -> m28_38  [key=0, style=solid];
m28_37 -> m28_33  [key=0, style=bold, color=blue];
m28_39 -> m28_37  [key=0, style=bold, color=blue];
m28_39 -> m28_40  [key=0, style=solid];
m28_39 -> m28_32  [key=2, style=dotted];
m28_51 -> m28_52  [key=0, style=solid];
m28_51 -> m28_29  [key=2, style=dotted];
m28_51 -> m28_40  [key=2, style=dotted];
m28_54 -> m28_55  [key=0, style=solid];
m28_54 -> m28_56  [key=2, style=dotted];
m28_54 -> m28_57  [key=2, style=dotted];
m28_54 -> m28_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_54 -> m28_46  [key=2, style=dotted];
m28_54 -> m28_11  [key=2, style=dotted];
m28_59 -> m28_60  [key=0, style=solid];
m28_59 -> m28_29  [key=2, style=dotted];
m28_59 -> m28_40  [key=2, style=dotted];
m28_59 -> m28_61  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m28_50 -> m28_51  [key=0, style=solid];
m28_53 -> m28_54  [key=0, style=solid];
m28_53 -> m28_9  [key=2, style=dotted];
m28_53 -> m28_56  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_61 -> m28_62  [key=0, style=solid];
m28_61 -> m28_46  [key=2, style=dotted];
m28_61 -> m28_11  [key=2, style=dotted];
m28_52 -> m28_50  [key=0, style=bold, color=blue];
m28_52 -> m28_53  [key=0, style=solid];
m28_52 -> m28_54  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_55 -> m28_53  [key=0, style=bold, color=blue];
m28_55 -> m28_51  [key=0, style=bold, color=blue];
m28_58 -> m28_59  [key=0, style=solid];
m28_58 -> m28_56  [key=0, style=bold, color=blue];
m28_60 -> m28_58  [key=0, style=bold, color=blue];
m28_60 -> m28_9  [key=2, style=dotted];
m28_60 -> m28_61  [key=0, style=solid];
m28_60 -> m28_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_62 -> m28_63  [key=0, style=solid];
m28_62 -> m28_59  [key=0, style=bold, color=blue];
m28_63 -> m28_61  [key=0, style=bold, color=blue];
m28_63 -> m28_64  [key=0, style=solid];
m28_71 -> m28_72  [key=0, style=solid];
m28_71 -> m28_40  [key=2, style=dotted];
m28_73 -> m28_74  [key=0, style=solid];
m28_73 -> m28_71  [key=0, style=bold, color=blue];
m28_72 -> m28_70  [key=0, style=bold, color=blue];
m28_72 -> m28_73  [key=0, style=solid];
m28_72 -> m28_74  [key=2, style=dotted];
m28_75 -> m28_73  [key=0, style=bold, color=blue];
m28_75 -> m28_76  [key=0, style=solid];
m28_21 -> m28_22  [key=0, style=solid];
m28_21 -> m28_29  [key=2, style=dotted];
m28_21 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label=firstArg];
m28_108 -> m28_109  [key=0, style=solid, color=green];
m28_109 -> m28_110  [key=0, style=solid, color=green];
m28_109 -> m28_111  [key=2, style=dotted, color=green];
m28_110 -> m28_108  [key=0, style=bold, color=blue];
m28_23 -> m28_21  [key=0, style=bold, color=blue];
m28_23 -> m28_24  [key=0, style=solid, color=red];
m28_23 -> m28_30  [key=2, style=dotted, color=red];
m28_22 -> m28_23  [key=0, style=solid, color=red];
m28_22 -> m28_6  [key=2, style=dotted];
m28_22 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_22 -> m28_24  [key=1, style=dashed, color=darkseagreen4, label=preprocCompare];
m28_29 -> m28_30  [key=0, style=solid];
m28_47 -> m28_48  [key=0, style=solid];
m28_82 -> m28_83  [key=0, style=solid];
m28_82 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_82 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_91 -> m28_92  [key=0, style=solid];
m28_100 -> m28_101  [key=0, style=solid];
m28_119 -> m28_120  [key=0, style=solid];
m28_128 -> m28_129  [key=0, style=solid];
m28_137 -> m28_138  [key=0, style=solid];
m28_146 -> m28_147  [key=0, style=solid];
m28_154 -> m28_155  [key=0, style=solid];
m28_185 -> m28_186  [key=0, style=solid];
m28_195 -> m28_196  [key=0, style=solid];
m28_203 -> m28_204  [key=0, style=solid];
m28_212 -> m28_213  [key=0, style=solid];
m28_220 -> m28_221  [key=0, style=solid];
m28_229 -> m28_230  [key=0, style=solid];
m28_238 -> m28_239  [key=0, style=solid];
m28_246 -> m28_247  [key=0, style=solid];
m28_254 -> m28_255  [key=0, style=solid];
m28_14 -> m28_12  [key=0, style=bold, color=blue];
m28_31 -> m28_29  [key=0, style=bold, color=blue];
m28_48 -> m28_49  [key=0, style=solid];
m28_48 -> m28_50  [key=2, style=dotted];
m28_84 -> m28_82  [key=0, style=bold, color=blue];
m28_84 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label=firstArg];
m28_83 -> m28_84  [key=0, style=solid];
m28_83 -> m28_66  [key=2, style=dotted];
m28_83 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_93 -> m28_91  [key=0, style=bold, color=blue];
m28_92 -> m28_93  [key=0, style=solid];
m28_92 -> m28_94  [key=2, style=dotted];
m28_102 -> m28_100  [key=0, style=bold, color=blue];
m28_101 -> m28_102  [key=0, style=solid];
m28_101 -> m28_74  [key=2, style=dotted];
m28_121 -> m28_119  [key=0, style=bold, color=blue];
m28_120 -> m28_117  [key=2, style=dotted];
m28_120 -> m28_121  [key=0, style=solid];
m28_130 -> m28_128  [key=0, style=bold, color=blue];
m28_129 -> m28_127  [key=2, style=dotted];
m28_129 -> m28_130  [key=0, style=solid];
m28_139 -> m28_137  [key=0, style=bold, color=blue];
m28_138 -> m28_136  [key=2, style=dotted];
m28_138 -> m28_139  [key=0, style=solid];
m28_148 -> m28_146  [key=0, style=bold, color=blue];
m28_147 -> m28_145  [key=2, style=dotted];
m28_147 -> m28_148  [key=0, style=solid];
m28_156 -> m28_154  [key=0, style=bold, color=blue];
m28_155 -> m28_145  [key=2, style=dotted];
m28_155 -> m28_156  [key=0, style=solid];
m28_187 -> m28_185  [key=0, style=bold, color=blue];
m28_186 -> m28_187  [key=0, style=solid];
m28_186 -> m28_188  [key=2, style=dotted];
m28_197 -> m28_195  [key=0, style=bold, color=blue];
m28_196 -> m28_194  [key=2, style=dotted];
m28_196 -> m28_197  [key=0, style=solid];
m28_205 -> m28_203  [key=0, style=bold, color=blue];
m28_204 -> m28_194  [key=2, style=dotted];
m28_204 -> m28_205  [key=0, style=solid];
m28_214 -> m28_212  [key=0, style=bold, color=blue];
m28_213 -> m28_194  [key=2, style=dotted];
m28_213 -> m28_214  [key=0, style=solid];
m28_222 -> m28_220  [key=0, style=bold, color=blue];
m28_221 -> m28_222  [key=0, style=solid];
m28_221 -> m28_223  [key=2, style=dotted];
m28_231 -> m28_229  [key=0, style=bold, color=blue];
m28_230 -> m28_6  [key=2, style=dotted];
m28_230 -> m28_231  [key=0, style=solid];
m28_240 -> m28_238  [key=0, style=bold, color=blue];
m28_239 -> m28_6  [key=2, style=dotted];
m28_239 -> m28_240  [key=0, style=solid];
m28_248 -> m28_246  [key=0, style=bold, color=blue];
m28_247 -> m28_6  [key=2, style=dotted];
m28_247 -> m28_248  [key=0, style=solid];
m28_256 -> m28_254  [key=0, style=bold, color=blue];
m28_255 -> m28_6  [key=2, style=dotted];
m28_255 -> m28_256  [key=0, style=solid];
m28_165 -> m28_127  [key=2, style=dotted];
m28_165 -> m28_166  [key=0, style=solid];
m28_164 -> m28_165  [key=0, style=solid];
m28_166 -> m28_164  [key=0, style=bold, color=blue];
m28_167 -> m28_168  [key=0, style=solid];
m28_167 -> m28_172  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_167 -> m28_176  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_169 -> m28_167  [key=0, style=bold, color=blue];
m28_168 -> m28_169  [key=0, style=solid];
m28_168 -> m28_170  [key=2, style=dotted];
m28_168 -> m28_171  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_172 -> m28_173  [key=0, style=solid];
m28_172 -> m28_174  [key=2, style=dotted];
m28_172 -> m28_175  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_176 -> m28_177  [key=0, style=solid];
m28_176 -> m28_178  [key=2, style=dotted];
m28_171 -> m28_172  [key=0, style=solid];
m28_173 -> m28_171  [key=0, style=bold, color=blue];
m28_177 -> m28_175  [key=0, style=bold, color=blue];
m28_27 -> m28_20  [key=2, style=dotted];
m28_27 -> m28_28  [key=0, style=solid];
m28_19 -> m28_15  [key=0, style=bold, color=blue];
m28_19 -> m28_20  [key=0, style=solid, color=red];
m28_19 -> m28_21  [key=0, style=solid, color=red];
m28_19 -> m28_26  [key=2, style=dotted, color=red];
m28_33 -> m28_34  [key=0, style=solid];
m28_224 -> m28_225  [key=0, style=solid];
m28_226 -> m28_9  [key=2, style=dotted];
m28_226 -> m28_227  [key=0, style=solid];
m28_226 -> m28_229  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_225 -> m28_90  [key=2, style=dotted];
m28_225 -> m28_226  [key=0, style=solid];
m28_225 -> m28_81  [key=2, style=dotted];
m28_225 -> m28_227  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_227 -> m28_46  [key=2, style=dotted];
m28_227 -> m28_11  [key=2, style=dotted];
m28_227 -> m28_228  [key=0, style=solid];
m28_228 -> m28_224  [key=0, style=bold, color=blue];
m28_79 -> m28_75  [key=0, style=bold, color=blue];
m28_3 -> m28_9  [key=2, style=dotted];
m28_3 -> m28_4  [key=0, style=solid];
m28_3 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_3 -> m28_19  [key=0, style=solid, color=red];
m28_3 -> m28_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Type>"];
m28_3 -> m28_21  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m28_3 -> m28_22  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_3 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_3 -> m28_23  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<System.Type>"];
m28_3 -> m28_24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>"];
m28_215 -> m28_216  [key=0, style=solid];
m28_217 -> m28_9  [key=2, style=dotted];
m28_217 -> m28_218  [key=0, style=solid];
m28_217 -> m28_220  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_218 -> m28_46  [key=2, style=dotted];
m28_218 -> m28_11  [key=2, style=dotted];
m28_218 -> m28_219  [key=0, style=solid];
m28_216 -> m28_217  [key=0, style=solid];
m28_216 -> m28_218  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_216 -> m28_211  [key=2, style=dotted];
m28_216 -> m28_81  [key=2, style=dotted];
m28_219 -> m28_215  [key=0, style=bold, color=blue];
m28_206 -> m28_207  [key=0, style=solid];
m28_208 -> m28_9  [key=2, style=dotted];
m28_208 -> m28_209  [key=0, style=solid];
m28_208 -> m28_212  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_209 -> m28_46  [key=2, style=dotted];
m28_209 -> m28_11  [key=2, style=dotted];
m28_209 -> m28_210  [key=0, style=solid];
m28_207 -> m28_208  [key=0, style=solid];
m28_207 -> m28_209  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_207 -> m28_211  [key=2, style=dotted];
m28_207 -> m28_81  [key=2, style=dotted];
m28_210 -> m28_206  [key=0, style=bold, color=blue];
m28_140 -> m28_141  [key=0, style=solid];
m28_142 -> m28_9  [key=2, style=dotted];
m28_142 -> m28_143  [key=0, style=solid];
m28_142 -> m28_146  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_141 -> m28_142  [key=0, style=solid];
m28_141 -> m28_145  [key=2, style=dotted];
m28_141 -> m28_143  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_143 -> m28_144  [key=0, style=solid];
m28_143 -> m28_118  [key=2, style=dotted];
m28_144 -> m28_140  [key=0, style=bold, color=blue];
m28_85 -> m28_86  [key=0, style=solid];
m28_85 -> m28_51  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m28_85 -> m28_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m28_85 -> m28_59  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m28_87 -> m28_9  [key=2, style=dotted];
m28_87 -> m28_88  [key=0, style=solid];
m28_87 -> m28_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_87 -> m28_54  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m28_86 -> m28_90  [key=2, style=dotted];
m28_86 -> m28_87  [key=0, style=solid];
m28_86 -> m28_88  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_86 -> m28_51  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_86 -> m28_54  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_86 -> m28_59  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_88 -> m28_46  [key=2, style=dotted];
m28_88 -> m28_11  [key=2, style=dotted];
m28_88 -> m28_89  [key=0, style=solid];
m28_88 -> m28_71  [key=1, style=dashed, color=darkseagreen4, label=string];
m28_89 -> m28_85  [key=0, style=bold, color=blue];
m28_89 -> m28_71  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_95 -> m28_96  [key=0, style=solid];
m28_97 -> m28_9  [key=2, style=dotted];
m28_97 -> m28_98  [key=0, style=solid];
m28_97 -> m28_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_96 -> m28_90  [key=2, style=dotted];
m28_96 -> m28_97  [key=0, style=solid];
m28_96 -> m28_81  [key=2, style=dotted];
m28_96 -> m28_98  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_98 -> m28_46  [key=2, style=dotted];
m28_98 -> m28_11  [key=2, style=dotted];
m28_98 -> m28_99  [key=0, style=solid];
m28_99 -> m28_95  [key=0, style=bold, color=blue];
m28_122 -> m28_123  [key=0, style=solid];
m28_124 -> m28_9  [key=2, style=dotted];
m28_124 -> m28_125  [key=0, style=solid];
m28_124 -> m28_128  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_123 -> m28_124  [key=0, style=solid];
m28_123 -> m28_127  [key=2, style=dotted];
m28_123 -> m28_125  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_125 -> m28_126  [key=0, style=solid];
m28_125 -> m28_118  [key=2, style=dotted];
m28_126 -> m28_122  [key=0, style=bold, color=blue];
m28_20 -> m28_25  [key=0, style=solid];
m28_20 -> m28_27  [key=2, style=dotted];
m28_20 -> m28_28  [key=2, style=dotted];
m28_24 -> m28_25  [key=0, style=solid];
m28_24 -> m28_31  [key=2, style=dotted];
m28_24 -> m28_32  [key=2, style=dotted];
m28_24 -> m28_33  [key=2, style=dotted];
m28_24 -> m28_34  [key=2, style=dotted];
m28_24 -> m28_28  [key=2, style=dotted];
m28_24 -> m28_35  [key=2, style=dotted];
m28_24 -> m28_36  [key=2, style=dotted];
m28_25 -> m28_3  [key=0, style=bold, color=blue];
m28_25 -> m28_26  [key=0, style=solid];
m28_25 -> m28_27  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_25 -> m28_25  [key=3, color=darkorchid, style=bold, label="Local variable double expectedResult"];
m28_149 -> m28_150  [key=0, style=solid];
m28_151 -> m28_9  [key=2, style=dotted];
m28_151 -> m28_152  [key=0, style=solid];
m28_151 -> m28_154  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_150 -> m28_151  [key=0, style=solid];
m28_150 -> m28_145  [key=2, style=dotted];
m28_150 -> m28_152  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_152 -> m28_153  [key=0, style=solid];
m28_152 -> m28_118  [key=2, style=dotted];
m28_153 -> m28_149  [key=0, style=bold, color=blue];
m28_81 -> m28_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_81 -> m28_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_81 -> m28_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_81 -> m28_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m28_112 -> m28_113  [key=0, style=solid];
m28_114 -> m28_9  [key=2, style=dotted];
m28_114 -> m28_115  [key=0, style=solid];
m28_114 -> m28_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_113 -> m28_114  [key=0, style=solid];
m28_113 -> m28_117  [key=2, style=dotted];
m28_113 -> m28_115  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_115 -> m28_116  [key=0, style=solid];
m28_115 -> m28_118  [key=2, style=dotted];
m28_116 -> m28_112  [key=0, style=bold, color=blue];
m28_35 -> m28_9  [key=2, style=dotted];
m28_35 -> m28_36  [key=0, style=solid];
m28_35 -> m28_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_232 -> m28_233  [key=0, style=solid];
m28_234 -> m28_9  [key=2, style=dotted];
m28_234 -> m28_235  [key=0, style=solid];
m28_234 -> m28_238  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_235 -> m28_46  [key=2, style=dotted];
m28_235 -> m28_11  [key=2, style=dotted];
m28_235 -> m28_236  [key=0, style=solid];
m28_233 -> m28_234  [key=0, style=solid];
m28_233 -> m28_235  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_233 -> m28_237  [key=2, style=dotted];
m28_236 -> m28_232  [key=0, style=bold, color=blue];
m28_198 -> m28_199  [key=0, style=solid];
m28_200 -> m28_9  [key=2, style=dotted];
m28_200 -> m28_201  [key=0, style=solid];
m28_200 -> m28_203  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_199 -> m28_200  [key=0, style=solid];
m28_199 -> m28_194  [key=2, style=dotted];
m28_199 -> m28_201  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_201 -> m28_202  [key=0, style=solid];
m28_201 -> m28_118  [key=2, style=dotted];
m28_202 -> m28_198  [key=0, style=bold, color=blue];
m28_189 -> m28_190  [key=0, style=solid];
m28_191 -> m28_9  [key=2, style=dotted];
m28_191 -> m28_192  [key=0, style=solid];
m28_191 -> m28_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_190 -> m28_191  [key=0, style=solid];
m28_190 -> m28_194  [key=2, style=dotted];
m28_190 -> m28_192  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_192 -> m28_193  [key=0, style=solid];
m28_192 -> m28_118  [key=2, style=dotted];
m28_193 -> m28_189  [key=0, style=bold, color=blue];
m28_179 -> m28_180  [key=0, style=solid];
m28_181 -> m28_9  [key=2, style=dotted];
m28_181 -> m28_182  [key=0, style=solid];
m28_181 -> m28_185  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_182 -> m28_46  [key=2, style=dotted];
m28_182 -> m28_11  [key=2, style=dotted];
m28_182 -> m28_183  [key=0, style=solid];
m28_180 -> m28_181  [key=0, style=solid];
m28_180 -> m28_182  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_180 -> m28_184  [key=2, style=dotted];
m28_180 -> m28_81  [key=2, style=dotted];
m28_183 -> m28_179  [key=0, style=bold, color=blue];
m28_131 -> m28_132  [key=0, style=solid];
m28_133 -> m28_9  [key=2, style=dotted];
m28_133 -> m28_134  [key=0, style=solid];
m28_133 -> m28_137  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m28_132 -> m28_133  [key=0, style=solid];
m28_132 -> m28_136  [key=2, style=dotted];
m28_132 -> m28_134  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m28_134 -> m28_135  [key=0, style=solid];
m28_134 -> m28_118  [key=2, style=dotted];
m28_135 -> m28_131  [key=0, style=bold, color=blue];
m28_257 -> m28_13  [key=1, style=dashed, color=darkseagreen4, label=fakeOptions];
m28_258 -> m28_172  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m28_258 -> m28_176  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m31_87 -> m31_94  [key=0, style=solid];
m31_87 -> m31_96  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_87 -> m31_98  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_87 -> m31_99  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_87 -> m31_100  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_87 -> m31_102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_87 -> m31_103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_87 -> m31_105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_87 -> m31_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_87 -> m31_106  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_94 -> m31_95  [key=0, style=solid];
m31_94 -> m31_96  [key=0, style=solid];
m31_96 -> m31_97  [key=0, style=solid];
m31_96 -> m31_98  [key=0, style=solid];
m31_98 -> m31_99  [key=0, style=solid];
m31_98 -> m31_100  [key=0, style=solid];
m31_98 -> m31_41  [key=2, style=dotted];
m31_98 -> m31_108  [key=2, style=dotted];
m31_99 -> m31_107  [key=0, style=solid];
m31_100 -> m31_101  [key=0, style=solid];
m31_100 -> m31_109  [key=2, style=dotted];
m31_100 -> m31_104  [key=1, style=dashed, color=darkseagreen4, label=errors];
m31_102 -> m31_107  [key=0, style=solid];
m31_103 -> m31_104  [key=0, style=solid];
m31_103 -> m31_111  [key=2, style=dotted];
m31_103 -> m31_112  [key=2, style=dotted];
m31_103 -> m31_73  [key=2, style=dotted];
m31_105 -> m31_106  [key=0, style=solid];
m31_105 -> m31_114  [key=2, style=dotted];
m31_105 -> m31_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_106 -> m31_107  [key=0, style=solid];
m31_95 -> m31_107  [key=0, style=solid];
m31_95 -> m31_23  [key=2, style=dotted];
m31_97 -> m31_107  [key=0, style=solid];
m31_97 -> m31_23  [key=2, style=dotted];
m31_101 -> m31_102  [key=0, style=solid];
m31_101 -> m31_103  [key=0, style=solid];
m31_101 -> m31_110  [key=2, style=dotted];
m31_104 -> m31_105  [key=0, style=solid];
m31_104 -> m31_113  [key=2, style=dotted];
m31_107 -> m31_87  [key=0, style=bold, color=blue];
m31_0 -> m31_1  [key=0, style=solid];
m31_1 -> m31_0  [key=0, style=bold, color=blue];
m31_49 -> m31_129  [key=0, style=solid];
m31_49 -> m31_131  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_129 -> m31_130  [key=0, style=solid];
m31_129 -> m31_131  [key=0, style=solid];
m31_131 -> m31_132  [key=0, style=solid];
m31_131 -> m31_133  [key=2, style=dotted];
m31_131 -> m31_111  [key=2, style=dotted];
m31_131 -> m31_134  [key=2, style=dotted];
m31_130 -> m31_132  [key=0, style=solid];
m31_130 -> m31_23  [key=2, style=dotted];
m31_132 -> m31_49  [key=0, style=bold, color=blue];
m31_121 -> m31_181  [key=0, style=solid];
m31_181 -> m31_182  [key=0, style=solid];
m31_182 -> m31_183  [key=0, style=solid];
m31_182 -> m31_24  [key=2, style=dotted];
m31_182 -> m31_184  [key=2, style=dotted];
m31_182 -> m31_185  [key=2, style=dotted];
m31_182 -> m31_179  [key=2, style=dotted];
m31_182 -> m31_110  [key=2, style=dotted];
m31_182 -> m31_186  [key=2, style=dotted];
m31_182 -> m31_168  [key=2, style=dotted];
m31_182 -> m31_187  [key=2, style=dotted];
m31_183 -> m31_121  [key=0, style=bold, color=blue];
m31_125 -> m31_126  [key=0, style=solid];
m31_126 -> m31_127  [key=0, style=solid];
m31_126 -> m31_128  [key=2, style=dotted];
m31_127 -> m31_125  [key=0, style=bold, color=blue];
m31_346 -> m31_349  [key=0, style=solid];
m31_346 -> m31_350  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_346 -> m31_351  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_346 -> m31_353  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_346 -> m31_354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_346 -> m31_361  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_349 -> m31_350  [key=0, style=solid];
m31_349 -> m31_356  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_349 -> m31_361  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_349 -> m31_366  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_349 -> m31_367  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_350 -> m31_351  [key=0, style=solid];
m31_350 -> m31_355  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m31_350 -> m31_365  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m31_351 -> m31_352  [key=0, style=solid];
m31_351 -> m31_360  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m31_351 -> m31_365  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m31_353 -> m31_354  [key=0, style=solid];
m31_353 -> m31_355  [key=0, style=solid];
m31_354 -> m31_355  [key=0, style=solid];
m31_354 -> m31_359  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m31_354 -> m31_364  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m31_361 -> m31_362  [key=0, style=solid];
m31_361 -> m31_361  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_361 -> m31_363  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_361 -> m31_364  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_356 -> m31_357  [key=0, style=solid];
m31_356 -> m31_356  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_356 -> m31_358  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_356 -> m31_359  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_366 -> m31_367  [key=0, style=solid];
m31_366 -> m31_366  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_367 -> m31_368  [key=0, style=solid];
m31_355 -> m31_356  [key=0, style=solid];
m31_355 -> m31_360  [key=0, style=solid];
m31_365 -> m31_366  [key=0, style=solid];
m31_365 -> m31_367  [key=0, style=solid];
m31_352 -> m31_353  [key=0, style=solid];
m31_352 -> m31_359  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m31_352 -> m31_364  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m31_360 -> m31_361  [key=0, style=solid];
m31_360 -> m31_365  [key=0, style=solid];
m31_359 -> m31_360  [key=0, style=solid];
m31_359 -> m31_359  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_359 -> m31_361  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_359 -> m31_366  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_359 -> m31_367  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_364 -> m31_365  [key=0, style=solid];
m31_364 -> m31_364  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_364 -> m31_366  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_364 -> m31_367  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_357 -> m31_358  [key=0, style=solid];
m31_357 -> m31_359  [key=0, style=solid];
m31_358 -> m31_359  [key=0, style=solid];
m31_358 -> m31_358  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_362 -> m31_363  [key=0, style=solid];
m31_362 -> m31_364  [key=0, style=solid];
m31_363 -> m31_364  [key=0, style=solid];
m31_363 -> m31_363  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_368 -> m31_346  [key=0, style=bold, color=blue];
m31_244 -> m31_245  [key=0, style=solid];
m31_244 -> m31_246  [key=2, style=dotted];
m31_244 -> m31_247  [key=2, style=dotted];
m31_244 -> m31_224  [key=2, style=dotted];
m31_244 -> m31_225  [key=2, style=dotted];
m31_244 -> m31_248  [key=2, style=dotted];
m31_244 -> m31_244  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
m31_142 -> m31_244  [key=0, style=solid];
m31_245 -> m31_142  [key=0, style=bold, color=blue];
m31_109 -> m31_155  [key=0, style=solid];
m31_109 -> m31_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_109 -> m31_161  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m31_109 -> m31_173  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m31_109 -> m31_162  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
m31_155 -> m31_156  [key=0, style=solid];
m31_155 -> m31_157  [key=0, style=solid];
m31_157 -> m31_158  [key=0, style=solid];
m31_157 -> m31_41  [key=2, style=dotted];
m31_157 -> m31_161  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m31_157 -> m31_162  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m31_161 -> m31_162  [key=0, style=solid];
m31_161 -> m31_165  [key=2, style=dotted];
m31_161 -> m31_166  [key=2, style=dotted];
m31_161 -> m31_169  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_161 -> m31_172  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_162 -> m31_163  [key=0, style=solid];
m31_162 -> m31_74  [key=2, style=dotted];
m31_162 -> m31_43  [key=2, style=dotted];
m31_162 -> m31_167  [key=2, style=dotted];
m31_162 -> m31_168  [key=2, style=dotted];
m31_156 -> m31_163  [key=0, style=solid];
m31_156 -> m31_23  [key=2, style=dotted];
m31_158 -> m31_159  [key=0, style=solid];
m31_158 -> m31_160  [key=0, style=solid];
m31_158 -> m31_108  [key=2, style=dotted];
m31_159 -> m31_163  [key=0, style=solid];
m31_160 -> m31_161  [key=0, style=solid];
m31_160 -> m31_164  [key=2, style=dotted];
m31_160 -> m31_174  [key=1, style=dashed, color=darkseagreen4, label=text];
m31_160 -> m31_162  [key=1, style=dashed, color=darkseagreen4, label=text];
m31_163 -> m31_109  [key=0, style=bold, color=blue];
m31_41 -> m31_188  [key=0, style=solid];
m31_188 -> m31_189  [key=0, style=solid];
m31_188 -> m31_165  [key=2, style=dotted];
m31_188 -> m31_190  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_189 -> m31_41  [key=0, style=bold, color=blue];
m31_259 -> m31_267  [key=0, style=solid];
m31_259 -> m31_268  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_304  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_308  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_269  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_270  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m31_259 -> m31_271  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m31_259 -> m31_272  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m31_259 -> m31_273  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m31_259 -> m31_274  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m31_259 -> m31_275  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_259 -> m31_281  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_284  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_287  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_288  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_289  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_292  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_259 -> m31_293  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_267 -> m31_268  [key=0, style=solid];
m31_267 -> m31_179  [key=2, style=dotted];
m31_268 -> m31_269  [key=0, style=solid];
m31_268 -> m31_24  [key=2, style=dotted];
m31_268 -> m31_297  [key=2, style=dotted];
m31_268 -> m31_303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_268 -> m31_307  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_269 -> m31_270  [key=0, style=solid];
m31_269 -> m31_168  [key=2, style=dotted];
m31_269 -> m31_298  [key=2, style=dotted];
m31_269 -> m31_179  [key=2, style=dotted];
m31_270 -> m31_271  [key=0, style=solid];
m31_270 -> m31_272  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_270 -> m31_273  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_271 -> m31_272  [key=0, style=solid];
m31_271 -> m31_273  [key=0, style=solid];
m31_271 -> m31_42  [key=2, style=dotted];
m31_272 -> m31_273  [key=0, style=solid];
m31_272 -> m31_299  [key=2, style=dotted];
m31_272 -> m31_272  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_273 -> m31_274  [key=0, style=solid];
m31_273 -> m31_45  [key=2, style=dotted];
m31_273 -> m31_311  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_273 -> m31_312  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_273 -> m31_275  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_273 -> m31_276  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_273 -> m31_278  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_273 -> m31_291  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_273 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_274 -> m31_275  [key=0, style=solid];
m31_274 -> m31_276  [key=0, style=solid];
m31_275 -> m31_276  [key=0, style=solid];
m31_275 -> m31_300  [key=2, style=dotted];
m31_275 -> m31_275  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_275 -> m31_278  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_275 -> m31_291  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_275 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_281 -> m31_282  [key=0, style=solid];
m31_281 -> m31_287  [key=0, style=solid];
m31_284 -> m31_285  [key=0, style=solid];
m31_284 -> m31_290  [key=0, style=solid];
m31_287 -> m31_288  [key=0, style=solid];
m31_287 -> m31_291  [key=0, style=solid];
m31_288 -> m31_289  [key=0, style=solid];
m31_288 -> m31_215  [key=2, style=dotted];
m31_288 -> m31_179  [key=2, style=dotted];
m31_289 -> m31_291  [key=0, style=solid];
m31_292 -> m31_293  [key=0, style=solid];
m31_292 -> m31_302  [key=2, style=dotted];
m31_292 -> m31_186  [key=2, style=dotted];
m31_293 -> m31_276  [key=0, style=solid];
m31_293 -> m31_294  [key=0, style=solid];
m31_276 -> m31_277  [key=0, style=solid];
m31_276 -> m31_294  [key=0, style=solid];
m31_276 -> m31_110  [key=2, style=dotted];
m31_278 -> m31_279  [key=0, style=solid];
m31_278 -> m31_214  [key=2, style=dotted];
m31_278 -> m31_280  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_278 -> m31_281  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_278 -> m31_282  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_278 -> m31_283  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_278 -> m31_284  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_278 -> m31_287  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_278 -> m31_288  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_291 -> m31_292  [key=0, style=solid];
m31_291 -> m31_216  [key=2, style=dotted];
m31_291 -> m31_217  [key=2, style=dotted];
m31_291 -> m31_301  [key=2, style=dotted];
m31_291 -> m31_291  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_291 -> m31_293  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_291 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_294 -> m31_295  [key=0, style=solid];
m31_294 -> m31_179  [key=2, style=dotted];
m31_294 -> m31_186  [key=2, style=dotted];
m31_277 -> m31_278  [key=0, style=solid];
m31_277 -> m31_281  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_277 -> m31_283  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_277 -> m31_287  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_277 -> m31_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_283 -> m31_284  [key=0, style=solid];
m31_283 -> m31_283  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_283 -> m31_286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_283 -> m31_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_279 -> m31_280  [key=0, style=solid];
m31_279 -> m31_281  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_279 -> m31_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_279 -> m31_283  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_279 -> m31_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_279 -> m31_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_279 -> m31_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_279 -> m31_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_280 -> m31_281  [key=0, style=solid];
m31_280 -> m31_291  [key=0, style=solid];
m31_282 -> m31_283  [key=0, style=solid];
m31_282 -> m31_179  [key=2, style=dotted];
m31_290 -> m31_280  [key=0, style=solid];
m31_290 -> m31_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_286 -> m31_290  [key=0, style=solid];
m31_286 -> m31_286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_286 -> m31_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_285 -> m31_286  [key=0, style=solid];
m31_285 -> m31_179  [key=2, style=dotted];
m31_295 -> m31_296  [key=0, style=solid];
m31_296 -> m31_259  [key=0, style=bold, color=blue];
m31_263 -> m31_225  [key=0, style=bold, color=blue];
m31_225 -> m31_262  [key=0, style=solid];
m31_262 -> m31_263  [key=0, style=solid];
m31_262 -> m31_43  [key=2, style=dotted];
m31_262 -> m31_247  [key=2, style=dotted];
m31_342 -> m31_343  [key=0, style=solid];
m31_342 -> m31_344  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_51 -> m31_52  [key=0, style=solid];
m31_51 -> m31_53  [key=2, style=dotted];
m31_55 -> m31_56  [key=0, style=solid];
m31_55 -> m31_53  [key=2, style=dotted];
m31_50 -> m31_51  [key=0, style=solid];
m31_54 -> m31_55  [key=0, style=solid];
m31_57 -> m31_58  [key=0, style=solid];
m31_52 -> m31_50  [key=0, style=bold, color=blue];
m31_56 -> m31_54  [key=0, style=bold, color=blue];
m31_58 -> m31_59  [key=0, style=solid];
m31_59 -> m31_57  [key=0, style=bold, color=blue];
m31_85 -> m31_86  [key=0, style=solid];
m31_85 -> m31_87  [key=2, style=dotted];
m31_92 -> m31_93  [key=0, style=solid];
m31_92 -> m31_87  [key=2, style=dotted];
m31_78 -> m31_79  [key=0, style=solid];
m31_81 -> m31_82  [key=0, style=solid];
m31_89 -> m31_90  [key=0, style=solid];
m31_89 -> m31_87  [key=2, style=dotted];
m31_88 -> m31_89  [key=0, style=solid];
m31_91 -> m31_92  [key=0, style=solid];
m31_84 -> m31_85  [key=0, style=solid];
m31_79 -> m31_80  [key=0, style=solid];
m31_80 -> m31_78  [key=0, style=bold, color=blue];
m31_82 -> m31_83  [key=0, style=solid];
m31_83 -> m31_81  [key=0, style=bold, color=blue];
m31_86 -> m31_84  [key=0, style=bold, color=blue];
m31_90 -> m31_88  [key=0, style=bold, color=blue];
m31_93 -> m31_91  [key=0, style=bold, color=blue];
m31_116 -> m31_117  [key=0, style=solid];
m31_116 -> m31_73  [key=2, style=dotted];
m31_115 -> m31_116  [key=0, style=solid];
m31_117 -> m31_115  [key=0, style=bold, color=blue];
m31_173 -> m31_174  [key=0, style=solid];
m31_173 -> m31_176  [key=2, style=dotted];
m31_173 -> m31_177  [key=2, style=dotted];
m31_173 -> m31_178  [key=2, style=dotted];
m31_173 -> m31_179  [key=2, style=dotted];
m31_174 -> m31_175  [key=0, style=solid];
m31_174 -> m31_168  [key=2, style=dotted];
m31_174 -> m31_180  [key=2, style=dotted];
m31_169 -> m31_170  [key=0, style=solid];
m31_172 -> m31_173  [key=0, style=solid];
m31_170 -> m31_171  [key=0, style=solid];
m31_171 -> m31_169  [key=0, style=bold, color=blue];
m31_175 -> m31_172  [key=0, style=bold, color=blue];
m31_190 -> m31_191  [key=0, style=solid];
m31_191 -> m31_192  [key=0, style=solid];
m31_192 -> m31_190  [key=0, style=bold, color=blue];
m31_228 -> m31_229  [key=0, style=solid];
m31_229 -> m31_230  [key=0, style=solid];
m31_230 -> m31_228  [key=0, style=bold, color=blue];
m31_236 -> m31_237  [key=0, style=solid];
m31_236 -> m31_238  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
m31_237 -> m31_238  [key=0, style=solid];
m31_237 -> m31_239  [key=1, style=dashed, color=darkseagreen4, label=prop];
m31_238 -> m31_239  [key=0, style=solid];
m31_238 -> m31_240  [key=1, style=dashed, color=darkseagreen4, label=attr];
m31_239 -> m31_240  [key=0, style=solid];
m31_239 -> m31_242  [key=2, style=dotted];
m31_240 -> m31_241  [key=0, style=solid];
m31_240 -> m31_243  [key=2, style=dotted];
m31_241 -> m31_236  [key=0, style=bold, color=blue];
m31_257 -> m31_258  [key=0, style=solid];
m31_257 -> m31_259  [key=2, style=dotted];
m31_256 -> m31_257  [key=0, style=solid];
m31_258 -> m31_256  [key=0, style=bold, color=blue];
m31_304 -> m31_305  [key=0, style=solid];
m31_304 -> m31_306  [key=2, style=dotted];
m31_304 -> m31_179  [key=2, style=dotted];
m31_308 -> m31_309  [key=0, style=solid];
m31_308 -> m31_310  [key=2, style=dotted];
m31_308 -> m31_179  [key=2, style=dotted];
m31_303 -> m31_304  [key=0, style=solid];
m31_307 -> m31_308  [key=0, style=solid];
m31_311 -> m31_312  [key=0, style=solid];
m31_312 -> m31_313  [key=0, style=solid];
m31_312 -> m31_314  [key=2, style=dotted];
m31_312 -> m31_312  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_305 -> m31_303  [key=0, style=bold, color=blue];
m31_309 -> m31_307  [key=0, style=bold, color=blue];
m31_313 -> m31_311  [key=0, style=bold, color=blue];
m31_319 -> m31_320  [key=0, style=solid];
m31_319 -> m31_321  [key=2, style=dotted];
m31_319 -> m31_322  [key=2, style=dotted];
m31_319 -> m31_323  [key=2, style=dotted];
m31_319 -> m31_186  [key=2, style=dotted];
m31_325 -> m31_326  [key=0, style=solid];
m31_325 -> m31_186  [key=2, style=dotted];
m31_325 -> m31_322  [key=2, style=dotted];
m31_325 -> m31_323  [key=2, style=dotted];
m31_318 -> m31_319  [key=0, style=solid];
m31_324 -> m31_325  [key=0, style=solid];
m31_320 -> m31_318  [key=0, style=bold, color=blue];
m31_326 -> m31_324  [key=0, style=bold, color=blue];
m31_330 -> m31_331  [key=0, style=solid];
m31_330 -> m31_332  [key=2, style=dotted];
m31_334 -> m31_335  [key=0, style=solid];
m31_334 -> m31_322  [key=2, style=dotted];
m31_329 -> m31_330  [key=0, style=solid];
m31_333 -> m31_334  [key=0, style=solid];
m31_331 -> m31_329  [key=0, style=bold, color=blue];
m31_335 -> m31_333  [key=0, style=bold, color=blue];
m31_343 -> m31_344  [key=0, style=solid];
m31_343 -> m31_346  [key=2, style=dotted];
m31_343 -> m31_347  [key=2, style=dotted];
m31_344 -> m31_345  [key=0, style=solid];
m31_344 -> m31_348  [key=2, style=dotted];
m31_345 -> m31_342  [key=0, style=bold, color=blue];
m31_306 -> m31_315  [key=0, style=solid];
m31_306 -> m31_319  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_306 -> m31_325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_315 -> m31_316  [key=0, style=solid];
m31_315 -> m31_24  [key=2, style=dotted];
m31_315 -> m31_317  [key=2, style=dotted];
m31_315 -> m31_168  [key=2, style=dotted];
m31_315 -> m31_318  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_315 -> m31_324  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_316 -> m31_306  [key=0, style=bold, color=blue];
m31_4 -> m31_5  [key=0, style=solid];
m31_5 -> m31_4  [key=0, style=bold, color=blue];
m31_25 -> m31_26  [key=0, style=solid];
m31_25 -> m31_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_25 -> m31_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_25 -> m31_31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
m31_25 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_25 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_25 -> m31_37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_26 -> m31_27  [key=0, style=solid];
m31_26 -> m31_0  [key=2, style=dotted];
m31_26 -> m31_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_32  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_51  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_33  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_55  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_35  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_37  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_26 -> m31_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_28 -> m31_29  [key=0, style=solid];
m31_28 -> m31_32  [key=0, style=solid];
m31_29 -> m31_30  [key=0, style=solid];
m31_29 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label=errors];
m31_31 -> m31_32  [key=0, style=solid];
m31_31 -> m31_43  [key=2, style=dotted];
m31_31 -> m31_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_31 -> m31_51  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_31 -> m31_33  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_31 -> m31_55  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_31 -> m31_35  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_31 -> m31_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_31 -> m31_37  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_31 -> m31_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_34 -> m31_35  [key=0, style=solid];
m31_34 -> m31_37  [key=0, style=solid];
m31_34 -> m31_42  [key=2, style=dotted];
m31_34 -> m31_46  [key=2, style=dotted];
m31_34 -> m31_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_36 -> m31_38  [key=0, style=solid];
m31_36 -> m31_47  [key=2, style=dotted];
m31_36 -> m31_48  [key=2, style=dotted];
m31_37 -> m31_38  [key=0, style=solid];
m31_37 -> m31_49  [key=2, style=dotted];
m31_27 -> m31_28  [key=0, style=solid];
m31_27 -> m31_40  [key=2, style=dotted];
m31_27 -> m31_34  [key=1, style=dashed, color=darkseagreen4, label=errors];
m31_32 -> m31_33  [key=0, style=solid];
m31_32 -> m31_44  [key=2, style=dotted];
m31_32 -> m31_45  [key=2, style=dotted];
m31_32 -> m31_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_33 -> m31_34  [key=0, style=solid];
m31_33 -> m31_44  [key=2, style=dotted];
m31_33 -> m31_45  [key=2, style=dotted];
m31_33 -> m31_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_35 -> m31_36  [key=0, style=solid];
m31_38 -> m31_39  [key=0, style=solid];
m31_30 -> m31_31  [key=0, style=solid];
m31_30 -> m31_32  [key=0, style=solid];
m31_30 -> m31_41  [key=2, style=dotted];
m31_30 -> m31_42  [key=2, style=dotted];
m31_39 -> m31_25  [key=0, style=bold, color=blue];
m31_60 -> m31_61  [key=0, style=solid];
m31_60 -> m31_63  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_60 -> m31_67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_60 -> m31_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_60 -> m31_70  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_60 -> m31_92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_61 -> m31_62  [key=0, style=solid];
m31_61 -> m31_63  [key=0, style=solid];
m31_63 -> m31_64  [key=0, style=solid];
m31_63 -> m31_66  [key=1, style=dashed, color=darkseagreen4, label=errors];
m31_63 -> m31_68  [key=1, style=dashed, color=darkseagreen4, label=errors];
m31_67 -> m31_71  [key=0, style=solid];
m31_67 -> m31_25  [key=2, style=dotted];
m31_67 -> m31_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_70 -> m31_71  [key=0, style=solid];
m31_70 -> m31_25  [key=2, style=dotted];
m31_70 -> m31_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_70 -> m31_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_62 -> m31_71  [key=0, style=solid];
m31_62 -> m31_72  [key=2, style=dotted];
m31_64 -> m31_65  [key=0, style=solid];
m31_64 -> m31_66  [key=0, style=solid];
m31_64 -> m31_46  [key=2, style=dotted];
m31_64 -> m31_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_66 -> m31_67  [key=0, style=solid];
m31_66 -> m31_68  [key=0, style=solid];
m31_66 -> m31_46  [key=2, style=dotted];
m31_66 -> m31_81  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_68 -> m31_69  [key=0, style=solid];
m31_68 -> m31_74  [key=2, style=dotted];
m31_68 -> m31_75  [key=2, style=dotted];
m31_68 -> m31_70  [key=1, style=dashed, color=darkseagreen4, label=err];
m31_65 -> m31_71  [key=0, style=solid];
m31_65 -> m31_4  [key=2, style=dotted];
m31_65 -> m31_73  [key=2, style=dotted];
m31_69 -> m31_70  [key=0, style=solid];
m31_69 -> m31_76  [key=2, style=dotted];
m31_69 -> m31_77  [key=2, style=dotted];
m31_69 -> m31_40  [key=2, style=dotted];
m31_69 -> m31_89  [key=1, style=dashed, color=darkseagreen4, label=pr];
m31_71 -> m31_60  [key=0, style=bold, color=blue];
m31_48 -> m31_135  [key=0, style=solid];
m31_48 -> m31_137  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m31_48 -> m31_139  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m31_135 -> m31_136  [key=0, style=solid];
m31_135 -> m31_137  [key=0, style=solid];
m31_137 -> m31_138  [key=0, style=solid];
m31_137 -> m31_139  [key=0, style=solid];
m31_139 -> m31_140  [key=0, style=solid];
m31_139 -> m31_142  [key=2, style=dotted];
m31_139 -> m31_111  [key=2, style=dotted];
m31_139 -> m31_134  [key=2, style=dotted];
m31_136 -> m31_140  [key=0, style=solid];
m31_136 -> m31_23  [key=2, style=dotted];
m31_138 -> m31_140  [key=0, style=solid];
m31_138 -> m31_141  [key=2, style=dotted];
m31_140 -> m31_48  [key=0, style=bold, color=blue];
m31_231 -> m31_232  [key=0, style=solid];
m31_232 -> m31_233  [key=0, style=solid];
m31_232 -> m31_234  [key=2, style=dotted];
m31_232 -> m31_235  [key=2, style=dotted];
m31_232 -> m31_236  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_233 -> m31_231  [key=0, style=bold, color=blue];
m31_8 -> m31_9  [key=0, style=solid];
m31_9 -> m31_8  [key=0, style=bold, color=blue];
m31_134 -> m31_249  [key=0, style=solid];
m31_134 -> m31_251  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_134 -> m31_252  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m31_134 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_249 -> m31_250  [key=0, style=solid];
m31_249 -> m31_255  [key=2, style=dotted];
m31_249 -> m31_251  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m31_249 -> m31_252  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m31_249 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m31_251 -> m31_252  [key=0, style=solid];
m31_251 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m31_252 -> m31_253  [key=0, style=solid];
m31_252 -> m31_114  [key=2, style=dotted];
m31_252 -> m31_256  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_250 -> m31_251  [key=0, style=solid];
m31_250 -> m31_24  [key=2, style=dotted];
m31_253 -> m31_254  [key=0, style=solid];
m31_254 -> m31_134  [key=0, style=bold, color=blue];
m31_118 -> m31_119  [key=0, style=solid];
m31_119 -> m31_120  [key=0, style=solid];
m31_119 -> m31_121  [key=2, style=dotted];
m31_120 -> m31_118  [key=0, style=bold, color=blue];
m31_124 -> m31_264  [key=0, style=solid];
m31_264 -> m31_265  [key=0, style=solid];
m31_264 -> m31_193  [key=2, style=dotted];
m31_265 -> m31_266  [key=0, style=solid];
m31_266 -> m31_124  [key=0, style=bold, color=blue];
m31_128 -> m31_336  [key=0, style=solid];
m31_336 -> m31_337  [key=0, style=solid];
m31_336 -> m31_193  [key=2, style=dotted];
m31_337 -> m31_338  [key=0, style=solid];
m31_338 -> m31_128  [key=0, style=bold, color=blue];
m31_2 -> m31_3  [key=0, style=solid];
m31_3 -> m31_2  [key=0, style=bold, color=blue];
m31_219 -> m31_220  [key=0, style=solid];
m31_219 -> m31_74  [key=2, style=dotted];
m31_219 -> m31_224  [key=2, style=dotted];
m31_219 -> m31_225  [key=2, style=dotted];
m31_219 -> m31_226  [key=2, style=dotted];
m31_219 -> m31_221  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m31_133 -> m31_218  [key=0, style=solid];
m31_218 -> m31_219  [key=0, style=solid];
m31_218 -> m31_223  [key=2, style=dotted];
m31_218 -> m31_220  [key=1, style=dashed, color=darkseagreen4, label=specs];
m31_220 -> m31_221  [key=0, style=solid];
m31_220 -> m31_74  [key=2, style=dotted];
m31_220 -> m31_227  [key=2, style=dotted];
m31_220 -> m31_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_221 -> m31_222  [key=0, style=solid];
m31_221 -> m31_40  [key=2, style=dotted];
m31_221 -> m31_226  [key=2, style=dotted];
m31_222 -> m31_133  [key=0, style=bold, color=blue];
m31_193 -> m31_194  [key=0, style=solid];
m31_193 -> m31_196  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_193 -> m31_199  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_193 -> m31_200  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m31_193 -> m31_202  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_193 -> m31_203  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m31_193 -> m31_205  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_193 -> m31_206  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m31_193 -> m31_207  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_193 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_193 -> m31_210  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m31_193 -> m31_211  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_193 -> m31_212  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m31_194 -> m31_195  [key=0, style=solid];
m31_194 -> m31_186  [key=2, style=dotted];
m31_196 -> m31_197  [key=0, style=solid];
m31_196 -> m31_214  [key=2, style=dotted];
m31_196 -> m31_198  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_196 -> m31_199  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_196 -> m31_200  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_196 -> m31_201  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_196 -> m31_202  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_196 -> m31_205  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_196 -> m31_206  [key=1, style=dashed, color=darkseagreen4, label=words];
m31_199 -> m31_200  [key=0, style=solid];
m31_199 -> m31_205  [key=0, style=solid];
m31_200 -> m31_201  [key=0, style=solid];
m31_200 -> m31_179  [key=2, style=dotted];
m31_202 -> m31_203  [key=0, style=solid];
m31_202 -> m31_208  [key=0, style=solid];
m31_203 -> m31_204  [key=0, style=solid];
m31_203 -> m31_179  [key=2, style=dotted];
m31_205 -> m31_206  [key=0, style=solid];
m31_205 -> m31_209  [key=0, style=solid];
m31_206 -> m31_207  [key=0, style=solid];
m31_206 -> m31_215  [key=2, style=dotted];
m31_206 -> m31_179  [key=2, style=dotted];
m31_207 -> m31_209  [key=0, style=solid];
m31_209 -> m31_210  [key=0, style=solid];
m31_209 -> m31_216  [key=2, style=dotted];
m31_209 -> m31_217  [key=2, style=dotted];
m31_209 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_209 -> m31_211  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_209 -> m31_212  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_210 -> m31_211  [key=0, style=solid];
m31_210 -> m31_186  [key=2, style=dotted];
m31_211 -> m31_194  [key=0, style=solid];
m31_211 -> m31_212  [key=0, style=solid];
m31_212 -> m31_213  [key=0, style=solid];
m31_212 -> m31_179  [key=2, style=dotted];
m31_195 -> m31_196  [key=0, style=solid];
m31_195 -> m31_199  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_195 -> m31_201  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_195 -> m31_205  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_195 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_201 -> m31_202  [key=0, style=solid];
m31_201 -> m31_201  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_201 -> m31_204  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_201 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_197 -> m31_198  [key=0, style=solid];
m31_197 -> m31_199  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_197 -> m31_200  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_197 -> m31_201  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_197 -> m31_202  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_197 -> m31_205  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_197 -> m31_206  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_197 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_198 -> m31_199  [key=0, style=solid];
m31_198 -> m31_209  [key=0, style=solid];
m31_208 -> m31_198  [key=0, style=solid];
m31_208 -> m31_208  [key=1, style=dashed, color=darkseagreen4, label=i];
m31_204 -> m31_208  [key=0, style=solid];
m31_204 -> m31_204  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_204 -> m31_209  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m31_213 -> m31_193  [key=0, style=bold, color=blue];
m31_10 -> m31_11  [key=0, style=solid];
m31_10 -> m31_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_10 -> m31_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_10 -> m31_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.SentenceBuilder"];
m31_10 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_10 -> m31_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_11 -> m31_12  [key=0, style=solid];
m31_11 -> m31_13  [key=0, style=solid];
m31_13 -> m31_14  [key=0, style=solid];
m31_13 -> m31_15  [key=0, style=solid];
m31_15 -> m31_16  [key=0, style=solid];
m31_15 -> m31_17  [key=0, style=solid];
m31_19 -> m31_20  [key=0, style=solid];
m31_20 -> m31_21  [key=0, style=solid];
m31_21 -> m31_22  [key=0, style=solid];
m31_12 -> m31_22  [key=0, style=solid];
m31_12 -> m31_23  [key=2, style=dotted];
m31_14 -> m31_22  [key=0, style=solid];
m31_14 -> m31_23  [key=2, style=dotted];
m31_16 -> m31_22  [key=0, style=solid];
m31_16 -> m31_23  [key=2, style=dotted];
m31_17 -> m31_18  [key=0, style=solid];
m31_17 -> m31_24  [key=2, style=dotted];
m31_18 -> m31_19  [key=0, style=solid];
m31_18 -> m31_24  [key=2, style=dotted];
m31_22 -> m31_10  [key=0, style=bold, color=blue];
m31_310 -> m31_327  [key=0, style=solid];
m31_310 -> m31_330  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_310 -> m31_334  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_327 -> m31_328  [key=0, style=solid];
m31_327 -> m31_24  [key=2, style=dotted];
m31_327 -> m31_297  [key=2, style=dotted];
m31_327 -> m31_323  [key=2, style=dotted];
m31_327 -> m31_168  [key=2, style=dotted];
m31_327 -> m31_329  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_327 -> m31_333  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_328 -> m31_310  [key=0, style=bold, color=blue];
m31_255 -> m31_339  [key=0, style=solid];
m31_339 -> m31_340  [key=0, style=solid];
m31_339 -> m31_341  [key=2, style=dotted];
m31_339 -> m31_342  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m31_340 -> m31_255  [key=0, style=bold, color=blue];
m31_261 -> m31_224  [key=0, style=bold, color=blue];
m31_224 -> m31_260  [key=0, style=solid];
m31_260 -> m31_261  [key=0, style=solid];
m31_260 -> m31_43  [key=2, style=dotted];
m31_260 -> m31_247  [key=2, style=dotted];
m31_143 -> m31_144  [key=0, style=solid];
m31_143 -> m31_146  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_144 -> m31_145  [key=0, style=solid];
m31_144 -> m31_146  [key=0, style=solid];
m31_146 -> m31_147  [key=0, style=solid];
m31_146 -> m31_133  [key=2, style=dotted];
m31_146 -> m31_111  [key=2, style=dotted];
m31_146 -> m31_134  [key=2, style=dotted];
m31_145 -> m31_147  [key=0, style=solid];
m31_145 -> m31_23  [key=2, style=dotted];
m31_147 -> m31_143  [key=0, style=bold, color=blue];
m31_347 -> m31_369  [key=0, style=solid];
m31_347 -> m31_370  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_347 -> m31_372  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_347 -> m31_373  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_347 -> m31_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_347 -> m31_376  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_369 -> m31_370  [key=0, style=solid];
m31_369 -> m31_375  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_369 -> m31_376  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_370 -> m31_371  [key=0, style=solid];
m31_370 -> m31_374  [key=1, style=dashed, color=darkseagreen4, label=hasMeta];
m31_372 -> m31_373  [key=0, style=solid];
m31_372 -> m31_374  [key=0, style=solid];
m31_373 -> m31_374  [key=0, style=solid];
m31_373 -> m31_377  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m31_375 -> m31_377  [key=0, style=solid];
m31_375 -> m31_380  [key=2, style=dotted];
m31_375 -> m31_375  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_376 -> m31_377  [key=0, style=solid];
m31_376 -> m31_380  [key=2, style=dotted];
m31_376 -> m31_376  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_371 -> m31_372  [key=0, style=solid];
m31_371 -> m31_377  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m31_374 -> m31_375  [key=0, style=solid];
m31_374 -> m31_376  [key=0, style=solid];
m31_377 -> m31_378  [key=0, style=solid];
m31_377 -> m31_377  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m31_378 -> m31_379  [key=0, style=solid];
m31_379 -> m31_347  [key=0, style=bold, color=blue];
m31_73 -> m31_122  [key=0, style=solid];
m31_122 -> m31_123  [key=0, style=solid];
m31_122 -> m31_124  [key=2, style=dotted];
m31_123 -> m31_73  [key=0, style=bold, color=blue];
m31_148 -> m31_149  [key=0, style=solid];
m31_148 -> m31_151  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m31_148 -> m31_153  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_149 -> m31_150  [key=0, style=solid];
m31_149 -> m31_151  [key=0, style=solid];
m31_151 -> m31_152  [key=0, style=solid];
m31_151 -> m31_153  [key=0, style=solid];
m31_153 -> m31_154  [key=0, style=solid];
m31_153 -> m31_142  [key=2, style=dotted];
m31_153 -> m31_111  [key=2, style=dotted];
m31_153 -> m31_134  [key=2, style=dotted];
m31_150 -> m31_154  [key=0, style=solid];
m31_150 -> m31_23  [key=2, style=dotted];
m31_152 -> m31_154  [key=0, style=solid];
m31_152 -> m31_141  [key=2, style=dotted];
m31_154 -> m31_148  [key=0, style=bold, color=blue];
m31_6 -> m31_7  [key=0, style=solid];
m31_7 -> m31_6  [key=0, style=bold, color=blue];
m31_381 -> m31_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_126  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_131  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_139  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_146  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_153  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_182  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_219  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_244  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_249  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_250  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_252  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_253  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_260  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_262  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_264  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_265  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_267  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_268  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_304  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_308  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_269  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_271  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_282  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_285  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_288  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_292  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_294  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_295  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_315  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_319  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_336  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_337  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_339  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_343  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_357  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_381 -> m31_362  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_382 -> m31_51  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_382 -> m31_55  [key=1, style=dashed, color=darkseagreen4, label=auto];
m31_383 -> m31_85  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_383 -> m31_92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m31_384 -> m31_89  [key=1, style=dashed, color=darkseagreen4, label=pr];
m31_385 -> m31_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m31_386 -> m31_173  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m31_387 -> m31_173  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_388 -> m31_174  [key=1, style=dashed, color=darkseagreen4, label=text];
m31_389 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label=string];
m31_390 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m31_391 -> m31_257  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m31_392 -> m31_304  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_392 -> m31_308  [key=1, style=dashed, color=darkseagreen4, label=int];
m31_393 -> m31_304  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m31_393 -> m31_308  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m31_394 -> m31_312  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m31_395 -> m31_319  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_395 -> m31_325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m31_396 -> m31_330  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m31_396 -> m31_334  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m33_0 -> m33_1  [key=0, style=solid];
m33_0 -> m33_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m33_1 -> m33_2  [key=0, style=solid];
m33_1 -> m33_3  [key=0, style=solid];
m33_3 -> m33_4  [key=0, style=solid];
m33_3 -> m33_6  [key=2, style=dotted];
m33_2 -> m33_4  [key=0, style=solid];
m33_2 -> m33_5  [key=2, style=dotted];
m33_4 -> m33_0  [key=0, style=bold, color=blue];
m34_0 -> m34_1  [key=0, style=solid];
m34_1 -> m34_2  [key=0, style=solid];
m34_1 -> m34_3  [key=2, style=dotted];
m34_1 -> m34_4  [key=2, style=dotted];
m34_1 -> m34_1  [key=1, style=dashed, color=darkseagreen4, label=t];
m34_1 -> m34_5  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m34_1 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label=t];
m34_2 -> m34_0  [key=0, style=bold, color=blue];
m34_5 -> m34_6  [key=0, style=solid];
m34_6 -> m34_7  [key=0, style=solid];
m34_6 -> m34_8  [key=2, style=dotted];
m34_7 -> m34_5  [key=0, style=bold, color=blue];
m34_9 -> m34_6  [key=1, style=dashed, color=darkseagreen4, label=t];
m35_0 -> m35_1  [key=0, style=solid];
m35_1 -> m35_2  [key=0, style=solid];
m35_1 -> m35_6  [key=2, style=dotted];
m35_1 -> m35_4  [key=1, style=dashed, color=darkseagreen4, label=expected];
m35_2 -> m35_3  [key=0, style=solid];
m35_2 -> m35_7  [key=2, style=dotted];
m35_2 -> m35_8  [key=2, style=dotted];
m35_4 -> m35_5  [key=0, style=solid];
m35_4 -> m35_10  [key=2, style=dotted];
m35_3 -> m35_4  [key=0, style=solid];
m35_3 -> m35_9  [key=2, style=dotted];
m35_5 -> m35_0  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_0  [key=0, style=bold, color=blue];
m37_15 -> m37_16  [key=0, style=solid];
m37_16 -> m37_15  [key=0, style=bold, color=blue];
m37_21 -> m37_22  [key=0, style=solid];
m37_22 -> m37_21  [key=0, style=bold, color=blue];
m37_19 -> m37_20  [key=0, style=solid];
m37_20 -> m37_19  [key=0, style=bold, color=blue];
m37_0 -> m37_1  [key=0, style=solid];
m37_0 -> m37_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_0 -> m37_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_0 -> m37_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m37_1 -> m37_2  [key=0, style=solid];
m37_1 -> m37_3  [key=0, style=solid];
m37_3 -> m37_4  [key=0, style=solid];
m37_3 -> m37_5  [key=0, style=solid];
m37_5 -> m37_6  [key=0, style=solid];
m37_6 -> m37_7  [key=0, style=solid];
m37_2 -> m37_13  [key=0, style=solid];
m37_2 -> m37_14  [key=2, style=dotted];
m37_4 -> m37_13  [key=0, style=solid];
m37_4 -> m37_14  [key=2, style=dotted];
m37_7 -> m37_8  [key=0, style=solid];
m37_8 -> m37_9  [key=0, style=solid];
m37_9 -> m37_10  [key=0, style=solid];
m37_10 -> m37_11  [key=0, style=solid];
m37_11 -> m37_12  [key=0, style=solid];
m37_12 -> m37_13  [key=0, style=solid];
m37_13 -> m37_0  [key=0, style=bold, color=blue];
m37_17 -> m37_18  [key=0, style=solid];
m37_18 -> m37_17  [key=0, style=bold, color=blue];
m37_23 -> m37_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m37_23 -> m37_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m37_23 -> m37_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m37_23 -> m37_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m37_23 -> m37_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m37_23 -> m37_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m37_23 -> m37_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m37_23 -> m37_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m38_88 -> m38_89  [key=0, style=solid];
m38_89 -> m38_90  [key=0, style=solid];
m38_89 -> m38_77  [key=2, style=dotted];
m38_89 -> m38_18  [key=2, style=dotted];
m38_89 -> m38_91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_90 -> m38_88  [key=0, style=bold, color=blue];
m38_51 -> m38_52  [key=0, style=solid];
m38_51 -> m38_53  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m38_51 -> m38_55  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_51 -> m38_57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m38_51 -> m38_59  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_52 -> m38_53  [key=0, style=solid];
m38_52 -> m38_16  [key=2, style=dotted];
m38_52 -> m38_55  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_52 -> m38_61  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_52 -> m38_62  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_52 -> m38_63  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_53 -> m38_54  [key=0, style=solid];
m38_53 -> m38_56  [key=0, style=solid];
m38_55 -> m38_63  [key=0, style=solid];
m38_55 -> m38_65  [key=2, style=dotted];
m38_55 -> m38_66  [key=2, style=dotted];
m38_57 -> m38_58  [key=0, style=solid];
m38_57 -> m38_67  [key=2, style=dotted];
m38_57 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m38_57 -> m38_61  [key=1, style=dashed, color=darkseagreen4, label=sep];
m38_59 -> m38_60  [key=0, style=solid];
m38_59 -> m38_68  [key=2, style=dotted];
m38_59 -> m38_61  [key=1, style=dashed, color=darkseagreen4, label=e];
m38_61 -> m38_60  [key=0, style=solid];
m38_61 -> m38_70  [key=2, style=dotted];
m38_61 -> m38_66  [key=2, style=dotted];
m38_61 -> m38_31  [key=2, style=dotted];
m38_62 -> m38_63  [key=0, style=solid];
m38_62 -> m38_24  [key=2, style=dotted];
m38_63 -> m38_64  [key=0, style=solid];
m38_63 -> m38_25  [key=2, style=dotted];
m38_54 -> m38_55  [key=0, style=solid];
m38_56 -> m38_57  [key=0, style=solid];
m38_58 -> m38_59  [key=0, style=solid];
m38_58 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_58 -> m38_61  [key=1, style=dashed, color=darkseagreen4, label=fmtWithQuotesIfStr];
m38_60 -> m38_61  [key=0, style=solid];
m38_60 -> m38_62  [key=0, style=solid];
m38_60 -> m38_69  [key=2, style=dotted];
m38_64 -> m38_51  [key=0, style=bold, color=blue];
m38_102 -> m38_103  [key=0, style=solid];
m38_102 -> m38_105  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_102 -> m38_107  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_102 -> m38_109  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_103 -> m38_104  [key=0, style=solid];
m38_103 -> m38_105  [key=0, style=solid];
m38_105 -> m38_106  [key=0, style=solid];
m38_105 -> m38_107  [key=0, style=solid];
m38_105 -> m38_15  [key=2, style=dotted];
m38_105 -> m38_113  [key=2, style=dotted];
m38_105 -> m38_114  [key=2, style=dotted];
m38_107 -> m38_108  [key=0, style=solid];
m38_107 -> m38_109  [key=0, style=solid];
m38_109 -> m38_110  [key=0, style=solid];
m38_109 -> m38_111  [key=0, style=solid];
m38_109 -> m38_68  [key=2, style=dotted];
m38_109 -> m38_69  [key=2, style=dotted];
m38_104 -> m38_112  [key=0, style=solid];
m38_106 -> m38_112  [key=0, style=solid];
m38_108 -> m38_112  [key=0, style=solid];
m38_110 -> m38_112  [key=0, style=solid];
m38_111 -> m38_112  [key=0, style=solid];
m38_112 -> m38_102  [key=0, style=bold, color=blue];
m38_94 -> m38_95  [key=0, style=solid];
m38_95 -> m38_96  [key=0, style=solid];
m38_95 -> m38_16  [key=2, style=dotted];
m38_95 -> m38_97  [key=2, style=dotted];
m38_95 -> m38_30  [key=2, style=dotted];
m38_95 -> m38_31  [key=2, style=dotted];
m38_95 -> m38_51  [key=2, style=dotted];
m38_95 -> m38_98  [key=2, style=dotted];
m38_95 -> m38_25  [key=2, style=dotted];
m38_96 -> m38_94  [key=0, style=bold, color=blue];
m38_91 -> m38_92  [key=0, style=solid];
m38_33 -> m38_34  [key=0, style=solid];
m38_33 -> m38_35  [key=2, style=dotted];
m38_33 -> m38_36  [key=2, style=dotted];
m38_28 -> m38_29  [key=0, style=solid];
m38_28 -> m38_30  [key=2, style=dotted];
m38_28 -> m38_31  [key=2, style=dotted];
m38_44 -> m38_45  [key=0, style=solid];
m38_44 -> m38_46  [key=2, style=dotted];
m38_44 -> m38_30  [key=2, style=dotted];
m38_44 -> m38_31  [key=2, style=dotted];
m38_48 -> m38_49  [key=0, style=solid];
m38_48 -> m38_50  [key=2, style=dotted];
m38_48 -> m38_30  [key=2, style=dotted];
m38_48 -> m38_31  [key=2, style=dotted];
m38_27 -> m38_28  [key=0, style=solid];
m38_32 -> m38_33  [key=0, style=solid];
m38_37 -> m38_38  [key=0, style=solid];
m38_40 -> m38_41  [key=0, style=solid];
m38_43 -> m38_44  [key=0, style=solid];
m38_47 -> m38_48  [key=0, style=solid];
m38_29 -> m38_27  [key=0, style=bold, color=blue];
m38_34 -> m38_32  [key=0, style=bold, color=blue];
m38_38 -> m38_39  [key=0, style=solid];
m38_39 -> m38_37  [key=0, style=bold, color=blue];
m38_41 -> m38_42  [key=0, style=solid];
m38_42 -> m38_40  [key=0, style=bold, color=blue];
m38_45 -> m38_43  [key=0, style=bold, color=blue];
m38_49 -> m38_47  [key=0, style=bold, color=blue];
m38_72 -> m38_73  [key=0, style=solid];
m38_72 -> m38_65  [key=2, style=dotted];
m38_71 -> m38_72  [key=0, style=solid];
m38_73 -> m38_71  [key=0, style=bold, color=blue];
m38_79 -> m38_80  [key=0, style=solid];
m38_79 -> m38_81  [key=2, style=dotted];
m38_79 -> m38_82  [key=2, style=dotted];
m38_84 -> m38_85  [key=0, style=solid];
m38_84 -> m38_86  [key=2, style=dotted];
m38_84 -> m38_81  [key=2, style=dotted];
m38_84 -> m38_70  [key=2, style=dotted];
m38_84 -> m38_87  [key=2, style=dotted];
m38_83 -> m38_84  [key=0, style=solid];
m38_78 -> m38_79  [key=0, style=solid];
m38_80 -> m38_78  [key=0, style=bold, color=blue];
m38_85 -> m38_83  [key=0, style=bold, color=blue];
m38_92 -> m38_93  [key=0, style=solid];
m38_93 -> m38_91  [key=0, style=bold, color=blue];
m38_65 -> m38_74  [key=0, style=solid];
m38_65 -> m38_75  [key=1, style=dashed, color=darkseagreen4, label=object];
m38_74 -> m38_75  [key=0, style=solid];
m38_74 -> m38_79  [key=1, style=dashed, color=darkseagreen4, label=string];
m38_74 -> m38_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m38_75 -> m38_76  [key=0, style=solid];
m38_75 -> m38_77  [key=2, style=dotted];
m38_75 -> m38_18  [key=2, style=dotted];
m38_75 -> m38_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_76 -> m38_65  [key=0, style=bold, color=blue];
m38_99 -> m38_100  [key=0, style=solid];
m38_100 -> m38_101  [key=0, style=solid];
m38_100 -> m38_87  [key=2, style=dotted];
m38_101 -> m38_99  [key=0, style=bold, color=blue];
m38_0 -> m38_1  [key=0, style=solid];
m38_0 -> m38_3  [key=1, style=dashed, color=darkseagreen4, label=T];
m38_0 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label=T];
m38_0 -> m38_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_3  [key=0, style=solid];
m38_3 -> m38_4  [key=0, style=solid];
m38_3 -> m38_15  [key=2, style=dotted];
m38_3 -> m38_5  [key=1, style=dashed, color=darkseagreen4, label=type];
m38_3 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label=type];
m38_6 -> m38_7  [key=0, style=solid];
m38_6 -> m38_19  [key=2, style=dotted];
m38_6 -> m38_20  [key=2, style=dotted];
m38_6 -> m38_32  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_6 -> m38_6  [key=1, style=dashed, color=darkseagreen4, label=info];
m38_6 -> m38_8  [key=1, style=dashed, color=darkseagreen4, label=specs];
m38_2 -> m38_13  [key=0, style=solid];
m38_2 -> m38_14  [key=2, style=dotted];
m38_4 -> m38_5  [key=0, style=solid];
m38_4 -> m38_16  [key=2, style=dotted];
m38_4 -> m38_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_4 -> m38_9  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_4 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_4 -> m38_10  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_4 -> m38_11  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_4 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_4 -> m38_12  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_5 -> m38_6  [key=0, style=solid];
m38_5 -> m38_17  [key=2, style=dotted];
m38_5 -> m38_18  [key=2, style=dotted];
m38_5 -> m38_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_9 -> m38_10  [key=0, style=solid];
m38_9 -> m38_23  [key=2, style=dotted];
m38_9 -> m38_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_10 -> m38_11  [key=0, style=solid];
m38_10 -> m38_24  [key=2, style=dotted];
m38_11 -> m38_12  [key=0, style=solid];
m38_11 -> m38_23  [key=2, style=dotted];
m38_11 -> m38_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_12 -> m38_13  [key=0, style=solid];
m38_12 -> m38_25  [key=2, style=dotted];
m38_12 -> m38_26  [key=2, style=dotted];
m38_12 -> m38_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> expected"];
m38_12 -> m38_7  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> expected"];
m38_12 -> m38_19  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> result"];
m38_12 -> m38_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> result"];
m38_12 -> m38_8  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>> result"];
m38_7 -> m38_8  [key=0, style=solid];
m38_7 -> m38_21  [key=2, style=dotted];
m38_7 -> m38_22  [key=2, style=dotted];
m38_7 -> m38_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_7 -> m38_7  [key=1, style=dashed, color=darkseagreen4, label=info];
m38_7 -> m38_9  [key=1, style=dashed, color=darkseagreen4, label=optSpecs];
m38_8 -> m38_9  [key=0, style=solid];
m38_8 -> m38_21  [key=2, style=dotted];
m38_8 -> m38_40  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m38_8 -> m38_8  [key=1, style=dashed, color=darkseagreen4, label=info];
m38_8 -> m38_11  [key=1, style=dashed, color=darkseagreen4, label=valSpecs];
m38_13 -> m38_0  [key=0, style=bold, color=blue];
m38_115 -> m38_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_115 -> m38_44  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_115 -> m38_48  [key=1, style=dashed, color=darkseagreen4, label=builder];
m38_116 -> m38_33  [key=1, style=dashed, color=darkseagreen4, label=T];
m38_117 -> m38_72  [key=1, style=dashed, color=darkseagreen4, label=sep];
m38_118 -> m38_84  [key=1, style=dashed, color=darkseagreen4, label=doubQt];
m39_6 -> m39_7  [key=0, style=solid];
m39_7 -> m39_8  [key=0, style=solid];
m39_7 -> m39_3  [key=2, style=dotted];
m39_7 -> m39_4  [key=2, style=dotted];
m39_7 -> m39_5  [key=2, style=dotted];
m39_8 -> m39_6  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_2  [key=0, style=solid];
m39_1 -> m39_3  [key=2, style=dotted];
m39_1 -> m39_4  [key=2, style=dotted];
m39_1 -> m39_5  [key=2, style=dotted];
m39_2 -> m39_0  [key=0, style=bold, color=blue];
m40_9 -> m40_10  [key=0, style=solid];
m40_10 -> m40_11  [key=0, style=solid];
m40_10 -> m40_0  [key=2, style=dotted];
m40_10 -> m40_12  [key=2, style=dotted];
m40_11 -> m40_9  [key=0, style=bold, color=blue];
m40_0 -> m40_1  [key=0, style=solid];
m40_0 -> m40_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m40_0 -> m40_3  [key=1, style=dashed, color=darkseagreen4, label=char];
m40_0 -> m40_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m40_0 -> m40_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m40_0 -> m40_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m40_0 -> m40_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m40_1 -> m40_2  [key=0, style=solid];
m40_2 -> m40_3  [key=0, style=solid];
m40_3 -> m40_4  [key=0, style=solid];
m40_4 -> m40_5  [key=0, style=solid];
m40_5 -> m40_6  [key=0, style=solid];
m40_6 -> m40_7  [key=0, style=solid];
m40_7 -> m40_8  [key=0, style=solid];
m40_8 -> m40_0  [key=0, style=bold, color=blue];
m40_13 -> m40_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m40_13 -> m40_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m40_13 -> m40_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m40_13 -> m40_4  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m40_13 -> m40_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m40_13 -> m40_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m40_13 -> m40_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m41_29 -> m41_34  [key=0, style=solid];
m41_29 -> m41_36  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m41_29 -> m41_38  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m41_29 -> m41_42  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m41_29 -> m41_27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<T> factory"];
m41_29 -> m41_24  [key=3, color=darkorchid, style=bold, label="Parameter variable string[] args"];
m41_29 -> m41_40  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m41_34 -> m41_35  [key=0, style=solid];
m41_34 -> m41_36  [key=0, style=solid];
m41_36 -> m41_37  [key=0, style=solid];
m41_36 -> m41_38  [key=0, style=solid];
m41_38 -> m41_39  [key=0, style=solid];
m41_38 -> m41_40  [key=2, style=dotted];
m41_38 -> m41_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_35 -> m41_39  [key=0, style=solid];
m41_35 -> m41_15  [key=2, style=dotted];
m41_37 -> m41_39  [key=0, style=solid];
m41_37 -> m41_15  [key=2, style=dotted];
m41_39 -> m41_29  [key=0, style=bold, color=blue];
m41_8 -> m41_9  [key=0, style=solid];
m41_8 -> m41_12  [key=1, style=dashed, color=darkseagreen4, label="System.Action<CommandLine.ParserSettings>"];
m41_9 -> m41_10  [key=0, style=solid];
m41_9 -> m41_11  [key=0, style=solid];
m41_12 -> m41_13  [key=0, style=solid];
m41_12 -> m41_16  [key=2, style=dotted];
m41_10 -> m41_14  [key=0, style=solid];
m41_10 -> m41_15  [key=2, style=dotted];
m41_11 -> m41_12  [key=0, style=solid];
m41_11 -> m41_4  [key=2, style=dotted];
m41_13 -> m41_14  [key=0, style=solid];
m41_14 -> m41_8  [key=0, style=bold, color=blue];
m41_20 -> m41_21  [key=0, style=solid];
m41_21 -> m41_22  [key=0, style=solid];
m41_21 -> m41_23  [key=2, style=dotted];
m41_22 -> m41_20  [key=0, style=bold, color=blue];
m41_49 -> m41_50  [key=0, style=solid];
m41_49 -> m41_52  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m41_49 -> m41_54  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m41_49 -> m41_56  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m41_49 -> m41_60  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m41_49 -> m41_40  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<object> ParseArguments"];
m41_50 -> m41_51  [key=0, style=solid];
m41_50 -> m41_52  [key=0, style=solid];
m41_52 -> m41_53  [key=0, style=solid];
m41_52 -> m41_54  [key=0, style=solid];
m41_54 -> m41_55  [key=0, style=solid];
m41_54 -> m41_56  [key=0, style=solid];
m41_56 -> m41_57  [key=0, style=solid];
m41_56 -> m41_40  [key=2, style=dotted];
m41_56 -> m41_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_51 -> m41_57  [key=0, style=solid];
m41_51 -> m41_15  [key=2, style=dotted];
m41_53 -> m41_57  [key=0, style=solid];
m41_53 -> m41_15  [key=2, style=dotted];
m41_55 -> m41_57  [key=0, style=solid];
m41_55 -> m41_58  [key=2, style=dotted];
m41_57 -> m41_49  [key=0, style=bold, color=blue];
m41_3 -> m41_17  [key=0, style=solid];
m41_17 -> m41_18  [key=0, style=solid];
m41_18 -> m41_19  [key=0, style=solid];
m41_19 -> m41_3  [key=0, style=bold, color=blue];
m41_5 -> m41_6  [key=0, style=solid];
m41_6 -> m41_7  [key=0, style=solid];
m41_6 -> m41_4  [key=2, style=dotted];
m41_7 -> m41_5  [key=0, style=bold, color=blue];
m41_89 -> m41_100  [key=0, style=solid];
m41_89 -> m41_101  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m41_89 -> m41_108  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m41_89 -> m41_102  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m41_89 -> m41_88  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m41_89 -> m41_89  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> DisplayHelp"];
m41_100 -> m41_101  [key=0, style=solid];
m41_100 -> m41_102  [key=0, style=solid];
m41_100 -> m41_104  [key=2, style=dotted];
m41_101 -> m41_102  [key=0, style=solid];
m41_101 -> m41_105  [key=2, style=dotted];
m41_101 -> m41_106  [key=2, style=dotted];
m41_101 -> m41_107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_102 -> m41_103  [key=0, style=solid];
m41_103 -> m41_89  [key=0, style=bold, color=blue];
m41_107 -> m41_108  [key=0, style=solid];
m41_0 -> m41_1  [key=0, style=solid];
m41_1 -> m41_2  [key=0, style=solid];
m41_1 -> m41_3  [key=2, style=dotted];
m41_1 -> m41_4  [key=2, style=dotted];
m41_2 -> m41_0  [key=0, style=bold, color=blue];
m41_30 -> m41_31  [key=0, style=solid];
m41_31 -> m41_32  [key=0, style=solid];
m41_31 -> m41_33  [key=2, style=dotted];
m41_32 -> m41_30  [key=0, style=bold, color=blue];
m41_42 -> m41_43  [key=0, style=solid];
m41_42 -> m41_44  [key=2, style=dotted];
m41_42 -> m41_45  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_41 -> m41_42  [key=0, style=solid];
m41_43 -> m41_41  [key=0, style=bold, color=blue];
m41_45 -> m41_46  [key=0, style=solid];
m41_46 -> m41_47  [key=0, style=solid];
m41_46 -> m41_48  [key=2, style=dotted];
m41_47 -> m41_45  [key=0, style=bold, color=blue];
m41_60 -> m41_61  [key=0, style=solid];
m41_60 -> m41_62  [key=2, style=dotted];
m41_60 -> m41_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_59 -> m41_60  [key=0, style=solid];
m41_61 -> m41_59  [key=0, style=bold, color=blue];
m41_63 -> m41_64  [key=0, style=solid];
m41_64 -> m41_65  [key=0, style=solid];
m41_64 -> m41_48  [key=2, style=dotted];
m41_65 -> m41_63  [key=0, style=bold, color=blue];
m41_76 -> m41_77  [key=0, style=solid];
m41_76 -> m41_74  [key=2, style=dotted];
m41_76 -> m41_78  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_79 -> m41_80  [key=0, style=solid];
m41_79 -> m41_81  [key=2, style=dotted];
m41_83 -> m41_84  [key=0, style=solid];
m41_83 -> m41_81  [key=2, style=dotted];
m41_75 -> m41_76  [key=0, style=solid];
m41_82 -> m41_83  [key=0, style=solid];
m41_77 -> m41_75  [key=0, style=bold, color=blue];
m41_78 -> m41_79  [key=0, style=solid];
m41_80 -> m41_78  [key=0, style=bold, color=blue];
m41_84 -> m41_82  [key=0, style=bold, color=blue];
m41_93 -> m41_94  [key=0, style=solid];
m41_94 -> m41_95  [key=0, style=solid];
m41_94 -> m41_96  [key=2, style=dotted];
m41_94 -> m41_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_95 -> m41_93  [key=0, style=bold, color=blue];
m41_97 -> m41_98  [key=0, style=solid];
m41_98 -> m41_99  [key=0, style=solid];
m41_99 -> m41_97  [key=0, style=bold, color=blue];
m41_108 -> m41_109  [key=0, style=solid];
m41_108 -> m41_110  [key=2, style=dotted];
m41_108 -> m41_111  [key=2, style=dotted];
m41_109 -> m41_107  [key=0, style=bold, color=blue];
m41_88 -> m41_90  [key=0, style=solid];
m41_90 -> m41_91  [key=0, style=solid];
m41_90 -> m41_92  [key=2, style=dotted];
m41_90 -> m41_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_91 -> m41_88  [key=0, style=bold, color=blue];
m41_24 -> m41_25  [key=0, style=solid];
m41_24 -> m41_27  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m41_24 -> m41_29  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> ParseArguments"];
m41_25 -> m41_26  [key=0, style=solid];
m41_25 -> m41_27  [key=0, style=solid];
m41_27 -> m41_28  [key=0, style=solid];
m41_27 -> m41_29  [key=2, style=dotted];
m41_27 -> m41_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_26 -> m41_28  [key=0, style=solid];
m41_26 -> m41_15  [key=2, style=dotted];
m41_28 -> m41_24  [key=0, style=bold, color=blue];
m41_40 -> m41_85  [key=0, style=solid];
m41_40 -> m41_38  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m41_40 -> m41_56  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.ParserResult<T>> parseFunc"];
m41_40 -> m41_89  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> MakeParserResult"];
m41_85 -> m41_86  [key=0, style=solid];
m41_85 -> m41_87  [key=2, style=dotted];
m41_85 -> m41_88  [key=2, style=dotted];
m41_85 -> m41_89  [key=2, style=dotted];
m41_86 -> m41_40  [key=0, style=bold, color=blue];
m41_66 -> m41_67  [key=0, style=solid];
m41_67 -> m41_68  [key=0, style=solid];
m41_67 -> m41_23  [key=2, style=dotted];
m41_68 -> m41_69  [key=0, style=solid];
m41_68 -> m41_70  [key=2, style=dotted];
m41_69 -> m41_66  [key=0, style=bold, color=blue];
m41_48 -> m41_71  [key=0, style=solid];
m41_48 -> m41_76  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m41_48 -> m41_79  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m41_48 -> m41_83  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m41_71 -> m41_72  [key=0, style=solid];
m41_71 -> m41_73  [key=2, style=dotted];
m41_71 -> m41_74  [key=2, style=dotted];
m41_71 -> m41_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_71 -> m41_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m41_72 -> m41_48  [key=0, style=bold, color=blue];
m41_23 -> m41_112  [key=0, style=solid];
m41_23 -> m41_114  [key=1, style=dashed, color=darkseagreen4, label=bool];
m41_23 -> m41_21  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m41_23 -> m41_67  [key=3, color=darkorchid, style=bold, label="Parameter variable bool disposing"];
m41_112 -> m41_113  [key=0, style=solid];
m41_112 -> m41_114  [key=0, style=solid];
m41_114 -> m41_115  [key=0, style=solid];
m41_114 -> m41_118  [key=0, style=solid];
m41_113 -> m41_118  [key=0, style=solid];
m41_115 -> m41_116  [key=0, style=solid];
m41_115 -> m41_117  [key=0, style=solid];
m41_116 -> m41_117  [key=0, style=solid];
m41_116 -> m41_119  [key=2, style=dotted];
m41_117 -> m41_118  [key=0, style=solid];
m41_118 -> m41_23  [key=0, style=bold, color=blue];
m41_120 -> m41_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_38  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_46  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_56  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_60  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_64  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_68  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_112  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_120 -> m41_117  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Parser"];
m41_121 -> m41_42  [key=1, style=dashed, color=darkseagreen4, label="System.Func<T>"];
m41_122 -> m41_42  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m41_123 -> m41_60  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m41_124 -> m41_60  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m41_125 -> m41_76  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m41_125 -> m41_79  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m41_125 -> m41_83  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m41_126 -> m41_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m41_126 -> m41_79  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m41_126 -> m41_83  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m41_127 -> m41_108  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m45_11 -> m45_12  [key=0, style=solid];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_7  [key=2, style=dotted];
m45_5 -> m45_8  [key=2, style=dotted];
m45_5 -> m45_9  [key=2, style=dotted];
m45_5 -> m45_10  [key=2, style=dotted];
m45_5 -> m45_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_4 -> m45_5  [key=0, style=solid];
m45_4 -> m45_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m45_12 -> m45_13  [key=0, style=solid];
m45_6 -> m45_4  [key=0, style=bold, color=blue];
m45_13 -> m45_11  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid];
m45_0 -> m45_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_3  [key=2, style=dotted];
m45_1 -> m45_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m45_1 -> m45_1  [key=1, style=dashed, color=darkseagreen4, label=tseq];
m45_2 -> m45_0  [key=0, style=bold, color=blue];
m45_14 -> m45_5  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>"];
m45_15 -> m45_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m45_16 -> m45_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m46_4 -> m46_5  [key=0, style=solid];
m46_4 -> m46_7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TargetType"];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_7  [key=0, style=solid];
m46_7 -> m46_8  [key=0, style=solid];
m46_7 -> m46_0  [key=2, style=dotted];
m46_6 -> m46_8  [key=0, style=solid];
m46_6 -> m46_9  [key=2, style=dotted];
m46_8 -> m46_4  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Infrastructure.Maybe<int>"];
m46_1 -> m46_2  [key=0, style=solid];
m46_2 -> m46_3  [key=0, style=solid];
m46_3 -> m46_0  [key=0, style=bold, color=blue];
m46_10 -> m46_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TypeDescriptor"];
m46_10 -> m46_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TypeDescriptor"];
m48_0 -> m48_1  [key=0, style=solid];
m48_0 -> m48_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_0 -> m48_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_0 -> m48_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m48_1 -> m48_2  [key=0, style=solid];
m48_1 -> m48_3  [key=0, style=solid];
m48_3 -> m48_4  [key=0, style=solid];
m48_3 -> m48_5  [key=0, style=solid];
m48_5 -> m48_6  [key=0, style=solid];
m48_6 -> m48_7  [key=0, style=solid];
m48_2 -> m48_7  [key=0, style=solid];
m48_2 -> m48_8  [key=2, style=dotted];
m48_4 -> m48_7  [key=0, style=solid];
m48_4 -> m48_8  [key=2, style=dotted];
m48_7 -> m48_0  [key=0, style=bold, color=blue];
m48_12 -> m48_13  [key=0, style=solid];
m48_13 -> m48_14  [key=0, style=solid];
m48_13 -> m48_15  [key=2, style=dotted];
m48_13 -> m48_16  [key=2, style=dotted];
m48_13 -> m48_9  [key=2, style=dotted];
m48_13 -> m48_17  [key=2, style=dotted];
m48_13 -> m48_13  [key=1, style=dashed, color=darkseagreen4, label=type];
m48_14 -> m48_12  [key=0, style=bold, color=blue];
m48_9 -> m48_10  [key=0, style=solid];
m48_10 -> m48_11  [key=0, style=solid];
m48_10 -> m48_0  [key=2, style=dotted];
m48_11 -> m48_9  [key=0, style=bold, color=blue];
m48_18 -> m48_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
m48_18 -> m48_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
m50_39 -> m50_40  [key=0, style=solid];
m50_40 -> m50_41  [key=0, style=solid];
m50_40 -> m50_45  [key=2, style=dotted];
m50_40 -> m50_43  [key=1, style=dashed, color=darkseagreen4, label=expected];
m50_41 -> m50_42  [key=0, style=solid];
m50_41 -> m50_6  [key=2, style=dotted];
m50_41 -> m50_43  [key=1, style=dashed, color=darkseagreen4, label=result];
m50_43 -> m50_44  [key=0, style=solid];
m50_43 -> m50_7  [key=2, style=dotted];
m50_42 -> m50_43  [key=0, style=solid];
m50_42 -> m50_31  [key=2, style=dotted];
m50_44 -> m50_39  [key=0, style=bold, color=blue];
m50_14 -> m50_15  [key=0, style=solid];
m50_15 -> m50_16  [key=0, style=solid];
m50_15 -> m50_13  [key=2, style=dotted];
m50_15 -> m50_17  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m50_16 -> m50_17  [key=0, style=solid];
m50_16 -> m50_6  [key=2, style=dotted];
m50_17 -> m50_18  [key=0, style=solid];
m50_17 -> m50_7  [key=2, style=dotted];
m50_18 -> m50_14  [key=0, style=bold, color=blue];
m50_24 -> m50_25  [key=0, style=solid];
m50_25 -> m50_26  [key=0, style=solid];
m50_25 -> m50_30  [key=2, style=dotted];
m50_25 -> m50_28  [key=1, style=dashed, color=darkseagreen4, label=expected];
m50_26 -> m50_27  [key=0, style=solid];
m50_26 -> m50_6  [key=2, style=dotted];
m50_26 -> m50_28  [key=1, style=dashed, color=darkseagreen4, label=result];
m50_28 -> m50_29  [key=0, style=solid];
m50_28 -> m50_7  [key=2, style=dotted];
m50_27 -> m50_28  [key=0, style=solid];
m50_27 -> m50_31  [key=2, style=dotted];
m50_29 -> m50_24  [key=0, style=bold, color=blue];
m50_0 -> m50_1  [key=0, style=solid];
m50_1 -> m50_2  [key=0, style=solid];
m50_1 -> m50_5  [key=2, style=dotted];
m50_1 -> m50_3  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m50_2 -> m50_3  [key=0, style=solid];
m50_2 -> m50_6  [key=2, style=dotted];
m50_3 -> m50_4  [key=0, style=solid];
m50_3 -> m50_7  [key=2, style=dotted];
m50_4 -> m50_0  [key=0, style=bold, color=blue];
m50_8 -> m50_9  [key=0, style=solid];
m50_9 -> m50_10  [key=0, style=solid];
m50_9 -> m50_13  [key=2, style=dotted];
m50_9 -> m50_11  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m50_10 -> m50_11  [key=0, style=solid];
m50_10 -> m50_6  [key=2, style=dotted];
m50_10 -> m50_1  [key=3, color=darkorchid, style=bold, label="Property variable bool Required"];
m50_11 -> m50_12  [key=0, style=solid];
m50_11 -> m50_7  [key=2, style=dotted];
m50_12 -> m50_8  [key=0, style=bold, color=blue];
m50_19 -> m50_20  [key=0, style=solid];
m50_20 -> m50_21  [key=0, style=solid];
m50_20 -> m50_13  [key=2, style=dotted];
m50_20 -> m50_22  [key=1, style=dashed, color=darkseagreen4, label=expectedErrors];
m50_21 -> m50_22  [key=0, style=solid];
m50_21 -> m50_6  [key=2, style=dotted];
m50_22 -> m50_23  [key=0, style=solid];
m50_22 -> m50_7  [key=2, style=dotted];
m50_23 -> m50_19  [key=0, style=bold, color=blue];
m50_46 -> m50_47  [key=0, style=solid];
m50_46 -> m50_48  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m50_47 -> m50_48  [key=0, style=solid];
m50_47 -> m50_45  [key=2, style=dotted];
m50_47 -> m50_50  [key=1, style=dashed, color=darkseagreen4, label=expected];
m50_48 -> m50_49  [key=0, style=solid];
m50_48 -> m50_6  [key=2, style=dotted];
m50_48 -> m50_50  [key=1, style=dashed, color=darkseagreen4, label=result];
m50_50 -> m50_51  [key=0, style=solid];
m50_50 -> m50_7  [key=2, style=dotted];
m50_49 -> m50_50  [key=0, style=solid];
m50_49 -> m50_31  [key=2, style=dotted];
m50_51 -> m50_46  [key=0, style=bold, color=blue];
m50_32 -> m50_33  [key=0, style=solid];
m50_33 -> m50_34  [key=0, style=solid];
m50_33 -> m50_38  [key=2, style=dotted];
m50_33 -> m50_36  [key=1, style=dashed, color=darkseagreen4, label=expected];
m50_34 -> m50_35  [key=0, style=solid];
m50_34 -> m50_6  [key=2, style=dotted];
m50_34 -> m50_36  [key=1, style=dashed, color=darkseagreen4, label=result];
m50_36 -> m50_37  [key=0, style=solid];
m50_36 -> m50_7  [key=2, style=dotted];
m50_35 -> m50_36  [key=0, style=solid];
m50_35 -> m50_31  [key=2, style=dotted];
m50_37 -> m50_32  [key=0, style=bold, color=blue];
m51_99 -> m51_115  [key=0, style=solid];
m51_99 -> m51_117  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_99 -> m51_119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_99 -> m51_120  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_99 -> m51_121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_99 -> m51_123  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_99 -> m51_124  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_99 -> m51_73  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m51_99 -> m51_82  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m51_99 -> m51_80  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
m51_99 -> m51_83  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
m51_99 -> m51_99  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
m51_99 -> m51_58  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
m51_115 -> m51_116  [key=0, style=solid];
m51_115 -> m51_117  [key=0, style=solid];
m51_117 -> m51_118  [key=0, style=solid];
m51_117 -> m51_119  [key=0, style=solid];
m51_119 -> m51_120  [key=0, style=solid];
m51_119 -> m51_121  [key=0, style=solid];
m51_119 -> m51_49  [key=2, style=dotted];
m51_119 -> m51_126  [key=2, style=dotted];
m51_120 -> m51_125  [key=0, style=solid];
m51_121 -> m51_122  [key=0, style=solid];
m51_121 -> m51_127  [key=2, style=dotted];
m51_121 -> m51_124  [key=1, style=dashed, color=darkseagreen4, label=errors];
m51_123 -> m51_125  [key=0, style=solid];
m51_124 -> m51_125  [key=0, style=solid];
m51_124 -> m51_56  [key=2, style=dotted];
m51_124 -> m51_128  [key=2, style=dotted];
m51_124 -> m51_57  [key=2, style=dotted];
m51_124 -> m51_58  [key=2, style=dotted];
m51_116 -> m51_125  [key=0, style=solid];
m51_116 -> m51_23  [key=2, style=dotted];
m51_118 -> m51_125  [key=0, style=solid];
m51_118 -> m51_23  [key=2, style=dotted];
m51_122 -> m51_123  [key=0, style=solid];
m51_122 -> m51_124  [key=0, style=solid];
m51_122 -> m51_126  [key=2, style=dotted];
m51_125 -> m51_99  [key=0, style=bold, color=blue];
m51_0 -> m51_1  [key=0, style=solid];
m51_1 -> m51_0  [key=0, style=bold, color=blue];
m51_62 -> m51_171  [key=0, style=solid];
m51_62 -> m51_173  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_62 -> m51_176  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
m51_171 -> m51_172  [key=0, style=solid];
m51_171 -> m51_173  [key=0, style=solid];
m51_173 -> m51_174  [key=0, style=solid];
m51_173 -> m51_175  [key=2, style=dotted];
m51_173 -> m51_56  [key=2, style=dotted];
m51_173 -> m51_176  [key=2, style=dotted];
m51_172 -> m51_174  [key=0, style=solid];
m51_172 -> m51_23  [key=2, style=dotted];
m51_174 -> m51_62  [key=0, style=bold, color=blue];
m51_132 -> m51_262  [key=0, style=solid];
m51_262 -> m51_263  [key=0, style=solid];
m51_262 -> m51_262  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
m51_263 -> m51_264  [key=0, style=solid];
m51_263 -> m51_24  [key=2, style=dotted];
m51_263 -> m51_265  [key=2, style=dotted];
m51_263 -> m51_266  [key=2, style=dotted];
m51_263 -> m51_219  [key=2, style=dotted];
m51_263 -> m51_267  [key=2, style=dotted];
m51_263 -> m51_268  [key=2, style=dotted];
m51_263 -> m51_220  [key=2, style=dotted];
m51_263 -> m51_269  [key=2, style=dotted];
m51_264 -> m51_132  [key=0, style=bold, color=blue];
m51_136 -> m51_137  [key=0, style=solid];
m51_136 -> m51_139  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine"];
m51_136 -> m51_148  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_136 -> m51_165  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_137 -> m51_138  [key=0, style=solid];
m51_137 -> m51_139  [key=2, style=dotted];
m51_138 -> m51_136  [key=0, style=bold, color=blue];
m51_426 -> m51_429  [key=0, style=solid];
m51_426 -> m51_430  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_426 -> m51_431  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_426 -> m51_433  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_426 -> m51_434  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_426 -> m51_441  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_426 -> m51_419  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification spec"];
m51_429 -> m51_430  [key=0, style=solid];
m51_429 -> m51_436  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_429 -> m51_441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_429 -> m51_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_429 -> m51_447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_429 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m51_429 -> m51_432  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m51_430 -> m51_431  [key=0, style=solid];
m51_430 -> m51_435  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m51_430 -> m51_445  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
m51_431 -> m51_432  [key=0, style=solid];
m51_431 -> m51_440  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m51_431 -> m51_445  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
m51_433 -> m51_434  [key=0, style=solid];
m51_433 -> m51_435  [key=0, style=solid];
m51_434 -> m51_435  [key=0, style=solid];
m51_434 -> m51_439  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m51_434 -> m51_444  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m51_441 -> m51_442  [key=0, style=solid];
m51_441 -> m51_441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_441 -> m51_443  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_441 -> m51_444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_436 -> m51_437  [key=0, style=solid];
m51_436 -> m51_436  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_436 -> m51_438  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_436 -> m51_439  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_446 -> m51_447  [key=0, style=solid];
m51_446 -> m51_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_447 -> m51_448  [key=0, style=solid];
m51_435 -> m51_436  [key=0, style=solid];
m51_435 -> m51_440  [key=0, style=solid];
m51_445 -> m51_446  [key=0, style=solid];
m51_445 -> m51_447  [key=0, style=solid];
m51_432 -> m51_433  [key=0, style=solid];
m51_432 -> m51_439  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m51_432 -> m51_444  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m51_432 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
m51_440 -> m51_441  [key=0, style=solid];
m51_440 -> m51_445  [key=0, style=solid];
m51_439 -> m51_440  [key=0, style=solid];
m51_439 -> m51_439  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_439 -> m51_441  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_439 -> m51_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_439 -> m51_447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_444 -> m51_445  [key=0, style=solid];
m51_444 -> m51_444  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_444 -> m51_446  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_444 -> m51_447  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_437 -> m51_438  [key=0, style=solid];
m51_437 -> m51_439  [key=0, style=solid];
m51_438 -> m51_439  [key=0, style=solid];
m51_438 -> m51_438  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_442 -> m51_443  [key=0, style=solid];
m51_442 -> m51_444  [key=0, style=solid];
m51_443 -> m51_444  [key=0, style=solid];
m51_443 -> m51_443  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_448 -> m51_426  [key=0, style=bold, color=blue];
m51_325 -> m51_326  [key=0, style=solid];
m51_325 -> m51_327  [key=2, style=dotted];
m51_325 -> m51_328  [key=2, style=dotted];
m51_325 -> m51_306  [key=2, style=dotted];
m51_325 -> m51_307  [key=2, style=dotted];
m51_325 -> m51_329  [key=2, style=dotted];
m51_325 -> m51_325  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
m51_184 -> m51_325  [key=0, style=solid];
m51_184 -> m51_61  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
m51_184 -> m51_190  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
m51_326 -> m51_184  [key=0, style=bold, color=blue];
m51_380 -> m51_380  [key=3, color=darkorchid, style=bold, label="Field variable int DefaultMaximumLength"];
m51_197 -> m51_198  [key=0, style=solid];
m51_198 -> m51_199  [key=0, style=solid];
m51_198 -> m51_127  [key=2, style=dotted];
m51_198 -> m51_200  [key=2, style=dotted];
m51_199 -> m51_197  [key=0, style=bold, color=blue];
m51_49 -> m51_270  [key=0, style=solid];
m51_49 -> m51_27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors"];
m51_270 -> m51_271  [key=0, style=solid];
m51_270 -> m51_215  [key=2, style=dotted];
m51_270 -> m51_272  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_271 -> m51_49  [key=0, style=bold, color=blue];
m51_253 -> m51_10  [key=3, color=darkorchid, style=bold, label="Field variable CommandLine.Text.SentenceBuilder sentenceBuilder"];
m51_127 -> m51_201  [key=0, style=solid];
m51_127 -> m51_205  [key=0, style=bold, color=crimson];
m51_127 -> m51_208  [key=0, style=bold, color=crimson];
m51_127 -> m51_213  [key=0, style=bold, color=crimson];
m51_127 -> m51_203  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_127 -> m51_207  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
m51_127 -> m51_209  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
m51_201 -> m51_202  [key=0, style=solid];
m51_201 -> m51_203  [key=0, style=solid];
m51_205 -> m51_206  [key=0, style=solid];
m51_208 -> m51_206  [key=0, style=solid];
m51_208 -> m51_220  [key=2, style=dotted];
m51_213 -> m51_212  [key=0, style=solid];
m51_203 -> m51_204  [key=0, style=solid];
m51_203 -> m51_49  [key=2, style=dotted];
m51_203 -> m51_206  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m51_203 -> m51_209  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
m51_207 -> m51_208  [key=0, style=solid];
m51_207 -> m51_216  [key=2, style=dotted];
m51_207 -> m51_217  [key=2, style=dotted];
m51_207 -> m51_218  [key=2, style=dotted];
m51_207 -> m51_219  [key=2, style=dotted];
m51_209 -> m51_210  [key=0, style=solid];
m51_209 -> m51_86  [key=2, style=dotted];
m51_209 -> m51_51  [key=2, style=dotted];
m51_209 -> m51_211  [key=1, style=dashed, color=darkseagreen4, label=mutuallyErrs];
m51_202 -> m51_214  [key=0, style=solid];
m51_202 -> m51_23  [key=2, style=dotted];
m51_204 -> m51_205  [key=0, style=solid];
m51_204 -> m51_206  [key=0, style=solid];
m51_204 -> m51_126  [key=2, style=dotted];
m51_206 -> m51_207  [key=0, style=solid];
m51_206 -> m51_209  [key=0, style=solid];
m51_206 -> m51_215  [key=2, style=dotted];
m51_206 -> m51_221  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_210 -> m51_211  [key=0, style=solid];
m51_210 -> m51_214  [key=0, style=solid];
m51_211 -> m51_212  [key=0, style=solid];
m51_211 -> m51_159  [key=2, style=dotted];
m51_212 -> m51_213  [key=0, style=solid];
m51_212 -> m51_214  [key=0, style=solid];
m51_214 -> m51_127  [key=0, style=bold, color=blue];
m51_340 -> m51_348  [key=0, style=solid];
m51_340 -> m51_349  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_384  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_388  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_350  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_351  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m51_340 -> m51_352  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m51_340 -> m51_353  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m51_340 -> m51_354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m51_340 -> m51_355  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m51_340 -> m51_356  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_340 -> m51_362  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_365  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_368  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_369  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_370  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_373  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_374  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_340 -> m51_330  [key=3, color=darkorchid, style=bold, label="Parameter variable int maxLength"];
m51_340 -> m51_333  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.Specification specification"];
m51_340 -> m51_332  [key=3, color=darkorchid, style=bold, label="Parameter variable int widthOfHelpText"];
m51_348 -> m51_349  [key=0, style=solid];
m51_348 -> m51_219  [key=2, style=dotted];
m51_349 -> m51_350  [key=0, style=solid];
m51_349 -> m51_24  [key=2, style=dotted];
m51_349 -> m51_378  [key=2, style=dotted];
m51_349 -> m51_383  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_349 -> m51_387  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_350 -> m51_351  [key=0, style=solid];
m51_350 -> m51_220  [key=2, style=dotted];
m51_350 -> m51_379  [key=2, style=dotted];
m51_350 -> m51_219  [key=2, style=dotted];
m51_351 -> m51_352  [key=0, style=solid];
m51_351 -> m51_353  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_351 -> m51_354  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_352 -> m51_353  [key=0, style=solid];
m51_352 -> m51_354  [key=0, style=solid];
m51_352 -> m51_50  [key=2, style=dotted];
m51_353 -> m51_354  [key=0, style=solid];
m51_353 -> m51_200  [key=2, style=dotted];
m51_353 -> m51_353  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_354 -> m51_355  [key=0, style=solid];
m51_354 -> m51_53  [key=2, style=dotted];
m51_354 -> m51_391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_354 -> m51_392  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_354 -> m51_356  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_354 -> m51_357  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_354 -> m51_359  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_354 -> m51_372  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_354 -> m51_375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_355 -> m51_356  [key=0, style=solid];
m51_355 -> m51_357  [key=0, style=solid];
m51_356 -> m51_357  [key=0, style=solid];
m51_356 -> m51_380  [key=2, style=dotted];
m51_356 -> m51_356  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_356 -> m51_359  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_356 -> m51_372  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_356 -> m51_375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_362 -> m51_363  [key=0, style=solid];
m51_362 -> m51_368  [key=0, style=solid];
m51_365 -> m51_366  [key=0, style=solid];
m51_365 -> m51_371  [key=0, style=solid];
m51_368 -> m51_369  [key=0, style=solid];
m51_368 -> m51_372  [key=0, style=solid];
m51_369 -> m51_370  [key=0, style=solid];
m51_369 -> m51_297  [key=2, style=dotted];
m51_369 -> m51_219  [key=2, style=dotted];
m51_370 -> m51_372  [key=0, style=solid];
m51_373 -> m51_374  [key=0, style=solid];
m51_373 -> m51_382  [key=2, style=dotted];
m51_373 -> m51_268  [key=2, style=dotted];
m51_374 -> m51_357  [key=0, style=solid];
m51_374 -> m51_375  [key=0, style=solid];
m51_357 -> m51_358  [key=0, style=solid];
m51_357 -> m51_375  [key=0, style=solid];
m51_357 -> m51_267  [key=2, style=dotted];
m51_359 -> m51_360  [key=0, style=solid];
m51_359 -> m51_296  [key=2, style=dotted];
m51_359 -> m51_361  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_359 -> m51_362  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_359 -> m51_363  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_359 -> m51_364  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_359 -> m51_365  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_359 -> m51_368  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_359 -> m51_369  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_372 -> m51_373  [key=0, style=solid];
m51_372 -> m51_298  [key=2, style=dotted];
m51_372 -> m51_299  [key=2, style=dotted];
m51_372 -> m51_381  [key=2, style=dotted];
m51_372 -> m51_372  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_372 -> m51_374  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_372 -> m51_375  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_375 -> m51_376  [key=0, style=solid];
m51_375 -> m51_219  [key=2, style=dotted];
m51_375 -> m51_268  [key=2, style=dotted];
m51_358 -> m51_359  [key=0, style=solid];
m51_358 -> m51_362  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_358 -> m51_364  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_358 -> m51_368  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_358 -> m51_372  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_358 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m51_358 -> m51_340  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m51_364 -> m51_365  [key=0, style=solid];
m51_364 -> m51_364  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_364 -> m51_367  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_364 -> m51_372  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_360 -> m51_361  [key=0, style=solid];
m51_360 -> m51_362  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_360 -> m51_363  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_360 -> m51_364  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_360 -> m51_365  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_360 -> m51_368  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_360 -> m51_369  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_360 -> m51_371  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_360 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m51_361 -> m51_362  [key=0, style=solid];
m51_361 -> m51_372  [key=0, style=solid];
m51_363 -> m51_364  [key=0, style=solid];
m51_363 -> m51_219  [key=2, style=dotted];
m51_371 -> m51_361  [key=0, style=solid];
m51_371 -> m51_371  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_367 -> m51_371  [key=0, style=solid];
m51_367 -> m51_367  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_367 -> m51_372  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_366 -> m51_367  [key=0, style=solid];
m51_366 -> m51_219  [key=2, style=dotted];
m51_376 -> m51_377  [key=0, style=solid];
m51_377 -> m51_340  [key=0, style=bold, color=blue];
m51_344 -> m51_307  [key=0, style=bold, color=blue];
m51_307 -> m51_343  [key=0, style=solid];
m51_343 -> m51_344  [key=0, style=solid];
m51_343 -> m51_51  [key=2, style=dotted];
m51_343 -> m51_328  [key=2, style=dotted];
m51_422 -> m51_423  [key=0, style=solid];
m51_422 -> m51_424  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_64 -> m51_65  [key=0, style=solid];
m51_64 -> m51_66  [key=2, style=dotted];
m51_68 -> m51_69  [key=0, style=solid];
m51_68 -> m51_66  [key=2, style=dotted];
m51_63 -> m51_64  [key=0, style=solid];
m51_67 -> m51_68  [key=0, style=solid];
m51_70 -> m51_71  [key=0, style=solid];
m51_65 -> m51_63  [key=0, style=bold, color=blue];
m51_69 -> m51_67  [key=0, style=bold, color=blue];
m51_71 -> m51_72  [key=0, style=solid];
m51_72 -> m51_70  [key=0, style=bold, color=blue];
m51_97 -> m51_98  [key=0, style=solid];
m51_97 -> m51_99  [key=2, style=dotted];
m51_110 -> m51_111  [key=0, style=solid];
m51_110 -> m51_99  [key=2, style=dotted];
m51_90 -> m51_91  [key=0, style=solid];
m51_93 -> m51_94  [key=0, style=solid];
m51_104 -> m51_105  [key=0, style=solid];
m51_104 -> m51_99  [key=2, style=dotted];
m51_103 -> m51_104  [key=0, style=solid];
m51_106 -> m51_107  [key=0, style=solid];
m51_109 -> m51_110  [key=0, style=solid];
m51_112 -> m51_113  [key=0, style=solid];
m51_96 -> m51_97  [key=0, style=solid];
m51_100 -> m51_101  [key=0, style=solid];
m51_91 -> m51_92  [key=0, style=solid];
m51_92 -> m51_90  [key=0, style=bold, color=blue];
m51_94 -> m51_95  [key=0, style=solid];
m51_95 -> m51_93  [key=0, style=bold, color=blue];
m51_98 -> m51_96  [key=0, style=bold, color=blue];
m51_101 -> m51_102  [key=0, style=solid];
m51_102 -> m51_100  [key=0, style=bold, color=blue];
m51_105 -> m51_103  [key=0, style=bold, color=blue];
m51_107 -> m51_108  [key=0, style=solid];
m51_108 -> m51_106  [key=0, style=bold, color=blue];
m51_111 -> m51_109  [key=0, style=bold, color=blue];
m51_113 -> m51_114  [key=0, style=solid];
m51_114 -> m51_112  [key=0, style=bold, color=blue];
m51_144 -> m51_145  [key=0, style=solid];
m51_145 -> m51_146  [key=0, style=solid];
m51_145 -> m51_57  [key=2, style=dotted];
m51_146 -> m51_144  [key=0, style=bold, color=blue];
m51_151 -> m51_152  [key=0, style=solid];
m51_152 -> m51_153  [key=0, style=solid];
m51_152 -> m51_136  [key=2, style=dotted];
m51_153 -> m51_151  [key=0, style=bold, color=blue];
m51_160 -> m51_161  [key=0, style=solid];
m51_161 -> m51_162  [key=0, style=solid];
m51_161 -> m51_57  [key=2, style=dotted];
m51_162 -> m51_160  [key=0, style=bold, color=blue];
m51_168 -> m51_169  [key=0, style=solid];
m51_169 -> m51_170  [key=0, style=solid];
m51_169 -> m51_136  [key=2, style=dotted];
m51_170 -> m51_168  [key=0, style=bold, color=blue];
m51_221 -> m51_222  [key=0, style=solid];
m51_222 -> m51_223  [key=0, style=solid];
m51_223 -> m51_221  [key=0, style=bold, color=blue];
m51_228 -> m51_229  [key=0, style=solid];
m51_229 -> m51_230  [key=0, style=solid];
m51_230 -> m51_228  [key=0, style=bold, color=blue];
m51_258 -> m51_259  [key=0, style=solid];
m51_259 -> m51_260  [key=0, style=solid];
m51_260 -> m51_261  [key=0, style=solid];
m51_257 -> m51_258  [key=0, style=solid];
m51_257 -> m51_259  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m51_257 -> m51_260  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
m51_261 -> m51_257  [key=0, style=bold, color=blue];
m51_272 -> m51_273  [key=0, style=solid];
m51_273 -> m51_274  [key=0, style=solid];
m51_274 -> m51_272  [key=0, style=bold, color=blue];
m51_310 -> m51_311  [key=0, style=solid];
m51_311 -> m51_312  [key=0, style=solid];
m51_312 -> m51_310  [key=0, style=bold, color=blue];
m51_317 -> m51_318  [key=0, style=solid];
m51_317 -> m51_319  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
m51_318 -> m51_319  [key=0, style=solid];
m51_318 -> m51_320  [key=1, style=dashed, color=darkseagreen4, label=prop];
m51_319 -> m51_320  [key=0, style=solid];
m51_319 -> m51_321  [key=1, style=dashed, color=darkseagreen4, label=attr];
m51_320 -> m51_321  [key=0, style=solid];
m51_320 -> m51_323  [key=2, style=dotted];
m51_321 -> m51_322  [key=0, style=solid];
m51_321 -> m51_324  [key=2, style=dotted];
m51_322 -> m51_317  [key=0, style=bold, color=blue];
m51_338 -> m51_339  [key=0, style=solid];
m51_338 -> m51_340  [key=2, style=dotted];
m51_337 -> m51_338  [key=0, style=solid];
m51_339 -> m51_337  [key=0, style=bold, color=blue];
m51_384 -> m51_385  [key=0, style=solid];
m51_384 -> m51_386  [key=2, style=dotted];
m51_384 -> m51_219  [key=2, style=dotted];
m51_388 -> m51_389  [key=0, style=solid];
m51_388 -> m51_390  [key=2, style=dotted];
m51_388 -> m51_219  [key=2, style=dotted];
m51_383 -> m51_384  [key=0, style=solid];
m51_387 -> m51_388  [key=0, style=solid];
m51_391 -> m51_392  [key=0, style=solid];
m51_392 -> m51_393  [key=0, style=solid];
m51_392 -> m51_394  [key=2, style=dotted];
m51_392 -> m51_392  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_385 -> m51_383  [key=0, style=bold, color=blue];
m51_389 -> m51_387  [key=0, style=bold, color=blue];
m51_393 -> m51_391  [key=0, style=bold, color=blue];
m51_399 -> m51_400  [key=0, style=solid];
m51_399 -> m51_401  [key=2, style=dotted];
m51_399 -> m51_402  [key=2, style=dotted];
m51_399 -> m51_403  [key=2, style=dotted];
m51_399 -> m51_268  [key=2, style=dotted];
m51_405 -> m51_406  [key=0, style=solid];
m51_405 -> m51_268  [key=2, style=dotted];
m51_405 -> m51_402  [key=2, style=dotted];
m51_405 -> m51_403  [key=2, style=dotted];
m51_398 -> m51_399  [key=0, style=solid];
m51_404 -> m51_405  [key=0, style=solid];
m51_400 -> m51_398  [key=0, style=bold, color=blue];
m51_406 -> m51_404  [key=0, style=bold, color=blue];
m51_410 -> m51_411  [key=0, style=solid];
m51_410 -> m51_412  [key=2, style=dotted];
m51_414 -> m51_415  [key=0, style=solid];
m51_414 -> m51_402  [key=2, style=dotted];
m51_409 -> m51_410  [key=0, style=solid];
m51_413 -> m51_414  [key=0, style=solid];
m51_411 -> m51_409  [key=0, style=bold, color=blue];
m51_415 -> m51_413  [key=0, style=bold, color=blue];
m51_423 -> m51_424  [key=0, style=solid];
m51_423 -> m51_426  [key=2, style=dotted];
m51_423 -> m51_427  [key=2, style=dotted];
m51_424 -> m51_425  [key=0, style=solid];
m51_424 -> m51_428  [key=2, style=dotted];
m51_425 -> m51_422  [key=0, style=bold, color=blue];
m51_386 -> m51_395  [key=0, style=solid];
m51_386 -> m51_399  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_386 -> m51_405  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_386 -> m51_340  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
m51_395 -> m51_396  [key=0, style=solid];
m51_395 -> m51_24  [key=2, style=dotted];
m51_395 -> m51_397  [key=2, style=dotted];
m51_395 -> m51_220  [key=2, style=dotted];
m51_395 -> m51_398  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_395 -> m51_404  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_396 -> m51_386  [key=0, style=bold, color=blue];
m51_4 -> m51_5  [key=0, style=solid];
m51_5 -> m51_4  [key=0, style=bold, color=blue];
m51_73 -> m51_74  [key=0, style=solid];
m51_73 -> m51_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_73 -> m51_80  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_73 -> m51_97  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_73 -> m51_83  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_73 -> m51_110  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_73 -> m51_57  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
m51_73 -> m51_25  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
m51_74 -> m51_75  [key=0, style=solid];
m51_74 -> m51_76  [key=0, style=solid];
m51_76 -> m51_77  [key=0, style=solid];
m51_76 -> m51_79  [key=1, style=dashed, color=darkseagreen4, label=errors];
m51_76 -> m51_81  [key=1, style=dashed, color=darkseagreen4, label=errors];
m51_80 -> m51_84  [key=0, style=solid];
m51_80 -> m51_25  [key=2, style=dotted];
m51_80 -> m51_96  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_80 -> m51_100  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_83 -> m51_84  [key=0, style=solid];
m51_83 -> m51_25  [key=2, style=dotted];
m51_83 -> m51_103  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_83 -> m51_106  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_83 -> m51_109  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_83 -> m51_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_75 -> m51_84  [key=0, style=solid];
m51_75 -> m51_85  [key=2, style=dotted];
m51_77 -> m51_78  [key=0, style=solid];
m51_77 -> m51_79  [key=0, style=solid];
m51_77 -> m51_59  [key=2, style=dotted];
m51_77 -> m51_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_79 -> m51_80  [key=0, style=solid];
m51_79 -> m51_81  [key=0, style=solid];
m51_79 -> m51_59  [key=2, style=dotted];
m51_79 -> m51_93  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_81 -> m51_82  [key=0, style=solid];
m51_81 -> m51_86  [key=2, style=dotted];
m51_81 -> m51_87  [key=2, style=dotted];
m51_81 -> m51_83  [key=1, style=dashed, color=darkseagreen4, label=err];
m51_78 -> m51_84  [key=0, style=solid];
m51_78 -> m51_4  [key=2, style=dotted];
m51_78 -> m51_57  [key=2, style=dotted];
m51_82 -> m51_83  [key=0, style=solid];
m51_82 -> m51_88  [key=2, style=dotted];
m51_82 -> m51_89  [key=2, style=dotted];
m51_82 -> m51_48  [key=2, style=dotted];
m51_82 -> m51_104  [key=1, style=dashed, color=darkseagreen4, label=pr];
m51_84 -> m51_73  [key=0, style=bold, color=blue];
m51_163 -> m51_164  [key=0, style=solid];
m51_164 -> m51_165  [key=0, style=solid];
m51_164 -> m51_159  [key=2, style=dotted];
m51_165 -> m51_166  [key=0, style=solid];
m51_165 -> m51_143  [key=2, style=dotted];
m51_165 -> m51_168  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_166 -> m51_167  [key=0, style=solid];
m51_167 -> m51_163  [key=0, style=bold, color=blue];
m51_61 -> m51_177  [key=0, style=solid];
m51_61 -> m51_179  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m51_61 -> m51_181  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m51_61 -> m51_176  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
m51_177 -> m51_178  [key=0, style=solid];
m51_177 -> m51_179  [key=0, style=solid];
m51_179 -> m51_180  [key=0, style=solid];
m51_179 -> m51_181  [key=0, style=solid];
m51_181 -> m51_182  [key=0, style=solid];
m51_181 -> m51_184  [key=2, style=dotted];
m51_181 -> m51_56  [key=2, style=dotted];
m51_181 -> m51_176  [key=2, style=dotted];
m51_178 -> m51_182  [key=0, style=solid];
m51_178 -> m51_23  [key=2, style=dotted];
m51_180 -> m51_182  [key=0, style=solid];
m51_180 -> m51_183  [key=2, style=dotted];
m51_182 -> m51_61  [key=0, style=bold, color=blue];
m51_250 -> m51_313  [key=0, style=solid];
m51_313 -> m51_314  [key=0, style=solid];
m51_313 -> m51_315  [key=2, style=dotted];
m51_313 -> m51_316  [key=2, style=dotted];
m51_313 -> m51_317  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_314 -> m51_250  [key=0, style=bold, color=blue];
m51_8 -> m51_9  [key=0, style=solid];
m51_9 -> m51_8  [key=0, style=bold, color=blue];
m51_224 -> m51_225  [key=0, style=solid];
m51_224 -> m51_227  [key=3, color=darkorchid, style=bold, label="method methodReturn string RenderUsageText"];
m51_225 -> m51_226  [key=0, style=solid];
m51_225 -> m51_227  [key=2, style=dotted];
m51_225 -> m51_228  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_226 -> m51_224  [key=0, style=bold, color=blue];
m51_25 -> m51_26  [key=0, style=solid];
m51_25 -> m51_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_25 -> m51_29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_25 -> m51_31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
m51_25 -> m51_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_25 -> m51_42  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_25 -> m51_44  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_25 -> m51_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_26 -> m51_27  [key=0, style=solid];
m51_26 -> m51_0  [key=2, style=dotted];
m51_26 -> m51_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_32  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_64  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_68  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_41  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_43  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_44  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_45  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_26 -> m51_46  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_28 -> m51_29  [key=0, style=solid];
m51_28 -> m51_32  [key=0, style=solid];
m51_29 -> m51_30  [key=0, style=solid];
m51_29 -> m51_42  [key=1, style=dashed, color=darkseagreen4, label=errors];
m51_31 -> m51_32  [key=0, style=solid];
m51_31 -> m51_51  [key=2, style=dotted];
m51_31 -> m51_31  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_64  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_36  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_38  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_39  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_68  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_41  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_43  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_44  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_45  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_31 -> m51_46  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_34 -> m51_35  [key=0, style=solid];
m51_34 -> m51_54  [key=2, style=dotted];
m51_34 -> m51_40  [key=1, style=dashed, color=darkseagreen4, label=usageLines];
m51_34 -> m51_41  [key=1, style=dashed, color=darkseagreen4, label=usageLines];
m51_42 -> m51_43  [key=0, style=solid];
m51_42 -> m51_45  [key=0, style=solid];
m51_42 -> m51_50  [key=2, style=dotted];
m51_42 -> m51_59  [key=2, style=dotted];
m51_42 -> m51_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_44 -> m51_46  [key=0, style=solid];
m51_44 -> m51_60  [key=2, style=dotted];
m51_44 -> m51_61  [key=2, style=dotted];
m51_45 -> m51_46  [key=0, style=solid];
m51_45 -> m51_62  [key=2, style=dotted];
m51_27 -> m51_28  [key=0, style=solid];
m51_27 -> m51_48  [key=2, style=dotted];
m51_27 -> m51_42  [key=1, style=dashed, color=darkseagreen4, label=errors];
m51_32 -> m51_33  [key=0, style=solid];
m51_32 -> m51_52  [key=2, style=dotted];
m51_32 -> m51_53  [key=2, style=dotted];
m51_32 -> m51_63  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_36 -> m51_37  [key=0, style=solid];
m51_36 -> m51_56  [key=2, style=dotted];
m51_36 -> m51_38  [key=1, style=dashed, color=darkseagreen4, label=heading];
m51_38 -> m51_39  [key=0, style=solid];
m51_38 -> m51_57  [key=2, style=dotted];
m51_39 -> m51_40  [key=0, style=solid];
m51_39 -> m51_53  [key=2, style=dotted];
m51_39 -> m51_67  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_41 -> m51_42  [key=0, style=solid];
m51_41 -> m51_58  [key=2, style=dotted];
m51_43 -> m51_44  [key=0, style=solid];
m51_46 -> m51_47  [key=0, style=solid];
m51_30 -> m51_31  [key=0, style=solid];
m51_30 -> m51_32  [key=0, style=solid];
m51_30 -> m51_49  [key=2, style=dotted];
m51_30 -> m51_50  [key=2, style=dotted];
m51_33 -> m51_34  [key=0, style=solid];
m51_33 -> m51_52  [key=2, style=dotted];
m51_33 -> m51_35  [key=1, style=dashed, color=darkseagreen4, label=usageAttr];
m51_33 -> m51_39  [key=1, style=dashed, color=darkseagreen4, label=usageAttr];
m51_35 -> m51_36  [key=0, style=solid];
m51_35 -> m51_39  [key=0, style=solid];
m51_35 -> m51_55  [key=2, style=dotted];
m51_35 -> m51_50  [key=2, style=dotted];
m51_40 -> m51_41  [key=0, style=solid];
m51_40 -> m51_42  [key=0, style=solid];
m51_40 -> m51_50  [key=2, style=dotted];
m51_37 -> m51_38  [key=0, style=solid];
m51_37 -> m51_39  [key=0, style=solid];
m51_47 -> m51_25  [key=0, style=bold, color=blue];
m51_176 -> m51_330  [key=0, style=solid];
m51_176 -> m51_332  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_176 -> m51_333  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
m51_176 -> m51_338  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_330 -> m51_331  [key=0, style=solid];
m51_330 -> m51_336  [key=2, style=dotted];
m51_330 -> m51_332  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m51_330 -> m51_333  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m51_330 -> m51_338  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m51_332 -> m51_333  [key=0, style=solid];
m51_332 -> m51_338  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m51_333 -> m51_334  [key=0, style=solid];
m51_333 -> m51_143  [key=2, style=dotted];
m51_333 -> m51_337  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_331 -> m51_332  [key=0, style=solid];
m51_331 -> m51_24  [key=2, style=dotted];
m51_334 -> m51_335  [key=0, style=solid];
m51_335 -> m51_176  [key=0, style=bold, color=blue];
m51_129 -> m51_130  [key=0, style=solid];
m51_129 -> m51_132  [key=3, color=darkorchid, style=bold, label="method methodReturn string op_Implicit"];
m51_130 -> m51_131  [key=0, style=solid];
m51_130 -> m51_132  [key=2, style=dotted];
m51_131 -> m51_129  [key=0, style=bold, color=blue];
m51_135 -> m51_345  [key=0, style=solid];
m51_135 -> m51_57  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_345 -> m51_346  [key=0, style=solid];
m51_345 -> m51_275  [key=2, style=dotted];
m51_346 -> m51_347  [key=0, style=solid];
m51_347 -> m51_135  [key=0, style=bold, color=blue];
m51_139 -> m51_416  [key=0, style=solid];
m51_139 -> m51_136  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_416 -> m51_417  [key=0, style=solid];
m51_416 -> m51_275  [key=2, style=dotted];
m51_417 -> m51_418  [key=0, style=solid];
m51_418 -> m51_139  [key=0, style=bold, color=blue];
m51_2 -> m51_3  [key=0, style=solid];
m51_3 -> m51_2  [key=0, style=bold, color=blue];
m51_301 -> m51_302  [key=0, style=solid];
m51_301 -> m51_86  [key=2, style=dotted];
m51_301 -> m51_306  [key=2, style=dotted];
m51_301 -> m51_307  [key=2, style=dotted];
m51_301 -> m51_308  [key=2, style=dotted];
m51_301 -> m51_303  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m51_175 -> m51_300  [key=0, style=solid];
m51_300 -> m51_301  [key=0, style=solid];
m51_300 -> m51_305  [key=2, style=dotted];
m51_300 -> m51_302  [key=1, style=dashed, color=darkseagreen4, label=specs];
m51_302 -> m51_303  [key=0, style=solid];
m51_302 -> m51_86  [key=2, style=dotted];
m51_302 -> m51_309  [key=2, style=dotted];
m51_302 -> m51_310  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_303 -> m51_304  [key=0, style=solid];
m51_303 -> m51_48  [key=2, style=dotted];
m51_303 -> m51_308  [key=2, style=dotted];
m51_304 -> m51_175  [key=0, style=bold, color=blue];
m51_275 -> m51_276  [key=0, style=solid];
m51_275 -> m51_278  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_275 -> m51_281  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_275 -> m51_282  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m51_275 -> m51_284  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_275 -> m51_285  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m51_275 -> m51_287  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_275 -> m51_288  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m51_275 -> m51_289  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_275 -> m51_291  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_275 -> m51_292  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m51_275 -> m51_293  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_275 -> m51_294  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
m51_275 -> m51_139  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_275 -> m51_135  [key=3, color=darkorchid, style=bold, label="Parameter variable int maximumLength"];
m51_276 -> m51_277  [key=0, style=solid];
m51_276 -> m51_268  [key=2, style=dotted];
m51_278 -> m51_279  [key=0, style=solid];
m51_278 -> m51_296  [key=2, style=dotted];
m51_278 -> m51_280  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_278 -> m51_281  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_278 -> m51_282  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_278 -> m51_283  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_278 -> m51_284  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_278 -> m51_287  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_278 -> m51_288  [key=1, style=dashed, color=darkseagreen4, label=words];
m51_281 -> m51_282  [key=0, style=solid];
m51_281 -> m51_287  [key=0, style=solid];
m51_282 -> m51_283  [key=0, style=solid];
m51_282 -> m51_219  [key=2, style=dotted];
m51_284 -> m51_285  [key=0, style=solid];
m51_284 -> m51_290  [key=0, style=solid];
m51_285 -> m51_286  [key=0, style=solid];
m51_285 -> m51_219  [key=2, style=dotted];
m51_287 -> m51_288  [key=0, style=solid];
m51_287 -> m51_291  [key=0, style=solid];
m51_288 -> m51_289  [key=0, style=solid];
m51_288 -> m51_297  [key=2, style=dotted];
m51_288 -> m51_219  [key=2, style=dotted];
m51_289 -> m51_291  [key=0, style=solid];
m51_291 -> m51_292  [key=0, style=solid];
m51_291 -> m51_298  [key=2, style=dotted];
m51_291 -> m51_299  [key=2, style=dotted];
m51_291 -> m51_291  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_291 -> m51_293  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_291 -> m51_294  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_292 -> m51_293  [key=0, style=solid];
m51_292 -> m51_268  [key=2, style=dotted];
m51_293 -> m51_276  [key=0, style=solid];
m51_293 -> m51_294  [key=0, style=solid];
m51_294 -> m51_295  [key=0, style=solid];
m51_294 -> m51_219  [key=2, style=dotted];
m51_277 -> m51_278  [key=0, style=solid];
m51_277 -> m51_281  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_277 -> m51_283  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_277 -> m51_287  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_277 -> m51_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_277 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m51_277 -> m51_275  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
m51_283 -> m51_284  [key=0, style=solid];
m51_283 -> m51_283  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_283 -> m51_286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_283 -> m51_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_279 -> m51_280  [key=0, style=solid];
m51_279 -> m51_281  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_279 -> m51_282  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_279 -> m51_283  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_279 -> m51_284  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_279 -> m51_287  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_279 -> m51_288  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_279 -> m51_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_279 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m51_280 -> m51_281  [key=0, style=solid];
m51_280 -> m51_291  [key=0, style=solid];
m51_290 -> m51_280  [key=0, style=solid];
m51_290 -> m51_290  [key=1, style=dashed, color=darkseagreen4, label=i];
m51_286 -> m51_290  [key=0, style=solid];
m51_286 -> m51_286  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_286 -> m51_291  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
m51_295 -> m51_275  [key=0, style=bold, color=blue];
m51_10 -> m51_11  [key=0, style=solid];
m51_10 -> m51_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_10 -> m51_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_10 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.SentenceBuilder"];
m51_10 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_10 -> m51_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_11 -> m51_12  [key=0, style=solid];
m51_11 -> m51_13  [key=0, style=solid];
m51_13 -> m51_14  [key=0, style=solid];
m51_13 -> m51_15  [key=0, style=solid];
m51_15 -> m51_16  [key=0, style=solid];
m51_15 -> m51_17  [key=0, style=solid];
m51_19 -> m51_20  [key=0, style=solid];
m51_20 -> m51_21  [key=0, style=solid];
m51_21 -> m51_22  [key=0, style=solid];
m51_12 -> m51_22  [key=0, style=solid];
m51_12 -> m51_23  [key=2, style=dotted];
m51_14 -> m51_22  [key=0, style=solid];
m51_14 -> m51_23  [key=2, style=dotted];
m51_16 -> m51_22  [key=0, style=solid];
m51_16 -> m51_23  [key=2, style=dotted];
m51_17 -> m51_18  [key=0, style=solid];
m51_17 -> m51_24  [key=2, style=dotted];
m51_18 -> m51_19  [key=0, style=solid];
m51_18 -> m51_24  [key=2, style=dotted];
m51_22 -> m51_10  [key=0, style=bold, color=blue];
m51_390 -> m51_407  [key=0, style=solid];
m51_390 -> m51_410  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_390 -> m51_414  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_390 -> m51_340  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification specification"];
m51_407 -> m51_408  [key=0, style=solid];
m51_407 -> m51_24  [key=2, style=dotted];
m51_407 -> m51_378  [key=2, style=dotted];
m51_407 -> m51_403  [key=2, style=dotted];
m51_407 -> m51_220  [key=2, style=dotted];
m51_407 -> m51_409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_407 -> m51_413  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_408 -> m51_390  [key=0, style=bold, color=blue];
m51_58 -> m51_140  [key=0, style=solid];
m51_58 -> m51_34  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines"];
m51_58 -> m51_121  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines"];
m51_140 -> m51_141  [key=0, style=solid];
m51_140 -> m51_143  [key=2, style=dotted];
m51_140 -> m51_144  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_141 -> m51_142  [key=0, style=solid];
m51_142 -> m51_58  [key=0, style=bold, color=blue];
m51_336 -> m51_419  [key=0, style=solid];
m51_419 -> m51_420  [key=0, style=solid];
m51_419 -> m51_421  [key=2, style=dotted];
m51_419 -> m51_422  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_420 -> m51_336  [key=0, style=bold, color=blue];
m51_342 -> m51_306  [key=0, style=bold, color=blue];
m51_306 -> m51_341  [key=0, style=solid];
m51_341 -> m51_342  [key=0, style=solid];
m51_341 -> m51_51  [key=2, style=dotted];
m51_341 -> m51_328  [key=2, style=dotted];
m51_394 -> m51_10  [key=3, color=darkorchid, style=bold, label="Field variable string heading"];
m51_185 -> m51_186  [key=0, style=solid];
m51_185 -> m51_188  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_185 -> m51_176  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
m51_186 -> m51_187  [key=0, style=solid];
m51_186 -> m51_188  [key=0, style=solid];
m51_188 -> m51_189  [key=0, style=solid];
m51_188 -> m51_175  [key=2, style=dotted];
m51_188 -> m51_56  [key=2, style=dotted];
m51_188 -> m51_176  [key=2, style=dotted];
m51_187 -> m51_189  [key=0, style=solid];
m51_187 -> m51_23  [key=2, style=dotted];
m51_189 -> m51_185  [key=0, style=bold, color=blue];
m51_427 -> m51_449  [key=0, style=solid];
m51_427 -> m51_450  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_427 -> m51_452  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_427 -> m51_453  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_427 -> m51_455  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_427 -> m51_456  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_427 -> m51_419  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification spec"];
m51_449 -> m51_450  [key=0, style=solid];
m51_449 -> m51_455  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_449 -> m51_456  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_449 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m51_449 -> m51_451  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
m51_450 -> m51_451  [key=0, style=solid];
m51_450 -> m51_454  [key=1, style=dashed, color=darkseagreen4, label=hasMeta];
m51_452 -> m51_453  [key=0, style=solid];
m51_452 -> m51_454  [key=0, style=solid];
m51_453 -> m51_454  [key=0, style=solid];
m51_453 -> m51_457  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m51_455 -> m51_457  [key=0, style=solid];
m51_455 -> m51_460  [key=2, style=dotted];
m51_455 -> m51_455  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_456 -> m51_457  [key=0, style=solid];
m51_456 -> m51_460  [key=2, style=dotted];
m51_456 -> m51_456  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_451 -> m51_452  [key=0, style=solid];
m51_451 -> m51_457  [key=1, style=dashed, color=darkseagreen4, label=metaLength];
m51_451 -> m51_277  [key=3, color=darkorchid, style=bold, label="Local variable int metaLength"];
m51_454 -> m51_455  [key=0, style=solid];
m51_454 -> m51_456  [key=0, style=solid];
m51_457 -> m51_458  [key=0, style=solid];
m51_457 -> m51_457  [key=1, style=dashed, color=darkseagreen4, label=specLength];
m51_458 -> m51_459  [key=0, style=solid];
m51_459 -> m51_427  [key=0, style=bold, color=blue];
m51_57 -> m51_133  [key=0, style=solid];
m51_57 -> m51_36  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_57 -> m51_140  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_57 -> m51_156  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m51_57 -> m51_135  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine"];
m51_133 -> m51_134  [key=0, style=solid];
m51_133 -> m51_135  [key=2, style=dotted];
m51_134 -> m51_57  [key=0, style=bold, color=blue];
m51_190 -> m51_191  [key=0, style=solid];
m51_190 -> m51_193  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
m51_190 -> m51_195  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_190 -> m51_176  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
m51_191 -> m51_192  [key=0, style=solid];
m51_191 -> m51_193  [key=0, style=solid];
m51_193 -> m51_194  [key=0, style=solid];
m51_193 -> m51_195  [key=0, style=solid];
m51_195 -> m51_196  [key=0, style=solid];
m51_195 -> m51_184  [key=2, style=dotted];
m51_195 -> m51_56  [key=2, style=dotted];
m51_195 -> m51_176  [key=2, style=dotted];
m51_192 -> m51_196  [key=0, style=solid];
m51_192 -> m51_23  [key=2, style=dotted];
m51_194 -> m51_196  [key=0, style=solid];
m51_194 -> m51_183  [key=2, style=dotted];
m51_196 -> m51_190  [key=0, style=bold, color=blue];
m51_147 -> m51_148  [key=0, style=solid];
m51_148 -> m51_149  [key=0, style=solid];
m51_148 -> m51_143  [key=2, style=dotted];
m51_148 -> m51_151  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_149 -> m51_150  [key=0, style=solid];
m51_150 -> m51_147  [key=0, style=bold, color=blue];
m51_154 -> m51_155  [key=0, style=solid];
m51_155 -> m51_156  [key=0, style=solid];
m51_155 -> m51_159  [key=2, style=dotted];
m51_156 -> m51_157  [key=0, style=solid];
m51_156 -> m51_143  [key=2, style=dotted];
m51_156 -> m51_160  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_157 -> m51_158  [key=0, style=solid];
m51_158 -> m51_154  [key=0, style=bold, color=blue];
m51_6 -> m51_7  [key=0, style=solid];
m51_7 -> m51_6  [key=0, style=bold, color=blue];
m51_227 -> m51_231  [key=0, style=solid];
m51_227 -> m51_224  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
m51_227 -> m51_225  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
m51_231 -> m51_232  [key=0, style=solid];
m51_231 -> m51_54  [key=2, style=dotted];
m51_231 -> m51_200  [key=2, style=dotted];
m51_232 -> m51_227  [key=0, style=bold, color=blue];
m51_54 -> m51_233  [key=0, style=solid];
m51_54 -> m51_237  [key=0, style=bold, color=crimson];
m51_54 -> m51_244  [key=0, style=bold, color=crimson];
m51_54 -> m51_248  [key=0, style=bold, color=crimson];
m51_54 -> m51_235  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_54 -> m51_242  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>"];
m51_54 -> m51_227  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
m51_233 -> m51_234  [key=0, style=solid];
m51_233 -> m51_235  [key=0, style=solid];
m51_237 -> m51_238  [key=0, style=solid];
m51_244 -> m51_245  [key=0, style=solid];
m51_244 -> m51_220  [key=2, style=dotted];
m51_248 -> m51_246  [key=0, style=solid];
m51_248 -> m51_220  [key=2, style=dotted];
m51_235 -> m51_236  [key=0, style=solid];
m51_235 -> m51_250  [key=2, style=dotted];
m51_235 -> m51_238  [key=1, style=dashed, color=darkseagreen4, label=usage];
m51_242 -> m51_243  [key=0, style=solid];
m51_242 -> m51_51  [key=2, style=dotted];
m51_242 -> m51_245  [key=1, style=dashed, color=darkseagreen4, label=example];
m51_242 -> m51_247  [key=1, style=dashed, color=darkseagreen4, label=example];
m51_234 -> m51_249  [key=0, style=solid];
m51_234 -> m51_23  [key=2, style=dotted];
m51_236 -> m51_237  [key=0, style=solid];
m51_236 -> m51_238  [key=0, style=solid];
m51_236 -> m51_251  [key=2, style=dotted];
m51_238 -> m51_239  [key=0, style=solid];
m51_238 -> m51_252  [key=2, style=dotted];
m51_238 -> m51_240  [key=1, style=dashed, color=darkseagreen4, label=usageTuple];
m51_239 -> m51_240  [key=0, style=solid];
m51_239 -> m51_241  [key=1, style=dashed, color=darkseagreen4, label=examples];
m51_240 -> m51_241  [key=0, style=solid];
m51_240 -> m51_253  [key=2, style=dotted];
m51_240 -> m51_247  [key=1, style=dashed, color=darkseagreen4, label=appAlias];
m51_241 -> m51_242  [key=0, style=solid];
m51_241 -> m51_249  [key=0, style=solid];
m51_247 -> m51_248  [key=0, style=solid];
m51_247 -> m51_216  [key=2, style=dotted];
m51_247 -> m51_217  [key=2, style=dotted];
m51_247 -> m51_219  [key=2, style=dotted];
m51_247 -> m51_254  [key=2, style=dotted];
m51_247 -> m51_256  [key=2, style=dotted];
m51_247 -> m51_257  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m51_243 -> m51_244  [key=0, style=solid];
m51_243 -> m51_216  [key=2, style=dotted];
m51_243 -> m51_254  [key=2, style=dotted];
m51_245 -> m51_246  [key=0, style=solid];
m51_245 -> m51_255  [key=2, style=dotted];
m51_246 -> m51_247  [key=0, style=solid];
m51_246 -> m51_241  [key=0, style=solid];
m51_246 -> m51_258  [key=1, style=dashed, color=darkseagreen4, label=s];
m51_246 -> m51_259  [key=1, style=dashed, color=darkseagreen4, label=s];
m51_246 -> m51_260  [key=1, style=dashed, color=darkseagreen4, label=s];
m51_249 -> m51_54  [key=0, style=bold, color=blue];
m51_461 -> m51_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_133  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_140  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_148  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_152  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_156  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_161  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_165  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_169  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_166  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_173  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_181  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_188  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_195  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_263  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_301  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_325  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_330  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_331  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_333  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_338  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_334  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_341  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_343  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_345  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_346  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_348  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_349  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_384  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_388  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_350  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_352  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_363  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_366  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_369  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_373  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_376  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_395  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_399  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_405  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_416  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_417  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_419  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_423  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_437  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_461 -> m51_442  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
m51_462 -> m51_64  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_462 -> m51_68  [key=1, style=dashed, color=darkseagreen4, label=auto];
m51_463 -> m51_97  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_463 -> m51_110  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
m51_464 -> m51_104  [key=1, style=dashed, color=darkseagreen4, label=pr];
m51_465 -> m51_258  [key=1, style=dashed, color=darkseagreen4, label=s];
m51_465 -> m51_259  [key=1, style=dashed, color=darkseagreen4, label=s];
m51_465 -> m51_260  [key=1, style=dashed, color=darkseagreen4, label=s];
m51_466 -> m51_338  [key=1, style=dashed, color=darkseagreen4, label=string];
m51_467 -> m51_338  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
m51_468 -> m51_338  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
m51_469 -> m51_384  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_469 -> m51_388  [key=1, style=dashed, color=darkseagreen4, label=int];
m51_470 -> m51_384  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m51_470 -> m51_388  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m51_471 -> m51_392  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
m51_472 -> m51_399  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_472 -> m51_405  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
m51_473 -> m51_410  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m51_473 -> m51_414  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m52_0 -> m52_1  [key=0, style=solid];
m52_1 -> m52_2  [key=0, style=solid];
m52_1 -> m52_3  [key=2, style=dotted];
m52_1 -> m52_4  [key=2, style=dotted];
m52_1 -> m52_5  [key=2, style=dotted];
m52_1 -> m52_6  [key=2, style=dotted];
m52_1 -> m52_7  [key=2, style=dotted];
m52_2 -> m52_0  [key=0, style=bold, color=blue];
m53_21 -> m53_22  [key=0, style=solid];
m53_21 -> m53_23  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m53_21 -> m53_25  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, bool>"];
m53_22 -> m53_23  [key=0, style=solid];
m53_22 -> m53_24  [key=1, style=dashed, color=darkseagreen4, label=index];
m53_22 -> m53_26  [key=1, style=dashed, color=darkseagreen4, label=index];
m53_23 -> m53_24  [key=0, style=solid];
m53_23 -> m53_26  [key=0, style=solid];
m53_23 -> m53_25  [key=1, style=dashed, color=darkseagreen4, label=item];
m53_25 -> m53_23  [key=0, style=solid];
m53_25 -> m53_26  [key=0, style=solid];
m53_25 -> m53_28  [key=2, style=dotted];
m53_24 -> m53_25  [key=0, style=solid];
m53_24 -> m53_24  [key=1, style=dashed, color=darkseagreen4, label=index];
m53_24 -> m53_26  [key=1, style=dashed, color=darkseagreen4, label=index];
m53_26 -> m53_27  [key=0, style=solid];
m53_27 -> m53_21  [key=0, style=bold, color=blue];
m53_29 -> m53_30  [key=0, style=solid];
m53_29 -> m53_31  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<object>"];
m53_30 -> m53_31  [key=0, style=solid];
m53_30 -> m53_34  [key=2, style=dotted];
m53_30 -> m53_35  [key=2, style=dotted];
m53_30 -> m53_32  [key=1, style=dashed, color=darkseagreen4, label=array];
m53_31 -> m53_32  [key=0, style=solid];
m53_31 -> m53_36  [key=2, style=dotted];
m53_31 -> m53_37  [key=2, style=dotted];
m53_32 -> m53_33  [key=0, style=solid];
m53_33 -> m53_29  [key=0, style=bold, color=blue];
m53_38 -> m53_39  [key=0, style=solid];
m53_39 -> m53_40  [key=0, style=solid];
m53_39 -> m53_41  [key=2, style=dotted];
m53_40 -> m53_38  [key=0, style=bold, color=blue];
m53_9 -> m53_10  [key=0, style=solid];
m53_9 -> m53_15  [key=0, style=bold, color=crimson];
m53_10 -> m53_11  [key=0, style=solid];
m53_10 -> m53_18  [key=2, style=dotted];
m53_10 -> m53_12  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m53_10 -> m53_13  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m53_10 -> m53_14  [key=1, style=dashed, color=darkseagreen4, label=enumerator];
m53_15 -> m53_16  [key=0, style=solid];
m53_15 -> m53_20  [key=2, style=dotted];
m53_11 -> m53_12  [key=0, style=solid];
m53_11 -> m53_17  [key=0, style=solid];
m53_11 -> m53_19  [key=2, style=dotted];
m53_12 -> m53_13  [key=0, style=solid];
m53_12 -> m53_15  [key=1, style=dashed, color=darkseagreen4, label=left];
m53_13 -> m53_14  [key=0, style=solid];
m53_13 -> m53_17  [key=0, style=solid];
m53_13 -> m53_19  [key=2, style=dotted];
m53_14 -> m53_15  [key=0, style=solid];
m53_14 -> m53_16  [key=1, style=dashed, color=darkseagreen4, label=right];
m53_16 -> m53_13  [key=0, style=solid];
m53_17 -> m53_9  [key=0, style=bold, color=blue];
m53_0 -> m53_1  [key=0, style=solid];
m53_0 -> m53_3  [key=1, style=dashed, color=darkseagreen4, label="System.Func<TSource, TSource, TResult>"];
m53_0 -> m53_5  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<TSource>"];
m53_1 -> m53_2  [key=0, style=solid];
m53_1 -> m53_3  [key=0, style=solid];
m53_3 -> m53_4  [key=0, style=solid];
m53_3 -> m53_5  [key=0, style=solid];
m53_5 -> m53_6  [key=0, style=solid];
m53_5 -> m53_8  [key=2, style=dotted];
m53_2 -> m53_6  [key=0, style=solid];
m53_2 -> m53_7  [key=2, style=dotted];
m53_4 -> m53_6  [key=0, style=solid];
m53_4 -> m53_7  [key=2, style=dotted];
m53_6 -> m53_0  [key=0, style=bold, color=blue];
m55_0 -> m55_1  [key=0, style=solid];
m55_1 -> m55_2  [key=0, style=solid];
m55_2 -> m55_3  [key=0, style=solid];
m55_3 -> m55_0  [key=0, style=bold, color=blue];
m55_11 -> m55_12  [key=0, style=solid];
m55_12 -> m55_13  [key=0, style=solid];
m55_13 -> m55_11  [key=0, style=bold, color=blue];
m55_4 -> m55_5  [key=0, style=solid];
m55_5 -> m55_4  [key=0, style=bold, color=blue];
m55_6 -> m55_7  [key=0, style=solid];
m55_7 -> m55_6  [key=0, style=bold, color=blue];
m55_8 -> m55_9  [key=0, style=solid];
m55_9 -> m55_10  [key=0, style=solid];
m55_10 -> m55_8  [key=0, style=bold, color=blue];
m55_14 -> m55_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m55_14 -> m55_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m55_14 -> m55_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m55_14 -> m55_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m56_18 -> m56_19  [key=0, style=solid];
m56_19 -> m56_20  [key=0, style=solid];
m56_19 -> m56_21  [key=2, style=dotted];
m56_20 -> m56_18  [key=0, style=bold, color=blue];
m56_34 -> m56_35  [key=0, style=solid];
m56_35 -> m56_36  [key=0, style=solid];
m56_35 -> m56_0  [key=2, style=dotted];
m56_35 -> m56_37  [key=2, style=dotted];
m56_36 -> m56_34  [key=0, style=bold, color=blue];
m56_10 -> m56_11  [key=0, style=solid];
m56_10 -> m56_14  [key=1, style=dashed, color=darkseagreen4, label=object];
m56_10 -> m56_16  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m56_11 -> m56_12  [key=0, style=solid];
m56_11 -> m56_13  [key=1, style=dashed, color=darkseagreen4, label=other];
m56_14 -> m56_15  [key=0, style=solid];
m56_14 -> m56_17  [key=2, style=dotted];
m56_12 -> m56_13  [key=0, style=solid];
m56_12 -> m56_14  [key=0, style=solid];
m56_13 -> m56_15  [key=0, style=solid];
m56_13 -> m56_16  [key=2, style=dotted];
m56_15 -> m56_10  [key=0, style=bold, color=blue];
m56_0 -> m56_1  [key=0, style=solid];
m56_0 -> m56_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Error>"];
m56_0 -> m56_5  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_0 -> m56_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Error>"];
m56_1 -> m56_2  [key=0, style=solid];
m56_1 -> m56_3  [key=0, style=solid];
m56_1 -> m56_8  [key=2, style=dotted];
m56_3 -> m56_4  [key=0, style=solid];
m56_3 -> m56_5  [key=0, style=solid];
m56_5 -> m56_6  [key=0, style=solid];
m56_6 -> m56_7  [key=0, style=solid];
m56_2 -> m56_7  [key=0, style=solid];
m56_2 -> m56_9  [key=2, style=dotted];
m56_4 -> m56_7  [key=0, style=solid];
m56_4 -> m56_9  [key=2, style=dotted];
m56_7 -> m56_0  [key=0, style=bold, color=blue];
m56_16 -> m56_22  [key=0, style=solid];
m56_16 -> m56_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<T>"];
m56_16 -> m56_11  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.StatePair<T> other"];
m56_16 -> m56_23  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m56_22 -> m56_23  [key=0, style=solid];
m56_22 -> m56_24  [key=0, style=solid];
m56_24 -> m56_25  [key=0, style=solid];
m56_24 -> m56_17  [key=2, style=dotted];
m56_24 -> m56_26  [key=2, style=dotted];
m56_23 -> m56_25  [key=0, style=solid];
m56_25 -> m56_16  [key=0, style=bold, color=blue];
m56_27 -> m56_28  [key=0, style=solid];
m56_27 -> m56_30  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Error>"];
m56_27 -> m56_32  [key=1, style=dashed, color=darkseagreen4, label=T];
m56_28 -> m56_29  [key=0, style=solid];
m56_28 -> m56_30  [key=0, style=solid];
m56_28 -> m56_8  [key=2, style=dotted];
m56_30 -> m56_31  [key=0, style=solid];
m56_30 -> m56_32  [key=0, style=solid];
m56_32 -> m56_33  [key=0, style=solid];
m56_32 -> m56_0  [key=2, style=dotted];
m56_29 -> m56_33  [key=0, style=solid];
m56_29 -> m56_9  [key=2, style=dotted];
m56_31 -> m56_33  [key=0, style=solid];
m56_31 -> m56_9  [key=2, style=dotted];
m56_33 -> m56_27  [key=0, style=bold, color=blue];
m56_38 -> m56_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<T>"];
m56_38 -> m56_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<T>"];
m56_38 -> m56_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<T>"];
m56_38 -> m56_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<T>"];
m56_38 -> m56_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<T>"];
m56_38 -> m56_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.StatePair<T>"];
m57_25 -> m57_49  [key=0, style=solid];
m57_25 -> m57_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m57_49 -> m57_50  [key=0, style=solid];
m57_49 -> m57_51  [key=2, style=dotted];
m57_49 -> m57_52  [key=2, style=dotted];
m57_49 -> m57_53  [key=2, style=dotted];
m57_49 -> m57_54  [key=2, style=dotted];
m57_49 -> m57_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_49 -> m57_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_50 -> m57_25  [key=0, style=bold, color=blue];
m57_3 -> m57_12  [key=0, style=solid];
m57_3 -> m57_13  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m57_12 -> m57_13  [key=0, style=solid];
m57_12 -> m57_15  [key=2, style=dotted];
m57_13 -> m57_14  [key=0, style=solid];
m57_13 -> m57_16  [key=2, style=dotted];
m57_13 -> m57_17  [key=2, style=dotted];
m57_13 -> m57_18  [key=2, style=dotted];
m57_13 -> m57_19  [key=2, style=dotted];
m57_13 -> m57_20  [key=2, style=dotted];
m57_13 -> m57_21  [key=2, style=dotted];
m57_13 -> m57_22  [key=2, style=dotted];
m57_13 -> m57_23  [key=2, style=dotted];
m57_13 -> m57_24  [key=2, style=dotted];
m57_13 -> m57_25  [key=2, style=dotted];
m57_13 -> m57_26  [key=2, style=dotted];
m57_14 -> m57_3  [key=0, style=bold, color=blue];
m57_58 -> m57_59  [key=0, style=solid];
m57_5 -> m57_6  [key=0, style=solid];
m57_5 -> m57_7  [key=2, style=dotted];
m57_5 -> m57_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_9 -> m57_10  [key=0, style=solid];
m57_9 -> m57_11  [key=2, style=dotted];
m57_4 -> m57_5  [key=0, style=solid];
m57_4 -> m57_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m57_6 -> m57_4  [key=0, style=bold, color=blue];
m57_8 -> m57_9  [key=0, style=solid];
m57_10 -> m57_8  [key=0, style=bold, color=blue];
m57_36 -> m57_37  [key=0, style=solid];
m57_36 -> m57_21  [key=2, style=dotted];
m57_36 -> m57_22  [key=2, style=dotted];
m57_39 -> m57_40  [key=0, style=solid];
m57_39 -> m57_41  [key=2, style=dotted];
m57_39 -> m57_42  [key=2, style=dotted];
m57_39 -> m57_43  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_44 -> m57_45  [key=0, style=solid];
m57_44 -> m57_21  [key=2, style=dotted];
m57_44 -> m57_22  [key=2, style=dotted];
m57_35 -> m57_36  [key=0, style=solid];
m57_38 -> m57_39  [key=0, style=solid];
m57_46 -> m57_47  [key=0, style=solid];
m57_37 -> m57_35  [key=0, style=bold, color=blue];
m57_40 -> m57_38  [key=0, style=bold, color=blue];
m57_43 -> m57_44  [key=0, style=solid];
m57_45 -> m57_43  [key=0, style=bold, color=blue];
m57_47 -> m57_48  [key=0, style=solid];
m57_48 -> m57_46  [key=0, style=bold, color=blue];
m57_56 -> m57_57  [key=0, style=solid];
m57_56 -> m57_22  [key=2, style=dotted];
m57_55 -> m57_56  [key=0, style=solid];
m57_57 -> m57_55  [key=0, style=bold, color=blue];
m57_59 -> m57_60  [key=0, style=solid];
m57_59 -> m57_61  [key=2, style=dotted];
m57_60 -> m57_58  [key=0, style=bold, color=blue];
m57_0 -> m57_1  [key=0, style=solid];
m57_0 -> m57_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m57_0 -> m57_9  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m57_1 -> m57_2  [key=0, style=solid];
m57_1 -> m57_3  [key=2, style=dotted];
m57_1 -> m57_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_2 -> m57_0  [key=0, style=bold, color=blue];
m57_26 -> m57_27  [key=0, style=solid];
m57_26 -> m57_36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m57_26 -> m57_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m57_26 -> m57_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m57_27 -> m57_28  [key=0, style=solid];
m57_27 -> m57_29  [key=2, style=dotted];
m57_27 -> m57_23  [key=2, style=dotted];
m57_27 -> m57_30  [key=2, style=dotted];
m57_27 -> m57_17  [key=2, style=dotted];
m57_27 -> m57_31  [key=2, style=dotted];
m57_27 -> m57_21  [key=2, style=dotted];
m57_27 -> m57_32  [key=2, style=dotted];
m57_27 -> m57_33  [key=2, style=dotted];
m57_27 -> m57_34  [key=2, style=dotted];
m57_27 -> m57_35  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_27 -> m57_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_27 -> m57_46  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m57_28 -> m57_26  [key=0, style=bold, color=blue];
m57_62 -> m57_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m57_62 -> m57_9  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m57_63 -> m57_9  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m57_64 -> m57_36  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m57_64 -> m57_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m57_64 -> m57_44  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m57_65 -> m57_36  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m57_65 -> m57_39  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m57_65 -> m57_44  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m57_66 -> m57_39  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>"];
m57_67 -> m57_56  [key=1, style=dashed, color=darkseagreen4, label=string];
m57_68 -> m57_56  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m58_37 -> m58_38  [key=0, style=solid];
m58_38 -> m58_39  [key=0, style=solid];
m58_39 -> m58_37  [key=0, style=bold, color=blue];
m58_34 -> m58_35  [key=0, style=solid];
m58_35 -> m58_36  [key=0, style=solid];
m58_36 -> m58_34  [key=0, style=bold, color=blue];
m58_0 -> m58_1  [key=0, style=solid];
m58_0 -> m58_2  [key=1, style=dashed, color=darkseagreen4, label=string];
m58_1 -> m58_2  [key=0, style=solid];
m58_2 -> m58_3  [key=0, style=solid];
m58_3 -> m58_0  [key=0, style=bold, color=blue];
m58_21 -> m58_28  [key=0, style=solid];
m58_21 -> m58_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m58_21 -> m58_16  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.Token other"];
m58_21 -> m58_29  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m58_28 -> m58_29  [key=0, style=solid];
m58_28 -> m58_30  [key=0, style=solid];
m58_30 -> m58_31  [key=0, style=solid];
m58_30 -> m58_32  [key=2, style=dotted];
m58_30 -> m58_33  [key=2, style=dotted];
m58_29 -> m58_31  [key=0, style=solid];
m58_31 -> m58_21  [key=0, style=bold, color=blue];
m58_4 -> m58_5  [key=0, style=solid];
m58_4 -> m58_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m58_5 -> m58_6  [key=0, style=solid];
m58_5 -> m58_7  [key=0, style=solid];
m58_7 -> m58_8  [key=0, style=solid];
m58_7 -> m58_0  [key=2, style=dotted];
m58_6 -> m58_8  [key=0, style=solid];
m58_6 -> m58_9  [key=2, style=dotted];
m58_8 -> m58_4  [key=0, style=bold, color=blue];
m58_23 -> m58_24  [key=0, style=solid];
m58_24 -> m58_25  [key=0, style=solid];
m58_24 -> m58_26  [key=2, style=dotted];
m58_24 -> m58_27  [key=2, style=dotted];
m58_25 -> m58_23  [key=0, style=bold, color=blue];
m58_10 -> m58_11  [key=0, style=solid];
m58_10 -> m58_13  [key=1, style=dashed, color=darkseagreen4, label=string];
m58_11 -> m58_12  [key=0, style=solid];
m58_11 -> m58_13  [key=0, style=solid];
m58_13 -> m58_14  [key=0, style=solid];
m58_13 -> m58_0  [key=2, style=dotted];
m58_12 -> m58_14  [key=0, style=solid];
m58_12 -> m58_9  [key=2, style=dotted];
m58_14 -> m58_10  [key=0, style=bold, color=blue];
m58_15 -> m58_16  [key=0, style=solid];
m58_15 -> m58_19  [key=1, style=dashed, color=darkseagreen4, label=object];
m58_15 -> m58_21  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m58_16 -> m58_17  [key=0, style=solid];
m58_16 -> m58_18  [key=1, style=dashed, color=darkseagreen4, label=other];
m58_19 -> m58_20  [key=0, style=solid];
m58_19 -> m58_22  [key=2, style=dotted];
m58_17 -> m58_18  [key=0, style=solid];
m58_17 -> m58_19  [key=0, style=solid];
m58_18 -> m58_20  [key=0, style=solid];
m58_18 -> m58_21  [key=2, style=dotted];
m58_20 -> m58_15  [key=0, style=bold, color=blue];
m58_40 -> m58_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m58_40 -> m58_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m58_40 -> m58_18  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m58_40 -> m58_19  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m58_40 -> m58_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m58_40 -> m58_30  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m59_0 -> m59_1  [key=0, style=solid];
m59_1 -> m59_0  [key=0, style=bold, color=blue];
m59_7 -> m59_8  [key=0, style=solid];
m59_8 -> m59_9  [key=0, style=solid];
m59_9 -> m59_7  [key=0, style=bold, color=blue];
m59_2 -> m59_3  [key=0, style=solid];
m59_3 -> m59_2  [key=0, style=bold, color=blue];
m59_4 -> m59_5  [key=0, style=solid];
m59_5 -> m59_6  [key=0, style=solid];
m59_6 -> m59_4  [key=0, style=bold, color=blue];
m59_10 -> m59_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m59_10 -> m59_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionListAttribute"];
m62_4 -> m62_5  [key=0, style=solid];
m62_4 -> m62_6  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m62_4 -> m62_7  [key=1, style=dashed, color=darkseagreen4, label=object];
m62_5 -> m62_6  [key=0, style=solid];
m62_6 -> m62_7  [key=0, style=solid];
m62_6 -> m62_9  [key=2, style=dotted];
m62_7 -> m62_8  [key=0, style=solid];
m62_7 -> m62_10  [key=2, style=dotted];
m62_8 -> m62_4  [key=0, style=bold, color=blue];
m62_11 -> m62_12  [key=0, style=solid];
m62_11 -> m62_13  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m62_12 -> m62_13  [key=0, style=solid];
m62_12 -> m62_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
m62_13 -> m62_14  [key=0, style=solid];
m62_13 -> m62_9  [key=2, style=dotted];
m62_14 -> m62_15  [key=0, style=solid];
m62_14 -> m62_10  [key=2, style=dotted];
m62_14 -> m62_6  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo parsingCulture"];
m62_15 -> m62_11  [key=0, style=bold, color=blue];
m62_0 -> m62_1  [key=0, style=solid];
m62_1 -> m62_2  [key=0, style=solid];
m62_1 -> m62_3  [key=2, style=dotted];
m62_2 -> m62_0  [key=0, style=bold, color=blue];
m63_19 -> m63_20  [key=0, style=solid];
m63_20 -> m63_21  [key=0, style=solid];
m63_20 -> m63_22  [key=2, style=dotted];
m63_21 -> m63_19  [key=0, style=bold, color=blue];
m63_6 -> m63_7  [key=0, style=solid];
m63_7 -> m63_6  [key=0, style=bold, color=blue];
m63_0 -> m63_1  [key=0, style=solid];
m63_1 -> m63_0  [key=0, style=bold, color=blue];
m63_22 -> m63_28  [key=0, style=solid];
m63_22 -> m63_30  [key=1, style=dashed, color=darkseagreen4, label=bool];
m63_28 -> m63_29  [key=0, style=solid];
m63_28 -> m63_30  [key=0, style=solid];
m63_30 -> m63_31  [key=0, style=solid];
m63_30 -> m63_35  [key=0, style=solid];
m63_29 -> m63_35  [key=0, style=solid];
m63_31 -> m63_32  [key=0, style=solid];
m63_31 -> m63_34  [key=0, style=solid];
m63_32 -> m63_33  [key=0, style=solid];
m63_32 -> m63_36  [key=2, style=dotted];
m63_34 -> m63_35  [key=0, style=solid];
m63_33 -> m63_34  [key=0, style=solid];
m63_35 -> m63_22  [key=0, style=bold, color=blue];
m63_2 -> m63_3  [key=0, style=solid];
m63_3 -> m63_2  [key=0, style=bold, color=blue];
m63_12 -> m63_13  [key=0, style=solid];
m63_12 -> m63_14  [key=1, style=dashed, color=darkseagreen4, label=bool];
m63_12 -> m63_15  [key=1, style=dashed, color=darkseagreen4, label="System.IO.TextWriter"];
m63_12 -> m63_16  [key=1, style=dashed, color=darkseagreen4, label=bool];
m63_13 -> m63_14  [key=0, style=solid];
m63_14 -> m63_15  [key=0, style=solid];
m63_15 -> m63_16  [key=0, style=solid];
m63_16 -> m63_17  [key=0, style=solid];
m63_17 -> m63_18  [key=0, style=solid];
m63_18 -> m63_12  [key=0, style=bold, color=blue];
m63_8 -> m63_9  [key=0, style=solid];
m63_9 -> m63_8  [key=0, style=bold, color=blue];
m63_23 -> m63_24  [key=0, style=solid];
m63_24 -> m63_25  [key=0, style=solid];
m63_24 -> m63_22  [key=2, style=dotted];
m63_25 -> m63_26  [key=0, style=solid];
m63_25 -> m63_27  [key=2, style=dotted];
m63_26 -> m63_23  [key=0, style=bold, color=blue];
m63_4 -> m63_5  [key=0, style=solid];
m63_5 -> m63_4  [key=0, style=bold, color=blue];
m63_10 -> m63_11  [key=0, style=solid];
m63_11 -> m63_10  [key=0, style=bold, color=blue];
m63_37 -> m63_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_16  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_17  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_24  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_25  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_31  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_33  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m63_37 -> m63_34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m65_0 -> m65_1  [key=0, style=solid];
m65_0 -> m65_3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m65_0 -> m65_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m65_0 -> m65_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_0 -> m65_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_1 -> m65_2  [key=0, style=solid];
m65_1 -> m65_3  [key=0, style=solid];
m65_3 -> m65_4  [key=0, style=solid];
m65_3 -> m65_5  [key=0, style=solid];
m65_5 -> m65_6  [key=0, style=solid];
m65_5 -> m65_7  [key=0, style=solid];
m65_7 -> m65_8  [key=0, style=solid];
m65_7 -> m65_11  [key=2, style=dotted];
m65_7 -> m65_12  [key=2, style=dotted];
m65_7 -> m65_13  [key=2, style=dotted];
m65_7 -> m65_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m65_7 -> m65_18  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m65_2 -> m65_9  [key=0, style=solid];
m65_2 -> m65_10  [key=2, style=dotted];
m65_4 -> m65_9  [key=0, style=solid];
m65_4 -> m65_10  [key=2, style=dotted];
m65_6 -> m65_9  [key=0, style=solid];
m65_6 -> m65_10  [key=2, style=dotted];
m65_8 -> m65_9  [key=0, style=solid];
m65_9 -> m65_0  [key=0, style=bold, color=blue];
m65_18 -> m65_19  [key=0, style=solid];
m65_15 -> m65_16  [key=0, style=solid];
m65_15 -> m65_17  [key=2, style=dotted];
m65_14 -> m65_15  [key=0, style=solid];
m65_16 -> m65_14  [key=0, style=bold, color=blue];
m65_19 -> m65_20  [key=0, style=solid];
m65_19 -> m65_21  [key=2, style=dotted];
m65_19 -> m65_22  [key=2, style=dotted];
m65_19 -> m65_23  [key=2, style=dotted];
m65_19 -> m65_24  [key=2, style=dotted];
m65_20 -> m65_18  [key=0, style=bold, color=blue];
m65_25 -> m65_15  [key=1, style=dashed, color=darkseagreen4, label=string];
m65_26 -> m65_15  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m67_0 -> m67_1  [key=0, style=solid];
m67_1 -> m67_2  [key=0, style=solid];
m67_2 -> m67_3  [key=0, style=solid];
m67_3 -> m67_4  [key=0, style=solid];
m67_4 -> m67_0  [key=0, style=bold, color=blue];
m67_5 -> m67_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m67_5 -> m67_2  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m67_5 -> m67_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ValueAttribute"];
m69_0 -> m69_1  [key=0, style=solid];
m69_1 -> m69_2  [key=0, style=solid];
m69_2 -> m69_0  [key=0, style=bold, color=blue];
m69_3 -> m69_4  [key=0, style=solid];
m69_4 -> m69_5  [key=0, style=solid];
m69_4 -> m69_0  [key=2, style=dotted];
m69_4 -> m69_6  [key=2, style=dotted];
m69_5 -> m69_3  [key=0, style=bold, color=blue];
m69_7 -> m69_1  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
m70_0 -> m70_1  [key=0, style=solid];
m70_0 -> m70_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m70_0 -> m70_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m70_0 -> m70_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m70_1 -> m70_2  [key=0, style=solid];
m70_1 -> m70_3  [key=0, style=solid];
m70_3 -> m70_4  [key=0, style=solid];
m70_3 -> m70_5  [key=0, style=solid];
m70_5 -> m70_6  [key=0, style=solid];
m70_6 -> m70_7  [key=0, style=solid];
m70_2 -> m70_7  [key=0, style=solid];
m70_2 -> m70_8  [key=2, style=dotted];
m70_4 -> m70_7  [key=0, style=solid];
m70_4 -> m70_8  [key=2, style=dotted];
m70_7 -> m70_0  [key=0, style=bold, color=blue];
m70_12 -> m70_13  [key=0, style=solid];
m70_13 -> m70_14  [key=0, style=solid];
m70_13 -> m70_15  [key=2, style=dotted];
m70_13 -> m70_16  [key=2, style=dotted];
m70_13 -> m70_9  [key=2, style=dotted];
m70_13 -> m70_17  [key=2, style=dotted];
m70_13 -> m70_13  [key=1, style=dashed, color=darkseagreen4, label=type];
m70_14 -> m70_12  [key=0, style=bold, color=blue];
m70_9 -> m70_10  [key=0, style=solid];
m70_10 -> m70_11  [key=0, style=solid];
m70_10 -> m70_0  [key=2, style=dotted];
m70_11 -> m70_9  [key=0, style=bold, color=blue];
m70_18 -> m70_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
m70_18 -> m70_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Verb"];
m71_0 -> m71_1  [key=0, style=solid];
m71_0 -> m71_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m71_1 -> m71_2  [key=0, style=solid];
m71_1 -> m71_3  [key=0, style=solid];
m71_1 -> m71_5  [key=2, style=dotted];
m71_3 -> m71_4  [key=0, style=solid];
m71_2 -> m71_4  [key=0, style=solid];
m71_2 -> m71_6  [key=2, style=dotted];
m71_4 -> m71_0  [key=0, style=bold, color=blue];
m71_7 -> m71_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.VerbAttribute"];
}
