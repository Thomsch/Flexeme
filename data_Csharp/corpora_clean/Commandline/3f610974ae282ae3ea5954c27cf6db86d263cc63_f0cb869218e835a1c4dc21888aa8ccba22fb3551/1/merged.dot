digraph  {
m1_15 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="Error.cs"];
m1_3 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", span="35-35", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_7 [label="var match = Enum.GetValues(targetEnum).Cast<Enum>().FirstOrDefault(value => string.Equals(value.Humanize(), input, StringComparison.OrdinalIgnoreCase))", span="37-37", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_8 [label="match == null && onNoMatch == OnNoMatch.ThrowsException", span="39-39", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_9 [label="throw new NoMatchFoundException(''Couldn't find any enum member that matches the string '' + input);", span="40-40", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_10 [label="return match;", span="42-42", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_11 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", span="35-35", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeToPrivate(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_4 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", span="30-30", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_5 [label="return (Enum)DehumanizeToPrivate(input, targetEnum, onNoMatch);", span="32-32", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_6 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", span="30-30", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo(string, System.Type, Humanizer.OnNoMatch)", file="Error.cs"];
m1_14 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="Error.cs"];
m1_16 [label="Entry lambda expression", span="37-37", cluster="lambda expression", file="Error.cs"];
m1_17 [label="string.Equals(value.Humanize(), input, StringComparison.OrdinalIgnoreCase)", span="37-37", cluster="lambda expression", file="Error.cs"];
m1_18 [label="Exit lambda expression", span="37-37", cluster="lambda expression", file="Error.cs"];
m1_13 [label="Entry System.Collections.IEnumerable.Cast<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.Cast<TResult>()", file="Error.cs"];
m1_12 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)", file="Error.cs"];
m1_19 [label="Entry System.Enum.Humanize()", span="15-15", cluster="System.Enum.Humanize()", file="Error.cs"];
m1_20 [label="Entry string.Equals(string, string, System.StringComparison)", span="0-0", cluster="string.Equals(string, string, System.StringComparison)", file="Error.cs"];
m1_0 [label="Entry Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", span="15-15", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", file="Error.cs"];
m1_1 [label="return (TTargetEnum)DehumanizeToPrivate(input, typeof(TTargetEnum), OnNoMatch.ThrowsException);", span="18-18", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", file="Error.cs"];
m1_2 [label="Exit Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", span="15-15", cluster="Humanizer.EnumDehumanizeExtensions.DehumanizeTo<TTargetEnum>(string)", file="Error.cs"];
m1_21 [label=string, span="", file="Error.cs"];
m4_7 [label="Entry Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", span="4-4", cluster="Humanizer.Localisation.Formatters.RussianFormatter.RussianFormatter()", file="FakeOptionsWithHelpTextEnum.cs"];
m4_11 [label="Entry Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.ArabicFormatter.ArabicFormatter()", file="FakeOptionsWithHelpTextEnum.cs"];
m4_23 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_0 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_1 [label="new RomanianFormatter()", span="16-16", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_2 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_4 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_5 [label="new RussianFormatter()", span="17-17", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_6 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_8 [label="Entry lambda expression", span="18-18", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_9 [label="new ArabicFormatter()", span="18-18", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_10 [label="Exit lambda expression", span="18-18", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_12 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_13 [label="new HebrewFormatter()", span="19-19", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_14 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_16 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_17 [label="new CzechSlovakPolishFormatter()", span="20-20", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_18 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_20 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_21 [label="new CzechSlovakPolishFormatter()", span="21-21", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_22 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_24 [label="new CzechSlovakPolishFormatter()", span="22-22", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_25 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="FakeOptionsWithHelpTextEnum.cs"];
m4_15 [label="Entry Humanizer.Localisation.Formatters.HebrewFormatter.HebrewFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.HebrewFormatter.HebrewFormatter()", file="FakeOptionsWithHelpTextEnum.cs"];
m4_19 [label="Entry Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.CzechSlovakPolishFormatter.CzechSlovakPolishFormatter()", file="FakeOptionsWithHelpTextEnum.cs"];
m4_3 [label="Entry Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", span="2-2", cluster="Humanizer.Localisation.Formatters.RomanianFormatter.RomanianFormatter()", file="FakeOptionsWithHelpTextEnum.cs"];
m5_22 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>(System.Func<TSource, bool>)", file="FakeOptionsWithSequence.cs"];
m5_20 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="FakeOptionsWithSequence.cs"];
m5_21 [label="Entry string.ToCharArray()", span="0-0", cluster="string.ToCharArray()", file="FakeOptionsWithSequence.cs"];
m5_23 [label="Entry char.IsLetterOrDigit(char)", span="0-0", cluster="char.IsLetterOrDigit(char)", file="FakeOptionsWithSequence.cs"];
m5_0 [label="Entry Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_1 [label="value == null", span="12-12", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_3 [label="value.Length == 0", span="15-15", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_4 [label="return value;", span="16-16", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_5 [label="truncationString == null || truncationString.Length > length", span="18-18", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_6 [label="return value.Substring(0, length);", span="19-19", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_8 [label="var numberOfCharactersEqualToTruncateLength = value.ToCharArray().Count(Char.IsLetterOrDigit) == length", span="23-23", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_10 [label="i < value.Length - truncationString.Length", span="25-25", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_11 [label="Char.IsLetterOrDigit(value[i])", span="27-27", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_13 [label="numberOfCharactersEqualToTruncateLength && alphaNumericalCharactersProcessed == length", span="30-30", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_14 [label="return value;", span="31-31", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_15 [label="!numberOfCharactersEqualToTruncateLength && alphaNumericalCharactersProcessed + truncationString.Length == length", span="33-33", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_16 [label="return value.Substring(0, i + 1) + truncationString;", span="34-34", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_18 [label="return value;", span="37-37", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_2 [label="return null;", span="13-13", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_7 [label="var alphaNumericalCharactersProcessed = 0", span="21-21", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_12 [label="alphaNumericalCharactersProcessed++", span="28-28", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_9 [label="var i = 0", span="25-25", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_17 [label="i++", span="25-25", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m5_19 [label="Exit Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", span="10-10", cluster="Humanizer.FixedNumberOfCharactersTruncator.Truncate(string, int, string)", file="FakeOptionsWithSequence.cs"];
m7_4 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m7_5 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", span="12-12", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize_Zero()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m7_2 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m7_3 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m7_0 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m7_1 [label="Exit Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", span="9-9", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize_Now()", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m7_6 [label="Entry Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m7_7 [label="Exit Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", span="13-13", cluster="Humanizer.Localisation.Formatters.IFormatter.TimeSpanHumanize(Humanizer.Localisation.TimeUnit, int)", file="FakeOptionsWithSequenceAndOnlyMaxConstraintAsValue.cs"];
m9_17 [label="Entry CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_18 [label="var list = ReflectionUtil.RetrievePropertyList<BaseOptionAttribute>(target)", span="77-77", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_21 [label="var map = new OptionMap(list.Count, settings)", span="82-82", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_25 [label="map.RawOptions = target", span="90-90", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_19 [label="list == null", span="78-78", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_22 [label=list, span="83-83", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_20 [label="return null;", span="80-80", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_24 [label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="87-87", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_26 [label="return map;", span="91-91", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_23 [label="pair.Left != null && pair.Right != null", span="85-85", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_27 [label="Exit CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", span="75-75", cluster="CommandLine.Internal.OptionMap.Create(object, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_49 [label="Entry CommandLine.Internal.OptionMap.SetDefaults()", span="156-156", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_50 [label="_map.Values", span="158-158", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_51 [label="option.SetDefault(RawOptions)", span="160-160", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_52 [label="Exit CommandLine.Internal.OptionMap.SetDefaults()", span="156-156", cluster="CommandLine.Internal.OptionMap.SetDefaults()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_30 [label="Entry CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_31 [label="var map = new OptionMap(verbs.Count, settings)", span="97-97", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_32 [label=verbs, span="98-98", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_34 [label="!optionInfo.HasParameterLessCtor && verb.Left.GetValue(target, null) == null", span="105-105", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_37 [label="map.RawOptions = target", span="112-112", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_36 [label="map[verb.Right.UniqueName] = optionInfo", span="110-110", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_38 [label="return map;", span="113-113", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_33 [label="var optionInfo = new OptionInfo(verb.Right, verb.Left)\r\n                {\r\n                    HasParameterLessCtor = verb.Left.PropertyType.GetConstructor(Type.EmptyTypes) != null\r\n\r\n                }", span="100-104", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_35 [label="throw new CommandLineParserException(''Type {0} must have a parameterless constructor or'' +\r\n                        '' be already initialized to be used as a verb command.''.FormatInvariant(verb.Left.PropertyType));", span="107-108", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_39 [label="Exit CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", span="94-94", cluster="CommandLine.Internal.OptionMap.Create(object, System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_42 [label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string)", span="54-54", cluster="CommandLine.CommandLineParserException.CommandLineParserException(string)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_48 [label="Entry CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="164-164", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_54 [label="bool requiredRulesAllMet = true", span="166-166", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_55 [label="_map.Values", span="167-167", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_59 [label="return requiredRulesAllMet;", span="175-175", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_56 [label="option.Required && !option.IsDefined", span="169-169", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_57 [label="SetParserStateIfNeeded(RawOptions, option, true, null)", span="171-171", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_58 [label="requiredRulesAllMet = false", span="172-172", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_60 [label="Exit CommandLine.Internal.OptionMap.EnforceRequiredRule()", span="164-164", cluster="CommandLine.Internal.OptionMap.EnforceRequiredRule()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_28 [label="Entry CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="38-38", cluster="CommandLine.Utils.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_8 [label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="58-58", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_9 [label="_settings = settings", span="63-63", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_11 [label="_names = new Dictionary<string, string>(capacity, comparer)", span="67-67", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_12 [label="_map = new Dictionary<string, OptionInfo>(capacity * 2, comparer)", span="68-68", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_14 [label="_mutuallyExclusiveSetMap = new Dictionary<string, MutuallyExclusiveInfo>(capacity, StringComparer.OrdinalIgnoreCase)", span="71-71", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_10 [label="IEqualityComparer<string> comparer =\r\n                _settings.CaseSensitive ? StringComparer.Ordinal : StringComparer.OrdinalIgnoreCase", span="65-66", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_13 [label="_settings.MutuallyExclusive", span="69-69", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_15 [label="Exit CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="58-58", cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_98 [label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_79 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_2 [label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="43-43", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_3 [label="BadOption = option", span="45-45", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_4 [label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", span="43-43", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_73 [label="Entry CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="202-202", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_74 [label="var setName = option.MutuallyExclusiveSet", span="204-204", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_76 [label="_mutuallyExclusiveSetMap.Add(setName, new MutuallyExclusiveInfo(option))", span="207-207", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_75 [label="!_mutuallyExclusiveSetMap.ContainsKey(setName)", span="205-205", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_77 [label="_mutuallyExclusiveSetMap[setName].IncrementOccurrence()", span="209-209", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_78 [label="Exit CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", span="202-202", cluster="CommandLine.Internal.OptionMap.BuildMutuallyExclusiveMap(CommandLine.Internal.OptionInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_61 [label="Entry CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="212-212", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_81 [label="var list = ReflectionUtil.RetrievePropertyList<ParserStateAttribute>(options)", span="214-214", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_85 [label="property.GetValue(options, null) == null", span="221-221", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_86 [label="property.SetValue(options, new CommandLine.ParserState(), null)", span="223-223", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_87 [label="var parserState = (IParserState)property.GetValue(options, null)", span="225-225", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_90 [label="var error = new ParsingError\r\n                {\r\n                    BadOption =\r\n                        {\r\n                            ShortName = option.ShortName,\r\n                            LongName = option.LongName\r\n                        }\r\n                }", span="230-237", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_91 [label="required != null", span="238-238", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_92 [label="error.ViolatesRequired = required.Value", span="238-238", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_93 [label="mutualExclusiveness != null", span="239-239", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_94 [label="error.ViolatesMutualExclusiveness = mutualExclusiveness.Value", span="239-239", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_82 [label="list.Count == 0", span="215-215", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_84 [label="var property = list[0].Left", span="219-219", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_83 [label="return;", span="217-217", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_88 [label="parserState == null", span="226-226", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_95 [label="parserState.Errors.Add(error)", span="240-240", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_89 [label="return;", span="228-228", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_96 [label="Exit CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", span="212-212", cluster="CommandLine.Internal.OptionMap.SetParserStateIfNeeded(object, CommandLine.Internal.OptionInfo, bool?, bool?)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_29 [label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", span="45-45", cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.BaseOptionAttribute, System.Reflection.PropertyInfo)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_44 [label="Entry CommandLine.Internal.OptionMap.EnforceRules()", span="151-151", cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_45 [label="return EnforceMutuallyExclusiveMap() && EnforceRequiredRule();", span="153-153", cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_46 [label="Exit CommandLine.Internal.OptionMap.EnforceRules()", span="151-151", cluster="CommandLine.Internal.OptionMap.EnforceRules()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_100 [label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.ICollection<T>.Add(T)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_0 [label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="41-41", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_1 [label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", span="41-41", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.MutuallyExclusiveInfo()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_40 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_47 [label="Entry CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="178-178", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_62 [label="!_settings.MutuallyExclusive", span="180-180", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_63 [label="return true;", span="182-182", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_64 [label="_map.Values", span="184-184", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_65 [label="option.IsDefined && option.MutuallyExclusiveSet != null", span="186-186", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_67 [label="_mutuallyExclusiveSetMap.Values", span="191-191", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_66 [label="BuildMutuallyExclusiveMap(option)", span="188-188", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_68 [label="info.Occurrence > 1", span="193-193", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_71 [label="return true;", span="199-199", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_69 [label="SetParserStateIfNeeded(RawOptions, info.BadOption, null, true)", span="195-195", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_70 [label="return false;", span="196-196", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_72 [label="Exit CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", span="178-178", cluster="CommandLine.Internal.OptionMap.EnforceMutuallyExclusiveMap()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_53 [label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="127-127", cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_97 [label="Entry CommandLine.ParserState.ParserState()", span="39-39", cluster="CommandLine.ParserState.ParserState()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_99 [label="Entry CommandLine.ParsingError.ParsingError()", span="36-36", cluster="CommandLine.ParsingError.ParsingError()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_43 [label="Entry string.FormatInvariant(params object[])", span="50-50", cluster="string.FormatInvariant(params object[])", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_41 [label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_80 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Add(TKey, TValue)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_5 [label="Entry CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_6 [label="++_count", span="50-50", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_7 [label="Exit CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", span="50-50", cluster="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo.IncrementOccurrence()", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_16 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.Dictionary(int, System.Collections.Generic.IEqualityComparer<TKey>)", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_101 [label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo", span="", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m9_102 [label="CommandLine.Internal.OptionMap", span="", file="FakeOptionsWithSequenceAndOnlyMinConstraintAsValue.cs"];
m10_9 [label="Entry string.Pluralize(Humanizer.Plurality)", span="170-170", cluster="string.Pluralize(Humanizer.Plurality)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_11 [label="Entry int.ToWords()", span="25-25", cluster="int.ToWords()", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_8 [label="Entry string.Singularize(Humanizer.Plurality)", span="194-194", cluster="string.Singularize(Humanizer.Plurality)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_10 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_0 [label="Entry Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_1 [label="var transformedInput = quantity == 1\r\n                ? input.Singularize(Plurality.CouldBeEither)\r\n                : input.Pluralize(Plurality.CouldBeEither)", span="27-29", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_2 [label="showQuantityAs == ShowQuantityAs.None", span="31-31", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_4 [label="showQuantityAs == ShowQuantityAs.Numeric", span="34-34", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_5 [label="return string.Format(''{0} {1}'', quantity, transformedInput);", span="35-35", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_6 [label="return string.Format(''{0} {1}'', quantity.ToWords(), transformedInput);", span="37-37", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_3 [label="return transformedInput;", span="32-32", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m10_7 [label="Exit Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", span="25-25", cluster="Humanizer.ToQuantityExtensions.ToQuantity(string, int, Humanizer.ShowQuantityAs)", file="FakeOptionsWithSequenceAndSeparator.cs"];
m12_103 [label="Entry NameInfo.cstr", span="", cluster="NameInfo.cstr", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_4 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_8 [label="return specProps =>\r\n                {\r\n                    var options = specProps\r\n                            .Where(sp => sp.Specification.IsOption())\r\n                            .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust());\r\n                    var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName);\r\n                    if (groups.Count() > 1)\r\n                    {\r\n                        return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="26-40", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_9 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", span="24-24", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceMutuallyExclusiveSet()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_53 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_6 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="71-71", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_75 [label="return specProps =>\r\n                {\r\n                    var options = specProps.Where(\r\n                        sp => sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )\r\n                    );\r\n                    if (options.Any())\r\n                    {\r\n                        return options.Select(s => new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="73-89", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_76 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRange()", span="71-71", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRange()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_73 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_107 [label="Entry CommandLine.Core.Token.IsName()", span="68-68", cluster="CommandLine.Core.Token.IsName()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_49 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_68 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_17 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_21 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_63 [label="Entry Unk.IsNothing", span="", cluster="Unk.IsNothing", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_74 [label="Entry Unk.FromSpecification", span="", cluster="Unk.FromSpecification", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_86 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_102 [label="Entry RepeatedOptionError.cstr", span="", cluster="RepeatedOptionError.cstr", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_7 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="92-92", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_91 [label="return specProps =>\r\n                {\r\n                    var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification;\r\n                    var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName };\r\n                    var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count };\r\n                    var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName));\r\n                    return errors;\r\n                };", span="94-112", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_92 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="92-92", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceSingle(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_69 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_64 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_90 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_0 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_1 [label="return new List<Func<IEnumerable<SpecificationProperty>, IEnumerable<Error>>>\r\n                {\r\n                    EnforceMutuallyExclusiveSet(),\r\n                    EnforceRequired(),\r\n                    EnforceRange(),\r\n                    EnforceSingle(tokens)\r\n                };", span="15-21", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_2 [label="Exit CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_104 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_11 [label="var options = specProps\r\n                            .Where(sp => sp.Specification.IsOption())\r\n                            .Where(sp => ((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust())", span="28-31", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_10 [label="Entry lambda expression", span="26-40", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_12 [label="var groups = options.GroupBy(g => ((OptionSpecification)g.Specification).SetName)", span="32-32", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_22 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_26 [label="Entry lambda expression", span="30-31", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_14 [label="return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)));", span="35-37", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_13 [label="groups.Count() > 1", span="33-33", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_30 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_15 [label="return Enumerable.Empty<Error>();", span="39-39", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_16 [label="Exit lambda expression", span="26-40", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_33 [label="Entry lambda expression", span="35-37", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_23 [label="sp.Specification.IsOption()", span="29-29", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_24 [label="Exit lambda expression", span="29-29", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_27 [label="((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust()", span="30-31", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_28 [label="Exit lambda expression", span="30-31", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_31 [label="((OptionSpecification)g.Specification).SetName", span="32-32", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_32 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_34 [label="new MutuallyExclusiveSetError(\r\n                                NameInfo.FromOptionSpecification((OptionSpecification)s.Specification))", span="36-37", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_35 [label="Exit lambda expression", span="35-37", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_41 [label="var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList()", span="47-51", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_42 [label="var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName))\r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList()", span="53-62", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_40 [label="Entry lambda expression", span="45-68", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_50 [label="Entry lambda expression", span="49-50", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_54 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_61 [label="sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)", span="56-58", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_43 [label="requiredButEmpty.Any()", span="63-63", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_57 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_60 [label="Entry lambda expression", span="56-58", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_65 [label="Entry lambda expression", span="60-62", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_44 [label="return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)));", span="64-65", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_45 [label="return Enumerable.Empty<Error>();", span="67-67", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_46 [label="Exit lambda expression", span="45-68", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_70 [label="Entry lambda expression", span="64-65", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_51 [label="sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required", span="49-50", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_52 [label="Exit lambda expression", span="49-50", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_55 [label="((OptionSpecification)s.Specification).SetName", span="51-51", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_56 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_58 [label="sp.Specification.IsOption()", span="55-55", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_59 [label="Exit lambda expression", span="55-55", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_62 [label="Exit lambda expression", span="56-58", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_66 [label="sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required", span="60-62", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_67 [label="Exit lambda expression", span="60-62", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_71 [label="new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))", span="64-65", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_72 [label="Exit lambda expression", span="64-65", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_78 [label="var options = specProps.Where(\r\n                        sp => sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )\r\n                    )", span="75-82", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_77 [label="Entry lambda expression", span="73-89", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_79 [label="options.Any()", span="83-83", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_83 [label="Entry lambda expression", span="76-81", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_80 [label="return options.Select(s => new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)));", span="85-86", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_81 [label="return Enumerable.Empty<Error>();", span="88-88", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_82 [label="Exit lambda expression", span="73-89", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_87 [label="Entry lambda expression", span="85-86", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_84 [label="sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="76-81", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_85 [label="Exit lambda expression", span="76-81", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_88 [label="new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))", span="85-86", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_89 [label="Exit lambda expression", span="85-86", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_95 [label="var options = from t in tokens.Where(t => t.IsName())\r\n                                  join o in specs on t.Text equals o.UniqueName() into to\r\n                                  from o in to.DefaultIfEmpty()\r\n                                  where o != null\r\n                                  select new { o.ShortName, o.LongName }", span="99-103", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_94 [label="var specs = from sp in specProps\r\n                                where sp.Specification.IsOption() && sp.Value.IsJust()\r\n                                select (OptionSpecification)sp.Specification", span="96-98", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_93 [label="Entry lambda expression", span="94-112", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_96 [label="var groups = from x in options\r\n                                 group x by x into g\r\n                                 let count = g.Count()\r\n                                 select new { Value = g.Key, Count = count }", span="104-107", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_97 [label="var errors = from y in groups\r\n                                 where y.Count > 1\r\n                                 select new RepeatedOptionError(new NameInfo(y.Value.ShortName, y.Value.LongName))", span="108-110", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_98 [label="return errors;", span="111-111", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_99 [label="Exit lambda expression", span="94-112", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_105 [label="t.IsName()", span="99-99", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_106 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_48 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_5 [label="Entry CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_38 [label="return specProps =>\r\n            {\r\n                var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList();\r\n                \r\n                var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName))\r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList();\r\n                    if (requiredButEmpty.Any()) {\r\n                        return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="45-68", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_39 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_29 [label="Entry Unk.IsJust", span="", cluster="Unk.IsJust", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_100 [label="Entry Unk.UniqueName", span="", cluster="Unk.UniqueName", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_47 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_36 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_101 [label="Entry Unk.DefaultIfEmpty", span="", cluster="Unk.DefaultIfEmpty", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_25 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_37 [label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60", cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_18 [label="Entry Unk.GroupBy", span="", cluster="Unk.GroupBy", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_19 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_108 [label=setsWithTrue, span="", file="FakeOptionsWithSequenceWithoutRange.cs"];
m12_109 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="FakeOptionsWithSequenceWithoutRange.cs"];
m13_22 [label="Entry lambda expression", span="29-29", cluster="lambda expression", file="HeadingInfo.cs"];
m13_133 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="HeadingInfo.cs"];
m13_65 [label="Entry lambda expression", span="60-62", cluster="lambda expression", file="HeadingInfo.cs"];
m13_14 [label="return options.Select(s =>\r\n                            new MutuallyExclusiveSetError(\r\n                                NameInfo.FromOptionSpecification((OptionSpecification)s.Specification)));", span="35-37", cluster="lambda expression", file="HeadingInfo.cs"];
m13_23 [label="sp.Specification.IsOption()", span="29-29", cluster="lambda expression", file="HeadingInfo.cs"];
m13_24 [label="Exit lambda expression", span="29-29", cluster="lambda expression", color=red, community=0, file="HeadingInfo.cs"];
m13_25 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="HeadingInfo.cs"];
m13_26 [label="Entry lambda expression", span="30-31", cluster="lambda expression", file="HeadingInfo.cs"];
m13_28 [label="Exit lambda expression", span="30-31", cluster="lambda expression", file="HeadingInfo.cs"];
m13_27 [label="((OptionSpecification)sp.Specification).SetName.Length > 0\r\n                                   && sp.Value.IsJust()", span="30-31", cluster="lambda expression", file="HeadingInfo.cs"];
m13_29 [label="Entry Unk.IsJust", span="", cluster="Unk.IsJust", file="HeadingInfo.cs"];
m13_78 [label="var options = specProps.Where(\r\n                        sp => sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )\r\n                    )", span="75-82", cluster="lambda expression", file="HeadingInfo.cs", color=green, community=0];
m13_103 [label="!seen.Contains(c) && nameLookup(n)", span="95-95", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_131 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HeadingInfo.cs"];
m13_4 [label="var unkTokens = (from t in tokens where t.IsName() && !nameLookup(t.Text) select t).Memorize()", span="28-28", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="HeadingInfo.cs", color=red, community=0];
m13_8 [label="Entry string.StartsWith(string, System.StringComparison)", span="0-0", cluster="string.StartsWith(string, System.StringComparison)", color=green, community=0, file="HeadingInfo.cs"];
m13_9 [label="Entry CommandLine.Core.Token.Value(string)", span="24-24", cluster="CommandLine.Core.Token.Value(string)", file="HeadingInfo.cs"];
m13_50 [label="Entry lambda expression", span="49-50", cluster="lambda expression", file="HeadingInfo.cs"];
m13_51 [label="sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required", span="49-50", cluster="lambda expression", file="HeadingInfo.cs"];
m13_52 [label="Exit lambda expression", span="49-50", cluster="lambda expression", file="HeadingInfo.cs"];
m13_55 [label="((OptionSpecification)s.Specification).SetName", span="51-51", cluster="lambda expression", file="HeadingInfo.cs"];
m13_53 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="HeadingInfo.cs"];
m13_54 [label="Entry lambda expression", span="51-51", cluster="lambda expression", file="HeadingInfo.cs"];
m13_56 [label="Exit lambda expression", span="51-51", cluster="lambda expression", file="HeadingInfo.cs"];
m13_58 [label="sp.Specification.IsOption()", span="55-55", cluster="lambda expression", file="HeadingInfo.cs"];
m13_111 [label="Entry CommandLine.Core.Token.Name(string)", span="19-19", cluster="CommandLine.Core.Token.Name(string)", file="HeadingInfo.cs"];
m13_132 [label="Entry System.Action<T>.Invoke(T)", span="0-0", cluster="System.Action<T>.Invoke(T)", file="HeadingInfo.cs"];
m13_6 [label="Exit CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_75 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", color=green, community=0, file="HeadingInfo.cs"];
m13_76 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="HeadingInfo.cs"];
m13_30 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="HeadingInfo.cs"];
m13_13 [label="groups.Count() > 1", span="33-33", cluster="lambda expression", file="HeadingInfo.cs"];
m13_32 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="HeadingInfo.cs"];
m13_107 [label="yield return Token.Value(text.Substring(seen.Count()));", span="107-107", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_68 [label="Exit lambda expression", span="54-54", cluster="lambda expression", file="HeadingInfo.cs"];
m13_17 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="HeadingInfo.cs"];
m13_15 [label="return Enumerable.Empty<Error>();", span="39-39", cluster="lambda expression", file="HeadingInfo.cs"];
m13_60 [label="Entry lambda expression", span="56-58", cluster="lambda expression", file="HeadingInfo.cs"];
m13_21 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="HeadingInfo.cs"];
m13_77 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HeadingInfo.cs"];
m13_112 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="HeadingInfo.cs"];
m13_86 [label="Entry Unk.Split", span="", cluster="Unk.Split", file="HeadingInfo.cs"];
m13_113 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="HeadingInfo.cs"];
m13_102 [label="var n = new string(c, 1)", span="94-94", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_7 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="HeadingInfo.cs"];
m13_91 [label="var text = value.Substring(1)", span="73-73", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", color=green, community=0, file="HeadingInfo.cs"];
m13_92 [label="char.IsDigit(text[0])", span="75-75", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_63 [label="Exit lambda expression", span="52-55", cluster="lambda expression", file="HeadingInfo.cs"];
m13_74 [label="Exit lambda expression", span="57-60", cluster="lambda expression", file="HeadingInfo.cs"];
m13_69 [label="Entry lambda expression", span="55-55", cluster="lambda expression", file="HeadingInfo.cs"];
m13_64 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="HeadingInfo.cs"];
m13_90 [label="value.Length > 1 || value[0] == '-' || value[1] != '-'", span="71-71", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_0 [label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="13-13", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_1 [label="var errors = new List<Error>()", span="17-17", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_2 [label="Action<Error> onError = errors.Add", span="18-18", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_70 [label="x.Item1 < 0", span="55-55", cluster="lambda expression", file="HeadingInfo.cs"];
m13_20 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="HeadingInfo.cs"];
m13_19 [label="Entry Unk.Count", span="", cluster="Unk.Count", file="HeadingInfo.cs"];
m13_37 [label="Entry CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", span="60-60", cluster="CommandLine.NameInfo.FromOptionSpecification(CommandLine.Core.OptionSpecification)", file="HeadingInfo.cs"];
m13_41 [label="var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList()", span="47-51", cluster="lambda expression", file="HeadingInfo.cs"];
m13_44 [label="return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)));", span="64-65", cluster="lambda expression", file="HeadingInfo.cs"];
m13_48 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="HeadingInfo.cs"];
m13_47 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="HeadingInfo.cs"];
m13_38 [label="return specProps =>\r\n            {\r\n                var setsWithTrue =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption()\r\n                            && sp.Value.IsJust() && sp.Specification.Required)\r\n                        .Select(s => ((OptionSpecification)s.Specification).SetName).ToList();\r\n                \r\n                var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName))\r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList();\r\n                    if (requiredButEmpty.Any()) {\r\n                        return requiredButEmpty.Select(s =>new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification)));\r\n                    }\r\n                    return Enumerable.Empty<Error>();\r\n                };", span="45-68", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", color=red, community=0, file="HeadingInfo.cs"];
m13_39 [label="Exit CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", span="43-43", cluster="CommandLine.Core.SpecificationPropertyRules.EnforceRequired()", file="HeadingInfo.cs"];
m13_42 [label="var requiredButEmpty =\r\n                    specProps\r\n                        .Where(sp => sp.Specification.IsOption())\r\n                        .Where(sp => sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName))\r\n                    .Concat(specProps\r\n                        .Where(sp => sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required)).ToList()", span="53-62", cluster="lambda expression", file="HeadingInfo.cs"];
m13_43 [label="requiredButEmpty.Any()", span="63-63", cluster="lambda expression", file="HeadingInfo.cs"];
m13_45 [label="return Enumerable.Empty<Error>();", span="67-67", cluster="lambda expression", file="HeadingInfo.cs"];
m13_46 [label="Exit lambda expression", span="45-68", cluster="lambda expression", file="HeadingInfo.cs"];
m13_49 [label="Exit lambda expression", span="41-41", cluster="lambda expression", file="HeadingInfo.cs"];
m13_62 [label="Exit lambda expression", span="56-58", cluster="lambda expression", file="HeadingInfo.cs"];
m13_61 [label="sp.Value.IsNothing()\r\n                            && sp.Specification.Required\r\n                            && !setsWithTrue.Contains(((OptionSpecification)sp.Specification).SetName)", span="56-58", cluster="lambda expression", file="HeadingInfo.cs"];
m13_73 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="283-283", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HeadingInfo.cs"];
m13_72 [label="Exit lambda expression", span="64-65", cluster="lambda expression", file="HeadingInfo.cs"];
m13_87 [label="Entry lambda expression", span="85-86", cluster="lambda expression", file="HeadingInfo.cs"];
m13_67 [label="Exit lambda expression", span="60-62", cluster="lambda expression", file="HeadingInfo.cs"];
m13_66 [label="sp.Specification.IsValue()\r\n                            && sp.Value.IsNothing()\r\n                            && sp.Specification.Required", span="60-62", cluster="lambda expression", file="HeadingInfo.cs"];
m13_71 [label="new MissingRequiredOptionError(\r\n                            NameInfo.FromSpecification(s.Specification))", span="64-65", cluster="lambda expression", file="HeadingInfo.cs"];
m13_81 [label="return Enumerable.Empty<Error>();", span="88-88", cluster="lambda expression", file="HeadingInfo.cs"];
m13_84 [label="sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Value.IsJust()\r\n                        && (\r\n                            (sp.Specification.Min.IsJust() && ((Array)sp.Value.FromJust()).Length < sp.Specification.Min.FromJust())\r\n                            || (sp.Specification.Max.IsJust() && ((Array)sp.Value.FromJust()).Length > sp.Specification.Max.FromJust())\r\n                        )", span="76-81", cluster="lambda expression", file="HeadingInfo.cs", color=green, community=0];
m13_80 [label="return options.Select(s => new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification)));", span="85-86", cluster="lambda expression", file="HeadingInfo.cs"];
m13_83 [label="Entry lambda expression", span="59-59", cluster="lambda expression", file="HeadingInfo.cs"];
m13_82 [label="Exit lambda expression", span="73-89", cluster="lambda expression", file="HeadingInfo.cs"];
m13_85 [label="Exit lambda expression", span="59-59", cluster="lambda expression", file="HeadingInfo.cs"];
m13_88 [label="new SequenceOutOfRangeError(\r\n                            NameInfo.FromSpecification(s.Specification))", span="85-86", cluster="lambda expression", file="HeadingInfo.cs"];
m13_89 [label="Exit lambda expression", span="85-86", cluster="lambda expression", file="HeadingInfo.cs"];
m13_11 [label="Entry CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", span="67-67", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_79 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="HeadingInfo.cs"];
m13_94 [label="yield break;", span="78-78", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_95 [label="value.Length == 2", span="81-81", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", color=green, community=0, file="HeadingInfo.cs"];
m13_96 [label="yield return Token.Name(text);", span="83-83", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_104 [label="seen.Add(c)", span="97-97", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_105 [label="yield return Token.Name(n);", span="98-98", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", color=green, community=0, file="HeadingInfo.cs"];
m13_106 [label="seen.Count() < text.Length", span="105-105", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_12 [label="Entry Unk.Memorize", span="", cluster="Unk.Memorize", file="HeadingInfo.cs"];
m13_93 [label="yield return Token.Value(value);", span="77-77", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_97 [label="yield break;", span="84-84", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs", color=red, community=0];
m13_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="HeadingInfo.cs"];
m13_40 [label="Entry string.EqualsOrdinal(string)", span="35-35", cluster="string.EqualsOrdinal(string)", file="HeadingInfo.cs"];
m13_57 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", span="851-851", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.SucceededWith<TSuccess, TMessage>()", file="HeadingInfo.cs"];
m13_99 [label="yield return Token.Name(first);", span="88-88", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_98 [label="var first = text.Substring(0, 1)", span="87-87", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs", color=red, community=0];
m13_31 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="HeadingInfo.cs"];
m13_35 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="HeadingInfo.cs"];
m13_34 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="HeadingInfo.cs"];
m13_59 [label="Entry Unk.SelectMany", span="", cluster="Unk.SelectMany", file="HeadingInfo.cs"];
m13_10 [label="Entry CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_117 [label="value.Length > 2 && value.StartsWith(''--'', StringComparison.Ordinal)", span="116-116", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_121 [label="yield return Token.Name(text);", span="122-122", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_122 [label="yield break;", span="123-123", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_125 [label="yield break;", span="128-128", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_127 [label="yield return Token.Name(parts[0]);", span="131-131", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_128 [label="yield return Token.Value(parts[1]);", span="132-132", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_118 [label="var text = value.Substring(2)", span="118-118", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_124 [label="onError(new BadFormatTokenError(value))", span="127-127", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_119 [label="var equalIndex = text.IndexOf('=')", span="119-119", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_126 [label="var parts = text.Split('=')", span="130-130", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_120 [label="equalIndex <= 0", span="120-120", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_123 [label="equalIndex == 1", span="125-125", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_129 [label="Exit CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", span="112-112", cluster="CommandLine.Core.Tokenizer.TokenizeLongName(string, System.Action<CommandLine.Error>)", file="HeadingInfo.cs"];
m13_36 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", span="294-294", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo)", file="HeadingInfo.cs"];
m13_5 [label="return Result.Succeed(tokens.Where(x => !unkTokens.Contains(x)), errors.Concat(from t in unkTokens select new UnknownOptionError(t.Text)));", span="30-30", cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_130 [label="Entry string.IndexOf(char)", span="0-0", cluster="string.IndexOf(char)", file="HeadingInfo.cs"];
m13_3 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", color=red, community=0, file="HeadingInfo.cs"];
m13_100 [label="var seen = new List<char> { first[0] }", span="90-90", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_101 [label="text.Substring(1)", span="92-92", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_115 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="HeadingInfo.cs"];
m13_110 [label="Entry char.IsDigit(char)", span="0-0", cluster="char.IsDigit(char)", file="HeadingInfo.cs"];
m13_16 [label="Entry UnknownOptionError.cstr", span="", cluster="UnknownOptionError.cstr", file="HeadingInfo.cs"];
m13_116 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="HeadingInfo.cs"];
m13_18 [label="Entry Unk.Succeed", span="", cluster="Unk.Succeed", file="HeadingInfo.cs"];
m13_108 [label=setsWithTrue, span="", cluster="CommandLine.Core.Tokenizer.TokenizeShortName(string, System.Func<string, bool>)", file="HeadingInfo.cs"];
m13_114 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="HeadingInfo.cs"];
m13_109 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", cluster="string.Substring(int)", file="HeadingInfo.cs"];
m13_134 [label=unkTokens, span="", file="HeadingInfo.cs"];
m13_135 [label=values, span="", file="HeadingInfo.cs"];
m13_136 [label="System.Func<string, CSharpx.Maybe<char>>", span="", file="HeadingInfo.cs"];
m13_137 [label=int, span="", file="HeadingInfo.cs"];
m13_138 [label=replaces, span="", file="HeadingInfo.cs"];
m13_139 [label=int, span="", file="HeadingInfo.cs"];
m13_140 [label="CommandLine.Core.Token", span="", file="HeadingInfo.cs"];
m14_8 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="HelpText.cs"];
m14_9 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="HelpText.cs"];
m14_2 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="HelpText.cs"];
m14_3 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="HelpText.cs"];
m14_6 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="HelpText.cs"];
m14_7 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="HelpText.cs"];
m14_0 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="HelpText.cs"];
m14_1 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="HelpText.cs"];
m14_4 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="HelpText.cs"];
m14_5 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="HelpText.cs"];
m17_75 [label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="115-115", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooser.cs"];
m17_76 [label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="117-121", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooser.cs"];
m17_77 [label="return type != typeof(object) ? isMutable() : true;", span="122-122", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooser.cs"];
m17_78 [label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="115-115", cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="InstanceChooser.cs"];
m17_85 [label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="InstanceChooser.cs"];
m17_0 [label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="14-14", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceChooser.cs"];
m17_1 [label="return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="16-22", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceChooser.cs", color=green, community=0];
m17_2 [label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="14-14", cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceChooser.cs"];
m17_3 [label="Entry System.Type.FlattenHierarchy()", span="25-25", cluster="System.Type.FlattenHierarchy()", file="InstanceChooser.cs"];
m17_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="InstanceChooser.cs"];
m17_66 [label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="106-106", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooser.cs"];
m17_68 [label="return e.Compile()();", span="112-112", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooser.cs"];
m17_67 [label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="108-111", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooser.cs"];
m17_69 [label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="106-106", cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="InstanceChooser.cs"];
m17_7 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="InstanceChooser.cs"];
m17_8 [label="Entry Unk.First", span="", cluster="Unk.First", file="InstanceChooser.cs"];
m17_4 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="InstanceChooser.cs"];
m17_36 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="InstanceChooser.cs"];
m17_86 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceChooser.cs"];
m17_74 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="InstanceChooser.cs"];
m17_9 [label="Entry Unk.selector", span="", cluster="Unk.selector", file="InstanceChooser.cs"];
m17_38 [label="Entry lambda expression", span="66-70", cluster="lambda expression", file="InstanceChooser.cs"];
m17_10 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="InstanceChooser.cs"];
m17_80 [label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="118-118", cluster="lambda expression", file="InstanceChooser.cs"];
m17_39 [label="specProp.Property.SetValue(current, selector(specProp))", span="68-68", cluster="lambda expression", file="InstanceChooser.cs"];
m17_12 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="InstanceChooser.cs"];
m17_11 [label="x.GetProperties()", span="16-16", cluster="lambda expression", file="InstanceChooser.cs"];
m17_79 [label="Entry lambda expression", span="117-121", cluster="lambda expression", file="InstanceChooser.cs"];
m17_81 [label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="119-119", cluster="lambda expression", file="InstanceChooser.cs"];
m17_87 [label="Entry lambda expression", span="118-118", cluster="lambda expression", file="InstanceChooser.cs"];
m17_82 [label="return props || fields;", span="120-120", cluster="lambda expression", file="InstanceChooser.cs"];
m17_40 [label="return instance;", span="69-69", cluster="lambda expression", file="InstanceChooser.cs"];
m17_83 [label="Exit lambda expression", span="117-121", cluster="lambda expression", file="InstanceChooser.cs"];
m17_89 [label="Exit lambda expression", span="118-118", cluster="lambda expression", file="InstanceChooser.cs"];
m17_88 [label="p.CanWrite", span="118-118", cluster="lambda expression", file="InstanceChooser.cs"];
m17_41 [label="Exit lambda expression", span="66-70", cluster="lambda expression", file="InstanceChooser.cs"];
m17_71 [label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="InstanceChooser.cs"];
m17_70 [label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0", cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="InstanceChooser.cs"];
m17_13 [label="Entry System.Type.GetProperties()", span="0-0", cluster="System.Type.GetProperties()", file="InstanceChooser.cs"];
m17_72 [label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0", cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="InstanceChooser.cs"];
m17_84 [label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0", cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="InstanceChooser.cs"];
m17_5 [label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0", cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="InstanceChooser.cs"];
m17_37 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate", file="InstanceChooser.cs"];
m17_33 [label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="58-58", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceChooser.cs"];
m17_34 [label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="64-70", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceChooser.cs"];
m17_35 [label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="58-58", cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="InstanceChooser.cs"];
m17_42 [label="Entry Unk.SetValue", span="", cluster="Unk.SetValue", file="InstanceChooser.cs"];
m17_73 [label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0", cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="InstanceChooser.cs"];
m17_117 [label="System.Type", span="", file="InstanceChooser.cs"];
m17_115 [label="System.Func<CommandLine.Core.SpecificationProperty, object>", span="", file="InstanceChooser.cs"];
m17_116 [label=T, span="", file="InstanceChooser.cs"];
m20_54 [label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="33-33", cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="MultiLineTextAttribute.cs"];
m20_38 [label="Entry Unk.ThrowingValidate", span="", cluster="Unk.ThrowingValidate", file="MultiLineTextAttribute.cs"];
m20_3 [label="this.nextValue = nextValue", span="17-17", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="MultiLineTextAttribute.cs"];
m20_33 [label="return ParserResult.Create(\r\n                ParserResultType.Options,\r\n                instance,\r\n                tokenizerResult.Errors\r\n                    .Concat(missingValueErrors)\r\n                    .Concat(optionSpecProps.Errors)\r\n                    .Concat(valueSpecProps.Errors)\r\n                    .Concat(validationErrors));", span="98-105", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", color=green, community=0, file="MultiLineTextAttribute.cs"];
m20_24 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="57-57", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_27 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="65-69", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_28 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="71-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_29 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         NameInfo.FromOptionSpecification(optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer))))", span="76-78", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_31 [label="instance = instance\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsJust(),\r\n                    sp => sp.Value.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                    sp => sp.Specification.DefaultValue.FromJust())\r\n                .SetProperties(specPropsWithValue,\r\n                    sp => sp.Value.IsNothing()\r\n                        && sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing(),\r\n                    sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="82-93", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_32 [label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="95-96", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_22 [label="arguments.Any() && nameComparer.Equals(''--help'', arguments.First())", span="49-49", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_21 [label="var optionSpecs = (from pt in specProps select pt.Specification)\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="45-47", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_25 [label="var tokens = tokenizerResult.Value", span="59-59", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_26 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer))", span="61-63", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_20 [label="out CommandLine.Core.TypeDescriptor", span="", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_30 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="80-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_19 [label="Exit lambda expression", span="47-47", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_23 [label="return ParserResult.Create(\r\n                    ParserResultType.Options,\r\n                    instance,\r\n                    new[] { new HelpRequestedError() });", span="51-54", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_34 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="33-33", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_10 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="MultiLineTextAttribute.cs"];
m20_79 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="MultiLineTextAttribute.cs"];
m20_46 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="12-12", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", file="MultiLineTextAttribute.cs"];
m20_72 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_83 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="MultiLineTextAttribute.cs"];
m20_98 [label="Entry CommandLine.Infrastructure.Maybe<T>.MatchNothing()", span="26-26", cluster="CommandLine.Infrastructure.Maybe<T>.MatchNothing()", file="MultiLineTextAttribute.cs"];
m20_15 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_49 [label="Entry CommandLine.Core.Specification.IsValue()", span="15-15", cluster="CommandLine.Core.Specification.IsValue()", file="MultiLineTextAttribute.cs"];
m20_56 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="MultiLineTextAttribute.cs"];
m20_16 [label="NameLookup.WithSeparator(name, optionSpecs, nameComparer)", span="25-25", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_87 [label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134", cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="MultiLineTextAttribute.cs"];
m20_64 [label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", span="21-21", cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CommandLine.Infrastructure.Maybe<object>)", file="MultiLineTextAttribute.cs"];
m20_14 [label="Exit CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", span="45-45", cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="MultiLineTextAttribute.cs"];
m20_91 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="MultiLineTextAttribute.cs"];
m20_51 [label="Entry Unk.Single", span="", cluster="Unk.Single", file="MultiLineTextAttribute.cs"];
m20_42 [label="Entry System.StringComparer.Equals(string, string)", span="0-0", cluster="System.StringComparer.Equals(string, string)", file="MultiLineTextAttribute.cs"];
m20_37 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="12-12", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="MultiLineTextAttribute.cs"];
m20_11 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="MultiLineTextAttribute.cs"];
m20_55 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="MultiLineTextAttribute.cs"];
m20_17 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_18 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="MultiLineTextAttribute.cs"];
m20_69 [label="Entry lambda expression", span="68-68", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_73 [label="Entry lambda expression", span="74-74", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_76 [label="Entry lambda expression", span="78-78", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_77 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="78-78", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_80 [label="Entry lambda expression", span="84-84", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_84 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_88 [label="Entry lambda expression", span="87-87", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_92 [label="Entry lambda expression", span="88-88", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_95 [label="Entry lambda expression", span="90-92", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_99 [label="Entry lambda expression", span="93-93", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_66 [label="TypeLookup.FindTypeDescriptor(name, optionSpecs, nameComparer)", span="63-63", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_70 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="68-68", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_74 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="74-74", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_65 [label="Entry lambda expression", span="63-63", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_59 [label="Entry lambda expression", span="42-43", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_71 [label="Exit lambda expression", span="68-68", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_75 [label="Exit lambda expression", span="74-74", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_78 [label="Exit lambda expression", span="78-78", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_82 [label="Exit lambda expression", span="84-84", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_81 [label="sp.Value.IsJust()", span="84-84", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_86 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_85 [label="sp.Value.FromJust()", span="85-85", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_90 [label="Exit lambda expression", span="87-87", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_89 [label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="87-87", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_94 [label="Exit lambda expression", span="88-88", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_93 [label="sp.Specification.DefaultValue.FromJust()", span="88-88", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_97 [label="Exit lambda expression", span="90-92", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_96 [label="sp.Value.IsNothing()\r\n                        && sp.Specification.TargetType == TargetType.Sequence\r\n                        && sp.Specification.DefaultValue.MatchNothing()", span="90-92", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_101 [label="Exit lambda expression", span="93-93", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_100 [label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="93-93", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_4 [label="Exit CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", span="13-13", cluster="CommandLine.Core.TypeDescriptor.TypeDescriptor(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="MultiLineTextAttribute.cs"];
m20_67 [label="Exit lambda expression", span="63-63", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_61 [label="Exit lambda expression", span="42-43", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_60 [label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="42-43", cluster="lambda expression", file="MultiLineTextAttribute.cs"];
m20_5 [label="Entry CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="MultiLineTextAttribute.cs"];
m20_12 [label="Entry CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", span="45-45", cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="MultiLineTextAttribute.cs"];
m20_6 [label="maximumItems == null", span="37-37", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="MultiLineTextAttribute.cs"];
m20_8 [label="return new TypeDescriptor(tag, maximumItems, next.ToMaybe());", span="39-39", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="MultiLineTextAttribute.cs"];
m20_13 [label="return TypeDescriptor.Create(descriptor.TargetType, descriptor.MaxItems, nextValue.MapMaybeOrDefault(n => n, default(TypeDescriptor)));", span="47-47", cluster="CommandLine.Core.TypeDescriptorExtensions.WithNextValue(CommandLine.Core.TypeDescriptor, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>)", file="MultiLineTextAttribute.cs"];
m20_7 [label="throw new ArgumentNullException(''maximumItems'');", span="37-37", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="MultiLineTextAttribute.cs"];
m20_41 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="MultiLineTextAttribute.cs"];
m20_36 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="MultiLineTextAttribute.cs"];
m20_35 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="MultiLineTextAttribute.cs"];
m20_50 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="261-261", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="MultiLineTextAttribute.cs"];
m20_57 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="MultiLineTextAttribute.cs"];
m20_103 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="MultiLineTextAttribute.cs"];
m20_44 [label="Entry CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="100-100", cluster="CommandLine.ParserResult.Create<T>(CommandLine.ParserResultType, T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="MultiLineTextAttribute.cs"];
m20_104 [label="Entry System.Type.CreateEmptyArray()", span="76-76", cluster="System.Type.CreateEmptyArray()", file="MultiLineTextAttribute.cs"];
m20_102 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="MultiLineTextAttribute.cs"];
m20_9 [label="Exit CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", span="35-35", cluster="CommandLine.Core.TypeDescriptor.Create(CommandLine.Core.TargetType, CSharpx.Maybe<int>, CommandLine.Core.TypeDescriptor)", file="MultiLineTextAttribute.cs"];
m20_62 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="82-82", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="MultiLineTextAttribute.cs"];
m20_47 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="MultiLineTextAttribute.cs"];
m20_63 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="MultiLineTextAttribute.cs"];
m20_39 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="MultiLineTextAttribute.cs"];
m20_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.WithSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="18-30", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="12-12", cluster="CommandLine.Core.InstanceBuilder.Build<T>(System.Func<T>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="MultiLineTextAttribute.cs"];
m20_68 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptor(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="MultiLineTextAttribute.cs"];
m20_43 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="338-338", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="MultiLineTextAttribute.cs"];
m20_52 [label="Entry Unk.FromOptionSpecification", span="", cluster="Unk.FromOptionSpecification", file="MultiLineTextAttribute.cs"];
m20_45 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="MultiLineTextAttribute.cs"];
m20_53 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="MultiLineTextAttribute.cs"];
m20_48 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="MultiLineTextAttribute.cs"];
m20_107 [label="System.StringComparer", span="", file="MultiLineTextAttribute.cs"];
m20_110 [label=token, span="", file="MultiLineTextAttribute.cs"];
m20_108 [label=optionSpecs, span="", file="MultiLineTextAttribute.cs"];
m20_109 [label="System.Globalization.CultureInfo", span="", file="MultiLineTextAttribute.cs"];
m20_105 [label="System.StringComparer", span="", file="MultiLineTextAttribute.cs"];
m20_106 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", file="MultiLineTextAttribute.cs"];
m22_6 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="71-71", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="OptionAttribute.cs"];
m22_9 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="OptionAttribute.cs"];
m22_7 [label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17", cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, int, int, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", file="OptionAttribute.cs"];
m22_0 [label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="17-17", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="OptionAttribute.cs"];
m22_1 [label="var expected = Maybe.Just(''.'')", span="20-20", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="OptionAttribute.cs"];
m22_2 [label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, -1, -1, '.', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", span="21-22", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="OptionAttribute.cs"];
m22_4 [label="expected.ShouldBeEquivalentTo(result)", span="28-28", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="OptionAttribute.cs"];
m22_3 [label="var result = NameLookup.WithSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="25-25", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="OptionAttribute.cs"];
m22_5 [label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="17-17", cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="OptionAttribute.cs"];
m22_10 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="OptionAttribute.cs"];
m22_8 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="OptionAttribute.cs"];
m25_42 [label="Entry System.Collections.Generic.List<T>.ToArray()", span="0-0", cluster="System.Collections.Generic.List<T>.ToArray()", file="OptionSpecification.cs"];
m25_44 [label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", span="92-92", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_45 [label="number == 1", span="94-94", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_47 [label="var convertedNumber = Convert(number)", span="97-97", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_46 [label="return ''premier'';", span="95-95", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_48 [label="convertedNumber.EndsWith(''s'') && !convertedNumber.EndsWith(''trois'')", span="99-99", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_49 [label="convertedNumber = convertedNumber.TrimEnd('s')", span="100-100", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_50 [label="convertedNumber.EndsWith(''cinq'')", span="101-101", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_51 [label="convertedNumber += ''u''", span="102-102", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_52 [label="convertedNumber.EndsWith(''neuf'')", span="103-103", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_53 [label="convertedNumber = convertedNumber.TrimEnd('f') + ''v''", span="104-104", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_54 [label="convertedNumber.StartsWith(''un '')", span="106-106", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_55 [label="convertedNumber = convertedNumber.Remove(0, 3)", span="107-107", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_56 [label="convertedNumber = convertedNumber.TrimEnd('e')", span="109-109", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_57 [label="convertedNumber += ''ième''", span="110-110", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_58 [label="return convertedNumber;", span="111-111", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_59 [label="Exit Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", span="92-92", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.ConvertToOrdinal(int)", file="OptionSpecification.cs"];
m25_43 [label="Entry string.Join(string, params string[])", span="0-0", cluster="string.Join(string, params string[])", file="OptionSpecification.cs"];
m25_35 [label="CommandLine.NameInfo", span="", cluster="System.Math.Abs(int)", file="OptionSpecification.cs"];
m25_38 [label="Entry string.Format(string, object, object)", span="0-0", cluster="string.Format(string, object, object)", file="OptionSpecification.cs"];
m25_41 [label="Entry System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", span="0-0", cluster="System.Collections.Generic.Dictionary<TKey, TValue>.ContainsKey(TKey)", file="OptionSpecification.cs"];
m25_61 [label="Entry string.TrimEnd(params char[])", span="0-0", cluster="string.TrimEnd(params char[])", file="OptionSpecification.cs"];
m25_29 [label="(number - 1) % 10 == 0", span="79-79", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_63 [label="Entry string.Remove(int, int)", span="0-0", cluster="string.Remove(int, int)", file="OptionSpecification.cs"];
m25_40 [label="Entry string.Format(string, params object[])", span="0-0", cluster="string.Format(string, params object[])", file="OptionSpecification.cs"];
m25_24 [label="number >= 70 && (number < 80 || number >= 90)", span="69-69", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_32 [label="parts.Add(lastPart)", span="85-85", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_30 [label="lastPart += '' et un''", span="80-80", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_31 [label="lastPart += string.Format(''-{0}'', UnitsMap[number%10])", span="82-82", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_33 [label="return string.Join('' '', parts.ToArray());", span="89-89", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_62 [label="Entry string.StartsWith(string)", span="0-0", cluster="string.StartsWith(string)", file="OptionSpecification.cs"];
m25_60 [label="Entry string.EndsWith(string)", span="0-0", cluster="string.EndsWith(string)", file="OptionSpecification.cs"];
m25_12 [label="(number / 1000) > 0", span="45-45", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_15 [label="(number / 100) > 0", span="54-54", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_13 [label="parts.Add(number/1000 == 1\r\n                    ? string.Format(''mille'')\r\n                    : string.Format(''{0} mille'', Convert(number/1000)))", span="47-49", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs", color=red, community=0];
m25_14 [label="number %= 1000", span="51-51", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_16 [label="parts.Add(number < 200 ? ''cent'' : string.Format(''{0} cent'', Convert(number/100)))", span="56-56", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_17 [label="number %= 100", span="57-57", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_34 [label="Exit Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", span="17-17", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_36 [label="Entry string.Format(string, object)", span="0-0", cluster="string.Format(string, object)", file="OptionSpecification.cs"];
m25_39 [label="Entry System.Collections.Generic.List<T>.Add(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Add(T)", file="OptionSpecification.cs"];
m25_37 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="OptionSpecification.cs"];
m25_26 [label="lastPart = string.Format(''{0}-{1}'', TensMap[baseNumber/10], Convert(number - baseNumber))", span="72-72", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_27 [label="lastPart = TensMap[number/10]", span="76-76", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_28 [label="(number%10) > 0", span="77-77", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_0 [label="Entry Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", span="17-17", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_1 [label="number == 0", span="19-19", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_3 [label="number < 0", span="22-22", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_5 [label="var parts = new List<string>()", span="25-25", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_6 [label="(number / 1000000000) > 0", span="27-27", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_2 [label="return UnitsMap[0];", span="20-20", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_4 [label="return string.Format(''moins {0}'', Convert(Math.Abs(number)));", span="23-23", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_7 [label="parts.Add(string.Format(''{0} milliard{1}'',\r\n                    Convert(number/1000000000),\r\n                    number/1000000000 == 1 ? '''' : ''s''))", span="29-31", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs", color=red, community=0];
m25_25 [label="int baseNumber = number < 80 ? 60 : 80", span="71-71", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_9 [label="(number / 1000000) > 0", span="36-36", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_10 [label="parts.Add(string.Format(''{0} million{1}'',\r\n                    Convert(number/1000000),\r\n                    number/1000000 == 1 ? '''' : ''s''))", span="38-40", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", color=green, community=0, file="OptionSpecification.cs"];
m25_11 [label="number %= 1000000", span="42-42", cluster="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter.Convert(int)", file="OptionSpecification.cs"];
m25_8 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="OptionSpecification.cs"];
m25_18 [label="Entry CommandLine.NameInfo.Equals(object)", span="83-83", cluster="CommandLine.NameInfo.Equals(object)", file="OptionSpecification.cs"];
m25_19 [label="var other = obj as NameInfo", span="85-85", cluster="CommandLine.NameInfo.Equals(object)", file="OptionSpecification.cs"];
m25_20 [label="other != null", span="86-86", cluster="CommandLine.NameInfo.Equals(object)", color=red, community=0, file="OptionSpecification.cs"];
m25_21 [label="return Equals(other);", span="88-88", cluster="CommandLine.NameInfo.Equals(object)", file="OptionSpecification.cs"];
m25_22 [label="return base.Equals(obj);", span="91-91", cluster="CommandLine.NameInfo.Equals(object)", file="OptionSpecification.cs"];
m25_23 [label="Exit CommandLine.NameInfo.Equals(object)", span="83-83", cluster="CommandLine.NameInfo.Equals(object)", color=red, community=0, file="OptionSpecification.cs"];
m25_64 [label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter", span="", file="OptionSpecification.cs"];
m26_15 [label="Entry CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="29-29", cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="Parser.cs"];
m26_16 [label="return new string(' ', value);", span="31-31", cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="Parser.cs"];
m26_17 [label="Exit CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="29-29", cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="Parser.cs"];
m26_12 [label="Entry CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="24-24", cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="Parser.cs"];
m26_13 [label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="26-26", cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="Parser.cs"];
m26_14 [label="Exit CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="24-24", cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="Parser.cs"];
m26_3 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="Parser.cs"];
m26_21 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="Parser.cs"];
m26_7 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="Parser.cs"];
m26_18 [label="Entry CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="34-34", cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="Parser.cs"];
m26_19 [label="return string.CompareOrdinal(strA, strB) == 0;", span="36-36", cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="Parser.cs"];
m26_20 [label="Exit CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="34-34", cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="Parser.cs"];
m26_22 [label="Entry CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="39-39", cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="Parser.cs"];
m26_23 [label="return value == null ? 0 : value.Length;", span="41-41", cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", color=red, community=0, file="Parser.cs"];
m26_24 [label="Exit CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="39-39", cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="Parser.cs"];
m26_8 [label="Entry CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="19-19", cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="Parser.cs"];
m26_9 [label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="21-21", cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="Parser.cs"];
m26_10 [label="Exit CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="19-19", cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="Parser.cs"];
m26_0 [label="Entry CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="9-9", cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="Parser.cs"];
m26_1 [label="return new string(c, 1);", span="11-11", cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="Parser.cs"];
m26_2 [label="Exit CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="9-9", cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="Parser.cs"];
m26_4 [label="Entry CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="14-14", cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="Parser.cs"];
m26_5 [label="return Convert.ToString(value, CultureInfo.InvariantCulture);", span="16-16", cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="Parser.cs"];
m26_6 [label="Exit CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="14-14", cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="Parser.cs"];
m26_11 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="Parser.cs"];
m27_9 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)", file="ParserExtensions.cs"];
m27_0 [label="Entry Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_1 [label="value == null", span="9-9", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_3 [label="value.Length == 0", span="12-12", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_4 [label="return value;", span="13-13", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_5 [label="truncationString == null || truncationString.Length > length", span="15-15", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_6 [label="return value.Substring(0, length);", span="16-16", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_7 [label="return value.Length > length ? value.Substring(0, length - truncationString.Length) + truncationString : value;", span="18-18", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_2 [label="return null;", span="10-10", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m27_8 [label="Exit Humanizer.FixedLengthTruncator.Truncate(string, int, string)", span="7-7", cluster="Humanizer.FixedLengthTruncator.Truncate(string, int, string)", file="ParserExtensions.cs"];
m28_10 [label="Entry CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", span="52-52", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_11 [label=c, span="54-54", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", color=green, community=0, file="ParserResult.cs"];
m28_12 [label="'\xD'", span="56-56", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_17 [label="return false;", span="63-63", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_13 [label="'\xA'", span="57-57", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_16 [label="return true;", span="60-60", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_14 [label="'\x2028'", span="58-58", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_15 [label="'\x2029'", span="59-59", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_18 [label="Exit CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", span="52-52", cluster="CommandLine.Extensions.CharExtensions.IsLineTerminator(char)", file="ParserResult.cs"];
m28_9 [label="Entry char.IsWhiteSpace(char)", span="0-0", cluster="char.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_0 [label="Entry CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", span="35-35", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_3 [label="'\v'", span="41-41", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", color=green, community=0, file="ParserResult.cs"];
m28_2 [label="'\f'", span="40-40", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_4 [label="' '", span="42-42", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_1 [label=c, span="37-37", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_5 [label="'\t'", span="43-43", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_7 [label="return c > 127 && char.IsWhiteSpace(c);", span="48-48", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_6 [label="return true;", span="44-44", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m28_8 [label="Exit CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", span="35-35", cluster="CommandLine.Extensions.CharExtensions.IsWhiteSpace(char)", file="ParserResult.cs"];
m29_4 [label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="37-37", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_30 [label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture)", span="39-39", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_32 [label="return result.ToMaybe();", span="42-42", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_31 [label="result.Match((_,__) => { }, e => e.First().RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) }))", span="40-41", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_33 [label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", span="37-37", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_34 [label="Entry CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="45-45", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_44 [label="Func<object> changeType = () =>\r\n            {\r\n                Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (value == null) ? empty() : withValue();\r\n                };\r\n\r\n                return value.IsBooleanString()\r\n                    ? value.ToBoolean() : conversionType.IsEnum\r\n                        ? value.ToEnum(conversionType) : safeChangeType();\r\n            }", span="47-75", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="ParserSettings.cs"];
m29_45 [label="Func<object> makeType = () =>\r\n            {\r\n                try\r\n                {\r\n                    var ctor = conversionType.GetConstructor(new[] { typeof(string) });\r\n                    return ctor.Invoke(new object[] { value });\r\n                }\r\n                catch (Exception)\r\n                {\r\n                    throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');\r\n                }\r\n            }", span="77-88", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_46 [label="return Result.Try(\r\n                conversionType.IsPrimitiveEx() || ReflectionHelper.IsFSharpOptionType(conversionType)\r\n                    ? changeType\r\n                    : makeType);", span="90-93", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="ParserSettings.cs"];
m29_47 [label="Exit CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", span="45-45", cluster="CommandLine.Core.TypeConverter.ChangeTypeScalarImpl(string, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_36 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", span="25-25", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", file="ParserSettings.cs"];
m29_0 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_1 [label="return scalar\r\n                ? ChangeTypeScalar(values.Single(), conversionType, conversionCulture)\r\n                : ChangeTypeSequence(values, conversionType, conversionCulture);", span="16-18", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_2 [label="Exit CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_50 [label="Entry RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", span="210-210", cluster="RailwaySharp.ErrorHandling.Result.Try<TSuccess>(System.Func<TSuccess>)", file="ParserSettings.cs"];
m29_101 [label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0", cluster="System.Enum.IsDefined(System.Type, object)", file="ParserSettings.cs"];
m29_13 [label="Entry System.ApplicationException.ApplicationException(string)", span="0-0", cluster="System.ApplicationException.ApplicationException(string)", file="ParserSettings.cs"];
m29_76 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="14-14", cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="ParserSettings.cs"];
m29_16 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ParserSettings.cs"];
m29_70 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", span="8-8", cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="ParserSettings.cs"];
m29_99 [label="Entry System.Enum.Parse(System.Type, string)", span="0-0", cluster="System.Enum.Parse(System.Type, string)", file="ParserSettings.cs"];
m29_71 [label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0", cluster="System.Nullable.GetUnderlyingType(System.Type)", file="ParserSettings.cs"];
m29_12 [label="Entry T.ToMaybe<T>()", span="249-249", cluster="T.ToMaybe<T>()", file="ParserSettings.cs"];
m29_58 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="ParserSettings.cs"];
m29_19 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="ParserSettings.cs"];
m29_39 [label="Entry lambda expression", span="40-41", cluster="lambda expression", file="ParserSettings.cs"];
m29_21 [label="ChangeTypeScalar(value, type, conversionCulture)", span="30-30", cluster="lambda expression", file="ParserSettings.cs"];
m29_52 [label="Func<object> safeChangeType = () =>\r\n                {\r\n                    var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType);\r\n\r\n                    Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType);\r\n\r\n                    var type = getUnderlyingType() ?? conversionType;\r\n\r\n                    Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture);\r\n\r\n                    Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null;\r\n\r\n                    return (value == null) ? empty() : withValue();\r\n                }", span="49-70", cluster="lambda expression", color=green, community=0, file="ParserSettings.cs"];
m29_51 [label="Entry lambda expression", span="47-75", cluster="lambda expression", file="ParserSettings.cs"];
m29_53 [label="return value.IsBooleanString()\r\n                    ? value.ToBoolean() : conversionType.IsEnum\r\n                        ? value.ToEnum(conversionType) : safeChangeType();", span="72-74", cluster="lambda expression", color=green, community=0, file="ParserSettings.cs"];
m29_63 [label="Func<object> withValue =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="61-65", cluster="lambda expression", color=green, community=0, file="ParserSettings.cs"];
m29_60 [label="var isFsOption = ReflectionHelper.IsFSharpOptionType(conversionType)", span="51-51", cluster="lambda expression", file="ParserSettings.cs"];
m29_62 [label="var type = getUnderlyingType() ?? conversionType", span="59-59", cluster="lambda expression", file="ParserSettings.cs"];
m29_64 [label="Func<object> empty = () => isFsOption ? FSharpOptionHelper.None(type) : null", span="67-67", cluster="lambda expression", file="ParserSettings.cs"];
m29_65 [label="return (value == null) ? empty() : withValue();", span="69-69", cluster="lambda expression", file="ParserSettings.cs"];
m29_73 [label="isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="63-65", cluster="lambda expression", color=green, community=0, file="ParserSettings.cs"];
m29_72 [label="Entry lambda expression", span="62-65", cluster="lambda expression", file="ParserSettings.cs"];
m29_74 [label="Exit lambda expression", span="62-65", cluster="lambda expression", file="ParserSettings.cs"];
m29_54 [label="Exit lambda expression", span="47-75", cluster="lambda expression", file="ParserSettings.cs"];
m29_20 [label="Entry lambda expression", span="30-30", cluster="lambda expression", file="ParserSettings.cs"];
m29_22 [label="Exit lambda expression", span="30-30", cluster="lambda expression", file="ParserSettings.cs"];
m29_23 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="ParserSettings.cs"];
m29_27 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="ParserSettings.cs"];
m29_61 [label="Func<Type> getUnderlyingType =\r\n                        () =>\r\n                            isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="53-57", cluster="lambda expression", file="ParserSettings.cs"];
m29_68 [label="isFsOption\r\n                                ? FSharpOptionHelper.GetUnderlyingType(conversionType)\r\n                                : Nullable.GetUnderlyingType(conversionType)", span="55-57", cluster="lambda expression", file="ParserSettings.cs"];
m29_82 [label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="81-81", cluster="lambda expression", file="ParserSettings.cs"];
m29_83 [label="return ctor.Invoke(new object[] { value });", span="82-82", cluster="lambda expression", file="ParserSettings.cs"];
m29_59 [label="Entry lambda expression", span="49-70", cluster="lambda expression", file="ParserSettings.cs"];
m29_78 [label="isFsOption ? FSharpOptionHelper.None(type) : null", span="67-67", cluster="lambda expression", file="ParserSettings.cs"];
m29_66 [label="Exit lambda expression", span="49-70", cluster="lambda expression", file="ParserSettings.cs"];
m29_25 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="ParserSettings.cs"];
m29_24 [label="a.MatchNothing()", span="32-32", cluster="lambda expression", file="ParserSettings.cs"];
m29_29 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="ParserSettings.cs"];
m29_28 [label="((Just<object>)c).Value", span="34-34", cluster="lambda expression", file="ParserSettings.cs"];
m29_67 [label="Entry lambda expression", span="54-57", cluster="lambda expression", file="ParserSettings.cs"];
m29_69 [label="Exit lambda expression", span="54-57", cluster="lambda expression", file="ParserSettings.cs"];
m29_81 [label="Entry lambda expression", span="77-88", cluster="lambda expression", file="ParserSettings.cs"];
m29_86 [label="Exit lambda expression", span="77-88", cluster="lambda expression", file="ParserSettings.cs"];
m29_77 [label="Entry lambda expression", span="67-67", cluster="lambda expression", file="ParserSettings.cs"];
m29_79 [label="Exit lambda expression", span="67-67", cluster="lambda expression", file="ParserSettings.cs"];
m29_37 [label="Entry lambda expression", span="40-40", cluster="lambda expression", file="ParserSettings.cs"];
m29_85 [label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="86-86", cluster="lambda expression", file="ParserSettings.cs"];
m29_38 [label="Exit lambda expression", span="40-40", cluster="lambda expression", file="ParserSettings.cs"];
m29_40 [label="e.First().RethrowWhenAbsentIn(\r\n                new[] { typeof(InvalidCastException), typeof(FormatException), typeof(OverflowException) })", span="40-41", cluster="lambda expression", file="ParserSettings.cs"];
m29_84 [label=Exception, span="84-84", cluster="lambda expression", file="ParserSettings.cs"];
m29_41 [label="Exit lambda expression", span="40-41", cluster="lambda expression", file="ParserSettings.cs"];
m29_42 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ParserSettings.cs"];
m29_75 [label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0", cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="ParserSettings.cs"];
m29_3 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ParserSettings.cs"];
m29_57 [label="Entry string.ToEnum(System.Type)", span="96-96", cluster="string.ToEnum(System.Type)", file="ParserSettings.cs"];
m29_49 [label="Entry CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", span="35-35", cluster="CommandLine.Infrastructure.ReflectionHelper.IsFSharpOptionType(System.Type)", file="ParserSettings.cs"];
m29_48 [label="Entry System.Type.IsPrimitiveEx()", span="209-209", cluster="System.Type.IsPrimitiveEx()", file="ParserSettings.cs"];
m29_5 [label="Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="21-21", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_6 [label="var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJustOrFail(\r\n                                  new ApplicationException(''Non scalar properties should be sequence of type IEnumerable<T>.''))", span="23-28", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", color=green, community=0, file="ParserSettings.cs"];
m29_7 [label="var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture))", span="30-30", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_8 [label="return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="32-34", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_9 [label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", span="21-21", cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo)", file="ParserSettings.cs"];
m29_15 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="ParserSettings.cs"];
m29_10 [label="Entry System.Type.GetGenericArguments()", span="0-0", cluster="System.Type.GetGenericArguments()", file="ParserSettings.cs"];
m29_56 [label="Entry string.ToBoolean()", span="71-71", cluster="string.ToBoolean()", file="ParserSettings.cs"];
m29_89 [label="Entry System.FormatException.FormatException(string)", span="0-0", cluster="System.FormatException.FormatException(string)", file="ParserSettings.cs"];
m29_87 [label="Entry System.Type.GetConstructor(System.Type[])", span="0-0", cluster="System.Type.GetConstructor(System.Type[])", file="ParserSettings.cs"];
m29_17 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="ParserSettings.cs"];
m29_14 [label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355", cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="ParserSettings.cs"];
m29_90 [label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="96-96", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_92 [label="parsedValue = Enum.Parse(conversionType, value)", span="101-101", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", color=green, community=0, file="ParserSettings.cs"];
m29_91 [label="object parsedValue", span="98-98", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_93 [label=ArgumentException, span="103-103", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_95 [label="Enum.IsDefined(conversionType, parsedValue)", span="107-107", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_96 [label="return parsedValue;", span="109-109", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_94 [label="throw new FormatException();", span="105-105", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_97 [label="throw new FormatException();", span="111-111", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_98 [label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", span="96-96", cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type)", file="ParserSettings.cs"];
m29_55 [label="Entry string.IsBooleanString()", span="65-65", cluster="string.IsBooleanString()", file="ParserSettings.cs"];
m29_35 [label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="495-495", cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="ParserSettings.cs"];
m29_26 [label="Entry Unk.MatchNothing", span="", cluster="Unk.MatchNothing", file="ParserSettings.cs"];
m29_88 [label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0", cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="ParserSettings.cs"];
m29_18 [label="Entry Unk.ToUntypedArray", span="", cluster="Unk.ToUntypedArray", file="ParserSettings.cs"];
m29_100 [label="Entry System.FormatException.FormatException()", span="0-0", cluster="System.FormatException.FormatException()", file="ParserSettings.cs"];
m29_80 [label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="22-22", cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="ParserSettings.cs"];
m29_11 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="ParserSettings.cs"];
m29_43 [label="Entry System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", span="11-11", cluster="System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", file="ParserSettings.cs"];
m29_104 [label=string, span="", file="ParserSettings.cs"];
m29_105 [label="System.Type", span="", file="ParserSettings.cs"];
m29_106 [label="System.Globalization.CultureInfo", span="", file="ParserSettings.cs"];
m29_107 [label=isFsOption, span="", file="ParserSettings.cs"];
m29_108 [label=type, span="", file="ParserSettings.cs"];
m29_102 [label="System.Globalization.CultureInfo", span="", file="ParserSettings.cs"];
m29_103 [label=type, span="", file="ParserSettings.cs"];
m36_8 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="StringExtensions.cs"];
m36_9 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", span="68-68", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string, string)", file="StringExtensions.cs"];
m36_2 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="StringExtensions.cs"];
m36_3 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", span="29-29", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string)", file="StringExtensions.cs"];
m36_6 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="StringExtensions.cs"];
m36_7 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", span="54-54", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string, string)", file="StringExtensions.cs"];
m36_0 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="StringExtensions.cs"];
m36_1 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", span="18-18", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string)", file="StringExtensions.cs"];
m36_4 [label="Entry CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="StringExtensions.cs"];
m36_5 [label="Exit CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", span="41-41", cluster="CommandLine.Text.AssemblyUsageAttribute.AssemblyUsageAttribute(string, string, string)", file="StringExtensions.cs"];
m38_0 [label="Entry Humanizer.Localisation.ResourceKeys.ValidateRange(int)", span="9-9", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="TokenizerTests.cs"];
m38_1 [label="count < 0", span="11-11", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="TokenizerTests.cs"];
m38_2 [label="throw new ArgumentOutOfRangeException(''count'');", span="12-12", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="TokenizerTests.cs"];
m38_3 [label="Exit Humanizer.Localisation.ResourceKeys.ValidateRange(int)", span="9-9", cluster="Humanizer.Localisation.ResourceKeys.ValidateRange(int)", file="TokenizerTests.cs"];
m38_4 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", file="TokenizerTests.cs"];
m39_0 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException()", span="9-9", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException()", file="TokenPartitions.cs"];
m39_1 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException()", span="9-9", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException()", file="TokenPartitions.cs"];
m39_4 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", span="18-18", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", file="TokenPartitions.cs"];
m39_5 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", span="18-18", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string, System.Exception)", file="TokenPartitions.cs"];
m39_2 [label="Entry Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="TokenPartitions.cs"];
m39_3 [label="Exit Humanizer.NoMatchFoundException.NoMatchFoundException(string)", span="13-13", cluster="Humanizer.NoMatchFoundException.NoMatchFoundException(string)", file="TokenPartitions.cs"];
m42_11 [label="Entry Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ValueAttribute.cs"];
m42_12 [label="return new DateTime(year, date.Month, date.Day, date.Hour, date.Minute, date.Second, date.Millisecond);", span="38-38", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ValueAttribute.cs"];
m42_13 [label="Exit Humanizer.PrepositionsExtensions.In(System.DateTime, int)", span="36-36", cluster="Humanizer.PrepositionsExtensions.In(System.DateTime, int)", file="ValueAttribute.cs"];
m42_7 [label="Entry System.DateTime.At(int, int, int, int)", span="5-5", cluster="System.DateTime.At(int, int, int, int)", file="ValueAttribute.cs"];
m42_8 [label="Entry Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ValueAttribute.cs"];
m42_9 [label="return date.At(12);", span="27-27", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ValueAttribute.cs"];
m42_10 [label="Exit Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", span="25-25", cluster="Humanizer.PrepositionsExtensions.AtNoon(System.DateTime)", file="ValueAttribute.cs"];
m42_3 [label="Entry System.DateTime.DateTime(int, int, int, int, int, int, int)", span="0-0", cluster="System.DateTime.DateTime(int, int, int, int, int, int, int)", file="ValueAttribute.cs"];
m42_0 [label="Entry Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="ValueAttribute.cs"];
m42_1 [label="return new DateTime(date.Year, date.Month, date.Day, hour, min, second, millisecond);", span="7-7", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="ValueAttribute.cs"];
m42_2 [label="Exit Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", span="5-5", cluster="Humanizer.PrepositionsExtensions.At(System.DateTime, int, int, int, int)", file="ValueAttribute.cs"];
m42_4 [label="Entry Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="ValueAttribute.cs"];
m42_5 [label="return date.At(0);", span="17-17", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="ValueAttribute.cs"];
m42_6 [label="Exit Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", span="15-15", cluster="Humanizer.PrepositionsExtensions.AtMidnight(System.DateTime)", file="ValueAttribute.cs"];
m43_0 [label="Entry Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="ValueMapper.cs"];
m43_1 [label="var titlizedWords = \r\n                (from word in input.Split(' ')\r\n                select word.Humanize(LetterCasing.Title))", span="13-15", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", color=red, community=0, file="ValueMapper.cs"];
m43_2 [label="return string.Join('''', titlizedWords);", span="17-17", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="ValueMapper.cs"];
m43_3 [label="Exit Humanizer.StringDehumanizeExtensions.Dehumanize(string)", span="11-11", cluster="Humanizer.StringDehumanizeExtensions.Dehumanize(string)", file="ValueMapper.cs"];
m43_6 [label="Entry Unk.Join", span="", cluster="Unk.Join", file="ValueMapper.cs"];
m43_5 [label="Entry string.Humanize(Humanizer.LetterCasing)", span="62-62", cluster="string.Humanize(Humanizer.LetterCasing)", file="ValueMapper.cs"];
m43_4 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="ValueMapper.cs"];
m45_31 [label="Entry System.TimeSpan.TimeSpan(long)", span="0-0", cluster="System.TimeSpan.TimeSpan(long)", file="Verb.cs"];
m45_36 [label="Entry System.Convert.ToInt32(double)", span="0-0", cluster="System.Convert.ToInt32(double)", file="Verb.cs"];
m45_34 [label="Entry System.DateTime.AddMonths(int)", span="0-0", cluster="System.DateTime.AddMonths(int)", file="Verb.cs"];
m45_35 [label="Entry System.Math.Floor(double)", span="0-0", cluster="System.Math.Floor(double)", file="Verb.cs"];
m45_33 [label="Entry Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", span="10-10", cluster="Humanizer.Localisation.Formatters.IFormatter.DateHumanize(Humanizer.Localisation.TimeUnit, Humanizer.Localisation.Tense, int)", file="Verb.cs"];
m45_32 [label="Entry System.Math.Abs(long)", span="0-0", cluster="System.Math.Abs(long)", file="Verb.cs"];
m45_0 [label="Entry Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="18-18", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_1 [label="var tense = input > comparisonBase ? Tense.Future : Tense.Past", span="20-20", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_2 [label="var ts = new TimeSpan(Math.Abs(comparisonBase.Ticks - input.Ticks))", span="21-21", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_20 [label="comparisonBase.Date.AddMonths(tense == Tense.Future ? 1 : -1) == input.Date", span="49-49", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_4 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Millisecond, tense, 0);", span="24-24", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", color=green, community=0, file="Verb.cs"];
m45_6 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Second, tense, ts.Seconds);", span="27-27", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_8 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Minute, tense, 1);", span="30-30", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_10 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Minute, tense, ts.Minutes);", span="33-33", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_12 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Hour, tense, 1);", span="36-36", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_14 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Hour, tense, ts.Hours);", span="39-39", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_16 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, 1);", span="42-42", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_18 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="45-45", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_21 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Month, tense, 1);", span="50-50", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_22 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Day, tense, ts.Days);", span="51-51", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_25 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Month, tense, months);", span="57-57", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_29 [label="return Configurator.Formatter.DateHumanize(TimeUnit.Year, tense, years);", span="63-63", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_3 [label="ts.TotalMilliseconds < 500", span="23-23", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_5 [label="ts.TotalSeconds < 60", span="26-26", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_7 [label="ts.TotalSeconds < 120", span="29-29", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", color=green, community=0, file="Verb.cs"];
m45_9 [label="ts.TotalMinutes < 45", span="32-32", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_11 [label="ts.TotalMinutes < 90", span="35-35", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_13 [label="ts.TotalHours < 24", span="38-38", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_15 [label="ts.TotalHours < 48", span="41-41", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_17 [label="ts.TotalDays < 28", span="44-44", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_19 [label="ts.TotalDays >= 28 && ts.TotalDays < 30", span="47-47", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_23 [label="ts.TotalDays < 345", span="54-54", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_24 [label="int months = Convert.ToInt32(Math.Floor(ts.TotalDays / 29.5))", span="56-56", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_26 [label="int years = Convert.ToInt32(Math.Floor(ts.TotalDays / 365))", span="60-60", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_27 [label="years == 0", span="61-61", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_28 [label="years = 1", span="61-61", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m45_30 [label="Exit Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", span="18-18", cluster="Humanizer.DateTimeHumanizeStrategy.DefaultDateTimeHumanizeStrategy.Humanize(System.DateTime, System.DateTime)", file="Verb.cs"];
m46_3 [label="Entry int.Parse(string)", span="0-0", cluster="int.Parse(string)", file="VerbAttribute.cs"];
m46_0 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="VerbAttribute.cs"];
m46_1 [label="return Ordinalize(int.Parse(numberString), numberString);", span="17-17", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="VerbAttribute.cs"];
m46_2 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(string)", span="15-15", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(string)", file="VerbAttribute.cs"];
m46_4 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_9 [label="int nMod100 = number % 100", span="32-32", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="VerbAttribute.cs"];
m46_11 [label="return numberString + ''th'';", span="36-36", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_12 [label="number % 10", span="39-39", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_14 [label="return numberString + ''st'';", span="42-42", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_16 [label="return numberString + ''nd'';", span="44-44", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_18 [label="return numberString + ''rd'';", span="46-46", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_19 [label="return numberString + ''th'';", span="48-48", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", color=red, community=0, file="VerbAttribute.cs"];
m46_10 [label="nMod100 >= 11 && nMod100 <= 13", span="34-34", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_13 [label=1, span="41-41", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_15 [label=2, span="43-43", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_17 [label=3, span="45-45", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_20 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", span="30-30", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int, string)", file="VerbAttribute.cs"];
m46_8 [label="Entry int.ToString(System.IFormatProvider)", span="0-0", cluster="int.ToString(System.IFormatProvider)", file="VerbAttribute.cs"];
m46_5 [label="Entry Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="VerbAttribute.cs"];
m46_6 [label="return Ordinalize(number, number.ToString(CultureInfo.InvariantCulture));", span="27-27", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="VerbAttribute.cs"];
m46_7 [label="Exit Humanizer.OrdinalizeExtensions.Ordinalize(int)", span="25-25", cluster="Humanizer.OrdinalizeExtensions.Ordinalize(int)", file="VerbAttribute.cs"];
m1_3 -> m1_7  [key=0, style=solid];
m1_3 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_3 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.OnNoMatch"];
m1_3 -> m1_9  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_3 -> m1_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string input"];
m1_3 -> m1_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type targetEnum"];
m1_3 -> m1_1  [key=3, color=darkorchid, style=bold, label="Parameter variable Humanizer.OnNoMatch onNoMatch"];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_12  [key=2, style=dotted];
m1_7 -> m1_13  [key=2, style=dotted];
m1_7 -> m1_14  [key=2, style=dotted];
m1_7 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_7 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=match];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_10  [key=0, style=solid];
m1_9 -> m1_11  [key=0, style=solid];
m1_9 -> m1_15  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_11 -> m1_3  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_3  [key=3, color=darkorchid, style=bold, label="method methodReturn System.Enum DehumanizeTo"];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_3  [key=2, style=dotted];
m1_6 -> m1_4  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=2, style=dotted];
m1_17 -> m1_20  [key=2, style=dotted];
m1_18 -> m1_16  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=3, color=darkorchid, style=bold, label="method methodReturn TTargetEnum DehumanizeTo"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_21 -> m1_17  [key=1, style=dashed, color=darkseagreen4, label=string];
m4_23 -> m4_24  [key=0, style=solid];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_3  [key=2, style=dotted];
m4_2 -> m4_0  [key=0, style=bold, color=blue];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_7  [key=2, style=dotted];
m4_6 -> m4_4  [key=0, style=bold, color=blue];
m4_8 -> m4_9  [key=0, style=solid];
m4_9 -> m4_10  [key=0, style=solid];
m4_9 -> m4_11  [key=2, style=dotted];
m4_10 -> m4_8  [key=0, style=bold, color=blue];
m4_12 -> m4_13  [key=0, style=solid];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [key=2, style=dotted];
m4_14 -> m4_12  [key=0, style=bold, color=blue];
m4_16 -> m4_17  [key=0, style=solid];
m4_17 -> m4_18  [key=0, style=solid];
m4_17 -> m4_19  [key=2, style=dotted];
m4_18 -> m4_16  [key=0, style=bold, color=blue];
m4_20 -> m4_21  [key=0, style=solid];
m4_21 -> m4_22  [key=0, style=solid];
m4_21 -> m4_19  [key=2, style=dotted];
m4_22 -> m4_20  [key=0, style=bold, color=blue];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_19  [key=2, style=dotted];
m4_25 -> m4_23  [key=0, style=bold, color=blue];
m5_0 -> m5_1  [key=0, style=solid];
m5_0 -> m5_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_10  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m5_0 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m5_0 -> m5_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m5_0 -> m5_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_3  [key=0, style=solid];
m5_3 -> m5_4  [key=0, style=solid];
m5_3 -> m5_5  [key=0, style=solid];
m5_4 -> m5_19  [key=0, style=solid];
m5_5 -> m5_6  [key=0, style=solid];
m5_5 -> m5_7  [key=0, style=solid];
m5_6 -> m5_19  [key=0, style=solid];
m5_6 -> m5_20  [key=2, style=dotted];
m5_8 -> m5_9  [key=0, style=solid];
m5_8 -> m5_21  [key=2, style=dotted];
m5_8 -> m5_22  [key=2, style=dotted];
m5_8 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=numberOfCharactersEqualToTruncateLength];
m5_8 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=numberOfCharactersEqualToTruncateLength];
m5_10 -> m5_11  [key=0, style=solid];
m5_10 -> m5_18  [key=0, style=solid];
m5_10 -> m5_7  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
m5_11 -> m5_12  [key=0, style=solid];
m5_11 -> m5_13  [key=0, style=solid];
m5_11 -> m5_23  [key=2, style=dotted];
m5_13 -> m5_14  [key=0, style=solid];
m5_13 -> m5_15  [key=0, style=solid];
m5_14 -> m5_19  [key=0, style=solid];
m5_15 -> m5_16  [key=0, style=solid];
m5_15 -> m5_17  [key=0, style=solid];
m5_16 -> m5_19  [key=0, style=solid];
m5_16 -> m5_20  [key=2, style=dotted];
m5_18 -> m5_19  [key=0, style=solid];
m5_2 -> m5_19  [key=0, style=solid];
m5_7 -> m5_8  [key=0, style=solid];
m5_7 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=alphaNumericalCharactersProcessed];
m5_7 -> m5_13  [key=1, style=dashed, color=darkseagreen4, label=alphaNumericalCharactersProcessed];
m5_7 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=alphaNumericalCharactersProcessed];
m5_7 -> m5_7  [key=3, color=darkorchid, style=bold, label="Local variable int alphaNumericalCharactersProcessed"];
m5_12 -> m5_13  [key=0, style=solid];
m5_12 -> m5_12  [key=1, style=dashed, color=darkseagreen4, label=alphaNumericalCharactersProcessed];
m5_12 -> m5_15  [key=1, style=dashed, color=darkseagreen4, label=alphaNumericalCharactersProcessed];
m5_9 -> m5_10  [key=0, style=solid];
m5_9 -> m5_11  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_9 -> m5_16  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_9 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_17 -> m5_10  [key=0, style=solid];
m5_17 -> m5_17  [key=1, style=dashed, color=darkseagreen4, label=i];
m5_19 -> m5_0  [key=0, style=bold, color=blue];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_4  [key=0, style=bold, color=blue];
m7_2 -> m7_3  [key=0, style=solid];
m7_3 -> m7_2  [key=0, style=bold, color=blue];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [key=0, style=bold, color=blue];
m7_6 -> m7_7  [key=0, style=solid];
m7_7 -> m7_6  [key=0, style=bold, color=blue];
m9_17 -> m9_18  [key=0, style=solid];
m9_17 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.CommandLineParserSettings"];
m9_17 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_18 -> m9_19  [key=0, style=solid];
m9_18 -> m9_28  [key=2, style=dotted];
m9_18 -> m9_21  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_18 -> m9_22  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_21 -> m9_22  [key=0, style=solid];
m9_21 -> m9_8  [key=2, style=dotted];
m9_21 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=map];
m9_21 -> m9_25  [key=1, style=dashed, color=darkseagreen4, label=map];
m9_21 -> m9_26  [key=1, style=dashed, color=darkseagreen4, label=map];
m9_25 -> m9_26  [key=0, style=solid];
m9_19 -> m9_20  [key=0, style=solid];
m9_19 -> m9_21  [key=0, style=solid];
m9_22 -> m9_23  [key=0, style=solid];
m9_22 -> m9_25  [key=0, style=solid];
m9_22 -> m9_24  [key=1, style=dashed, color=darkseagreen4, label=pair];
m9_20 -> m9_27  [key=0, style=solid];
m9_24 -> m9_22  [key=0, style=solid];
m9_24 -> m9_29  [key=2, style=dotted];
m9_26 -> m9_27  [key=0, style=solid];
m9_23 -> m9_24  [key=0, style=solid];
m9_23 -> m9_22  [key=0, style=solid];
m9_27 -> m9_17  [key=0, style=bold, color=blue];
m9_49 -> m9_50  [key=0, style=solid];
m9_50 -> m9_51  [key=0, style=solid];
m9_50 -> m9_52  [key=0, style=solid];
m9_51 -> m9_50  [key=0, style=solid];
m9_51 -> m9_53  [key=2, style=dotted];
m9_52 -> m9_49  [key=0, style=bold, color=blue];
m9_30 -> m9_31  [key=0, style=solid];
m9_30 -> m9_32  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IList<CommandLine.Utils.Pair<System.Reflection.PropertyInfo, CommandLine.VerbOptionAttribute>>"];
m9_30 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_30 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_31 -> m9_32  [key=0, style=solid];
m9_31 -> m9_8  [key=2, style=dotted];
m9_31 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label=map];
m9_31 -> m9_37  [key=1, style=dashed, color=darkseagreen4, label=map];
m9_31 -> m9_38  [key=1, style=dashed, color=darkseagreen4, label=map];
m9_32 -> m9_33  [key=0, style=solid];
m9_32 -> m9_37  [key=0, style=solid];
m9_32 -> m9_34  [key=1, style=dashed, color=darkseagreen4, label=verb];
m9_32 -> m9_35  [key=1, style=dashed, color=darkseagreen4, label=verb];
m9_32 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label=verb];
m9_34 -> m9_35  [key=0, style=solid];
m9_34 -> m9_36  [key=0, style=solid];
m9_34 -> m9_41  [key=2, style=dotted];
m9_37 -> m9_38  [key=0, style=solid];
m9_36 -> m9_32  [key=0, style=solid];
m9_38 -> m9_39  [key=0, style=solid];
m9_33 -> m9_34  [key=0, style=solid];
m9_33 -> m9_29  [key=2, style=dotted];
m9_33 -> m9_40  [key=2, style=dotted];
m9_33 -> m9_36  [key=1, style=dashed, color=darkseagreen4, label=optionInfo];
m9_35 -> m9_39  [key=0, style=solid];
m9_35 -> m9_42  [key=2, style=dotted];
m9_35 -> m9_43  [key=2, style=dotted];
m9_39 -> m9_30  [key=0, style=bold, color=blue];
m9_48 -> m9_54  [key=0, style=solid];
m9_54 -> m9_55  [key=0, style=solid];
m9_54 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label=requiredRulesAllMet];
m9_55 -> m9_56  [key=0, style=solid];
m9_55 -> m9_59  [key=0, style=solid];
m9_55 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label=option];
m9_59 -> m9_60  [key=0, style=solid];
m9_56 -> m9_57  [key=0, style=solid];
m9_56 -> m9_55  [key=0, style=solid];
m9_57 -> m9_58  [key=0, style=solid];
m9_57 -> m9_61  [key=2, style=dotted];
m9_58 -> m9_55  [key=0, style=solid];
m9_58 -> m9_59  [key=1, style=dashed, color=darkseagreen4, label=requiredRulesAllMet];
m9_60 -> m9_48  [key=0, style=bold, color=blue];
m9_8 -> m9_9  [key=0, style=solid];
m9_8 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_8 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_8 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m9_9 -> m9_10  [key=0, style=solid];
m9_11 -> m9_12  [key=0, style=solid];
m9_11 -> m9_16  [key=2, style=dotted];
m9_12 -> m9_13  [key=0, style=solid];
m9_12 -> m9_16  [key=2, style=dotted];
m9_14 -> m9_15  [key=0, style=solid];
m9_14 -> m9_16  [key=2, style=dotted];
m9_10 -> m9_11  [key=0, style=solid];
m9_10 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label=comparer];
m9_13 -> m9_14  [key=0, style=solid];
m9_13 -> m9_15  [key=0, style=solid];
m9_15 -> m9_8  [key=0, style=bold, color=blue];
m9_2 -> m9_3  [key=0, style=solid];
m9_3 -> m9_4  [key=0, style=solid];
m9_4 -> m9_2  [key=0, style=bold, color=blue];
m9_73 -> m9_74  [key=0, style=solid];
m9_73 -> m9_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m9_74 -> m9_75  [key=0, style=solid];
m9_74 -> m9_76  [key=1, style=dashed, color=darkseagreen4, label=setName];
m9_74 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label=setName];
m9_76 -> m9_77  [key=0, style=solid];
m9_76 -> m9_2  [key=2, style=dotted];
m9_76 -> m9_80  [key=2, style=dotted];
m9_75 -> m9_76  [key=0, style=solid];
m9_75 -> m9_77  [key=0, style=solid];
m9_75 -> m9_79  [key=2, style=dotted];
m9_77 -> m9_78  [key=0, style=solid];
m9_77 -> m9_5  [key=2, style=dotted];
m9_78 -> m9_73  [key=0, style=bold, color=blue];
m9_61 -> m9_81  [key=0, style=solid];
m9_61 -> m9_85  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_61 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_61 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=object];
m9_61 -> m9_90  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionInfo"];
m9_61 -> m9_91  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m9_61 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m9_61 -> m9_93  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m9_61 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label="bool?"];
m9_81 -> m9_82  [key=0, style=solid];
m9_81 -> m9_28  [key=2, style=dotted];
m9_81 -> m9_84  [key=1, style=dashed, color=darkseagreen4, label=list];
m9_85 -> m9_86  [key=0, style=solid];
m9_85 -> m9_87  [key=0, style=solid];
m9_85 -> m9_41  [key=2, style=dotted];
m9_86 -> m9_87  [key=0, style=solid];
m9_86 -> m9_97  [key=2, style=dotted];
m9_86 -> m9_98  [key=2, style=dotted];
m9_87 -> m9_88  [key=0, style=solid];
m9_87 -> m9_41  [key=2, style=dotted];
m9_87 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label=parserState];
m9_90 -> m9_91  [key=0, style=solid];
m9_90 -> m9_99  [key=2, style=dotted];
m9_90 -> m9_92  [key=1, style=dashed, color=darkseagreen4, label=error];
m9_90 -> m9_94  [key=1, style=dashed, color=darkseagreen4, label=error];
m9_90 -> m9_95  [key=1, style=dashed, color=darkseagreen4, label=error];
m9_91 -> m9_92  [key=0, style=solid];
m9_91 -> m9_93  [key=0, style=solid];
m9_92 -> m9_93  [key=0, style=solid];
m9_93 -> m9_94  [key=0, style=solid];
m9_93 -> m9_95  [key=0, style=solid];
m9_94 -> m9_95  [key=0, style=solid];
m9_82 -> m9_83  [key=0, style=solid];
m9_82 -> m9_84  [key=0, style=solid];
m9_84 -> m9_85  [key=0, style=solid];
m9_84 -> m9_86  [key=1, style=dashed, color=darkseagreen4, label=property];
m9_84 -> m9_87  [key=1, style=dashed, color=darkseagreen4, label=property];
m9_83 -> m9_96  [key=0, style=solid];
m9_88 -> m9_89  [key=0, style=solid];
m9_88 -> m9_90  [key=0, style=solid];
m9_95 -> m9_96  [key=0, style=solid];
m9_95 -> m9_100  [key=2, style=dotted];
m9_89 -> m9_96  [key=0, style=solid];
m9_96 -> m9_61  [key=0, style=bold, color=blue];
m9_44 -> m9_45  [key=0, style=solid];
m9_45 -> m9_46  [key=0, style=solid];
m9_45 -> m9_47  [key=2, style=dotted];
m9_45 -> m9_48  [key=2, style=dotted];
m9_46 -> m9_44  [key=0, style=bold, color=blue];
m9_0 -> m9_1  [key=0, style=solid];
m9_1 -> m9_0  [key=0, style=bold, color=blue];
m9_47 -> m9_62  [key=0, style=solid];
m9_62 -> m9_63  [key=0, style=solid];
m9_62 -> m9_64  [key=0, style=solid];
m9_63 -> m9_72  [key=0, style=solid];
m9_64 -> m9_65  [key=0, style=solid];
m9_64 -> m9_67  [key=0, style=solid];
m9_64 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label=option];
m9_65 -> m9_66  [key=0, style=solid];
m9_65 -> m9_64  [key=0, style=solid];
m9_67 -> m9_68  [key=0, style=solid];
m9_67 -> m9_71  [key=0, style=solid];
m9_67 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label=info];
m9_66 -> m9_64  [key=0, style=solid];
m9_66 -> m9_73  [key=2, style=dotted];
m9_68 -> m9_69  [key=0, style=solid];
m9_68 -> m9_67  [key=0, style=solid];
m9_71 -> m9_72  [key=0, style=solid];
m9_69 -> m9_70  [key=0, style=solid];
m9_69 -> m9_61  [key=2, style=dotted];
m9_70 -> m9_72  [key=0, style=solid];
m9_72 -> m9_47  [key=0, style=bold, color=blue];
m9_5 -> m9_6  [key=0, style=solid];
m9_6 -> m9_7  [key=0, style=solid];
m9_7 -> m9_5  [key=0, style=bold, color=blue];
m9_101 -> m9_3  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo"];
m9_101 -> m9_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap.MutuallyExclusiveInfo"];
m9_102 -> m9_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_14  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_45  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_50  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_51  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_55  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_57  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_62  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_64  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_66  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m9_102 -> m9_77  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Internal.OptionMap"];
m10_0 -> m10_1  [key=0, style=solid];
m10_0 -> m10_2  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m10_0 -> m10_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.ShowQuantityAs"];
m10_0 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_0 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m10_1 -> m10_2  [key=0, style=solid];
m10_1 -> m10_8  [key=2, style=dotted];
m10_1 -> m10_9  [key=2, style=dotted];
m10_1 -> m10_3  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m10_1 -> m10_5  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m10_1 -> m10_6  [key=1, style=dashed, color=darkseagreen4, label=transformedInput];
m10_2 -> m10_3  [key=0, style=solid];
m10_2 -> m10_4  [key=0, style=solid];
m10_4 -> m10_5  [key=0, style=solid];
m10_4 -> m10_6  [key=0, style=solid];
m10_5 -> m10_7  [key=0, style=solid];
m10_5 -> m10_10  [key=2, style=dotted];
m10_6 -> m10_7  [key=0, style=solid];
m10_6 -> m10_11  [key=2, style=dotted];
m10_6 -> m10_10  [key=2, style=dotted];
m10_3 -> m10_7  [key=0, style=solid];
m10_7 -> m10_0  [key=0, style=bold, color=blue];
m12_4 -> m12_8  [key=0, style=solid];
m12_8 -> m12_9  [key=0, style=solid];
m12_8 -> m12_11  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m12_9 -> m12_4  [key=0, style=bold, color=blue];
m12_6 -> m12_75  [key=0, style=solid];
m12_75 -> m12_76  [key=0, style=solid];
m12_75 -> m12_78  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m12_75 -> m12_75  [key=3, color=darkorchid, style=bold, label="Property variable System.Func<bool, string> VersionCommandText"];
m12_76 -> m12_6  [key=0, style=bold, color=blue];
m12_7 -> m12_91  [key=0, style=solid];
m12_7 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m12_91 -> m12_92  [key=0, style=solid];
m12_91 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m12_92 -> m12_7  [key=0, style=bold, color=blue];
m12_0 -> m12_1  [key=0, style=solid];
m12_1 -> m12_2  [key=0, style=solid];
m12_1 -> m12_3  [key=2, style=dotted];
m12_1 -> m12_4  [key=2, style=dotted];
m12_1 -> m12_5  [key=2, style=dotted];
m12_1 -> m12_6  [key=2, style=dotted];
m12_1 -> m12_7  [key=2, style=dotted];
m12_2 -> m12_0  [key=0, style=bold, color=blue];
m12_104 -> m12_105  [key=0, style=solid];
m12_11 -> m12_12  [key=0, style=solid];
m12_11 -> m12_17  [key=2, style=dotted];
m12_11 -> m12_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_11 -> m12_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_11 -> m12_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_10 -> m12_11  [key=0, style=solid];
m12_12 -> m12_13  [key=0, style=solid];
m12_12 -> m12_18  [key=2, style=dotted];
m12_12 -> m12_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_22 -> m12_23  [key=0, style=solid];
m12_26 -> m12_27  [key=0, style=solid];
m12_14 -> m12_16  [key=0, style=solid];
m12_14 -> m12_20  [key=2, style=dotted];
m12_14 -> m12_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_13 -> m12_14  [key=0, style=solid];
m12_13 -> m12_15  [key=0, style=solid];
m12_13 -> m12_19  [key=2, style=dotted];
m12_30 -> m12_31  [key=0, style=solid];
m12_15 -> m12_16  [key=0, style=solid];
m12_15 -> m12_21  [key=2, style=dotted];
m12_16 -> m12_10  [key=0, style=bold, color=blue];
m12_33 -> m12_34  [key=0, style=solid];
m12_23 -> m12_24  [key=0, style=solid];
m12_23 -> m12_25  [key=2, style=dotted];
m12_24 -> m12_22  [key=0, style=bold, color=blue];
m12_27 -> m12_28  [key=0, style=solid];
m12_27 -> m12_29  [key=2, style=dotted];
m12_28 -> m12_26  [key=0, style=bold, color=blue];
m12_31 -> m12_32  [key=0, style=solid];
m12_32 -> m12_30  [key=0, style=bold, color=blue];
m12_34 -> m12_35  [key=0, style=solid];
m12_34 -> m12_36  [key=2, style=dotted];
m12_34 -> m12_37  [key=2, style=dotted];
m12_35 -> m12_33  [key=0, style=bold, color=blue];
m12_41 -> m12_42  [key=0, style=solid];
m12_41 -> m12_17  [key=2, style=dotted];
m12_41 -> m12_20  [key=2, style=dotted];
m12_41 -> m12_47  [key=2, style=dotted];
m12_41 -> m12_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_41 -> m12_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_41 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=setsWithTrue];
m12_42 -> m12_43  [key=0, style=solid];
m12_42 -> m12_17  [key=2, style=dotted];
m12_42 -> m12_48  [key=2, style=dotted];
m12_42 -> m12_47  [key=2, style=dotted];
m12_42 -> m12_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_42 -> m12_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_42 -> m12_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_42 -> m12_44  [key=1, style=dashed, color=darkseagreen4, label=requiredButEmpty];
m12_40 -> m12_41  [key=0, style=solid];
m12_40 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m12_50 -> m12_51  [key=0, style=solid];
m12_54 -> m12_55  [key=0, style=solid];
m12_61 -> m12_62  [key=0, style=solid];
m12_61 -> m12_63  [key=2, style=dotted];
m12_61 -> m12_64  [key=2, style=dotted];
m12_43 -> m12_44  [key=0, style=solid];
m12_43 -> m12_45  [key=0, style=solid];
m12_43 -> m12_49  [key=2, style=dotted];
m12_57 -> m12_58  [key=0, style=solid];
m12_60 -> m12_61  [key=0, style=solid];
m12_65 -> m12_66  [key=0, style=solid];
m12_44 -> m12_46  [key=0, style=solid];
m12_44 -> m12_20  [key=2, style=dotted];
m12_44 -> m12_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_45 -> m12_46  [key=0, style=solid];
m12_45 -> m12_21  [key=2, style=dotted];
m12_46 -> m12_40  [key=0, style=bold, color=blue];
m12_70 -> m12_71  [key=0, style=solid];
m12_51 -> m12_52  [key=0, style=solid];
m12_51 -> m12_25  [key=2, style=dotted];
m12_51 -> m12_53  [key=2, style=dotted];
m12_52 -> m12_50  [key=0, style=bold, color=blue];
m12_55 -> m12_56  [key=0, style=solid];
m12_56 -> m12_54  [key=0, style=bold, color=blue];
m12_58 -> m12_59  [key=0, style=solid];
m12_58 -> m12_25  [key=2, style=dotted];
m12_59 -> m12_57  [key=0, style=bold, color=blue];
m12_62 -> m12_60  [key=0, style=bold, color=blue];
m12_66 -> m12_67  [key=0, style=solid];
m12_66 -> m12_68  [key=2, style=dotted];
m12_66 -> m12_69  [key=2, style=dotted];
m12_67 -> m12_65  [key=0, style=bold, color=blue];
m12_71 -> m12_72  [key=0, style=solid];
m12_71 -> m12_73  [key=2, style=dotted];
m12_71 -> m12_74  [key=2, style=dotted];
m12_72 -> m12_70  [key=0, style=bold, color=blue];
m12_78 -> m12_79  [key=0, style=solid];
m12_78 -> m12_17  [key=2, style=dotted];
m12_78 -> m12_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_78 -> m12_80  [key=1, style=dashed, color=darkseagreen4, label=options];
m12_77 -> m12_78  [key=0, style=solid];
m12_79 -> m12_80  [key=0, style=solid];
m12_79 -> m12_81  [key=0, style=solid];
m12_79 -> m12_49  [key=2, style=dotted];
m12_83 -> m12_84  [key=0, style=solid];
m12_80 -> m12_82  [key=0, style=solid];
m12_80 -> m12_20  [key=2, style=dotted];
m12_80 -> m12_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_81 -> m12_82  [key=0, style=solid];
m12_81 -> m12_21  [key=2, style=dotted];
m12_82 -> m12_77  [key=0, style=bold, color=blue];
m12_87 -> m12_88  [key=0, style=solid];
m12_84 -> m12_85  [key=0, style=solid];
m12_84 -> m12_53  [key=2, style=dotted];
m12_84 -> m12_86  [key=2, style=dotted];
m12_85 -> m12_83  [key=0, style=bold, color=blue];
m12_88 -> m12_89  [key=0, style=solid];
m12_88 -> m12_90  [key=2, style=dotted];
m12_88 -> m12_74  [key=2, style=dotted];
m12_89 -> m12_87  [key=0, style=bold, color=blue];
m12_95 -> m12_96  [key=0, style=solid];
m12_95 -> m12_17  [key=2, style=dotted];
m12_95 -> m12_100  [key=2, style=dotted];
m12_95 -> m12_101  [key=2, style=dotted];
m12_95 -> m12_104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m12_95 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label=t];
m12_94 -> m12_95  [key=0, style=solid];
m12_94 -> m12_25  [key=2, style=dotted];
m12_94 -> m12_53  [key=2, style=dotted];
m12_94 -> m12_94  [key=1, style=dashed, color=darkseagreen4, label=sp];
m12_93 -> m12_94  [key=0, style=solid];
m12_96 -> m12_97  [key=0, style=solid];
m12_96 -> m12_19  [key=2, style=dotted];
m12_96 -> m12_96  [key=1, style=dashed, color=darkseagreen4, label=x];
m12_97 -> m12_98  [key=0, style=solid];
m12_97 -> m12_102  [key=2, style=dotted];
m12_97 -> m12_103  [key=2, style=dotted];
m12_97 -> m12_97  [key=1, style=dashed, color=darkseagreen4, label=y];
m12_98 -> m12_99  [key=0, style=solid];
m12_99 -> m12_93  [key=0, style=bold, color=blue];
m12_105 -> m12_106  [key=0, style=solid];
m12_105 -> m12_107  [key=2, style=dotted];
m12_106 -> m12_104  [key=0, style=bold, color=blue];
m12_5 -> m12_38  [key=0, style=solid];
m12_38 -> m12_39  [key=0, style=solid];
m12_38 -> m12_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m12_38 -> m12_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m12_38 -> m12_38  [key=3, color=darkorchid, style=bold, label="Property variable System.Func<string> ErrorsHeadingText"];
m12_39 -> m12_5  [key=0, style=bold, color=blue];
m12_37 -> m12_38  [key=3, color=darkorchid, style=bold, label="Property variable System.Func<string> RequiredWord"];
m12_108 -> m12_61  [key=1, style=dashed, color=darkseagreen4, label=setsWithTrue];
m12_109 -> m12_95  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_22 -> m13_23  [key=0, style=solid];
m13_65 -> m13_66  [key=0, style=solid];
m13_14 -> m13_39  [key=0, style=solid];
m13_14 -> m13_20  [key=2, style=dotted];
m13_14 -> m13_33  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_23 -> m13_24  [key=0, style=solid, color=red];
m13_23 -> m13_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m13_23 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m13_23 -> m13_28  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m13_24 -> m13_25  [key=0, style=solid, color=red];
m13_24 -> m13_28  [key=0, style=solid, color=red];
m13_24 -> m13_30  [key=2, style=dotted, color=red];
m13_24 -> m13_37  [key=1, style=dashed, color=red, label="lambda expression"];
m13_24 -> m13_22  [key=0, style=bold, color=blue];
m13_25 -> m13_26  [key=0, style=solid];
m13_25 -> m13_31  [key=2, style=dotted];
m13_25 -> m13_32  [key=2, style=dotted];
m13_25 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_25 -> m13_27  [key=1, style=dashed, color=darkseagreen4, label=tokenizerResult];
m13_26 -> m13_27  [key=0, style=solid];
m13_26 -> m13_33  [key=2, style=dotted];
m13_26 -> m13_34  [key=2, style=dotted];
m13_26 -> m13_35  [key=2, style=dotted];
m13_26 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_26 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_28 -> m13_29  [key=0, style=solid];
m13_28 -> m13_32  [key=2, style=dotted];
m13_28 -> m13_26  [key=0, style=bold, color=blue];
m13_27 -> m13_29  [key=0, style=solid];
m13_27 -> m13_36  [key=2, style=dotted];
m13_27 -> m13_47  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_27 -> m13_28  [key=0, style=solid];
m13_29 -> m13_23  [key=0, style=bold, color=blue];
m13_78 -> m13_79  [key=0, style=solid, color=green];
m13_78 -> m13_17  [key=2, style=dotted, color=green];
m13_78 -> m13_61  [key=1, style=dashed, color=green, label="lambda expression"];
m13_78 -> m13_80  [key=1, style=dashed, color=green, label=options];
m13_103 -> m13_104  [key=0, style=solid];
m13_103 -> m13_106  [key=0, style=solid];
m13_103 -> m13_114  [key=2, style=dotted];
m13_103 -> m13_32  [key=2, style=dotted];
m13_4 -> m13_8  [key=0, style=solid, color=green];
m13_4 -> m13_5  [key=0, style=solid, color=red];
m13_4 -> m13_13  [key=2, style=dotted, color=red];
m13_4 -> m13_14  [key=2, style=dotted, color=red];
m13_4 -> m13_12  [key=2, style=dotted, color=red];
m13_4 -> m13_4  [key=1, style=dashed, color=red, label=t];
m13_4 -> m13_20  [key=1, style=dashed, color=red, label=unkTokens];
m13_8 -> m13_9  [key=0, style=solid, color=green];
m13_8 -> m13_11  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_9 -> m13_4  [key=0, style=bold, color=blue];
m13_50 -> m13_51  [key=0, style=solid];
m13_50 -> m13_52  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
m13_50 -> m13_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
m13_50 -> m13_55  [key=1, style=dashed, color=darkseagreen4, label="RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>"];
m13_51 -> m13_52  [key=0, style=solid];
m13_51 -> m13_57  [key=2, style=dotted];
m13_51 -> m13_53  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m13_51 -> m13_25  [key=2, style=dotted];
m13_52 -> m13_53  [key=0, style=solid];
m13_52 -> m13_35  [key=2, style=dotted];
m13_52 -> m13_58  [key=2, style=dotted];
m13_52 -> m13_61  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_52 -> m13_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_52 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label=replaces];
m13_52 -> m13_50  [key=0, style=bold, color=blue];
m13_55 -> m13_56  [key=0, style=solid];
m13_55 -> m13_60  [key=2, style=dotted];
m13_55 -> m13_18  [key=2, style=dotted];
m13_53 -> m13_54  [key=0, style=solid];
m13_53 -> m13_35  [key=2, style=dotted];
m13_53 -> m13_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_54 -> m13_55  [key=0, style=solid];
m13_54 -> m13_59  [key=2, style=dotted];
m13_54 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_56 -> m13_50  [key=0, style=bold, color=blue];
m13_56 -> m13_54  [key=0, style=bold, color=blue];
m13_58 -> m13_25  [key=2, style=dotted];
m13_58 -> m13_59  [key=0, style=solid];
m13_6 -> m13_75  [key=0, style=solid, color=green];
m13_6 -> m13_0  [key=0, style=bold, color=blue];
m13_75 -> m13_76  [key=0, style=solid, color=green];
m13_75 -> m13_78  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_76 -> m13_6  [key=0, style=bold, color=blue];
m13_30 -> m13_31  [key=0, style=solid];
m13_13 -> m13_14  [key=0, style=solid];
m13_13 -> m13_19  [key=2, style=dotted];
m13_13 -> m13_15  [key=0, style=solid];
m13_32 -> m13_30  [key=0, style=bold, color=blue];
m13_107 -> m13_108  [key=0, style=solid];
m13_107 -> m13_116  [key=2, style=dotted];
m13_107 -> m13_109  [key=2, style=dotted];
m13_107 -> m13_9  [key=2, style=dotted];
m13_68 -> m13_66  [key=0, style=bold, color=blue];
m13_15 -> m13_21  [key=2, style=dotted];
m13_15 -> m13_39  [key=0, style=solid];
m13_60 -> m13_61  [key=0, style=solid];
m13_21 -> m13_19  [key=0, style=bold, color=blue];
m13_102 -> m13_103  [key=0, style=solid];
m13_102 -> m13_113  [key=2, style=dotted];
m13_102 -> m13_105  [key=1, style=dashed, color=darkseagreen4, label=n];
m13_7 -> m13_91  [key=0, style=solid, color=green];
m13_7 -> m13_95  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_91 -> m13_92  [key=0, style=solid, color=green];
m13_91 -> m13_94  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_91 -> m13_109  [key=2, style=dotted];
m13_91 -> m13_96  [key=1, style=dashed, color=darkseagreen4, label=text];
m13_91 -> m13_98  [key=1, style=dashed, color=red, label=text];
m13_91 -> m13_101  [key=1, style=dashed, color=darkseagreen4, label=text];
m13_91 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label=text];
m13_91 -> m13_107  [key=1, style=dashed, color=darkseagreen4, label=text];
m13_92 -> m13_7  [key=0, style=bold, color=blue];
m13_92 -> m13_93  [key=0, style=solid];
m13_92 -> m13_95  [key=0, style=solid];
m13_92 -> m13_110  [key=2, style=dotted];
m13_63 -> m13_61  [key=0, style=bold, color=blue];
m13_74 -> m13_72  [key=0, style=bold, color=blue];
m13_69 -> m13_70  [key=0, style=solid];
m13_90 -> m13_91  [key=0, style=solid];
m13_90 -> m13_108  [key=0, style=solid];
m13_0 -> m13_1  [key=0, style=solid];
m13_0 -> m13_3  [key=1, style=dashed, color=red, label="System.Collections.Generic.IEnumerable<string>"];
m13_0 -> m13_4  [key=1, style=dashed, color=red, label="System.Func<string, bool>"];
m13_1 -> m13_4  [key=2, style=dotted];
m13_1 -> m13_6  [key=2, style=dotted];
m13_1 -> m13_7  [key=2, style=dotted];
m13_1 -> m13_2  [key=0, style=solid];
m13_1 -> m13_3  [key=2, style=dotted];
m13_1 -> m13_5  [key=2, style=dotted];
m13_2 -> m13_0  [key=0, style=bold, color=blue];
m13_2 -> m13_3  [key=0, style=solid, color=red];
m13_70 -> m13_71  [key=0, style=solid];
m13_20 -> m13_21  [key=0, style=solid];
m13_20 -> m13_22  [key=2, style=dotted];
m13_19 -> m13_20  [key=0, style=solid];
m13_37 -> m13_38  [key=0, style=solid, color=red];
m13_37 -> m13_11  [key=0, style=solid];
m13_41 -> m13_42  [key=0, style=solid];
m13_41 -> m13_17  [key=2, style=dotted];
m13_41 -> m13_20  [key=2, style=dotted];
m13_41 -> m13_47  [key=2, style=dotted];
m13_41 -> m13_50  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_41 -> m13_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_41 -> m13_61  [key=1, style=dashed, color=darkseagreen4, label=setsWithTrue];
m13_44 -> m13_45  [key=0, style=solid];
m13_44 -> m13_78  [key=0, style=solid, color=green];
m13_44 -> m13_20  [key=2, style=dotted];
m13_44 -> m13_46  [key=0, style=solid];
m13_44 -> m13_70  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_48 -> m13_49  [key=0, style=solid];
m13_48 -> m13_17  [key=2, style=dotted];
m13_47 -> m13_48  [key=0, style=solid];
m13_38 -> m13_39  [key=0, style=solid, color=red];
m13_38 -> m13_40  [key=2, style=dotted, color=red];
m13_38 -> m13_41  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_38 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_39 -> m13_37  [key=0, style=bold, color=blue];
m13_39 -> m13_5  [key=0, style=bold, color=blue];
m13_42 -> m13_43  [key=0, style=solid];
m13_42 -> m13_40  [key=2, style=dotted];
m13_42 -> m13_17  [key=2, style=dotted];
m13_42 -> m13_48  [key=2, style=dotted];
m13_42 -> m13_47  [key=2, style=dotted];
m13_42 -> m13_57  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_42 -> m13_60  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_42 -> m13_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_42 -> m13_44  [key=1, style=dashed, color=darkseagreen4, label=requiredButEmpty];
m13_43 -> m13_41  [key=0, style=bold, color=blue];
m13_43 -> m13_44  [key=0, style=solid];
m13_43 -> m13_45  [key=0, style=solid];
m13_43 -> m13_30  [key=2, style=dotted];
m13_45 -> m13_46  [key=0, style=solid];
m13_45 -> m13_40  [key=2, style=dotted];
m13_45 -> m13_21  [key=2, style=dotted];
m13_46 -> m13_44  [key=0, style=bold, color=blue];
m13_46 -> m13_40  [key=0, style=bold, color=blue];
m13_49 -> m13_47  [key=0, style=bold, color=blue];
m13_62 -> m13_63  [key=0, style=solid];
m13_62 -> m13_32  [key=2, style=dotted];
m13_62 -> m13_64  [key=2, style=dotted];
m13_62 -> m13_65  [key=2, style=dotted];
m13_62 -> m13_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_62 -> m13_60  [key=0, style=bold, color=blue];
m13_61 -> m13_62  [key=0, style=solid];
m13_61 -> m13_67  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_61 -> m13_84  [key=0, style=solid, color=green];
m13_61 -> m13_63  [key=2, style=dotted];
m13_61 -> m13_64  [key=2, style=dotted];
m13_73 -> m13_74  [key=0, style=solid];
m13_73 -> m13_75  [key=2, style=dotted];
m13_73 -> m13_76  [key=2, style=dotted];
m13_73 -> m13_77  [key=2, style=dotted];
m13_73 -> m13_78  [key=2, style=dotted];
m13_73 -> m13_79  [key=2, style=dotted];
m13_73 -> m13_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_73 -> m13_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_72 -> m13_73  [key=0, style=solid];
m13_72 -> m13_81  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_72 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m13_72 -> m13_70  [key=0, style=bold, color=blue];
m13_87 -> m13_88  [key=0, style=solid];
m13_67 -> m13_68  [key=0, style=solid];
m13_67 -> m13_64  [key=2, style=dotted];
m13_67 -> m13_65  [key=0, style=bold, color=blue];
m13_66 -> m13_67  [key=0, style=solid];
m13_66 -> m13_68  [key=2, style=dotted];
m13_66 -> m13_69  [key=2, style=dotted];
m13_71 -> m13_69  [key=0, style=bold, color=blue];
m13_71 -> m13_61  [key=0, style=bold, color=green];
m13_71 -> m13_74  [key=2, style=dotted];
m13_71 -> m13_72  [key=0, style=solid];
m13_71 -> m13_73  [key=2, style=dotted];
m13_81 -> m13_82  [key=0, style=solid];
m13_81 -> m13_21  [key=2, style=dotted];
m13_84 -> m13_85  [key=0, style=solid];
m13_84 -> m13_86  [key=2, style=dotted, color=green];
m13_84 -> m13_35  [key=2, style=dotted];
m13_84 -> m13_71  [key=0, style=solid, color=green];
m13_84 -> m13_53  [key=2, style=dotted, color=green];
m13_80 -> m13_81  [key=0, style=solid];
m13_80 -> m13_82  [key=0, style=solid];
m13_80 -> m13_20  [key=2, style=dotted];
m13_80 -> m13_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_83 -> m13_84  [key=0, style=solid];
m13_82 -> m13_80  [key=0, style=bold, color=blue];
m13_82 -> m13_44  [key=0, style=bold, color=blue];
m13_85 -> m13_83  [key=0, style=bold, color=blue];
m13_88 -> m13_89  [key=0, style=solid];
m13_88 -> m13_90  [key=2, style=dotted];
m13_88 -> m13_74  [key=2, style=dotted];
m13_89 -> m13_87  [key=0, style=bold, color=blue];
m13_11 -> m13_12  [key=0, style=solid];
m13_11 -> m13_17  [key=2, style=dotted];
m13_11 -> m13_22  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_11 -> m13_26  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_11 -> m13_14  [key=1, style=dashed, color=darkseagreen4, label=options];
m13_11 -> m13_90  [key=0, style=solid];
m13_11 -> m13_93  [key=0, style=bold, color=crimson];
m13_11 -> m13_94  [key=0, style=bold, color=crimson];
m13_11 -> m13_96  [key=0, style=bold, color=crimson];
m13_11 -> m13_97  [key=0, style=bold, color=red];
m13_11 -> m13_99  [key=0, style=bold, color=crimson];
m13_11 -> m13_105  [key=0, style=bold, color=crimson];
m13_11 -> m13_107  [key=0, style=bold, color=crimson];
m13_11 -> m13_91  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_11 -> m13_95  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_11 -> m13_103  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, bool>"];
m13_79 -> m13_80  [key=0, style=solid];
m13_79 -> m13_81  [key=0, style=solid];
m13_79 -> m13_30  [key=2, style=dotted];
m13_94 -> m13_95  [key=0, style=solid, color=green];
m13_94 -> m13_53  [key=2, style=dotted];
m13_94 -> m13_94  [key=1, style=dashed, color=darkseagreen4, label=sp];
m13_94 -> m13_25  [key=2, style=dotted];
m13_95 -> m13_95  [key=1, style=dashed, color=green, label=t];
m13_95 -> m13_96  [key=0, style=solid, color=green];
m13_95 -> m13_17  [key=2, style=dotted, color=green];
m13_95 -> m13_100  [key=2, style=dotted, color=green];
m13_95 -> m13_101  [key=2, style=dotted, color=green];
m13_95 -> m13_104  [key=1, style=dashed, color=green, label="lambda expression"];
m13_95 -> m13_98  [key=0, style=solid, color=red];
m13_96 -> m13_96  [key=1, style=dashed, color=darkseagreen4, label=x];
m13_96 -> m13_97  [key=0, style=solid, color=red];
m13_96 -> m13_19  [key=2, style=dotted];
m13_96 -> m13_111  [key=2, style=dotted];
m13_104 -> m13_105  [key=0, style=solid, color=green];
m13_104 -> m13_115  [key=2, style=dotted];
m13_105 -> m13_106  [key=0, style=solid, color=green];
m13_105 -> m13_107  [key=2, style=dotted, color=green];
m13_105 -> m13_101  [key=0, style=solid];
m13_105 -> m13_111  [key=2, style=dotted];
m13_106 -> m13_104  [key=0, style=bold, color=blue];
m13_106 -> m13_107  [key=0, style=solid];
m13_106 -> m13_108  [key=0, style=solid];
m13_106 -> m13_116  [key=2, style=dotted];
m13_12 -> m13_13  [key=0, style=solid];
m13_12 -> m13_18  [key=2, style=dotted];
m13_12 -> m13_30  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_93 -> m13_94  [key=0, style=solid];
m13_93 -> m13_9  [key=2, style=dotted];
m13_97 -> m13_97  [key=1, style=dashed, color=darkseagreen4, label=y];
m13_97 -> m13_98  [key=0, style=solid, color=red];
m13_97 -> m13_102  [key=2, style=dotted];
m13_97 -> m13_103  [key=2, style=dotted];
m13_33 -> m13_34  [key=0, style=solid];
m13_40 -> m13_41  [key=0, style=solid];
m13_40 -> m13_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m13_57 -> m13_58  [key=0, style=solid];
m13_99 -> m13_93  [key=0, style=bold, color=blue];
m13_99 -> m13_100  [key=0, style=solid];
m13_99 -> m13_111  [key=2, style=dotted];
m13_98 -> m13_99  [key=0, style=solid, color=red];
m13_98 -> m13_112  [key=2, style=dotted, color=red];
m13_98 -> m13_100  [key=1, style=dashed, color=red, label=first];
m13_31 -> m13_32  [key=0, style=solid];
m13_35 -> m13_33  [key=0, style=bold, color=blue];
m13_34 -> m13_35  [key=0, style=solid];
m13_34 -> m13_36  [key=2, style=dotted];
m13_34 -> m13_37  [key=2, style=dotted];
m13_59 -> m13_57  [key=0, style=bold, color=blue];
m13_10 -> m13_117  [key=0, style=solid];
m13_10 -> m13_121  [key=0, style=bold, color=crimson];
m13_10 -> m13_122  [key=0, style=bold, color=crimson];
m13_10 -> m13_125  [key=0, style=bold, color=crimson];
m13_10 -> m13_127  [key=0, style=bold, color=crimson];
m13_10 -> m13_128  [key=0, style=bold, color=crimson];
m13_10 -> m13_118  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_10 -> m13_124  [key=1, style=dashed, color=darkseagreen4, label=string];
m13_117 -> m13_118  [key=0, style=solid];
m13_117 -> m13_129  [key=0, style=solid];
m13_117 -> m13_8  [key=2, style=dotted];
m13_121 -> m13_122  [key=0, style=solid];
m13_121 -> m13_111  [key=2, style=dotted];
m13_122 -> m13_123  [key=0, style=solid];
m13_125 -> m13_126  [key=0, style=solid];
m13_127 -> m13_128  [key=0, style=solid];
m13_127 -> m13_111  [key=2, style=dotted];
m13_128 -> m13_129  [key=0, style=solid];
m13_128 -> m13_9  [key=2, style=dotted];
m13_118 -> m13_119  [key=0, style=solid];
m13_118 -> m13_109  [key=2, style=dotted];
m13_118 -> m13_121  [key=1, style=dashed, color=darkseagreen4, label=text];
m13_118 -> m13_126  [key=1, style=dashed, color=darkseagreen4, label=text];
m13_124 -> m13_125  [key=0, style=solid];
m13_124 -> m13_131  [key=2, style=dotted];
m13_124 -> m13_132  [key=2, style=dotted];
m13_119 -> m13_120  [key=0, style=solid];
m13_119 -> m13_130  [key=2, style=dotted];
m13_119 -> m13_123  [key=1, style=dashed, color=darkseagreen4, label=equalIndex];
m13_126 -> m13_127  [key=0, style=solid];
m13_126 -> m13_133  [key=2, style=dotted];
m13_126 -> m13_128  [key=1, style=dashed, color=darkseagreen4, label=parts];
m13_120 -> m13_121  [key=0, style=solid];
m13_120 -> m13_123  [key=0, style=solid];
m13_123 -> m13_124  [key=0, style=solid];
m13_123 -> m13_126  [key=0, style=solid];
m13_129 -> m13_10  [key=0, style=bold, color=blue];
m13_5 -> m13_38  [key=0, style=solid];
m13_5 -> m13_6  [key=0, style=solid];
m13_5 -> m13_15  [key=2, style=dotted];
m13_5 -> m13_16  [key=2, style=dotted];
m13_5 -> m13_17  [key=2, style=dotted];
m13_5 -> m13_18  [key=2, style=dotted];
m13_5 -> m13_19  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m13_5 -> m13_5  [key=1, style=dashed, color=darkseagreen4, label=t];
m13_3 -> m13_4  [key=0, style=solid, color=red];
m13_3 -> m13_8  [key=2, style=dotted, color=red];
m13_3 -> m13_9  [key=2, style=dotted, color=red];
m13_3 -> m13_10  [key=2, style=dotted, color=red];
m13_3 -> m13_11  [key=2, style=dotted, color=red];
m13_3 -> m13_12  [key=2, style=dotted, color=red];
m13_3 -> m13_3  [key=1, style=dashed, color=red, label=arg];
m13_3 -> m13_5  [key=1, style=dashed, color=red, label=tokens];
m13_100 -> m13_101  [key=0, style=solid];
m13_100 -> m13_7  [key=2, style=dotted];
m13_100 -> m13_103  [key=1, style=dashed, color=darkseagreen4, label=seen];
m13_100 -> m13_104  [key=1, style=dashed, color=darkseagreen4, label=seen];
m13_100 -> m13_106  [key=1, style=dashed, color=darkseagreen4, label=seen];
m13_100 -> m13_107  [key=1, style=dashed, color=darkseagreen4, label=seen];
m13_101 -> m13_102  [key=0, style=solid];
m13_101 -> m13_106  [key=0, style=solid];
m13_101 -> m13_109  [key=2, style=dotted];
m13_101 -> m13_103  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_101 -> m13_104  [key=1, style=dashed, color=darkseagreen4, label=c];
m13_108 -> m13_11  [key=0, style=bold, color=blue];
m13_108 -> m13_61  [key=1, style=dashed, color=darkseagreen4, label=setsWithTrue];
m13_109 -> m13_95  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m13_134 -> m13_20  [key=1, style=dashed, color=darkseagreen4, label=unkTokens];
m13_135 -> m13_48  [key=1, style=dashed, color=darkseagreen4, label=values];
m13_136 -> m13_62  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CSharpx.Maybe<char>>"];
m13_137 -> m13_67  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_138 -> m13_73  [key=1, style=dashed, color=darkseagreen4, label=replaces];
m13_139 -> m13_81  [key=1, style=dashed, color=darkseagreen4, label=int];
m13_140 -> m13_84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m14_8 -> m14_9  [key=0, style=solid];
m14_9 -> m14_8  [key=0, style=bold, color=blue];
m14_2 -> m14_3  [key=0, style=solid];
m14_3 -> m14_2  [key=0, style=bold, color=blue];
m14_6 -> m14_7  [key=0, style=solid];
m14_7 -> m14_6  [key=0, style=bold, color=blue];
m14_0 -> m14_1  [key=0, style=solid];
m14_1 -> m14_0  [key=0, style=bold, color=blue];
m14_4 -> m14_5  [key=0, style=solid];
m14_5 -> m14_4  [key=0, style=bold, color=blue];
m17_75 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_75 -> m17_76  [key=0, style=solid];
m17_75 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_75 -> m17_77  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_76 -> m17_77  [key=0, style=solid];
m17_77 -> m17_78  [key=0, style=solid];
m17_77 -> m17_74  [key=2, style=dotted];
m17_78 -> m17_75  [key=0, style=bold, color=blue];
m17_0 -> m17_1  [key=0, style=solid, color=green];
m17_1 -> m17_2  [key=0, style=solid, color=green];
m17_1 -> m17_3  [key=0, style=solid];
m17_1 -> m17_1  [key=1, style=dashed, color=green, label=pi];
m17_1 -> m17_4  [key=2, style=dotted, color=green];
m17_1 -> m17_5  [key=2, style=dotted, color=green];
m17_1 -> m17_6  [key=2, style=dotted, color=green];
m17_1 -> m17_7  [key=2, style=dotted, color=green];
m17_1 -> m17_8  [key=2, style=dotted, color=green];
m17_1 -> m17_9  [key=2, style=dotted, color=green];
m17_1 -> m17_10  [key=1, style=dashed, color=green, label="lambda expression"];
m17_2 -> m17_3  [key=0, style=solid];
m17_2 -> m17_4  [key=2, style=dotted];
m17_2 -> m17_0  [key=0, style=bold, color=blue];
m17_3 -> m17_0  [key=0, style=bold, color=blue];
m17_66 -> m17_67  [key=0, style=solid];
m17_68 -> m17_74  [key=2, style=dotted];
m17_68 -> m17_69  [key=0, style=solid];
m17_68 -> m17_73  [key=2, style=dotted];
m17_67 -> m17_68  [key=0, style=solid];
m17_67 -> m17_70  [key=2, style=dotted];
m17_67 -> m17_71  [key=2, style=dotted];
m17_67 -> m17_72  [key=2, style=dotted];
m17_69 -> m17_66  [key=0, style=bold, color=blue];
m17_38 -> m17_39  [key=0, style=solid];
m17_10 -> m17_11  [key=0, style=solid];
m17_80 -> m17_7  [key=2, style=dotted];
m17_80 -> m17_81  [key=0, style=solid];
m17_80 -> m17_84  [key=2, style=dotted];
m17_80 -> m17_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_80 -> m17_82  [key=1, style=dashed, color=darkseagreen4, label=props];
m17_39 -> m17_9  [key=2, style=dotted];
m17_39 -> m17_40  [key=0, style=solid];
m17_39 -> m17_42  [key=2, style=dotted];
m17_12 -> m17_10  [key=0, style=bold, color=blue];
m17_11 -> m17_12  [key=0, style=solid];
m17_11 -> m17_13  [key=2, style=dotted];
m17_79 -> m17_80  [key=0, style=solid];
m17_81 -> m17_82  [key=0, style=solid];
m17_81 -> m17_85  [key=2, style=dotted];
m17_81 -> m17_86  [key=2, style=dotted];
m17_87 -> m17_88  [key=0, style=solid];
m17_82 -> m17_83  [key=0, style=solid];
m17_40 -> m17_41  [key=0, style=solid];
m17_83 -> m17_79  [key=0, style=bold, color=blue];
m17_89 -> m17_87  [key=0, style=bold, color=blue];
m17_88 -> m17_89  [key=0, style=solid];
m17_41 -> m17_38  [key=0, style=bold, color=blue];
m17_33 -> m17_39  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Core.SpecificationProperty, object>"];
m17_33 -> m17_34  [key=0, style=solid];
m17_33 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label=T];
m17_34 -> m17_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m17_34 -> m17_35  [key=0, style=solid];
m17_34 -> m17_36  [key=2, style=dotted];
m17_34 -> m17_37  [key=2, style=dotted];
m17_35 -> m17_33  [key=0, style=bold, color=blue];
m17_117 -> m17_80  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_117 -> m17_81  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m17_115 -> m17_39  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Core.SpecificationProperty, object>"];
m17_116 -> m17_40  [key=1, style=dashed, color=darkseagreen4, label=T];
m20_3 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m20_3 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_3 -> m20_28  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m20_3 -> m20_29  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_3 -> m20_19  [key=0, style=solid];
m20_3 -> m20_22  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m20_3 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_3 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_3 -> m20_70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m20_3 -> m20_74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m20_3 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_3 -> m20_4  [key=0, style=solid];
m20_3 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TypeDescriptor"];
m20_33 -> m20_34  [key=0, style=solid, color=green];
m20_33 -> m20_57  [key=2, style=dotted, color=green];
m20_33 -> m20_16  [key=2, style=dotted, color=green];
m20_24 -> m20_33  [key=1, style=dashed, color=green, label=tokenizerResult];
m20_24 -> m20_25  [key=0, style=solid];
m20_24 -> m20_45  [key=2, style=dotted];
m20_27 -> m20_33  [key=1, style=dashed, color=green, label=optionSpecProps];
m20_27 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label=pt];
m20_27 -> m20_28  [key=0, style=solid];
m20_27 -> m20_47  [key=2, style=dotted];
m20_27 -> m20_48  [key=2, style=dotted];
m20_27 -> m20_69  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_27 -> m20_30  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m20_28 -> m20_33  [key=1, style=dashed, color=green, label=valueSpecProps];
m20_28 -> m20_28  [key=1, style=dashed, color=darkseagreen4, label=pt];
m20_28 -> m20_29  [key=0, style=solid];
m20_28 -> m20_49  [key=2, style=dotted];
m20_28 -> m20_48  [key=2, style=dotted];
m20_28 -> m20_73  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_28 -> m20_30  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m20_29 -> m20_33  [key=1, style=dashed, color=green, label=missingValueErrors];
m20_29 -> m20_29  [key=1, style=dashed, color=darkseagreen4, label=token];
m20_29 -> m20_30  [key=0, style=solid];
m20_29 -> m20_50  [key=2, style=dotted];
m20_29 -> m20_51  [key=2, style=dotted];
m20_29 -> m20_52  [key=2, style=dotted];
m20_29 -> m20_76  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_29 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label=token];
m20_31 -> m20_33  [key=1, style=dashed, color=green, label=instance];
m20_31 -> m20_31  [key=1, style=dashed, color=darkseagreen4, label=instance];
m20_31 -> m20_32  [key=0, style=solid];
m20_31 -> m20_54  [key=2, style=dotted];
m20_31 -> m20_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_31 -> m20_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_31 -> m20_88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_31 -> m20_92  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_31 -> m20_95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_31 -> m20_99  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_32 -> m20_33  [key=0, style=solid, color=green];
m20_32 -> m20_55  [key=2, style=dotted];
m20_32 -> m20_56  [key=2, style=dotted];
m20_22 -> m20_24  [key=0, style=solid];
m20_22 -> m20_23  [key=0, style=solid];
m20_22 -> m20_40  [key=2, style=dotted];
m20_22 -> m20_41  [key=2, style=dotted];
m20_22 -> m20_42  [key=2, style=dotted];
m20_21 -> m20_24  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m20_21 -> m20_29  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m20_21 -> m20_22  [key=0, style=solid];
m20_21 -> m20_21  [key=1, style=dashed, color=darkseagreen4, label=pt];
m20_21 -> m20_38  [key=2, style=dotted];
m20_21 -> m20_39  [key=2, style=dotted];
m20_21 -> m20_26  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m20_21 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m20_25 -> m20_32  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m20_25 -> m20_26  [key=0, style=solid];
m20_26 -> m20_27  [key=0, style=solid];
m20_26 -> m20_28  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m20_26 -> m20_29  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m20_26 -> m20_46  [key=2, style=dotted];
m20_26 -> m20_65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_20 -> m20_27  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m20_20 -> m20_28  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m20_20 -> m20_21  [key=0, style=solid];
m20_20 -> m20_36  [key=2, style=dotted];
m20_20 -> m20_37  [key=2, style=dotted];
m20_20 -> m20_59  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_30 -> m20_31  [key=0, style=solid];
m20_30 -> m20_32  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m20_30 -> m20_53  [key=2, style=dotted];
m20_19 -> m20_31  [key=1, style=dashed, color=darkseagreen4, label=instance];
m20_19 -> m20_20  [key=0, style=solid];
m20_19 -> m20_35  [key=2, style=dotted];
m20_19 -> m20_23  [key=1, style=dashed, color=darkseagreen4, label=instance];
m20_19 -> m20_17  [key=0, style=bold, color=blue];
m20_23 -> m20_34  [key=0, style=solid];
m20_23 -> m20_43  [key=2, style=dotted];
m20_23 -> m20_44  [key=2, style=dotted];
m20_34 -> m20_3  [key=0, style=bold, color=blue];
m20_15 -> m20_16  [key=0, style=solid];
m20_16 -> m20_17  [key=0, style=solid];
m20_16 -> m20_18  [key=2, style=dotted];
m20_14 -> m20_12  [key=0, style=bold, color=blue];
m20_11 -> m20_12  [key=0, style=solid];
m20_17 -> m20_18  [key=0, style=solid];
m20_17 -> m20_15  [key=0, style=bold, color=blue];
m20_18 -> m20_19  [key=0, style=solid];
m20_69 -> m20_70  [key=0, style=solid];
m20_73 -> m20_74  [key=0, style=solid];
m20_76 -> m20_77  [key=0, style=solid];
m20_77 -> m20_78  [key=0, style=solid];
m20_77 -> m20_79  [key=2, style=dotted];
m20_80 -> m20_81  [key=0, style=solid];
m20_84 -> m20_85  [key=0, style=solid];
m20_88 -> m20_89  [key=0, style=solid];
m20_92 -> m20_93  [key=0, style=solid];
m20_95 -> m20_96  [key=0, style=solid];
m20_99 -> m20_100  [key=0, style=solid];
m20_66 -> m20_67  [key=0, style=solid];
m20_66 -> m20_68  [key=2, style=dotted];
m20_70 -> m20_71  [key=0, style=solid];
m20_70 -> m20_72  [key=2, style=dotted];
m20_74 -> m20_75  [key=0, style=solid];
m20_74 -> m20_72  [key=2, style=dotted];
m20_65 -> m20_66  [key=0, style=solid];
m20_59 -> m20_60  [key=0, style=solid];
m20_71 -> m20_69  [key=0, style=bold, color=blue];
m20_75 -> m20_73  [key=0, style=bold, color=blue];
m20_78 -> m20_76  [key=0, style=bold, color=blue];
m20_82 -> m20_80  [key=0, style=bold, color=blue];
m20_81 -> m20_82  [key=0, style=solid];
m20_81 -> m20_83  [key=2, style=dotted];
m20_86 -> m20_84  [key=0, style=bold, color=blue];
m20_85 -> m20_86  [key=0, style=solid];
m20_85 -> m20_87  [key=2, style=dotted];
m20_90 -> m20_88  [key=0, style=bold, color=blue];
m20_89 -> m20_90  [key=0, style=solid];
m20_89 -> m20_91  [key=2, style=dotted];
m20_89 -> m20_83  [key=2, style=dotted];
m20_94 -> m20_92  [key=0, style=bold, color=blue];
m20_93 -> m20_94  [key=0, style=solid];
m20_93 -> m20_87  [key=2, style=dotted];
m20_97 -> m20_95  [key=0, style=bold, color=blue];
m20_96 -> m20_97  [key=0, style=solid];
m20_96 -> m20_91  [key=2, style=dotted];
m20_96 -> m20_98  [key=2, style=dotted];
m20_101 -> m20_99  [key=0, style=bold, color=blue];
m20_100 -> m20_101  [key=0, style=solid];
m20_100 -> m20_102  [key=2, style=dotted];
m20_100 -> m20_103  [key=2, style=dotted];
m20_100 -> m20_104  [key=2, style=dotted];
m20_4 -> m20_5  [key=0, style=solid];
m20_4 -> m20_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m20_4 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m20_4 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m20_4 -> m20_0  [key=0, style=bold, color=blue];
m20_67 -> m20_65  [key=0, style=bold, color=blue];
m20_61 -> m20_59  [key=0, style=bold, color=blue];
m20_60 -> m20_61  [key=0, style=solid];
m20_60 -> m20_62  [key=2, style=dotted];
m20_60 -> m20_63  [key=2, style=dotted];
m20_60 -> m20_64  [key=2, style=dotted];
m20_5 -> m20_6  [key=0, style=solid];
m20_5 -> m20_9  [key=2, style=dotted];
m20_5 -> m20_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_5 -> m20_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TargetType"];
m20_12 -> m20_13  [key=0, style=solid];
m20_12 -> m20_14  [key=2, style=dotted];
m20_6 -> m20_7  [key=0, style=solid];
m20_6 -> m20_10  [key=2, style=dotted];
m20_6 -> m20_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_6 -> m20_8  [key=0, style=solid];
m20_8 -> m20_4  [key=0, style=bold, color=blue];
m20_8 -> m20_9  [key=0, style=solid];
m20_8 -> m20_0  [key=2, style=dotted];
m20_8 -> m20_11  [key=2, style=dotted];
m20_13 -> m20_11  [key=0, style=bold, color=blue];
m20_13 -> m20_14  [key=0, style=solid];
m20_13 -> m20_15  [key=2, style=dotted];
m20_13 -> m20_16  [key=2, style=dotted];
m20_13 -> m20_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TypeDescriptor"];
m20_13 -> m20_17  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_7 -> m20_8  [key=0, style=solid];
m20_7 -> m20_9  [key=0, style=solid];
m20_7 -> m20_10  [key=2, style=dotted];
m20_9 -> m20_5  [key=0, style=bold, color=blue];
m20_0 -> m20_1  [key=0, style=solid];
m20_0 -> m20_2  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<int>"];
m20_0 -> m20_3  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<CommandLine.Core.TypeDescriptor>"];
m20_0 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_0 -> m20_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_0 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_0 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_1 -> m20_2  [key=0, style=solid];
m20_1 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TypeDescriptor"];
m20_1 -> m20_3  [key=2, style=dotted];
m20_1 -> m20_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m20_2 -> m20_3  [key=0, style=solid];
m20_2 -> m20_20  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.TypeDescriptor"];
m20_2 -> m20_0  [key=0, style=bold, color=blue];
m20_107 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_107 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_110 -> m20_77  [key=1, style=dashed, color=darkseagreen4, label=token];
m20_108 -> m20_66  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m20_109 -> m20_70  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m20_109 -> m20_74  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m20_105 -> m20_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_105 -> m20_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_105 -> m20_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_105 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m20_106 -> m20_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m20_106 -> m20_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m22_0 -> m22_1  [key=0, style=solid];
m22_1 -> m22_2  [key=0, style=solid];
m22_1 -> m22_6  [key=2, style=dotted];
m22_1 -> m22_4  [key=1, style=dashed, color=darkseagreen4, label=expected];
m22_2 -> m22_3  [key=0, style=solid];
m22_2 -> m22_7  [key=2, style=dotted];
m22_2 -> m22_8  [key=2, style=dotted];
m22_4 -> m22_5  [key=0, style=solid];
m22_4 -> m22_10  [key=2, style=dotted];
m22_3 -> m22_4  [key=0, style=solid];
m22_3 -> m22_9  [key=2, style=dotted];
m22_5 -> m22_0  [key=0, style=bold, color=blue];
m25_44 -> m25_45  [key=0, style=solid];
m25_44 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_45 -> m25_46  [key=0, style=solid];
m25_45 -> m25_47  [key=0, style=solid];
m25_47 -> m25_48  [key=0, style=solid];
m25_47 -> m25_0  [key=2, style=dotted];
m25_47 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_47 -> m25_50  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_47 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_47 -> m25_52  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_47 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_47 -> m25_54  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_47 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_47 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_46 -> m25_59  [key=0, style=solid];
m25_48 -> m25_49  [key=0, style=solid];
m25_48 -> m25_50  [key=0, style=solid];
m25_48 -> m25_60  [key=2, style=dotted];
m25_49 -> m25_54  [key=0, style=solid];
m25_49 -> m25_61  [key=2, style=dotted];
m25_49 -> m25_49  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_49 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_49 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_50 -> m25_51  [key=0, style=solid];
m25_50 -> m25_52  [key=0, style=solid];
m25_50 -> m25_60  [key=2, style=dotted];
m25_51 -> m25_54  [key=0, style=solid];
m25_51 -> m25_51  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_51 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_51 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_52 -> m25_53  [key=0, style=solid];
m25_52 -> m25_54  [key=0, style=solid];
m25_52 -> m25_60  [key=2, style=dotted];
m25_53 -> m25_54  [key=0, style=solid];
m25_53 -> m25_61  [key=2, style=dotted];
m25_53 -> m25_53  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_53 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_53 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_54 -> m25_55  [key=0, style=solid];
m25_54 -> m25_56  [key=0, style=solid];
m25_54 -> m25_62  [key=2, style=dotted];
m25_55 -> m25_56  [key=0, style=solid];
m25_55 -> m25_63  [key=2, style=dotted];
m25_55 -> m25_55  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_56 -> m25_57  [key=0, style=solid];
m25_56 -> m25_61  [key=2, style=dotted];
m25_56 -> m25_56  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_57 -> m25_58  [key=0, style=solid];
m25_57 -> m25_57  [key=1, style=dashed, color=darkseagreen4, label=convertedNumber];
m25_58 -> m25_59  [key=0, style=solid];
m25_59 -> m25_44  [key=0, style=bold, color=blue];
m25_35 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NameInfo"];
m25_35 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NameInfo"];
m25_35 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NameInfo"];
m25_35 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NameInfo"];
m25_35 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NameInfo"];
m25_35 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NameInfo"];
m25_29 -> m25_30  [key=0, style=solid];
m25_29 -> m25_31  [key=0, style=solid];
m25_24 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.NameInfo"];
m25_24 -> m25_19  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.NameInfo other"];
m25_24 -> m25_30  [key=0, style=solid];
m25_24 -> m25_31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m25_24 -> m25_25  [key=0, style=solid];
m25_24 -> m25_27  [key=0, style=solid];
m25_32 -> m25_33  [key=0, style=solid];
m25_32 -> m25_34  [key=2, style=dotted];
m25_32 -> m25_39  [key=2, style=dotted];
m25_30 -> m25_32  [key=0, style=solid];
m25_30 -> m25_31  [key=0, style=solid];
m25_30 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m25_31 -> m25_33  [key=0, style=solid];
m25_31 -> m25_32  [key=0, style=solid];
m25_31 -> m25_36  [key=2, style=dotted];
m25_31 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m25_33 -> m25_24  [key=0, style=bold, color=blue];
m25_33 -> m25_34  [key=0, style=solid];
m25_33 -> m25_42  [key=2, style=dotted];
m25_33 -> m25_43  [key=2, style=dotted];
m25_12 -> m25_9  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.NameInfo FromSpecification"];
m25_12 -> m25_13  [key=0, style=solid, color=red];
m25_12 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
m25_15 -> m25_9  [key=2, style=dotted];
m25_15 -> m25_17  [key=0, style=solid];
m25_15 -> m25_16  [key=0, style=solid];
m25_15 -> m25_18  [key=0, style=solid];
m25_13 -> m25_14  [key=0, style=solid, color=red];
m25_13 -> m25_16  [key=0, style=solid];
m25_13 -> m25_40  [key=2, style=dotted, color=red];
m25_13 -> m25_0  [key=2, style=dotted, color=red];
m25_13 -> m25_36  [key=2, style=dotted, color=red];
m25_13 -> m25_39  [key=2, style=dotted, color=red];
m25_14 -> m25_15  [key=0, style=solid];
m25_14 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_20  [key=1, style=dashed, color=red, label=int];
m25_14 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_14 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_16 -> m25_17  [key=0, style=solid];
m25_16 -> m25_0  [key=2, style=dotted];
m25_16 -> m25_36  [key=2, style=dotted];
m25_16 -> m25_39  [key=2, style=dotted];
m25_17 -> m25_12  [key=0, style=bold, color=blue];
m25_17 -> m25_18  [key=0, style=solid];
m25_17 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_20  [key=1, style=dashed, color=red, label=int];
m25_17 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_17 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_34 -> m25_0  [key=0, style=bold, color=blue];
m25_26 -> m25_27  [key=0, style=solid];
m25_26 -> m25_32  [key=0, style=solid];
m25_26 -> m25_0  [key=2, style=dotted];
m25_26 -> m25_38  [key=2, style=dotted];
m25_27 -> m25_28  [key=0, style=solid];
m25_27 -> m25_29  [key=2, style=dotted];
m25_27 -> m25_30  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m25_27 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m25_27 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=lastPart];
m25_28 -> m25_26  [key=0, style=bold, color=blue];
m25_28 -> m25_29  [key=0, style=solid];
m25_28 -> m25_32  [key=0, style=solid];
m25_0 -> m25_1  [key=0, style=solid];
m25_0 -> m25_3  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m25_0 -> m25_6  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_7  [key=1, style=dashed, color=red, label=int];
m25_0 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_9  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_13  [key=1, style=dashed, color=red, label=int];
m25_0 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_20  [key=1, style=dashed, color=red, label=int];
m25_0 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_0 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_1 -> m25_2  [key=0, style=solid];
m25_1 -> m25_3  [key=0, style=solid];
m25_3 -> m25_4  [key=0, style=solid];
m25_3 -> m25_5  [key=0, style=solid];
m25_5 -> m25_6  [key=0, style=solid];
m25_5 -> m25_37  [key=2, style=dotted];
m25_5 -> m25_7  [key=1, style=dashed, color=red, label=parts];
m25_5 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=parts];
m25_5 -> m25_13  [key=1, style=dashed, color=red, label=parts];
m25_5 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label=parts];
m25_5 -> m25_20  [key=1, style=dashed, color=red, label=parts];
m25_5 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=parts];
m25_5 -> m25_32  [key=1, style=dashed, color=darkseagreen4, label=parts];
m25_5 -> m25_33  [key=1, style=dashed, color=darkseagreen4, label=parts];
m25_6 -> m25_7  [key=0, style=solid, color=red];
m25_6 -> m25_9  [key=0, style=solid];
m25_2 -> m25_7  [key=0, style=solid];
m25_2 -> m25_8  [key=2, style=dotted];
m25_2 -> m25_34  [key=0, style=solid];
m25_4 -> m25_7  [key=0, style=solid];
m25_4 -> m25_8  [key=2, style=dotted];
m25_4 -> m25_34  [key=0, style=solid];
m25_4 -> m25_35  [key=2, style=dotted];
m25_4 -> m25_0  [key=2, style=dotted];
m25_4 -> m25_36  [key=2, style=dotted];
m25_7 -> m25_0  [key=0, style=bold, color=blue];
m25_7 -> m25_8  [key=0, style=solid, color=red];
m25_7 -> m25_38  [key=2, style=dotted, color=red];
m25_7 -> m25_39  [key=2, style=dotted, color=red];
m25_25 -> m25_26  [key=0, style=solid];
m25_9 -> m25_10  [key=0, style=solid, color=green];
m25_9 -> m25_12  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
m25_10 -> m25_11  [key=0, style=solid, color=green];
m25_10 -> m25_0  [key=2, style=dotted, color=green];
m25_10 -> m25_38  [key=2, style=dotted];
m25_10 -> m25_39  [key=2, style=dotted];
m25_11 -> m25_9  [key=0, style=bold, color=blue];
m25_11 -> m25_12  [key=0, style=solid];
m25_11 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_13  [key=1, style=dashed, color=red, label=int];
m25_11 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_20  [key=1, style=dashed, color=red, label=int];
m25_11 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_11 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_9  [key=0, style=solid];
m25_8 -> m25_8  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_11  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_13  [key=1, style=dashed, color=red, label=int];
m25_8 -> m25_14  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_15  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_17  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_18  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_19  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_20  [key=1, style=dashed, color=red, label=int];
m25_8 -> m25_21  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_24  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_25  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_27  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_28  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_29  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_8 -> m25_31  [key=1, style=dashed, color=darkseagreen4, label=int];
m25_18 -> m25_19  [key=0, style=solid];
m25_18 -> m25_33  [key=0, style=solid];
m25_18 -> m25_22  [key=1, style=dashed, color=darkseagreen4, label=object];
m25_18 -> m25_24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
m25_19 -> m25_20  [key=0, style=solid, color=red];
m25_19 -> m25_21  [key=0, style=solid];
m25_19 -> m25_41  [key=2, style=dotted];
m25_20 -> m25_33  [key=0, style=solid, color=red];
m25_20 -> m25_39  [key=2, style=dotted, color=red];
m25_20 -> m25_21  [key=0, style=solid];
m25_20 -> m25_22  [key=0, style=solid];
m25_21 -> m25_22  [key=0, style=solid];
m25_21 -> m25_23  [key=0, style=solid, color=red];
m25_21 -> m25_24  [key=2, style=dotted];
m25_22 -> m25_33  [key=0, style=solid];
m25_22 -> m25_39  [key=2, style=dotted];
m25_22 -> m25_23  [key=0, style=solid];
m25_22 -> m25_25  [key=2, style=dotted];
m25_23 -> m25_24  [key=0, style=solid, color=red];
m25_23 -> m25_18  [key=0, style=bold, color=blue];
m25_64 -> m25_4  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m25_64 -> m25_7  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m25_64 -> m25_10  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m25_64 -> m25_13  [key=1, style=dashed, color=red, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m25_64 -> m25_16  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m25_64 -> m25_26  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m25_64 -> m25_47  [key=1, style=dashed, color=darkseagreen4, label="Humanizer.Localisation.NumberToWords.FrenchNumberToWordsConverter"];
m26_15 -> m26_16  [key=0, style=solid];
m26_16 -> m26_17  [key=0, style=solid];
m26_16 -> m26_3  [key=2, style=dotted];
m26_17 -> m26_15  [key=0, style=bold, color=blue];
m26_12 -> m26_13  [key=0, style=solid];
m26_13 -> m26_14  [key=0, style=solid];
m26_13 -> m26_11  [key=2, style=dotted];
m26_14 -> m26_12  [key=0, style=bold, color=blue];
m26_18 -> m26_19  [key=0, style=solid];
m26_19 -> m26_20  [key=0, style=solid];
m26_19 -> m26_21  [key=2, style=dotted];
m26_20 -> m26_18  [key=0, style=bold, color=blue];
m26_22 -> m26_23  [key=0, style=solid, color=red];
m26_23 -> m26_24  [key=0, style=solid, color=red];
m26_24 -> m26_22  [key=0, style=bold, color=blue];
m26_8 -> m26_9  [key=0, style=solid];
m26_9 -> m26_10  [key=0, style=solid];
m26_9 -> m26_11  [key=2, style=dotted];
m26_10 -> m26_8  [key=0, style=bold, color=blue];
m26_0 -> m26_1  [key=0, style=solid];
m26_1 -> m26_2  [key=0, style=solid];
m26_1 -> m26_3  [key=2, style=dotted];
m26_2 -> m26_0  [key=0, style=bold, color=blue];
m26_4 -> m26_5  [key=0, style=solid];
m26_5 -> m26_6  [key=0, style=solid];
m26_5 -> m26_7  [key=2, style=dotted];
m26_6 -> m26_4  [key=0, style=bold, color=blue];
m27_0 -> m27_1  [key=0, style=solid];
m27_0 -> m27_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_0 -> m27_4  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_0 -> m27_5  [key=1, style=dashed, color=darkseagreen4, label=int];
m27_0 -> m27_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_0 -> m27_7  [key=1, style=dashed, color=darkseagreen4, label=string];
m27_0 -> m27_2  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m27_0 -> m27_0  [key=3, color=darkorchid, style=bold, label="method methodReturn string Truncate"];
m27_1 -> m27_2  [key=0, style=solid];
m27_1 -> m27_3  [key=0, style=solid];
m27_3 -> m27_4  [key=0, style=solid];
m27_3 -> m27_5  [key=0, style=solid];
m27_4 -> m27_8  [key=0, style=solid];
m27_5 -> m27_6  [key=0, style=solid];
m27_5 -> m27_7  [key=0, style=solid];
m27_6 -> m27_8  [key=0, style=solid];
m27_6 -> m27_9  [key=2, style=dotted];
m27_7 -> m27_8  [key=0, style=solid];
m27_7 -> m27_9  [key=2, style=dotted];
m27_2 -> m27_8  [key=0, style=solid];
m27_8 -> m27_0  [key=0, style=bold, color=blue];
m28_10 -> m28_11  [key=0, style=solid, color=green];
m28_11 -> m28_12  [key=0, style=solid, color=green];
m28_11 -> m28_17  [key=0, style=solid, color=green];
m28_12 -> m28_13  [key=0, style=solid];
m28_17 -> m28_18  [key=0, style=solid];
m28_13 -> m28_14  [key=0, style=solid];
m28_16 -> m28_18  [key=0, style=solid];
m28_14 -> m28_15  [key=0, style=solid];
m28_15 -> m28_16  [key=0, style=solid];
m28_18 -> m28_10  [key=0, style=bold, color=blue];
m28_0 -> m28_1  [key=0, style=solid];
m28_0 -> m28_7  [key=1, style=dashed, color=darkseagreen4, label=char];
m28_3 -> m28_4  [key=0, style=solid, color=green];
m28_2 -> m28_3  [key=0, style=solid, color=green];
m28_4 -> m28_5  [key=0, style=solid];
m28_1 -> m28_2  [key=0, style=solid];
m28_1 -> m28_7  [key=0, style=solid];
m28_5 -> m28_6  [key=0, style=solid];
m28_7 -> m28_8  [key=0, style=solid];
m28_7 -> m28_9  [key=2, style=dotted];
m28_6 -> m28_8  [key=0, style=solid];
m28_8 -> m28_0  [key=0, style=bold, color=blue];
m29_4 -> m29_6  [key=3, color=green, style=bold, label="Parameter variable System.Type conversionType"];
m29_4 -> m29_30  [key=0, style=solid];
m29_4 -> m29_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo conversionCulture"];
m29_4 -> m29_5  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo conversionCulture"];
m29_4 -> m29_7  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
m29_30 -> m29_34  [key=2, style=dotted];
m29_30 -> m29_31  [key=0, style=solid];
m29_30 -> m29_32  [key=1, style=dashed, color=darkseagreen4, label=result];
m29_32 -> m29_33  [key=0, style=solid];
m29_32 -> m29_36  [key=2, style=dotted];
m29_31 -> m29_32  [key=0, style=solid];
m29_31 -> m29_35  [key=2, style=dotted];
m29_31 -> m29_37  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_31 -> m29_39  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_33 -> m29_4  [key=0, style=bold, color=blue];
m29_34 -> m29_44  [key=0, style=solid, color=green];
m29_34 -> m29_52  [key=1, style=dashed, color=green, label=string];
m29_34 -> m29_63  [key=1, style=dashed, color=green, label=string];
m29_34 -> m29_73  [key=1, style=dashed, color=green, label=string];
m29_34 -> m29_53  [key=1, style=dashed, color=green, label=string];
m29_34 -> m29_46  [key=1, style=dashed, color=green, label="System.Type"];
m29_34 -> m29_4  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo conversionCulture"];
m29_34 -> m29_60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_34 -> m29_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_34 -> m29_68  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_34 -> m29_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_34 -> m29_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_34 -> m29_45  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_34 -> m29_82  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_34 -> m29_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_44 -> m29_44  [key=3, color=green, style=bold, label="Local variable System.Func<object> changeType"];
m29_44 -> m29_45  [key=0, style=solid, color=green];
m29_44 -> m29_46  [key=1, style=dashed, color=green, label=changeType];
m29_45 -> m29_46  [key=0, style=solid, color=green];
m29_45 -> m29_45  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<object> makeType"];
m29_46 -> m29_47  [key=0, style=solid, color=green];
m29_46 -> m29_48  [key=2, style=dotted, color=green];
m29_46 -> m29_49  [key=2, style=dotted, color=green];
m29_46 -> m29_50  [key=2, style=dotted, color=green];
m29_47 -> m29_34  [key=0, style=bold, color=blue];
m29_0 -> m29_1  [key=0, style=solid];
m29_1 -> m29_4  [key=2, style=dotted];
m29_1 -> m29_5  [key=2, style=dotted];
m29_1 -> m29_2  [key=0, style=solid];
m29_1 -> m29_3  [key=2, style=dotted];
m29_2 -> m29_0  [key=0, style=bold, color=blue];
m29_39 -> m29_40  [key=0, style=solid];
m29_21 -> m29_4  [key=2, style=dotted];
m29_21 -> m29_22  [key=0, style=solid];
m29_52 -> m29_53  [key=0, style=solid, color=green];
m29_51 -> m29_52  [key=0, style=solid, color=green];
m29_53 -> m29_54  [key=0, style=solid, color=green];
m29_53 -> m29_55  [key=2, style=dotted, color=green];
m29_53 -> m29_56  [key=2, style=dotted, color=green];
m29_53 -> m29_57  [key=2, style=dotted, color=green];
m29_53 -> m29_58  [key=2, style=dotted, color=green];
m29_63 -> m29_64  [key=0, style=solid, color=green];
m29_63 -> m29_65  [key=1, style=dashed, color=green, label=withValue];
m29_60 -> m29_63  [key=1, style=dashed, color=green, label=isFsOption];
m29_60 -> m29_73  [key=1, style=dashed, color=green, label=isFsOption];
m29_60 -> m29_61  [key=0, style=solid];
m29_60 -> m29_49  [key=2, style=dotted];
m29_60 -> m29_68  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m29_60 -> m29_64  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m29_60 -> m29_78  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m29_62 -> m29_63  [key=0, style=solid, color=green];
m29_62 -> m29_73  [key=1, style=dashed, color=green, label=type];
m29_62 -> m29_58  [key=2, style=dotted];
m29_62 -> m29_64  [key=1, style=dashed, color=darkseagreen4, label=type];
m29_62 -> m29_78  [key=1, style=dashed, color=darkseagreen4, label=type];
m29_64 -> m29_65  [key=0, style=solid];
m29_65 -> m29_66  [key=0, style=solid];
m29_65 -> m29_58  [key=2, style=dotted];
m29_73 -> m29_74  [key=0, style=solid, color=green];
m29_73 -> m29_75  [key=2, style=dotted, color=green];
m29_73 -> m29_76  [key=2, style=dotted, color=green];
m29_72 -> m29_73  [key=0, style=solid, color=green];
m29_74 -> m29_72  [key=0, style=bold, color=blue];
m29_54 -> m29_51  [key=0, style=bold, color=blue];
m29_20 -> m29_21  [key=0, style=solid];
m29_22 -> m29_20  [key=0, style=bold, color=blue];
m29_23 -> m29_24  [key=0, style=solid];
m29_27 -> m29_28  [key=0, style=solid];
m29_61 -> m29_62  [key=0, style=solid];
m29_68 -> m29_69  [key=0, style=solid];
m29_68 -> m29_70  [key=2, style=dotted];
m29_68 -> m29_71  [key=2, style=dotted];
m29_82 -> m29_83  [key=0, style=solid];
m29_82 -> m29_87  [key=2, style=dotted];
m29_83 -> m29_86  [key=0, style=solid];
m29_83 -> m29_88  [key=2, style=dotted];
m29_59 -> m29_60  [key=0, style=solid];
m29_78 -> m29_79  [key=0, style=solid];
m29_78 -> m29_80  [key=2, style=dotted];
m29_66 -> m29_59  [key=0, style=bold, color=blue];
m29_25 -> m29_23  [key=0, style=bold, color=blue];
m29_24 -> m29_25  [key=0, style=solid];
m29_24 -> m29_26  [key=2, style=dotted];
m29_29 -> m29_27  [key=0, style=bold, color=blue];
m29_28 -> m29_29  [key=0, style=solid];
m29_67 -> m29_68  [key=0, style=solid];
m29_69 -> m29_67  [key=0, style=bold, color=blue];
m29_81 -> m29_82  [key=0, style=solid];
m29_86 -> m29_81  [key=0, style=bold, color=blue];
m29_77 -> m29_78  [key=0, style=solid];
m29_79 -> m29_77  [key=0, style=bold, color=blue];
m29_37 -> m29_38  [key=0, style=solid];
m29_85 -> m29_86  [key=0, style=solid];
m29_85 -> m29_89  [key=2, style=dotted];
m29_38 -> m29_37  [key=0, style=bold, color=blue];
m29_40 -> m29_41  [key=0, style=solid];
m29_40 -> m29_42  [key=2, style=dotted];
m29_40 -> m29_43  [key=2, style=dotted];
m29_84 -> m29_85  [key=0, style=solid];
m29_41 -> m29_39  [key=0, style=bold, color=blue];
m29_57 -> m29_34  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Type conversionType"];
m29_57 -> m29_91  [key=3, color=darkorchid, style=bold, label="method methodReturn object ToEnum"];
m29_5 -> m29_6  [key=0, style=solid, color=green];
m29_5 -> m29_7  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m29_5 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m29_5 -> m29_0  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Globalization.CultureInfo conversionCulture"];
m29_6 -> m29_7  [key=0, style=solid, color=green];
m29_6 -> m29_10  [key=2, style=dotted, color=green];
m29_6 -> m29_11  [key=2, style=dotted, color=green];
m29_6 -> m29_12  [key=2, style=dotted, color=green];
m29_6 -> m29_13  [key=2, style=dotted, color=green];
m29_6 -> m29_14  [key=2, style=dotted, color=green];
m29_6 -> m29_21  [key=1, style=dashed, color=green, label=type];
m29_6 -> m29_8  [key=1, style=dashed, color=green, label=type];
m29_7 -> m29_8  [key=0, style=solid];
m29_7 -> m29_15  [key=2, style=dotted];
m29_7 -> m29_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_8 -> m29_9  [key=0, style=solid];
m29_8 -> m29_16  [key=2, style=dotted];
m29_8 -> m29_17  [key=2, style=dotted];
m29_8 -> m29_15  [key=2, style=dotted];
m29_8 -> m29_18  [key=2, style=dotted];
m29_8 -> m29_19  [key=2, style=dotted];
m29_8 -> m29_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_8 -> m29_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m29_9 -> m29_5  [key=0, style=bold, color=blue];
m29_90 -> m29_92  [key=1, style=dashed, color=green, label=string];
m29_90 -> m29_91  [key=0, style=solid];
m29_90 -> m29_95  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_92 -> m29_93  [key=0, style=solid, color=green];
m29_92 -> m29_95  [key=0, style=solid, color=green];
m29_92 -> m29_99  [key=2, style=dotted, color=green];
m29_92 -> m29_96  [key=1, style=dashed, color=green, label=parsedValue];
m29_91 -> m29_92  [key=0, style=solid, color=green];
m29_93 -> m29_94  [key=0, style=solid];
m29_95 -> m29_96  [key=0, style=solid];
m29_95 -> m29_97  [key=0, style=solid];
m29_95 -> m29_101  [key=2, style=dotted];
m29_96 -> m29_98  [key=0, style=solid];
m29_94 -> m29_98  [key=0, style=solid];
m29_94 -> m29_100  [key=2, style=dotted];
m29_97 -> m29_98  [key=0, style=solid];
m29_97 -> m29_100  [key=2, style=dotted];
m29_98 -> m29_90  [key=0, style=bold, color=blue];
m29_104 -> m29_52  [key=1, style=dashed, color=green, label=string];
m29_104 -> m29_63  [key=1, style=dashed, color=green, label=string];
m29_104 -> m29_73  [key=1, style=dashed, color=green, label=string];
m29_104 -> m29_53  [key=1, style=dashed, color=green, label=string];
m29_104 -> m29_65  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_104 -> m29_83  [key=1, style=dashed, color=darkseagreen4, label=string];
m29_105 -> m29_52  [key=1, style=dashed, color=green, label="System.Type"];
m29_105 -> m29_53  [key=1, style=dashed, color=green, label="System.Type"];
m29_105 -> m29_60  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_105 -> m29_61  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_105 -> m29_68  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_105 -> m29_62  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_105 -> m29_82  [key=1, style=dashed, color=darkseagreen4, label="System.Type"];
m29_106 -> m29_52  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m29_106 -> m29_63  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m29_106 -> m29_73  [key=1, style=dashed, color=green, label="System.Globalization.CultureInfo"];
m29_107 -> m29_73  [key=1, style=dashed, color=green, label=isFsOption];
m29_107 -> m29_68  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m29_107 -> m29_78  [key=1, style=dashed, color=darkseagreen4, label=isFsOption];
m29_108 -> m29_73  [key=1, style=dashed, color=green, label=type];
m29_108 -> m29_78  [key=1, style=dashed, color=darkseagreen4, label=type];
m29_102 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m29_103 -> m29_21  [key=1, style=dashed, color=darkseagreen4, label=type];
m36_8 -> m36_9  [key=0, style=solid];
m36_9 -> m36_8  [key=0, style=bold, color=blue];
m36_2 -> m36_3  [key=0, style=solid];
m36_3 -> m36_2  [key=0, style=bold, color=blue];
m36_6 -> m36_7  [key=0, style=solid];
m36_7 -> m36_6  [key=0, style=bold, color=blue];
m36_0 -> m36_1  [key=0, style=solid];
m36_1 -> m36_0  [key=0, style=bold, color=blue];
m36_4 -> m36_5  [key=0, style=solid];
m36_5 -> m36_4  [key=0, style=bold, color=blue];
m38_0 -> m38_1  [key=0, style=solid];
m38_1 -> m38_2  [key=0, style=solid];
m38_1 -> m38_3  [key=0, style=solid];
m38_2 -> m38_3  [key=0, style=solid];
m38_2 -> m38_4  [key=2, style=dotted];
m38_3 -> m38_0  [key=0, style=bold, color=blue];
m39_0 -> m39_1  [key=0, style=solid];
m39_1 -> m39_0  [key=0, style=bold, color=blue];
m39_4 -> m39_5  [key=0, style=solid];
m39_5 -> m39_4  [key=0, style=bold, color=blue];
m39_2 -> m39_3  [key=0, style=solid];
m39_3 -> m39_2  [key=0, style=bold, color=blue];
m42_11 -> m42_12  [key=0, style=solid];
m42_12 -> m42_13  [key=0, style=solid];
m42_12 -> m42_3  [key=2, style=dotted];
m42_13 -> m42_11  [key=0, style=bold, color=blue];
m42_8 -> m42_9  [key=0, style=solid];
m42_8 -> m42_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtNoon"];
m42_9 -> m42_10  [key=0, style=solid];
m42_9 -> m42_7  [key=2, style=dotted];
m42_10 -> m42_8  [key=0, style=bold, color=blue];
m42_0 -> m42_1  [key=0, style=solid];
m42_0 -> m42_5  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m42_0 -> m42_9  [key=3, color=darkorchid, style=bold, label="Parameter variable int hour"];
m42_1 -> m42_2  [key=0, style=solid];
m42_1 -> m42_3  [key=2, style=dotted];
m42_2 -> m42_0  [key=0, style=bold, color=blue];
m42_4 -> m42_5  [key=0, style=solid];
m42_4 -> m42_0  [key=3, color=darkorchid, style=bold, label="method methodReturn System.DateTime AtMidnight"];
m42_5 -> m42_6  [key=0, style=solid];
m42_5 -> m42_7  [key=2, style=dotted];
m42_6 -> m42_4  [key=0, style=bold, color=blue];
m43_0 -> m43_1  [key=0, style=solid, color=red];
m43_1 -> m43_2  [key=0, style=solid, color=red];
m43_1 -> m43_4  [key=2, style=dotted, color=red];
m43_1 -> m43_5  [key=2, style=dotted, color=red];
m43_1 -> m43_1  [key=1, style=dashed, color=red, label=word];
m43_2 -> m43_3  [key=0, style=solid];
m43_2 -> m43_6  [key=2, style=dotted];
m43_3 -> m43_0  [key=0, style=bold, color=blue];
m45_0 -> m45_1  [key=0, style=solid];
m45_0 -> m45_2  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m45_0 -> m45_20  [key=1, style=dashed, color=darkseagreen4, label="System.DateTime"];
m45_1 -> m45_2  [key=0, style=solid];
m45_1 -> m45_4  [key=1, style=dashed, color=green, label=tense];
m45_1 -> m45_6  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_8  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_10  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_12  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_14  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_16  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_18  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_20  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_21  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_22  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_25  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_1 -> m45_29  [key=1, style=dashed, color=darkseagreen4, label=tense];
m45_2 -> m45_3  [key=0, style=solid];
m45_2 -> m45_31  [key=2, style=dotted];
m45_2 -> m45_32  [key=2, style=dotted];
m45_20 -> m45_21  [key=0, style=solid];
m45_20 -> m45_22  [key=0, style=solid];
m45_20 -> m45_34  [key=2, style=dotted];
m45_4 -> m45_30  [key=0, style=solid, color=green];
m45_4 -> m45_33  [key=2, style=dotted, color=green];
m45_6 -> m45_30  [key=0, style=solid];
m45_6 -> m45_33  [key=2, style=dotted];
m45_6 -> m45_6  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_6 -> m45_7  [key=1, style=dashed, color=green, label=ts];
m45_8 -> m45_30  [key=0, style=solid];
m45_8 -> m45_33  [key=2, style=dotted];
m45_10 -> m45_30  [key=0, style=solid];
m45_10 -> m45_33  [key=2, style=dotted];
m45_10 -> m45_10  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_10 -> m45_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_12 -> m45_30  [key=0, style=solid];
m45_12 -> m45_33  [key=2, style=dotted];
m45_14 -> m45_30  [key=0, style=solid];
m45_14 -> m45_33  [key=2, style=dotted];
m45_14 -> m45_14  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_14 -> m45_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_16 -> m45_30  [key=0, style=solid];
m45_16 -> m45_33  [key=2, style=dotted];
m45_18 -> m45_30  [key=0, style=solid];
m45_18 -> m45_33  [key=2, style=dotted];
m45_18 -> m45_18  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_18 -> m45_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_21 -> m45_30  [key=0, style=solid];
m45_21 -> m45_33  [key=2, style=dotted];
m45_22 -> m45_30  [key=0, style=solid];
m45_22 -> m45_33  [key=2, style=dotted];
m45_22 -> m45_22  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_22 -> m45_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_25 -> m45_30  [key=0, style=solid];
m45_25 -> m45_33  [key=2, style=dotted];
m45_29 -> m45_30  [key=0, style=solid];
m45_29 -> m45_33  [key=2, style=dotted];
m45_3 -> m45_4  [key=0, style=solid, color=green];
m45_3 -> m45_5  [key=0, style=solid];
m45_3 -> m45_3  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_5 -> m45_6  [key=0, style=solid];
m45_5 -> m45_7  [key=0, style=solid, color=green];
m45_5 -> m45_5  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_7 -> m45_8  [key=0, style=solid, color=green];
m45_7 -> m45_9  [key=0, style=solid, color=green];
m45_7 -> m45_7  [key=1, style=dashed, color=green, label=ts];
m45_9 -> m45_10  [key=0, style=solid];
m45_9 -> m45_11  [key=0, style=solid];
m45_9 -> m45_9  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_11 -> m45_12  [key=0, style=solid];
m45_11 -> m45_13  [key=0, style=solid];
m45_11 -> m45_11  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_13 -> m45_14  [key=0, style=solid];
m45_13 -> m45_15  [key=0, style=solid];
m45_13 -> m45_13  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_15 -> m45_16  [key=0, style=solid];
m45_15 -> m45_17  [key=0, style=solid];
m45_15 -> m45_15  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_17 -> m45_18  [key=0, style=solid];
m45_17 -> m45_19  [key=0, style=solid];
m45_17 -> m45_17  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_19 -> m45_20  [key=0, style=solid];
m45_19 -> m45_23  [key=0, style=solid];
m45_19 -> m45_19  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_19 -> m45_22  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_23 -> m45_24  [key=0, style=solid];
m45_23 -> m45_26  [key=0, style=solid];
m45_23 -> m45_23  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_24 -> m45_25  [key=0, style=solid];
m45_24 -> m45_35  [key=2, style=dotted];
m45_24 -> m45_36  [key=2, style=dotted];
m45_24 -> m45_24  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_24 -> m45_26  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_26 -> m45_27  [key=0, style=solid];
m45_26 -> m45_35  [key=2, style=dotted];
m45_26 -> m45_36  [key=2, style=dotted];
m45_26 -> m45_26  [key=1, style=dashed, color=darkseagreen4, label=ts];
m45_26 -> m45_29  [key=1, style=dashed, color=darkseagreen4, label=years];
m45_27 -> m45_28  [key=0, style=solid];
m45_27 -> m45_29  [key=0, style=solid];
m45_28 -> m45_29  [key=0, style=solid];
m45_30 -> m45_0  [key=0, style=bold, color=blue];
m46_0 -> m46_1  [key=0, style=solid];
m46_0 -> m46_4  [key=3, color=darkorchid, style=bold, label="method methodReturn string Ordinalize"];
m46_1 -> m46_2  [key=0, style=solid];
m46_1 -> m46_3  [key=2, style=dotted];
m46_1 -> m46_4  [key=2, style=dotted];
m46_2 -> m46_0  [key=0, style=bold, color=blue];
m46_4 -> m46_9  [key=0, style=solid, color=red];
m46_4 -> m46_11  [key=1, style=dashed, color=darkseagreen4, label=string];
m46_4 -> m46_12  [key=1, style=dashed, color=darkseagreen4, label=int];
m46_4 -> m46_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m46_4 -> m46_16  [key=1, style=dashed, color=darkseagreen4, label=string];
m46_4 -> m46_18  [key=1, style=dashed, color=darkseagreen4, label=string];
m46_4 -> m46_19  [key=1, style=dashed, color=red, label=string];
m46_4 -> m46_0  [key=3, color=darkorchid, style=bold, label="Parameter variable string numberString"];
m46_4 -> m46_5  [key=3, color=darkorchid, style=bold, label="Parameter variable int number"];
m46_9 -> m46_10  [key=0, style=solid, color=red];
m46_11 -> m46_20  [key=0, style=solid];
m46_12 -> m46_13  [key=0, style=solid];
m46_12 -> m46_15  [key=0, style=solid];
m46_12 -> m46_17  [key=0, style=solid];
m46_12 -> m46_19  [key=0, style=solid, color=red];
m46_14 -> m46_20  [key=0, style=solid];
m46_16 -> m46_20  [key=0, style=solid];
m46_18 -> m46_20  [key=0, style=solid];
m46_19 -> m46_20  [key=0, style=solid, color=red];
m46_10 -> m46_11  [key=0, style=solid];
m46_10 -> m46_12  [key=0, style=solid];
m46_13 -> m46_14  [key=0, style=solid];
m46_15 -> m46_16  [key=0, style=solid];
m46_17 -> m46_18  [key=0, style=solid];
m46_20 -> m46_4  [key=0, style=bold, color=blue];
m46_5 -> m46_6  [key=0, style=solid];
m46_5 -> m46_4  [key=3, color=darkorchid, style=bold, label="method methodReturn string Ordinalize"];
m46_6 -> m46_7  [key=0, style=solid];
m46_6 -> m46_8  [key=2, style=dotted];
m46_6 -> m46_4  [key=2, style=dotted];
m46_7 -> m46_5  [key=0, style=bold, color=blue];
}
