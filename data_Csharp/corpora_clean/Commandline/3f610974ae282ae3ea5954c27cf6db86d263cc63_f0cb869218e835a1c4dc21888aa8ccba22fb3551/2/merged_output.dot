digraph  {
m0_4 [cluster="ReadText.Demo.Program.Main(string[])", color=green, community=0, file="Program.cs", label="0: var result = Parser.Default.ParseArguments<HeadOptions, TailOptions>(args)", span="41-41"];
m0_30 [cluster="CommandLine.Core.TypeConverter.ChangeTypeScalar(string, System.Type, System.Globalization.CultureInfo, bool)", file="Program.cs", label="var result = ChangeTypeScalarImpl(value, conversionType, conversionCulture, ignoreValueCase)", span="43-43"];
m0_31 [cluster="System.Text.StringBuilder.StringBuilder(string)", file="Program.cs", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
m0_32 [cluster="System.Text.StringBuilder.Append(object)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
m0_33 [cluster="System.Text.StringBuilder.Append(string)", file="Program.cs", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
m0_59 [cluster="System.Func<TResult>.Invoke()", file="Program.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_67 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="53-74"];
m0_11 [cluster="System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", file="Program.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SingleOrDefault<TSource>()", span="0-0"];
m0_66 [cluster="lambda expression", file="Program.cs", label="return (value == null) ? empty() : withValue();", span="73-73"];
m0_102 [cluster="System.Enum.IsDefined(System.Type, object)", file="Program.cs", label="Entry System.Enum.IsDefined(System.Type, object)", span="0-0"];
m0_50 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="1: MakeError()", span="46-46"];
m0_34 [cluster="System.Text.StringBuilder.ToString()", file="Program.cs", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
m0_44 [cluster="System.Func<T, TResult>.Invoke(T)", file="Program.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m0_45 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="Program.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m0_46 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="45-45"];
m0_47 [cluster="lambda expression", color=green, community=1, file="Program.cs", label="1: Tuple.Create(header(opts), reader(opts))", span="45-45"];
m0_12 [cluster="T.ToMaybe<T>()", file="Program.cs", label="Entry T.ToMaybe<T>()", span="249-249"];
m0_60 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="53-74"];
m0_77 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", file="Program.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.Some(System.Type, object)", span="17-17"];
m0_16 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="1: var fromTop = opts.GetType() == typeof(HeadOptions)", span="16-16"];
m0_49 [cluster="Unk.IsFSharpOptionType", file="Program.cs", label="Entry Unk.IsFSharpOptionType", span=""];
m0_71 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.GetUnderlyingType(System.Type)", file="Program.cs", label=header, span=""];
m0_57 [cluster="System.Type.GetTypeInfo()", file="Program.cs", label="Entry System.Type.GetTypeInfo()", span="218-218"];
m0_72 [cluster="System.Nullable.GetUnderlyingType(System.Type)", file="Program.cs", label="Entry System.Nullable.GetUnderlyingType(System.Type)", span="0-0"];
m0_0 [cluster="ReadText.Demo.Program.Main(string[])", file="Program.cs", label="Entry ReadText.Demo.Program.Main(string[])", span="12-12"];
m0_1 [cluster="ReadText.Demo.Program.Main(string[])", color=green, community=1, file="Program.cs", label="1: Func<IOptions, string> reader = opts =>\r\n		        {\r\n		            var fromTop = opts.GetType() == typeof(HeadOptions);\r\n		            return opts.Lines.HasValue\r\n		                ? ReadLines(opts.FileName, fromTop, (int)opts.Lines)\r\n		                : ReadBytes(opts.FileName, fromTop, (int)opts.Bytes);\r\n		        }", span="14-20"];
m0_2 [cluster="ReadText.Demo.Program.Main(string[])", color=green, community=1, file="Program.cs", label="1: Func<IOptions, string> header = opts =>\r\n		        {\r\n		            if (opts.Quiet)\r\n		            {\r\n		                return string.Empty;\r\n		            }\r\n                    var fromTop = opts.GetType() == typeof(HeadOptions);\r\n		            var builder = new StringBuilder(''Reading '');\r\n		            builder = opts.Lines.HasValue\r\n		                ? builder.Append(opts.Lines).Append('' lines'')\r\n		                : builder.Append(opts.Bytes).Append('' bytes'');\r\n		            builder = fromTop ? builder.Append('' from top:'') : builder.Append('' from bottom:'');\r\n		            return builder.ToString();\r\n		        }", span="21-34"];
m0_19 [cluster="object.GetType()", file="Program.cs", label="Entry object.GetType()", span="0-0"];
m0_22 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="34-34"];
m0_21 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs", label="Entry ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64"];
m0_20 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="Program.cs", label="Entry ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54"];
m0_23 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="1: opts.Quiet", span="23-23"];
m0_27 [cluster="lambda expression", color=green, community=1, file="Program.cs", label="0: builder = opts.Lines.HasValue\r\n		                ? builder.Append(opts.Lines).Append('' lines'')\r\n		                : builder.Append(opts.Bytes).Append('' bytes'')", span="29-31"];
m0_24 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="1: return string.Empty;", span="25-25"];
m0_25 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="1: var fromTop = opts.GetType() == typeof(HeadOptions)", span="27-27"];
m0_28 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="1: builder = fromTop ? builder.Append('' from top:'') : builder.Append('' from bottom:'')", span="32-32"];
m0_29 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="1: return builder.ToString();", span="33-33"];
m0_37 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="0: return;", span="37-37"];
m0_39 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="35-39"];
m0_38 [cluster="lambda expression", color=green, community=0, file="Program.cs", label="0: Console.WriteLine(text)", span="38-38"];
m0_40 [cluster="System.Console.WriteLine(string)", file="Program.cs", label="Entry System.Console.WriteLine(string)", span="0-0"];
m0_41 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="44-44"];
m0_52 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", color=green, community=0, file="Program.cs", label="1: var lines = File.ReadAllLines(fileName)", span="56-56"];
m0_61 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", color=green, community=0, file="Program.cs", label="1: var bytes = File.ReadAllBytes(fileName)", span="66-66"];
m0_62 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", color=green, community=0, file="Program.cs", label="1: fromTop", span="67-67"];
m0_69 [cluster="ReadText.Demo.Program.MakeError()", file="Program.cs", label="Exit ReadText.Demo.Program.MakeError()", span="74-74"];
m0_63 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", color=green, community=0, file="Program.cs", label="1: return Encoding.UTF8.GetString(bytes, 0, count);", span="69-69"];
m0_64 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", color=green, community=0, file="Program.cs", label="1: return Encoding.UTF8.GetString(bytes, bytes.Length - count, count);", span="71-71"];
m0_74 [cluster="lambda expression", file="Program.cs", label="isFsOption\r\n                                ? FSharpOptionHelper.Some(type, Convert.ChangeType(value, type, conversionCulture))\r\n                                : Convert.ChangeType(value, type, conversionCulture)", span="67-69"];
m0_53 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", color=green, community=0, file="Program.cs", label="1: fromTop", span="57-57"];
m0_83 [cluster="lambda expression", file="Program.cs", label="var ctor = conversionType.GetConstructor(new[] { typeof(string) })", span="85-85"];
m0_84 [cluster="lambda expression", file="Program.cs", label="return ctor.Invoke(new object[] { value });", span="86-86"];
m0_51 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="46-46"];
m0_54 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", color=green, community=0, file="Program.cs", label="1: return string.Join(Environment.NewLine, lines.Take(count));", span="59-59"];
m0_65 [cluster="ReadText.Demo.Program.ReadBytes(string, bool, int)", file="Program.cs", label="Exit ReadText.Demo.Program.ReadBytes(string, bool, int)", span="64-64"];
m0_79 [cluster="lambda expression", file="Program.cs", label="isFsOption ? FSharpOptionHelper.None(type) : null", span="71-71"];
m0_68 [cluster="ReadText.Demo.Program.MakeError()", color=green, community=0, file="Program.cs", label="0: return Tuple.Create(''\0'', ''\0'');", span="76-76"];
m0_70 [cluster="lambda expression", file="Program.cs", label=reader, span=""];
m0_73 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="66-69"];
m0_75 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="66-69"];
m0_78 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="71-71"];
m0_80 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="71-71"];
m0_82 [cluster="lambda expression", file="Program.cs", label="Entry lambda expression", span="81-92"];
m0_85 [cluster="lambda expression", file="Program.cs", label=Exception, span="88-88"];
m0_86 [cluster="lambda expression", file="Program.cs", label="throw new FormatException(''Destination conversion type must have a constructor that accepts a string.'');", span="90-90"];
m0_87 [cluster="lambda expression", file="Program.cs", label="Exit lambda expression", span="81-92"];
m0_17 [cluster="CSharpx.Maybe.Nothing<T>()", color=green, community=1, file="Program.cs", label="1: Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m0_42 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", color=green, community=0, file="Program.cs", label="0: Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_15 [cluster="Unk.Select", file="Program.cs", label="Entry Unk.Select", span=""];
m0_18 [cluster="Unk.ToUntypedArray", file="Program.cs", label="Entry Unk.ToUntypedArray", span=""];
m0_48 [cluster="System.Type.IsPrimitiveEx()", file="Program.cs", label="Entry System.Type.IsPrimitiveEx()", span="201-201"];
m0_36 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", color=green, community=0, file="Program.cs", label="0: Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.ToMaybe<TSuccess, TMessage>()", span="25-25"];
m0_26 [cluster="Unk.MatchNothing", color=green, community=0, file="Program.cs", label="0: Entry Unk.MatchNothing", span=""];
m0_58 [cluster="string.ToEnum(System.Type, bool)", file="Program.cs", label="Entry string.ToEnum(System.Type, bool)", span="100-100"];
m0_76 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", file="Program.cs", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
m0_3 [cluster="ReadText.Demo.Program.Main(string[])", color=green, community=1, file="Program.cs", label="0: Action<string> printIfNotEmpty = text =>\r\n                {\r\n                    if (text.Length == 0) { return; }\r\n                    Console.WriteLine(text);\r\n                }", span="35-39"];
m0_10 [cluster="CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", file="Program.cs", label="Entry CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", span="25-25"];
m0_56 [cluster="ReadText.Demo.Program.ReadLines(string, bool, int)", file="Program.cs", label="Exit ReadText.Demo.Program.ReadLines(string, bool, int)", span="54-54"];
m0_91 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="Entry CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", span="100-100"];
m0_92 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="object parsedValue", span="102-102"];
m0_93 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="parsedValue = Enum.Parse(conversionType, value, ignoreValueCase)", span="105-105"];
m0_96 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="Enum.IsDefined(conversionType, parsedValue)", span="111-111"];
m0_94 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label=ArgumentException, span="107-107"];
m0_97 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="return parsedValue;", span="113-113"];
m0_95 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="throw new FormatException();", span="109-109"];
m0_98 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="throw new FormatException();", span="115-115"];
m0_99 [cluster="CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", file="Program.cs", label="Exit CommandLine.Core.TypeConverter.ToEnum(string, System.Type, bool)", span="100-100"];
m0_90 [cluster="System.FormatException.FormatException(string)", file="Program.cs", label="Entry System.FormatException.FormatException(string)", span="0-0"];
m0_5 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=1, file="Program.cs", label="1: Entry CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", span="24-24"];
m0_6 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=0, file="Program.cs", label="0: var type =\r\n                conversionType.GetGenericArguments()\r\n                              .SingleOrDefault()\r\n                              .ToMaybe()\r\n                              .FromJustOrFail(\r\n                                  new InvalidOperationException(''Non scalar properties should be sequence of type IEnumerable<T>.'')\r\n                    )", span="26-32"];
m0_7 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=0, file="Program.cs", label="0: var converted = values.Select(value => ChangeTypeScalar(value, type, conversionCulture, ignoreValueCase))", span="34-34"];
m0_8 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", color=green, community=0, file="Program.cs", label="0: return converted.Any(a => a.MatchNothing())\r\n                ? Maybe.Nothing<object>()\r\n                : Maybe.Just(converted.Select(c => ((Just<object>)c).Value).ToUntypedArray(type));", span="36-38"];
m0_9 [cluster="CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", file="Program.cs", label="Exit CommandLine.Core.TypeConverter.ChangeTypeSequence(System.Collections.Generic.IEnumerable<string>, System.Type, System.Globalization.CultureInfo, bool)", span="24-24"];
m0_88 [cluster="System.Type.GetConstructor(System.Type[])", file="Program.cs", label="Entry System.Type.GetConstructor(System.Type[])", span="0-0"];
m0_14 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", file="Program.cs", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
m0_100 [cluster="System.Enum.Parse(System.Type, string, bool)", file="Program.cs", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
m0_13 [cluster="ReadText.Demo.Program.MakeError()", file="Program.cs", label="Entry ReadText.Demo.Program.MakeError()", span="74-74"];
m0_55 [cluster="string.IsBooleanString()", color=green, community=0, file="Program.cs", label="1: Entry string.IsBooleanString()", span="65-65"];
m0_81 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", file="Program.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.None(System.Type)", span="25-25"];
m0_35 [cluster="RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", file="Program.cs", label="Entry RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>.Match<TSuccess, TMessage>(System.Action<TSuccess, System.Collections.Generic.IEnumerable<TMessage>>, System.Action<System.Collections.Generic.IEnumerable<TMessage>>)", span="495-495"];
m0_89 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="Program.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m0_101 [cluster="System.FormatException.FormatException()", file="Program.cs", label="Entry System.FormatException.FormatException()", span="0-0"];
m0_43 [cluster="System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", file="Program.cs", label="Entry System.Exception.RethrowWhenAbsentIn(System.Collections.Generic.IEnumerable<System.Type>)", span="11-11"];
m0_103 [file="Program.cs", label="System.Globalization.CultureInfo", span=""];
m0_104 [file="Program.cs", label=bool, span=""];
m0_105 [file="Program.cs", label=type, span=""];
m0_106 [file="Program.cs", label=string, span=""];
m0_107 [file="Program.cs", label="System.Type", span=""];
m0_108 [file="Program.cs", label="System.Globalization.CultureInfo", span=""];
m0_109 [file="Program.cs", label=bool, span=""];
m0_110 [file="Program.cs", label=isFsOption, span=""];
m0_111 [file="Program.cs", label=type, span=""];
m0_4 -> m0_30  [key=0, style=solid];
m0_4 -> m0_5  [color=green, key=0, style=solid];
m0_4 -> m0_10  [color=green, key=2, style=dotted];
m0_30 -> m0_31  [key=0, style=solid];
m0_30 -> m0_34  [key=2, style=dotted];
m0_30 -> m0_32  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_35  [key=2, style=dotted];
m0_31 -> m0_37  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_31 -> m0_39  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_36  [key=2, style=dotted];
m0_33 -> m0_4  [color=blue, key=0, style=bold];
m0_67 -> m0_60  [color=blue, key=0, style=bold];
m0_66 -> m0_67  [key=0, style=solid];
m0_66 -> m0_59  [key=2, style=dotted];
m0_50 -> m0_51  [color=green, key=0, style=solid];
m0_50 -> m0_13  [color=green, key=2, style=dotted];
m0_34 -> m0_44  [key=0, style=solid];
m0_34 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_69  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_63  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_45  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_34 -> m0_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_34 -> m0_46  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_46  [color=darkseagreen4, key=1, label=changeType, style=dashed];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_44  [color=darkorchid, key=3, label="Parameter variable int unit", style=bold];
m0_46 -> m0_47  [color=green, key=0, style=solid];
m0_46 -> m0_48  [key=2, style=dotted];
m0_46 -> m0_49  [key=2, style=dotted];
m0_46 -> m0_50  [key=2, style=dotted];
m0_47 -> m0_34  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [color=green, key=0, style=solid];
m0_47 -> m0_44  [color=green, key=2, style=dotted];
m0_47 -> m0_45  [color=green, key=2, style=dotted];
m0_60 -> m0_61  [key=0, style=solid];
m0_16 -> m0_17  [color=green, key=0, style=solid];
m0_16 -> m0_19  [color=green, key=2, style=dotted];
m0_71 -> m0_42  [color=green, key=1, label=header, style=dashed];
m0_71 -> m0_47  [color=green, key=1, label=header, style=dashed];
m0_0 -> m0_1  [color=green, key=0, style=solid];
m0_0 -> m0_4  [color=green, key=1, label="string[]", style=dashed];
m0_1 -> m0_2  [color=green, key=0, style=solid];
m0_1 -> m0_3  [color=red, key=2, style=dotted];
m0_1 -> m0_4  [color=red, key=2, style=dotted];
m0_1 -> m0_5  [color=red, key=2, style=dotted];
m0_1 -> m0_1  [color=green, key=3, label="Local variable System.Func<ReadText.Demo.IOptions, string> reader", style=bold];
m0_1 -> m0_16  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_1 -> m0_17  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_1 -> m0_42  [color=green, key=1, label=reader, style=dashed];
m0_1 -> m0_47  [color=green, key=1, label=reader, style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_2 -> m0_2  [color=green, key=3, label="Local variable System.Func<ReadText.Demo.IOptions, string> header", style=bold];
m0_2 -> m0_3  [color=green, key=0, style=solid];
m0_2 -> m0_23  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_2 -> m0_25  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_2 -> m0_27  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_2 -> m0_5  [color=green, key=1, label=header, style=dashed];
m0_2 -> m0_42  [color=green, key=1, label=header, style=dashed];
m0_2 -> m0_47  [color=green, key=1, label=header, style=dashed];
m0_22 -> m0_23  [color=green, key=0, style=solid];
m0_22 -> m0_25  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_22 -> m0_27  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_22 -> m0_20  [color=blue, key=0, style=bold];
m0_21 -> m0_22  [key=0, style=solid];
m0_21 -> m0_4  [key=2, style=dotted];
m0_21 -> m0_1  [color=green, key=3, label="Parameter variable bool fromTop", style=bold];
m0_21 -> m0_61  [color=green, key=0, style=solid];
m0_21 -> m0_62  [color=green, key=1, label=bool, style=dashed];
m0_21 -> m0_63  [color=green, key=1, label=int, style=dashed];
m0_21 -> m0_64  [color=green, key=1, label=int, style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_50  [color=green, key=0, style=solid];
m0_20 -> m0_1  [color=green, key=3, label="Parameter variable bool fromTop", style=bold];
m0_20 -> m0_52  [color=green, key=0, style=solid];
m0_20 -> m0_53  [color=green, key=1, label=bool, style=dashed];
m0_20 -> m0_54  [color=green, key=1, label=int, style=dashed];
m0_20 -> m0_55  [color=green, key=1, label=int, style=dashed];
m0_23 -> m0_24  [color=green, key=0, style=solid];
m0_23 -> m0_25  [color=green, key=0, style=solid];
m0_27 -> m0_28  [color=green, key=0, style=solid];
m0_27 -> m0_27  [color=green, key=1, label=builder, style=dashed];
m0_27 -> m0_32  [color=green, key=2, style=dotted];
m0_27 -> m0_33  [color=green, key=2, style=dotted];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_26  [key=2, style=dotted];
m0_24 -> m0_41  [color=green, key=0, style=solid];
m0_25 -> m0_23  [color=blue, key=0, style=bold];
m0_25 -> m0_26  [color=green, key=0, style=solid];
m0_25 -> m0_19  [color=green, key=2, style=dotted];
m0_25 -> m0_28  [color=green, key=1, label=fromTop, style=dashed];
m0_28 -> m0_29  [color=green, key=0, style=solid];
m0_28 -> m0_28  [color=green, key=1, label=builder, style=dashed];
m0_28 -> m0_33  [color=green, key=2, style=dotted];
m0_29 -> m0_27  [color=blue, key=0, style=bold];
m0_29 -> m0_41  [color=green, key=0, style=solid];
m0_29 -> m0_34  [color=green, key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_39  [color=green, key=0, style=solid];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_36  [color=green, key=0, style=solid];
m0_39 -> m0_38  [color=green, key=1, label=string, style=dashed];
m0_39 -> m0_39  [color=blue, key=0, style=bold];
m0_38 -> m0_37  [color=blue, key=0, style=bold];
m0_38 -> m0_39  [color=green, key=0, style=solid];
m0_38 -> m0_40  [color=green, key=2, style=dotted];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_42  [key=2, style=dotted];
m0_40 -> m0_43  [key=2, style=dotted];
m0_41 -> m0_39  [color=blue, key=0, style=bold];
m0_41 -> m0_22  [color=blue, key=0, style=bold];
m0_41 -> m0_42  [color=green, key=0, style=solid];
m0_52 -> m0_53  [color=green, key=0, style=solid];
m0_52 -> m0_57  [color=green, key=2, style=dotted];
m0_52 -> m0_54  [color=green, key=1, label=lines, style=dashed];
m0_52 -> m0_55  [color=green, key=1, label=lines, style=dashed];
m0_61 -> m0_62  [color=green, key=0, style=solid];
m0_61 -> m0_49  [key=2, style=dotted];
m0_61 -> m0_69  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m0_61 -> m0_64  [color=green, key=1, label=bytes, style=dashed];
m0_61 -> m0_74  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m0_61 -> m0_65  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m0_61 -> m0_79  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m0_61 -> m0_66  [color=green, key=2, style=dotted];
m0_61 -> m0_63  [color=green, key=1, label=bytes, style=dashed];
m0_62 -> m0_63  [color=green, key=0, style=solid];
m0_62 -> m0_64  [color=green, key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_71  [key=2, style=dotted];
m0_69 -> m0_72  [key=2, style=dotted];
m0_69 -> m0_13  [color=blue, key=0, style=bold];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_59  [key=2, style=dotted];
m0_63 -> m0_74  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_63 -> m0_79  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_63 -> m0_67  [color=green, key=2, style=dotted];
m0_64 -> m0_65  [color=green, key=0, style=solid];
m0_64 -> m0_66  [color=darkseagreen4, key=1, label=withValue, style=dashed];
m0_64 -> m0_67  [color=green, key=2, style=dotted];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_76  [key=2, style=dotted];
m0_74 -> m0_77  [key=2, style=dotted];
m0_53 -> m0_54  [color=green, key=0, style=solid];
m0_53 -> m0_55  [key=2, style=dotted];
m0_53 -> m0_56  [key=2, style=dotted];
m0_53 -> m0_57  [key=2, style=dotted];
m0_53 -> m0_58  [key=2, style=dotted];
m0_53 -> m0_59  [key=2, style=dotted];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_88  [key=2, style=dotted];
m0_84 -> m0_87  [key=0, style=solid];
m0_84 -> m0_89  [key=2, style=dotted];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_20  [color=blue, key=0, style=bold];
m0_54 -> m0_51  [color=blue, key=0, style=bold];
m0_54 -> m0_41  [color=blue, key=0, style=bold];
m0_54 -> m0_56  [color=green, key=0, style=solid];
m0_54 -> m0_58  [color=green, key=2, style=dotted];
m0_54 -> m0_59  [color=green, key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_21  [color=blue, key=0, style=bold];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_81  [key=2, style=dotted];
m0_68 -> m0_69  [color=green, key=0, style=solid];
m0_68 -> m0_45  [color=green, key=2, style=dotted];
m0_70 -> m0_68  [color=blue, key=0, style=bold];
m0_70 -> m0_42  [color=green, key=1, label=reader, style=dashed];
m0_70 -> m0_47  [color=green, key=1, label=reader, style=dashed];
m0_73 -> m0_74  [key=0, style=solid];
m0_75 -> m0_73  [color=blue, key=0, style=bold];
m0_78 -> m0_79  [key=0, style=solid];
m0_80 -> m0_78  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_85 -> m0_86  [key=0, style=solid];
m0_86 -> m0_87  [key=0, style=solid];
m0_86 -> m0_90  [key=2, style=dotted];
m0_87 -> m0_82  [color=blue, key=0, style=bold];
m0_17 -> m0_18  [color=green, key=0, style=solid];
m0_17 -> m0_20  [color=green, key=2, style=dotted];
m0_17 -> m0_21  [color=green, key=2, style=dotted];
m0_42 -> m0_54  [color=green, key=0, style=solid];
m0_42 -> m0_44  [color=green, key=2, style=dotted];
m0_42 -> m0_45  [color=green, key=2, style=dotted];
m0_15 -> m0_16  [color=green, key=0, style=solid];
m0_15 -> m0_17  [color=green, key=1, label="ReadText.Demo.IOptions", style=dashed];
m0_18 -> m0_15  [color=blue, key=0, style=bold];
m0_48 -> m0_46  [color=blue, key=0, style=bold];
m0_36 -> m0_37  [color=green, key=0, style=solid];
m0_36 -> m0_38  [color=green, key=0, style=solid];
m0_26 -> m0_27  [color=green, key=0, style=solid];
m0_26 -> m0_31  [color=green, key=2, style=dotted];
m0_3 -> m0_4  [color=green, key=0, style=solid];
m0_3 -> m0_3  [color=green, key=3, label="Local variable System.Action<string> printIfNotEmpty", style=bold];
m0_3 -> m0_36  [color=green, key=1, label=string, style=dashed];
m0_3 -> m0_38  [color=green, key=1, label=string, style=dashed];
m0_3 -> m0_6  [color=green, key=1, label=printIfNotEmpty, style=dashed];
m0_3 -> m0_7  [color=green, key=1, label=printIfNotEmpty, style=dashed];
m0_56 -> m0_20  [color=blue, key=0, style=bold];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_93  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_91 -> m0_96  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_92 -> m0_93  [key=0, style=solid];
m0_93 -> m0_94  [key=0, style=solid];
m0_93 -> m0_96  [key=0, style=solid];
m0_93 -> m0_100  [key=2, style=dotted];
m0_93 -> m0_97  [color=darkseagreen4, key=1, label=parsedValue, style=dashed];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_98  [key=0, style=solid];
m0_96 -> m0_102  [key=2, style=dotted];
m0_94 -> m0_95  [key=0, style=solid];
m0_97 -> m0_99  [key=0, style=solid];
m0_95 -> m0_99  [key=0, style=solid];
m0_95 -> m0_101  [key=2, style=dotted];
m0_98 -> m0_99  [key=0, style=solid];
m0_98 -> m0_101  [key=2, style=dotted];
m0_99 -> m0_91  [color=blue, key=0, style=bold];
m0_5 -> m0_6  [color=green, key=0, style=solid];
m0_5 -> m0_11  [color=green, key=2, style=dotted];
m0_5 -> m0_41  [color=green, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_46  [color=green, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_20  [color=green, key=1, label="lambda expression", style=dashed];
m0_5 -> m0_7  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_5 -> m0_8  [color=green, key=1, label=texts, style=dashed];
m0_5 -> m0_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_6 -> m0_7  [color=green, key=0, style=solid];
m0_6 -> m0_12  [color=green, key=2, style=dotted];
m0_6 -> m0_10  [key=2, style=dotted];
m0_6 -> m0_11  [key=2, style=dotted];
m0_6 -> m0_13  [key=2, style=dotted];
m0_6 -> m0_14  [key=2, style=dotted];
m0_6 -> m0_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_6 -> m0_8  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_7 -> m0_8  [color=green, key=0, style=solid];
m0_7 -> m0_12  [color=green, key=2, style=dotted];
m0_7 -> m0_15  [key=2, style=dotted];
m0_7 -> m0_20  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_9  [color=green, key=0, style=solid];
m0_8 -> m0_13  [color=green, key=2, style=dotted];
m0_8 -> m0_14  [color=green, key=2, style=dotted];
m0_8 -> m0_16  [key=2, style=dotted];
m0_8 -> m0_17  [key=2, style=dotted];
m0_8 -> m0_15  [key=2, style=dotted];
m0_8 -> m0_18  [key=2, style=dotted];
m0_8 -> m0_19  [key=2, style=dotted];
m0_8 -> m0_23  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_8 -> m0_36  [color=darkorchid, key=3, label="Parameter variable bool countEmptyUnits", style=bold];
m0_9 -> m0_0  [color=blue, key=0, style=bold];
m0_9 -> m0_5  [color=blue, key=0, style=bold];
m0_13 -> m0_68  [color=green, key=0, style=solid];
m0_55 -> m0_56  [color=green, key=0, style=solid];
m0_55 -> m0_60  [color=green, key=2, style=dotted];
m0_55 -> m0_58  [color=green, key=2, style=dotted];
m0_55 -> m0_59  [color=green, key=2, style=dotted];
m0_103 -> m0_21  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_104 -> m0_21  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_105 -> m0_21  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_106 -> m0_52  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_106 -> m0_64  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_106 -> m0_74  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_106 -> m0_66  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_106 -> m0_53  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_106 -> m0_84  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_107 -> m0_52  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_107 -> m0_61  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_107 -> m0_62  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_107 -> m0_69  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_107 -> m0_63  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_107 -> m0_53  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_107 -> m0_83  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m0_108 -> m0_52  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_108 -> m0_64  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_108 -> m0_74  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_109 -> m0_53  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_110 -> m0_69  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m0_110 -> m0_74  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m0_110 -> m0_79  [color=darkseagreen4, key=1, label=isFsOption, style=dashed];
m0_111 -> m0_74  [color=darkseagreen4, key=1, label=type, style=dashed];
m0_111 -> m0_79  [color=darkseagreen4, key=1, label=type, style=dashed];
}
