digraph  {
m1_4 [cluster="Unk.Should", file="FSharpOptionHelperTests.cs", label="Entry Unk.Should", span=""];
m1_0 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.FSharpCore_loaded_when_present()", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.FSharpCore_loaded_when_present()", span="11-11"];
m1_1 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.FSharpCore_loaded_when_present()", color=green, community=0, file="FSharpOptionHelperTests.cs", label="0: new FSharpOptionHelper().Available.Should().BeTrue()", span="13-13"];
m1_2 [cluster="CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.FSharpCore_loaded_when_present()", file="FSharpOptionHelperTests.cs", label="Exit CommandLine.Tests.Unit.Infrastructure.FSharpOptionHelperTests.FSharpCore_loaded_when_present()", span="11-11"];
m1_5 [cluster="Unk.BeTrue", file="FSharpOptionHelperTests.cs", label="Entry Unk.BeTrue", span=""];
m1_3 [cluster="CommandLine.Infrastructure.FSharpOptionHelper.FSharpOptionHelper()", file="FSharpOptionHelperTests.cs", label="Entry CommandLine.Infrastructure.FSharpOptionHelper.FSharpOptionHelper()", span="13-13"];
m2_7 [cluster="CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.StringArrayEnumerator.StringArrayEnumerator(string[])", span="1335-1335"];
m2_0 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
m2_1 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilderTests.cs", label="var ae = new StringArrayEnumerator(new string[] { ''--optarr'', ''one'', ''two'', ''--plain'', ''3'' })", span="42-42"];
m2_2 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilderTests.cs", label="ae.MoveNext()", span="44-44"];
m2_3 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilderTests.cs", label="var items = ArgumentParser.PublicWrapperOfGetNextInputValues(ae)", span="46-46"];
m2_5 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilderTests.cs", label="ae.Current.Should().Equal(''two'')", span="49-49"];
m2_4 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilderTests.cs", label="base.ElementsShouldBeEqual(new string[] { ''one'', ''two'' }, items)", span="48-48"];
m2_6 [cluster="CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.ArgumentParserFixture.GetNextInputValues()", span="40-40"];
m2_10 [cluster="Unk.ElementsShouldBeEqual", file="InstanceBuilderTests.cs", label="Entry Unk.ElementsShouldBeEqual", span=""];
m2_9 [cluster="Unk.PublicWrapperOfGetNextInputValues", file="InstanceBuilderTests.cs", label="Entry Unk.PublicWrapperOfGetNextInputValues", span=""];
m2_12 [cluster="Unk.Equal", file="InstanceBuilderTests.cs", label="Entry Unk.Equal", span=""];
m2_8 [cluster="CommandLine.StringArrayEnumerator.MoveNext()", file="InstanceBuilderTests.cs", label="Entry CommandLine.StringArrayEnumerator.MoveNext()", span="1390-1390"];
m2_11 [cluster="Unk.Should", file="InstanceBuilderTests.cs", label="Entry Unk.Should", span=""];
m2_13 [file="InstanceBuilderTests.cs", label="CommandLine.Tests.ArgumentParserFixture", span=""];
m3_58 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="13-13"];
m3_80 [cluster="NotParsed<T>.cstr", file="ReflectionHelper.cs", label="Entry NotParsed<T>.cstr", span=""];
m3_50 [cluster="Unk.ThrowingValidate", file="ReflectionHelper.cs", label="Entry Unk.ThrowingValidate", span=""];
m3_68 [cluster="T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionHelper.cs", label="Entry T.SetProperties<T>(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="58-58"];
m3_113 [cluster="string.MatchName(string, string, System.StringComparer)", file="ReflectionHelper.cs", label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8"];
m3_48 [cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126"];
m3_55 [cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="ReflectionHelper.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142"];
m3_65 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="ReflectionHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m3_74 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="ReflectionHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
m3_106 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13"];
m3_124 [cluster="CSharpx.Maybe<T>.FromJust<T>(System.Exception)", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe<T>.FromJust<T>(System.Exception)", span="160-160"];
m3_6 [cluster="lambda expression", file="ReflectionHelper.cs", label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27"];
m3_95 [cluster="Unk.>", file="ReflectionHelper.cs", label="Entry Unk.>", span=""];
m3_79 [cluster="Unk.Any", file="ReflectionHelper.cs", label="Entry Unk.Any", span=""];
m3_18 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
m3_5 [cluster="lambda expression", file="ReflectionHelper.cs", label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24"];
m3_61 [cluster="CommandLine.Core.Specification.IsValue()", file="ReflectionHelper.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m3_2 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14"];
m3_3 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m3_4 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="22-29"];
m3_71 [cluster="System.Reflection.MethodBase.GetParameters()", file="ReflectionHelper.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m3_73 [cluster="System.Type.CreateDefaultForImmutable()", file="ReflectionHelper.cs", label="Entry System.Type.CreateDefaultForImmutable()", span="125-125"];
m3_77 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ReflectionHelper.cs", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40"];
m3_14 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m3_70 [cluster="Unk.GetConstructor", file="ReflectionHelper.cs", label="Entry Unk.GetConstructor", span=""];
m3_63 [cluster="Unk.Single", file="ReflectionHelper.cs", label="Entry Unk.Single", span=""];
m3_49 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionHelper.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14"];
m3_52 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m3_56 [cluster="System.Func<TResult>.Invoke()", file="ReflectionHelper.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m3_85 [cluster="object.GetType()", file="ReflectionHelper.cs", label="Entry object.GetType()", span="0-0"];
m3_145 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="116-116"];
m3_12 [cluster="lambda expression", file="ReflectionHelper.cs", label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24"];
m3_16 [cluster="lambda expression", file="ReflectionHelper.cs", label="NameLookup.HavingSeparator(name, optionSpecs, nameComparer)", span="27-27"];
m3_93 [cluster="lambda expression", file="ReflectionHelper.cs", label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="54-57"];
m3_100 [cluster="lambda expression", file="ReflectionHelper.cs", label="TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer)", span="74-74"];
m3_104 [cluster="lambda expression", file="ReflectionHelper.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79"];
m3_108 [cluster="lambda expression", file="ReflectionHelper.cs", label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="85-85"];
m3_111 [cluster="lambda expression", file="ReflectionHelper.cs", label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="89-89"];
m3_8 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="22-29"];
m3_11 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="24-24"];
m3_13 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="24-24"];
m3_7 [cluster="lambda expression", file="ReflectionHelper.cs", label="return explodedTokens;", span="28-28"];
m3_15 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="27-27"];
m3_17 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="27-27"];
m3_82 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="42-42"];
m3_92 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="53-57"];
m3_94 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="53-57"];
m3_96 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="55-55"];
m3_99 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="74-74"];
m3_101 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="74-74"];
m3_103 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="79-79"];
m3_105 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="79-79"];
m3_107 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="85-85"];
m3_109 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="85-85"];
m3_110 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="89-89"];
m3_112 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="89-89"];
m3_114 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="96-96"];
m3_86 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="44-45"];
m3_84 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="42-42"];
m3_83 [cluster="lambda expression", file="ReflectionHelper.cs", label="f().GetType()", span="42-42"];
m3_98 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="55-55"];
m3_97 [cluster="lambda expression", file="ReflectionHelper.cs", label="f()", span="55-55"];
m3_117 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="99-99"];
m3_121 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="100-100"];
m3_125 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="102-102"];
m3_129 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="103-103"];
m3_132 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="105-107"];
m3_136 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="108-108"];
m3_116 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="96-96"];
m3_115 [cluster="lambda expression", file="ReflectionHelper.cs", label="f()", span="96-96"];
m3_88 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="44-45"];
m3_87 [cluster="lambda expression", file="ReflectionHelper.cs", label="SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>())", span="44-45"];
m3_142 [cluster="lambda expression", file="ReflectionHelper.cs", label="Entry lambda expression", span="115-115"];
m3_119 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="99-99"];
m3_118 [cluster="lambda expression", file="ReflectionHelper.cs", label="sp.Value.IsJust()", span="99-99"];
m3_123 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="100-100"];
m3_122 [cluster="lambda expression", file="ReflectionHelper.cs", label="sp.Value.FromJust()", span="100-100"];
m3_127 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="102-102"];
m3_126 [cluster="lambda expression", file="ReflectionHelper.cs", label="sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust()", span="102-102"];
m3_131 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="103-103"];
m3_130 [cluster="lambda expression", file="ReflectionHelper.cs", label="sp.Specification.DefaultValue.FromJust()", span="103-103"];
m3_134 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="105-107"];
m3_133 [cluster="lambda expression", file="ReflectionHelper.cs", label="sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing()", span="105-107"];
m3_138 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="108-108"];
m3_137 [cluster="lambda expression", file="ReflectionHelper.cs", label="sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray()", span="108-108"];
m3_144 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="115-115"];
m3_143 [cluster="lambda expression", file="ReflectionHelper.cs", label=v, span="115-115"];
m3_146 [cluster="lambda expression", file="ReflectionHelper.cs", label=d, span="116-116"];
m3_147 [cluster="lambda expression", file="ReflectionHelper.cs", label="Exit lambda expression", span="116-116"];
m3_76 [cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12"];
m3_54 [cluster="System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="ReflectionHelper.cs", label="Entry System.Collections.Generic.IEnumerable<string>.Preprocess(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="12-12"];
m3_0 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", file="ReflectionHelper.cs", label="Entry Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", span="7-7"];
m3_1 [cluster="Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", color=green, community=0, file="ReflectionHelper.cs", label="0: Exit Humanizer.Tests.NumberToOrdinalWordsTests.NumberToOrdinalWordsTests()", span="7-7"];
m3_62 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="ReflectionHelper.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m3_78 [cluster="Unk.Concat", file="ReflectionHelper.cs", label="Entry Unk.Concat", span=""];
m3_81 [cluster="CommandLine.Parsed<T>.Parsed(T)", file="ReflectionHelper.cs", label="Entry CommandLine.Parsed<T>.Parsed(T)", span="72-72"];
m3_140 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", file="ReflectionHelper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
m3_141 [cluster="System.Type.CreateEmptyArray()", file="ReflectionHelper.cs", label="Entry System.Type.CreateEmptyArray()", span="101-101"];
m3_72 [cluster="string.ToLower()", file="ReflectionHelper.cs", label="Entry string.ToLower()", span="0-0"];
m3_139 [cluster="System.Type.GetGenericArguments()", file="ReflectionHelper.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m3_9 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, bool>)", span="12-12"];
m3_89 [cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105"];
m3_102 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23"];
m3_19 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="42-42"];
m3_23 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="Func<T> makeDefault = () =>\r\n                typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="53-57"];
m3_24 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="arguments.Any()", span="59-59"];
m3_25 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var preprocessorErrors = arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))", span="61-61"];
m3_28 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="68-68"];
m3_30 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="72-74"];
m3_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="76-80"];
m3_32 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-85"];
m3_33 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="87-89"];
m3_37 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="96-96"];
m3_27 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="return new NotParsed<T>(makeDefault(), preprocessorErrors);", span="64-64"];
m3_45 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="return new NotParsed<T>(instance, allErrors);", span="131-131"];
m3_46 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="return new Parsed<T>(instance);", span="133-133"];
m3_20 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="44-45"];
m3_36 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="typeInfo.IsMutable()", span="94-94"];
m3_39 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="112-112"];
m3_22 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var optionSpecs = specs\r\n                .ThrowingValidate(SpecificationGuards.Lookup)\r\n                .OfType<OptionSpecification>()", span="49-51"];
m3_26 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="preprocessorErrors.Any()", span="62-62"];
m3_29 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var tokens = tokenizerResult.Value", span="70-70"];
m3_43 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var allErrors = tokenizerResult.Errors.Concat(missingValueErrors)\r\n                .Concat(optionSpecProps.Errors)\r\n                .Concat(valueSpecProps.Errors)\r\n                .Concat(validationErrors)", span="124-127"];
m3_34 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="91-91"];
m3_38 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="97-108"];
m3_41 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="instance = (T)ctor.Invoke(values)", span="118-118"];
m3_44 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="allErrors.Any()", span="129-129"];
m3_21 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var specs = from pt in specProps select pt.Specification", span="47-47"];
m3_40 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="113-117"];
m3_35 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="T instance", span="93-93"];
m3_42 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="121-122"];
m3_47 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="ReflectionHelper.cs", label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35"];
m3_67 [cluster="System.Activator.CreateInstance<T>()", file="ReflectionHelper.cs", label="Entry System.Activator.CreateInstance<T>()", span="0-0"];
m3_90 [cluster="CSharpx.Maybe.Nothing<T>()", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="75-75"];
m3_59 [cluster="CommandLine.Core.Specification.IsOption()", file="ReflectionHelper.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m3_128 [cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="170-170"];
m3_135 [cluster="CSharpx.Maybe<T>.MatchNothing()", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="29-29"];
m3_66 [cluster="System.Type.IsMutable()", file="ReflectionHelper.cs", label="Entry System.Type.IsMutable()", span="115-115"];
m3_91 [cluster="CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.SpecificationProperty.Create(CommandLine.Core.Specification, System.Reflection.PropertyInfo, CSharpx.Maybe<object>)", span="21-21"];
m3_53 [cluster="CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.PreprocessorGuards.Lookup(System.StringComparer)", span="11-11"];
m3_51 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="ReflectionHelper.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m3_75 [cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="ReflectionHelper.cs", label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0"];
m3_69 [cluster="Unk.ToArray", file="ReflectionHelper.cs", label="Entry Unk.ToArray", span=""];
m3_120 [cluster="CSharpx.Maybe<T>.IsJust<T>()", file="ReflectionHelper.cs", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175"];
m3_64 [cluster="Unk.FromOptionSpecification", file="ReflectionHelper.cs", label="Entry Unk.FromOptionSpecification", span=""];
m3_57 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="ReflectionHelper.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m3_10 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="ReflectionHelper.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45"];
m3_60 [cluster="Unk.MapValues", file="ReflectionHelper.cs", label="Entry Unk.MapValues", span=""];
m3_148 [file="ReflectionHelper.cs", label="System.StringComparer", span=""];
m3_149 [file="ReflectionHelper.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m3_150 [file="ReflectionHelper.cs", label="CSharpx.Maybe<System.Func<T>>", span=""];
m3_151 [file="ReflectionHelper.cs", label=specProps, span=""];
m3_152 [file="ReflectionHelper.cs", label="System.StringComparer", span=""];
m3_153 [file="ReflectionHelper.cs", label=optionSpecs, span=""];
m3_154 [file="ReflectionHelper.cs", label="System.Globalization.CultureInfo", span=""];
m3_155 [file="ReflectionHelper.cs", label=token, span=""];
m1_0 -> m1_1  [color=green, key=0, style=solid];
m1_1 -> m1_2  [color=green, key=0, style=solid];
m1_1 -> m1_3  [color=green, key=2, style=dotted];
m1_1 -> m1_4  [color=green, key=2, style=dotted];
m1_1 -> m1_5  [color=green, key=2, style=dotted];
m1_2 -> m1_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_7  [key=2, style=dotted];
m2_1 -> m2_3  [color=darkseagreen4, key=1, label=ae, style=dashed];
m2_1 -> m2_5  [color=darkseagreen4, key=1, label=ae, style=dashed];
m2_2 -> m2_3  [key=0, style=solid];
m2_2 -> m2_8  [key=2, style=dotted];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_9  [key=2, style=dotted];
m2_3 -> m2_3  [color=darkorchid, key=3, label="Local variable System.Func<string, object> changeType", style=bold];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_11  [key=2, style=dotted];
m2_5 -> m2_12  [key=2, style=dotted];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_10  [key=2, style=dotted];
m2_4 -> m2_4  [color=darkorchid, key=3, label="Local variable System.Func<object> safeChangeType", style=bold];
m2_6 -> m2_0  [color=blue, key=0, style=bold];
m2_13 -> m2_4  [color=darkseagreen4, key=1, label="CommandLine.Tests.ArgumentParserFixture", style=dashed];
m3_6 -> m3_7  [key=0, style=solid];
m3_6 -> m3_10  [key=2, style=dotted];
m3_6 -> m3_15  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_5 -> m3_6  [key=0, style=solid];
m3_5 -> m3_9  [key=2, style=dotted];
m3_5 -> m3_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_2 -> m3_3  [key=0, style=solid];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_3 -> m3_4  [key=0, style=solid];
m3_3 -> m3_5  [key=2, style=dotted];
m3_3 -> m3_6  [key=2, style=dotted];
m3_3 -> m3_19  [key=0, style=solid];
m3_3 -> m3_23  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m3_3 -> m3_93  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m3_3 -> m3_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_3 -> m3_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m3_3 -> m3_28  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>", style=dashed];
m3_3 -> m3_30  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_100  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_31  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_104  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_3 -> m3_32  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_3 -> m3_108  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_3 -> m3_33  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_111  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_3 -> m3_37  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m3_4 -> m3_2  [color=blue, key=0, style=bold];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_4 -> m3_6  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_4 -> m3_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_145 -> m3_146  [key=0, style=solid];
m3_12 -> m3_13  [key=0, style=solid];
m3_12 -> m3_14  [key=2, style=dotted];
m3_16 -> m3_17  [key=0, style=solid];
m3_16 -> m3_18  [key=2, style=dotted];
m3_93 -> m3_93  [color=darkseagreen4, key=1, label=p, style=dashed];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_66  [key=2, style=dotted];
m3_93 -> m3_67  [key=2, style=dotted];
m3_93 -> m3_48  [key=2, style=dotted];
m3_93 -> m3_69  [key=2, style=dotted];
m3_93 -> m3_95  [key=2, style=dotted];
m3_93 -> m3_96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_100 -> m3_101  [key=0, style=solid];
m3_100 -> m3_102  [key=2, style=dotted];
m3_104 -> m3_105  [key=0, style=solid];
m3_104 -> m3_106  [key=2, style=dotted];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_106  [key=2, style=dotted];
m3_111 -> m3_112  [key=0, style=solid];
m3_111 -> m3_113  [key=2, style=dotted];
m3_8 -> m3_4  [color=blue, key=0, style=bold];
m3_11 -> m3_12  [key=0, style=solid];
m3_13 -> m3_11  [color=blue, key=0, style=bold];
m3_7 -> m3_8  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_17 -> m3_15  [color=blue, key=0, style=bold];
m3_82 -> m3_83  [key=0, style=solid];
m3_92 -> m3_93  [key=0, style=solid];
m3_94 -> m3_92  [color=blue, key=0, style=bold];
m3_96 -> m3_97  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_101 -> m3_99  [color=blue, key=0, style=bold];
m3_103 -> m3_104  [key=0, style=solid];
m3_105 -> m3_103  [color=blue, key=0, style=bold];
m3_107 -> m3_108  [key=0, style=solid];
m3_109 -> m3_107  [color=blue, key=0, style=bold];
m3_110 -> m3_111  [key=0, style=solid];
m3_112 -> m3_110  [color=blue, key=0, style=bold];
m3_114 -> m3_115  [key=0, style=solid];
m3_86 -> m3_87  [key=0, style=solid];
m3_84 -> m3_82  [color=blue, key=0, style=bold];
m3_83 -> m3_56  [key=2, style=dotted];
m3_83 -> m3_84  [key=0, style=solid];
m3_83 -> m3_85  [key=2, style=dotted];
m3_98 -> m3_96  [color=blue, key=0, style=bold];
m3_97 -> m3_56  [key=2, style=dotted];
m3_97 -> m3_98  [key=0, style=solid];
m3_117 -> m3_118  [key=0, style=solid];
m3_121 -> m3_122  [key=0, style=solid];
m3_125 -> m3_126  [key=0, style=solid];
m3_129 -> m3_130  [key=0, style=solid];
m3_132 -> m3_133  [key=0, style=solid];
m3_136 -> m3_137  [key=0, style=solid];
m3_116 -> m3_114  [color=blue, key=0, style=bold];
m3_115 -> m3_56  [key=2, style=dotted];
m3_115 -> m3_116  [key=0, style=solid];
m3_88 -> m3_86  [color=blue, key=0, style=bold];
m3_87 -> m3_88  [key=0, style=solid];
m3_87 -> m3_89  [key=2, style=dotted];
m3_87 -> m3_90  [key=2, style=dotted];
m3_87 -> m3_91  [key=2, style=dotted];
m3_142 -> m3_143  [key=0, style=solid];
m3_119 -> m3_117  [color=blue, key=0, style=bold];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_120  [key=2, style=dotted];
m3_123 -> m3_121  [color=blue, key=0, style=bold];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_124  [key=2, style=dotted];
m3_127 -> m3_125  [color=blue, key=0, style=bold];
m3_126 -> m3_127  [key=0, style=solid];
m3_126 -> m3_128  [key=2, style=dotted];
m3_126 -> m3_120  [key=2, style=dotted];
m3_131 -> m3_129  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_130 -> m3_124  [key=2, style=dotted];
m3_134 -> m3_132  [color=blue, key=0, style=bold];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_128  [key=2, style=dotted];
m3_133 -> m3_135  [key=2, style=dotted];
m3_138 -> m3_136  [color=blue, key=0, style=bold];
m3_137 -> m3_138  [key=0, style=solid];
m3_137 -> m3_139  [key=2, style=dotted];
m3_137 -> m3_140  [key=2, style=dotted];
m3_137 -> m3_141  [key=2, style=dotted];
m3_144 -> m3_142  [color=blue, key=0, style=bold];
m3_143 -> m3_144  [key=0, style=solid];
m3_146 -> m3_147  [key=0, style=solid];
m3_147 -> m3_145  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [color=green, key=0, style=solid];
m3_0 -> m3_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_0 -> m3_3  [color=darkorchid, key=3, label="method methodReturn CommandLine.ParserResult<T> Build", style=bold];
m3_1 -> m3_1  [color=green, key=3, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> ", style=bold];
m3_1 -> m3_2  [color=green, key=0, style=solid];
m3_1 -> m3_3  [color=green, key=2, style=dotted];
m3_1 -> m3_4  [color=green, key=1, label="lambda expression", style=dashed];
m3_1 -> m3_0  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_19 -> m3_48  [key=2, style=dotted];
m3_19 -> m3_82  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_19 -> m3_36  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m3_19 -> m3_39  [color=darkseagreen4, key=1, label=typeInfo, style=dashed];
m3_23 -> m3_23  [color=darkorchid, key=3, label="Local variable System.Func<T> makeDefault", style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_23 -> m3_27  [color=darkseagreen4, key=1, label=makeDefault, style=dashed];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_28  [key=0, style=solid];
m3_24 -> m3_52  [key=2, style=dotted];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_53  [key=2, style=dotted];
m3_25 -> m3_54  [key=2, style=dotted];
m3_25 -> m3_27  [color=darkseagreen4, key=1, label=preprocessorErrors, style=dashed];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_57  [key=2, style=dotted];
m3_28 -> m3_43  [color=darkseagreen4, key=1, label=tokenizerResult, style=dashed];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_58  [key=2, style=dotted];
m3_30 -> m3_99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_30 -> m3_32  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m3_30 -> m3_33  [color=darkseagreen4, key=1, label=partitions, style=dashed];
m3_31 -> m3_31  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_59  [key=2, style=dotted];
m3_31 -> m3_60  [key=2, style=dotted];
m3_31 -> m3_103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_31 -> m3_34  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m3_31 -> m3_43  [color=darkseagreen4, key=1, label=optionSpecProps, style=dashed];
m3_32 -> m3_32  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_32 -> m3_33  [key=0, style=solid];
m3_32 -> m3_61  [key=2, style=dotted];
m3_32 -> m3_60  [key=2, style=dotted];
m3_32 -> m3_107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_32 -> m3_34  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m3_32 -> m3_43  [color=darkseagreen4, key=1, label=valueSpecProps, style=dashed];
m3_33 -> m3_33  [color=darkseagreen4, key=1, label=token, style=dashed];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_62  [key=2, style=dotted];
m3_33 -> m3_63  [key=2, style=dotted];
m3_33 -> m3_64  [key=2, style=dotted];
m3_33 -> m3_110  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_33 -> m3_111  [color=darkseagreen4, key=1, label=token, style=dashed];
m3_33 -> m3_43  [color=darkseagreen4, key=1, label=missingValueErrors, style=dashed];
m3_37 -> m3_38  [key=0, style=solid];
m3_37 -> m3_67  [key=2, style=dotted];
m3_37 -> m3_48  [key=2, style=dotted];
m3_37 -> m3_114  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_27 -> m3_47  [key=0, style=solid];
m3_27 -> m3_55  [key=2, style=dotted];
m3_27 -> m3_56  [key=2, style=dotted];
m3_45 -> m3_47  [key=0, style=solid];
m3_45 -> m3_80  [key=2, style=dotted];
m3_46 -> m3_47  [key=0, style=solid];
m3_46 -> m3_81  [key=2, style=dotted];
m3_20 -> m3_23  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m3_20 -> m3_93  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m3_20 -> m3_31  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m3_20 -> m3_32  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_49  [key=2, style=dotted];
m3_20 -> m3_86  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_20 -> m3_39  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_39  [key=0, style=solid];
m3_36 -> m3_66  [key=2, style=dotted];
m3_39 -> m3_39  [color=darkseagreen4, key=1, label=sp, style=dashed];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_69  [key=2, style=dotted];
m3_39 -> m3_70  [key=2, style=dotted];
m3_39 -> m3_41  [color=darkseagreen4, key=1, label=ctor, style=dashed];
m3_22 -> m3_23  [key=0, style=solid];
m3_22 -> m3_28  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m3_22 -> m3_30  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m3_22 -> m3_100  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m3_22 -> m3_33  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m3_22 -> m3_50  [key=2, style=dotted];
m3_22 -> m3_51  [key=2, style=dotted];
m3_26 -> m3_28  [key=0, style=solid];
m3_26 -> m3_27  [key=0, style=solid];
m3_26 -> m3_52  [key=2, style=dotted];
m3_29 -> m3_30  [key=0, style=solid];
m3_29 -> m3_42  [color=darkseagreen4, key=1, label=tokens, style=dashed];
m3_43 -> m3_45  [color=darkseagreen4, key=1, label=allErrors, style=dashed];
m3_43 -> m3_44  [key=0, style=solid];
m3_43 -> m3_78  [key=2, style=dotted];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_65  [key=2, style=dotted];
m3_34 -> m3_38  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m3_34 -> m3_40  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m3_34 -> m3_42  [color=darkseagreen4, key=1, label=specPropsWithValue, style=dashed];
m3_38 -> m3_45  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_38 -> m3_46  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_38 -> m3_38  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_38 -> m3_42  [key=0, style=solid];
m3_38 -> m3_68  [key=2, style=dotted];
m3_38 -> m3_117  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_38 -> m3_121  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_38 -> m3_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_38 -> m3_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_38 -> m3_132  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_38 -> m3_136  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_41 -> m3_45  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_41 -> m3_46  [color=darkseagreen4, key=1, label=instance, style=dashed];
m3_41 -> m3_42  [key=0, style=solid];
m3_41 -> m3_75  [key=2, style=dotted];
m3_44 -> m3_45  [key=0, style=solid];
m3_44 -> m3_46  [key=0, style=solid];
m3_44 -> m3_79  [key=2, style=dotted];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_21  [color=darkseagreen4, key=1, label=pt, style=dashed];
m3_40 -> m3_48  [key=2, style=dotted];
m3_40 -> m3_41  [key=0, style=solid];
m3_40 -> m3_40  [color=darkseagreen4, key=1, label=prms, style=dashed];
m3_40 -> m3_71  [key=2, style=dotted];
m3_40 -> m3_72  [key=2, style=dotted];
m3_40 -> m3_73  [key=2, style=dotted];
m3_40 -> m3_74  [key=2, style=dotted];
m3_40 -> m3_142  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_40 -> m3_145  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_35 -> m3_36  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_76  [key=2, style=dotted];
m3_42 -> m3_77  [key=2, style=dotted];
m3_47 -> m3_3  [color=blue, key=0, style=bold];
m3_148 -> m3_5  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_148 -> m3_12  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_148 -> m3_6  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_148 -> m3_16  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_149 -> m3_12  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_149 -> m3_16  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m3_150 -> m3_93  [color=darkseagreen4, key=1, label="CSharpx.Maybe<System.Func<T>>", style=dashed];
m3_151 -> m3_93  [color=darkseagreen4, key=1, label=specProps, style=dashed];
m3_152 -> m3_100  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_152 -> m3_111  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m3_153 -> m3_100  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
m3_154 -> m3_104  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_154 -> m3_108  [color=darkseagreen4, key=1, label="System.Globalization.CultureInfo", style=dashed];
m3_155 -> m3_111  [color=darkseagreen4, key=1, label=token, style=dashed];
}
