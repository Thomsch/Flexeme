digraph  {
n448 [label="CommandLine.Text.HelpText", span=""];
n449 [label=auto, span=""];
n450 [label="CommandLine.ParserResult<T>", span=""];
n451 [label=pr, span=""];
n452 [label="CommandLine.Text.HelpText", span=""];
n453 [label="System.Func<CommandLine.Error, string>", span=""];
n454 [label=int, span=""];
n455 [label=text, span=""];
n456 [label=s, span=""];
n457 [label=string, span=""];
n458 [label=maxLength, span=""];
n459 [label=remainingSpace, span=""];
n460 [label=int, span=""];
n461 [label="CommandLine.Core.Specification", span=""];
n462 [label=optionHelpText, span=""];
n463 [label="CommandLine.Core.OptionSpecification", span=""];
n464 [label="CommandLine.Core.ValueSpecification", span=""];
n0 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
n1 [cluster="CommandLine.Text.HelpText.HelpText()", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
n2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
n3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
n4 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
n5 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
n6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
n7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
n8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
n9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
n10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
n11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="sentenceBuilder == null", span="97-97"];
n13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="heading == null", span="98-98"];
n15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="copyright == null", span="99-99"];
n19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.sentenceBuilder = sentenceBuilder", span="104-104"];
n20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.heading = heading", span="105-105"];
n21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.copyright = copyright", span="106-106"];
n12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
n14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''heading'');", span="98-98"];
n16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''copyright'');", span="99-99"];
n17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
n18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
n24 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
n22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
n23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
n26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207"];
n28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211"];
n29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213"];
n31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto = onError(auto)", span="216-216"];
n34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var usageText = HelpText.RenderUsageText(parserResult, onExample)", span="225-225"];
n38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="232-233"];
n40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="236-236"];
n41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddOptions(parserResult)", span="239-239"];
n27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var errors = Enumerable.Empty<Error>()", span="209-209"];
n32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
n59 [cluster="lambda expression", label="license.AddToHelpText(auto, true)", span="220-220"];
n33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="222-223"];
n63 [cluster="lambda expression", label="usage.AddToHelpText(auto, true)", span="223-223"];
n36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddPreOptionsLine(auto.SentenceBuilder.UsageHeadingText())", span="228-228"];
n37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddPreOptionsText(usageText)", span="229-229"];
n39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddDashesToOption = false", span="235-235"];
n42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="return auto;", span="241-241"];
n44 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="FilterMeaningfulErrors(errors).Any()", span="215-215"];
n45 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="531-531"];
n46 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
n47 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n48 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
n49 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
n58 [cluster="lambda expression", label="Entry lambda expression", span="220-220"];
n62 [cluster="lambda expression", label="Entry lambda expression", span="223-223"];
n35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="usageText.Length > 0", span="226-226"];
n50 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="468-468"];
n51 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n52 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="319-319"];
n53 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="334-334"];
n54 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n65 [cluster="lambda expression", label="Entry lambda expression", span="233-233"];
n55 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n56 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="370-370"];
n57 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="353-353"];
n43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
n60 [cluster="lambda expression", label="Exit lambda expression", span="220-220"];
n61 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
n64 [cluster="lambda expression", label="Exit lambda expression", span="223-223"];
n66 [cluster="lambda expression", label="e.Tag == ErrorType.NoVerbSelectedError", span="233-233"];
n67 [cluster="lambda expression", label="Exit lambda expression", span="233-233"];
n68 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="254-254"];
n69 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="parserResult.Tag != ParserResultType.NotParsed", span="256-256"];
n71 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var errors = ((NotParsed<T>)parserResult).Errors", span="259-259"];
n75 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="265-265"];
n92 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="265-265"];
n78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="269-271"];
n105 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271"];
n70 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="257-257"];
n72 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="261-261"];
n74 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="264-264"];
n76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="267-267"];
n73 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="262-262"];
n85 [cluster="lambda expression", label="Entry lambda expression", span="261-261"];
n88 [cluster="lambda expression", label="Entry lambda expression", span="264-264"];
n77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="268-268"];
n81 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
n82 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
n83 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
n84 [cluster="CommandLine.TypeInfo.Create(System.Type)", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
n99 [cluster="lambda expression", label="DefaultParsingErrorsHandler(pr, current)", span="270-270"];
n79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="254-254"];
n80 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n91 [cluster="lambda expression", label="Entry lambda expression", span="265-265"];
n95 [cluster="lambda expression", label="Entry lambda expression", span="265-265"];
n98 [cluster="lambda expression", label="Entry lambda expression", span="270-270"];
n101 [cluster="lambda expression", label="Entry lambda expression", span="270-270"];
n104 [cluster="lambda expression", label="Entry lambda expression", span="271-271"];
n107 [cluster="lambda expression", label="Entry lambda expression", span="271-271"];
n86 [cluster="lambda expression", label="e.Tag == ErrorType.VersionRequestedError", span="261-261"];
n87 [cluster="lambda expression", label="Exit lambda expression", span="261-261"];
n89 [cluster="lambda expression", label="e.Tag == ErrorType.HelpVerbRequestedError", span="264-264"];
n90 [cluster="lambda expression", label="Exit lambda expression", span="264-264"];
n93 [cluster="lambda expression", label="Exit lambda expression", span="265-265"];
n94 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="279-279"];
n96 [cluster="lambda expression", label=e, span="265-265"];
n97 [cluster="lambda expression", label="Exit lambda expression", span="265-265"];
n100 [cluster="lambda expression", label="Exit lambda expression", span="270-270"];
n102 [cluster="lambda expression", label=e, span="270-270"];
n103 [cluster="lambda expression", label="Exit lambda expression", span="270-270"];
n106 [cluster="lambda expression", label="Exit lambda expression", span="271-271"];
n108 [cluster="lambda expression", label=e, span="271-271"];
n109 [cluster="lambda expression", label="Exit lambda expression", span="271-271"];
n110 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="parserResult == null", span="281-281"];
n112 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current == null", span="282-282"];
n114 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="284-284"];
n115 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="285-285"];
n116 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="287-290"];
n118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="292-292"];
n119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="294-295"];
n121 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="298-299"];
n131 [cluster="lambda expression", label="current.AddPreOptionsLine(line)", span="299-299"];
n122 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="301-301"];
n111 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''parserResult'');", span="281-281"];
n113 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''current'');", span="282-282"];
n124 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
n117 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="string.IsNullOrEmpty(errors)", span="291-291"];
n125 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="420-420"];
n120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="296-297"];
n126 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n127 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
n128 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
n129 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
n130 [cluster="lambda expression", label="Entry lambda expression", span="299-299"];
n123 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="279-279"];
n132 [cluster="lambda expression", label="Exit lambda expression", span="299-299"];
n133 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="309-309"];
n134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="return info.ToString();", span="311-311"];
n135 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="309-309"];
n136 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="513-513"];
n137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="321-321"];
n138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="319-319"];
n139 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="651-651"];
n140 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="329-329"];
n141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="return AddLine(postOptionsHelp, value);", span="331-331"];
n142 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="329-329"];
n143 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="757-757"];
n144 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="336-336"];
n145 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="lines.ForEach(line => AddPreOptionsLine(line))", span="337-337"];
n146 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="return this;", span="338-338"];
n148 [cluster="lambda expression", label="Entry lambda expression", span="337-337"];
n147 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="334-334"];
n149 [cluster="lambda expression", label="AddPreOptionsLine(line)", span="337-337"];
n150 [cluster="lambda expression", label="Exit lambda expression", span="337-337"];
n151 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="341-341"];
n152 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="343-343"];
n153 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="lines.ForEach(line => AddPostOptionsLine(line))", span="344-344"];
n154 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="return this;", span="345-345"];
n156 [cluster="lambda expression", label="Entry lambda expression", span="344-344"];
n155 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="341-341"];
n157 [cluster="lambda expression", label="AddPostOptionsLine(line)", span="344-344"];
n158 [cluster="lambda expression", label="Exit lambda expression", span="344-344"];
n159 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="result == null", span="356-356"];
n161 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="358-361"];
n160 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="356-356"];
n162 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="353-353"];
n163 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="572-572"];
n164 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="613-613"];
n165 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types == null", span="372-372"];
n167 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types.Length == 0", span="373-373"];
n169 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="375-378"];
n166 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentNullException(''types'');", span="372-372"];
n168 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="373-373"];
n170 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="370-370"];
n171 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n172 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="601-601"];
n173 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="387-387"];
n174 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="result == null", span="389-389"];
n176 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="391-394"];
n175 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="389-389"];
n177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="387-387"];
n178 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="404-404"];
n179 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types == null", span="406-406"];
n181 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types.Length == 0", span="407-407"];
n183 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="409-409"];
n180 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentNullException(''types'');", span="406-406"];
n182 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="407-407"];
n184 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="404-404"];
n185 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="parserResult == null", span="426-426"];
n187 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="428-429"];
n191 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="434-442"];
n203 [cluster="lambda expression", label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="439-440"];
n192 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="444-447"];
n186 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="throw new ArgumentNullException(''parserResult'');", span="426-426"];
n188 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors.Empty()", span="430-430"];
n189 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return string.Empty;", span="431-431"];
n190 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var text = new StringBuilder()", span="433-433"];
n194 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n204 [cluster="lambda expression", label="text.AppendLine(line.ToString())", span="441-441"];
n195 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n196 [cluster="Unk.ForEach", label="Entry Unk.ForEach", span=""];
n199 [cluster="lambda expression", label="Entry lambda expression", span="435-435"];
n202 [cluster="lambda expression", label="Entry lambda expression", span="437-442"];
n193 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="420-420"];
n197 [cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])", label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57"];
n198 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n200 [cluster="lambda expression", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="435-435"];
n201 [cluster="lambda expression", label="Exit lambda expression", span="435-435"];
n206 [cluster="System.Text.StringBuilder.StringBuilder(string)", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
n207 [cluster="int.Spaces()", label="Entry int.Spaces()", span="30-30"];
n208 [cluster="Unk.formatError", label="Entry Unk.formatError", span=""];
n209 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n205 [cluster="lambda expression", label="Exit lambda expression", span="437-442"];
n210 [cluster="System.Text.StringBuilder.AppendLine(string)", label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0"];
n211 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="456-456"];
n212 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="return RenderUsageText(parserResult, example => example);", span="458-458"];
n213 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="456-456"];
n214 [cluster="lambda expression", label="Entry lambda expression", span="458-458"];
n215 [cluster="lambda expression", label=example, span="458-458"];
n216 [cluster="lambda expression", label="Exit lambda expression", span="458-458"];
n217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="parserResult == null", span="470-470"];
n219 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="472-472"];
n227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var example = mapperFunc(e)", span="483-483"];
n218 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="throw new ArgumentNullException(''parserResult'');", span="470-470"];
n220 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="usage.MatchNothing()", span="473-473"];
n236 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="586-586"];
n222 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var usageTuple = usage.FromJust()", span="476-476"];
n221 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="return string.Empty;", span="474-474"];
n237 [cluster="CSharpx.Maybe<T>.MatchNothing()", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
n223 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var examples = usageTuple.Item2", span="477-477"];
n238 [cluster="CSharpx.Maybe<T>.FromJust<T>()", label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342"];
n224 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="478-478"];
n226 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label=examples, span="481-481"];
n225 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var text = new StringBuilder(BuilderCapacity)", span="480-480"];
n239 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23"];
n231 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                                {\r\n                                    config.PreferShortName = s.PreferShortName;\r\n                                    config.GroupSwitches = s.GroupSwitches;\r\n                                    config.UseEqualToken = s.UseEqualToken;\r\n                                }))\r\n                        .Append(Environment.NewLine)", span="490-500"];
n233 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="text.Append(exampleText)", span="503-503"];
n234 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="return text.ToString();", span="506-506"];
n228 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')\r\n                    .Append(Environment.NewLine)", span="484-486"];
n229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var styles = example.GetFormatStylesOrDefault()", span="487-487"];
n240 [cluster="System.Text.StringBuilder.Append(char)", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
n232 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="exampleText.Append(commandLine)", span="501-501"];
n230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label=styles, span="488-488"];
n241 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="103-103"];
n245 [cluster="lambda expression", label="config.PreferShortName = s.PreferShortName", span="496-496"];
n246 [cluster="lambda expression", label="config.GroupSwitches = s.GroupSwitches", span="497-497"];
n247 [cluster="lambda expression", label="config.UseEqualToken = s.UseEqualToken", span="498-498"];
n242 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87"];
n244 [cluster="lambda expression", label="Entry lambda expression", span="494-499"];
n243 [cluster="System.Text.StringBuilder.Append(object)", label="Entry System.Text.StringBuilder.Append(object)", span="0-0"];
n235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="468-468"];
n248 [cluster="lambda expression", label="Exit lambda expression", span="494-499"];
n249 [cluster="CommandLine.Text.HelpText.ToString()", label="int ExtraLength = 10", span="515-515"];
n250 [cluster="CommandLine.Text.HelpText.ToString()", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="516-528"];
n251 [cluster="CommandLine.Text.HelpText.ToString()", label="Exit CommandLine.Text.HelpText.ToString()", span="513-513"];
n252 [cluster="string.SafeLength()", label="Entry string.SafeLength()", span="40-40"];
n253 [cluster="System.Text.StringBuilder.SafeLength()", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
n254 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
n255 [cluster="System.Text.StringBuilder.SafeToString()", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
n256 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="533-533"];
n257 [cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="531-531"];
n258 [cluster="lambda expression", label="Entry lambda expression", span="533-533"];
n259 [cluster="lambda expression", label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="533-533"];
n260 [cluster="lambda expression", label="Exit lambda expression", span="533-533"];
n261 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="536-536"];
n262 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="538-538"];
n264 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var words = value.Split(' ')", span="542-542"];
n267 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length < (maximumLength - wordBuffer)", span="545-545"];
n268 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i])", span="547-547"];
n270 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="549-549"];
n271 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append('' '')", span="551-551"];
n273 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length >= maximumLength && wordBuffer == 0", span="555-555"];
n274 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i].Substring(0, maximumLength))", span="557-557"];
n275 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer = maximumLength", span="558-558"];
n277 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="564-564"];
n278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="565-565"];
n279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value.Length > maximumLength", span="567-567"];
n280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(value)", span="569-569"];
n263 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var wordBuffer = 0", span="541-541"];
n269 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer += words[i].Length", span="548-548"];
n265 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var i = 0", span="543-543"];
n282 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n266 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i < words.Length", span="543-543"];
n276 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i++", span="543-543"];
n272 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer++", span="552-552"];
n283 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n284 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
n285 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="536-536"];
n286 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="574-574"];
n287 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="575-577"];
n291 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17"];
n288 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="578-580"];
n292 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="631-631"];
n293 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="641-641"];
n294 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n289 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="581-583"];
n295 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n296 [cluster="lambda expression", label="Entry lambda expression", span="580-580"];
n290 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="572-572"];
n297 [cluster="lambda expression", label="v.Index", span="580-580"];
n298 [cluster="lambda expression", label="Exit lambda expression", span="580-580"];
n299 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="588-598"];
n300 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="586-586"];
n301 [cluster="System.Type.GetUsageData()", label="Entry System.Type.GetUsageData()", span="39-39"];
n302 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
n303 [cluster="lambda expression", label="Entry lambda expression", span="589-598"];
n304 [cluster="lambda expression", label="var prop = tuple.Item1", span="591-591"];
n305 [cluster="lambda expression", label="var attr = tuple.Item2", span="592-592"];
n306 [cluster="lambda expression", label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="594-595"];
n307 [cluster="lambda expression", label="return Tuple.Create(attr, examples);", span="597-597"];
n309 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
n308 [cluster="lambda expression", label="Exit lambda expression", span="589-598"];
n310 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
n311 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="603-610"];
n312 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="601-601"];
n313 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
n314 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
n315 [cluster="Unk.Concat", label="Entry Unk.Concat", span=""];
n316 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var maxLength = GetMaxLength(specifications)", span="618-618"];
n318 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var remainingSpace = maximumLength - (maxLength + 6)", span="622-622"];
n319 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="624-626"];
n324 [cluster="lambda expression", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="626-626"];
n317 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="620-620"];
n322 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="764-764"];
n320 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="return this;", span="628-628"];
n323 [cluster="lambda expression", label="Entry lambda expression", span="625-626"];
n321 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="613-613"];
n325 [cluster="lambda expression", label="Exit lambda expression", span="625-626"];
n326 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="658-658"];
n327 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="633-638"];
n328 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="631-631"];
n329 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="643-648"];
n330 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="641-641"];
n331 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="AddLine(preOptionsHelp, value, maximumLength)", span="653-653"];
n332 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="return this;", span="655-655"];
n333 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="651-651"];
n334 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''  '')", span="660-660"];
n335 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="661-665"];
n371 [cluster="lambda expression", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="664-664"];
n375 [cluster="lambda expression", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="665-665"];
n336 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="667-669"];
n337 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var optionHelpText = specification.HelpText", span="671-671"];
n338 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="673-673"];
n339 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="674-674"];
n340 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="676-677"];
n341 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.Required", span="679-679"];
n342 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="680-680"];
n348 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="690-690"];
n351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="694-694"];
n354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="700-700"];
n355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="702-702"];
n356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer = widthOfHelpText", span="703-703"];
n359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="711-712"];
n360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText.Length > widthOfHelpText", span="714-714"];
n364 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
n370 [cluster="lambda expression", label="Entry lambda expression", span="664-664"];
n374 [cluster="lambda expression", label="Entry lambda expression", span="665-665"];
n365 [cluster="string.PadRight(int)", label="Entry string.PadRight(int)", span="0-0"];
n366 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n378 [cluster="lambda expression", label="Entry lambda expression", span="677-677"];
n379 [cluster="lambda expression", label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="677-677"];
n343 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="!string.IsNullOrEmpty(optionHelpText)", span="682-682"];
n345 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var words = optionHelpText.Split(' ')", span="687-687"];
n358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="710-710"];
n361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="717-720"];
n367 [cluster="string.FormatInvariant(params object[])", label="Entry string.FormatInvariant(params object[])", span="20-20"];
n344 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var wordBuffer = 0", span="686-686"];
n350 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer += words[i].Length", span="693-693"];
n346 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var i = 0", span="688-688"];
n347 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i < words.Length", span="688-688"];
n349 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i])", span="692-692"];
n357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i++", span="688-688"];
n353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer++", span="697-697"];
n352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append('' '')", span="696-696"];
n368 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n369 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
n362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="return this;", span="722-722"];
n363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="658-658"];
n372 [cluster="lambda expression", label="Exit lambda expression", span="664-664"];
n373 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="725-725"];
n376 [cluster="lambda expression", label="Exit lambda expression", span="665-665"];
n377 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="745-745"];
n380 [cluster="lambda expression", label="Exit lambda expression", span="677-677"];
n381 [cluster="string.FormatLocal(params object[])", label="Entry string.FormatLocal(params object[])", span="25-25"];
n382 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="727-742"];
n386 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="731-735"];
n392 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="738-741"];
n383 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="725-725"];
n384 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
n385 [cluster="lambda expression", label="Entry lambda expression", span="731-735"];
n391 [cluster="lambda expression", label="Entry lambda expression", span="738-741"];
n387 [cluster="lambda expression", label="Exit lambda expression", span="731-735"];
n388 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
n389 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
n390 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
n393 [cluster="lambda expression", label="Exit lambda expression", span="738-741"];
n394 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="747-754"];
n397 [cluster="lambda expression", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="750-750"];
n401 [cluster="lambda expression", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="751-751"];
n395 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="745-745"];
n396 [cluster="lambda expression", label="Entry lambda expression", span="750-750"];
n400 [cluster="lambda expression", label="Entry lambda expression", span="751-751"];
n398 [cluster="lambda expression", label="Exit lambda expression", span="750-750"];
n399 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
n402 [cluster="lambda expression", label="Exit lambda expression", span="751-751"];
n403 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="AddLine(builder, value, MaximumDisplayWidth)", span="759-759"];
n404 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="return this;", span="761-761"];
n405 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="757-757"];
n406 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="766-774"];
n407 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="764-764"];
n408 [cluster="Unk.Aggregate", label="Entry Unk.Aggregate", span=""];
n409 [cluster="lambda expression", label="Entry lambda expression", span="767-774"];
n410 [cluster="lambda expression", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="769-771"];
n411 [cluster="lambda expression", label="return Math.Max(length, specLength);", span="773-773"];
n413 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="778-778"];
n414 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="813-813"];
n412 [cluster="lambda expression", label="Exit lambda expression", span="767-774"];
n415 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
n416 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var specLength = 0", span="780-780"];
n417 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasShort = spec.ShortName.Length > 0", span="782-782"];
n418 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasLong = spec.LongName.Length > 0", span="783-783"];
n420 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="spec.MetaValue.Length > 0", span="786-786"];
n421 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="787-787"];
n428 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += spec.LongName.Length", span="800-800"];
n423 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="791-791"];
n433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="808-808"];
n434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="return specLength;", span="810-810"];
n422 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasShort, span="789-789"];
n432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="hasShort && hasLong", span="807-807"];
n419 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var metaLength = 0", span="785-785"];
n427 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasLong, span="798-798"];
n426 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="795-795"];
n431 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="804-804"];
n424 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="792-792"];
n425 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="793-793"];
n429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="801-801"];
n430 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="802-802"];
n435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="778-778"];
n436 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var specLength = 0", span="815-815"];
n437 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var hasMeta = spec.MetaName.Length > 0", span="817-817"];
n439 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="spec.MetaValue.Length > 0", span="820-820"];
n440 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="821-821"];
n442 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="824-824"];
n443 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="826-826"];
n438 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var metaLength = 0", span="819-819"];
n441 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label=hasMeta, span="823-823"];
n444 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += metaLength", span="828-828"];
n447 [cluster="T.ToStringInvariant<T>()", label="Entry T.ToStringInvariant<T>()", span="15-15"];
n445 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="return specLength;", span="830-830"];
n446 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="813-813"];
m0_60 [cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="ValueMapper.cs", label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18"];
m0_43 [cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149"];
m0_6 [cluster="Unk.>", file="ValueMapper.cs", label="Entry Unk.>", span=""];
m0_34 [cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="67-67"];
m0_56 [cluster="CommandLine.Core.Specification.IsValue()", file="ValueMapper.cs", label="Entry CommandLine.Core.Specification.IsValue()", span="15-15"];
m0_7 [cluster="Unk.Create", file="ValueMapper.cs", label="Entry Unk.Create", span=""];
m0_71 [cluster="CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.FromJust<T>(System.Exception)", span="134-134"];
m0_44 [cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144"];
m0_42 [cluster="Unk.ToMaybe", file="ValueMapper.cs", label="Entry Unk.ToMaybe", span=""];
m0_45 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_46 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="324-324"];
m0_0 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m0_1 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="16-16"];
m0_2 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="return StatePair.Create(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="18-22"];
m0_3 [cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11"];
m0_39 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="ValueMapper.cs", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
m0_57 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="57-57"];
m0_8 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="19-19"];
m0_11 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="20-20"];
m0_14 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="21-21"];
m0_9 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item1", span="19-19"];
m0_10 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="19-19"];
m0_12 [cluster="lambda expression", file="ValueMapper.cs", label="pe.Item2", span="20-20"];
m0_13 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="20-20"];
m0_15 [cluster="lambda expression", file="ValueMapper.cs", label="e.Value", span="21-21"];
m0_16 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="21-21"];
m0_58 [cluster="lambda expression", file="ValueMapper.cs", label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="57-57"];
m0_50 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="35-35"];
m0_53 [cluster="lambda expression", file="ValueMapper.cs", label="Entry lambda expression", span="43-43"];
m0_51 [cluster="lambda expression", file="ValueMapper.cs", label=n, span="35-35"];
m0_52 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="35-35"];
m0_54 [cluster="lambda expression", file="ValueMapper.cs", label="s.Specification.IsValue()", span="43-43"];
m0_55 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="43-43"];
m0_59 [cluster="lambda expression", file="ValueMapper.cs", label="Exit lambda expression", span="57-57"];
m0_33 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_40 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m0_37 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m0_48 [cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="ValueMapper.cs", label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0"];
m0_38 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="83-83"];
m0_72 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="85-87"];
m0_73 [cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="83-83"];
m0_47 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
m0_5 [cluster="Unk.Select", file="ValueMapper.cs", label="Entry Unk.Select", span=""];
m0_49 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="ValueMapper.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="313-313"];
m0_61 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
m0_35 [cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="ValueMapper.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0"];
m0_62 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="67-67"];
m0_63 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.TargetType", span="69-69"];
m0_67 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="specification.Max.IsJust()", span="74-74"];
m0_68 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(specification.Max.FromJust());", span="76-76"];
m0_64 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Scalar", span="71-71"];
m0_66 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="TargetType.Sequence", span="73-73"];
m0_65 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Just(1);", span="72-72"];
m0_69 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="return Maybe.Nothing<int>();", span="80-80"];
m0_70 [cluster="CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.CountOfMaxNumberOfValues(CommandLine.Core.Specification)", span="67-67"];
m0_41 [cluster="Unk.FirstOrDefault", file="ValueMapper.cs", label="Entry Unk.FirstOrDefault", span=""];
m0_4 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m0_17 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="specProps.Empty()", span="30-30"];
m0_18 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="32-32"];
m0_22 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", color=red, community=0, file="ValueMapper.cs", label="6: yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39"];
m0_23 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="40-40"];
m0_26 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="48-50"];
m0_27 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="yield break;", span="51-51"];
m0_28 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.TargetType != TargetType.Sequence)\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="54-59"];
m0_30 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="yield return value;", span="63-63"];
m0_19 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="var pt = specProps.First()", span="34-34"];
m0_20 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="35-35"];
m0_24 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="43-43"];
m0_25 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="44-46"];
m0_29 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="61-61"];
m0_21 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="taken.Empty()", span="36-36"];
m0_31 [cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="ValueMapper.cs", label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25"];
m0_36 [cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="ValueMapper.cs", label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100"];
m0_74 [file="ValueMapper.cs", label=pt, span=""];
n448 -> n17  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n18  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n137  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n141  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n145  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n149  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n146  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n153  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n157  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n154  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n161  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n169  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n176  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n183  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n250  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n287  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n311  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n316  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n317  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n319  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n324  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n320  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n327  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n329  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n331  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n332  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n334  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n335  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n371  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n375  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n336  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n338  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n349  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n352  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n355  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n359  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n361  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n362  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n382  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n386  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n392  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n403  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n404  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n406  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n410  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n424  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n448 -> n429  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n449 -> n59  [color=darkseagreen4, key=1, label=auto, style=dashed];
n449 -> n63  [color=darkseagreen4, key=1, label=auto, style=dashed];
n450 -> n92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n450 -> n105  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n451 -> n99  [color=darkseagreen4, key=1, label=pr, style=dashed];
n452 -> n131  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n453 -> n203  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
n454 -> n203  [color=darkseagreen4, key=1, label=int, style=dashed];
n455 -> n204  [color=darkseagreen4, key=1, label=text, style=dashed];
n456 -> n245  [color=darkseagreen4, key=1, label=s, style=dashed];
n456 -> n246  [color=darkseagreen4, key=1, label=s, style=dashed];
n456 -> n247  [color=darkseagreen4, key=1, label=s, style=dashed];
n457 -> n324  [color=darkseagreen4, key=1, label=string, style=dashed];
n458 -> n324  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n459 -> n324  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n460 -> n371  [color=darkseagreen4, key=1, label=int, style=dashed];
n460 -> n375  [color=darkseagreen4, key=1, label=int, style=dashed];
n461 -> n371  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n461 -> n375  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n462 -> n379  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n463 -> n386  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n463 -> n392  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n464 -> n397  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n464 -> n401  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n15  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
n10 -> n20  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n21  [color=darkseagreen4, key=1, label=string, style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n12 -> n22  [key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n14 -> n22  [key=0, style=solid];
n14 -> n23  [key=2, style=dotted];
n16 -> n22  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n24  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n24  [key=2, style=dotted];
n22 -> n10  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n29  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n31  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
n25 -> n34  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n38  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n40  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n0  [key=2, style=dotted];
n26 -> n31  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n32  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n59  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n33  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n63  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n36  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n37  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n39  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n40  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n41  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n42  [color=darkseagreen4, key=1, label=auto, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n32  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n38  [color=darkseagreen4, key=1, label=errors, style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n47  [key=2, style=dotted];
n31 -> n31  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n59  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n33  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n63  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n37  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n39  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n40  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n41  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n42  [color=darkseagreen4, key=1, label=auto, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n50  [key=2, style=dotted];
n34 -> n37  [color=darkseagreen4, key=1, label=usageText, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [key=0, style=solid];
n38 -> n46  [key=2, style=dotted];
n38 -> n54  [key=2, style=dotted];
n38 -> n65  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n40 -> n42  [key=0, style=solid];
n40 -> n55  [key=2, style=dotted];
n40 -> n56  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n57  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n44  [key=2, style=dotted];
n27 -> n38  [color=darkseagreen4, key=1, label=errors, style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n48  [key=2, style=dotted];
n32 -> n49  [key=2, style=dotted];
n32 -> n58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n59 -> n60  [key=0, style=solid];
n59 -> n61  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n48  [key=2, style=dotted];
n33 -> n49  [key=2, style=dotted];
n33 -> n62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n61  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n51  [key=2, style=dotted];
n36 -> n52  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n53  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n30 -> n45  [key=2, style=dotted];
n30 -> n46  [key=2, style=dotted];
n45 -> n256  [key=0, style=solid];
n45 -> n27  [color=green, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors", style=bold];
n58 -> n59  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n38  [key=0, style=solid];
n50 -> n217  [key=0, style=solid];
n50 -> n219  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n50 -> n227  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>", style=dashed];
n50 -> n211  [color=green, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
n50 -> n212  [color=green, key=3, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc", style=bold];
n52 -> n137  [key=0, style=solid];
n52 -> n121  [color=green, key=3, label="Parameter variable string value", style=bold];
n52 -> n145  [color=green, key=3, label="Parameter variable string value", style=bold];
n52 -> n139  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine", style=bold];
n53 -> n144  [key=0, style=solid];
n53 -> n34  [color=green, key=3, label="Parameter variable string text", style=bold];
n65 -> n66  [key=0, style=solid];
n56 -> n165  [key=0, style=solid];
n56 -> n167  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n56 -> n169  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n56 -> n164  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
n57 -> n159  [key=0, style=solid];
n57 -> n161  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n57 -> n164  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
n43 -> n25  [color=blue, key=0, style=bold];
n60 -> n58  [color=blue, key=0, style=bold];
n64 -> n62  [color=blue, key=0, style=bold];
n66 -> n67  [key=0, style=solid];
n67 -> n65  [color=blue, key=0, style=bold];
n68 -> n69  [key=0, style=solid];
n68 -> n71  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n68 -> n75  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n68 -> n92  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n68 -> n78  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n68 -> n105  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n68 -> n25  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
n68 -> n52  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
n69 -> n70  [key=0, style=solid];
n69 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n74  [color=darkseagreen4, key=1, label=errors, style=dashed];
n71 -> n76  [color=darkseagreen4, key=1, label=errors, style=dashed];
n75 -> n79  [key=0, style=solid];
n75 -> n25  [key=2, style=dotted];
n75 -> n91  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n75 -> n95  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n25  [key=2, style=dotted];
n78 -> n98  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n78 -> n101  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n78 -> n104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n78 -> n107  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n105 -> n106  [key=0, style=solid];
n105 -> n94  [key=2, style=dotted];
n70 -> n79  [key=0, style=solid];
n70 -> n80  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n72 -> n54  [key=2, style=dotted];
n72 -> n85  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=0, style=solid];
n74 -> n54  [key=2, style=dotted];
n74 -> n88  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n76 -> n77  [key=0, style=solid];
n76 -> n81  [key=2, style=dotted];
n76 -> n82  [key=2, style=dotted];
n76 -> n78  [color=darkseagreen4, key=1, label=err, style=dashed];
n73 -> n79  [key=0, style=solid];
n73 -> n4  [key=2, style=dotted];
n73 -> n52  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n83  [key=2, style=dotted];
n77 -> n84  [key=2, style=dotted];
n77 -> n44  [key=2, style=dotted];
n77 -> n99  [color=darkseagreen4, key=1, label=pr, style=dashed];
n99 -> n100  [key=0, style=solid];
n99 -> n94  [key=2, style=dotted];
n79 -> n68  [color=blue, key=0, style=bold];
n91 -> n92  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n87 -> n85  [color=blue, key=0, style=bold];
n89 -> n90  [key=0, style=solid];
n90 -> n88  [color=blue, key=0, style=bold];
n93 -> n91  [color=blue, key=0, style=bold];
n94 -> n110  [key=0, style=solid];
n94 -> n112  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n94 -> n114  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n94 -> n115  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n94 -> n116  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n94 -> n118  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n94 -> n119  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n94 -> n121  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n94 -> n131  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n94 -> n122  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n94 -> n68  [color=green, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
n94 -> n75  [color=green, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
n94 -> n78  [color=green, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
n94 -> n77  [color=green, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
n94 -> n94  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler", style=bold];
n96 -> n97  [key=0, style=solid];
n97 -> n95  [color=blue, key=0, style=bold];
n100 -> n98  [color=blue, key=0, style=bold];
n102 -> n103  [key=0, style=solid];
n103 -> n101  [color=blue, key=0, style=bold];
n106 -> n104  [color=blue, key=0, style=bold];
n108 -> n109  [key=0, style=solid];
n109 -> n107  [color=blue, key=0, style=bold];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n116  [key=0, style=solid];
n114 -> n45  [key=2, style=dotted];
n114 -> n124  [key=2, style=dotted];
n115 -> n123  [key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n116 -> n125  [key=2, style=dotted];
n116 -> n120  [color=darkseagreen4, key=1, label=errors, style=dashed];
n118 -> n123  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n51  [key=2, style=dotted];
n119 -> n127  [key=2, style=dotted];
n119 -> n52  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n129  [key=2, style=dotted];
n121 -> n130  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n131 -> n132  [key=0, style=solid];
n131 -> n52  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n111 -> n123  [key=0, style=solid];
n111 -> n23  [key=2, style=dotted];
n113 -> n123  [key=0, style=solid];
n113 -> n23  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=0, style=solid];
n117 -> n126  [key=2, style=dotted];
n125 -> n185  [key=0, style=solid];
n125 -> n187  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n125 -> n191  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
n125 -> n203  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
n125 -> n192  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
n120 -> n121  [key=0, style=solid];
n120 -> n128  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n123 -> n94  [color=blue, key=0, style=bold];
n132 -> n130  [color=blue, key=0, style=bold];
n133 -> n134  [key=0, style=solid];
n133 -> n136  [color=green, key=3, label="method methodReturn string op_Implicit", style=bold];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=2, style=dotted];
n135 -> n133  [color=blue, key=0, style=bold];
n136 -> n249  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=2, style=dotted];
n138 -> n52  [color=blue, key=0, style=bold];
n139 -> n331  [key=0, style=solid];
n139 -> n52  [color=green, key=3, label="Parameter variable string value", style=bold];
n140 -> n141  [key=0, style=solid];
n140 -> n143  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine", style=bold];
n140 -> n153  [color=green, key=3, label="Parameter variable string value", style=bold];
n141 -> n142  [key=0, style=solid];
n141 -> n143  [key=2, style=dotted];
n142 -> n140  [color=blue, key=0, style=bold];
n143 -> n403  [key=0, style=solid];
n143 -> n140  [color=green, key=3, label="Parameter variable string value", style=bold];
n143 -> n239  [color=green, key=3, label="Parameter variable System.Text.StringBuilder builder", style=bold];
n144 -> n145  [key=0, style=solid];
n144 -> n128  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n129  [key=2, style=dotted];
n145 -> n148  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n146 -> n147  [key=0, style=solid];
n148 -> n149  [key=0, style=solid];
n147 -> n53  [color=blue, key=0, style=bold];
n149 -> n150  [key=0, style=solid];
n149 -> n52  [key=2, style=dotted];
n150 -> n148  [color=blue, key=0, style=bold];
n151 -> n152  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n128  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n129  [key=2, style=dotted];
n153 -> n156  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n154 -> n155  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n155 -> n151  [color=blue, key=0, style=bold];
n157 -> n158  [key=0, style=solid];
n157 -> n140  [key=2, style=dotted];
n158 -> n156  [color=blue, key=0, style=bold];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=2, style=dotted];
n161 -> n51  [key=2, style=dotted];
n161 -> n164  [key=2, style=dotted];
n160 -> n162  [key=0, style=solid];
n160 -> n23  [key=2, style=dotted];
n162 -> n57  [color=blue, key=0, style=bold];
n163 -> n286  [key=0, style=solid];
n164 -> n316  [key=0, style=solid];
n164 -> n318  [color=darkseagreen4, key=1, label=int, style=dashed];
n164 -> n319  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
n164 -> n324  [color=darkseagreen4, key=1, label=string, style=dashed];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n169  [key=0, style=solid];
n169 -> n170  [key=0, style=solid];
n169 -> n172  [key=2, style=dotted];
n169 -> n51  [key=2, style=dotted];
n169 -> n164  [key=2, style=dotted];
n166 -> n170  [key=0, style=solid];
n166 -> n23  [key=2, style=dotted];
n168 -> n170  [key=0, style=solid];
n168 -> n171  [key=2, style=dotted];
n170 -> n56  [color=blue, key=0, style=bold];
n172 -> n311  [key=0, style=solid];
n172 -> n56  [color=green, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
n172 -> n178  [color=green, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
n173 -> n174  [key=0, style=solid];
n173 -> n176  [color=darkseagreen4, key=1, label=int, style=dashed];
n173 -> n164  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
n174 -> n175  [key=0, style=solid];
n174 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n163  [key=2, style=dotted];
n176 -> n51  [key=2, style=dotted];
n176 -> n164  [key=2, style=dotted];
n175 -> n177  [key=0, style=solid];
n175 -> n23  [key=2, style=dotted];
n177 -> n173  [color=blue, key=0, style=bold];
n178 -> n179  [key=0, style=solid];
n178 -> n181  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n178 -> n183  [color=darkseagreen4, key=1, label=int, style=dashed];
n178 -> n164  [color=green, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
n179 -> n180  [key=0, style=solid];
n179 -> n181  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n181 -> n183  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n183 -> n172  [key=2, style=dotted];
n183 -> n51  [key=2, style=dotted];
n183 -> n164  [key=2, style=dotted];
n180 -> n184  [key=0, style=solid];
n180 -> n23  [key=2, style=dotted];
n182 -> n184  [key=0, style=solid];
n182 -> n171  [key=2, style=dotted];
n184 -> n178  [color=blue, key=0, style=bold];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n187 -> n45  [key=2, style=dotted];
n187 -> n191  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
n187 -> n192  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
n191 -> n192  [key=0, style=solid];
n191 -> n195  [key=2, style=dotted];
n191 -> n196  [key=2, style=dotted];
n191 -> n199  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n191 -> n202  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n203 -> n204  [key=0, style=solid];
n203 -> n206  [key=2, style=dotted];
n203 -> n207  [key=2, style=dotted];
n203 -> n208  [key=2, style=dotted];
n203 -> n209  [key=2, style=dotted];
n192 -> n193  [key=0, style=solid];
n192 -> n81  [key=2, style=dotted];
n192 -> n47  [key=2, style=dotted];
n192 -> n197  [key=2, style=dotted];
n192 -> n198  [key=2, style=dotted];
n186 -> n193  [key=0, style=solid];
n186 -> n23  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n190  [key=0, style=solid];
n188 -> n124  [key=2, style=dotted];
n189 -> n193  [key=0, style=solid];
n190 -> n191  [key=0, style=solid];
n190 -> n194  [key=2, style=dotted];
n190 -> n204  [color=darkseagreen4, key=1, label=text, style=dashed];
n190 -> n192  [color=darkseagreen4, key=1, label=text, style=dashed];
n204 -> n205  [key=0, style=solid];
n204 -> n198  [key=2, style=dotted];
n204 -> n210  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n202 -> n203  [key=0, style=solid];
n193 -> n125  [color=blue, key=0, style=bold];
n200 -> n201  [key=0, style=solid];
n201 -> n199  [color=blue, key=0, style=bold];
n205 -> n202  [color=blue, key=0, style=bold];
n211 -> n212  [key=0, style=solid];
n211 -> n50  [color=green, key=3, label="method methodReturn string RenderUsageText", style=bold];
n212 -> n213  [key=0, style=solid];
n212 -> n50  [key=2, style=dotted];
n212 -> n214  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n213 -> n211  [color=blue, key=0, style=bold];
n214 -> n215  [key=0, style=solid];
n215 -> n216  [key=0, style=solid];
n216 -> n214  [color=blue, key=0, style=bold];
n217 -> n218  [key=0, style=solid];
n217 -> n219  [key=0, style=solid];
n219 -> n220  [key=0, style=solid];
n219 -> n236  [key=2, style=dotted];
n219 -> n222  [color=darkseagreen4, key=1, label=usage, style=dashed];
n227 -> n228  [key=0, style=solid];
n227 -> n47  [key=2, style=dotted];
n227 -> n229  [color=darkseagreen4, key=1, label=example, style=dashed];
n227 -> n231  [color=darkseagreen4, key=1, label=example, style=dashed];
n218 -> n235  [key=0, style=solid];
n218 -> n23  [key=2, style=dotted];
n220 -> n221  [key=0, style=solid];
n220 -> n222  [key=0, style=solid];
n220 -> n237  [key=2, style=dotted];
n236 -> n299  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n222 -> n238  [key=2, style=dotted];
n222 -> n224  [color=darkseagreen4, key=1, label=usageTuple, style=dashed];
n221 -> n235  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n223 -> n226  [color=darkseagreen4, key=1, label=examples, style=dashed];
n224 -> n225  [key=0, style=solid];
n224 -> n239  [key=2, style=dotted];
n224 -> n231  [color=darkseagreen4, key=1, label=appAlias, style=dashed];
n226 -> n227  [key=0, style=solid];
n226 -> n234  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n24  [key=2, style=dotted];
n225 -> n233  [color=darkseagreen4, key=1, label=text, style=dashed];
n225 -> n234  [color=darkseagreen4, key=1, label=text, style=dashed];
n231 -> n232  [key=0, style=solid];
n231 -> n206  [key=2, style=dotted];
n231 -> n207  [key=2, style=dotted];
n231 -> n209  [key=2, style=dotted];
n231 -> n240  [key=2, style=dotted];
n231 -> n242  [key=2, style=dotted];
n231 -> n244  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n233 -> n226  [key=0, style=solid];
n233 -> n243  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n198  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n228 -> n206  [key=2, style=dotted];
n228 -> n240  [key=2, style=dotted];
n228 -> n209  [key=2, style=dotted];
n228 -> n232  [color=darkseagreen4, key=1, label=exampleText, style=dashed];
n228 -> n233  [color=darkseagreen4, key=1, label=exampleText, style=dashed];
n229 -> n230  [key=0, style=solid];
n229 -> n241  [key=2, style=dotted];
n232 -> n230  [key=0, style=solid];
n232 -> n243  [key=2, style=dotted];
n230 -> n231  [key=0, style=solid];
n230 -> n233  [key=0, style=solid];
n230 -> n245  [color=darkseagreen4, key=1, label=s, style=dashed];
n230 -> n246  [color=darkseagreen4, key=1, label=s, style=dashed];
n230 -> n247  [color=darkseagreen4, key=1, label=s, style=dashed];
n245 -> n246  [key=0, style=solid];
n246 -> n247  [key=0, style=solid];
n247 -> n248  [key=0, style=solid];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
n244 -> n247  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
n235 -> n50  [color=blue, key=0, style=bold];
n248 -> n244  [color=blue, key=0, style=bold];
n249 -> n250  [key=0, style=solid];
n249 -> n249  [color=green, key=3, label="Local variable int ExtraLength", style=bold];
n250 -> n251  [key=0, style=solid];
n250 -> n24  [key=2, style=dotted];
n250 -> n252  [key=2, style=dotted];
n250 -> n253  [key=2, style=dotted];
n250 -> n209  [key=2, style=dotted];
n250 -> n126  [key=2, style=dotted];
n250 -> n254  [key=2, style=dotted];
n250 -> n198  [key=2, style=dotted];
n250 -> n255  [key=2, style=dotted];
n251 -> n136  [color=blue, key=0, style=bold];
n256 -> n257  [key=0, style=solid];
n256 -> n195  [key=2, style=dotted];
n256 -> n258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n257 -> n45  [color=blue, key=0, style=bold];
n258 -> n259  [key=0, style=solid];
n259 -> n260  [key=0, style=solid];
n260 -> n258  [color=blue, key=0, style=bold];
n261 -> n262  [key=0, style=solid];
n261 -> n264  [color=darkseagreen4, key=1, label=string, style=dashed];
n261 -> n267  [color=darkseagreen4, key=1, label=int, style=dashed];
n261 -> n268  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n261 -> n270  [color=darkseagreen4, key=1, label=int, style=dashed];
n261 -> n271  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n261 -> n273  [color=darkseagreen4, key=1, label=int, style=dashed];
n261 -> n274  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n261 -> n275  [color=darkseagreen4, key=1, label=int, style=dashed];
n261 -> n277  [color=darkseagreen4, key=1, label=string, style=dashed];
n261 -> n278  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n261 -> n279  [color=darkseagreen4, key=1, label=int, style=dashed];
n261 -> n280  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n261 -> n139  [color=green, key=3, label="Parameter variable int maximumLength", style=bold];
n261 -> n143  [color=green, key=3, label="Parameter variable string value", style=bold];
n262 -> n263  [key=0, style=solid];
n262 -> n254  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n282  [key=2, style=dotted];
n264 -> n266  [color=darkseagreen4, key=1, label=words, style=dashed];
n264 -> n267  [color=darkseagreen4, key=1, label=words, style=dashed];
n264 -> n268  [color=darkseagreen4, key=1, label=words, style=dashed];
n264 -> n269  [color=darkseagreen4, key=1, label=words, style=dashed];
n264 -> n270  [color=darkseagreen4, key=1, label=words, style=dashed];
n264 -> n273  [color=darkseagreen4, key=1, label=words, style=dashed];
n264 -> n274  [color=darkseagreen4, key=1, label=words, style=dashed];
n267 -> n268  [key=0, style=solid];
n267 -> n273  [key=0, style=solid];
n268 -> n269  [key=0, style=solid];
n268 -> n209  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid];
n270 -> n276  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n271 -> n209  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n273 -> n277  [key=0, style=solid];
n274 -> n275  [key=0, style=solid];
n274 -> n283  [key=2, style=dotted];
n274 -> n209  [key=2, style=dotted];
n275 -> n277  [key=0, style=solid];
n277 -> n278  [key=0, style=solid];
n277 -> n284  [key=2, style=dotted];
n277 -> n285  [key=2, style=dotted];
n277 -> n277  [color=darkseagreen4, key=1, label=string, style=dashed];
n277 -> n279  [color=darkseagreen4, key=1, label=string, style=dashed];
n277 -> n280  [color=darkseagreen4, key=1, label=string, style=dashed];
n278 -> n279  [key=0, style=solid];
n278 -> n254  [key=2, style=dotted];
n279 -> n262  [key=0, style=solid];
n279 -> n280  [key=0, style=solid];
n280 -> n281  [key=0, style=solid];
n280 -> n209  [key=2, style=dotted];
n263 -> n264  [key=0, style=solid];
n263 -> n267  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n263 -> n269  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n263 -> n273  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n263 -> n277  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n263 -> n261  [color=green, key=3, label="Local variable int wordBuffer", style=bold];
n263 -> n263  [color=green, key=3, label="Local variable int wordBuffer", style=bold];
n269 -> n270  [key=0, style=solid];
n269 -> n269  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n269 -> n272  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n269 -> n277  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n265 -> n266  [key=0, style=solid];
n265 -> n267  [color=darkseagreen4, key=1, label=i, style=dashed];
n265 -> n268  [color=darkseagreen4, key=1, label=i, style=dashed];
n265 -> n269  [color=darkseagreen4, key=1, label=i, style=dashed];
n265 -> n270  [color=darkseagreen4, key=1, label=i, style=dashed];
n265 -> n273  [color=darkseagreen4, key=1, label=i, style=dashed];
n265 -> n274  [color=darkseagreen4, key=1, label=i, style=dashed];
n265 -> n276  [color=darkseagreen4, key=1, label=i, style=dashed];
n265 -> n263  [color=green, key=3, label="Local variable int i", style=bold];
n266 -> n267  [key=0, style=solid];
n266 -> n277  [key=0, style=solid];
n276 -> n266  [key=0, style=solid];
n276 -> n276  [color=darkseagreen4, key=1, label=i, style=dashed];
n272 -> n276  [key=0, style=solid];
n272 -> n272  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n272 -> n277  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n281 -> n261  [color=blue, key=0, style=bold];
n286 -> n287  [key=0, style=solid];
n286 -> n291  [key=2, style=dotted];
n286 -> n288  [color=darkseagreen4, key=1, label=specs, style=dashed];
n287 -> n288  [key=0, style=solid];
n287 -> n81  [key=2, style=dotted];
n287 -> n292  [key=2, style=dotted];
n287 -> n293  [key=2, style=dotted];
n287 -> n294  [key=2, style=dotted];
n287 -> n289  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
n288 -> n289  [key=0, style=solid];
n288 -> n81  [key=2, style=dotted];
n288 -> n295  [key=2, style=dotted];
n288 -> n296  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n292 -> n327  [key=0, style=solid];
n293 -> n329  [key=0, style=solid];
n289 -> n290  [key=0, style=solid];
n289 -> n44  [key=2, style=dotted];
n289 -> n294  [key=2, style=dotted];
n296 -> n297  [key=0, style=solid];
n290 -> n163  [color=blue, key=0, style=bold];
n297 -> n298  [key=0, style=solid];
n298 -> n296  [color=blue, key=0, style=bold];
n299 -> n300  [key=0, style=solid];
n299 -> n301  [key=2, style=dotted];
n299 -> n302  [key=2, style=dotted];
n299 -> n303  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n300 -> n236  [color=blue, key=0, style=bold];
n303 -> n304  [key=0, style=solid];
n303 -> n305  [color=darkseagreen4, key=1, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>", style=dashed];
n304 -> n305  [key=0, style=solid];
n304 -> n306  [color=darkseagreen4, key=1, label=prop, style=dashed];
n305 -> n306  [key=0, style=solid];
n305 -> n307  [color=darkseagreen4, key=1, label=attr, style=dashed];
n306 -> n307  [key=0, style=solid];
n306 -> n309  [key=2, style=dotted];
n307 -> n308  [key=0, style=solid];
n307 -> n310  [key=2, style=dotted];
n308 -> n303  [color=blue, key=0, style=bold];
n311 -> n312  [key=0, style=solid];
n311 -> n313  [key=2, style=dotted];
n311 -> n314  [key=2, style=dotted];
n311 -> n292  [key=2, style=dotted];
n311 -> n293  [key=2, style=dotted];
n311 -> n315  [key=2, style=dotted];
n311 -> n311  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
n312 -> n172  [color=blue, key=0, style=bold];
n316 -> n317  [key=0, style=solid];
n316 -> n322  [key=2, style=dotted];
n316 -> n318  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n316 -> n319  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n316 -> n324  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n318 -> n319  [key=0, style=solid];
n318 -> n324  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n319 -> n320  [key=0, style=solid];
n319 -> n129  [key=2, style=dotted];
n319 -> n323  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n324 -> n325  [key=0, style=solid];
n324 -> n326  [key=2, style=dotted];
n317 -> n318  [key=0, style=solid];
n317 -> n24  [key=2, style=dotted];
n322 -> n406  [key=0, style=solid];
n320 -> n321  [key=0, style=solid];
n323 -> n324  [key=0, style=solid];
n321 -> n164  [color=blue, key=0, style=bold];
n325 -> n323  [color=blue, key=0, style=bold];
n326 -> n334  [key=0, style=solid];
n326 -> n335  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n371  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n375  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n336  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n337  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n326 -> n338  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n326 -> n339  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n326 -> n340  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n326 -> n341  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n326 -> n342  [color=darkseagreen4, key=1, label=string, style=dashed];
n326 -> n348  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n351  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n354  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n355  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n356  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n359  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n360  [color=darkseagreen4, key=1, label=int, style=dashed];
n326 -> n316  [color=green, key=3, label="Parameter variable int maxLength", style=bold];
n326 -> n318  [color=green, key=3, label="Parameter variable int widthOfHelpText", style=bold];
n326 -> n319  [color=green, key=3, label="Parameter variable CommandLine.Core.Specification specification", style=bold];
n327 -> n328  [key=0, style=solid];
n327 -> n47  [key=2, style=dotted];
n327 -> n314  [key=2, style=dotted];
n328 -> n292  [color=blue, key=0, style=bold];
n329 -> n330  [key=0, style=solid];
n329 -> n47  [key=2, style=dotted];
n329 -> n314  [key=2, style=dotted];
n330 -> n293  [color=blue, key=0, style=bold];
n331 -> n332  [key=0, style=solid];
n331 -> n261  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n333 -> n139  [color=blue, key=0, style=bold];
n334 -> n335  [key=0, style=solid];
n334 -> n209  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n24  [key=2, style=dotted];
n335 -> n364  [key=2, style=dotted];
n335 -> n370  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n335 -> n374  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n371 -> n372  [key=0, style=solid];
n371 -> n373  [key=2, style=dotted];
n371 -> n209  [key=2, style=dotted];
n375 -> n376  [key=0, style=solid];
n375 -> n377  [key=2, style=dotted];
n375 -> n209  [key=2, style=dotted];
n336 -> n337  [key=0, style=solid];
n336 -> n198  [key=2, style=dotted];
n336 -> n365  [key=2, style=dotted];
n336 -> n209  [key=2, style=dotted];
n337 -> n338  [key=0, style=solid];
n337 -> n339  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n337 -> n340  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n338 -> n339  [key=0, style=solid];
n338 -> n340  [key=0, style=solid];
n338 -> n46  [key=2, style=dotted];
n339 -> n340  [key=0, style=solid];
n339 -> n366  [key=2, style=dotted];
n339 -> n339  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n340 -> n341  [key=0, style=solid];
n340 -> n49  [key=2, style=dotted];
n340 -> n378  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n340 -> n379  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n340 -> n342  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n340 -> n343  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n340 -> n345  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n340 -> n358  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n340 -> n361  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n341 -> n342  [key=0, style=solid];
n341 -> n343  [key=0, style=solid];
n342 -> n343  [key=0, style=solid];
n342 -> n367  [key=2, style=dotted];
n342 -> n342  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n342 -> n345  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n342 -> n358  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n342 -> n361  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n348 -> n349  [key=0, style=solid];
n348 -> n354  [key=0, style=solid];
n351 -> n352  [key=0, style=solid];
n351 -> n357  [key=0, style=solid];
n354 -> n355  [key=0, style=solid];
n354 -> n358  [key=0, style=solid];
n355 -> n356  [key=0, style=solid];
n355 -> n283  [key=2, style=dotted];
n355 -> n209  [key=2, style=dotted];
n356 -> n358  [key=0, style=solid];
n359 -> n360  [key=0, style=solid];
n359 -> n369  [key=2, style=dotted];
n359 -> n254  [key=2, style=dotted];
n360 -> n343  [key=0, style=solid];
n360 -> n361  [key=0, style=solid];
n370 -> n371  [key=0, style=solid];
n374 -> n375  [key=0, style=solid];
n378 -> n379  [key=0, style=solid];
n379 -> n380  [key=0, style=solid];
n379 -> n381  [key=2, style=dotted];
n379 -> n379  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n343 -> n344  [key=0, style=solid];
n343 -> n361  [key=0, style=solid];
n343 -> n126  [key=2, style=dotted];
n345 -> n346  [key=0, style=solid];
n345 -> n282  [key=2, style=dotted];
n345 -> n347  [color=darkseagreen4, key=1, label=words, style=dashed];
n345 -> n348  [color=darkseagreen4, key=1, label=words, style=dashed];
n345 -> n349  [color=darkseagreen4, key=1, label=words, style=dashed];
n345 -> n350  [color=darkseagreen4, key=1, label=words, style=dashed];
n345 -> n351  [color=darkseagreen4, key=1, label=words, style=dashed];
n345 -> n354  [color=darkseagreen4, key=1, label=words, style=dashed];
n345 -> n355  [color=darkseagreen4, key=1, label=words, style=dashed];
n358 -> n359  [key=0, style=solid];
n358 -> n284  [key=2, style=dotted];
n358 -> n285  [key=2, style=dotted];
n358 -> n368  [key=2, style=dotted];
n358 -> n358  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n358 -> n360  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n358 -> n361  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n361 -> n362  [key=0, style=solid];
n361 -> n209  [key=2, style=dotted];
n361 -> n254  [key=2, style=dotted];
n367 -> n367  [color=green, key=3, label="Field variable int BuilderCapacity", style=bold];
n344 -> n345  [key=0, style=solid];
n344 -> n348  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n344 -> n350  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n344 -> n354  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n344 -> n358  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n344 -> n263  [color=green, key=3, label="Local variable int wordBuffer", style=bold];
n344 -> n326  [color=green, key=3, label="Local variable int wordBuffer", style=bold];
n350 -> n351  [key=0, style=solid];
n350 -> n350  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n350 -> n353  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n350 -> n358  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n346 -> n347  [key=0, style=solid];
n346 -> n348  [color=darkseagreen4, key=1, label=i, style=dashed];
n346 -> n349  [color=darkseagreen4, key=1, label=i, style=dashed];
n346 -> n350  [color=darkseagreen4, key=1, label=i, style=dashed];
n346 -> n351  [color=darkseagreen4, key=1, label=i, style=dashed];
n346 -> n354  [color=darkseagreen4, key=1, label=i, style=dashed];
n346 -> n355  [color=darkseagreen4, key=1, label=i, style=dashed];
n346 -> n357  [color=darkseagreen4, key=1, label=i, style=dashed];
n346 -> n263  [color=green, key=3, label="Local variable int i", style=bold];
n347 -> n348  [key=0, style=solid];
n347 -> n358  [key=0, style=solid];
n349 -> n350  [key=0, style=solid];
n349 -> n209  [key=2, style=dotted];
n357 -> n347  [key=0, style=solid];
n357 -> n357  [color=darkseagreen4, key=1, label=i, style=dashed];
n353 -> n357  [key=0, style=solid];
n353 -> n353  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n353 -> n358  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n352 -> n353  [key=0, style=solid];
n352 -> n209  [key=2, style=dotted];
n362 -> n363  [key=0, style=solid];
n363 -> n326  [color=blue, key=0, style=bold];
n372 -> n370  [color=blue, key=0, style=bold];
n373 -> n382  [key=0, style=solid];
n373 -> n386  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n373 -> n392  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n373 -> n326  [color=green, key=3, label="Parameter variable CommandLine.Core.OptionSpecification specification", style=bold];
n376 -> n374  [color=blue, key=0, style=bold];
n377 -> n394  [key=0, style=solid];
n377 -> n397  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n377 -> n401  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n377 -> n326  [color=green, key=3, label="Parameter variable CommandLine.Core.ValueSpecification specification", style=bold];
n380 -> n378  [color=blue, key=0, style=bold];
n382 -> n383  [key=0, style=solid];
n382 -> n24  [key=2, style=dotted];
n382 -> n384  [key=2, style=dotted];
n382 -> n198  [key=2, style=dotted];
n382 -> n385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n382 -> n391  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n386 -> n387  [key=0, style=solid];
n386 -> n388  [key=2, style=dotted];
n386 -> n389  [key=2, style=dotted];
n386 -> n390  [key=2, style=dotted];
n386 -> n254  [key=2, style=dotted];
n392 -> n393  [key=0, style=solid];
n392 -> n254  [key=2, style=dotted];
n392 -> n389  [key=2, style=dotted];
n392 -> n390  [key=2, style=dotted];
n383 -> n373  [color=blue, key=0, style=bold];
n385 -> n386  [key=0, style=solid];
n391 -> n392  [key=0, style=solid];
n387 -> n385  [color=blue, key=0, style=bold];
n390 -> n10  [color=green, key=3, label="Field variable string copyright", style=bold];
n393 -> n391  [color=blue, key=0, style=bold];
n394 -> n395  [key=0, style=solid];
n394 -> n24  [key=2, style=dotted];
n394 -> n364  [key=2, style=dotted];
n394 -> n390  [key=2, style=dotted];
n394 -> n198  [key=2, style=dotted];
n394 -> n396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n394 -> n400  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n397 -> n398  [key=0, style=solid];
n397 -> n399  [key=2, style=dotted];
n401 -> n402  [key=0, style=solid];
n401 -> n389  [key=2, style=dotted];
n395 -> n377  [color=blue, key=0, style=bold];
n396 -> n397  [key=0, style=solid];
n400 -> n401  [key=0, style=solid];
n398 -> n396  [color=blue, key=0, style=bold];
n402 -> n400  [color=blue, key=0, style=bold];
n403 -> n404  [key=0, style=solid];
n403 -> n261  [key=2, style=dotted];
n404 -> n405  [key=0, style=solid];
n405 -> n143  [color=blue, key=0, style=bold];
n406 -> n407  [key=0, style=solid];
n406 -> n408  [key=2, style=dotted];
n406 -> n409  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n407 -> n322  [color=blue, key=0, style=bold];
n409 -> n410  [key=0, style=solid];
n409 -> n411  [color=darkseagreen4, key=1, label=int, style=dashed];
n410 -> n411  [key=0, style=solid];
n410 -> n413  [key=2, style=dotted];
n410 -> n414  [key=2, style=dotted];
n411 -> n412  [key=0, style=solid];
n411 -> n415  [key=2, style=dotted];
n413 -> n416  [key=0, style=solid];
n413 -> n417  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n413 -> n418  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n413 -> n420  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n413 -> n421  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n413 -> n428  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n413 -> n406  [color=green, key=3, label="Parameter variable CommandLine.Core.OptionSpecification spec", style=bold];
n414 -> n436  [key=0, style=solid];
n414 -> n437  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n414 -> n439  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n414 -> n440  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n414 -> n442  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n414 -> n443  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n414 -> n406  [color=green, key=3, label="Parameter variable CommandLine.Core.ValueSpecification spec", style=bold];
n412 -> n409  [color=blue, key=0, style=bold];
n416 -> n417  [key=0, style=solid];
n416 -> n423  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n416 -> n428  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n416 -> n433  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n416 -> n434  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n416 -> n263  [color=green, key=3, label="Local variable int specLength", style=bold];
n416 -> n419  [color=green, key=3, label="Local variable int specLength", style=bold];
n417 -> n418  [key=0, style=solid];
n417 -> n422  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n417 -> n432  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n418 -> n419  [key=0, style=solid];
n418 -> n427  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n418 -> n432  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n420 -> n421  [key=0, style=solid];
n420 -> n422  [key=0, style=solid];
n421 -> n422  [key=0, style=solid];
n421 -> n426  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n421 -> n431  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n428 -> n429  [key=0, style=solid];
n428 -> n428  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n428 -> n430  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n428 -> n431  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n423 -> n424  [key=0, style=solid];
n423 -> n423  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n423 -> n425  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n423 -> n426  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n433 -> n434  [key=0, style=solid];
n433 -> n433  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n434 -> n435  [key=0, style=solid];
n422 -> n423  [key=0, style=solid];
n422 -> n427  [key=0, style=solid];
n432 -> n433  [key=0, style=solid];
n432 -> n434  [key=0, style=solid];
n419 -> n420  [key=0, style=solid];
n419 -> n426  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n419 -> n431  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n419 -> n263  [color=green, key=3, label="Local variable int metaLength", style=bold];
n427 -> n428  [key=0, style=solid];
n427 -> n432  [key=0, style=solid];
n426 -> n427  [key=0, style=solid];
n426 -> n426  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n426 -> n428  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n426 -> n433  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n426 -> n434  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n431 -> n432  [key=0, style=solid];
n431 -> n431  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n431 -> n433  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n431 -> n434  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n424 -> n425  [key=0, style=solid];
n424 -> n426  [key=0, style=solid];
n425 -> n426  [key=0, style=solid];
n425 -> n425  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n429 -> n430  [key=0, style=solid];
n429 -> n431  [key=0, style=solid];
n430 -> n431  [key=0, style=solid];
n430 -> n430  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n435 -> n413  [color=blue, key=0, style=bold];
n436 -> n437  [key=0, style=solid];
n436 -> n442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n436 -> n443  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n436 -> n263  [color=green, key=3, label="Local variable int specLength", style=bold];
n436 -> n438  [color=green, key=3, label="Local variable int specLength", style=bold];
n437 -> n438  [key=0, style=solid];
n437 -> n441  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
n439 -> n440  [key=0, style=solid];
n439 -> n441  [key=0, style=solid];
n440 -> n441  [key=0, style=solid];
n440 -> n444  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n442 -> n444  [key=0, style=solid];
n442 -> n447  [key=2, style=dotted];
n442 -> n442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n443 -> n444  [key=0, style=solid];
n443 -> n447  [key=2, style=dotted];
n443 -> n443  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n438 -> n439  [key=0, style=solid];
n438 -> n444  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n438 -> n263  [color=green, key=3, label="Local variable int metaLength", style=bold];
n441 -> n442  [key=0, style=solid];
n441 -> n443  [key=0, style=solid];
n444 -> n445  [key=0, style=solid];
n444 -> n444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n445 -> n446  [key=0, style=solid];
n446 -> n414  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_4  [key=2, style=dotted];
m0_2 -> m0_3  [key=0, style=solid];
m0_2 -> m0_5  [key=2, style=dotted];
m0_2 -> m0_6  [key=2, style=dotted];
m0_2 -> m0_7  [key=2, style=dotted];
m0_2 -> m0_8  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_11  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_14  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_3 -> m0_0  [color=blue, key=0, style=bold];
m0_57 -> m0_58  [key=0, style=solid];
m0_8 -> m0_9  [key=0, style=solid];
m0_11 -> m0_12  [key=0, style=solid];
m0_14 -> m0_15  [key=0, style=solid];
m0_9 -> m0_10  [key=0, style=solid];
m0_10 -> m0_8  [color=blue, key=0, style=bold];
m0_12 -> m0_13  [key=0, style=solid];
m0_13 -> m0_11  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_16 -> m0_14  [color=blue, key=0, style=bold];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_47  [key=2, style=dotted];
m0_58 -> m0_60  [key=2, style=dotted];
m0_58 -> m0_61  [key=2, style=dotted];
m0_58 -> m0_39  [key=2, style=dotted];
m0_50 -> m0_51  [key=0, style=solid];
m0_53 -> m0_54  [key=0, style=solid];
m0_51 -> m0_52  [key=0, style=solid];
m0_52 -> m0_50  [color=blue, key=0, style=bold];
m0_54 -> m0_55  [key=0, style=solid];
m0_54 -> m0_56  [key=2, style=dotted];
m0_55 -> m0_53  [color=blue, key=0, style=bold];
m0_59 -> m0_57  [color=blue, key=0, style=bold];
m0_38 -> m0_72  [key=0, style=solid];
m0_72 -> m0_73  [key=0, style=solid];
m0_72 -> m0_43  [key=2, style=dotted];
m0_72 -> m0_46  [key=2, style=dotted];
m0_72 -> m0_47  [key=2, style=dotted];
m0_72 -> m0_61  [key=2, style=dotted];
m0_73 -> m0_38  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_62 -> m0_67  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_62 -> m0_68  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_66  [key=0, style=solid];
m0_67 -> m0_68  [key=0, style=solid];
m0_67 -> m0_69  [key=0, style=solid];
m0_67 -> m0_43  [key=2, style=dotted];
m0_68 -> m0_70  [key=0, style=solid];
m0_68 -> m0_71  [key=2, style=dotted];
m0_68 -> m0_47  [key=2, style=dotted];
m0_64 -> m0_65  [key=0, style=solid];
m0_66 -> m0_67  [key=0, style=solid];
m0_65 -> m0_70  [key=0, style=solid];
m0_65 -> m0_47  [key=2, style=dotted];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_61  [key=2, style=dotted];
m0_70 -> m0_62  [color=blue, key=0, style=bold];
m0_4 -> m0_17  [key=0, style=solid];
m0_4 -> m0_18  [color=crimson, key=0, style=bold];
m0_4 -> m0_22  [color=red, key=0, style=bold];
m0_4 -> m0_23  [color=crimson, key=0, style=bold];
m0_4 -> m0_26  [color=crimson, key=0, style=bold];
m0_4 -> m0_27  [color=crimson, key=0, style=bold];
m0_4 -> m0_28  [color=crimson, key=0, style=bold];
m0_4 -> m0_30  [color=crimson, key=0, style=bold];
m0_4 -> m0_19  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_4 -> m0_20  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_4 -> m0_24  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_4 -> m0_25  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_4 -> m0_29  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>", style=dashed];
m0_17 -> m0_18  [key=0, style=solid];
m0_17 -> m0_19  [key=0, style=solid];
m0_17 -> n124  [key=2, style=dotted];
m0_18 -> m0_19  [key=0, style=solid];
m0_22 -> m0_23  [color=red, key=0, style=solid];
m0_22 -> m0_38  [color=red, key=2, style=dotted];
m0_22 -> m0_39  [color=red, key=2, style=dotted];
m0_23 -> m0_24  [key=0, style=solid];
m0_26 -> m0_27  [key=0, style=solid];
m0_26 -> m0_46  [key=2, style=dotted];
m0_26 -> m0_47  [key=2, style=dotted];
m0_26 -> m0_39  [key=2, style=dotted];
m0_27 -> m0_28  [key=0, style=solid];
m0_28 -> m0_29  [key=0, style=solid];
m0_28 -> m0_48  [key=2, style=dotted];
m0_28 -> m0_49  [key=2, style=dotted];
m0_28 -> m0_47  [key=2, style=dotted];
m0_28 -> m0_39  [key=2, style=dotted];
m0_28 -> m0_36  [key=2, style=dotted];
m0_28 -> m0_57  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_30 -> m0_29  [key=0, style=solid];
m0_19 -> m0_20  [key=0, style=solid];
m0_19 -> m0_33  [key=2, style=dotted];
m0_19 -> m0_22  [color=red, key=1, label=pt, style=dashed];
m0_19 -> m0_25  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_19 -> m0_26  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_19 -> m0_28  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_19 -> m0_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_34  [key=2, style=dotted];
m0_20 -> m0_35  [key=2, style=dotted];
m0_20 -> m0_36  [key=2, style=dotted];
m0_20 -> m0_37  [key=2, style=dotted];
m0_20 -> m0_50  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_20 -> m0_25  [color=darkseagreen4, key=1, label=taken, style=dashed];
m0_20 -> m0_28  [color=darkseagreen4, key=1, label=taken, style=dashed];
m0_20 -> m0_29  [color=darkseagreen4, key=1, label=taken, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_40  [key=2, style=dotted];
m0_24 -> m0_41  [key=2, style=dotted];
m0_24 -> m0_42  [key=2, style=dotted];
m0_24 -> m0_53  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_28  [key=0, style=solid];
m0_25 -> m0_43  [key=2, style=dotted];
m0_25 -> m0_44  [key=2, style=dotted];
m0_25 -> m0_35  [key=2, style=dotted];
m0_25 -> m0_40  [key=2, style=dotted];
m0_25 -> m0_45  [key=2, style=dotted];
m0_29 -> m0_30  [key=0, style=solid];
m0_29 -> m0_31  [key=0, style=solid];
m0_29 -> m0_40  [key=2, style=dotted];
m0_29 -> m0_35  [key=2, style=dotted];
m0_29 -> m0_4  [key=2, style=dotted];
m0_21 -> m0_22  [color=red, key=0, style=solid];
m0_21 -> m0_24  [key=0, style=solid];
m0_21 -> n124  [key=2, style=dotted];
m0_31 -> m0_4  [color=blue, key=0, style=bold];
m0_74 -> m0_58  [color=darkseagreen4, key=1, label=pt, style=dashed];
}
