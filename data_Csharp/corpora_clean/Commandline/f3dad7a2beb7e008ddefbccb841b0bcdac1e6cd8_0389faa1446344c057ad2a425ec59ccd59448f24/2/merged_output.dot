digraph  {
n475 [label="CommandLine.Text.HelpText", span=""];
n476 [label=auto, span=""];
n477 [label="CommandLine.ParserResult<T>", span=""];
n478 [label=pr, span=""];
n479 [label=s, span=""];
n480 [label=string, span=""];
n481 [label=maxLength, span=""];
n482 [label=remainingSpace, span=""];
n483 [label=int, span=""];
n484 [label="CommandLine.Core.Specification", span=""];
n485 [label=optionHelpText, span=""];
n486 [label="CommandLine.Core.OptionSpecification", span=""];
n487 [label="CommandLine.Core.ValueSpecification", span=""];
n0 [cluster="CommandLine.Text.HelpText.HelpText()", label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36"];
n1 [cluster="CommandLine.Text.HelpText.HelpText()", label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36"];
n2 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
n3 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48"];
n4 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
n5 [cluster="CommandLine.Text.HelpText.HelpText(string)", label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
n6 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
n7 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70"];
n8 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
n9 [cluster="CommandLine.Text.HelpText.HelpText(string, string)", label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82"];
n10 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
n11 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="sentenceBuilder == null", span="97-97"];
n13 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="heading == null", span="98-98"];
n15 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="copyright == null", span="99-99"];
n19 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.sentenceBuilder = sentenceBuilder", span="104-104"];
n20 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.heading = heading", span="105-105"];
n21 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="this.copyright = copyright", span="106-106"];
n12 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97"];
n14 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''heading'');", span="98-98"];
n16 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="throw new ArgumentNullException(''copyright'');", span="99-99"];
n17 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101"];
n18 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102"];
n24 [cluster="System.Text.StringBuilder.StringBuilder(int)", label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0"];
n22 [cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95"];
n23 [cluster="System.ArgumentNullException.ArgumentNullException(string)", label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0"];
n25 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
n26 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207"];
n28 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211"];
n29 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213"];
n31 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto = onError(auto)", span="216-216"];
n34 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var usageLines = HelpText.RenderUsageTextAsLines(parserResult, onExample).ToMaybe()", span="223-223"];
n41 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="238-239"];
n43 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="242-242"];
n44 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddOptions(parserResult)", span="245-245"];
n27 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var errors = Enumerable.Empty<Error>()", span="209-209"];
n32 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220"];
n63 [cluster="lambda expression", label="license.AddToHelpText(auto, true)", span="220-220"];
n36 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var heading = auto.SentenceBuilder.UsageHeadingText()", span="227-227"];
n38 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddPreOptionsLine(heading)", span="229-229"];
n39 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="usageAttr.Do(\r\n                usage => usage.AddToHelpText(auto, true))", span="232-233"];
n67 [cluster="lambda expression", label="usage.AddToHelpText(auto, true)", span="233-233"];
n40 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="usageLines.Do(\r\n                lines => auto.AddPreOptionsLines(lines))", span="235-236"];
n70 [cluster="lambda expression", label="auto.AddPreOptionsLines(lines)", span="236-236"];
n42 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="auto.AddDashesToOption = false", span="241-241"];
n45 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="return auto;", span="247-247"];
n47 [cluster="System.Linq.Enumerable.Empty<TResult>()", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n30 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="errors.OnlyMeaningfulOnes().Any()", span="215-215"];
n48 [cluster="System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", label="Entry System.Collections.Generic.IEnumerable<CommandLine.Error>.OnlyMeaningfulOnes()", span="18-18"];
n49 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
n50 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
n33 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="var usageAttr = ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()", span="222-222"];
n51 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12"];
n52 [cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)", label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300"];
n62 [cluster="lambda expression", label="Entry lambda expression", span="220-220"];
n35 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="usageAttr.IsJust() || usageLines.IsJust()", span="225-225"];
n53 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Entry CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
n54 [cluster="System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", label="Entry System.Collections.Generic.IEnumerable<T>.ToMaybe<T>()", span="331-331"];
n55 [cluster="CSharpx.Maybe<T>.IsJust<T>()", label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="326-326"];
n37 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="heading.Length > 0", span="228-228"];
n56 [cluster="System.Func<TResult>.Invoke()", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
n57 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
n66 [cluster="lambda expression", label="Entry lambda expression", span="233-233"];
n69 [cluster="lambda expression", label="Entry lambda expression", span="236-236"];
n58 [cluster="Unk.Any", label="Entry Unk.Any", span=""];
n73 [cluster="lambda expression", label="Entry lambda expression", span="239-239"];
n59 [cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0"];
n60 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
n61 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
n46 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196"];
n64 [cluster="lambda expression", label="Exit lambda expression", span="220-220"];
n65 [cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155"];
n68 [cluster="lambda expression", label="Exit lambda expression", span="233-233"];
n71 [cluster="lambda expression", label="Exit lambda expression", span="236-236"];
n72 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
n74 [cluster="lambda expression", label="e.Tag == ErrorType.NoVerbSelectedError", span="239-239"];
n75 [cluster="lambda expression", label="Exit lambda expression", span="239-239"];
n76 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
n77 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="parserResult.Tag != ParserResultType.NotParsed", span="262-262"];
n79 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var errors = ((NotParsed<T>)parserResult).Errors", span="265-265"];
n83 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="271-271"];
n100 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271"];
n86 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="275-277"];
n113 [cluster="lambda expression", label="DefaultParsingErrorsHandler(parserResult, current)", span="277-277"];
n78 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="263-263"];
n80 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="267-267"];
n82 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="270-270"];
n84 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="273-273"];
n81 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="268-268"];
n93 [cluster="lambda expression", label="Entry lambda expression", span="267-267"];
n96 [cluster="lambda expression", label="Entry lambda expression", span="270-270"];
n85 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="274-274"];
n89 [cluster="System.Collections.IEnumerable.OfType<TResult>()", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
n90 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
n91 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
n92 [cluster="CommandLine.TypeInfo.Create(System.Type)", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
n107 [cluster="lambda expression", label="DefaultParsingErrorsHandler(pr, current)", span="276-276"];
n87 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="260-260"];
n106 [cluster="lambda expression", label="Entry lambda expression", span="276-276"];
n109 [cluster="lambda expression", label="Entry lambda expression", span="276-276"];
n112 [cluster="lambda expression", label="Entry lambda expression", span="277-277"];
n115 [cluster="lambda expression", label="Entry lambda expression", span="277-277"];
n88 [cluster="System.ArgumentException.ArgumentException(string, string)", label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0"];
n99 [cluster="lambda expression", label="Entry lambda expression", span="271-271"];
n103 [cluster="lambda expression", label="Entry lambda expression", span="271-271"];
n94 [cluster="lambda expression", label="e.Tag == ErrorType.VersionRequestedError", span="267-267"];
n95 [cluster="lambda expression", label="Exit lambda expression", span="267-267"];
n97 [cluster="lambda expression", label="e.Tag == ErrorType.HelpVerbRequestedError", span="270-270"];
n98 [cluster="lambda expression", label="Exit lambda expression", span="270-270"];
n101 [cluster="lambda expression", label="Exit lambda expression", span="271-271"];
n102 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
n104 [cluster="lambda expression", label=e, span="271-271"];
n105 [cluster="lambda expression", label="Exit lambda expression", span="271-271"];
n108 [cluster="lambda expression", label="Exit lambda expression", span="276-276"];
n110 [cluster="lambda expression", label=e, span="276-276"];
n111 [cluster="lambda expression", label="Exit lambda expression", span="276-276"];
n114 [cluster="lambda expression", label="Exit lambda expression", span="277-277"];
n116 [cluster="lambda expression", label=e, span="277-277"];
n117 [cluster="lambda expression", label="Exit lambda expression", span="277-277"];
n118 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="parserResult == null", span="287-287"];
n120 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="current == null", span="288-288"];
n122 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes().Empty()", span="290-290"];
n123 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="291-291"];
n124 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="var errors = RenderParsingErrorsTextAsLines(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="293-296"];
n126 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current;", span="298-298"];
n127 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="return current\r\n                .AddPreOptionsLine(\r\n                    string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))\r\n                .AddPreOptionsLines(errors);", span="300-303"];
n119 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''parserResult'');", span="287-287"];
n121 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="throw new ArgumentNullException(''current'');", span="288-288"];
n129 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31"];
n125 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="errors.Empty()", span="297-297"];
n130 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
n128 [cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="285-285"];
n131 [cluster="string.Concat(string, string)", label="Entry string.Concat(string, string)", span="0-0"];
n132 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
n133 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="return info.ToString();", span="313-313"];
n134 [cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="311-311"];
n135 [cluster="CommandLine.Text.HelpText.ToString()", label="Entry CommandLine.Text.HelpText.ToString()", span="580-580"];
n136 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="324-324"];
n137 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="322-322"];
n138 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="717-717"];
n139 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
n140 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="return AddLine(postOptionsHelp, value);", span="335-335"];
n141 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="333-333"];
n142 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="823-823"];
n143 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="lines.ForEach(line => AddPreOptionsLine(line))", span="345-345"];
n144 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="return this;", span="346-346"];
n146 [cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231"];
n147 [cluster="lambda expression", label="Entry lambda expression", span="345-345"];
n145 [cluster="CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="343-343"];
n148 [cluster="lambda expression", label="AddPreOptionsLine(line)", span="345-345"];
n149 [cluster="lambda expression", label="Exit lambda expression", span="345-345"];
n150 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
n151 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="lines.ForEach(line => AddPostOptionsLine(line))", span="356-356"];
n152 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="return this;", span="357-357"];
n154 [cluster="lambda expression", label="Entry lambda expression", span="356-356"];
n153 [cluster="CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", label="Exit CommandLine.Text.HelpText.AddPostOptionsLines(System.Collections.Generic.IEnumerable<string>)", span="354-354"];
n155 [cluster="lambda expression", label="AddPostOptionsLine(line)", span="356-356"];
n156 [cluster="lambda expression", label="Exit lambda expression", span="356-356"];
n157 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
n158 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="367-367"];
n159 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="lines.ForEach(line => AddPreOptionsLine(line))", span="368-368"];
n162 [cluster="string.Split(string[], System.StringSplitOptions)", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
n160 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="return this;", span="369-369"];
n163 [cluster="lambda expression", label="Entry lambda expression", span="368-368"];
n161 [cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)", label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="365-365"];
n164 [cluster="lambda expression", label="AddPreOptionsLine(line)", span="368-368"];
n165 [cluster="lambda expression", label="Exit lambda expression", span="368-368"];
n166 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
n167 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="379-379"];
n168 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="lines.ForEach(line => AddPostOptionsLine(line))", span="380-380"];
n169 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="return this;", span="381-381"];
n171 [cluster="lambda expression", label="Entry lambda expression", span="380-380"];
n170 [cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)", label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="377-377"];
n172 [cluster="lambda expression", label="AddPostOptionsLine(line)", span="380-380"];
n173 [cluster="lambda expression", label="Exit lambda expression", span="380-380"];
n174 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="result == null", span="391-391"];
n176 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="393-396"];
n175 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="391-391"];
n177 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="389-389"];
n178 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
n179 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="679-679"];
n180 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types == null", span="407-407"];
n182 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="types.Length == 0", span="408-408"];
n184 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="410-413"];
n181 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentNullException(''types'');", span="407-407"];
n183 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="408-408"];
n185 [cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="405-405"];
n186 [cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0"];
n187 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="667-667"];
n188 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
n189 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="result == null", span="424-424"];
n191 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="426-429"];
n190 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="throw new ArgumentNullException(''result'');", span="424-424"];
n192 [cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="422-422"];
n193 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
n194 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types == null", span="441-441"];
n196 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="types.Length == 0", span="442-442"];
n198 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="444-447"];
n195 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentNullException(''types'');", span="441-441"];
n197 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="throw new ArgumentOutOfRangeException(''types'');", span="442-442"];
n199 [cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="439-439"];
n200 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
n201 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="return string.Join(\r\n                Environment.NewLine,\r\n                RenderParsingErrorsTextAsLines(parserResult, formatError, formatMutuallyExclusiveSetErrors, indent));", span="464-466"];
n202 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="458-458"];
n203 [cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)", label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0"];
n204 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="parserResult == null", span="483-483"];
n208 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="yield break;", span="488-488"];
n211 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="yield return line.ToString();", span="495-495"];
n216 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="yield return line;", span="506-506"];
n206 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var meaningfulErrors =\r\n                ((NotParsed<T>)parserResult).Errors.OnlyMeaningfulOnes()", span="485-486"];
n210 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var line = new StringBuilder(indent.Spaces())\r\n                    .Append(formatError(error))", span="493-494"];
n212 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var mutuallyErrs = \r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>())", span="498-500"];
n205 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="throw new ArgumentNullException(''parserResult'');", span="483-483"];
n207 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors.Empty()", span="487-487"];
n209 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)", span="490-491"];
n218 [cluster="Unk.Where", label="Entry Unk.Where", span=""];
n224 [cluster="lambda expression", label="Entry lambda expression", span="491-491"];
n219 [cluster="System.Text.StringBuilder.StringBuilder(string)", label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0"];
n220 [cluster="int.Spaces()", label="Entry int.Spaces()", span="35-35"];
n221 [cluster="Unk.formatError", label="Entry Unk.formatError", span=""];
n222 [cluster="System.Text.StringBuilder.Append(string)", label="Entry System.Text.StringBuilder.Append(string)", span="0-0"];
n223 [cluster="System.Text.StringBuilder.ToString()", label="Entry System.Text.StringBuilder.ToString()", span="0-0"];
n213 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="mutuallyErrs.Length > 0", span="501-501"];
n214 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="var lines = mutuallyErrs\r\n                    .Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="503-504"];
n217 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label="Exit CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="477-477"];
n215 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", label=lines, span="505-505"];
n225 [cluster="lambda expression", label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="491-491"];
n226 [cluster="lambda expression", label="Exit lambda expression", span="491-491"];
n227 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
n228 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="return RenderUsageText(parserResult, example => example);", span="518-518"];
n229 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="516-516"];
n230 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
n231 [cluster="lambda expression", label="Entry lambda expression", span="518-518"];
n232 [cluster="lambda expression", label=example, span="518-518"];
n233 [cluster="lambda expression", label="Exit lambda expression", span="518-518"];
n234 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="return string.Join(Environment.NewLine, RenderUsageTextAsLines(parserResult, mapperFunc));", span="530-530"];
n235 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="528-528"];
n236 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="parserResult == null", span="542-542"];
n240 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="yield break;", span="546-546"];
n247 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="yield return exampleText.ToString();", span="557-557"];
n251 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="yield return commandLine.ToString();", span="571-571"];
n238 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="544-544"];
n245 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var example = mapperFunc(e)", span="554-554"];
n237 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="throw new ArgumentNullException(''parserResult'');", span="542-542"];
n239 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="usage.MatchNothing()", span="545-545"];
n253 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
n241 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var usageTuple = usage.FromJustOrFail()", span="548-548"];
n254 [cluster="CSharpx.Maybe<T>.MatchNothing()", label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57"];
n242 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var examples = usageTuple.Item2", span="549-549"];
n255 [cluster="CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", label="Entry CSharpx.Maybe<T>.FromJustOrFail<T>(System.Exception)", span="355-355"];
n243 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="550-550"];
n244 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label=examples, span="552-552"];
n256 [cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="27-27"];
n250 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                            {\r\n                                config.PreferShortName = s.PreferShortName;\r\n                                config.GroupSwitches = s.GroupSwitches;\r\n                                config.UseEqualToken = s.UseEqualToken;\r\n                            }))", span="561-570"];
n252 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="Exit CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="540-540"];
n246 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')", span="555-556"];
n248 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label="var styles = example.GetFormatStylesOrDefault()", span="558-558"];
n257 [cluster="System.Text.StringBuilder.Append(char)", label="Entry System.Text.StringBuilder.Append(char)", span="0-0"];
n249 [cluster="CommandLine.Text.HelpText.RenderUsageTextAsLines<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", label=styles, span="559-559"];
n258 [cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()", label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="124-124"];
n261 [cluster="lambda expression", label="config.PreferShortName = s.PreferShortName", span="567-567"];
n262 [cluster="lambda expression", label="config.GroupSwitches = s.GroupSwitches", span="568-568"];
n263 [cluster="lambda expression", label="config.UseEqualToken = s.UseEqualToken", span="569-569"];
n259 [cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="95-95"];
n260 [cluster="lambda expression", label="Entry lambda expression", span="565-570"];
n264 [cluster="lambda expression", label="Exit lambda expression", span="565-570"];
n265 [cluster="CommandLine.Text.HelpText.ToString()", label="int ExtraLength = 10", span="582-582"];
n266 [cluster="CommandLine.Text.HelpText.ToString()", label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="583-595"];
n267 [cluster="CommandLine.Text.HelpText.ToString()", label="Exit CommandLine.Text.HelpText.ToString()", span="580-580"];
n268 [cluster="string.SafeLength()", label="Entry string.SafeLength()", span="50-50"];
n269 [cluster="System.Text.StringBuilder.SafeLength()", label="Entry System.Text.StringBuilder.SafeLength()", span="73-73"];
n270 [cluster="string.IsNullOrEmpty(string)", label="Entry string.IsNullOrEmpty(string)", span="0-0"];
n271 [cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9"];
n272 [cluster="System.Text.StringBuilder.SafeToString()", label="Entry System.Text.StringBuilder.SafeToString()", span="66-66"];
n273 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
n274 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="600-600"];
n276 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var words = value.Split(' ')", span="604-604"];
n279 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length < (maximumLength - wordBuffer)", span="607-607"];
n280 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i])", span="609-609"];
n282 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="611-611"];
n283 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append('' '')", span="613-613"];
n285 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="words[i].Length >= maximumLength && wordBuffer == 0", span="617-617"];
n286 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(words[i].Substring(0, maximumLength))", span="619-619"];
n287 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer = maximumLength", span="620-620"];
n289 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="626-626"];
n290 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="627-627"];
n291 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="value.Length > maximumLength", span="629-629"];
n292 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="builder.Append(value)", span="631-631"];
n275 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var wordBuffer = 0", span="603-603"];
n281 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer += words[i].Length", span="610-610"];
n277 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="var i = 0", span="605-605"];
n294 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n278 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i < words.Length", span="605-605"];
n288 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="i++", span="605-605"];
n284 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="wordBuffer++", span="614-614"];
n295 [cluster="string.Substring(int, int)", label="Entry string.Substring(int, int)", span="0-0"];
n296 [cluster="System.Math.Min(int, int)", label="Entry System.Math.Min(int, int)", span="0-0"];
n297 [cluster="string.Substring(int)", label="Entry string.Substring(int)", span="0-0"];
n293 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="598-598"];
n298 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var specs = type.GetSpecifications(Specification.FromProperty)", span="636-636"];
n299 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="637-639"];
n303 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
n300 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="640-642"];
n304 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="697-697"];
n305 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="707-707"];
n306 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
n301 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="643-645"];
n307 [cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0"];
n308 [cluster="lambda expression", label="Entry lambda expression", span="642-642"];
n302 [cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="634-634"];
n309 [cluster="lambda expression", label="v.Index", span="642-642"];
n310 [cluster="lambda expression", label="Exit lambda expression", span="642-642"];
n311 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", color=red, community=0, label="0: return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n#if !PLATFORM_DOTNET\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n#else\r\n                    var examples = (IEnumerable<Example>)prop.GetGetMethod().Invoke(null, null);\r\n#endif\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="650-664"];
n312 [cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)", label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="648-648"];
n313 [cluster="System.Type.GetUsageData()", label="Entry System.Type.GetUsageData()", span="38-38"];
n314 [cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265"];
n315 [cluster="lambda expression", label="Entry lambda expression", span="651-664"];
n316 [cluster="lambda expression", label="var prop = tuple.Item1", span="653-653"];
n317 [cluster="lambda expression", label="var attr = tuple.Item2", span="654-654"];
n318 [cluster="lambda expression", color=red, community=1, label="1: var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="657-658"];
n319 [cluster="lambda expression", label="return Tuple.Create(attr, examples);", span="663-663"];
n321 [cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0"];
n320 [cluster="lambda expression", label="Exit lambda expression", span="651-664"];
n322 [cluster="System.Tuple.Create<T1, T2>(T1, T2)", label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0"];
n323 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="669-676"];
n324 [cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="667-667"];
n325 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="43-43"];
n326 [cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45"];
n327 [cluster="Unk.Concat", label="Entry Unk.Concat", span=""];
n328 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var maxLength = GetMaxLength(specifications)", span="684-684"];
n330 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="var remainingSpace = maximumLength - (maxLength + 6)", span="688-688"];
n331 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="690-692"];
n336 [cluster="lambda expression", label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="692-692"];
n329 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="optionsHelp = new StringBuilder(BuilderCapacity)", span="686-686"];
n334 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="830-830"];
n332 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="return this;", span="694-694"];
n335 [cluster="lambda expression", label="Entry lambda expression", span="691-692"];
n333 [cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="679-679"];
n337 [cluster="lambda expression", label="Exit lambda expression", span="691-692"];
n338 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="724-724"];
n339 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="699-704"];
n340 [cluster="CommandLine.Text.HelpText.MakeHelpEntry()", label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="697-697"];
n341 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="709-714"];
n342 [cluster="CommandLine.Text.HelpText.MakeVersionEntry()", label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="707-707"];
n343 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="AddLine(preOptionsHelp, value, maximumLength)", span="719-719"];
n344 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="return this;", span="721-721"];
n345 [cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="717-717"];
n346 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(''  '')", span="726-726"];
n347 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="727-731"];
n382 [cluster="lambda expression", label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="730-730"];
n386 [cluster="lambda expression", label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="731-731"];
n348 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="733-735"];
n349 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var optionHelpText = specification.HelpText", span="737-737"];
n350 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="739-739"];
n351 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="740-740"];
n352 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText)", span="742-743"];
n353 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="specification.Required", span="745-745"];
n354 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="746-746"];
n360 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length < (widthOfHelpText - wordBuffer)", span="756-756"];
n363 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="760-760"];
n366 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="766-766"];
n367 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="768-768"];
n368 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer = widthOfHelpText", span="769-769"];
n371 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="777-778"];
n372 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText.Length > widthOfHelpText", span="780-780"];
n376 [cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41"];
n381 [cluster="lambda expression", label="Entry lambda expression", span="730-730"];
n385 [cluster="lambda expression", label="Entry lambda expression", span="731-731"];
n377 [cluster="string.PadRight(int)", label="Entry string.PadRight(int)", span="0-0"];
n389 [cluster="lambda expression", label="Entry lambda expression", span="743-743"];
n390 [cluster="lambda expression", label="optionHelpText = ''(Default: {0}) ''.FormatInvariant(FormatDefaultValue(defaultValue)) + optionHelpText", span="743-743"];
n355 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="!string.IsNullOrEmpty(optionHelpText)", span="748-748"];
n357 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var words = optionHelpText.Split(' ')", span="753-753"];
n370 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="776-776"];
n373 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="783-786"];
n378 [cluster="string.FormatInvariant(params object[])", label="Entry string.FormatInvariant(params object[])", span="25-25"];
n356 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var wordBuffer = 0", span="752-752"];
n362 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer += words[i].Length", span="759-759"];
n358 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="var i = 0", span="754-754"];
n359 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i < words.Length", span="754-754"];
n361 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append(words[i])", span="758-758"];
n369 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="i++", span="754-754"];
n365 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="wordBuffer++", span="763-763"];
n364 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="optionsHelp.Append('' '')", span="762-762"];
n379 [cluster="string.Trim()", label="Entry string.Trim()", span="0-0"];
n380 [cluster="string.String(char, int)", label="Entry string.String(char, int)", span="0-0"];
n374 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="return this;", span="788-788"];
n375 [cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="724-724"];
n383 [cluster="lambda expression", label="Exit lambda expression", span="730-730"];
n384 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="791-791"];
n387 [cluster="lambda expression", label="Exit lambda expression", span="731-731"];
n388 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="811-811"];
n391 [cluster="lambda expression", label="Exit lambda expression", span="743-743"];
n392 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="Entry CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="899-899"];
n393 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="793-808"];
n397 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="797-801"];
n403 [cluster="lambda expression", label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="804-807"];
n394 [cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="791-791"];
n395 [cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49"];
n396 [cluster="lambda expression", label="Entry lambda expression", span="797-801"];
n402 [cluster="lambda expression", label="Entry lambda expression", span="804-807"];
n398 [cluster="lambda expression", label="Exit lambda expression", span="797-801"];
n399 [cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])", label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18"];
n400 [cluster="System.Text.StringBuilder.AppendFormat(string, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0"];
n401 [cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27"];
n404 [cluster="lambda expression", label="Exit lambda expression", span="804-807"];
n405 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="813-820"];
n408 [cluster="lambda expression", label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="816-816"];
n412 [cluster="lambda expression", label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="817-817"];
n406 [cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="811-811"];
n407 [cluster="lambda expression", label="Entry lambda expression", span="816-816"];
n411 [cluster="lambda expression", label="Entry lambda expression", span="817-817"];
n409 [cluster="lambda expression", label="Exit lambda expression", span="816-816"];
n410 [cluster="System.Text.StringBuilder.AppendFormat(string, object, object)", label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0"];
n413 [cluster="lambda expression", label="Exit lambda expression", span="817-817"];
n414 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="AddLine(builder, value, MaximumDisplayWidth)", span="825-825"];
n415 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="return this;", span="827-827"];
n416 [cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="823-823"];
n417 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="832-840"];
n418 [cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="830-830"];
n419 [cluster="Unk.Aggregate", label="Entry Unk.Aggregate", span=""];
n420 [cluster="lambda expression", label="Entry lambda expression", span="833-840"];
n421 [cluster="lambda expression", label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="835-837"];
n422 [cluster="lambda expression", label="return Math.Max(length, specLength);", span="839-839"];
n424 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="844-844"];
n425 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="879-879"];
n423 [cluster="lambda expression", label="Exit lambda expression", span="833-840"];
n426 [cluster="System.Math.Max(int, int)", label="Entry System.Math.Max(int, int)", span="0-0"];
n427 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var specLength = 0", span="846-846"];
n428 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasShort = spec.ShortName.Length > 0", span="848-848"];
n429 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var hasLong = spec.LongName.Length > 0", span="849-849"];
n431 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="spec.MetaValue.Length > 0", span="852-852"];
n432 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="853-853"];
n439 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += spec.LongName.Length", span="866-866"];
n434 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="857-857"];
n444 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="874-874"];
n445 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="return specLength;", span="876-876"];
n433 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasShort, span="855-855"];
n443 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="hasShort && hasLong", span="873-873"];
n430 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="var metaLength = 0", span="851-851"];
n438 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=hasLong, span="864-864"];
n437 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="861-861"];
n442 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += metaLength", span="870-870"];
n435 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="858-858"];
n436 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="++specLength", span="859-859"];
n440 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label=AddDashesToOption, span="867-867"];
n441 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="specLength += 2", span="868-868"];
n446 [cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="844-844"];
n447 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var specLength = 0", span="881-881"];
n448 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var hasMeta = spec.MetaName.Length > 0", span="883-883"];
n450 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="spec.MetaValue.Length > 0", span="886-886"];
n451 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="metaLength = spec.MetaValue.Length + 1", span="887-887"];
n453 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="890-890"];
n454 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += spec.Index.ToStringInvariant().Length + 11", span="892-892"];
n449 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="var metaLength = 0", span="885-885"];
n452 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label=hasMeta, span="889-889"];
n455 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="specLength += metaLength", span="894-894"];
n458 [cluster="T.ToStringInvariant<T>()", label="Entry T.ToStringInvariant<T>()", span="15-15"];
n456 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="return specLength;", span="896-896"];
n457 [cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="879-879"];
n459 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="value is bool", span="901-901"];
n460 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="return value.ToStringLocal().ToLowerInvariant();", span="902-902"];
n461 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="value is string", span="904-904"];
n462 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="return value.ToStringLocal();", span="905-905"];
n463 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="var asEnumerable = value as IEnumerable", span="907-907"];
n465 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="return value.ToStringLocal();", span="909-909"];
n464 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="asEnumerable == null", span="908-908"];
n467 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label=asEnumerable, span="912-912"];
n466 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="var builder = new StringBuilder()", span="911-911"];
n473 [cluster="System.Text.StringBuilder.StringBuilder()", label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0"];
n468 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="builder\r\n                    .Append(item.ToStringLocal())\r\n                    .Append('' '')", span="913-915"];
n469 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="return builder.Length > 0\r\n                ? builder.ToString(0, builder.Length - 1)\r\n                : string.Empty;", span="917-919"];
n471 [cluster="T.ToStringLocal<T>()", label="Entry T.ToStringLocal<T>()", span="20-20"];
n470 [cluster="CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", label="Exit CommandLine.Text.HelpText.FormatDefaultValue<T>(T)", span="899-899"];
n474 [cluster="System.Text.StringBuilder.ToString(int, int)", label="Entry System.Text.StringBuilder.ToString(int, int)", span="0-0"];
n472 [cluster="string.ToLowerInvariant()", label="Entry string.ToLowerInvariant()", span="0-0"];
m0_43 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="123-123"];
m0_44 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="128-129"];
m0_45 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="((Parsed<Simple_Options>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="132-132"];
m0_46 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence_with_range(string[], int[])", span="123-123"];
m0_235 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="736-736"];
m0_236 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Action test = () => InvokeBuild<Options_With_Both_Min_And_Max_Set_To_Zero>(\r\n                new string[] { })", span="739-740"];
m0_237 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", color=green, community=0, file="InstanceBuilderTests.cs", label="1: Assert.Throws<InvalidOperationException>(test)", span="735-735"];
m0_238 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_and_max_constraint_set_to_zero_throws_exception()", span="736-736"];
m0_5 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="17-17"];
m0_224 [cluster="Unk.>", file="InstanceBuilderTests.cs", label="Entry Unk.>", span=""];
m0_108 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="356-356"];
m0_109 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_Having_Separator_Set>(\r\n                arguments)", span="361-362"];
m0_110 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Having_Separator_Set>)result).Value.LongSequence)", span="365-365"];
m0_111 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_long_sequence_with_separator(string[], long[])", span="356-356"];
m0_148 [cluster="CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_Within_Same_Set.Options_With_Required_Set_To_True_Within_Same_Set()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_Within_Same_Set.Options_With_Required_Set_To_True_Within_Same_Set()", span="4-4"];
m0_181 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="559-559"];
m0_182 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="564-565"];
m0_183 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="((Parsed<Simple_Options>)result).Value.StringValue.ShouldBeEquivalentTo(expected)", span="568-568"];
m0_184 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_names_assumes_identifier_as_long_name(string[], string)", span="559-559"];
m0_220 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="706-706"];
m0_221 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Action test = () => InvokeBuild<Options_With_Min_Set_To_Zero>(\r\n                new string[] { })", span="709-710"];
m0_222 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", color=green, community=0, file="InstanceBuilderTests.cs", label="1: Assert.Throws<InvalidOperationException>(test)", span="713-713"];
m0_223 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Min_constraint_set_to_zero_throws_exception()", span="706-706"];
m0_203 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="648-648"];
m0_204 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Nullables>(\r\n                arguments)", span="653-654"];
m0_205 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Nullables>)result).Value.NullableLong)", span="657-657"];
m0_206 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_long(string[], long?)", span="648-648"];
m0_67 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="360-360"];
m0_275 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", span="825-825"];
m0_276 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_For_Values>(\r\n                arguments)", span="830-831"];
m0_277 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Required_Set_To_True_For_Values>)result).Value)", span="834-834"];
m0_278 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_with_required_constraint_as_value(string[], CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values)", span="825-825"];
m0_116 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="393-393"];
m0_117 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var expectedResult = new Simple_Options_With_Values\r\n                {\r\n                    StringValue = ''str1'',\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''-a'', ''--bee'', ''-c'' },\r\n                    IntValue = 20\r\n                }", span="396-402"];
m0_118 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var arguments = new[] { ''--stringvalue'', ''str1'', ''--'', ''10'', ''-a'', ''--bee'', ''-c'', ''20'' }", span="403-403"];
m0_120 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Values>)result).Value)", span="417-417"];
m0_119 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="var result = InstanceBuilder.Build(\r\n                Maybe.Just<Func<Simple_Options_With_Values>>(() => new Simple_Options_With_Values()),\r\n                (a, optionSpecs) =>\r\n                    Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>())", span="406-414"];
m0_121 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Double_dash_force_subsequent_arguments_as_values()", span="393-393"];
m0_176 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="541-541"];
m0_177 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="544-544"];
m0_178 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''-zx'' })", span="547-548"];
m0_179 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="551-551"];
m0_180 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_in_option_group_gererates_UnknownOptionError()", span="541-541"];
m0_261 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="788-788"];
m0_262 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Interface>(\r\n                arguments)", span="791-792"];
m0_263 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Interface>)result).Value.InputFile)", span="795-795"];
m0_264 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Can_define_options_on_interface_properties(string[], string)", span="788-788"];
m0_62 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m0_63 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="196-196"];
m0_64 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Min_Constraint_For_Value>(\r\n                new string[] { })", span="199-200"];
m0_65 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Min_Constraint_For_Value>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="203-203"];
m0_66 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="193-193"];
m0_170 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="305-305"];
m0_73 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="225-225"];
m0_74 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="228-228"];
m0_75 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Max_Constraint_For_Value>(\r\n                new[] { ''one'', ''two'', ''three'', ''this-is-too-much'' })", span="231-232"];
m0_76 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Max_Constraint_For_Value>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="235-235"];
m0_77 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="225-225"];
m0_18 [cluster="CSharpx.Maybe.Nothing<T>()", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m0_207 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="665-665"];
m0_208 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_FSharpOption>(\r\n                arguments)", span="670-671"];
m0_210 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<Options_With_FSharpOption>)result).Value.FileName.Value)", span="676-676"];
m0_211 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<string>.get_IsSome(((Parsed<Options_With_FSharpOption>)result).Value.FileName))", span="678-678"];
m0_209 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="((Parsed<Options_With_FSharpOption>)result).Value.FileName != null", span="674-674"];
m0_212 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_string(string[], string, bool)", span="665-665"];
m0_289 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="878-878"];
m0_290 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Two_Options_Having_Required_Set_To_True>(\r\n                arguments)", span="881-882"];
m0_292 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="errors.OfType<MissingRequiredOptionError>().Should().HaveCount(x => x == expected)", span="886-886"];
m0_291 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="var errors = ((NotParsed<Options_With_Two_Options_Having_Required_Set_To_True>)result).Errors", span="885-885"];
m0_293 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_generate_MissingRequiredOptionError(string[], int)", span="878-878"];
m0_132 [cluster="CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.Tokenize(System.Collections.Generic.IEnumerable<string>, System.Func<string, CommandLine.Core.NameLookupResult>)", span="13-13"];
m0_171 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="525-525"];
m0_172 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''z'') }", span="528-528"];
m0_173 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''-z'', ''-x'' })", span="531-532"];
m0_174 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="535-535"];
m0_175 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_short_option_gererates_UnknownOptionError()", span="525-525"];
m0_82 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="262-262"];
m0_83 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="265-265"];
m0_84 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                new[] { ''--colors'', ''3'' })", span="268-269"];
m0_85 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="272-272"];
m0_86 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_index_generates_BadFormatConversionError()", span="262-262"];
m0_29 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="393-393"];
m0_30 [cluster="Unk.ShouldBeEquivalentTo", file="InstanceBuilderTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m0_9 [cluster="T.cstr", file="InstanceBuilderTests.cs", label="Entry T.cstr", span=""];
m0_104 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="337-337"];
m0_105 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_Without_Range_For_Value>(\r\n                arguments)", span="342-343"];
m0_106 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Without_Range_For_Value>)result).Value.LongSequence)", span="346-346"];
m0_107 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_sequence_value_without_range_constraints(string[], long[])", span="337-337"];
m0_51 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="162-162"];
m0_52 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Max_Constraint>(\r\n                arguments)", span="167-168"];
m0_53 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="((Parsed<Options_With_Sequence_And_Only_Max_Constraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="171-171"];
m0_54 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_max_constraint(string[], string[])", span="162-162"];
m0_242 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="756-756"];
m0_243 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Named_And_Empty_Sets>(\r\n                arguments)", span="759-760"];
m0_244 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.NotParsed", span="763-763"];
m0_245 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Named_And_Empty_Sets>)result).Errors.Should().HaveCount(x => x == expected)", span="765-765"];
m0_246 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.Parsed", span="767-767"];
m0_247 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="result.Should().BeOfType<Parsed<Options_With_Named_And_Empty_Sets>>()", span="769-769"];
m0_248 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Empty_set_options_allowed_with_mutually_exclusive_sets(string[], CommandLine.ParserResultType, int)", span="756-756"];
m0_39 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="104-104"];
m0_40 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence>(\r\n                arguments)", span="109-110"];
m0_41 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="((Parsed<Options_With_Sequence>)result).Value.IntSequence.ShouldBeEquivalentTo(expected)", span="113-113"];
m0_42 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_int_sequence(string[], int[])", span="104-104"];
m0_295 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="886-886"];
m0_6 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="23-23"];
m0_10 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="24-24"];
m0_7 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new T()", span="23-23"];
m0_8 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="23-23"];
m0_11 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs)", span="24-24"];
m0_12 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="24-24"];
m0_19 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="35-35"];
m0_20 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs)", span="35-35"];
m0_21 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="35-35"];
m0_122 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="407-407"];
m0_125 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="408-410"];
m0_123 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="new Simple_Options_With_Values()", span="407-407"];
m0_124 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="407-407"];
m0_126 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.PreprocessDashDash(a,\r\n                        args => Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)))", span="409-410"];
m0_130 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal))", span="410-410"];
m0_134 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="NameLookup.Contains(name, optionSpecs, StringComparer.Ordinal)", span="410-410"];
m0_127 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="408-410"];
m0_129 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="410-410"];
m0_131 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="410-410"];
m0_133 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="410-410"];
m0_135 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="410-410"];
m0_225 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="709-710"];
m0_226 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="InvokeBuild<Options_With_Min_Set_To_Zero>(\r\n                new string[] { })", span="709-710"];
m0_227 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="709-710"];
m0_232 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="724-725"];
m0_233 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="InvokeBuild<Options_With_Max_Set_To_Zero>(\r\n                new string[] { })", span="724-725"];
m0_234 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="724-725"];
m0_239 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="739-740"];
m0_240 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="InvokeBuild<Options_With_Both_Min_And_Max_Set_To_Zero>(\r\n                new string[] { })", span="739-740"];
m0_241 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="739-740"];
m0_252 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="765-765"];
m0_251 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="765-765"];
m0_253 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="765-765"];
m0_259 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="782-782"];
m0_258 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="782-782"];
m0_260 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="782-782"];
m0_273 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="815-815"];
m0_272 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Entry lambda expression", span="815-815"];
m0_274 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="815-815"];
m0_296 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="x == expected", span="886-886"];
m0_297 [cluster="lambda expression", file="InstanceBuilderTests.cs", label="Exit lambda expression", span="886-886"];
m0_298 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", span="891-891"];
m0_299 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="InstanceBuilderTests.cs", label="var result = InvokeBuildImmutable<Immutable_Simple_Options>(\r\n                arguments)", span="896-897"];
m0_300 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Immutable_Simple_Options>)result).Value)", span="900-900"];
m0_301 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_immutable_instance(string[], CommandLine.Tests.Fakes.Immutable_Simple_Options)", span="891-891"];
m0_254 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="775-775"];
m0_255 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="778-779"];
m0_256 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == expected)", span="782-782"];
m0_257 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Specifying_options_two_or_more_times_generates_RepeatedOptionError(string[], int)", span="775-775"];
m0_265 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="806-806"];
m0_266 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>(\r\n                arguments)", span="809-810"];
m0_267 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.NotParsed", span="813-813"];
m0_268 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>)result).Errors.Should().HaveCount(x => x == expected)", span="815-815"];
m0_269 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="type == ParserResultType.Parsed", span="817-817"];
m0_270 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="result.Should().BeOfType<Parsed<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>>()", span="819-819"];
m0_271 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Enforce_required_within_mutually_exclusive_set_only(string[], CommandLine.ParserResultType, int)", span="806-806"];
m0_47 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="143-143"];
m0_48 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Min_Constraint>(\r\n                arguments)", span="148-149"];
m0_49 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="((Parsed<Options_With_Sequence_And_Only_Min_Constraint>)result).Value.StringSequence.ShouldBeEquivalentTo(expected)", span="152-152"];
m0_50 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_only_min_constraint(string[], string[])", span="143-143"];
m0_88 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="278-278"];
m0_89 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="281-281"];
m0_90 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                new[] { ''--colors'', ''Yellow'' })", span="284-285"];
m0_91 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="288-288"];
m0_92 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_generates_BadFormatConversionError()", span="278-278"];
m0_35 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="83-83"];
m0_36 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options_With_Double_Value>(\r\n                arguments)", span="88-89"];
m0_37 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="((Parsed<Simple_Options_With_Double_Value>)result).Value.DoubleValue.ShouldBeEquivalentTo(expected)", span="92-92"];
m0_38 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_double_value(string[], double)", span="83-83"];
m0_15 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", span="31-31"];
m0_16 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", file="InstanceBuilderTests.cs", label="return InstanceBuilder.Build(\r\n                Maybe.Nothing<Func<T>>(),\r\n                (args, optionSpecs) => Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>());", span="33-39"];
m0_17 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuildImmutable<T>(string[])", span="31-31"];
m0_103 [cluster="CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options_With_Values.Simple_Options_With_Values()", span="6-6"];
m0_307 [cluster="CommandLine.Tests.Fakes.Options_With_Uri_And_SimpleType.Options_With_Uri_And_SimpleType()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.Options_With_Uri_And_SimpleType.Options_With_Uri_And_SimpleType()", span="23-23"];
m0_308 [cluster="System.Uri.Uri(string)", file="InstanceBuilderTests.cs", label="Entry System.Uri.Uri(string)", span="0-0"];
m0_185 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="574-574"];
m0_186 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(NameInfo.EmptyName) }", span="577-577"];
m0_187 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_For_Values>(\r\n                new string[] { })", span="580-581"];
m0_188 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Required_Set_To_True_For_Values>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="584-584"];
m0_189 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_required_constraint_in_string_scalar_as_value_generates_MissingRequiredOptionError()", span="574-574"];
m0_160 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="493-493"];
m0_161 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''i'', '''')) }", span="496-496"];
m0_162 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''-i'', ''10'' })", span="499-500"];
m0_163 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="503-503"];
m0_164 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Wrong_range_in_sequence_gererates_SequenceOutOfRangeError()", span="493-493"];
m0_213 [cluster="Unk.get_IsSome", file="InstanceBuilderTests.cs", label="Entry Unk.get_IsSome", span=""];
m0_4 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="InstanceBuilderTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m0_27 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_0 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", span="19-19"];
m0_1 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="InstanceBuilderTests.cs", label="return InstanceBuilder.Build(\r\n                Maybe.Just<Func<T>>(() => new T()),\r\n                (args, optionSpecs) => Tokenizer.ConfigureTokenizer(StringComparer.Ordinal, false, false)(args, optionSpecs),\r\n                arguments,\r\n                StringComparer.Ordinal,\r\n                CultureInfo.InvariantCulture,\r\n                Enumerable.Empty<ErrorType>());", span="22-28"];
m0_2 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.InvokeBuild<T>(string[])", span="19-19"];
m0_136 [cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="18-18"];
m0_22 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="43-43"];
m0_23 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var expectedResult = new NotParsed<Simple_Options>(\r\n                TypeInfo.Create(typeof(Simple_Options)), new Error[] { new HelpRequestedError() })", span="46-47"];
m0_24 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''--help'' })", span="50-51"];
m0_25 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="result.ShouldBeEquivalentTo(expectedResult)", span="54-54"];
m0_26 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Explicit_help_request_generates_help_requested_error()", span="43-43"];
m0_155 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="477-477"];
m0_156 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingRequiredOptionError(new NameInfo('''', ''str'')) }", span="480-480"];
m0_157 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True>(\r\n                new string[] { })", span="483-484"];
m0_158 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Required_Set_To_True>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="487-487"];
m0_159 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Omitting_required_option_gererates_MissingRequiredOptionError()", span="477-477"];
m0_149 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="459-459"];
m0_150 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n            {\r\n                new MissingRequiredOptionError(new NameInfo('''', ''ftpurl'')),\r\n                new MissingRequiredOptionError(new NameInfo('''', ''weburl''))\r\n            }", span="461-465"];
m0_151 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_Within_Same_Set>(\r\n                new string[] { })", span="467-468"];
m0_152 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Required_Set_To_True_Within_Same_Set>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="471-471"];
m0_153 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_none_are_true()", span="459-459"];
m0_93 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="294-294"];
m0_94 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new BadFormatConversionError(new NameInfo('''', ''colors'')) }", span="297-297"];
m0_95 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                new[] { ''--colors'', ''RED'' })", span="300-301"];
m0_96 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options_With_Enum>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="304-304"];
m0_97 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value_with_wrong_item_name_case_generates_BadFormatConversionError()", span="294-294"];
m0_60 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="294-294"];
m0_68 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="209-209"];
m0_69 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(new NameInfo(''s'', ''string-seq'')) }", span="212-212"];
m0_70 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Max_Constraint>(\r\n                new[] { ''--string-seq=one'', ''two'', ''three'', ''this-is-too-much'' })", span="215-216"];
m0_71 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Max_Constraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="219-219"];
m0_72 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_max_constraint_in_string_sequence_gererates_SequenceOutOfRangeError()", span="209-209"];
m0_55 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="177-177"];
m0_56 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new MissingValueOptionError(new NameInfo(''s'', ''string-seq'')) }", span="180-180"];
m0_57 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_And_Only_Min_Constraint>(\r\n                new[] { ''-s'' })", span="183-184"];
m0_58 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Sequence_And_Only_Min_Constraint>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="187-187"];
m0_59 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_min_constraint_in_string_sequence_gererates_MissingValueOptionError()", span="177-177"];
m0_98 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="310-310"];
m0_99 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var expectedResult = new Simple_Options_With_Values\r\n                {\r\n                    StringValue = string.Empty,\r\n                    LongValue = 10L,\r\n                    StringSequence = new[] { ''a'', ''b'', ''c'' },\r\n                    IntValue = 20\r\n                }", span="313-319"];
m0_100 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options_With_Values>(\r\n                new[] { ''10'', ''a'', ''b'', ''c'', ''20'' })", span="322-323"];
m0_101 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Values>)result).Value)", span="326-326"];
m0_102 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_values_partitioned_between_sequence_and_scalar()", span="310-310"];
m0_250 [cluster="Unk.HaveCount", file="InstanceBuilderTests.cs", label="Entry Unk.HaveCount", span=""];
m0_61 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m0_279 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", span="841-841"];
m0_280 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Scalar_Value_And_Adjacent_SequenceString>(\r\n                arguments)", span="846-847"];
m0_281 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Scalar_Value_And_Adjacent_SequenceString>)result).Value)", span="850-850"];
m0_282 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_scalar_and_sequence_adjacent(string[], CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString)", span="841-841"];
m0_310 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", span="930-930"];
m0_311 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="935-936"];
m0_312 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options>)result).Value.StringValue)", span="939-939"];
m0_313 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_with_dashes_except_in_beginning(string[], string)", span="930-930"];
m0_31 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="63-63"];
m0_32 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="68-69"];
m0_33 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="((Parsed<Simple_Options>)result).Value.LongValue.ShouldBeEquivalentTo(expected)", span="72-72"];
m0_34 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_negative_long_value(string[], long)", span="63-63"];
m0_288 [cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6"];
m0_14 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilderTests.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m0_214 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="686-686"];
m0_215 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_FSharpOption>(\r\n                arguments)", span="691-692"];
m0_217 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="expectedValue.ShouldBeEquivalentTo(((Parsed<Options_With_FSharpOption>)result).Value.Offset.Value)", span="697-697"];
m0_218 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="expectedSome.ShouldBeEquivalentTo(FSharpOption<int>.get_IsSome(((Parsed<Options_With_FSharpOption>)result).Value.Offset))", span="699-699"];
m0_216 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="((Parsed<Options_With_FSharpOption>)result).Value.Offset != null", span="695-695"];
m0_219 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_fsharp_option_int(string[], int, bool)", span="686-686"];
m0_283 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="856-856"];
m0_284 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="var expectedResult = new Simple_Options { StringValue=''strval0'', IntSequence=new[] { 9, 7, 8 }, BoolValue = true,  LongValue = 9876543210L }", span="859-859"];
m0_285 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''--stringvalue=strval0'', ''-i'', ''9'', ''7'', ''8'', ''-x'', ''9876543210'' })", span="862-863"];
m0_286 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Simple_Options>)result).Value)", span="866-866"];
m0_287 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_mutable()", span="856-856"];
m0_142 [cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="329-329"];
m0_128 [cluster="CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.PreprocessDashDash(System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>)", span="44-44"];
m0_112 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="375-375"];
m0_113 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_Having_Separator_Set>(\r\n                arguments)", span="380-381"];
m0_114 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Sequence_Having_Separator_Set>)result).Value.StringSequence)", span="384-384"];
m0_115 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_string_sequence_with_separator(string[], string[])", span="375-375"];
m0_154 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="316-316"];
m0_199 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="629-629"];
m0_200 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Nullables>(\r\n                arguments)", span="634-635"];
m0_201 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Nullables>)result).Value.NullableInt)", span="638-638"];
m0_202 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_nullable_int(string[], int?)", span="629-629"];
m0_165 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="509-509"];
m0_166 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new UnknownOptionError(''xyz'') }", span="512-512"];
m0_167 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                new[] { ''--stringvalue'', ''abc'', ''--xyz'' })", span="515-516"];
m0_168 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="((NotParsed<Simple_Options>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="519-519"];
m0_169 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_unknown_long_option_gererates_UnknownOptionError()", span="509-509"];
m0_143 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="443-443"];
m0_144 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var expectedResult = new Options_With_Required_Set_To_True_Within_Same_Set {\r\n                FtpUrl = ''str1'',\r\n                WebUrl = ''str2''\r\n            }", span="445-448"];
m0_145 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Required_Set_To_True_Within_Same_Set>(\r\n                new[] { ''--ftpurl'', ''str1'', ''--weburl'', ''str2'' })", span="450-451"];
m0_146 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Options_With_Required_Set_To_True_Within_Same_Set>)result).Value)", span="454-454"];
m0_147 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Two_required_options_at_the_same_set_and_both_are_true()", span="443-443"];
m0_13 [cluster="CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Core.Tokenizer.ConfigureTokenizer(System.StringComparer, bool, bool)", span="109-109"];
m0_194 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="609-609"];
m0_195 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[] { new SequenceOutOfRangeError(NameInfo.EmptyName) }", span="612-612"];
m0_196 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Sequence_Having_Both_Min_And_Max_Equal>(\r\n                new[] { ''one'', ''two'', ''this-is-too-much'' })", span="615-616"];
m0_197 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Sequence_Having_Both_Min_And_Max_Equal>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="619-619"];
m0_198 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Breaking_equal_min_max_constraint_in_string_sequence_as_value_gererates_SequenceOutOfRangeError()", span="609-609"];
m0_3 [cluster="CSharpx.Maybe.Just<T>(T)", file="InstanceBuilderTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m0_78 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="247-247"];
m0_79 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options_With_Enum>(\r\n                arguments)", span="252-253"];
m0_80 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options_With_Enum>)result).Value.Colors)", span="256-256"];
m0_81 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_enum_value(string[], CommandLine.Tests.Fakes.Colors)", span="247-247"];
m0_249 [cluster="Unk.Should", file="InstanceBuilderTests.cs", label="Entry Unk.Should", span=""];
m0_309 [cluster="CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Fakes.MySimpleType.MySimpleType(string)", span="12-12"];
m0_190 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="594-594"];
m0_191 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Simple_Options>(\r\n                arguments)", span="599-600"];
m0_192 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Simple_Options>)result).Value.StringValue)", span="603-603"];
m0_193 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_utf8_string_correctly(string[], string)", span="594-594"];
m0_87 [cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="InstanceBuilderTests.cs", label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="349-349"];
m0_302 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="906-906"];
m0_303 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="var expectedResult = new Options_With_Uri_And_SimpleType { EndPoint = new Uri(''http://localhost/test/''), MyValue = new MySimpleType(''custom-value'') }", span="909-909"];
m0_304 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Uri_And_SimpleType>(\r\n                new[] { ''--endpoint=http://localhost/test/'', ''custom-value'' })", span="912-913"];
m0_305 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="expectedResult.ShouldBeEquivalentTo(((Parsed<Options_With_Uri_And_SimpleType>)result).Value)", span="916-916"];
m0_306 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_to_type_with_single_string_ctor_builds_up_correct_instance()", span="906-906"];
m0_294 [cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilderTests.cs", label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0"];
m0_228 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="721-721"];
m0_229 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Action test = () => InvokeBuild<Options_With_Max_Set_To_Zero>(\r\n                new string[] { })", span="724-725"];
m0_230 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", color=green, community=0, file="InstanceBuilderTests.cs", label="0: Assert.Throws<InvalidOperationException>(test)", span="724-724"];
m0_231 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Max_constraint_set_to_zero_throws_exception()", span="721-721"];
m0_314 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", span="946-946"];
m0_315 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Guid>(\r\n                arguments)", span="951-952"];
m0_316 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="InstanceBuilderTests.cs", label="expected.ShouldBeEquivalentTo(((Parsed<Options_With_Guid>)result).Value)", span="955-955"];
m0_317 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_Guid(string[], CommandLine.Tests.Fakes.Options_With_Guid)", span="946-946"];
m0_137 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Entry CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="423-423"];
m0_138 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl''), string.Empty),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''ftpurl''), string.Empty)\r\n                }", span="426-430"];
m0_139 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="var result = InvokeBuild<Options_With_Two_Sets>(\r\n                new[] { ''--weburl'', ''http://mywebsite.org/'', ''--ftpurl'', ''fpt://ftpsite.org/'' })", span="433-434"];
m0_140 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="((NotParsed<Options_With_Two_Sets>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="437-437"];
m0_141 [cluster="CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", file="InstanceBuilderTests.cs", label="Exit CommandLine.Tests.Unit.Core.InstanceBuilderTests.Parse_option_from_different_sets_gererates_MutuallyExclusiveSetError()", span="423-423"];
m0_318 [file="InstanceBuilderTests.cs", label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span=""];
m0_319 [file="InstanceBuilderTests.cs", label=int, span=""];
m0_320 [file="InstanceBuilderTests.cs", label=int, span=""];
m0_321 [file="InstanceBuilderTests.cs", label=int, span=""];
m0_322 [file="InstanceBuilderTests.cs", label=int, span=""];
m1_12 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", span="34-34"];
m1_13 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="string ShortName = ''s''", span="36-36"];
m1_14 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="string LongName = ''long''", span="37-37"];
m1_15 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="var expected = new NameInfo(ShortName, LongName)", span="40-40"];
m1_16 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="var spec = new OptionSpecification(ShortName, LongName, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)", span="41-41"];
m1_18 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="47-47"];
m1_17 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="var result = spec.FromOptionSpecification()", span="44-44"];
m1_19 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", file="NameLookupTests.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Get_name_from_option_specification()", span="34-34"];
m1_20 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="NameLookupTests.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_21 [cluster="CommandLine.Core.OptionSpecification.FromOptionSpecification()", file="NameLookupTests.cs", label="Entry CommandLine.Core.OptionSpecification.FromOptionSpecification()", span="15-15"];
m1_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="NameLookupTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m1_6 [cluster="CSharpx.Maybe.Just<T>(T)", file="NameLookupTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m1_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="NameLookupTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m1_0 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m1_1 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var expected = Maybe.Just(''.'')", span="17-17"];
m1_2 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="18-19"];
m1_4 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="expected.ShouldBeEquivalentTo(result)", span="28-28"];
m1_3 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", color=red, community=0, file="NameLookupTests.cs", label="1: var result = NameLookup.HavingSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="23-23"];
m1_5 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", file="NameLookupTests.cs", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
m1_10 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="NameLookupTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m1_11 [cluster="Unk.ShouldBeEquivalentTo", file="NameLookupTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_9 [cluster="System.Collections.Generic.List<T>.List()", file="NameLookupTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m2_12 [cluster="Unk.Create", file="OptionMapperTests.cs", label="Entry Unk.Create", span=""];
m2_6 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m2_11 [cluster="Unk.Single", file="OptionMapperTests.cs", label="Entry Unk.Single", span=""];
m2_15 [cluster="Unk.NotNull", file="OptionMapperTests.cs", label="Entry Unk.NotNull", span=""];
m2_7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m2_27 [cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="OptionMapperTests.cs", label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="17-17"];
m2_0 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Entry CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="20-20"];
m2_1 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var tokenPartitions = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''x'', new [] { ''true'' })\r\n                }", span="23-26"];
m2_2 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="var specProps = new[]\r\n                {\r\n                    SpecificationProperty.Create(\r\n                        new OptionSpecification(''x'', string.Empty, false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', Maybe.Nothing<object>(), string.Empty, string.Empty, new List<string>(), typeof(bool), TargetType.Switch), \r\n                        typeof(Simple_Options).GetProperties().Single(p => p.Name.Equals(''BoolValue'', StringComparison.Ordinal)),\r\n                        Maybe.Nothing<object>())\r\n                }", span="27-33"];
m2_3 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", color=red, community=0, file="OptionMapperTests.cs", label="0: var result = OptionMapper.MapValues(\r\n                specProps.Where(pt => pt.Specification.IsOption()),\r\n                tokenPartitions,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture),\r\n#if !PLATFORM_DOTNET\r\n                StringComparer.InvariantCulture\r\n#else\r\n                StringComparer.Ordinal\r\n#endif\r\n                )", span="36-45"];
m2_4 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Assert.NotNull(((Ok<IEnumerable<SpecificationProperty>, Error>)result).Success.Single(\r\n                a => a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value))", span="48-51"];
m2_5 [cluster="CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", file="OptionMapperTests.cs", label="Exit CommandLine.Tests.Unit.Core.OptionMapperTests.Map_boolean_switch_creates_boolean_value()", span="20-20"];
m2_28 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="49-51"];
m2_16 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="31-31"];
m2_20 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="37-37"];
m2_24 [cluster="lambda expression", file="OptionMapperTests.cs", label="Entry lambda expression", span="39-39"];
m2_17 [cluster="lambda expression", file="OptionMapperTests.cs", label="p.Name.Equals(''BoolValue'', StringComparison.Ordinal)", span="31-31"];
m2_18 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="31-31"];
m2_21 [cluster="lambda expression", file="OptionMapperTests.cs", label="pt.Specification.IsOption()", span="37-37"];
m2_22 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="37-37"];
m2_25 [cluster="lambda expression", file="OptionMapperTests.cs", label="TypeConverter.ChangeType(vals, type, isScalar, CultureInfo.InvariantCulture)", span="39-39"];
m2_26 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="39-39"];
m2_29 [cluster="lambda expression", file="OptionMapperTests.cs", label="a.Specification.IsOption()\r\n                && ((OptionSpecification)a.Specification).ShortName.Equals(''x'')\r\n                && (bool)((Just<object>)a.Value).Value", span="49-51"];
m2_30 [cluster="lambda expression", file="OptionMapperTests.cs", label="Exit lambda expression", span="49-51"];
m2_31 [cluster="string.Equals(string)", file="OptionMapperTests.cs", label="Entry string.Equals(string)", span="0-0"];
m2_8 [cluster="CSharpx.Maybe.Nothing<T>()", file="OptionMapperTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m2_19 [cluster="string.Equals(string, System.StringComparison)", file="OptionMapperTests.cs", label="Entry string.Equals(string, System.StringComparison)", span="0-0"];
m2_23 [cluster="CommandLine.Core.Specification.IsOption()", file="OptionMapperTests.cs", label="Entry CommandLine.Core.Specification.IsOption()", span="10-10"];
m2_14 [cluster="Unk.MapValues", file="OptionMapperTests.cs", label="Entry Unk.MapValues", span=""];
m2_10 [cluster="System.Type.GetProperties()", file="OptionMapperTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m2_9 [cluster="System.Collections.Generic.List<T>.List()", file="OptionMapperTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m3_143 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="219-219"];
m3_144 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", color=red, community=1, file="ReflectionExtensions.cs", label="0: return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Instance,\r\n                null,\r\n                target,\r\n                new object[] { });", span="222-227"];
m3_145 [cluster="CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.InstanceProperty(System.Type, string, object)", span="219-219"];
m3_17 [cluster="Unk.SingleOrDefault", file="ReflectionExtensions.cs", label="Entry Unk.SingleOrDefault", span=""];
m3_45 [cluster="System.Type.GetInterfaces()", file="ReflectionExtensions.cs", label="Entry System.Type.GetInterfaces()", span="0-0"];
m3_92 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="147-147"];
m3_93 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Func<bool> isMutable = () => {\r\n                var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite);\r\n                var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any();\r\n                return props || fields;\r\n            }", span="149-153"];
m3_94 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="return type != typeof(object) ? isMutable() : true;", span="154-154"];
m3_95 [cluster="CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsMutable(System.Type)", span="147-147"];
m3_149 [cluster="System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Contains<TSource>(TSource)", span="0-0"];
m3_102 [cluster="System.Type.GetFields(System.Reflection.BindingFlags)", file="ReflectionExtensions.cs", label="Entry System.Type.GetFields(System.Reflection.BindingFlags)", span="0-0"];
m3_146 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="234-234"];
m3_147 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                   (type.GetTypeInfo().IsValueType && type != typeof(Guid))\r\n                || type.GetTypeInfo().IsPrimitive\r\n                || new [] { \r\n                     typeof(string)\r\n                    ,typeof(decimal)\r\n                    ,typeof(DateTime)\r\n                    ,typeof(DateTimeOffset)\r\n                    ,typeof(TimeSpan)\r\n                   }.Contains(type)\r\n                || Convert.GetTypeCode(type) != TypeCode.Object;", span="236-246"];
m3_148 [cluster="CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.IsPrimitiveEx(System.Type)", span="234-234"];
m3_6 [cluster="Unk.>", file="ReflectionExtensions.cs", label="Entry Unk.>", span=""];
m3_74 [cluster="System.Action<T>.Invoke(T)", file="ReflectionExtensions.cs", label="Entry System.Action<T>.Invoke(T)", span="0-0"];
m3_83 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="138-138"];
m3_84 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="var e = Expression.Lambda<Func<object>>(\r\n                Expression.Convert(\r\n                    Expression.Default(type),\r\n                    typeof(object)))", span="140-143"];
m3_85 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="return e.Compile()();", span="144-144"];
m3_86 [cluster="CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetDefaultValue(System.Type)", span="138-138"];
m3_7 [cluster="Unk.Any", file="ReflectionExtensions.cs", label="Entry Unk.Any", span=""];
m3_8 [cluster="Unk.First", file="ReflectionExtensions.cs", label="Entry Unk.First", span=""];
m3_132 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="182-182"];
m3_133 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="return TypeInfo.Create(type);", span="184-184"];
m3_134 [cluster="CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTypeInfo(System.Type)", span="182-182"];
m3_44 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ReflectionExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m3_26 [cluster="Unk.Create", file="ReflectionExtensions.cs", label="Entry Unk.Create", span=""];
m3_53 [cluster="Unk.Where", file="ReflectionExtensions.cs", label="Entry Unk.Where", span=""];
m3_60 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97"];
m3_61 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", color=green, community=0, file="ReflectionExtensions.cs", label="1: Action<Exception> fail = inner => {\r\n                throw new InvalidOperationException(''Cannot set value to target instance.'', inner);\r\n            }", span="99-101"];
m3_62 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="property.SetValue(instance, value, null)", span="109-109"];
m3_71 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="return instance;", span="130-130"];
m3_64 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="114-114"];
m3_66 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="119-119"];
m3_68 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="123-123"];
m3_70 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="fail(e)", span="127-127"];
m3_63 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetException, span="112-112"];
m3_65 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetParameterCountException, span="117-117"];
m3_67 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=MethodAccessException, span="121-121"];
m3_69 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label=TargetInvocationException, span="125-125"];
m3_72 [cluster="CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetValue<T>(System.Reflection.PropertyInfo, T, object)", span="97-97"];
m3_46 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71"];
m3_47 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="return type == typeof(bool)\r\n                       ? TargetType.Switch\r\n                       : type == typeof(string)\r\n                             ? TargetType.Scalar\r\n                             : type.IsArray || typeof(IEnumerable).IsAssignableFrom(type)\r\n                                   ? TargetType.Sequence\r\n                                   : TargetType.Scalar;", span="73-79"];
m3_48 [cluster="CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.ToTargetType(System.Type)", span="71-71"];
m3_103 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m3_78 [cluster="System.InvalidOperationException.InvalidOperationException(string, System.Exception)", file="ReflectionExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException(string, System.Exception)", span="0-0"];
m3_18 [cluster="Unk.ToMaybe", file="ReflectionExtensions.cs", label="Entry Unk.ToMaybe", span=""];
m3_39 [cluster="System.Type.SafeGetInterfaces()", file="ReflectionExtensions.cs", label="Entry System.Type.SafeGetInterfaces()", span="66-66"];
m3_22 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(System.Type, bool)", span="0-0"];
m3_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", file="ReflectionExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.SelectMany<TSource, TResult>(System.Func<TSource, System.Collections.Generic.IEnumerable<TResult>>)", span="0-0"];
m3_14 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m3_15 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                (from attr in\r\n                 type.FlattenHierarchy().SelectMany(x => x.GetCustomAttributes(typeof(VerbAttribute), true))\r\n                 let vattr = (VerbAttribute)attr\r\n                 select vattr)\r\n                    .SingleOrDefault()\r\n                    .ToMaybe();", span="29-35"];
m3_16 [cluster="CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetVerbSpecification(System.Type)", span="27-27"];
m3_9 [cluster="Unk.selector", file="ReflectionExtensions.cs", label="Entry Unk.selector", span=""];
m3_129 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="177-177"];
m3_10 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="18-18"];
m3_11 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetProperties()", span="18-18"];
m3_12 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="18-18"];
m3_19 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="31-31"];
m3_20 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetCustomAttributes(typeof(VerbAttribute), true)", span="31-31"];
m3_21 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="31-31"];
m3_27 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="41-41"];
m3_28 [cluster="lambda expression", file="ReflectionExtensions.cs", label="x.GetProperties()", span="41-41"];
m3_29 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="41-41"];
m3_56 [cluster="lambda expression", file="ReflectionExtensions.cs", label="specProp.Property.SetValue(current, selector(specProp))", span="92-92"];
m3_57 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return instance;", span="93-93"];
m3_55 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="90-94"];
m3_58 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="90-94"];
m3_76 [cluster="lambda expression", color=green, community=0, file="ReflectionExtensions.cs", label="1: throw new InvalidOperationException(''Cannot set value to target instance.'', inner);", span="100-100"];
m3_75 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="99-105"];
m3_77 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="99-105"];
m3_97 [cluster="lambda expression", file="ReflectionExtensions.cs", label="var props = type.GetProperties(BindingFlags.Public | BindingFlags.Instance).Any(p => p.CanWrite)", span="150-150"];
m3_98 [cluster="lambda expression", file="ReflectionExtensions.cs", label="var fields = type.GetFields(BindingFlags.Public | BindingFlags.Instance).Any()", span="151-151"];
m3_96 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="149-153"];
m3_104 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Entry lambda expression", span="150-150"];
m3_99 [cluster="lambda expression", file="ReflectionExtensions.cs", label="return props || fields;", span="152-152"];
m3_100 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="149-153"];
m3_105 [cluster="lambda expression", file="ReflectionExtensions.cs", label="p.CanWrite", span="150-150"];
m3_106 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="150-150"];
m3_130 [cluster="lambda expression", file="ReflectionExtensions.cs", label="pi.PropertyType", span="177-177"];
m3_131 [cluster="lambda expression", file="ReflectionExtensions.cs", label="Exit lambda expression", span="177-177"];
m3_40 [cluster="System.Type.GetTypeInfo()", file="ReflectionExtensions.cs", label="Entry System.Type.GetTypeInfo()", span="251-251"];
m3_73 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
m3_82 [cluster="System.Array.CreateInstance(System.Type, int)", file="ReflectionExtensions.cs", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
m3_87 [cluster="System.Linq.Expressions.Expression.Default(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Default(System.Type)", span="0-0"];
m3_88 [cluster="System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Convert(System.Linq.Expressions.Expression, System.Type)", span="0-0"];
m3_128 [cluster="CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Infrastructure.ReflectionHelper.CreateDefaultImmutableInstance(System.Type, System.Type[])", span="62-62"];
m3_49 [cluster="System.Type.IsAssignableFrom(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Type.IsAssignableFrom(System.Type)", span="0-0"];
m3_107 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="157-157"];
m3_108 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="type == typeof(string)", span="159-159"];
m3_110 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="type.GetTypeInfo().IsGenericType && type.GetGenericTypeDefinition() == typeof(IEnumerable<>)", span="163-163"];
m3_111 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return type.GetGenericArguments()[0].CreateEmptyArray();", span="165-165"];
m3_112 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return type.GetDefaultValue();", span="167-167"];
m3_109 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="return string.Empty;", span="161-161"];
m3_113 [cluster="CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateDefaultForImmutable(System.Type)", span="157-157"];
m3_135 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m3_13 [cluster="System.Type.GetProperties()", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m3_23 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m3_24 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="return\r\n                (from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                    let attrs = pi.GetCustomAttributes(true)\r\n                    where attrs.OfType<UsageAttribute>().Any()\r\n                    select Tuple.Create(pi, (UsageAttribute)attrs.First()))\r\n                        .SingleOrDefault()\r\n                        .ToMaybe();", span="40-46"];
m3_25 [cluster="CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetUsageData(System.Type)", span="38-38"];
m3_0 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m3_1 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="return from pi in type.FlattenHierarchy().SelectMany(x => x.GetProperties())\r\n                   let attrs = pi.GetCustomAttributes(true)\r\n                   where\r\n                       attrs.OfType<OptionAttribute>().Any() ||\r\n                       attrs.OfType<ValueAttribute>().Any()\r\n                   group pi by pi.Name into g\r\n                   select selector(g.First());", span="18-24"];
m3_2 [cluster="CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetSpecifications<T>(System.Type, System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m3_89 [cluster="System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression.Lambda<TDelegate>(System.Linq.Expressions.Expression, params System.Linq.Expressions.ParameterExpression[])", span="0-0"];
m3_114 [cluster="System.Type.GetGenericTypeDefinition()", file="ReflectionExtensions.cs", label="Entry System.Type.GetGenericTypeDefinition()", span="0-0"];
m3_118 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="170-170"];
m3_119 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="type.IsMutable()", span="172-172"];
m3_120 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="return Activator.CreateInstance(type);", span="174-174"];
m3_121 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="var ctorTypes = type.GetSpecifications(pi => pi.PropertyType).ToArray()", span="177-177"];
m3_122 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="return ReflectionHelper.CreateDefaultImmutableInstance(type, ctorTypes);", span="179-179"];
m3_123 [cluster="CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.AutoDefault(System.Type)", span="170-170"];
m3_140 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="204-204"];
m3_141 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", color=red, community=1, file="ReflectionExtensions.cs", label="0: return type.InvokeMember(\r\n                name,\r\n                BindingFlags.GetProperty | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                new object[] { });", span="207-212"];
m3_142 [cluster="CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticProperty(System.Type, string)", span="204-204"];
m3_150 [cluster="System.Convert.GetTypeCode(object)", file="ReflectionExtensions.cs", label="Entry System.Convert.GetTypeCode(object)", span="0-0"];
m3_41 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="66-66"];
m3_42 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="return type == null ? Enumerable.Empty<Type>() : type.GetInterfaces();", span="68-68"];
m3_43 [cluster="CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SafeGetInterfaces(System.Type)", span="66-66"];
m3_116 [cluster="System.Type.CreateEmptyArray()", file="ReflectionExtensions.cs", label="Entry System.Type.CreateEmptyArray()", span="133-133"];
m3_117 [cluster="System.Type.GetDefaultValue()", file="ReflectionExtensions.cs", label="Entry System.Type.GetDefaultValue()", span="138-138"];
m3_115 [cluster="System.Type.GetGenericArguments()", file="ReflectionExtensions.cs", label="Entry System.Type.GetGenericArguments()", span="0-0"];
m3_126 [cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="ReflectionExtensions.cs", label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="16-16"];
m3_125 [cluster="System.Activator.CreateInstance(System.Type)", file="ReflectionExtensions.cs", label="Entry System.Activator.CreateInstance(System.Type)", span="0-0"];
m3_101 [cluster="System.Type.GetProperties(System.Reflection.BindingFlags)", file="ReflectionExtensions.cs", label="Entry System.Type.GetProperties(System.Reflection.BindingFlags)", span="0-0"];
m3_5 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="ReflectionExtensions.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m3_91 [cluster="System.Func<TResult>.Invoke()", file="ReflectionExtensions.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m3_124 [cluster="System.Type.IsMutable()", file="ReflectionExtensions.cs", label="Entry System.Type.IsMutable()", span="147-147"];
m3_54 [cluster="Unk.Aggregate", file="ReflectionExtensions.cs", label="Entry Unk.Aggregate", span=""];
m3_79 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="133-133"];
m3_80 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="return Array.CreateInstance(type, 0);", span="135-135"];
m3_81 [cluster="CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.CreateEmptyArray(System.Type)", span="133-133"];
m3_50 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m3_51 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="return specProps.Where(predicate).Aggregate(\r\n                instance,\r\n                (current, specProp) =>\r\n                    {\r\n                        specProp.Property.SetValue(current, selector(specProp));\r\n                        return instance;\r\n                    });", span="88-94"];
m3_52 [cluster="CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.SetProperties<T>(T, System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Func<CommandLine.Core.SpecificationProperty, bool>, System.Func<CommandLine.Core.SpecificationProperty, object>)", span="82-82"];
m3_30 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49"];
m3_31 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="type == null", span="51-51"];
m3_32 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield break;", span="53-53"];
m3_33 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return type;", span="55-55"];
m3_35 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return @interface;", span="58-58"];
m3_37 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="yield return @interface;", span="62-62"];
m3_34 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="type.SafeGetInterfaces()", span="56-56"];
m3_36 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="FlattenHierarchy(type.GetTypeInfo().BaseType)", span="60-60"];
m3_38 [cluster="CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.FlattenHierarchy(System.Type)", span="49-49"];
m3_59 [cluster="Unk.SetValue", file="ReflectionExtensions.cs", label="Entry Unk.SetValue", span=""];
m3_151 [cluster="CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", span="251-251"];
m3_152 [cluster="CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="return type;", span="253-253"];
m3_153 [cluster="CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.GetTypeInfo(System.Type)", span="251-251"];
m3_139 [cluster="System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", file="ReflectionExtensions.cs", label="Entry System.Type.InvokeMember(string, System.Reflection.BindingFlags, System.Reflection.Binder, object, object[])", span="0-0"];
m3_136 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="Entry CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="187-187"];
m3_137 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", color=red, community=1, file="ReflectionExtensions.cs", label="0: return type.InvokeMember(\r\n                name,\r\n                BindingFlags.InvokeMethod | BindingFlags.Public | BindingFlags.Static,\r\n                null,\r\n                null,\r\n                args);", span="190-195"];
m3_138 [cluster="CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", file="ReflectionExtensions.cs", label="Exit CommandLine.Core.ReflectionExtensions.StaticMethod(System.Type, string, params object[])", span="187-187"];
m3_3 [cluster="System.Type.FlattenHierarchy()", file="ReflectionExtensions.cs", label="Entry System.Type.FlattenHierarchy()", span="49-49"];
m3_90 [cluster="System.Linq.Expressions.Expression<TDelegate>.Compile()", file="ReflectionExtensions.cs", label="Entry System.Linq.Expressions.Expression<TDelegate>.Compile()", span="0-0"];
m3_154 [file="ReflectionExtensions.cs", label="System.Func<CommandLine.Core.SpecificationProperty, object>", span=""];
m3_155 [file="ReflectionExtensions.cs", label=T, span=""];
m3_156 [file="ReflectionExtensions.cs", label="System.Type", span=""];
m4_20 [cluster="System.ApplicationException.ApplicationException(string)", file="SpecificationExtensions.cs", label="Entry System.ApplicationException.ApplicationException(string)", span="0-0"];
m4_13 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="43-43"];
m4_14 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label=guardsLookup, span="45-45"];
m4_15 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="specifications.Any(spec => guard.Item1(spec))", span="47-47"];
m4_17 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="return specifications;", span="57-57"];
m4_16 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", color=green, community=0, file="SpecificationExtensions.cs", label="0: throw new InvalidOperationException(guard.Item2);", span="49-49"];
m4_18 [cluster="CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.ThrowingValidate(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, System.Collections.Generic.IEnumerable<System.Tuple<System.Func<CommandLine.Core.Specification, bool>, string>>)", span="43-43"];
m4_33 [cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="SpecificationExtensions.cs", label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0"];
m4_25 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="60-60"];
m4_26 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="int min", span="62-62"];
m4_28 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="specification.Min.MatchJust(out min) && specification.Max.MatchJust(out max)", span="64-64"];
m4_29 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="return predicate(min, max);", span="66-66"];
m4_27 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="int max", span="63-63"];
m4_30 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="68-68"];
m4_31 [cluster="CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingRange(CommandLine.Core.Specification, System.Func<int, int, bool>)", span="60-60"];
m4_0 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m4_1 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Option;", span="12-12"];
m4_2 [cluster="CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsOption(CommandLine.Core.Specification)", span="10-10"];
m4_9 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m4_3 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m4_4 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="return specification.Tag == SpecificationType.Value;", span="17-17"];
m4_5 [cluster="CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.IsValue(CommandLine.Core.Specification)", span="15-15"];
m4_21 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="47-47"];
m4_22 [cluster="lambda expression", file="SpecificationExtensions.cs", label="guard.Item1(spec)", span="47-47"];
m4_23 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="47-47"];
m4_40 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="81-81"];
m4_41 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="int max", span="83-83"];
m4_42 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="specification.Max.MatchJust(out max)", span="84-84"];
m4_43 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return predicate(max);", span="86-86"];
m4_44 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="88-88"];
m4_45 [cluster="CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMax(CommandLine.Core.Specification, System.Func<int, bool>)", span="81-81"];
m4_10 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", span="38-38"];
m4_11 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="return specification.ShortName.Length > 0 ? specification.ShortName : specification.LongName;", span="40-40"];
m4_12 [cluster="CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.UniqueName(CommandLine.Core.OptionSpecification)", span="38-38"];
m4_34 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="71-71"];
m4_35 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="int min", span="73-73"];
m4_36 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="specification.Min.MatchJust(out min)", span="74-74"];
m4_37 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return predicate(min);", span="76-76"];
m4_38 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="return false;", span="78-78"];
m4_39 [cluster="CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.HavingMin(CommandLine.Core.Specification, System.Func<int, bool>)", span="71-71"];
m4_6 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m4_7 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="return new OptionSpecification(\r\n                specification.ShortName,\r\n                newLongName,\r\n                specification.Required,\r\n                specification.SetName,\r\n                specification.Min,\r\n                specification.Max,\r\n                specification.Separator,\r\n                specification.DefaultValue,\r\n                specification.HelpText,\r\n                specification.MetaValue,\r\n                specification.EnumValues,\r\n                specification.ConversionType,\r\n                specification.TargetType);", span="22-35"];
m4_8 [cluster="CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationExtensions.WithLongName(CommandLine.Core.OptionSpecification, string)", span="20-20"];
m4_24 [cluster="System.Func<T, TResult>.Invoke(T)", file="SpecificationExtensions.cs", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
m4_32 [cluster="CSharpx.Maybe<T>.MatchJust(out T)", file="SpecificationExtensions.cs", label="Entry CSharpx.Maybe<T>.MatchJust(out T)", span="48-48"];
m4_46 [file="SpecificationExtensions.cs", label=guard, span=""];
m5_20 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="47-47"];
m5_21 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''x''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="50-51"];
m5_22 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="52-53"];
m5_24 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Success.ShouldBeEquivalentTo(expectedTokens)", span="69-69"];
m5_23 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", color=red, community=0, file="TokenizerTests.cs", label="0: var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''x''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n#if !PLATFORM_DOTNET\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="56-63"];
m5_25 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_even_args_input_returns_sequence()", span="47-47"];
m5_35 [cluster="CommandLine.Core.Token.Value(string, bool)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string, bool)", span="29-29"];
m5_29 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="75-75"];
m5_30 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="var expectedTokens = new[] {\r\n                Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                Token.Name(''unknown''), Token.Name(''switch'') }", span="78-80"];
m5_31 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Func<string, bool> nameLookup =\r\n                name => name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="81-82"];
m5_33 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="result.ShouldBeEquivalentTo(expectedTokens)", span="97-97"];
m5_32 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="var result =\r\n                Tokenizer.Normalize(\r\n                    //Result.Succeed(\r\n                        Enumerable.Empty<Token>()\r\n                            .Concat(\r\n                                new[] {\r\n                                    Token.Name(''x''), Token.Name(''string-seq''), Token.Value(''aaa''), Token.Value(''bb''),\r\n                                    Token.Name(''unknown''), Token.Value(''value0'', true), Token.Name(''switch'') })\r\n                        //,Enumerable.Empty<Error>()),\r\n                    ,nameLookup)", span="85-94"];
m5_34 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Normalize_should_remove_all_value_with_explicit_assignment_of_existing_name()", span="75-75"];
m5_19 [cluster="CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenizerTests.cs", label="Entry CommandLine.Core.NameLookup.HavingSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="27-27"];
m5_36 [cluster="CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.Normalize(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, bool>)", span="78-78"];
m5_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenizerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m5_0 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m5_1 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var expectedTokens = new[] { Token.Name(''i''), Token.Value(''10''), Token.Name(''string-seq''),\r\n                Token.Value(''aaa''), Token.Value(''bb''),  Token.Value(''cccc''), Token.Name(''switch'') }", span="23-24"];
m5_2 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), ',', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<string>), TargetType.Sequence)}", span="25-26"];
m5_4 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="((Ok<IEnumerable<Token>, Error>)result).Success.ShouldBeEquivalentTo(expectedTokens)", span="41-41"];
m5_3 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", color=red, community=0, file="TokenizerTests.cs", label="1: var result =\r\n                Tokenizer.ExplodeOptionList(\r\n                    Result.Succeed(\r\n                        Enumerable.Empty<Token>().Concat(new[] { Token.Name(''i''), Token.Value(''10''),\r\n                            Token.Name(''string-seq''), Token.Value(''aaa,bb,cccc''), Token.Name(''switch'') }),\r\n                        Enumerable.Empty<Error>()),\r\n#if !PLATFORM_DOTNET\r\n                        optionName => NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture))", span="29-36"];
m5_5 [cluster="CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", file="TokenizerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenizerTests.Explode_scalar_with_separator_in_odd_args_input_returns_sequence()", span="20-20"];
m5_37 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="82-82"];
m5_17 [cluster="lambda expression", color=red, community=0, file="TokenizerTests.cs", label="1: NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="36-36"];
m5_16 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="36-36"];
m5_18 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="36-36"];
m5_27 [cluster="lambda expression", color=red, community=0, file="TokenizerTests.cs", label="1: NameLookup.HavingSeparator(optionName, specs, StringComparer.InvariantCulture)", span="63-63"];
m5_26 [cluster="lambda expression", file="TokenizerTests.cs", label="Entry lambda expression", span="63-63"];
m5_28 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="63-63"];
m5_38 [cluster="lambda expression", file="TokenizerTests.cs", label="name.Equals(''x'') || name.Equals(''string-seq'') || name.Equals(''switch'')", span="82-82"];
m5_39 [cluster="lambda expression", file="TokenizerTests.cs", label="Exit lambda expression", span="82-82"];
m5_40 [cluster="string.Equals(string)", file="TokenizerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m5_14 [cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>, System.Func<string, CSharpx.Maybe<char>>)", span="57-57"];
m5_6 [cluster="CommandLine.Core.Token.Name(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m5_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenizerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m5_12 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TokenizerTests.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m5_7 [cluster="CommandLine.Core.Token.Value(string)", file="TokenizerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m5_15 [cluster="Unk.ShouldBeEquivalentTo", file="TokenizerTests.cs", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m5_13 [cluster="RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", file="TokenizerTests.cs", label="Entry RailwaySharp.ErrorHandling.Result.Succeed<TSuccess, TMessage>(TSuccess, System.Collections.Generic.IEnumerable<TMessage>)", span="202-202"];
m5_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenizerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m5_41 [file="TokenizerTests.cs", label=specs, span=""];
m5_42 [file="TokenizerTests.cs", label=specs, span=""];
m6_0 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m6_1 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''20'', ''30'', ''40''}) \r\n                }", span="17-20"];
m6_2 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(string), TargetType.Scalar),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<int>), TargetType.Sequence)\r\n                }", span="21-25"];
m6_5 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="39-39"];
m6_3 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", color=red, community=0, file="TokenPartitionerTests.cs", label="0: var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''20''), Token.Value(''30''), Token.Value(''40'') },\r\n#if !PLATFORM_DOTNET\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.InvariantCulture)\r\n#else\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.Ordinal)\r\n#endif\r\n                )", span="28-35"];
m6_4 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="var options = result.Item1", span="38-38"];
m6_6 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence()", span="14-14"];
m6_14 [cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CSharpx.Maybe<CommandLine.Core.TypeDescriptor>>)", span="16-16"];
m6_7 [cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0"];
m6_8 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CSharpx.Maybe<int>, CSharpx.Maybe<int>, char, CSharpx.Maybe<object>, string, string, System.Collections.Generic.IEnumerable<string>, System.Type, CommandLine.Core.TargetType)", span="16-16"];
m6_11 [cluster="CSharpx.Maybe.Just<T>(T)", file="TokenPartitionerTests.cs", label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124"];
m6_16 [cluster="Unk.True", file="TokenPartitionerTests.cs", label="Entry Unk.True", span=""];
m6_15 [cluster="Unk.All", file="TokenPartitionerTests.cs", label="Entry Unk.All", span=""];
m6_43 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="70-70"];
m6_18 [cluster="lambda expression", color=red, community=0, file="TokenPartitionerTests.cs", label="1: TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.InvariantCulture)", span="31-31"];
m6_17 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="31-31"];
m6_22 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="39-39"];
m6_21 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="39-39"];
m6_19 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="31-31"];
m6_23 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="39-39"];
m6_25 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="39-39"];
m6_26 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="39-39"];
m6_27 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="39-39"];
m6_38 [cluster="lambda expression", color=red, community=0, file="TokenPartitionerTests.cs", label="0: TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.InvariantCulture)", span="62-62"];
m6_37 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="62-62"];
m6_41 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="70-70"];
m6_40 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Entry lambda expression", span="70-70"];
m6_39 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="62-62"];
m6_42 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="70-70"];
m6_44 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="70-70"];
m6_45 [cluster="lambda expression", file="TokenPartitionerTests.cs", label="Exit lambda expression", span="70-70"];
m6_28 [cluster="string.Equals(string)", file="TokenPartitionerTests.cs", label="Entry string.Equals(string)", span="0-0"];
m6_20 [cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11"];
m6_12 [cluster="CommandLine.Core.Token.Name(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Name(string)", span="19-19"];
m6_9 [cluster="CSharpx.Maybe.Nothing<T>()", file="TokenPartitionerTests.cs", label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116"];
m6_29 [cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs", label="Entry Unk.SequenceEqual", span=""];
m6_13 [cluster="CommandLine.Core.Token.Value(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.Core.Token.Value(string)", span="24-24"];
m6_30 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="45-45"];
m6_31 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="48-51"];
m6_32 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(string), TargetType.Scalar),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<int>), TargetType.Sequence)\r\n                }", span="52-56"];
m6_35 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Assert.True(expectedSequence.All(a => options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="70-70"];
m6_33 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=red, community=0, file="TokenPartitionerTests.cs", label="0: var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n#if !PLATFORM_DOTNET\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.InvariantCulture)\r\n#else\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.Ordinal)\r\n#endif\r\n                )", span="59-66"];
m6_34 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="var options = result.Item1", span="69-69"];
m6_36 [cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs", label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="45-45"];
m6_10 [cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
m6_46 [file="TokenPartitionerTests.cs", label=specs, span=""];
m6_47 [file="TokenPartitionerTests.cs", label=options, span=""];
m6_48 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m6_49 [file="TokenPartitionerTests.cs", label=specs, span=""];
m6_50 [file="TokenPartitionerTests.cs", label=options, span=""];
m6_51 [file="TokenPartitionerTests.cs", label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span=""];
m7_6 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="Entry CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m7_7 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="text = null", span="79-79"];
m7_8 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="var method = pair.Left", span="81-81"];
m7_11 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="text = (string)method.Invoke(target, null)", span="85-85"];
m7_9 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="!CheckMethodSignature(method)", span="82-82"];
m7_10 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="throw new MemberAccessException();", span="83-83"];
m7_12 [cluster="CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", file="TypeConverter.cs", label="Exit CommandLine.HelpOptionAttribute.InvokeMethod(object, CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>, out string)", span="76-76"];
m7_13 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="TypeConverter.cs", label="Entry CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m7_16 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="TypeConverter.cs", label="return value.ReturnType == typeof(string) && value.GetParameters().Length == 0;", span="90-90"];
m7_17 [cluster="CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", file="TypeConverter.cs", label="Exit CommandLine.HelpOptionAttribute.CheckMethodSignature(System.Reflection.MethodInfo)", span="88-88"];
m7_15 [cluster="System.Reflection.MethodBase.Invoke(object, object[])", file="TypeConverter.cs", label="Entry System.Reflection.MethodBase.Invoke(object, object[])", span="0-0"];
m7_0 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="TypeConverter.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m7_1 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute()", file="TypeConverter.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute()", span="48-48"];
m7_2 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="TypeConverter.cs", label="Entry CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m7_3 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="TypeConverter.cs", label="base.ShortName = shortName", span="61-61"];
m7_4 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="TypeConverter.cs", label="base.LongName = longName", span="62-62"];
m7_5 [cluster="CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", file="TypeConverter.cs", label="Exit CommandLine.HelpOptionAttribute.HelpOptionAttribute(string, string)", span="59-59"];
m7_14 [cluster="System.MemberAccessException.MemberAccessException()", file="TypeConverter.cs", label="Entry System.MemberAccessException.MemberAccessException()", span="0-0"];
m7_18 [cluster="System.Reflection.MethodBase.GetParameters()", file="TypeConverter.cs", label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0"];
m7_19 [file="TypeConverter.cs", label="CommandLine.HelpOptionAttribute", span=""];
n475 -> n17  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n18  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n20  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n21  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n136  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n140  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n143  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n148  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n144  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n151  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n155  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n152  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n159  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n164  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n160  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n168  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n172  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n169  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n176  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n184  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n191  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n198  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n266  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n299  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n323  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n328  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n329  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n331  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n336  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n332  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n339  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n341  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n343  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n344  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n346  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n347  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n382  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n386  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n348  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n350  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n361  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n364  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n367  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n371  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n373  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n374  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n393  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n397  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n403  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n414  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n415  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n417  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n421  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n435  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n475 -> n440  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n476 -> n63  [color=darkseagreen4, key=1, label=auto, style=dashed];
n476 -> n67  [color=darkseagreen4, key=1, label=auto, style=dashed];
n476 -> n70  [color=darkseagreen4, key=1, label=auto, style=dashed];
n477 -> n100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n477 -> n113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n478 -> n107  [color=darkseagreen4, key=1, label=pr, style=dashed];
n479 -> n261  [color=darkseagreen4, key=1, label=s, style=dashed];
n479 -> n262  [color=darkseagreen4, key=1, label=s, style=dashed];
n479 -> n263  [color=darkseagreen4, key=1, label=s, style=dashed];
n480 -> n336  [color=darkseagreen4, key=1, label=string, style=dashed];
n481 -> n336  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n482 -> n336  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n483 -> n382  [color=darkseagreen4, key=1, label=int, style=dashed];
n483 -> n386  [color=darkseagreen4, key=1, label=int, style=dashed];
n484 -> n382  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n484 -> n386  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n485 -> n390  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n486 -> n397  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n486 -> n403  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n487 -> n408  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n487 -> n412  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [color=blue, key=0, style=bold];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [color=blue, key=0, style=bold];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [color=blue, key=0, style=bold];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [color=blue, key=0, style=bold];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [color=blue, key=0, style=bold];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n15  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n19  [color=darkseagreen4, key=1, label="CommandLine.Text.SentenceBuilder", style=dashed];
n10 -> n20  [color=darkseagreen4, key=1, label=string, style=dashed];
n10 -> n21  [color=darkseagreen4, key=1, label=string, style=dashed];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid];
n15 -> n16  [key=0, style=solid];
n15 -> n17  [key=0, style=solid];
n19 -> n20  [key=0, style=solid];
n20 -> n21  [key=0, style=solid];
n21 -> n22  [key=0, style=solid];
n12 -> n22  [key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n14 -> n22  [key=0, style=solid];
n14 -> n23  [key=2, style=dotted];
n16 -> n22  [key=0, style=solid];
n16 -> n23  [key=2, style=dotted];
n17 -> n18  [key=0, style=solid];
n17 -> n24  [key=2, style=dotted];
n18 -> n19  [key=0, style=solid];
n18 -> n24  [key=2, style=dotted];
n22 -> n10  [color=blue, key=0, style=bold];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n29  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n31  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>", style=dashed];
n25 -> n34  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n41  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n43  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n25 -> n44  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n26 -> n27  [key=0, style=solid];
n26 -> n0  [key=2, style=dotted];
n26 -> n31  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n32  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n63  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n36  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n38  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n39  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n67  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n40  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n70  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n42  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n43  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n44  [color=darkseagreen4, key=1, label=auto, style=dashed];
n26 -> n45  [color=darkseagreen4, key=1, label=auto, style=dashed];
n28 -> n29  [key=0, style=solid];
n28 -> n32  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n41  [color=darkseagreen4, key=1, label=errors, style=dashed];
n31 -> n32  [key=0, style=solid];
n31 -> n50  [key=2, style=dotted];
n31 -> n31  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n63  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n36  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n38  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n39  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n67  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n40  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n70  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n42  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n43  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n44  [color=darkseagreen4, key=1, label=auto, style=dashed];
n31 -> n45  [color=darkseagreen4, key=1, label=auto, style=dashed];
n34 -> n35  [key=0, style=solid];
n34 -> n53  [key=2, style=dotted];
n34 -> n54  [key=2, style=dotted];
n34 -> n40  [color=darkseagreen4, key=1, label=usageLines, style=dashed];
n41 -> n42  [key=0, style=solid];
n41 -> n44  [key=0, style=solid];
n41 -> n49  [key=2, style=dotted];
n41 -> n58  [key=2, style=dotted];
n41 -> n73  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n43 -> n45  [key=0, style=solid];
n43 -> n59  [key=2, style=dotted];
n43 -> n60  [key=2, style=dotted];
n44 -> n45  [key=0, style=solid];
n44 -> n61  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n47  [key=2, style=dotted];
n27 -> n41  [color=darkseagreen4, key=1, label=errors, style=dashed];
n32 -> n33  [key=0, style=solid];
n32 -> n51  [key=2, style=dotted];
n32 -> n52  [key=2, style=dotted];
n32 -> n62  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n63 -> n64  [key=0, style=solid];
n63 -> n65  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n56  [key=2, style=dotted];
n36 -> n38  [color=darkseagreen4, key=1, label=heading, style=dashed];
n38 -> n39  [key=0, style=solid];
n38 -> n57  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n39 -> n52  [key=2, style=dotted];
n39 -> n66  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n67 -> n68  [key=0, style=solid];
n67 -> n65  [key=2, style=dotted];
n40 -> n41  [key=0, style=solid];
n40 -> n52  [key=2, style=dotted];
n40 -> n69  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n70 -> n71  [key=0, style=solid];
n70 -> n72  [key=2, style=dotted];
n42 -> n43  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n30 -> n48  [key=2, style=dotted];
n30 -> n49  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n51  [key=2, style=dotted];
n33 -> n35  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
n33 -> n39  [color=darkseagreen4, key=1, label=usageAttr, style=dashed];
n62 -> n63  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n39  [key=0, style=solid];
n35 -> n55  [key=2, style=dotted];
n53 -> n236  [key=0, style=solid];
n53 -> n240  [color=crimson, key=0, style=bold];
n53 -> n247  [color=crimson, key=0, style=bold];
n53 -> n251  [color=crimson, key=0, style=bold];
n53 -> n238  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n53 -> n245  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>", style=dashed];
n53 -> n230  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc", style=bold];
n37 -> n38  [key=0, style=solid];
n37 -> n39  [key=0, style=solid];
n57 -> n136  [key=0, style=solid];
n57 -> n36  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n57 -> n143  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n57 -> n159  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n57 -> n138  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine", style=bold];
n66 -> n67  [key=0, style=solid];
n69 -> n70  [key=0, style=solid];
n73 -> n74  [key=0, style=solid];
n60 -> n180  [key=0, style=solid];
n60 -> n182  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n60 -> n184  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n60 -> n179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
n61 -> n174  [key=0, style=solid];
n61 -> n176  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n61 -> n179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
n46 -> n25  [color=blue, key=0, style=bold];
n64 -> n62  [color=blue, key=0, style=bold];
n68 -> n66  [color=blue, key=0, style=bold];
n71 -> n69  [color=blue, key=0, style=bold];
n72 -> n143  [key=0, style=solid];
n72 -> n40  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines", style=bold];
n72 -> n124  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<string> lines", style=bold];
n74 -> n75  [key=0, style=solid];
n75 -> n73  [color=blue, key=0, style=bold];
n76 -> n77  [key=0, style=solid];
n76 -> n79  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n76 -> n83  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n76 -> n100  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n76 -> n86  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n76 -> n113  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n76 -> n57  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
n76 -> n25  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AutoBuild", style=bold];
n77 -> n78  [key=0, style=solid];
n77 -> n79  [key=0, style=solid];
n79 -> n80  [key=0, style=solid];
n79 -> n82  [color=darkseagreen4, key=1, label=errors, style=dashed];
n79 -> n84  [color=darkseagreen4, key=1, label=errors, style=dashed];
n83 -> n87  [key=0, style=solid];
n83 -> n25  [key=2, style=dotted];
n83 -> n99  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n83 -> n103  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n100 -> n101  [key=0, style=solid];
n100 -> n102  [key=2, style=dotted];
n86 -> n87  [key=0, style=solid];
n86 -> n25  [key=2, style=dotted];
n86 -> n106  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n86 -> n109  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n86 -> n112  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n86 -> n115  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n113 -> n114  [key=0, style=solid];
n113 -> n102  [key=2, style=dotted];
n78 -> n87  [key=0, style=solid];
n78 -> n88  [key=2, style=dotted];
n80 -> n81  [key=0, style=solid];
n80 -> n82  [key=0, style=solid];
n80 -> n58  [key=2, style=dotted];
n80 -> n93  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n82 -> n83  [key=0, style=solid];
n82 -> n84  [key=0, style=solid];
n82 -> n58  [key=2, style=dotted];
n82 -> n96  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n84 -> n85  [key=0, style=solid];
n84 -> n89  [key=2, style=dotted];
n84 -> n90  [key=2, style=dotted];
n84 -> n86  [color=darkseagreen4, key=1, label=err, style=dashed];
n81 -> n87  [key=0, style=solid];
n81 -> n4  [key=2, style=dotted];
n81 -> n57  [key=2, style=dotted];
n93 -> n94  [key=0, style=solid];
n96 -> n97  [key=0, style=solid];
n85 -> n86  [key=0, style=solid];
n85 -> n91  [key=2, style=dotted];
n85 -> n92  [key=2, style=dotted];
n85 -> n47  [key=2, style=dotted];
n85 -> n107  [color=darkseagreen4, key=1, label=pr, style=dashed];
n107 -> n108  [key=0, style=solid];
n107 -> n102  [key=2, style=dotted];
n87 -> n76  [color=blue, key=0, style=bold];
n106 -> n107  [key=0, style=solid];
n109 -> n110  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n115 -> n116  [key=0, style=solid];
n99 -> n100  [key=0, style=solid];
n103 -> n104  [key=0, style=solid];
n94 -> n95  [key=0, style=solid];
n95 -> n93  [color=blue, key=0, style=bold];
n97 -> n98  [key=0, style=solid];
n98 -> n96  [color=blue, key=0, style=bold];
n101 -> n99  [color=blue, key=0, style=bold];
n102 -> n118  [key=0, style=solid];
n102 -> n120  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n102 -> n122  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n102 -> n123  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n102 -> n124  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n102 -> n126  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n102 -> n127  [color=darkseagreen4, key=1, label="CommandLine.Text.HelpText", style=dashed];
n102 -> n76  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
n102 -> n85  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
n102 -> n83  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
n102 -> n86  [color=darkorchid, key=3, label="Parameter variable CommandLine.Text.HelpText current", style=bold];
n102 -> n102  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler", style=bold];
n102 -> n72  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler", style=bold];
n104 -> n105  [key=0, style=solid];
n105 -> n103  [color=blue, key=0, style=bold];
n108 -> n106  [color=blue, key=0, style=bold];
n110 -> n111  [key=0, style=solid];
n111 -> n109  [color=blue, key=0, style=bold];
n114 -> n112  [color=blue, key=0, style=bold];
n116 -> n117  [key=0, style=solid];
n117 -> n115  [color=blue, key=0, style=bold];
n118 -> n119  [key=0, style=solid];
n118 -> n120  [key=0, style=solid];
n120 -> n121  [key=0, style=solid];
n120 -> n122  [key=0, style=solid];
n122 -> n123  [key=0, style=solid];
n122 -> n124  [key=0, style=solid];
n122 -> n48  [key=2, style=dotted];
n122 -> n129  [key=2, style=dotted];
n123 -> n128  [key=0, style=solid];
n124 -> n125  [key=0, style=solid];
n124 -> n130  [key=2, style=dotted];
n124 -> n127  [color=darkseagreen4, key=1, label=errors, style=dashed];
n126 -> n128  [key=0, style=solid];
n127 -> n128  [key=0, style=solid];
n127 -> n56  [key=2, style=dotted];
n127 -> n131  [key=2, style=dotted];
n127 -> n57  [key=2, style=dotted];
n127 -> n72  [key=2, style=dotted];
n119 -> n128  [key=0, style=solid];
n119 -> n23  [key=2, style=dotted];
n121 -> n128  [key=0, style=solid];
n121 -> n23  [key=2, style=dotted];
n125 -> n126  [key=0, style=solid];
n125 -> n127  [key=0, style=solid];
n125 -> n129  [key=2, style=dotted];
n130 -> n204  [key=0, style=solid];
n130 -> n208  [color=crimson, key=0, style=bold];
n130 -> n211  [color=crimson, key=0, style=bold];
n130 -> n216  [color=crimson, key=0, style=bold];
n130 -> n206  [color=darkseagreen4, key=1, label="CommandLine.ParserResult<T>", style=dashed];
n130 -> n210  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Error, string>", style=dashed];
n130 -> n212  [color=darkseagreen4, key=1, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>", style=dashed];
n128 -> n102  [color=blue, key=0, style=bold];
n132 -> n133  [key=0, style=solid];
n132 -> n135  [color=darkorchid, key=3, label="method methodReturn string op_Implicit", style=bold];
n133 -> n134  [key=0, style=solid];
n133 -> n135  [key=2, style=dotted];
n134 -> n132  [color=blue, key=0, style=bold];
n135 -> n265  [key=0, style=solid];
n136 -> n137  [key=0, style=solid];
n136 -> n138  [key=2, style=dotted];
n137 -> n57  [color=blue, key=0, style=bold];
n138 -> n343  [key=0, style=solid];
n138 -> n57  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n139 -> n140  [key=0, style=solid];
n139 -> n142  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine", style=bold];
n139 -> n151  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n139 -> n168  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n140 -> n141  [key=0, style=solid];
n140 -> n142  [key=2, style=dotted];
n141 -> n139  [color=blue, key=0, style=bold];
n142 -> n414  [key=0, style=solid];
n142 -> n139  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n143 -> n144  [key=0, style=solid];
n143 -> n146  [key=2, style=dotted];
n143 -> n147  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n144 -> n145  [key=0, style=solid];
n147 -> n148  [key=0, style=solid];
n145 -> n72  [color=blue, key=0, style=bold];
n148 -> n149  [key=0, style=solid];
n148 -> n57  [key=2, style=dotted];
n149 -> n147  [color=blue, key=0, style=bold];
n150 -> n151  [key=0, style=solid];
n151 -> n152  [key=0, style=solid];
n151 -> n146  [key=2, style=dotted];
n151 -> n154  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n152 -> n153  [key=0, style=solid];
n154 -> n155  [key=0, style=solid];
n153 -> n150  [color=blue, key=0, style=bold];
n155 -> n156  [key=0, style=solid];
n155 -> n139  [key=2, style=dotted];
n156 -> n154  [color=blue, key=0, style=bold];
n157 -> n158  [key=0, style=solid];
n158 -> n159  [key=0, style=solid];
n158 -> n162  [key=2, style=dotted];
n159 -> n160  [key=0, style=solid];
n159 -> n146  [key=2, style=dotted];
n159 -> n163  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n160 -> n161  [key=0, style=solid];
n163 -> n164  [key=0, style=solid];
n161 -> n157  [color=blue, key=0, style=bold];
n164 -> n165  [key=0, style=solid];
n164 -> n57  [key=2, style=dotted];
n165 -> n163  [color=blue, key=0, style=bold];
n166 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n162  [key=2, style=dotted];
n168 -> n169  [key=0, style=solid];
n168 -> n146  [key=2, style=dotted];
n168 -> n171  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n169 -> n170  [key=0, style=solid];
n171 -> n172  [key=0, style=solid];
n170 -> n166  [color=blue, key=0, style=bold];
n172 -> n173  [key=0, style=solid];
n172 -> n139  [key=2, style=dotted];
n173 -> n171  [color=blue, key=0, style=bold];
n174 -> n175  [key=0, style=solid];
n174 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n178  [key=2, style=dotted];
n176 -> n56  [key=2, style=dotted];
n176 -> n179  [key=2, style=dotted];
n175 -> n177  [key=0, style=solid];
n175 -> n23  [key=2, style=dotted];
n177 -> n61  [color=blue, key=0, style=bold];
n178 -> n298  [key=0, style=solid];
n179 -> n328  [key=0, style=solid];
n179 -> n330  [color=darkseagreen4, key=1, label=int, style=dashed];
n179 -> n331  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
n179 -> n336  [color=darkseagreen4, key=1, label=string, style=dashed];
n180 -> n181  [key=0, style=solid];
n180 -> n182  [key=0, style=solid];
n182 -> n183  [key=0, style=solid];
n182 -> n184  [key=0, style=solid];
n184 -> n185  [key=0, style=solid];
n184 -> n187  [key=2, style=dotted];
n184 -> n56  [key=2, style=dotted];
n184 -> n179  [key=2, style=dotted];
n181 -> n185  [key=0, style=solid];
n181 -> n23  [key=2, style=dotted];
n183 -> n185  [key=0, style=solid];
n183 -> n186  [key=2, style=dotted];
n185 -> n60  [color=blue, key=0, style=bold];
n187 -> n323  [key=0, style=solid];
n187 -> n60  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
n187 -> n193  [color=darkorchid, key=3, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types", style=bold];
n188 -> n189  [key=0, style=solid];
n188 -> n191  [color=darkseagreen4, key=1, label=int, style=dashed];
n188 -> n179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddOptions", style=bold];
n189 -> n190  [key=0, style=solid];
n189 -> n191  [key=0, style=solid];
n191 -> n192  [key=0, style=solid];
n191 -> n178  [key=2, style=dotted];
n191 -> n56  [key=2, style=dotted];
n191 -> n179  [key=2, style=dotted];
n190 -> n192  [key=0, style=solid];
n190 -> n23  [key=2, style=dotted];
n192 -> n188  [color=blue, key=0, style=bold];
n193 -> n194  [key=0, style=solid];
n193 -> n196  [color=darkseagreen4, key=1, label="params System.Type[]", style=dashed];
n193 -> n198  [color=darkseagreen4, key=1, label=int, style=dashed];
n193 -> n179  [color=darkorchid, key=3, label="method methodReturn CommandLine.Text.HelpText AddVerbs", style=bold];
n194 -> n195  [key=0, style=solid];
n194 -> n196  [key=0, style=solid];
n196 -> n197  [key=0, style=solid];
n196 -> n198  [key=0, style=solid];
n198 -> n199  [key=0, style=solid];
n198 -> n187  [key=2, style=dotted];
n198 -> n56  [key=2, style=dotted];
n198 -> n179  [key=2, style=dotted];
n195 -> n199  [key=0, style=solid];
n195 -> n23  [key=2, style=dotted];
n197 -> n199  [key=0, style=solid];
n197 -> n186  [key=2, style=dotted];
n199 -> n193  [color=blue, key=0, style=bold];
n200 -> n201  [key=0, style=solid];
n201 -> n202  [key=0, style=solid];
n201 -> n130  [key=2, style=dotted];
n201 -> n203  [key=2, style=dotted];
n202 -> n200  [color=blue, key=0, style=bold];
n204 -> n205  [key=0, style=solid];
n204 -> n206  [key=0, style=solid];
n208 -> n209  [key=0, style=solid];
n211 -> n209  [key=0, style=solid];
n211 -> n223  [key=2, style=dotted];
n216 -> n215  [key=0, style=solid];
n206 -> n207  [key=0, style=solid];
n206 -> n48  [key=2, style=dotted];
n206 -> n209  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
n206 -> n212  [color=darkseagreen4, key=1, label=meaningfulErrors, style=dashed];
n210 -> n211  [key=0, style=solid];
n210 -> n219  [key=2, style=dotted];
n210 -> n220  [key=2, style=dotted];
n210 -> n221  [key=2, style=dotted];
n210 -> n222  [key=2, style=dotted];
n212 -> n213  [key=0, style=solid];
n212 -> n89  [key=2, style=dotted];
n212 -> n50  [key=2, style=dotted];
n212 -> n214  [color=darkseagreen4, key=1, label=mutuallyErrs, style=dashed];
n205 -> n217  [key=0, style=solid];
n205 -> n23  [key=2, style=dotted];
n207 -> n208  [key=0, style=solid];
n207 -> n209  [key=0, style=solid];
n207 -> n129  [key=2, style=dotted];
n209 -> n210  [key=0, style=solid];
n209 -> n212  [key=0, style=solid];
n209 -> n218  [key=2, style=dotted];
n209 -> n224  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n224 -> n225  [key=0, style=solid];
n213 -> n214  [key=0, style=solid];
n213 -> n217  [key=0, style=solid];
n214 -> n215  [key=0, style=solid];
n214 -> n162  [key=2, style=dotted];
n217 -> n130  [color=blue, key=0, style=bold];
n215 -> n216  [key=0, style=solid];
n215 -> n217  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n226 -> n224  [color=blue, key=0, style=bold];
n227 -> n228  [key=0, style=solid];
n227 -> n230  [color=darkorchid, key=3, label="method methodReturn string RenderUsageText", style=bold];
n228 -> n229  [key=0, style=solid];
n228 -> n230  [key=2, style=dotted];
n228 -> n231  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n229 -> n227  [color=blue, key=0, style=bold];
n230 -> n234  [key=0, style=solid];
n230 -> n227  [color=darkorchid, key=3, label="Parameter variable CommandLine.ParserResult<T> parserResult", style=bold];
n230 -> n228  [color=darkorchid, key=3, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc", style=bold];
n231 -> n232  [key=0, style=solid];
n232 -> n233  [key=0, style=solid];
n233 -> n231  [color=blue, key=0, style=bold];
n234 -> n235  [key=0, style=solid];
n234 -> n53  [key=2, style=dotted];
n234 -> n203  [key=2, style=dotted];
n235 -> n230  [color=blue, key=0, style=bold];
n236 -> n237  [key=0, style=solid];
n236 -> n238  [key=0, style=solid];
n240 -> n241  [key=0, style=solid];
n247 -> n248  [key=0, style=solid];
n247 -> n223  [key=2, style=dotted];
n251 -> n249  [key=0, style=solid];
n251 -> n223  [key=2, style=dotted];
n238 -> n239  [key=0, style=solid];
n238 -> n253  [key=2, style=dotted];
n238 -> n241  [color=darkseagreen4, key=1, label=usage, style=dashed];
n245 -> n246  [key=0, style=solid];
n245 -> n50  [key=2, style=dotted];
n245 -> n248  [color=darkseagreen4, key=1, label=example, style=dashed];
n245 -> n250  [color=darkseagreen4, key=1, label=example, style=dashed];
n237 -> n252  [key=0, style=solid];
n237 -> n23  [key=2, style=dotted];
n239 -> n240  [key=0, style=solid];
n239 -> n241  [key=0, style=solid];
n239 -> n254  [key=2, style=dotted];
n253 -> n311  [color=red, key=0, style=solid];
n241 -> n242  [key=0, style=solid];
n241 -> n255  [key=2, style=dotted];
n241 -> n243  [color=darkseagreen4, key=1, label=usageTuple, style=dashed];
n242 -> n243  [key=0, style=solid];
n242 -> n244  [color=darkseagreen4, key=1, label=examples, style=dashed];
n243 -> n244  [key=0, style=solid];
n243 -> n256  [key=2, style=dotted];
n243 -> n250  [color=darkseagreen4, key=1, label=appAlias, style=dashed];
n244 -> n245  [key=0, style=solid];
n244 -> n252  [key=0, style=solid];
n256 -> n10  [color=darkorchid, key=3, label="Field variable string copyright", style=bold];
n250 -> n251  [key=0, style=solid];
n250 -> n219  [key=2, style=dotted];
n250 -> n220  [key=2, style=dotted];
n250 -> n222  [key=2, style=dotted];
n250 -> n257  [key=2, style=dotted];
n250 -> n259  [key=2, style=dotted];
n250 -> n260  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n252 -> n53  [color=blue, key=0, style=bold];
n246 -> n247  [key=0, style=solid];
n246 -> n219  [key=2, style=dotted];
n246 -> n257  [key=2, style=dotted];
n248 -> n249  [key=0, style=solid];
n248 -> n258  [key=2, style=dotted];
n249 -> n250  [key=0, style=solid];
n249 -> n244  [key=0, style=solid];
n249 -> n261  [color=darkseagreen4, key=1, label=s, style=dashed];
n249 -> n262  [color=darkseagreen4, key=1, label=s, style=dashed];
n249 -> n263  [color=darkseagreen4, key=1, label=s, style=dashed];
n261 -> n262  [key=0, style=solid];
n262 -> n263  [key=0, style=solid];
n263 -> n264  [key=0, style=solid];
n260 -> n261  [key=0, style=solid];
n260 -> n262  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
n260 -> n263  [color=darkseagreen4, key=1, label="CommandLine.UnParserSettings", style=dashed];
n264 -> n260  [color=blue, key=0, style=bold];
n265 -> n266  [key=0, style=solid];
n265 -> n265  [color=darkorchid, key=3, label="Local variable int ExtraLength", style=bold];
n266 -> n267  [key=0, style=solid];
n266 -> n24  [key=2, style=dotted];
n266 -> n268  [key=2, style=dotted];
n266 -> n269  [key=2, style=dotted];
n266 -> n222  [key=2, style=dotted];
n266 -> n270  [key=2, style=dotted];
n266 -> n271  [key=2, style=dotted];
n266 -> n223  [key=2, style=dotted];
n266 -> n272  [key=2, style=dotted];
n267 -> n135  [color=blue, key=0, style=bold];
n273 -> n274  [key=0, style=solid];
n273 -> n276  [color=darkseagreen4, key=1, label=string, style=dashed];
n273 -> n279  [color=darkseagreen4, key=1, label=int, style=dashed];
n273 -> n280  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n273 -> n282  [color=darkseagreen4, key=1, label=int, style=dashed];
n273 -> n283  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n273 -> n285  [color=darkseagreen4, key=1, label=int, style=dashed];
n273 -> n286  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n273 -> n287  [color=darkseagreen4, key=1, label=int, style=dashed];
n273 -> n289  [color=darkseagreen4, key=1, label=string, style=dashed];
n273 -> n290  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n273 -> n291  [color=darkseagreen4, key=1, label=int, style=dashed];
n273 -> n292  [color=darkseagreen4, key=1, label="System.Text.StringBuilder", style=dashed];
n273 -> n142  [color=darkorchid, key=3, label="Parameter variable string value", style=bold];
n273 -> n138  [color=darkorchid, key=3, label="Parameter variable int maximumLength", style=bold];
n274 -> n275  [key=0, style=solid];
n274 -> n271  [key=2, style=dotted];
n276 -> n277  [key=0, style=solid];
n276 -> n294  [key=2, style=dotted];
n276 -> n278  [color=darkseagreen4, key=1, label=words, style=dashed];
n276 -> n279  [color=darkseagreen4, key=1, label=words, style=dashed];
n276 -> n280  [color=darkseagreen4, key=1, label=words, style=dashed];
n276 -> n281  [color=darkseagreen4, key=1, label=words, style=dashed];
n276 -> n282  [color=darkseagreen4, key=1, label=words, style=dashed];
n276 -> n285  [color=darkseagreen4, key=1, label=words, style=dashed];
n276 -> n286  [color=darkseagreen4, key=1, label=words, style=dashed];
n279 -> n280  [key=0, style=solid];
n279 -> n285  [key=0, style=solid];
n280 -> n281  [key=0, style=solid];
n280 -> n222  [key=2, style=dotted];
n282 -> n283  [key=0, style=solid];
n282 -> n288  [key=0, style=solid];
n283 -> n284  [key=0, style=solid];
n283 -> n222  [key=2, style=dotted];
n285 -> n286  [key=0, style=solid];
n285 -> n289  [key=0, style=solid];
n286 -> n287  [key=0, style=solid];
n286 -> n295  [key=2, style=dotted];
n286 -> n222  [key=2, style=dotted];
n287 -> n289  [key=0, style=solid];
n289 -> n290  [key=0, style=solid];
n289 -> n296  [key=2, style=dotted];
n289 -> n297  [key=2, style=dotted];
n289 -> n289  [color=darkseagreen4, key=1, label=string, style=dashed];
n289 -> n291  [color=darkseagreen4, key=1, label=string, style=dashed];
n289 -> n292  [color=darkseagreen4, key=1, label=string, style=dashed];
n290 -> n291  [key=0, style=solid];
n290 -> n271  [key=2, style=dotted];
n291 -> n274  [key=0, style=solid];
n291 -> n292  [key=0, style=solid];
n292 -> n293  [key=0, style=solid];
n292 -> n222  [key=2, style=dotted];
n275 -> n276  [key=0, style=solid];
n275 -> n279  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n275 -> n281  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n275 -> n285  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n275 -> n289  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n275 -> n275  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
n275 -> n273  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
n281 -> n282  [key=0, style=solid];
n281 -> n281  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n281 -> n284  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n281 -> n289  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n277 -> n278  [key=0, style=solid];
n277 -> n279  [color=darkseagreen4, key=1, label=i, style=dashed];
n277 -> n280  [color=darkseagreen4, key=1, label=i, style=dashed];
n277 -> n281  [color=darkseagreen4, key=1, label=i, style=dashed];
n277 -> n282  [color=darkseagreen4, key=1, label=i, style=dashed];
n277 -> n285  [color=darkseagreen4, key=1, label=i, style=dashed];
n277 -> n286  [color=darkseagreen4, key=1, label=i, style=dashed];
n277 -> n288  [color=darkseagreen4, key=1, label=i, style=dashed];
n277 -> n275  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n278 -> n279  [key=0, style=solid];
n278 -> n289  [key=0, style=solid];
n288 -> n278  [key=0, style=solid];
n288 -> n288  [color=darkseagreen4, key=1, label=i, style=dashed];
n284 -> n288  [key=0, style=solid];
n284 -> n284  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n284 -> n289  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n293 -> n273  [color=blue, key=0, style=bold];
n298 -> n299  [key=0, style=solid];
n298 -> n303  [key=2, style=dotted];
n298 -> n300  [color=darkseagreen4, key=1, label=specs, style=dashed];
n299 -> n300  [key=0, style=solid];
n299 -> n89  [key=2, style=dotted];
n299 -> n304  [key=2, style=dotted];
n299 -> n305  [key=2, style=dotted];
n299 -> n306  [key=2, style=dotted];
n299 -> n301  [color=darkseagreen4, key=1, label=optionSpecs, style=dashed];
n300 -> n301  [key=0, style=solid];
n300 -> n89  [key=2, style=dotted];
n300 -> n307  [key=2, style=dotted];
n300 -> n308  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n304 -> n339  [key=0, style=solid];
n305 -> n341  [key=0, style=solid];
n301 -> n302  [key=0, style=solid];
n301 -> n47  [key=2, style=dotted];
n301 -> n306  [key=2, style=dotted];
n308 -> n309  [key=0, style=solid];
n302 -> n178  [color=blue, key=0, style=bold];
n309 -> n310  [key=0, style=solid];
n310 -> n308  [color=blue, key=0, style=bold];
n311 -> n312  [color=red, key=0, style=solid];
n311 -> n313  [color=red, key=2, style=dotted];
n311 -> n314  [color=red, key=2, style=dotted];
n311 -> n315  [color=red, key=1, label="lambda expression", style=dashed];
n312 -> n253  [color=blue, key=0, style=bold];
n315 -> n316  [key=0, style=solid];
n315 -> n317  [color=darkseagreen4, key=1, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>", style=dashed];
n316 -> n317  [key=0, style=solid];
n316 -> n318  [color=red, key=1, label=prop, style=dashed];
n317 -> n318  [color=red, key=0, style=solid];
n317 -> n319  [color=darkseagreen4, key=1, label=attr, style=dashed];
n318 -> n319  [color=red, key=0, style=solid];
n318 -> n321  [color=red, key=2, style=dotted];
n319 -> n320  [key=0, style=solid];
n319 -> n322  [key=2, style=dotted];
n320 -> n315  [color=blue, key=0, style=bold];
n323 -> n324  [key=0, style=solid];
n323 -> n325  [key=2, style=dotted];
n323 -> n326  [key=2, style=dotted];
n323 -> n304  [key=2, style=dotted];
n323 -> n305  [key=2, style=dotted];
n323 -> n327  [key=2, style=dotted];
n323 -> n323  [color=darkseagreen4, key=1, label=verbTuple, style=dashed];
n324 -> n187  [color=blue, key=0, style=bold];
n328 -> n329  [key=0, style=solid];
n328 -> n334  [key=2, style=dotted];
n328 -> n330  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n328 -> n331  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n328 -> n336  [color=darkseagreen4, key=1, label=maxLength, style=dashed];
n330 -> n331  [key=0, style=solid];
n330 -> n336  [color=darkseagreen4, key=1, label=remainingSpace, style=dashed];
n331 -> n332  [key=0, style=solid];
n331 -> n146  [key=2, style=dotted];
n331 -> n335  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n336 -> n337  [key=0, style=solid];
n336 -> n338  [key=2, style=dotted];
n329 -> n330  [key=0, style=solid];
n329 -> n24  [key=2, style=dotted];
n334 -> n417  [key=0, style=solid];
n332 -> n333  [key=0, style=solid];
n335 -> n336  [key=0, style=solid];
n333 -> n179  [color=blue, key=0, style=bold];
n337 -> n335  [color=blue, key=0, style=bold];
n338 -> n346  [key=0, style=solid];
n338 -> n347  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n382  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n386  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n348  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n349  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n338 -> n350  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n338 -> n351  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n338 -> n352  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n338 -> n353  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
n338 -> n354  [color=darkseagreen4, key=1, label=string, style=dashed];
n338 -> n360  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n363  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n366  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n367  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n368  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n371  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n372  [color=darkseagreen4, key=1, label=int, style=dashed];
n338 -> n328  [color=darkorchid, key=3, label="Parameter variable int maxLength", style=bold];
n338 -> n331  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.Specification specification", style=bold];
n338 -> n330  [color=darkorchid, key=3, label="Parameter variable int widthOfHelpText", style=bold];
n339 -> n340  [key=0, style=solid];
n339 -> n50  [key=2, style=dotted];
n339 -> n326  [key=2, style=dotted];
n340 -> n304  [color=blue, key=0, style=bold];
n341 -> n342  [key=0, style=solid];
n341 -> n50  [key=2, style=dotted];
n341 -> n326  [key=2, style=dotted];
n342 -> n305  [color=blue, key=0, style=bold];
n343 -> n344  [key=0, style=solid];
n343 -> n273  [key=2, style=dotted];
n344 -> n345  [key=0, style=solid];
n345 -> n138  [color=blue, key=0, style=bold];
n346 -> n347  [key=0, style=solid];
n346 -> n222  [key=2, style=dotted];
n347 -> n348  [key=0, style=solid];
n347 -> n24  [key=2, style=dotted];
n347 -> n376  [key=2, style=dotted];
n347 -> n381  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n347 -> n385  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n382 -> n383  [key=0, style=solid];
n382 -> n384  [key=2, style=dotted];
n382 -> n222  [key=2, style=dotted];
n386 -> n387  [key=0, style=solid];
n386 -> n388  [key=2, style=dotted];
n386 -> n222  [key=2, style=dotted];
n348 -> n349  [key=0, style=solid];
n348 -> n223  [key=2, style=dotted];
n348 -> n377  [key=2, style=dotted];
n348 -> n222  [key=2, style=dotted];
n349 -> n350  [key=0, style=solid];
n349 -> n351  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n349 -> n352  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n350 -> n351  [key=0, style=solid];
n350 -> n352  [key=0, style=solid];
n350 -> n49  [key=2, style=dotted];
n351 -> n352  [key=0, style=solid];
n351 -> n203  [key=2, style=dotted];
n351 -> n351  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n352 -> n353  [key=0, style=solid];
n352 -> n52  [key=2, style=dotted];
n352 -> n389  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n352 -> n390  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n352 -> n354  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n352 -> n355  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n352 -> n357  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n352 -> n370  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n352 -> n373  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n353 -> n354  [key=0, style=solid];
n353 -> n355  [key=0, style=solid];
n354 -> n355  [key=0, style=solid];
n354 -> n378  [key=2, style=dotted];
n354 -> n354  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n354 -> n357  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n354 -> n370  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n354 -> n373  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n360 -> n361  [key=0, style=solid];
n360 -> n366  [key=0, style=solid];
n363 -> n364  [key=0, style=solid];
n363 -> n369  [key=0, style=solid];
n366 -> n367  [key=0, style=solid];
n366 -> n370  [key=0, style=solid];
n367 -> n368  [key=0, style=solid];
n367 -> n295  [key=2, style=dotted];
n367 -> n222  [key=2, style=dotted];
n368 -> n370  [key=0, style=solid];
n371 -> n372  [key=0, style=solid];
n371 -> n380  [key=2, style=dotted];
n371 -> n271  [key=2, style=dotted];
n372 -> n355  [key=0, style=solid];
n372 -> n373  [key=0, style=solid];
n381 -> n382  [key=0, style=solid];
n385 -> n386  [key=0, style=solid];
n389 -> n390  [key=0, style=solid];
n390 -> n391  [key=0, style=solid];
n390 -> n392  [key=2, style=dotted];
n390 -> n378  [key=2, style=dotted];
n390 -> n390  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n355 -> n356  [key=0, style=solid];
n355 -> n373  [key=0, style=solid];
n355 -> n270  [key=2, style=dotted];
n357 -> n358  [key=0, style=solid];
n357 -> n294  [key=2, style=dotted];
n357 -> n359  [color=darkseagreen4, key=1, label=words, style=dashed];
n357 -> n360  [color=darkseagreen4, key=1, label=words, style=dashed];
n357 -> n361  [color=darkseagreen4, key=1, label=words, style=dashed];
n357 -> n362  [color=darkseagreen4, key=1, label=words, style=dashed];
n357 -> n363  [color=darkseagreen4, key=1, label=words, style=dashed];
n357 -> n366  [color=darkseagreen4, key=1, label=words, style=dashed];
n357 -> n367  [color=darkseagreen4, key=1, label=words, style=dashed];
n370 -> n371  [key=0, style=solid];
n370 -> n296  [key=2, style=dotted];
n370 -> n297  [key=2, style=dotted];
n370 -> n379  [key=2, style=dotted];
n370 -> n370  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n370 -> n372  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n370 -> n373  [color=darkseagreen4, key=1, label=optionHelpText, style=dashed];
n373 -> n374  [key=0, style=solid];
n373 -> n222  [key=2, style=dotted];
n373 -> n271  [key=2, style=dotted];
n356 -> n357  [key=0, style=solid];
n356 -> n360  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n356 -> n362  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n356 -> n366  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n356 -> n370  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n356 -> n275  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
n356 -> n338  [color=darkorchid, key=3, label="Local variable int wordBuffer", style=bold];
n362 -> n363  [key=0, style=solid];
n362 -> n362  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n362 -> n365  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n362 -> n370  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n358 -> n359  [key=0, style=solid];
n358 -> n360  [color=darkseagreen4, key=1, label=i, style=dashed];
n358 -> n361  [color=darkseagreen4, key=1, label=i, style=dashed];
n358 -> n362  [color=darkseagreen4, key=1, label=i, style=dashed];
n358 -> n363  [color=darkseagreen4, key=1, label=i, style=dashed];
n358 -> n366  [color=darkseagreen4, key=1, label=i, style=dashed];
n358 -> n367  [color=darkseagreen4, key=1, label=i, style=dashed];
n358 -> n369  [color=darkseagreen4, key=1, label=i, style=dashed];
n358 -> n275  [color=darkorchid, key=3, label="Local variable int i", style=bold];
n359 -> n360  [key=0, style=solid];
n359 -> n370  [key=0, style=solid];
n361 -> n362  [key=0, style=solid];
n361 -> n222  [key=2, style=dotted];
n369 -> n359  [key=0, style=solid];
n369 -> n369  [color=darkseagreen4, key=1, label=i, style=dashed];
n365 -> n369  [key=0, style=solid];
n365 -> n365  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n365 -> n370  [color=darkseagreen4, key=1, label=wordBuffer, style=dashed];
n364 -> n365  [key=0, style=solid];
n364 -> n222  [key=2, style=dotted];
n374 -> n375  [key=0, style=solid];
n375 -> n338  [color=blue, key=0, style=bold];
n383 -> n381  [color=blue, key=0, style=bold];
n384 -> n393  [key=0, style=solid];
n384 -> n397  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n384 -> n403  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n384 -> n338  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.OptionSpecification specification", style=bold];
n387 -> n385  [color=blue, key=0, style=bold];
n388 -> n405  [key=0, style=solid];
n388 -> n408  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n388 -> n412  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n388 -> n338  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.ValueSpecification specification", style=bold];
n391 -> n389  [color=blue, key=0, style=bold];
n392 -> n459  [key=0, style=solid];
n392 -> n460  [color=darkseagreen4, key=1, label=T, style=dashed];
n392 -> n461  [color=darkseagreen4, key=1, label=T, style=dashed];
n392 -> n462  [color=darkseagreen4, key=1, label=T, style=dashed];
n392 -> n463  [color=darkseagreen4, key=1, label=T, style=dashed];
n392 -> n465  [color=darkseagreen4, key=1, label=T, style=dashed];
n392 -> n352  [color=darkorchid, key=3, label="Parameter variable T value", style=bold];
n393 -> n394  [key=0, style=solid];
n393 -> n24  [key=2, style=dotted];
n393 -> n395  [key=2, style=dotted];
n393 -> n223  [key=2, style=dotted];
n393 -> n396  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n393 -> n402  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n397 -> n398  [key=0, style=solid];
n397 -> n399  [key=2, style=dotted];
n397 -> n400  [key=2, style=dotted];
n397 -> n401  [key=2, style=dotted];
n397 -> n271  [key=2, style=dotted];
n403 -> n404  [key=0, style=solid];
n403 -> n271  [key=2, style=dotted];
n403 -> n400  [key=2, style=dotted];
n403 -> n401  [key=2, style=dotted];
n394 -> n384  [color=blue, key=0, style=bold];
n396 -> n397  [key=0, style=solid];
n402 -> n403  [key=0, style=solid];
n398 -> n396  [color=blue, key=0, style=bold];
n404 -> n402  [color=blue, key=0, style=bold];
n405 -> n406  [key=0, style=solid];
n405 -> n24  [key=2, style=dotted];
n405 -> n376  [key=2, style=dotted];
n405 -> n401  [key=2, style=dotted];
n405 -> n223  [key=2, style=dotted];
n405 -> n407  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n405 -> n411  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n408 -> n409  [key=0, style=solid];
n408 -> n410  [key=2, style=dotted];
n412 -> n413  [key=0, style=solid];
n412 -> n400  [key=2, style=dotted];
n406 -> n388  [color=blue, key=0, style=bold];
n407 -> n408  [key=0, style=solid];
n411 -> n412  [key=0, style=solid];
n409 -> n407  [color=blue, key=0, style=bold];
n413 -> n411  [color=blue, key=0, style=bold];
n414 -> n415  [key=0, style=solid];
n414 -> n273  [key=2, style=dotted];
n415 -> n416  [key=0, style=solid];
n416 -> n142  [color=blue, key=0, style=bold];
n417 -> n418  [key=0, style=solid];
n417 -> n419  [key=2, style=dotted];
n417 -> n420  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
n418 -> n334  [color=blue, key=0, style=bold];
n420 -> n421  [key=0, style=solid];
n420 -> n422  [color=darkseagreen4, key=1, label=int, style=dashed];
n421 -> n422  [key=0, style=solid];
n421 -> n424  [key=2, style=dotted];
n421 -> n425  [key=2, style=dotted];
n422 -> n423  [key=0, style=solid];
n422 -> n426  [key=2, style=dotted];
n424 -> n427  [key=0, style=solid];
n424 -> n428  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n424 -> n429  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n424 -> n431  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n424 -> n432  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n424 -> n439  [color=darkseagreen4, key=1, label="CommandLine.Core.OptionSpecification", style=dashed];
n424 -> n417  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.OptionSpecification spec", style=bold];
n425 -> n447  [key=0, style=solid];
n425 -> n448  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n425 -> n450  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n425 -> n451  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n425 -> n453  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n425 -> n454  [color=darkseagreen4, key=1, label="CommandLine.Core.ValueSpecification", style=dashed];
n425 -> n417  [color=darkorchid, key=3, label="Parameter variable CommandLine.Core.ValueSpecification spec", style=bold];
n423 -> n420  [color=blue, key=0, style=bold];
n427 -> n428  [key=0, style=solid];
n427 -> n434  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n427 -> n439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n427 -> n444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n427 -> n445  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n427 -> n275  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
n427 -> n430  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
n428 -> n429  [key=0, style=solid];
n428 -> n433  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n428 -> n443  [color=darkseagreen4, key=1, label=hasShort, style=dashed];
n429 -> n430  [key=0, style=solid];
n429 -> n438  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n429 -> n443  [color=darkseagreen4, key=1, label=hasLong, style=dashed];
n431 -> n432  [key=0, style=solid];
n431 -> n433  [key=0, style=solid];
n432 -> n433  [key=0, style=solid];
n432 -> n437  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n432 -> n442  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n439 -> n440  [key=0, style=solid];
n439 -> n439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n439 -> n441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n439 -> n442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n434 -> n435  [key=0, style=solid];
n434 -> n434  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n434 -> n436  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n434 -> n437  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n444 -> n445  [key=0, style=solid];
n444 -> n444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n445 -> n446  [key=0, style=solid];
n433 -> n434  [key=0, style=solid];
n433 -> n438  [key=0, style=solid];
n443 -> n444  [key=0, style=solid];
n443 -> n445  [key=0, style=solid];
n430 -> n431  [key=0, style=solid];
n430 -> n437  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n430 -> n442  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n430 -> n275  [color=darkorchid, key=3, label="Local variable int metaLength", style=bold];
n438 -> n439  [key=0, style=solid];
n438 -> n443  [key=0, style=solid];
n437 -> n438  [key=0, style=solid];
n437 -> n437  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n437 -> n439  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n437 -> n444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n437 -> n445  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n442 -> n443  [key=0, style=solid];
n442 -> n442  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n442 -> n444  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n442 -> n445  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n435 -> n436  [key=0, style=solid];
n435 -> n437  [key=0, style=solid];
n436 -> n437  [key=0, style=solid];
n436 -> n436  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n440 -> n441  [key=0, style=solid];
n440 -> n442  [key=0, style=solid];
n441 -> n442  [key=0, style=solid];
n441 -> n441  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n446 -> n424  [color=blue, key=0, style=bold];
n447 -> n448  [key=0, style=solid];
n447 -> n453  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n447 -> n454  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n447 -> n275  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
n447 -> n449  [color=darkorchid, key=3, label="Local variable int specLength", style=bold];
n448 -> n449  [key=0, style=solid];
n448 -> n452  [color=darkseagreen4, key=1, label=hasMeta, style=dashed];
n450 -> n451  [key=0, style=solid];
n450 -> n452  [key=0, style=solid];
n451 -> n452  [key=0, style=solid];
n451 -> n455  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n453 -> n455  [key=0, style=solid];
n453 -> n458  [key=2, style=dotted];
n453 -> n453  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n454 -> n455  [key=0, style=solid];
n454 -> n458  [key=2, style=dotted];
n454 -> n454  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n449 -> n450  [key=0, style=solid];
n449 -> n455  [color=darkseagreen4, key=1, label=metaLength, style=dashed];
n449 -> n275  [color=darkorchid, key=3, label="Local variable int metaLength", style=bold];
n452 -> n453  [key=0, style=solid];
n452 -> n454  [key=0, style=solid];
n455 -> n456  [key=0, style=solid];
n455 -> n455  [color=darkseagreen4, key=1, label=specLength, style=dashed];
n456 -> n457  [key=0, style=solid];
n457 -> n425  [color=blue, key=0, style=bold];
n459 -> n460  [key=0, style=solid];
n459 -> n461  [key=0, style=solid];
n460 -> n470  [key=0, style=solid];
n460 -> n471  [key=2, style=dotted];
n460 -> n472  [key=2, style=dotted];
n461 -> n462  [key=0, style=solid];
n461 -> n463  [key=0, style=solid];
n462 -> n470  [key=0, style=solid];
n462 -> n471  [key=2, style=dotted];
n463 -> n464  [key=0, style=solid];
n463 -> n467  [color=darkseagreen4, key=1, label=asEnumerable, style=dashed];
n465 -> n470  [key=0, style=solid];
n465 -> n471  [key=2, style=dotted];
n464 -> n465  [key=0, style=solid];
n464 -> n466  [key=0, style=solid];
n467 -> n468  [key=0, style=solid];
n467 -> n469  [key=0, style=solid];
n466 -> n467  [key=0, style=solid];
n466 -> n473  [key=2, style=dotted];
n466 -> n468  [color=darkseagreen4, key=1, label=builder, style=dashed];
n466 -> n469  [color=darkseagreen4, key=1, label=builder, style=dashed];
n468 -> n467  [key=0, style=solid];
n468 -> n471  [key=2, style=dotted];
n468 -> n222  [key=2, style=dotted];
n469 -> n470  [key=0, style=solid];
n469 -> n474  [key=2, style=dotted];
n471 -> n471  [color=darkorchid, key=3, label="Field variable int BuilderCapacity", style=bold];
n470 -> n392  [color=blue, key=0, style=bold];
m0_43 -> m0_44  [key=0, style=solid];
m0_43 -> m0_45  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_44 -> m0_45  [key=0, style=solid];
m0_44 -> m0_0  [key=2, style=dotted];
m0_45 -> m0_46  [key=0, style=solid];
m0_45 -> m0_30  [key=2, style=dotted];
m0_46 -> m0_43  [color=blue, key=0, style=bold];
m0_235 -> m0_236  [key=0, style=solid];
m0_236 -> m0_237  [color=green, key=0, style=solid];
m0_236 -> m0_236  [color=darkorchid, key=3, label="Local variable System.Action test", style=bold];
m0_237 -> m0_238  [color=green, key=0, style=solid];
m0_237 -> m0_224  [color=green, key=2, style=dotted];
m0_238 -> m0_235  [color=blue, key=0, style=bold];
m0_108 -> m0_109  [key=0, style=solid];
m0_108 -> m0_110  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m0_109 -> m0_110  [key=0, style=solid];
m0_109 -> m0_0  [key=2, style=dotted];
m0_110 -> m0_111  [key=0, style=solid];
m0_110 -> m0_30  [key=2, style=dotted];
m0_111 -> m0_108  [color=blue, key=0, style=bold];
m0_181 -> m0_182  [key=0, style=solid];
m0_181 -> m0_183  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_182 -> m0_183  [key=0, style=solid];
m0_182 -> m0_0  [key=2, style=dotted];
m0_183 -> m0_184  [key=0, style=solid];
m0_183 -> m0_30  [key=2, style=dotted];
m0_184 -> m0_181  [color=blue, key=0, style=bold];
m0_220 -> m0_221  [key=0, style=solid];
m0_221 -> m0_222  [color=green, key=0, style=solid];
m0_221 -> m0_221  [color=darkorchid, key=3, label="Local variable System.Action test", style=bold];
m0_222 -> m0_223  [color=green, key=0, style=solid];
m0_222 -> m0_224  [color=green, key=2, style=dotted];
m0_223 -> m0_220  [color=blue, key=0, style=bold];
m0_203 -> m0_204  [key=0, style=solid];
m0_203 -> m0_205  [color=darkseagreen4, key=1, label="long?", style=dashed];
m0_204 -> m0_205  [key=0, style=solid];
m0_204 -> m0_0  [key=2, style=dotted];
m0_205 -> m0_206  [key=0, style=solid];
m0_205 -> m0_30  [key=2, style=dotted];
m0_206 -> m0_203  [color=blue, key=0, style=bold];
m0_275 -> m0_276  [key=0, style=solid];
m0_275 -> m0_277  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Options_With_Required_Set_To_True_For_Values", style=dashed];
m0_276 -> m0_277  [key=0, style=solid];
m0_276 -> m0_0  [key=2, style=dotted];
m0_277 -> m0_278  [key=0, style=solid];
m0_277 -> m0_30  [key=2, style=dotted];
m0_278 -> m0_275  [color=blue, key=0, style=bold];
m0_116 -> m0_117  [key=0, style=solid];
m0_117 -> m0_118  [key=0, style=solid];
m0_117 -> m0_103  [key=2, style=dotted];
m0_117 -> m0_120  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_118 -> m0_119  [key=0, style=solid];
m0_120 -> m0_121  [key=0, style=solid];
m0_120 -> m0_30  [key=2, style=dotted];
m0_119 -> m0_120  [key=0, style=solid];
m0_119 -> m0_3  [key=2, style=dotted];
m0_119 -> m0_4  [key=2, style=dotted];
m0_119 -> m0_5  [key=2, style=dotted];
m0_119 -> m0_122  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_119 -> m0_125  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_121 -> m0_116  [color=blue, key=0, style=bold];
m0_176 -> m0_177  [key=0, style=solid];
m0_177 -> m0_178  [key=0, style=solid];
m0_177 -> m0_170  [key=2, style=dotted];
m0_177 -> m0_179  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_178 -> m0_179  [key=0, style=solid];
m0_178 -> m0_0  [key=2, style=dotted];
m0_179 -> m0_180  [key=0, style=solid];
m0_179 -> m0_30  [key=2, style=dotted];
m0_180 -> m0_176  [color=blue, key=0, style=bold];
m0_261 -> m0_262  [key=0, style=solid];
m0_261 -> m0_263  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_262 -> m0_263  [key=0, style=solid];
m0_262 -> m0_0  [key=2, style=dotted];
m0_263 -> m0_264  [key=0, style=solid];
m0_263 -> m0_30  [key=2, style=dotted];
m0_264 -> m0_261  [color=blue, key=0, style=bold];
m0_62 -> m0_63  [key=0, style=solid];
m0_63 -> m0_64  [key=0, style=solid];
m0_63 -> m0_67  [key=2, style=dotted];
m0_63 -> m0_65  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_64 -> m0_65  [key=0, style=solid];
m0_64 -> m0_0  [key=2, style=dotted];
m0_65 -> m0_66  [key=0, style=solid];
m0_65 -> m0_30  [key=2, style=dotted];
m0_66 -> m0_62  [color=blue, key=0, style=bold];
m0_73 -> m0_74  [key=0, style=solid];
m0_74 -> m0_75  [key=0, style=solid];
m0_74 -> m0_67  [key=2, style=dotted];
m0_74 -> m0_76  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_75 -> m0_76  [key=0, style=solid];
m0_75 -> m0_0  [key=2, style=dotted];
m0_76 -> m0_77  [key=0, style=solid];
m0_76 -> m0_30  [key=2, style=dotted];
m0_77 -> m0_73  [color=blue, key=0, style=bold];
m0_207 -> m0_208  [key=0, style=solid];
m0_207 -> m0_210  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_207 -> m0_211  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_208 -> m0_209  [key=0, style=solid];
m0_208 -> m0_0  [key=2, style=dotted];
m0_208 -> m0_210  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_208 -> m0_211  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_210 -> m0_211  [key=0, style=solid];
m0_210 -> m0_30  [key=2, style=dotted];
m0_211 -> m0_212  [key=0, style=solid];
m0_211 -> m0_213  [key=2, style=dotted];
m0_211 -> m0_30  [key=2, style=dotted];
m0_209 -> m0_210  [key=0, style=solid];
m0_209 -> m0_211  [key=0, style=solid];
m0_212 -> m0_207  [color=blue, key=0, style=bold];
m0_289 -> m0_290  [key=0, style=solid];
m0_289 -> m0_292  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_289 -> m0_296  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_290 -> m0_291  [key=0, style=solid];
m0_290 -> m0_0  [key=2, style=dotted];
m0_292 -> m0_293  [key=0, style=solid];
m0_292 -> m0_294  [key=2, style=dotted];
m0_292 -> m0_249  [key=2, style=dotted];
m0_292 -> m0_250  [key=2, style=dotted];
m0_292 -> m0_295  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_291 -> m0_292  [key=0, style=solid];
m0_293 -> m0_289  [color=blue, key=0, style=bold];
m0_171 -> m0_172  [key=0, style=solid];
m0_172 -> m0_173  [key=0, style=solid];
m0_172 -> m0_170  [key=2, style=dotted];
m0_172 -> m0_174  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_173 -> m0_174  [key=0, style=solid];
m0_173 -> m0_0  [key=2, style=dotted];
m0_174 -> m0_175  [key=0, style=solid];
m0_174 -> m0_30  [key=2, style=dotted];
m0_175 -> m0_171  [color=blue, key=0, style=bold];
m0_82 -> m0_83  [key=0, style=solid];
m0_83 -> m0_84  [key=0, style=solid];
m0_83 -> m0_87  [key=2, style=dotted];
m0_83 -> m0_61  [key=2, style=dotted];
m0_83 -> m0_85  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_84 -> m0_85  [key=0, style=solid];
m0_84 -> m0_0  [key=2, style=dotted];
m0_85 -> m0_86  [key=0, style=solid];
m0_85 -> m0_30  [key=2, style=dotted];
m0_86 -> m0_82  [color=blue, key=0, style=bold];
m0_104 -> m0_105  [key=0, style=solid];
m0_104 -> m0_106  [color=darkseagreen4, key=1, label="long[]", style=dashed];
m0_105 -> m0_106  [key=0, style=solid];
m0_105 -> m0_0  [key=2, style=dotted];
m0_106 -> m0_107  [key=0, style=solid];
m0_106 -> m0_30  [key=2, style=dotted];
m0_107 -> m0_104  [color=blue, key=0, style=bold];
m0_51 -> m0_52  [key=0, style=solid];
m0_51 -> m0_53  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_52 -> m0_53  [key=0, style=solid];
m0_52 -> m0_0  [key=2, style=dotted];
m0_53 -> m0_54  [key=0, style=solid];
m0_53 -> m0_30  [key=2, style=dotted];
m0_54 -> m0_51  [color=blue, key=0, style=bold];
m0_242 -> m0_243  [key=0, style=solid];
m0_242 -> m0_244  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m0_242 -> m0_245  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_242 -> m0_252  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_242 -> m0_246  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m0_243 -> m0_244  [key=0, style=solid];
m0_243 -> m0_0  [key=2, style=dotted];
m0_243 -> m0_245  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_243 -> m0_247  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_244 -> m0_245  [key=0, style=solid];
m0_244 -> m0_246  [key=0, style=solid];
m0_245 -> m0_248  [key=0, style=solid];
m0_245 -> m0_249  [key=2, style=dotted];
m0_245 -> m0_250  [key=2, style=dotted];
m0_245 -> m0_251  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_246 -> m0_247  [key=0, style=solid];
m0_246 -> m0_248  [key=0, style=solid];
m0_247 -> m0_248  [key=0, style=solid];
m0_247 -> m0_249  [key=2, style=dotted];
m0_247 -> m0_224  [key=2, style=dotted];
m0_248 -> m0_242  [color=blue, key=0, style=bold];
m0_39 -> m0_40  [key=0, style=solid];
m0_39 -> m0_41  [color=darkseagreen4, key=1, label="int[]", style=dashed];
m0_40 -> m0_41  [key=0, style=solid];
m0_40 -> m0_0  [key=2, style=dotted];
m0_41 -> m0_42  [key=0, style=solid];
m0_41 -> m0_30  [key=2, style=dotted];
m0_42 -> m0_39  [color=blue, key=0, style=bold];
m0_295 -> m0_296  [key=0, style=solid];
m0_6 -> m0_7  [key=0, style=solid];
m0_10 -> m0_11  [key=0, style=solid];
m0_7 -> m0_8  [key=0, style=solid];
m0_7 -> m0_9  [key=2, style=dotted];
m0_8 -> m0_6  [color=blue, key=0, style=bold];
m0_11 -> m0_12  [key=0, style=solid];
m0_11 -> m0_13  [key=2, style=dotted];
m0_11 -> m0_14  [key=2, style=dotted];
m0_12 -> m0_10  [color=blue, key=0, style=bold];
m0_19 -> m0_20  [key=0, style=solid];
m0_20 -> m0_21  [key=0, style=solid];
m0_20 -> m0_13  [key=2, style=dotted];
m0_20 -> m0_14  [key=2, style=dotted];
m0_21 -> m0_19  [color=blue, key=0, style=bold];
m0_122 -> m0_123  [key=0, style=solid];
m0_125 -> m0_126  [key=0, style=solid];
m0_125 -> m0_130  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_125 -> m0_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_123 -> m0_124  [key=0, style=solid];
m0_123 -> m0_103  [key=2, style=dotted];
m0_124 -> m0_122  [color=blue, key=0, style=bold];
m0_126 -> m0_127  [key=0, style=solid];
m0_126 -> m0_128  [key=2, style=dotted];
m0_126 -> m0_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_130 -> m0_131  [key=0, style=solid];
m0_130 -> m0_132  [key=2, style=dotted];
m0_130 -> m0_133  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_134 -> m0_135  [key=0, style=solid];
m0_134 -> m0_136  [key=2, style=dotted];
m0_127 -> m0_125  [color=blue, key=0, style=bold];
m0_129 -> m0_130  [key=0, style=solid];
m0_131 -> m0_129  [color=blue, key=0, style=bold];
m0_133 -> m0_134  [key=0, style=solid];
m0_135 -> m0_133  [color=blue, key=0, style=bold];
m0_225 -> m0_226  [key=0, style=solid];
m0_226 -> m0_227  [key=0, style=solid];
m0_226 -> m0_0  [key=2, style=dotted];
m0_227 -> m0_225  [color=blue, key=0, style=bold];
m0_232 -> m0_233  [key=0, style=solid];
m0_233 -> m0_234  [key=0, style=solid];
m0_233 -> m0_0  [key=2, style=dotted];
m0_234 -> m0_232  [color=blue, key=0, style=bold];
m0_239 -> m0_240  [key=0, style=solid];
m0_240 -> m0_241  [key=0, style=solid];
m0_240 -> m0_0  [key=2, style=dotted];
m0_241 -> m0_239  [color=blue, key=0, style=bold];
m0_252 -> m0_253  [key=0, style=solid];
m0_251 -> m0_252  [key=0, style=solid];
m0_253 -> m0_251  [color=blue, key=0, style=bold];
m0_259 -> m0_260  [key=0, style=solid];
m0_258 -> m0_259  [key=0, style=solid];
m0_260 -> m0_258  [color=blue, key=0, style=bold];
m0_273 -> m0_274  [key=0, style=solid];
m0_272 -> m0_273  [key=0, style=solid];
m0_274 -> m0_272  [color=blue, key=0, style=bold];
m0_296 -> m0_297  [key=0, style=solid];
m0_297 -> m0_295  [color=blue, key=0, style=bold];
m0_298 -> m0_299  [key=0, style=solid];
m0_298 -> m0_300  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Immutable_Simple_Options", style=dashed];
m0_299 -> m0_300  [key=0, style=solid];
m0_299 -> m0_15  [key=2, style=dotted];
m0_300 -> m0_301  [key=0, style=solid];
m0_300 -> m0_30  [key=2, style=dotted];
m0_301 -> m0_298  [color=blue, key=0, style=bold];
m0_254 -> m0_255  [key=0, style=solid];
m0_254 -> m0_256  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_254 -> m0_259  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_255 -> m0_256  [key=0, style=solid];
m0_255 -> m0_0  [key=2, style=dotted];
m0_256 -> m0_257  [key=0, style=solid];
m0_256 -> m0_249  [key=2, style=dotted];
m0_256 -> m0_250  [key=2, style=dotted];
m0_256 -> m0_258  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_257 -> m0_254  [color=blue, key=0, style=bold];
m0_265 -> m0_266  [key=0, style=solid];
m0_265 -> m0_267  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m0_265 -> m0_268  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_265 -> m0_273  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_265 -> m0_269  [color=darkseagreen4, key=1, label="CommandLine.ParserResultType", style=dashed];
m0_266 -> m0_267  [key=0, style=solid];
m0_266 -> m0_0  [key=2, style=dotted];
m0_266 -> m0_268  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_266 -> m0_270  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_267 -> m0_268  [key=0, style=solid];
m0_267 -> m0_269  [key=0, style=solid];
m0_268 -> m0_271  [key=0, style=solid];
m0_268 -> m0_249  [key=2, style=dotted];
m0_268 -> m0_250  [key=2, style=dotted];
m0_268 -> m0_272  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_269 -> m0_270  [key=0, style=solid];
m0_269 -> m0_271  [key=0, style=solid];
m0_270 -> m0_271  [key=0, style=solid];
m0_270 -> m0_249  [key=2, style=dotted];
m0_270 -> m0_224  [key=2, style=dotted];
m0_271 -> m0_265  [color=blue, key=0, style=bold];
m0_47 -> m0_48  [key=0, style=solid];
m0_47 -> m0_49  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_48 -> m0_49  [key=0, style=solid];
m0_48 -> m0_0  [key=2, style=dotted];
m0_49 -> m0_50  [key=0, style=solid];
m0_49 -> m0_30  [key=2, style=dotted];
m0_50 -> m0_47  [color=blue, key=0, style=bold];
m0_88 -> m0_89  [key=0, style=solid];
m0_89 -> m0_90  [key=0, style=solid];
m0_89 -> m0_87  [key=2, style=dotted];
m0_89 -> m0_61  [key=2, style=dotted];
m0_89 -> m0_91  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_90 -> m0_91  [key=0, style=solid];
m0_90 -> m0_0  [key=2, style=dotted];
m0_91 -> m0_92  [key=0, style=solid];
m0_91 -> m0_30  [key=2, style=dotted];
m0_92 -> m0_88  [color=blue, key=0, style=bold];
m0_35 -> m0_36  [key=0, style=solid];
m0_35 -> m0_37  [color=darkseagreen4, key=1, label=double, style=dashed];
m0_36 -> m0_37  [key=0, style=solid];
m0_36 -> m0_0  [key=2, style=dotted];
m0_37 -> m0_38  [key=0, style=solid];
m0_37 -> m0_30  [key=2, style=dotted];
m0_38 -> m0_35  [color=blue, key=0, style=bold];
m0_15 -> m0_16  [key=0, style=solid];
m0_15 -> m0_298  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_16 -> m0_17  [key=0, style=solid];
m0_16 -> m0_18  [key=2, style=dotted];
m0_16 -> m0_4  [key=2, style=dotted];
m0_16 -> m0_5  [key=2, style=dotted];
m0_16 -> m0_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_17 -> m0_15  [color=blue, key=0, style=bold];
m0_185 -> m0_186  [key=0, style=solid];
m0_186 -> m0_187  [key=0, style=solid];
m0_186 -> m0_154  [key=2, style=dotted];
m0_186 -> m0_188  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_187 -> m0_188  [key=0, style=solid];
m0_187 -> m0_0  [key=2, style=dotted];
m0_188 -> m0_189  [key=0, style=solid];
m0_188 -> m0_30  [key=2, style=dotted];
m0_189 -> m0_185  [color=blue, key=0, style=bold];
m0_160 -> m0_161  [key=0, style=solid];
m0_161 -> m0_162  [key=0, style=solid];
m0_161 -> m0_67  [key=2, style=dotted];
m0_161 -> m0_61  [key=2, style=dotted];
m0_161 -> m0_163  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_162 -> m0_163  [key=0, style=solid];
m0_162 -> m0_0  [key=2, style=dotted];
m0_163 -> m0_164  [key=0, style=solid];
m0_163 -> m0_30  [key=2, style=dotted];
m0_164 -> m0_160  [color=blue, key=0, style=bold];
m0_0 -> m0_1  [key=0, style=solid];
m0_0 -> m0_31  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_35  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_39  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_43  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_47  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_51  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_78  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_104  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_108  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_112  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_181  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_190  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_199  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_203  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_207  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_214  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_242  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_254  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_261  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_265  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_275  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_279  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_289  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_310  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_0 -> m0_314  [color=darkorchid, key=3, label="Parameter variable string[] arguments", style=bold];
m0_1 -> m0_2  [key=0, style=solid];
m0_1 -> m0_3  [key=2, style=dotted];
m0_1 -> m0_4  [key=2, style=dotted];
m0_1 -> m0_5  [key=2, style=dotted];
m0_1 -> m0_6  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_1 -> m0_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_2 -> m0_0  [color=blue, key=0, style=bold];
m0_22 -> m0_23  [key=0, style=solid];
m0_23 -> m0_24  [key=0, style=solid];
m0_23 -> m0_27  [key=2, style=dotted];
m0_23 -> n92  [key=2, style=dotted];
m0_23 -> m0_29  [key=2, style=dotted];
m0_23 -> m0_25  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_24 -> m0_25  [key=0, style=solid];
m0_24 -> m0_0  [key=2, style=dotted];
m0_25 -> m0_26  [key=0, style=solid];
m0_25 -> m0_30  [key=2, style=dotted];
m0_26 -> m0_22  [color=blue, key=0, style=bold];
m0_155 -> m0_156  [key=0, style=solid];
m0_156 -> m0_157  [key=0, style=solid];
m0_156 -> m0_154  [key=2, style=dotted];
m0_156 -> m0_61  [key=2, style=dotted];
m0_156 -> m0_158  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_157 -> m0_158  [key=0, style=solid];
m0_157 -> m0_0  [key=2, style=dotted];
m0_158 -> m0_159  [key=0, style=solid];
m0_158 -> m0_30  [key=2, style=dotted];
m0_159 -> m0_155  [color=blue, key=0, style=bold];
m0_149 -> m0_150  [key=0, style=solid];
m0_150 -> m0_151  [key=0, style=solid];
m0_150 -> m0_154  [key=2, style=dotted];
m0_150 -> m0_61  [key=2, style=dotted];
m0_150 -> m0_152  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_151 -> m0_152  [key=0, style=solid];
m0_151 -> m0_0  [key=2, style=dotted];
m0_152 -> m0_153  [key=0, style=solid];
m0_152 -> m0_30  [key=2, style=dotted];
m0_153 -> m0_149  [color=blue, key=0, style=bold];
m0_93 -> m0_94  [key=0, style=solid];
m0_94 -> m0_95  [key=0, style=solid];
m0_94 -> m0_87  [key=2, style=dotted];
m0_94 -> m0_61  [key=2, style=dotted];
m0_94 -> m0_96  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_95 -> m0_96  [key=0, style=solid];
m0_95 -> m0_0  [key=2, style=dotted];
m0_96 -> m0_97  [key=0, style=solid];
m0_96 -> m0_30  [key=2, style=dotted];
m0_97 -> m0_93  [color=blue, key=0, style=bold];
m0_68 -> m0_69  [key=0, style=solid];
m0_69 -> m0_70  [key=0, style=solid];
m0_69 -> m0_67  [key=2, style=dotted];
m0_69 -> m0_61  [key=2, style=dotted];
m0_69 -> m0_71  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_70 -> m0_71  [key=0, style=solid];
m0_70 -> m0_0  [key=2, style=dotted];
m0_71 -> m0_72  [key=0, style=solid];
m0_71 -> m0_30  [key=2, style=dotted];
m0_72 -> m0_68  [color=blue, key=0, style=bold];
m0_55 -> m0_56  [key=0, style=solid];
m0_56 -> m0_57  [key=0, style=solid];
m0_56 -> m0_60  [key=2, style=dotted];
m0_56 -> m0_61  [key=2, style=dotted];
m0_56 -> m0_58  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_57 -> m0_58  [key=0, style=solid];
m0_57 -> m0_0  [key=2, style=dotted];
m0_58 -> m0_59  [key=0, style=solid];
m0_58 -> m0_30  [key=2, style=dotted];
m0_59 -> m0_55  [color=blue, key=0, style=bold];
m0_98 -> m0_99  [key=0, style=solid];
m0_99 -> m0_100  [key=0, style=solid];
m0_99 -> m0_103  [key=2, style=dotted];
m0_99 -> m0_101  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_100 -> m0_101  [key=0, style=solid];
m0_100 -> m0_0  [key=2, style=dotted];
m0_101 -> m0_102  [key=0, style=solid];
m0_101 -> m0_30  [key=2, style=dotted];
m0_102 -> m0_98  [color=blue, key=0, style=bold];
m0_279 -> m0_280  [key=0, style=solid];
m0_279 -> m0_281  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Options_With_Scalar_Value_And_Adjacent_SequenceString", style=dashed];
m0_280 -> m0_281  [key=0, style=solid];
m0_280 -> m0_0  [key=2, style=dotted];
m0_281 -> m0_282  [key=0, style=solid];
m0_281 -> m0_30  [key=2, style=dotted];
m0_282 -> m0_279  [color=blue, key=0, style=bold];
m0_310 -> m0_311  [key=0, style=solid];
m0_310 -> m0_312  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_311 -> m0_312  [key=0, style=solid];
m0_311 -> m0_0  [key=2, style=dotted];
m0_312 -> m0_313  [key=0, style=solid];
m0_312 -> m0_30  [key=2, style=dotted];
m0_313 -> m0_310  [color=blue, key=0, style=bold];
m0_31 -> m0_32  [key=0, style=solid];
m0_31 -> m0_33  [color=darkseagreen4, key=1, label=long, style=dashed];
m0_32 -> m0_33  [key=0, style=solid];
m0_32 -> m0_0  [key=2, style=dotted];
m0_33 -> m0_34  [key=0, style=solid];
m0_33 -> m0_30  [key=2, style=dotted];
m0_34 -> m0_31  [color=blue, key=0, style=bold];
m0_214 -> m0_215  [key=0, style=solid];
m0_214 -> m0_217  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_214 -> m0_218  [color=darkseagreen4, key=1, label=bool, style=dashed];
m0_215 -> m0_216  [key=0, style=solid];
m0_215 -> m0_0  [key=2, style=dotted];
m0_215 -> m0_217  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_215 -> m0_218  [color=darkseagreen4, key=1, label=result, style=dashed];
m0_217 -> m0_218  [key=0, style=solid];
m0_217 -> m0_30  [key=2, style=dotted];
m0_218 -> m0_219  [key=0, style=solid];
m0_218 -> m0_213  [key=2, style=dotted];
m0_218 -> m0_30  [key=2, style=dotted];
m0_216 -> m0_217  [key=0, style=solid];
m0_216 -> m0_218  [key=0, style=solid];
m0_219 -> m0_214  [color=blue, key=0, style=bold];
m0_283 -> m0_284  [key=0, style=solid];
m0_284 -> m0_285  [key=0, style=solid];
m0_284 -> m0_288  [key=2, style=dotted];
m0_284 -> m0_286  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_285 -> m0_286  [key=0, style=solid];
m0_285 -> m0_0  [key=2, style=dotted];
m0_286 -> m0_287  [key=0, style=solid];
m0_286 -> m0_30  [key=2, style=dotted];
m0_287 -> m0_283  [color=blue, key=0, style=bold];
m0_112 -> m0_113  [key=0, style=solid];
m0_112 -> m0_114  [color=darkseagreen4, key=1, label="string[]", style=dashed];
m0_113 -> m0_114  [key=0, style=solid];
m0_113 -> m0_0  [key=2, style=dotted];
m0_114 -> m0_115  [key=0, style=solid];
m0_114 -> m0_30  [key=2, style=dotted];
m0_115 -> m0_112  [color=blue, key=0, style=bold];
m0_199 -> m0_200  [key=0, style=solid];
m0_199 -> m0_201  [color=darkseagreen4, key=1, label="int?", style=dashed];
m0_200 -> m0_201  [key=0, style=solid];
m0_200 -> m0_0  [key=2, style=dotted];
m0_201 -> m0_202  [key=0, style=solid];
m0_201 -> m0_30  [key=2, style=dotted];
m0_202 -> m0_199  [color=blue, key=0, style=bold];
m0_165 -> m0_166  [key=0, style=solid];
m0_166 -> m0_167  [key=0, style=solid];
m0_166 -> m0_170  [key=2, style=dotted];
m0_166 -> m0_168  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_167 -> m0_168  [key=0, style=solid];
m0_167 -> m0_0  [key=2, style=dotted];
m0_168 -> m0_169  [key=0, style=solid];
m0_168 -> m0_30  [key=2, style=dotted];
m0_169 -> m0_165  [color=blue, key=0, style=bold];
m0_143 -> m0_144  [key=0, style=solid];
m0_144 -> m0_145  [key=0, style=solid];
m0_144 -> m0_148  [key=2, style=dotted];
m0_144 -> m0_146  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_145 -> m0_146  [key=0, style=solid];
m0_145 -> m0_0  [key=2, style=dotted];
m0_146 -> m0_147  [key=0, style=solid];
m0_146 -> m0_30  [key=2, style=dotted];
m0_147 -> m0_143  [color=blue, key=0, style=bold];
m0_13 -> m0_0  [color=darkorchid, key=3, label="Local variable CommandLine.ParserResult<CommandLine.Tests.Fakes.Options_With_Sequence> result", style=bold];
m0_194 -> m0_195  [key=0, style=solid];
m0_195 -> m0_196  [key=0, style=solid];
m0_195 -> m0_67  [key=2, style=dotted];
m0_195 -> m0_197  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_196 -> m0_197  [key=0, style=solid];
m0_196 -> m0_0  [key=2, style=dotted];
m0_197 -> m0_198  [key=0, style=solid];
m0_197 -> m0_30  [key=2, style=dotted];
m0_198 -> m0_194  [color=blue, key=0, style=bold];
m0_78 -> m0_79  [key=0, style=solid];
m0_78 -> m0_80  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m0_79 -> m0_80  [key=0, style=solid];
m0_79 -> m0_0  [key=2, style=dotted];
m0_80 -> m0_81  [key=0, style=solid];
m0_80 -> m0_30  [key=2, style=dotted];
m0_80 -> m0_80  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Colors", style=dashed];
m0_81 -> m0_78  [color=blue, key=0, style=bold];
m0_190 -> m0_191  [key=0, style=solid];
m0_190 -> m0_192  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_191 -> m0_192  [key=0, style=solid];
m0_191 -> m0_0  [key=2, style=dotted];
m0_192 -> m0_193  [key=0, style=solid];
m0_192 -> m0_30  [key=2, style=dotted];
m0_193 -> m0_190  [color=blue, key=0, style=bold];
m0_302 -> m0_303  [key=0, style=solid];
m0_303 -> m0_304  [key=0, style=solid];
m0_303 -> m0_307  [key=2, style=dotted];
m0_303 -> m0_308  [key=2, style=dotted];
m0_303 -> m0_309  [key=2, style=dotted];
m0_303 -> m0_305  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_304 -> m0_305  [key=0, style=solid];
m0_304 -> m0_0  [key=2, style=dotted];
m0_305 -> m0_306  [key=0, style=solid];
m0_305 -> m0_30  [key=2, style=dotted];
m0_306 -> m0_302  [color=blue, key=0, style=bold];
m0_228 -> m0_229  [key=0, style=solid];
m0_229 -> m0_230  [color=green, key=0, style=solid];
m0_229 -> m0_229  [color=darkorchid, key=3, label="Local variable System.Action test", style=bold];
m0_230 -> m0_231  [color=green, key=0, style=solid];
m0_230 -> m0_224  [color=green, key=2, style=dotted];
m0_231 -> m0_228  [color=blue, key=0, style=bold];
m0_314 -> m0_315  [key=0, style=solid];
m0_314 -> m0_316  [color=darkseagreen4, key=1, label="CommandLine.Tests.Fakes.Options_With_Guid", style=dashed];
m0_315 -> m0_316  [key=0, style=solid];
m0_315 -> m0_0  [key=2, style=dotted];
m0_316 -> m0_317  [key=0, style=solid];
m0_316 -> m0_30  [key=2, style=dotted];
m0_317 -> m0_314  [color=blue, key=0, style=bold];
m0_137 -> m0_138  [key=0, style=solid];
m0_138 -> m0_139  [key=0, style=solid];
m0_138 -> m0_142  [key=2, style=dotted];
m0_138 -> m0_61  [key=2, style=dotted];
m0_138 -> m0_140  [color=darkseagreen4, key=1, label=expectedResult, style=dashed];
m0_139 -> m0_140  [key=0, style=solid];
m0_139 -> m0_0  [key=2, style=dotted];
m0_140 -> m0_141  [key=0, style=solid];
m0_140 -> m0_30  [key=2, style=dotted];
m0_141 -> m0_137  [color=blue, key=0, style=bold];
m0_318 -> m0_130  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_318 -> m0_134  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", style=dashed];
m0_319 -> m0_252  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_320 -> m0_259  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_321 -> m0_273  [color=darkseagreen4, key=1, label=int, style=dashed];
m0_322 -> m0_296  [color=darkseagreen4, key=1, label=int, style=dashed];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_15  [color=darkseagreen4, key=1, label=ShortName, style=dashed];
m1_13 -> m1_16  [color=darkseagreen4, key=1, label=ShortName, style=dashed];
m1_13 -> m1_13  [color=darkorchid, key=3, label="Local variable string ShortName", style=bold];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_16  [color=darkseagreen4, key=1, label=LongName, style=dashed];
m1_14 -> m1_14  [color=darkorchid, key=3, label="Local variable string LongName", style=bold];
m1_15 -> m1_16  [key=0, style=solid];
m1_15 -> m1_20  [key=2, style=dotted];
m1_15 -> m1_18  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_7  [key=2, style=dotted];
m1_16 -> m1_8  [key=2, style=dotted];
m1_16 -> m1_9  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_11  [key=2, style=dotted];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_21  [key=2, style=dotted];
m1_19 -> m1_12  [color=blue, key=0, style=bold];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_6  [key=2, style=dotted];
m1_1 -> m1_4  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_2 -> m1_3  [color=red, key=0, style=solid];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_9  [key=2, style=dotted];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_11  [key=2, style=dotted];
m1_3 -> m1_4  [color=red, key=0, style=solid];
m1_3 -> m1_10  [color=red, key=2, style=dotted];
m1_5 -> m1_0  [color=blue, key=0, style=bold];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_6  [key=2, style=dotted];
m2_1 -> m2_3  [color=red, key=1, label=tokenPartitions, style=dashed];
m2_2 -> m2_3  [color=red, key=0, style=solid];
m2_2 -> m2_7  [key=2, style=dotted];
m2_2 -> m2_8  [key=2, style=dotted];
m2_2 -> m2_9  [key=2, style=dotted];
m2_2 -> m2_10  [key=2, style=dotted];
m2_2 -> m2_11  [key=2, style=dotted];
m2_2 -> m2_12  [key=2, style=dotted];
m2_2 -> m2_16  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_4  [color=red, key=0, style=solid];
m2_3 -> n218  [color=red, key=2, style=dotted];
m2_3 -> m2_14  [color=red, key=2, style=dotted];
m2_3 -> m2_20  [color=red, key=1, label="lambda expression", style=dashed];
m2_3 -> m2_24  [color=red, key=1, label="lambda expression", style=dashed];
m2_4 -> m2_5  [key=0, style=solid];
m2_4 -> m2_11  [key=2, style=dotted];
m2_4 -> m2_15  [key=2, style=dotted];
m2_4 -> m2_28  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m2_5 -> m2_0  [color=blue, key=0, style=bold];
m2_28 -> m2_29  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_20 -> m2_21  [key=0, style=solid];
m2_24 -> m2_25  [key=0, style=solid];
m2_17 -> m2_18  [key=0, style=solid];
m2_17 -> m2_19  [key=2, style=dotted];
m2_18 -> m2_16  [color=blue, key=0, style=bold];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_23  [key=2, style=dotted];
m2_22 -> m2_20  [color=blue, key=0, style=bold];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=2, style=dotted];
m2_26 -> m2_24  [color=blue, key=0, style=bold];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_23  [key=2, style=dotted];
m2_29 -> m2_31  [key=2, style=dotted];
m2_30 -> m2_28  [color=blue, key=0, style=bold];
m3_143 -> m3_144  [color=red, key=0, style=solid];
m3_144 -> m3_145  [color=red, key=0, style=solid];
m3_144 -> m3_139  [color=red, key=2, style=dotted];
m3_145 -> m3_143  [color=blue, key=0, style=bold];
m3_92 -> m3_93  [key=0, style=solid];
m3_92 -> m3_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_92 -> m3_98  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_92 -> m3_94  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_93 -> m3_94  [key=0, style=solid];
m3_93 -> m3_93  [color=darkorchid, key=3, label="Local variable System.Func<bool> isMutable", style=bold];
m3_94 -> m3_95  [key=0, style=solid];
m3_94 -> m3_91  [key=2, style=dotted];
m3_95 -> m3_92  [color=blue, key=0, style=bold];
m3_146 -> m3_147  [key=0, style=solid];
m3_147 -> m3_148  [key=0, style=solid];
m3_147 -> m3_40  [key=2, style=dotted];
m3_147 -> m3_149  [key=2, style=dotted];
m3_147 -> m3_150  [key=2, style=dotted];
m3_148 -> m3_146  [color=blue, key=0, style=bold];
m3_83 -> m3_84  [key=0, style=solid];
m3_84 -> m3_85  [key=0, style=solid];
m3_84 -> m3_87  [key=2, style=dotted];
m3_84 -> m3_88  [key=2, style=dotted];
m3_84 -> m3_89  [key=2, style=dotted];
m3_85 -> m3_86  [key=0, style=solid];
m3_85 -> m3_90  [key=2, style=dotted];
m3_85 -> m3_91  [key=2, style=dotted];
m3_86 -> m3_83  [color=blue, key=0, style=bold];
m3_132 -> m3_133  [key=0, style=solid];
m3_133 -> m3_134  [key=0, style=solid];
m3_133 -> m3_135  [key=2, style=dotted];
m3_134 -> m3_132  [color=blue, key=0, style=bold];
m3_60 -> m3_61  [color=green, key=0, style=solid];
m3_60 -> m3_62  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
m3_60 -> m3_71  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_60 -> m3_60  [color=darkorchid, key=3, label="method methodReturn T SetValue", style=bold];
m3_61 -> m3_62  [color=green, key=0, style=solid];
m3_61 -> m3_76  [color=green, key=1, label="System.Exception", style=dashed];
m3_61 -> m3_64  [color=green, key=1, label=fail, style=dashed];
m3_61 -> m3_66  [color=green, key=1, label=fail, style=dashed];
m3_61 -> m3_68  [color=green, key=1, label=fail, style=dashed];
m3_61 -> m3_70  [color=green, key=1, label=fail, style=dashed];
m3_61 -> m3_61  [color=green, key=3, label="Local variable System.Action<System.Exception> fail", style=bold];
m3_62 -> m3_63  [key=0, style=solid];
m3_62 -> m3_65  [key=0, style=solid];
m3_62 -> m3_67  [key=0, style=solid];
m3_62 -> m3_69  [key=0, style=solid];
m3_62 -> m3_71  [key=0, style=solid];
m3_62 -> m3_73  [key=2, style=dotted];
m3_71 -> m3_72  [key=0, style=solid];
m3_64 -> m3_71  [key=0, style=solid];
m3_64 -> m3_74  [key=2, style=dotted];
m3_66 -> m3_71  [key=0, style=solid];
m3_66 -> m3_74  [key=2, style=dotted];
m3_68 -> m3_71  [key=0, style=solid];
m3_68 -> m3_74  [key=2, style=dotted];
m3_70 -> m3_71  [key=0, style=solid];
m3_70 -> m3_74  [key=2, style=dotted];
m3_63 -> m3_64  [key=0, style=solid];
m3_65 -> m3_66  [key=0, style=solid];
m3_67 -> m3_68  [key=0, style=solid];
m3_69 -> m3_70  [key=0, style=solid];
m3_72 -> m3_60  [color=blue, key=0, style=bold];
m3_46 -> m3_47  [key=0, style=solid];
m3_47 -> m3_48  [key=0, style=solid];
m3_47 -> m3_49  [key=2, style=dotted];
m3_48 -> m3_46  [color=blue, key=0, style=bold];
m3_14 -> m3_15  [key=0, style=solid];
m3_15 -> m3_16  [key=0, style=solid];
m3_15 -> m3_3  [key=2, style=dotted];
m3_15 -> m3_4  [key=2, style=dotted];
m3_15 -> m3_17  [key=2, style=dotted];
m3_15 -> m3_18  [key=2, style=dotted];
m3_15 -> m3_19  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_15 -> m3_15  [color=darkseagreen4, key=1, label=attr, style=dashed];
m3_16 -> m3_14  [color=blue, key=0, style=bold];
m3_129 -> m3_130  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_11 -> m3_13  [key=2, style=dotted];
m3_12 -> m3_10  [color=blue, key=0, style=bold];
m3_19 -> m3_20  [key=0, style=solid];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_22  [key=2, style=dotted];
m3_21 -> m3_19  [color=blue, key=0, style=bold];
m3_27 -> m3_28  [key=0, style=solid];
m3_28 -> m3_29  [key=0, style=solid];
m3_28 -> m3_13  [key=2, style=dotted];
m3_29 -> m3_27  [color=blue, key=0, style=bold];
m3_56 -> m3_57  [key=0, style=solid];
m3_56 -> m3_9  [key=2, style=dotted];
m3_56 -> m3_59  [key=2, style=dotted];
m3_57 -> m3_58  [key=0, style=solid];
m3_55 -> m3_56  [key=0, style=solid];
m3_58 -> m3_55  [color=blue, key=0, style=bold];
m3_76 -> m3_77  [color=green, key=0, style=solid];
m3_76 -> m3_78  [color=green, key=2, style=dotted];
m3_75 -> m3_76  [color=green, key=0, style=solid];
m3_77 -> m3_75  [color=blue, key=0, style=bold];
m3_97 -> m3_98  [key=0, style=solid];
m3_97 -> m3_101  [key=2, style=dotted];
m3_97 -> m3_7  [key=2, style=dotted];
m3_97 -> m3_104  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_97 -> m3_99  [color=darkseagreen4, key=1, label=props, style=dashed];
m3_98 -> m3_99  [key=0, style=solid];
m3_98 -> m3_102  [key=2, style=dotted];
m3_98 -> m3_103  [key=2, style=dotted];
m3_96 -> m3_97  [key=0, style=solid];
m3_104 -> m3_105  [key=0, style=solid];
m3_99 -> m3_100  [key=0, style=solid];
m3_100 -> m3_96  [color=blue, key=0, style=bold];
m3_105 -> m3_106  [key=0, style=solid];
m3_106 -> m3_104  [color=blue, key=0, style=bold];
m3_130 -> m3_131  [key=0, style=solid];
m3_131 -> m3_129  [color=blue, key=0, style=bold];
m3_40 -> m3_40  [color=darkorchid, key=3, label="method methodReturn System.Type GetTypeInfo", style=bold];
m3_107 -> m3_108  [key=0, style=solid];
m3_107 -> m3_110  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_107 -> m3_111  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_107 -> m3_112  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_107 -> m3_79  [color=darkorchid, key=3, label="method methodReturn object CreateDefaultForImmutable", style=bold];
m3_107 -> m3_83  [color=darkorchid, key=3, label="method methodReturn object CreateDefaultForImmutable", style=bold];
m3_108 -> m3_109  [key=0, style=solid];
m3_108 -> m3_110  [key=0, style=solid];
m3_110 -> m3_111  [key=0, style=solid];
m3_110 -> m3_112  [key=0, style=solid];
m3_110 -> m3_40  [key=2, style=dotted];
m3_110 -> m3_114  [key=2, style=dotted];
m3_111 -> m3_113  [key=0, style=solid];
m3_111 -> m3_115  [key=2, style=dotted];
m3_111 -> m3_116  [key=2, style=dotted];
m3_112 -> m3_113  [key=0, style=solid];
m3_112 -> m3_117  [key=2, style=dotted];
m3_109 -> m3_113  [key=0, style=solid];
m3_113 -> m3_107  [color=blue, key=0, style=bold];
m3_23 -> m3_24  [key=0, style=solid];
m3_24 -> m3_25  [key=0, style=solid];
m3_24 -> m3_3  [key=2, style=dotted];
m3_24 -> m3_4  [key=2, style=dotted];
m3_24 -> m3_5  [key=2, style=dotted];
m3_24 -> m3_6  [key=2, style=dotted];
m3_24 -> m3_7  [key=2, style=dotted];
m3_24 -> m3_8  [key=2, style=dotted];
m3_24 -> m3_26  [key=2, style=dotted];
m3_24 -> m3_17  [key=2, style=dotted];
m3_24 -> m3_18  [key=2, style=dotted];
m3_24 -> m3_27  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_24 -> m3_24  [color=darkseagreen4, key=1, label=pi, style=dashed];
m3_25 -> m3_23  [color=blue, key=0, style=bold];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_121  [color=darkorchid, key=3, label="Parameter variable System.Func<System.Reflection.PropertyInfo, T> selector", style=bold];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_3  [key=2, style=dotted];
m3_1 -> m3_4  [key=2, style=dotted];
m3_1 -> m3_5  [key=2, style=dotted];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_7  [key=2, style=dotted];
m3_1 -> m3_8  [key=2, style=dotted];
m3_1 -> m3_9  [key=2, style=dotted];
m3_1 -> m3_10  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_1 -> m3_1  [color=darkseagreen4, key=1, label=pi, style=dashed];
m3_2 -> m3_0  [color=blue, key=0, style=bold];
m3_118 -> m3_119  [key=0, style=solid];
m3_118 -> m3_120  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_118 -> m3_121  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_118 -> m3_122  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_119 -> m3_120  [key=0, style=solid];
m3_119 -> m3_121  [key=0, style=solid];
m3_119 -> m3_124  [key=2, style=dotted];
m3_120 -> m3_123  [key=0, style=solid];
m3_120 -> m3_125  [key=2, style=dotted];
m3_121 -> m3_122  [key=0, style=solid];
m3_121 -> m3_126  [key=2, style=dotted];
m3_121 -> n59  [key=2, style=dotted];
m3_121 -> m3_129  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_122 -> m3_123  [key=0, style=solid];
m3_122 -> m3_128  [key=2, style=dotted];
m3_123 -> m3_118  [color=blue, key=0, style=bold];
m3_140 -> m3_141  [color=red, key=0, style=solid];
m3_141 -> m3_142  [color=red, key=0, style=solid];
m3_141 -> m3_139  [color=red, key=2, style=dotted];
m3_142 -> m3_140  [color=blue, key=0, style=bold];
m3_41 -> m3_42  [key=0, style=solid];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_44  [key=2, style=dotted];
m3_42 -> m3_45  [key=2, style=dotted];
m3_43 -> m3_41  [color=blue, key=0, style=bold];
m3_79 -> m3_80  [key=0, style=solid];
m3_80 -> m3_81  [key=0, style=solid];
m3_80 -> m3_82  [key=2, style=dotted];
m3_81 -> m3_79  [color=blue, key=0, style=bold];
m3_50 -> m3_51  [key=0, style=solid];
m3_50 -> m3_56  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m3_50 -> m3_57  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_51 -> m3_52  [key=0, style=solid];
m3_51 -> m3_53  [key=2, style=dotted];
m3_51 -> m3_54  [key=2, style=dotted];
m3_51 -> m3_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m3_52 -> m3_50  [color=blue, key=0, style=bold];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_32  [color=crimson, key=0, style=bold];
m3_30 -> m3_33  [color=crimson, key=0, style=bold];
m3_30 -> m3_35  [color=crimson, key=0, style=bold];
m3_30 -> m3_37  [color=crimson, key=0, style=bold];
m3_30 -> m3_34  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_30 -> m3_36  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_31 -> m3_32  [key=0, style=solid];
m3_31 -> m3_33  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid];
m3_33 -> m3_34  [key=0, style=solid];
m3_35 -> m3_34  [key=0, style=solid];
m3_37 -> m3_36  [key=0, style=solid];
m3_34 -> m3_35  [key=0, style=solid];
m3_34 -> m3_36  [key=0, style=solid];
m3_34 -> m3_39  [key=2, style=dotted];
m3_36 -> m3_37  [key=0, style=solid];
m3_36 -> m3_38  [key=0, style=solid];
m3_36 -> m3_40  [key=2, style=dotted];
m3_36 -> m3_30  [key=2, style=dotted];
m3_38 -> m3_30  [color=blue, key=0, style=bold];
m3_151 -> m3_152  [key=0, style=solid];
m3_152 -> m3_153  [key=0, style=solid];
m3_153 -> m3_151  [color=blue, key=0, style=bold];
m3_136 -> m3_137  [color=red, key=0, style=solid];
m3_137 -> m3_138  [color=red, key=0, style=solid];
m3_137 -> m3_139  [color=red, key=2, style=dotted];
m3_138 -> m3_136  [color=blue, key=0, style=bold];
m3_154 -> m3_56  [color=darkseagreen4, key=1, label="System.Func<CommandLine.Core.SpecificationProperty, object>", style=dashed];
m3_155 -> m3_57  [color=darkseagreen4, key=1, label=T, style=dashed];
m3_156 -> m3_97  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m3_156 -> m3_98  [color=darkseagreen4, key=1, label="System.Type", style=dashed];
m4_13 -> m4_14  [key=0, style=solid];
m4_13 -> m4_15  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m4_13 -> m4_17  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>", style=dashed];
m4_13 -> m4_13  [color=darkorchid, key=3, label="method methodReturn System.Collections.Generic.IEnumerable<CommandLine.Core.Specification> ThrowingValidate", style=bold];
m4_14 -> m4_15  [key=0, style=solid];
m4_14 -> m4_17  [key=0, style=solid];
m4_14 -> m4_22  [color=darkseagreen4, key=1, label=guard, style=dashed];
m4_14 -> m4_16  [color=green, key=1, label=guard, style=dashed];
m4_15 -> m4_16  [color=green, key=0, style=solid];
m4_15 -> m4_14  [key=0, style=solid];
m4_15 -> n58  [key=2, style=dotted];
m4_15 -> m4_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m4_17 -> m4_18  [key=0, style=solid];
m4_16 -> m4_18  [color=green, key=0, style=solid];
m4_16 -> m4_20  [color=green, key=2, style=dotted];
m4_18 -> m4_13  [color=blue, key=0, style=bold];
m4_25 -> m4_26  [key=0, style=solid];
m4_25 -> m4_28  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m4_25 -> m4_29  [color=darkseagreen4, key=1, label="System.Func<int, int, bool>", style=dashed];
m4_25 -> m4_30  [color=darkorchid, key=3, label="method methodReturn bool HavingRange", style=bold];
m4_26 -> m4_27  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=0, style=solid];
m4_28 -> m4_32  [key=2, style=dotted];
m4_29 -> m4_31  [key=0, style=solid];
m4_29 -> m4_33  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_30 -> m4_31  [key=0, style=solid];
m4_31 -> m4_25  [color=blue, key=0, style=bold];
m4_0 -> m4_1  [key=0, style=solid];
m4_1 -> m4_2  [key=0, style=solid];
m4_2 -> m4_0  [color=blue, key=0, style=bold];
m4_3 -> m4_4  [key=0, style=solid];
m4_4 -> m4_5  [key=0, style=solid];
m4_5 -> m4_3  [color=blue, key=0, style=bold];
m4_21 -> m4_22  [key=0, style=solid];
m4_22 -> m4_23  [key=0, style=solid];
m4_22 -> m4_24  [key=2, style=dotted];
m4_23 -> m4_21  [color=blue, key=0, style=bold];
m4_40 -> m4_41  [key=0, style=solid];
m4_40 -> m4_42  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m4_40 -> m4_43  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m4_40 -> m4_30  [color=darkorchid, key=3, label="method methodReturn bool HavingMax", style=bold];
m4_41 -> m4_42  [key=0, style=solid];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=0, style=solid];
m4_42 -> m4_32  [key=2, style=dotted];
m4_43 -> m4_45  [key=0, style=solid];
m4_43 -> m4_24  [key=2, style=dotted];
m4_44 -> m4_45  [key=0, style=solid];
m4_45 -> m4_40  [color=blue, key=0, style=bold];
m4_10 -> m4_11  [key=0, style=solid];
m4_11 -> m4_12  [key=0, style=solid];
m4_12 -> m4_10  [color=blue, key=0, style=bold];
m4_34 -> m4_35  [key=0, style=solid];
m4_34 -> m4_36  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m4_34 -> m4_37  [color=darkseagreen4, key=1, label="System.Func<int, bool>", style=dashed];
m4_34 -> m4_30  [color=darkorchid, key=3, label="method methodReturn bool HavingMin", style=bold];
m4_35 -> m4_36  [key=0, style=solid];
m4_36 -> m4_37  [key=0, style=solid];
m4_36 -> m4_38  [key=0, style=solid];
m4_36 -> m4_32  [key=2, style=dotted];
m4_37 -> m4_39  [key=0, style=solid];
m4_37 -> m4_24  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_39 -> m4_34  [color=blue, key=0, style=bold];
m4_6 -> m4_7  [key=0, style=solid];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_9  [key=2, style=dotted];
m4_8 -> m4_6  [color=blue, key=0, style=bold];
m4_46 -> m4_22  [color=darkseagreen4, key=1, label=guard, style=dashed];
m5_20 -> m5_21  [key=0, style=solid];
m5_21 -> m5_22  [key=0, style=solid];
m5_21 -> m5_6  [key=2, style=dotted];
m5_21 -> m5_7  [key=2, style=dotted];
m5_21 -> m5_24  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m5_22 -> m5_23  [color=red, key=0, style=solid];
m5_22 -> m5_8  [key=2, style=dotted];
m5_22 -> m5_9  [key=2, style=dotted];
m5_22 -> m5_10  [key=2, style=dotted];
m5_22 -> m5_27  [color=red, key=1, label=specs, style=dashed];
m5_24 -> m5_25  [key=0, style=solid];
m5_24 -> m5_15  [key=2, style=dotted];
m5_23 -> m5_24  [color=red, key=0, style=solid];
m5_23 -> n47  [color=red, key=2, style=dotted];
m5_23 -> m5_6  [color=red, key=2, style=dotted];
m5_23 -> m5_7  [color=red, key=2, style=dotted];
m5_23 -> m5_12  [color=red, key=2, style=dotted];
m5_23 -> m5_13  [color=red, key=2, style=dotted];
m5_23 -> m5_14  [color=red, key=2, style=dotted];
m5_23 -> m5_26  [color=red, key=1, label="lambda expression", style=dashed];
m5_25 -> m5_20  [color=blue, key=0, style=bold];
m5_29 -> m5_30  [key=0, style=solid];
m5_30 -> m5_31  [key=0, style=solid];
m5_30 -> m5_6  [key=2, style=dotted];
m5_30 -> m5_7  [key=2, style=dotted];
m5_30 -> m5_33  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m5_31 -> m5_32  [key=0, style=solid];
m5_31 -> m5_38  [color=darkseagreen4, key=1, label=string, style=dashed];
m5_31 -> m5_31  [color=darkorchid, key=3, label="Local variable System.Func<string, bool> nameLookup", style=bold];
m5_33 -> m5_34  [key=0, style=solid];
m5_33 -> m5_15  [key=2, style=dotted];
m5_32 -> m5_33  [key=0, style=solid];
m5_32 -> n47  [key=2, style=dotted];
m5_32 -> m5_6  [key=2, style=dotted];
m5_32 -> m5_7  [key=2, style=dotted];
m5_32 -> m5_35  [key=2, style=dotted];
m5_32 -> m5_12  [key=2, style=dotted];
m5_32 -> m5_36  [key=2, style=dotted];
m5_34 -> m5_29  [color=blue, key=0, style=bold];
m5_0 -> m5_1  [key=0, style=solid];
m5_1 -> m5_2  [key=0, style=solid];
m5_1 -> m5_6  [key=2, style=dotted];
m5_1 -> m5_7  [key=2, style=dotted];
m5_1 -> m5_4  [color=darkseagreen4, key=1, label=expectedTokens, style=dashed];
m5_2 -> m5_3  [color=red, key=0, style=solid];
m5_2 -> m5_8  [key=2, style=dotted];
m5_2 -> m5_9  [key=2, style=dotted];
m5_2 -> m5_10  [key=2, style=dotted];
m5_2 -> m5_17  [color=red, key=1, label=specs, style=dashed];
m5_4 -> m5_5  [key=0, style=solid];
m5_4 -> m5_15  [key=2, style=dotted];
m5_3 -> m5_4  [color=red, key=0, style=solid];
m5_3 -> n47  [color=red, key=2, style=dotted];
m5_3 -> m5_6  [color=red, key=2, style=dotted];
m5_3 -> m5_7  [color=red, key=2, style=dotted];
m5_3 -> m5_12  [color=red, key=2, style=dotted];
m5_3 -> m5_13  [color=red, key=2, style=dotted];
m5_3 -> m5_14  [color=red, key=2, style=dotted];
m5_3 -> m5_16  [color=red, key=1, label="lambda expression", style=dashed];
m5_5 -> m5_0  [color=blue, key=0, style=bold];
m5_37 -> m5_38  [key=0, style=solid];
m5_17 -> m5_18  [color=red, key=0, style=solid];
m5_17 -> m5_19  [color=red, key=2, style=dotted];
m5_16 -> m5_17  [color=red, key=0, style=solid];
m5_18 -> m5_16  [color=blue, key=0, style=bold];
m5_27 -> m5_28  [color=red, key=0, style=solid];
m5_27 -> m5_19  [color=red, key=2, style=dotted];
m5_26 -> m5_27  [color=red, key=0, style=solid];
m5_28 -> m5_26  [color=blue, key=0, style=bold];
m5_38 -> m5_39  [key=0, style=solid];
m5_38 -> m5_40  [key=2, style=dotted];
m5_39 -> m5_37  [color=blue, key=0, style=bold];
m5_41 -> m5_17  [color=red, key=1, label=specs, style=dashed];
m5_42 -> m5_27  [color=red, key=1, label=specs, style=dashed];
m6_0 -> m6_1  [key=0, style=solid];
m6_1 -> m6_2  [key=0, style=solid];
m6_1 -> m6_7  [key=2, style=dotted];
m6_1 -> m6_5  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m6_2 -> m6_3  [color=red, key=0, style=solid];
m6_2 -> m6_8  [key=2, style=dotted];
m6_2 -> m6_9  [key=2, style=dotted];
m6_2 -> m6_10  [key=2, style=dotted];
m6_2 -> m6_11  [key=2, style=dotted];
m6_2 -> m6_18  [color=red, key=1, label=specs, style=dashed];
m6_5 -> m6_6  [key=0, style=solid];
m6_5 -> m6_15  [key=2, style=dotted];
m6_5 -> m6_16  [key=2, style=dotted];
m6_5 -> m6_21  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_3 -> m6_4  [color=red, key=0, style=solid];
m6_3 -> m6_12  [color=red, key=2, style=dotted];
m6_3 -> m6_13  [color=red, key=2, style=dotted];
m6_3 -> m6_14  [color=red, key=2, style=dotted];
m6_3 -> m6_17  [color=red, key=1, label="lambda expression", style=dashed];
m6_4 -> m6_5  [key=0, style=solid];
m6_4 -> m6_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_6 -> m6_0  [color=blue, key=0, style=bold];
m6_43 -> m6_44  [key=0, style=solid];
m6_18 -> m6_19  [color=red, key=0, style=solid];
m6_18 -> m6_20  [color=red, key=2, style=dotted];
m6_17 -> m6_18  [color=red, key=0, style=solid];
m6_22 -> m6_23  [key=0, style=solid];
m6_22 -> n58  [key=2, style=dotted];
m6_22 -> m6_25  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_22 -> m6_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m6_21 -> m6_22  [key=0, style=solid];
m6_19 -> m6_17  [color=blue, key=0, style=bold];
m6_23 -> m6_21  [color=blue, key=0, style=bold];
m6_25 -> m6_26  [key=0, style=solid];
m6_26 -> m6_27  [key=0, style=solid];
m6_26 -> m6_28  [key=2, style=dotted];
m6_26 -> m6_29  [key=2, style=dotted];
m6_26 -> m6_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m6_27 -> m6_25  [color=blue, key=0, style=bold];
m6_38 -> m6_39  [color=red, key=0, style=solid];
m6_38 -> m6_20  [color=red, key=2, style=dotted];
m6_37 -> m6_38  [color=red, key=0, style=solid];
m6_41 -> m6_42  [key=0, style=solid];
m6_41 -> n58  [key=2, style=dotted];
m6_41 -> m6_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_41 -> m6_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m6_40 -> m6_41  [key=0, style=solid];
m6_39 -> m6_37  [color=blue, key=0, style=bold];
m6_42 -> m6_40  [color=blue, key=0, style=bold];
m6_44 -> m6_45  [key=0, style=solid];
m6_44 -> m6_28  [key=2, style=dotted];
m6_44 -> m6_29  [key=2, style=dotted];
m6_44 -> m6_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m6_45 -> m6_43  [color=blue, key=0, style=bold];
m6_30 -> m6_31  [key=0, style=solid];
m6_31 -> m6_32  [key=0, style=solid];
m6_31 -> m6_7  [key=2, style=dotted];
m6_31 -> m6_35  [color=darkseagreen4, key=1, label=expectedSequence, style=dashed];
m6_32 -> m6_33  [color=red, key=0, style=solid];
m6_32 -> m6_8  [key=2, style=dotted];
m6_32 -> m6_9  [key=2, style=dotted];
m6_32 -> m6_10  [key=2, style=dotted];
m6_32 -> m6_11  [key=2, style=dotted];
m6_32 -> m6_38  [color=red, key=1, label=specs, style=dashed];
m6_35 -> m6_36  [key=0, style=solid];
m6_35 -> m6_15  [key=2, style=dotted];
m6_35 -> m6_16  [key=2, style=dotted];
m6_35 -> m6_40  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m6_33 -> m6_34  [color=red, key=0, style=solid];
m6_33 -> m6_12  [color=red, key=2, style=dotted];
m6_33 -> m6_13  [color=red, key=2, style=dotted];
m6_33 -> m6_14  [color=red, key=2, style=dotted];
m6_33 -> m6_37  [color=red, key=1, label="lambda expression", style=dashed];
m6_34 -> m6_35  [key=0, style=solid];
m6_34 -> m6_41  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_36 -> m6_30  [color=blue, key=0, style=bold];
m6_46 -> m6_18  [color=red, key=1, label=specs, style=dashed];
m6_47 -> m6_22  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_48 -> m6_26  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m6_49 -> m6_38  [color=red, key=1, label=specs, style=dashed];
m6_50 -> m6_41  [color=darkseagreen4, key=1, label=options, style=dashed];
m6_51 -> m6_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", style=dashed];
m7_6 -> m7_7  [key=0, style=solid];
m7_6 -> m7_8  [color=darkseagreen4, key=1, label="CommandLine.Pair<System.Reflection.MethodInfo, CommandLine.HelpOptionAttribute>", style=dashed];
m7_6 -> m7_11  [color=darkseagreen4, key=1, label=object, style=dashed];
m7_7 -> m7_8  [key=0, style=solid];
m7_8 -> m7_9  [key=0, style=solid];
m7_8 -> m7_11  [color=darkseagreen4, key=1, label=method, style=dashed];
m7_8 -> m7_8  [color=green, key=3, label="Local variable System.Func<object> makeType", style=bold];
m7_11 -> m7_12  [key=0, style=solid];
m7_11 -> m7_15  [key=2, style=dotted];
m7_11 -> m7_11  [color=darkorchid, key=3, label="Local variable System.Func<object> makeType", style=bold];
m7_9 -> m7_10  [key=0, style=solid];
m7_9 -> m7_11  [key=0, style=solid];
m7_9 -> m7_13  [key=2, style=dotted];
m7_10 -> m7_12  [key=0, style=solid];
m7_10 -> m7_14  [key=2, style=dotted];
m7_12 -> m7_6  [color=blue, key=0, style=bold];
m7_13 -> m7_16  [key=0, style=solid];
m7_13 -> m7_8  [color=green, key=3, label="Parameter variable System.Reflection.MethodInfo value", style=bold];
m7_16 -> m7_17  [key=0, style=solid];
m7_16 -> m7_18  [key=2, style=dotted];
m7_17 -> m7_13  [color=blue, key=0, style=bold];
m7_0 -> m7_1  [key=0, style=solid];
m7_1 -> m7_0  [color=blue, key=0, style=bold];
m7_2 -> m7_3  [key=0, style=solid];
m7_2 -> m7_4  [color=darkseagreen4, key=1, label=string, style=dashed];
m7_3 -> m7_4  [key=0, style=solid];
m7_4 -> m7_5  [key=0, style=solid];
m7_5 -> m7_2  [color=blue, key=0, style=bold];
m7_19 -> m7_3  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
m7_19 -> m7_4  [color=darkseagreen4, key=1, label="CommandLine.HelpOptionAttribute", style=dashed];
}
