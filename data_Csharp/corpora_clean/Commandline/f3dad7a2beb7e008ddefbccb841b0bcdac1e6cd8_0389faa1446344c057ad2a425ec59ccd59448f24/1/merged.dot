digraph  {
n448 [label="CommandLine.Text.HelpText", span=""];
n449 [label=auto, span=""];
n450 [label="CommandLine.ParserResult<T>", span=""];
n451 [label=pr, span=""];
n452 [label="CommandLine.Text.HelpText", span=""];
n453 [label="System.Func<CommandLine.Error, string>", span=""];
n454 [label=int, span=""];
n455 [label=text, span=""];
n456 [label=s, span=""];
n457 [label=string, span=""];
n458 [label=maxLength, span=""];
n459 [label=remainingSpace, span=""];
n460 [label=int, span=""];
n461 [label="CommandLine.Core.Specification", span=""];
n462 [label=optionHelpText, span=""];
n463 [label="CommandLine.Core.OptionSpecification", span=""];
n464 [label="CommandLine.Core.ValueSpecification", span=""];
n0 [label="Entry CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()"];
n1 [label="Exit CommandLine.Text.HelpText.HelpText()", span="36-36", cluster="CommandLine.Text.HelpText.HelpText()"];
n2 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)"];
n3 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)", span="48-48", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder)"];
n4 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)"];
n5 [label="Exit CommandLine.Text.HelpText.HelpText(string)", span="59-59", cluster="CommandLine.Text.HelpText.HelpText(string)"];
n6 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)"];
n7 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)", span="70-70", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string)"];
n8 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)"];
n9 [label="Exit CommandLine.Text.HelpText.HelpText(string, string)", span="82-82", cluster="CommandLine.Text.HelpText.HelpText(string, string)"];
n10 [label="Entry CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n11 [label="sentenceBuilder == null", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n13 [label="heading == null", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n15 [label="copyright == null", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0];
n19 [label="this.sentenceBuilder = sentenceBuilder", span="104-104", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0];
n20 [label="this.heading = heading", span="105-105", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0];
n21 [label="this.copyright = copyright", span="106-106", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0];
n12 [label="throw new ArgumentNullException(''sentenceBuilder'');", span="97-97", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n14 [label="throw new ArgumentNullException(''heading'');", span="98-98", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n16 [label="throw new ArgumentNullException(''copyright'');", span="99-99", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0];
n17 [label="preOptionsHelp = new StringBuilder(BuilderCapacity)", span="101-101", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0];
n18 [label="postOptionsHelp = new StringBuilder(BuilderCapacity)", span="102-102", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", color=red, community=0];
n24 [label="Entry System.Text.StringBuilder.StringBuilder(int)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(int)"];
n22 [label="Exit CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)", span="95-95", cluster="CommandLine.Text.HelpText.HelpText(CommandLine.Text.SentenceBuilder, string, string)"];
n23 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
n25 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n26 [label="var auto = new HelpText {\r\n                Heading = HeadingInfo.Default,\r\n                Copyright = CopyrightInfo.Default,\r\n                AdditionalNewLineAfterOption = true,\r\n                AddDashesToOption = !verbsIndex\r\n            }", span="202-207", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n28 [label="onError != null && parserResult.Tag == ParserResultType.NotParsed", span="211-211", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n29 [label="errors = ((NotParsed<T>)parserResult).Errors", span="213-213", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n31 [label="auto = onError(auto)", span="216-216", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n34 [label="var usageText = HelpText.RenderUsageText(parserResult, onExample)", span="225-225", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n38 [label="(verbsIndex && parserResult.TypeInfo.Choices.Any())\r\n                || errors.Any(e => e.Tag == ErrorType.NoVerbSelectedError)", span="232-233", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n40 [label="auto.AddVerbs(parserResult.TypeInfo.Choices.ToArray())", span="236-236", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n41 [label="auto.AddOptions(parserResult)", span="239-239", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n27 [label="var errors = Enumerable.Empty<Error>()", span="209-209", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n32 [label="ReflectionHelper.GetAttribute<AssemblyLicenseAttribute>()\r\n                .Do(license => license.AddToHelpText(auto, true))", span="219-220", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n59 [label="license.AddToHelpText(auto, true)", span="220-220", cluster="lambda expression"];
n33 [label="ReflectionHelper.GetAttribute<AssemblyUsageAttribute>()\r\n                .Do(usage => usage.AddToHelpText(auto, true))", span="222-223", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n63 [label="usage.AddToHelpText(auto, true)", span="223-223", cluster="lambda expression"];
n36 [label="auto.AddPreOptionsLine(auto.SentenceBuilder.UsageHeadingText())", span="228-228", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n37 [label="auto.AddPreOptionsText(usageText)", span="229-229", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n39 [label="auto.AddDashesToOption = false", span="235-235", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n42 [label="return auto;", span="241-241", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n44 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()"];
n30 [label="FilterMeaningfulErrors(errors).Any()", span="215-215", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n45 [label="Entry CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="531-531", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n46 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()"];
n47 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)"];
n48 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()", span="12-12", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAttribute<TAttribute>()"];
n49 [label="Entry CSharpx.Maybe<T>.Do<T>(System.Action<T>)", span="300-300", cluster="CSharpx.Maybe<T>.Do<T>(System.Action<T>)"];
n58 [label="Entry lambda expression", span="220-220", cluster="lambda expression"];
n62 [label="Entry lambda expression", span="223-223", cluster="lambda expression"];
n35 [label="usageText.Length > 0", span="226-226", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n50 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="468-468", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n51 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()"];
n52 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="319-319", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
n53 [label="Entry CommandLine.Text.HelpText.AddPreOptionsText(string)", span="334-334", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
n54 [label="Entry Unk.Any", span="", cluster="Unk.Any"];
n65 [label="Entry lambda expression", span="233-233", cluster="lambda expression"];
n55 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()"];
n56 [label="Entry CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="370-370", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n57 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="353-353", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n43 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)", span="196-196", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>, bool)"];
n60 [label="Exit lambda expression", span="220-220", cluster="lambda expression"];
n61 [label="Entry CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)", span="155-155", cluster="CommandLine.Text.MultilineTextAttribute.AddToHelpText(CommandLine.Text.HelpText, bool)"];
n64 [label="Exit lambda expression", span="223-223", cluster="lambda expression"];
n66 [label="e.Tag == ErrorType.NoVerbSelectedError", span="233-233", cluster="lambda expression"];
n67 [label="Exit lambda expression", span="233-233", cluster="lambda expression"];
n68 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="254-254", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n69 [label="parserResult.Tag != ParserResultType.NotParsed", span="256-256", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n71 [label="var errors = ((NotParsed<T>)parserResult).Errors", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n75 [label="return AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e);", span="265-265", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n92 [label="DefaultParsingErrorsHandler(parserResult, current)", span="265-265", cluster="lambda expression"];
n78 [label="return err.Matched\r\n                ? AutoBuild(pr, current => DefaultParsingErrorsHandler(pr, current), e => e)\r\n                : AutoBuild(parserResult, current => DefaultParsingErrorsHandler(parserResult, current), e => e, true);", span="269-271", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n105 [label="DefaultParsingErrorsHandler(parserResult, current)", span="271-271", cluster="lambda expression"];
n70 [label="throw new ArgumentException(''Excepting NotParsed<T> type.'', ''parserResult'');", span="257-257", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n72 [label="errors.Any(e => e.Tag == ErrorType.VersionRequestedError)", span="261-261", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n74 [label="!errors.Any(e => e.Tag == ErrorType.HelpVerbRequestedError)", span="264-264", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n76 [label="var err = errors.OfType<HelpVerbRequestedError>().Single()", span="267-267", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n73 [label="return new HelpText(HeadingInfo.Default).AddPreOptionsLine(Environment.NewLine);", span="262-262", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n85 [label="Entry lambda expression", span="261-261", cluster="lambda expression"];
n88 [label="Entry lambda expression", span="264-264", cluster="lambda expression"];
n77 [label="var pr = new NotParsed<object>(TypeInfo.Create(err.Type), Enumerable.Empty<Error>())", span="268-268", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n81 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()"];
n82 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()"];
n83 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n84 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)"];
n99 [label="DefaultParsingErrorsHandler(pr, current)", span="270-270", cluster="lambda expression"];
n79 [label="Exit CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="254-254", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)"];
n80 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
n91 [label="Entry lambda expression", span="265-265", cluster="lambda expression"];
n95 [label="Entry lambda expression", span="265-265", cluster="lambda expression"];
n98 [label="Entry lambda expression", span="270-270", cluster="lambda expression"];
n101 [label="Entry lambda expression", span="270-270", cluster="lambda expression"];
n104 [label="Entry lambda expression", span="271-271", cluster="lambda expression"];
n107 [label="Entry lambda expression", span="271-271", cluster="lambda expression"];
n86 [label="e.Tag == ErrorType.VersionRequestedError", span="261-261", cluster="lambda expression"];
n87 [label="Exit lambda expression", span="261-261", cluster="lambda expression"];
n89 [label="e.Tag == ErrorType.HelpVerbRequestedError", span="264-264", cluster="lambda expression"];
n90 [label="Exit lambda expression", span="264-264", cluster="lambda expression"];
n93 [label="Exit lambda expression", span="265-265", cluster="lambda expression"];
n94 [label="Entry CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="279-279", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n96 [label=e, span="265-265", cluster="lambda expression"];
n97 [label="Exit lambda expression", span="265-265", cluster="lambda expression"];
n100 [label="Exit lambda expression", span="270-270", cluster="lambda expression"];
n102 [label=e, span="270-270", cluster="lambda expression"];
n103 [label="Exit lambda expression", span="270-270", cluster="lambda expression"];
n106 [label="Exit lambda expression", span="271-271", cluster="lambda expression"];
n108 [label=e, span="271-271", cluster="lambda expression"];
n109 [label="Exit lambda expression", span="271-271", cluster="lambda expression"];
n110 [label="parserResult == null", span="281-281", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n112 [label="current == null", span="282-282", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n114 [label="FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors).Empty()", span="284-284", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n115 [label="return current;", span="285-285", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n116 [label="var errors = RenderParsingErrorsText(parserResult,\r\n                current.SentenceBuilder.FormatError,\r\n                current.SentenceBuilder.FormatMutuallyExclusiveSetErrors,\r\n                2)", span="287-290", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n118 [label="return current;", span="292-292", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n119 [label="current.AddPreOptionsLine(\r\n                string.Concat(Environment.NewLine, current.SentenceBuilder.ErrorsHeadingText()))", span="294-295", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n121 [label="lines.ForEach(\r\n                line => current.AddPreOptionsLine(line))", span="298-299", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n131 [label="current.AddPreOptionsLine(line)", span="299-299", cluster="lambda expression"];
n122 [label="return current;", span="301-301", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n111 [label="throw new ArgumentNullException(''parserResult'');", span="281-281", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n113 [label="throw new ArgumentNullException(''current'');", span="282-282", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n124 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="31-31", cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()"];
n117 [label="string.IsNullOrEmpty(errors)", span="291-291", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n125 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="420-420", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n120 [label="var lines = errors.Split(\r\n                new[] { Environment.NewLine }, StringSplitOptions.None)", span="296-297", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n126 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
n127 [label="Entry string.Concat(string, string)", span="0-0", cluster="string.Concat(string, string)"];
n128 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)"];
n129 [label="Entry System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)", span="231-231", cluster="System.Collections.Generic.IEnumerable<T>.ForEach<T>(System.Action<T>)"];
n130 [label="Entry lambda expression", span="299-299", cluster="lambda expression"];
n123 [label="Exit CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)", span="279-279", cluster="CommandLine.Text.HelpText.DefaultParsingErrorsHandler<T>(CommandLine.ParserResult<T>, CommandLine.Text.HelpText)"];
n132 [label="Exit lambda expression", span="299-299", cluster="lambda expression"];
n133 [label="Entry CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="309-309", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
n134 [label="return info.ToString();", span="311-311", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
n135 [label="Exit CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)", span="309-309", cluster="CommandLine.Text.HelpText.implicit operator string(CommandLine.Text.HelpText)"];
n136 [label="Entry CommandLine.Text.HelpText.ToString()", span="513-513", cluster="CommandLine.Text.HelpText.ToString()"];
n137 [label="return AddPreOptionsLine(value, MaximumDisplayWidth);", span="321-321", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
n138 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="319-319", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)"];
n139 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="651-651", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n140 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="329-329", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
n141 [label="return AddLine(postOptionsHelp, value);", span="331-331", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
n142 [label="Exit CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="329-329", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)"];
n143 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="757-757", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n144 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="336-336", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
n145 [label="lines.ForEach(line => AddPreOptionsLine(line))", span="337-337", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
n146 [label="return this;", span="338-338", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
n148 [label="Entry lambda expression", span="337-337", cluster="lambda expression"];
n147 [label="Exit CommandLine.Text.HelpText.AddPreOptionsText(string)", span="334-334", cluster="CommandLine.Text.HelpText.AddPreOptionsText(string)"];
n149 [label="AddPreOptionsLine(line)", span="337-337", cluster="lambda expression"];
n150 [label="Exit lambda expression", span="337-337", cluster="lambda expression"];
n151 [label="Entry CommandLine.Text.HelpText.AddPostOptionsText(string)", span="341-341", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
n152 [label="var lines = text.Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="343-343", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
n153 [label="lines.ForEach(line => AddPostOptionsLine(line))", span="344-344", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
n154 [label="return this;", span="345-345", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
n156 [label="Entry lambda expression", span="344-344", cluster="lambda expression"];
n155 [label="Exit CommandLine.Text.HelpText.AddPostOptionsText(string)", span="341-341", cluster="CommandLine.Text.HelpText.AddPostOptionsText(string)"];
n157 [label="AddPostOptionsLine(line)", span="344-344", cluster="lambda expression"];
n158 [label="Exit lambda expression", span="344-344", cluster="lambda expression"];
n159 [label="result == null", span="356-356", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n161 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="358-361", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n160 [label="throw new ArgumentNullException(''result'');", span="356-356", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n162 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="353-353", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)"];
n163 [label="Entry CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="572-572", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n164 [label="Entry CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="613-613", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n165 [label="types == null", span="372-372", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n167 [label="types.Length == 0", span="373-373", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n169 [label="return AddOptionsImpl(\r\n                AdaptVerbsToSpecifications(types),\r\n                SentenceBuilder.RequiredWord(),\r\n                MaximumDisplayWidth);", span="375-378", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n166 [label="throw new ArgumentNullException(''types'');", span="372-372", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n168 [label="throw new ArgumentOutOfRangeException(''types'');", span="373-373", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n170 [label="Exit CommandLine.Text.HelpText.AddVerbs(params System.Type[])", span="370-370", cluster="CommandLine.Text.HelpText.AddVerbs(params System.Type[])"];
n171 [label="Entry System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)", span="0-0", cluster="System.ArgumentOutOfRangeException.ArgumentOutOfRangeException(string)"];
n172 [label="Entry CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="601-601", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
n173 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="387-387", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n174 [label="result == null", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n176 [label="return AddOptionsImpl(\r\n                GetSpecificationsFromType(result.TypeInfo.Current),\r\n                SentenceBuilder.RequiredWord(),\r\n                maximumLength);", span="391-394", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n175 [label="throw new ArgumentNullException(''result'');", span="389-389", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n177 [label="Exit CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)", span="387-387", cluster="CommandLine.Text.HelpText.AddOptions<T>(int, CommandLine.ParserResult<T>)"];
n178 [label="Entry CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="404-404", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n179 [label="types == null", span="406-406", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n181 [label="types.Length == 0", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n183 [label="return AddOptionsImpl(AdaptVerbsToSpecifications(types), SentenceBuilder.RequiredWord(), maximumLength);", span="409-409", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n180 [label="throw new ArgumentNullException(''types'');", span="406-406", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n182 [label="throw new ArgumentOutOfRangeException(''types'');", span="407-407", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n184 [label="Exit CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])", span="404-404", cluster="CommandLine.Text.HelpText.AddVerbs(int, params System.Type[])"];
n185 [label="parserResult == null", span="426-426", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n187 [label="var meaningfulErrors =\r\n                FilterMeaningfulErrors(((NotParsed<T>)parserResult).Errors)", span="428-429", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n191 [label="meaningfulErrors\r\n                .Where(e => e.Tag != ErrorType.MutuallyExclusiveSetError)\r\n                .ForEach(\r\n                    error =>\r\n                        {\r\n                            var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error)); \r\n                            text.AppendLine(line.ToString());\r\n                        })", span="434-442", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n203 [label="var line = new StringBuilder(indent.Spaces())\r\n                                .Append(formatError(error))", span="439-440", cluster="lambda expression"];
n192 [label="return text.AppendIfNotEmpty(\r\n                formatMutuallyExclusiveSetErrors(\r\n                    meaningfulErrors.OfType<MutuallyExclusiveSetError>()))\r\n                .ToString();", span="444-447", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n186 [label="throw new ArgumentNullException(''parserResult'');", span="426-426", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n188 [label="meaningfulErrors.Empty()", span="430-430", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n189 [label="return string.Empty;", span="431-431", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n190 [label="var text = new StringBuilder()", span="433-433", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n194 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()"];
n204 [label="text.AppendLine(line.ToString())", span="441-441", cluster="lambda expression"];
n195 [label="Entry Unk.Where", span="", cluster="Unk.Where"];
n196 [label="Entry Unk.ForEach", span="", cluster="Unk.ForEach"];
n199 [label="Entry lambda expression", span="435-435", cluster="lambda expression"];
n202 [label="Entry lambda expression", span="437-442", cluster="lambda expression"];
n193 [label="Exit CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="420-420", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)"];
n197 [label="Entry System.Text.StringBuilder.AppendIfNotEmpty(params string[])", span="57-57", cluster="System.Text.StringBuilder.AppendIfNotEmpty(params string[])"];
n198 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n200 [label="e.Tag != ErrorType.MutuallyExclusiveSetError", span="435-435", cluster="lambda expression"];
n201 [label="Exit lambda expression", span="435-435", cluster="lambda expression"];
n206 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)"];
n207 [label="Entry int.Spaces()", span="30-30", cluster="int.Spaces()"];
n208 [label="Entry Unk.formatError", span="", cluster="Unk.formatError"];
n209 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)"];
n205 [label="Exit lambda expression", span="437-442", cluster="lambda expression"];
n210 [label="Entry System.Text.StringBuilder.AppendLine(string)", span="0-0", cluster="System.Text.StringBuilder.AppendLine(string)"];
n211 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="456-456", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)"];
n212 [label="return RenderUsageText(parserResult, example => example);", span="458-458", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)"];
n213 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="456-456", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)"];
n214 [label="Entry lambda expression", span="458-458", cluster="lambda expression"];
n215 [label=example, span="458-458", cluster="lambda expression"];
n216 [label="Exit lambda expression", span="458-458", cluster="lambda expression"];
n217 [label="parserResult == null", span="470-470", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n219 [label="var usage = GetUsageFromType(parserResult.TypeInfo.Current)", span="472-472", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n227 [label="var example = mapperFunc(e)", span="483-483", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n218 [label="throw new ArgumentNullException(''parserResult'');", span="470-470", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n220 [label="usage.MatchNothing()", span="473-473", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n236 [label="Entry CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="586-586", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
n222 [label="var usageTuple = usage.FromJust()", span="476-476", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n221 [label="return string.Empty;", span="474-474", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n237 [label="Entry CSharpx.Maybe<T>.MatchNothing()", span="57-57", cluster="CSharpx.Maybe<T>.MatchNothing()"];
n223 [label="var examples = usageTuple.Item2", span="477-477", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n238 [label="Entry CSharpx.Maybe<T>.FromJust<T>()", span="342-342", cluster="CSharpx.Maybe<T>.FromJust<T>()"];
n224 [label="var appAlias = usageTuple.Item1.ApplicationAlias ?? ReflectionHelper.GetAssemblyName()", span="478-478", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n226 [label=examples, span="481-481", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n225 [label="var text = new StringBuilder(BuilderCapacity)", span="480-480", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n239 [label="Entry CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()", span="23-23", cluster="CommandLine.Infrastructure.ReflectionHelper.GetAssemblyName()"];
n231 [label="var commandLine = new StringBuilder(2.Spaces())\r\n                        .Append(appAlias)\r\n                        .Append(' ')\r\n                        .Append(Parser.Default.FormatCommandLine(example.Sample,\r\n                            config =>\r\n                                {\r\n                                    config.PreferShortName = s.PreferShortName;\r\n                                    config.GroupSwitches = s.GroupSwitches;\r\n                                    config.UseEqualToken = s.UseEqualToken;\r\n                                }))\r\n                        .Append(Environment.NewLine)", span="490-500", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n233 [label="text.Append(exampleText)", span="503-503", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n234 [label="return text.ToString();", span="506-506", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n228 [label="var exampleText = new StringBuilder(example.HelpText)\r\n                    .Append(':')\r\n                    .Append(Environment.NewLine)", span="484-486", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n229 [label="var styles = example.GetFormatStylesOrDefault()", span="487-487", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n240 [label="Entry System.Text.StringBuilder.Append(char)", span="0-0", cluster="System.Text.StringBuilder.Append(char)"];
n232 [label="exampleText.Append(commandLine)", span="501-501", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n230 [label=styles, span="488-488", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n241 [label="Entry CommandLine.Text.Example.GetFormatStylesOrDefault()", span="103-103", cluster="CommandLine.Text.Example.GetFormatStylesOrDefault()"];
n245 [label="config.PreferShortName = s.PreferShortName", span="496-496", cluster="lambda expression"];
n246 [label="config.GroupSwitches = s.GroupSwitches", span="497-497", cluster="lambda expression"];
n247 [label="config.UseEqualToken = s.UseEqualToken", span="498-498", cluster="lambda expression"];
n242 [label="Entry CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)", span="87-87", cluster="CommandLine.Parser.FormatCommandLine<T>(T, System.Action<CommandLine.UnParserSettings>)"];
n244 [label="Entry lambda expression", span="494-499", cluster="lambda expression"];
n243 [label="Entry System.Text.StringBuilder.Append(object)", span="0-0", cluster="System.Text.StringBuilder.Append(object)"];
n235 [label="Exit CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)", span="468-468", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Text.Example, CommandLine.Text.Example>)"];
n248 [label="Exit lambda expression", span="494-499", cluster="lambda expression"];
n249 [label="int ExtraLength = 10", span="515-515", cluster="CommandLine.Text.HelpText.ToString()"];
n250 [label="return\r\n                new StringBuilder(\r\n                    heading.SafeLength() + copyright.SafeLength() + preOptionsHelp.SafeLength() +\r\n                        optionsHelp.SafeLength() + ExtraLength).Append(heading)\r\n                    .AppendWhen(!string.IsNullOrEmpty(copyright), Environment.NewLine, copyright)\r\n                    .AppendWhen(preOptionsHelp.Length > 0, Environment.NewLine, preOptionsHelp.ToString())\r\n                    .AppendWhen(\r\n                        optionsHelp != null && optionsHelp.Length > 0,\r\n                        Environment.NewLine,\r\n                        Environment.NewLine,\r\n                        optionsHelp.SafeToString())\r\n                    .AppendWhen(postOptionsHelp.Length > 0, Environment.NewLine, postOptionsHelp.ToString())\r\n                .ToString();", span="516-528", cluster="CommandLine.Text.HelpText.ToString()"];
n251 [label="Exit CommandLine.Text.HelpText.ToString()", span="513-513", cluster="CommandLine.Text.HelpText.ToString()"];
n252 [label="Entry string.SafeLength()", span="40-40", cluster="string.SafeLength()"];
n253 [label="Entry System.Text.StringBuilder.SafeLength()", span="73-73", cluster="System.Text.StringBuilder.SafeLength()"];
n254 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params string[])", span="9-9", cluster="System.Text.StringBuilder.AppendWhen(bool, params string[])"];
n255 [label="Entry System.Text.StringBuilder.SafeToString()", span="66-66", cluster="System.Text.StringBuilder.SafeToString()"];
n256 [label="return errors.Where(e => e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError);", span="533-533", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n257 [label="Exit CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="531-531", cluster="CommandLine.Text.HelpText.FilterMeaningfulErrors(System.Collections.Generic.IEnumerable<CommandLine.Error>)"];
n258 [label="Entry lambda expression", span="533-533", cluster="lambda expression"];
n259 [label="e.Tag != ErrorType.HelpRequestedError && e.Tag != ErrorType.HelpVerbRequestedError", span="533-533", cluster="lambda expression"];
n260 [label="Exit lambda expression", span="533-533", cluster="lambda expression"];
n261 [label="Entry CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="536-536", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n262 [label="builder.AppendWhen(builder.Length > 0, Environment.NewLine)", span="538-538", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n264 [label="var words = value.Split(' ')", span="542-542", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n267 [label="words[i].Length < (maximumLength - wordBuffer)", span="545-545", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n268 [label="builder.Append(words[i])", span="547-547", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n270 [label="(maximumLength - wordBuffer) > 1 && i != words.Length - 1", span="549-549", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n271 [label="builder.Append('' '')", span="551-551", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n273 [label="words[i].Length >= maximumLength && wordBuffer == 0", span="555-555", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n274 [label="builder.Append(words[i].Substring(0, maximumLength))", span="557-557", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n275 [label="wordBuffer = maximumLength", span="558-558", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n277 [label="value = value.Substring(Math.Min(wordBuffer, value.Length))", span="564-564", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n278 [label="builder.AppendWhen(value.Length > 0, Environment.NewLine)", span="565-565", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n279 [label="value.Length > maximumLength", span="567-567", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n280 [label="builder.Append(value)", span="569-569", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n263 [label="var wordBuffer = 0", span="541-541", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n269 [label="wordBuffer += words[i].Length", span="548-548", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n265 [label="var i = 0", span="543-543", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n282 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])"];
n266 [label="i < words.Length", span="543-543", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n276 [label="i++", span="543-543", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n272 [label="wordBuffer++", span="552-552", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n283 [label="Entry string.Substring(int, int)", span="0-0", cluster="string.Substring(int, int)"];
n284 [label="Entry System.Math.Min(int, int)", span="0-0", cluster="System.Math.Min(int, int)"];
n285 [label="Entry string.Substring(int)", span="0-0", cluster="string.Substring(int)"];
n281 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)", span="536-536", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string, int)"];
n286 [label="var specs = type.GetSpecifications(Specification.FromProperty)", span="574-574", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n287 [label="var optionSpecs = specs\r\n                .OfType<OptionSpecification>()\r\n                .Concat(new[] { MakeHelpEntry(), MakeVersionEntry() })", span="575-577", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n291 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="17-17", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)"];
n288 [label="var valueSpecs = specs\r\n                .OfType<ValueSpecification>()\r\n                .OrderBy(v => v.Index)", span="578-580", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n292 [label="Entry CommandLine.Text.HelpText.MakeHelpEntry()", span="631-631", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
n293 [label="Entry CommandLine.Text.HelpText.MakeVersionEntry()", span="641-641", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
n294 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)"];
n289 [label="return Enumerable.Empty<Specification>()\r\n                .Concat(optionSpecs)\r\n                .Concat(valueSpecs);", span="581-583", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n295 [label="Entry System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.OrderBy<TSource, TKey>(System.Func<TSource, TKey>)"];
n296 [label="Entry lambda expression", span="580-580", cluster="lambda expression"];
n290 [label="Exit CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)", span="572-572", cluster="CommandLine.Text.HelpText.GetSpecificationsFromType(System.Type)"];
n297 [label="v.Index", span="580-580", cluster="lambda expression"];
n298 [label="Exit lambda expression", span="580-580", cluster="lambda expression"];
n299 [label="return type.GetUsageData().Map(\r\n                tuple =>\r\n                {\r\n                    var prop = tuple.Item1;\r\n                    var attr = tuple.Item2;\r\n\r\n                    var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null);\r\n\r\n                    return Tuple.Create(attr, examples);\r\n                });", span="588-598", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
n300 [label="Exit CommandLine.Text.HelpText.GetUsageFromType(System.Type)", span="586-586", cluster="CommandLine.Text.HelpText.GetUsageFromType(System.Type)"];
n301 [label="Entry System.Type.GetUsageData()", span="39-39", cluster="System.Type.GetUsageData()"];
n302 [label="Entry CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)", span="265-265", cluster="CSharpx.Maybe<T1>.Map<T1, T2>(System.Func<T1, T2>)"];
n303 [label="Entry lambda expression", span="589-598", cluster="lambda expression"];
n304 [label="var prop = tuple.Item1", span="591-591", cluster="lambda expression"];
n305 [label="var attr = tuple.Item2", span="592-592", cluster="lambda expression"];
n306 [label="var examples = (IEnumerable<Example>)prop\r\n                        .GetValue(null, BindingFlags.Public | BindingFlags.Static | BindingFlags.GetProperty, null, null, null)", span="594-595", cluster="lambda expression"];
n307 [label="return Tuple.Create(attr, examples);", span="597-597", cluster="lambda expression"];
n309 [label="Entry System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)", span="0-0", cluster="System.Reflection.PropertyInfo.GetValue(object, System.Reflection.BindingFlags, System.Reflection.Binder, object[], System.Globalization.CultureInfo)"];
n308 [label="Exit lambda expression", span="589-598", cluster="lambda expression"];
n310 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)"];
n311 [label="return (from verbTuple in Verb.SelectFromTypes(types)\r\n                    select\r\n                        OptionSpecification.NewSwitch(\r\n                            string.Empty,\r\n                            verbTuple.Item1.Name,\r\n                            false,\r\n                            verbTuple.Item1.HelpText,\r\n                            string.Empty)).Concat(new[] { MakeHelpEntry(), MakeVersionEntry() });", span="603-610", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
n312 [label="Exit CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)", span="601-601", cluster="CommandLine.Text.HelpText.AdaptVerbsToSpecifications(System.Collections.Generic.IEnumerable<System.Type>)"];
n313 [label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40", cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)"];
n314 [label="Entry CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)", span="45-45", cluster="CommandLine.Core.OptionSpecification.NewSwitch(string, string, bool, string, string)"];
n315 [label="Entry Unk.Concat", span="", cluster="Unk.Concat"];
n316 [label="var maxLength = GetMaxLength(specifications)", span="618-618", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n318 [label="var remainingSpace = maximumLength - (maxLength + 6)", span="622-622", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n319 [label="specifications.ForEach(\r\n                option =>\r\n                    AddOption(requiredWord, maxLength, option, remainingSpace))", span="624-626", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n324 [label="AddOption(requiredWord, maxLength, option, remainingSpace)", span="626-626", cluster="lambda expression"];
n317 [label="optionsHelp = new StringBuilder(BuilderCapacity)", span="620-620", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n322 [label="Entry CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="764-764", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
n320 [label="return this;", span="628-628", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n323 [label="Entry lambda expression", span="625-626", cluster="lambda expression"];
n321 [label="Exit CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)", span="613-613", cluster="CommandLine.Text.HelpText.AddOptionsImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>, string, int)"];
n325 [label="Exit lambda expression", span="625-626", cluster="lambda expression"];
n326 [label="Entry CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="658-658", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n327 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''help'',\r\n                false,\r\n                sentenceBuilder.HelpCommandText(AddDashesToOption),\r\n                string.Empty);", span="633-638", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
n328 [label="Exit CommandLine.Text.HelpText.MakeHelpEntry()", span="631-631", cluster="CommandLine.Text.HelpText.MakeHelpEntry()"];
n329 [label="return OptionSpecification.NewSwitch(\r\n                string.Empty,\r\n                ''version'',\r\n                false,\r\n                sentenceBuilder.VersionCommandText(AddDashesToOption),\r\n                string.Empty);", span="643-648", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
n330 [label="Exit CommandLine.Text.HelpText.MakeVersionEntry()", span="641-641", cluster="CommandLine.Text.HelpText.MakeVersionEntry()"];
n331 [label="AddLine(preOptionsHelp, value, maximumLength)", span="653-653", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n332 [label="return this;", span="655-655", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n333 [label="Exit CommandLine.Text.HelpText.AddPreOptionsLine(string, int)", span="651-651", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string, int)"];
n334 [label="optionsHelp.Append(''  '')", span="660-660", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n335 [label="var name = new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.Tag == SpecificationType.Option,\r\n                    it => it.Append(AddOptionName(maxLength, (OptionSpecification)specification)),\r\n                    it => it.Append(AddValueName(maxLength, (ValueSpecification)specification)))", span="661-665", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n371 [label="it.Append(AddOptionName(maxLength, (OptionSpecification)specification))", span="664-664", cluster="lambda expression"];
n375 [label="it.Append(AddValueName(maxLength, (ValueSpecification)specification))", span="665-665", cluster="lambda expression"];
n336 [label="optionsHelp\r\n                .Append(name.Length < maxLength ? name.ToString().PadRight(maxLength) : name.ToString())\r\n                .Append(''    '')", span="667-669", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n337 [label="var optionHelpText = specification.HelpText", span="671-671", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n338 [label="addEnumValuesToHelpText && specification.EnumValues.Any()", span="673-673", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n339 [label="optionHelpText += '' Valid values: '' + string.Join('', '', specification.EnumValues)", span="674-674", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n340 [label="specification.DefaultValue.Do(\r\n                defaultValue => optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText)", span="676-677", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n341 [label="specification.Required", span="679-679", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n342 [label="optionHelpText = ''{0} ''.FormatInvariant(requiredWord) + optionHelpText", span="680-680", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n348 [label="words[i].Length < (widthOfHelpText - wordBuffer)", span="690-690", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n351 [label="(widthOfHelpText - wordBuffer) > 1 && i != words.Length - 1", span="694-694", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n354 [label="words[i].Length >= widthOfHelpText && wordBuffer == 0", span="700-700", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n355 [label="optionsHelp.Append(words[i].Substring(0, widthOfHelpText))", span="702-702", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n356 [label="wordBuffer = widthOfHelpText", span="703-703", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n359 [label="optionsHelp.AppendWhen(optionHelpText.Length > 0, Environment.NewLine,\r\n                        new string(' ', maxLength + 6))", span="711-712", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n360 [label="optionHelpText.Length > widthOfHelpText", span="714-714", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n364 [label="Entry System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="41-41", cluster="System.Text.StringBuilder.BimapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)"];
n370 [label="Entry lambda expression", span="664-664", cluster="lambda expression"];
n374 [label="Entry lambda expression", span="665-665", cluster="lambda expression"];
n365 [label="Entry string.PadRight(int)", span="0-0", cluster="string.PadRight(int)"];
n366 [label="Entry string.Join(string, System.Collections.Generic.IEnumerable<string>)", span="0-0", cluster="string.Join(string, System.Collections.Generic.IEnumerable<string>)"];
n378 [label="Entry lambda expression", span="677-677", cluster="lambda expression"];
n379 [label="optionHelpText = ''(Default: {0}) ''.FormatLocal(defaultValue) + optionHelpText", span="677-677", cluster="lambda expression"];
n343 [label="!string.IsNullOrEmpty(optionHelpText)", span="682-682", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n345 [label="var words = optionHelpText.Split(' ')", span="687-687", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n358 [label="optionHelpText = optionHelpText.Substring(Math.Min(wordBuffer, optionHelpText.Length)).Trim()", span="710-710", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n361 [label="optionsHelp\r\n                .Append(optionHelpText)\r\n                .Append(Environment.NewLine)\r\n                .AppendWhen(additionalNewLineAfterOption, Environment.NewLine)", span="717-720", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n367 [label="Entry string.FormatInvariant(params object[])", span="20-20", cluster="string.FormatInvariant(params object[])"];
n344 [label="var wordBuffer = 0", span="686-686", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n350 [label="wordBuffer += words[i].Length", span="693-693", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n346 [label="var i = 0", span="688-688", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n347 [label="i < words.Length", span="688-688", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n349 [label="optionsHelp.Append(words[i])", span="692-692", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n357 [label="i++", span="688-688", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n353 [label="wordBuffer++", span="697-697", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n352 [label="optionsHelp.Append('' '')", span="696-696", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n368 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
n369 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)"];
n362 [label="return this;", span="722-722", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n363 [label="Exit CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)", span="658-658", cluster="CommandLine.Text.HelpText.AddOption(string, int, CommandLine.Core.Specification, int)"];
n372 [label="Exit lambda expression", span="664-664", cluster="lambda expression"];
n373 [label="Entry CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="725-725", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
n376 [label="Exit lambda expression", span="665-665", cluster="lambda expression"];
n377 [label="Entry CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="745-745", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
n380 [label="Exit lambda expression", span="677-677", cluster="lambda expression"];
n381 [label="Entry string.FormatLocal(params object[])", span="25-25", cluster="string.FormatLocal(params object[])"];
n382 [label="return\r\n                new StringBuilder(maxLength)\r\n                    .MapIf(\r\n                        specification.ShortName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', ''))\r\n                    .MapIf(\r\n                        specification.LongName.Length > 0,\r\n                        it => it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue))\r\n                    .ToString();", span="727-742", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
n386 [label="it\r\n                            .AppendWhen(addDashesToOption, '-')\r\n                            .AppendFormat(''{0}'', specification.ShortName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                            .AppendWhen(specification.LongName.Length > 0, '', '')", span="731-735", cluster="lambda expression"];
n392 [label="it\r\n                            .AppendWhen(addDashesToOption, ''--'')\r\n                            .AppendFormat(''{0}'', specification.LongName)\r\n                            .AppendFormatWhen(specification.MetaValue.Length > 0, ''={0}'', specification.MetaValue)", span="738-741", cluster="lambda expression"];
n383 [label="Exit CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)", span="725-725", cluster="CommandLine.Text.HelpText.AddOptionName(int, CommandLine.Core.OptionSpecification)"];
n384 [label="Entry System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)", span="49-49", cluster="System.Text.StringBuilder.MapIf(bool, System.Func<System.Text.StringBuilder, System.Text.StringBuilder>)"];
n385 [label="Entry lambda expression", span="731-735", cluster="lambda expression"];
n391 [label="Entry lambda expression", span="738-741", cluster="lambda expression"];
n387 [label="Exit lambda expression", span="731-735", cluster="lambda expression"];
n388 [label="Entry System.Text.StringBuilder.AppendWhen(bool, params char[])", span="18-18", cluster="System.Text.StringBuilder.AppendWhen(bool, params char[])"];
n389 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)"];
n390 [label="Entry System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])", span="27-27", cluster="System.Text.StringBuilder.AppendFormatWhen(bool, string, params object[])"];
n393 [label="Exit lambda expression", span="738-741", cluster="lambda expression"];
n394 [label="return new StringBuilder(maxLength)\r\n                .BimapIf(\r\n                    specification.MetaName.Length > 0,\r\n                    it => it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index),\r\n                    it => it.AppendFormat(''value pos. {0}'', specification.Index))\r\n                .AppendFormatWhen(\r\n                    specification.MetaValue.Length > 0, '' {0}'', specification.MetaValue)\r\n                .ToString();", span="747-754", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
n397 [label="it.AppendFormat(''{0} (pos. {1})'', specification.MetaName, specification.Index)", span="750-750", cluster="lambda expression"];
n401 [label="it.AppendFormat(''value pos. {0}'', specification.Index)", span="751-751", cluster="lambda expression"];
n395 [label="Exit CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)", span="745-745", cluster="CommandLine.Text.HelpText.AddValueName(int, CommandLine.Core.ValueSpecification)"];
n396 [label="Entry lambda expression", span="750-750", cluster="lambda expression"];
n400 [label="Entry lambda expression", span="751-751", cluster="lambda expression"];
n398 [label="Exit lambda expression", span="750-750", cluster="lambda expression"];
n399 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)"];
n402 [label="Exit lambda expression", span="751-751", cluster="lambda expression"];
n403 [label="AddLine(builder, value, MaximumDisplayWidth)", span="759-759", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n404 [label="return this;", span="761-761", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n405 [label="Exit CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)", span="757-757", cluster="CommandLine.Text.HelpText.AddLine(System.Text.StringBuilder, string)"];
n406 [label="return specifications.Aggregate(0,\r\n                (length, spec) =>\r\n                    {\r\n                        var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec);\r\n\r\n                        return Math.Max(length, specLength);\r\n                    });", span="766-774", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
n407 [label="Exit CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)", span="764-764", cluster="CommandLine.Text.HelpText.GetMaxLength(System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>)"];
n408 [label="Entry Unk.Aggregate", span="", cluster="Unk.Aggregate"];
n409 [label="Entry lambda expression", span="767-774", cluster="lambda expression"];
n410 [label="var specLength = spec.Tag == SpecificationType.Option\r\n                            ? GetMaxOptionLength((OptionSpecification)spec)\r\n                            : GetMaxValueLength((ValueSpecification)spec)", span="769-771", cluster="lambda expression"];
n411 [label="return Math.Max(length, specLength);", span="773-773", cluster="lambda expression"];
n413 [label="Entry CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="778-778", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n414 [label="Entry CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="813-813", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n412 [label="Exit lambda expression", span="767-774", cluster="lambda expression"];
n415 [label="Entry System.Math.Max(int, int)", span="0-0", cluster="System.Math.Max(int, int)"];
n416 [label="var specLength = 0", span="780-780", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n417 [label="var hasShort = spec.ShortName.Length > 0", span="782-782", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n418 [label="var hasLong = spec.LongName.Length > 0", span="783-783", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n420 [label="spec.MetaValue.Length > 0", span="786-786", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n421 [label="metaLength = spec.MetaValue.Length + 1", span="787-787", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n428 [label="specLength += spec.LongName.Length", span="800-800", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n423 [label="++specLength", span="791-791", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n433 [label="specLength += 2", span="808-808", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n434 [label="return specLength;", span="810-810", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n422 [label=hasShort, span="789-789", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n432 [label="hasShort && hasLong", span="807-807", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n419 [label="var metaLength = 0", span="785-785", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n427 [label=hasLong, span="798-798", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n426 [label="specLength += metaLength", span="795-795", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n431 [label="specLength += metaLength", span="804-804", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n424 [label=AddDashesToOption, span="792-792", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n425 [label="++specLength", span="793-793", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n429 [label=AddDashesToOption, span="801-801", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n430 [label="specLength += 2", span="802-802", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n435 [label="Exit CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)", span="778-778", cluster="CommandLine.Text.HelpText.GetMaxOptionLength(CommandLine.Core.OptionSpecification)"];
n436 [label="var specLength = 0", span="815-815", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n437 [label="var hasMeta = spec.MetaName.Length > 0", span="817-817", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n439 [label="spec.MetaValue.Length > 0", span="820-820", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n440 [label="metaLength = spec.MetaValue.Length + 1", span="821-821", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n442 [label="specLength += spec.MetaName.Length + spec.Index.ToStringInvariant().Length + 8", span="824-824", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n443 [label="specLength += spec.Index.ToStringInvariant().Length + 11", span="826-826", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n438 [label="var metaLength = 0", span="819-819", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n441 [label=hasMeta, span="823-823", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n444 [label="specLength += metaLength", span="828-828", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n447 [label="Entry T.ToStringInvariant<T>()", span="15-15", cluster="T.ToStringInvariant<T>()"];
n445 [label="return specLength;", span="830-830", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
n446 [label="Exit CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)", span="813-813", cluster="CommandLine.Text.HelpText.GetMaxValueLength(CommandLine.Core.ValueSpecification)"];
d19 [label="var other = obj as Example", span="65-65", cluster="CommandLine.Text.Example.Equals(object)", color=green, community=0];
d18 [label="Entry CommandLine.Text.Example.Equals(object)", span="63-63", cluster="CommandLine.Text.Example.Equals(object)"];
d24 [label="Entry CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="88-88", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d20 [label="other != null", span="66-66", cluster="CommandLine.Text.Example.Equals(object)"];
d21 [label="return Equals(other);", span="68-68", cluster="CommandLine.Text.Example.Equals(object)"];
d22 [label="return base.Equals(obj);", span="71-71", cluster="CommandLine.Text.Example.Equals(object)", color=green, community=0];
d41 [label="CommandLine.Text.Example", span=""];
d23 [label="Exit CommandLine.Text.Example.Equals(object)", span="63-63", cluster="CommandLine.Text.Example.Equals(object)"];
d25 [label="Entry object.Equals(object)", span="0-0", cluster="object.Equals(object)"];
d33 [label="Exit CommandLine.Text.Example.Equals(CommandLine.Text.Example)", span="88-88", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d30 [label="other == null", span="90-90", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d32 [label="return HelpText.Equals(other.HelpText)\r\n                && FormatStyles.SequenceEqual(other.FormatStyles)\r\n                && Sample.Equals(other.Sample);", span="95-97", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d31 [label="return false;", span="92-92", cluster="CommandLine.Text.Example.Equals(CommandLine.Text.Example)"];
d7 [label="this.helpText = helpText", span="28-28", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d8 [label="this.formatStyles = formatStyles", span="29-29", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d9 [label="this.sample = sample", span="30-30", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d27 [label="return new { HelpText, FormatStyles, Sample }.GetHashCode();", span="80-80", cluster="CommandLine.Text.Example.GetHashCode()"];
d34 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)"];
d35 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual"];
d0 [label="Entry CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="22-22", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d5 [label="sample == null", span="26-26", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d10 [label="Exit CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)", span="22-22", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d26 [label="Entry CommandLine.Text.Example.GetHashCode()", span="78-78", cluster="CommandLine.Text.Example.GetHashCode()"];
d28 [label="Exit CommandLine.Text.Example.GetHashCode()", span="78-78", cluster="CommandLine.Text.Example.GetHashCode()"];
d29 [label="Entry object.GetHashCode()", span="0-0", cluster="object.GetHashCode()"];
d1 [label="string.IsNullOrEmpty(helpText)", span="24-24", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d3 [label="formatStyles == null", span="25-25", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d6 [label="throw new ArgumentNullException(''sample'');", span="26-26", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d2 [label="throw new ArgumentException(''helpText can't be null or empty'', ''helpText'');", span="24-24", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d4 [label="throw new ArgumentNullException(''formatStyles'');", span="25-25", cluster="CommandLine.Text.Example.Example(string, System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>, object)"];
d11 [label="Entry string.IsNullOrEmpty(string)", span="0-0", cluster="string.IsNullOrEmpty(string)"];
d13 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)"];
d12 [label="Entry System.ArgumentException.ArgumentException(string, string)", span="0-0", cluster="System.ArgumentException.ArgumentException(string, string)"];
m1_61 [label="Entry CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", span="18-18", cluster="CommandLine.Core.SpecificationProperty.WithValue(CommandLine.Infrastructure.Maybe<object>)", file="HelpText.cs"];
m1_48 [label="Entry System.Type.IsScalar()", span="33-33", cluster="System.Type.IsScalar()", file="HelpText.cs"];
m1_43 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", span="149-149", cluster="CommandLine.Infrastructure.Maybe<T>.IsJust<T>()", file="HelpText.cs"];
m1_6 [label="Entry Unk.>", span="", cluster="Unk.>", file="HelpText.cs"];
m1_34 [label="Entry CommandLine.Core.Specification.CountOfMaxNumberOfValues()", span="51-51", cluster="CommandLine.Core.Specification.CountOfMaxNumberOfValues()", file="HelpText.cs"];
m1_57 [label="Entry CommandLine.Core.Specification.IsValue()", span="16-16", cluster="CommandLine.Core.Specification.IsValue()", file="HelpText.cs"];
m1_7 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="HelpText.cs"];
m1_44 [label="Entry CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", span="144-144", cluster="CommandLine.Infrastructure.Maybe<T>.IsNothing<T>()", file="HelpText.cs"];
m1_42 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="HelpText.cs"];
m1_45 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="HelpText.cs"];
m1_46 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="316-316", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpText.cs"];
m1_0 [label="Entry CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_1 [label="var propAndErrors = MapValuesImpl(specProps, values, converter)", span="16-16", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_2 [label="return StatePair.Create(\r\n                propAndErrors.Select(pe => pe.Item1),\r\n                propAndErrors.Select(pe => pe.Item2)\r\n                    .OfType<Just<Error>>().Select(e => e.Value)\r\n                );", span="18-22", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_3 [label="Exit CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="11-11", cluster="CommandLine.Core.ValueMapper.MapValues(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_39 [label="Entry System.Tuple.Create<T1, T2>(T1, T2)", span="0-0", cluster="System.Tuple.Create<T1, T2>(T1, T2)", file="HelpText.cs"];
m1_58 [label="Entry lambda expression", span="57-57", cluster="lambda expression", file="HelpText.cs"];
m1_8 [label="Entry lambda expression", span="19-19", cluster="lambda expression", file="HelpText.cs"];
m1_11 [label="Entry lambda expression", span="20-20", cluster="lambda expression", file="HelpText.cs"];
m1_14 [label="Entry lambda expression", span="21-21", cluster="lambda expression", file="HelpText.cs"];
m1_9 [label="pe.Item1", span="19-19", cluster="lambda expression", file="HelpText.cs"];
m1_10 [label="Exit lambda expression", span="19-19", cluster="lambda expression", file="HelpText.cs"];
m1_12 [label="pe.Item2", span="20-20", cluster="lambda expression", file="HelpText.cs"];
m1_13 [label="Exit lambda expression", span="20-20", cluster="lambda expression", file="HelpText.cs"];
m1_15 [label="e.Value", span="21-21", cluster="lambda expression", file="HelpText.cs"];
m1_16 [label="Exit lambda expression", span="21-21", cluster="lambda expression", file="HelpText.cs"];
m1_59 [label="Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>())", span="57-57", cluster="lambda expression", file="HelpText.cs"];
m1_51 [label="Entry lambda expression", span="35-35", cluster="lambda expression", file="HelpText.cs"];
m1_54 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="HelpText.cs"];
m1_52 [label=n, span="35-35", cluster="lambda expression", file="HelpText.cs"];
m1_53 [label="Exit lambda expression", span="35-35", cluster="lambda expression", file="HelpText.cs"];
m1_55 [label="s.Specification.IsValue()", span="43-43", cluster="lambda expression", file="HelpText.cs"];
m1_56 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="HelpText.cs"];
m1_60 [label="Exit lambda expression", span="57-57", cluster="lambda expression", file="HelpText.cs"];
m1_33 [label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="HelpText.cs"];
m1_40 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="HelpText.cs"];
m1_37 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="HelpText.cs"];
m1_49 [label="Entry System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", span="0-0", cluster="System.Func<T1, T2, T3, TResult>.Invoke(T1, T2, T3)", file="HelpText.cs"];
m1_38 [label="Entry CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="HelpText.cs"];
m1_63 [label="return specification.Min.IsJust()\r\n                ? Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName))\r\n                : Maybe.Nothing<Error>();", span="69-71", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="HelpText.cs"];
m1_64 [label="Exit CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", span="67-67", cluster="CommandLine.Core.ValueMapper.MakeErrorInCaseOfMinConstraint(CommandLine.Core.Specification)", file="HelpText.cs"];
m1_47 [label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68", cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", file="HelpText.cs"];
m1_5 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="HelpText.cs"];
m1_50 [label="Entry CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", span="305-305", cluster="CommandLine.BadFormatConversionError.BadFormatConversionError(CommandLine.NameInfo)", file="HelpText.cs"];
m1_62 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="HelpText.cs"];
m1_35 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="HelpText.cs"];
m1_41 [label="Entry Unk.FirstOrDefault", span="", cluster="Unk.FirstOrDefault", file="HelpText.cs"];
m1_4 [label="Entry CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_17 [label="specProps.Empty()", span="30-30", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_18 [label="yield break;", span="32-32", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_22 [label="yield return\r\n                    Tuple.Create(pt, MakeErrorInCaseOfMinConstraint(pt.Specification));", span="38-39", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_23 [label="yield break;", span="40-40", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_26 [label="yield return\r\n                    Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                        pt, Maybe.Just<Error>(new SequenceOutOfRangeError(NameInfo.EmptyName)));", span="48-50", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_27 [label="yield break;", span="51-51", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_28 [label="yield return\r\n                converter(taken, pt.Property.PropertyType, pt.Specification.ConversionType.IsScalar())\r\n                    .Return(\r\n                        converted => Tuple.Create(pt.WithValue(Maybe.Just(converted)), Maybe.Nothing<Error>()),\r\n                        Tuple.Create<SpecificationProperty, Maybe<Error>>(\r\n                            pt, Maybe.Just<Error>(new BadFormatConversionError(NameInfo.EmptyName))));", span="54-59", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_30 [label="yield return value;", span="63-63", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_19 [label="var pt = specProps.First()", span="34-34", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_20 [label="var taken = values.Take(pt.Specification.CountOfMaxNumberOfValues().Return(n => n, values.Count()))", span="35-35", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_24 [label="var next = specProps.Skip(1).FirstOrDefault(s => s.Specification.IsValue()).ToMaybe()", span="43-43", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_25 [label="pt.Specification.Max.IsJust()\r\n                && next.IsNothing()\r\n                && values.Skip(taken.Count()).Any()", span="44-46", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_29 [label="MapValuesImpl(specProps.Skip(1), values.Skip(taken.Count()), converter)", span="61-61", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_21 [label="taken.Empty()", span="36-36", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_31 [label="Exit CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", span="25-25", cluster="CommandLine.Core.ValueMapper.MapValuesImpl(System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<string>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Type, bool, CommandLine.Infrastructure.Maybe<object>>)", file="HelpText.cs"];
m1_36 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="100-100", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="HelpText.cs"];
m1_65 [label=pt, span="", file="HelpText.cs"];
m2_18 [label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="66-66", cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", file="ParserTests.cs"];
m2_16 [label="Entry Unk.SingleOrDefault", span="", cluster="Unk.SingleOrDefault", file="ParserTests.cs"];
m2_11 [label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_12 [label="name == null", span="22-22", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_14 [label="return specifications.SingleOrDefault(\r\n                a => name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0')\r\n                .ToMaybe()\r\n                .Return(spec => Maybe.Just(spec.Separator), Maybe.Nothing<char>());", span="24-27", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_13 [label="throw new ArgumentNullException(''name'');", span="22-22", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_15 [label="Exit CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="19-19", cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_0 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_1 [label="name == null", span="14-14", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_3 [label="return specifications.Any(a => name.MatchName(a.ShortName, a.LongName, comparer));", span="16-16", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_2 [label="throw new ArgumentNullException(''name'');", span="14-14", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_4 [label="Exit CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="12-12", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="ParserTests.cs"];
m2_10 [label="Entry string.MatchName(string, string, System.StringComparer)", span="8-8", cluster="string.MatchName(string, string, System.StringComparer)", file="ParserTests.cs"];
m2_17 [label="Entry Unk.ToMaybe", span="", cluster="Unk.ToMaybe", file="ParserTests.cs"];
m2_26 [label="Entry Unk.Just", span="", cluster="Unk.Just", file="ParserTests.cs"];
m2_23 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="ParserTests.cs"];
m2_8 [label="name.MatchName(a.ShortName, a.LongName, comparer)", span="16-16", cluster="lambda expression", file="ParserTests.cs"];
m2_7 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="ParserTests.cs"];
m2_9 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="ParserTests.cs"];
m2_21 [label="name.MatchName(a.ShortName, a.LongName, comparer) && a.Separator != '\0'", span="25-25", cluster="lambda expression", file="ParserTests.cs"];
m2_20 [label="Entry lambda expression", span="25-25", cluster="lambda expression", file="ParserTests.cs"];
m2_22 [label="Exit lambda expression", span="25-25", cluster="lambda expression", file="ParserTests.cs"];
m2_24 [label="Maybe.Just(spec.Separator)", span="27-27", cluster="lambda expression", file="ParserTests.cs"];
m2_25 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="ParserTests.cs"];
m2_19 [label="Entry Unk.Return", span="", cluster="Unk.Return", file="ParserTests.cs"];
m2_6 [label="Entry Unk.Any", span="", cluster="Unk.Any", file="ParserTests.cs"];
m2_27 [label=string, span="", file="ParserTests.cs"];
m2_28 [label="System.StringComparer", span="", file="ParserTests.cs"];
m2_29 [label=string, span="", file="ParserTests.cs"];
m2_30 [label="System.StringComparer", span="", file="ParserTests.cs"];
n448 -> n17  [key=1, style=dashed, color=red, label="CommandLine.Text.HelpText"];
n448 -> n18  [key=1, style=dashed, color=red, label="CommandLine.Text.HelpText"];
n448 -> n19  [key=1, style=dashed, color=red, label="CommandLine.Text.HelpText"];
n448 -> n20  [key=1, style=dashed, color=red, label="CommandLine.Text.HelpText"];
n448 -> n21  [key=1, style=dashed, color=red, label="CommandLine.Text.HelpText"];
n448 -> n137  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n141  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n145  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n149  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n146  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n153  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n157  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n154  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n161  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n169  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n176  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n183  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n250  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n287  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n311  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n316  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n317  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n319  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n324  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n320  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n327  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n329  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n331  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n332  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n334  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n335  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n371  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n336  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n338  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n349  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n352  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n355  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n359  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n361  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n362  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n382  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n386  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n392  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n403  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n404  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n406  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n410  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n424  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n448 -> n429  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n449 -> n59  [key=1, style=dashed, color=darkseagreen4, label=auto];
n449 -> n63  [key=1, style=dashed, color=darkseagreen4, label=auto];
n450 -> n92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n450 -> n105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n451 -> n99  [key=1, style=dashed, color=darkseagreen4, label=pr];
n452 -> n131  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n453 -> n203  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
n454 -> n203  [key=1, style=dashed, color=darkseagreen4, label=int];
n455 -> n204  [key=1, style=dashed, color=darkseagreen4, label=text];
n456 -> n245  [key=1, style=dashed, color=darkseagreen4, label=s];
n456 -> n246  [key=1, style=dashed, color=darkseagreen4, label=s];
n456 -> n247  [key=1, style=dashed, color=darkseagreen4, label=s];
n457 -> n324  [key=1, style=dashed, color=darkseagreen4, label=string];
n458 -> n324  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n459 -> n324  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
n460 -> n371  [key=1, style=dashed, color=darkseagreen4, label=int];
n460 -> n375  [key=1, style=dashed, color=darkseagreen4, label=int];
n461 -> n371  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n461 -> n375  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n462 -> n379  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n463 -> n386  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n463 -> n392  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n464 -> n397  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n464 -> n401  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n0 -> n1  [key=0, style=solid];
n1 -> n0  [key=0, style=bold, color=blue];
n2 -> n3  [key=0, style=solid];
n3 -> n2  [key=0, style=bold, color=blue];
n4 -> n5  [key=0, style=solid];
n5 -> n4  [key=0, style=bold, color=blue];
n6 -> n7  [key=0, style=solid];
n7 -> n6  [key=0, style=bold, color=blue];
n8 -> n9  [key=0, style=solid];
n9 -> n8  [key=0, style=bold, color=blue];
n10 -> n11  [key=0, style=solid];
n10 -> n13  [key=1, style=dashed, color=darkseagreen4, label=string];
n10 -> n15  [key=1, style=dashed, color=red, label=string];
n10 -> n19  [key=1, style=dashed, color=red, label="CommandLine.Text.SentenceBuilder"];
n10 -> n20  [key=1, style=dashed, color=red, label=string];
n10 -> n21  [key=1, style=dashed, color=red, label=string];
n11 -> n12  [key=0, style=solid];
n11 -> n13  [key=0, style=solid];
n11 -> n242  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Reflection.MethodInfo value"];
n13 -> n14  [key=0, style=solid];
n13 -> n15  [key=0, style=solid, color=red];
n15 -> n16  [key=0, style=solid, color=red];
n15 -> n17  [key=0, style=solid, color=red];
n19 -> n20  [key=0, style=solid, color=red];
n20 -> n21  [key=0, style=solid, color=red];
n21 -> n22  [key=0, style=solid, color=red];
n21 -> n21  [key=3, color=red, style=bold, label="Field variable string DefaultHelpText"];
n12 -> n22  [key=0, style=solid];
n12 -> n23  [key=2, style=dotted];
n14 -> n22  [key=0, style=solid];
n14 -> n23  [key=2, style=dotted];
n16 -> n22  [key=0, style=solid, color=red];
n16 -> n23  [key=2, style=dotted, color=red];
n17 -> n18  [key=0, style=solid, color=red];
n17 -> n24  [key=2, style=dotted, color=red];
n18 -> n19  [key=0, style=solid, color=red];
n18 -> n24  [key=2, style=dotted, color=red];
n22 -> n10  [key=0, style=bold, color=blue];
n25 -> n26  [key=0, style=solid];
n25 -> n28  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> n29  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> n31  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.HelpText, CommandLine.Text.HelpText>"];
n25 -> n34  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> n38  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> n40  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n25 -> n41  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n26 -> n27  [key=0, style=solid];
n26 -> n0  [key=2, style=dotted];
n26 -> n31  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n32  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n59  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n33  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n63  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n36  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n37  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n39  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n40  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n41  [key=1, style=dashed, color=darkseagreen4, label=auto];
n26 -> n42  [key=1, style=dashed, color=darkseagreen4, label=auto];
n28 -> n29  [key=0, style=solid];
n28 -> n32  [key=0, style=solid];
n29 -> n30  [key=0, style=solid];
n29 -> n38  [key=1, style=dashed, color=darkseagreen4, label=errors];
n31 -> n32  [key=0, style=solid];
n31 -> n47  [key=2, style=dotted];
n31 -> n31  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n59  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n33  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n63  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n36  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n37  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n39  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n40  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n41  [key=1, style=dashed, color=darkseagreen4, label=auto];
n31 -> n42  [key=1, style=dashed, color=darkseagreen4, label=auto];
n34 -> n35  [key=0, style=solid];
n34 -> n50  [key=2, style=dotted];
n34 -> n37  [key=1, style=dashed, color=darkseagreen4, label=usageText];
n38 -> n39  [key=0, style=solid];
n38 -> n41  [key=0, style=solid];
n38 -> n46  [key=2, style=dotted];
n38 -> n54  [key=2, style=dotted];
n38 -> n65  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n40 -> n42  [key=0, style=solid];
n40 -> n55  [key=2, style=dotted];
n40 -> n56  [key=2, style=dotted];
n41 -> n42  [key=0, style=solid];
n41 -> n57  [key=2, style=dotted];
n27 -> n28  [key=0, style=solid];
n27 -> n44  [key=2, style=dotted];
n27 -> n38  [key=1, style=dashed, color=darkseagreen4, label=errors];
n32 -> n33  [key=0, style=solid];
n32 -> n48  [key=2, style=dotted];
n32 -> n49  [key=2, style=dotted];
n32 -> n58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n59 -> n60  [key=0, style=solid];
n59 -> n61  [key=2, style=dotted];
n33 -> n34  [key=0, style=solid];
n33 -> n48  [key=2, style=dotted];
n33 -> n49  [key=2, style=dotted];
n33 -> n62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n63 -> n64  [key=0, style=solid];
n63 -> n61  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n36 -> n51  [key=2, style=dotted];
n36 -> n52  [key=2, style=dotted];
n37 -> n38  [key=0, style=solid];
n37 -> n53  [key=2, style=dotted];
n39 -> n40  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n30 -> n45  [key=2, style=dotted];
n30 -> n46  [key=2, style=dotted];
n45 -> n256  [key=0, style=solid];
n45 -> n27  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<CommandLine.Error> errors"];
n58 -> n59  [key=0, style=solid];
n62 -> n63  [key=0, style=solid];
n35 -> n36  [key=0, style=solid];
n35 -> n38  [key=0, style=solid];
n50 -> n217  [key=0, style=solid];
n50 -> n219  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n50 -> n227  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Text.Example, CommandLine.Text.Example>"];
n50 -> n211  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
n50 -> n212  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<CommandLine.Text.Example, CommandLine.Text.Example> mapperFunc"];
n52 -> n137  [key=0, style=solid];
n52 -> n121  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n52 -> n145  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n52 -> n139  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPreOptionsLine"];
n53 -> n144  [key=0, style=solid];
n53 -> n34  [key=3, color=darkorchid, style=bold, label="Parameter variable string text"];
n65 -> n66  [key=0, style=solid];
n56 -> n165  [key=0, style=solid];
n56 -> n167  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n56 -> n169  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n56 -> n164  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
n57 -> n159  [key=0, style=solid];
n57 -> n161  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n57 -> n164  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
n43 -> n25  [key=0, style=bold, color=blue];
n60 -> n58  [key=0, style=bold, color=blue];
n64 -> n62  [key=0, style=bold, color=blue];
n66 -> n67  [key=0, style=solid];
n67 -> n65  [key=0, style=bold, color=blue];
n68 -> n69  [key=0, style=solid];
n68 -> n71  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n68 -> n75  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n68 -> n92  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n68 -> n78  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n68 -> n105  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n68 -> n52  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
n68 -> n25  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AutoBuild"];
n69 -> n70  [key=0, style=solid];
n69 -> n71  [key=0, style=solid];
n71 -> n72  [key=0, style=solid];
n71 -> n74  [key=1, style=dashed, color=darkseagreen4, label=errors];
n71 -> n76  [key=1, style=dashed, color=darkseagreen4, label=errors];
n75 -> n79  [key=0, style=solid];
n75 -> n25  [key=2, style=dotted];
n75 -> n91  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n75 -> n95  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n92 -> n93  [key=0, style=solid];
n92 -> n94  [key=2, style=dotted];
n78 -> n79  [key=0, style=solid];
n78 -> n25  [key=2, style=dotted];
n78 -> n98  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n78 -> n101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n78 -> n104  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n78 -> n107  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n105 -> n106  [key=0, style=solid];
n105 -> n94  [key=2, style=dotted];
n70 -> n79  [key=0, style=solid];
n70 -> n80  [key=2, style=dotted];
n72 -> n73  [key=0, style=solid];
n72 -> n74  [key=0, style=solid];
n72 -> n54  [key=2, style=dotted];
n72 -> n85  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n74 -> n75  [key=0, style=solid];
n74 -> n76  [key=0, style=solid];
n74 -> n54  [key=2, style=dotted];
n74 -> n88  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n76 -> n77  [key=0, style=solid];
n76 -> n81  [key=2, style=dotted];
n76 -> n82  [key=2, style=dotted];
n76 -> n78  [key=1, style=dashed, color=darkseagreen4, label=err];
n73 -> n79  [key=0, style=solid];
n73 -> n4  [key=2, style=dotted];
n73 -> n52  [key=2, style=dotted];
n85 -> n86  [key=0, style=solid];
n88 -> n89  [key=0, style=solid];
n77 -> n78  [key=0, style=solid];
n77 -> n83  [key=2, style=dotted];
n77 -> n84  [key=2, style=dotted];
n77 -> n44  [key=2, style=dotted];
n77 -> n99  [key=1, style=dashed, color=darkseagreen4, label=pr];
n99 -> n100  [key=0, style=solid];
n99 -> n94  [key=2, style=dotted];
n79 -> n68  [key=0, style=bold, color=blue];
n91 -> n92  [key=0, style=solid];
n95 -> n96  [key=0, style=solid];
n98 -> n99  [key=0, style=solid];
n101 -> n102  [key=0, style=solid];
n104 -> n105  [key=0, style=solid];
n107 -> n108  [key=0, style=solid];
n86 -> n87  [key=0, style=solid];
n87 -> n85  [key=0, style=bold, color=blue];
n89 -> n90  [key=0, style=solid];
n90 -> n88  [key=0, style=bold, color=blue];
n93 -> n91  [key=0, style=bold, color=blue];
n94 -> n110  [key=0, style=solid];
n94 -> n112  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n94 -> n114  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n94 -> n115  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n94 -> n116  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n94 -> n118  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n94 -> n119  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n94 -> n121  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n94 -> n131  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n94 -> n122  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.HelpText"];
n94 -> n68  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
n94 -> n77  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.ParserResult<T> parserResult"];
n94 -> n75  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
n94 -> n78  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Text.HelpText current"];
n94 -> n94  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText DefaultParsingErrorsHandler"];
n96 -> n97  [key=0, style=solid];
n97 -> n95  [key=0, style=bold, color=blue];
n100 -> n98  [key=0, style=bold, color=blue];
n102 -> n103  [key=0, style=solid];
n103 -> n101  [key=0, style=bold, color=blue];
n106 -> n104  [key=0, style=bold, color=blue];
n108 -> n109  [key=0, style=solid];
n109 -> n107  [key=0, style=bold, color=blue];
n110 -> n111  [key=0, style=solid];
n110 -> n112  [key=0, style=solid];
n112 -> n113  [key=0, style=solid];
n112 -> n114  [key=0, style=solid];
n114 -> n115  [key=0, style=solid];
n114 -> n116  [key=0, style=solid];
n114 -> n45  [key=2, style=dotted];
n114 -> n124  [key=2, style=dotted];
n115 -> n123  [key=0, style=solid];
n116 -> n117  [key=0, style=solid];
n116 -> n125  [key=2, style=dotted];
n116 -> n120  [key=1, style=dashed, color=darkseagreen4, label=errors];
n118 -> n123  [key=0, style=solid];
n119 -> n120  [key=0, style=solid];
n119 -> n51  [key=2, style=dotted];
n119 -> n127  [key=2, style=dotted];
n119 -> n52  [key=2, style=dotted];
n121 -> n122  [key=0, style=solid];
n121 -> n129  [key=2, style=dotted];
n121 -> n130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n131 -> n132  [key=0, style=solid];
n131 -> n52  [key=2, style=dotted];
n122 -> n123  [key=0, style=solid];
n111 -> n123  [key=0, style=solid];
n111 -> n23  [key=2, style=dotted];
n113 -> n123  [key=0, style=solid];
n113 -> n23  [key=2, style=dotted];
n117 -> n118  [key=0, style=solid];
n117 -> n119  [key=0, style=solid];
n117 -> n126  [key=2, style=dotted];
n125 -> n185  [key=0, style=solid];
n125 -> n187  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserResult<T>"];
n125 -> n191  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
n125 -> n203  [key=1, style=dashed, color=darkseagreen4, label="System.Func<CommandLine.Error, string>"];
n125 -> n192  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>"];
n120 -> n121  [key=0, style=solid];
n120 -> n128  [key=2, style=dotted];
n130 -> n131  [key=0, style=solid];
n123 -> n94  [key=0, style=bold, color=blue];
n132 -> n130  [key=0, style=bold, color=blue];
n133 -> n134  [key=0, style=solid];
n133 -> n136  [key=3, color=darkorchid, style=bold, label="method methodReturn string op_Implicit"];
n134 -> n135  [key=0, style=solid];
n134 -> n136  [key=2, style=dotted];
n135 -> n133  [key=0, style=bold, color=blue];
n136 -> n249  [key=0, style=solid];
n137 -> n138  [key=0, style=solid];
n137 -> n139  [key=2, style=dotted];
n138 -> n52  [key=0, style=bold, color=blue];
n139 -> n331  [key=0, style=solid];
n139 -> n52  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n140 -> n141  [key=0, style=solid];
n140 -> n143  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddPostOptionsLine"];
n140 -> n153  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n141 -> n142  [key=0, style=solid];
n141 -> n143  [key=2, style=dotted];
n142 -> n140  [key=0, style=bold, color=blue];
n143 -> n403  [key=0, style=solid];
n143 -> n239  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Text.StringBuilder builder"];
n143 -> n140  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n144 -> n145  [key=0, style=solid];
n144 -> n128  [key=2, style=dotted];
n145 -> n146  [key=0, style=solid];
n145 -> n129  [key=2, style=dotted];
n145 -> n148  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n146 -> n147  [key=0, style=solid];
n148 -> n149  [key=0, style=solid];
n147 -> n53  [key=0, style=bold, color=blue];
n149 -> n150  [key=0, style=solid];
n149 -> n52  [key=2, style=dotted];
n150 -> n148  [key=0, style=bold, color=blue];
n151 -> n152  [key=0, style=solid];
n152 -> n153  [key=0, style=solid];
n152 -> n128  [key=2, style=dotted];
n153 -> n154  [key=0, style=solid];
n153 -> n129  [key=2, style=dotted];
n153 -> n156  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n154 -> n155  [key=0, style=solid];
n156 -> n157  [key=0, style=solid];
n155 -> n151  [key=0, style=bold, color=blue];
n157 -> n158  [key=0, style=solid];
n157 -> n140  [key=2, style=dotted];
n158 -> n156  [key=0, style=bold, color=blue];
n159 -> n160  [key=0, style=solid];
n159 -> n161  [key=0, style=solid];
n161 -> n162  [key=0, style=solid];
n161 -> n163  [key=2, style=dotted];
n161 -> n51  [key=2, style=dotted];
n161 -> n164  [key=2, style=dotted];
n160 -> n162  [key=0, style=solid];
n160 -> n23  [key=2, style=dotted];
n162 -> n57  [key=0, style=bold, color=blue];
n163 -> n286  [key=0, style=solid];
n164 -> n316  [key=0, style=solid];
n164 -> n318  [key=1, style=dashed, color=darkseagreen4, label=int];
n164 -> n319  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Specification>"];
n164 -> n324  [key=1, style=dashed, color=darkseagreen4, label=string];
n165 -> n166  [key=0, style=solid];
n165 -> n167  [key=0, style=solid];
n167 -> n168  [key=0, style=solid];
n167 -> n169  [key=0, style=solid];
n169 -> n170  [key=0, style=solid];
n169 -> n172  [key=2, style=dotted];
n169 -> n51  [key=2, style=dotted];
n169 -> n164  [key=2, style=dotted];
n166 -> n170  [key=0, style=solid];
n166 -> n23  [key=2, style=dotted];
n168 -> n170  [key=0, style=solid];
n168 -> n171  [key=2, style=dotted];
n170 -> n56  [key=0, style=bold, color=blue];
n172 -> n311  [key=0, style=solid];
n172 -> n56  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
n172 -> n178  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Collections.Generic.IEnumerable<System.Type> types"];
n173 -> n174  [key=0, style=solid];
n173 -> n176  [key=1, style=dashed, color=darkseagreen4, label=int];
n173 -> n164  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddOptions"];
n174 -> n175  [key=0, style=solid];
n174 -> n176  [key=0, style=solid];
n176 -> n177  [key=0, style=solid];
n176 -> n163  [key=2, style=dotted];
n176 -> n51  [key=2, style=dotted];
n176 -> n164  [key=2, style=dotted];
n175 -> n177  [key=0, style=solid];
n175 -> n23  [key=2, style=dotted];
n177 -> n173  [key=0, style=bold, color=blue];
n178 -> n179  [key=0, style=solid];
n178 -> n181  [key=1, style=dashed, color=darkseagreen4, label="params System.Type[]"];
n178 -> n183  [key=1, style=dashed, color=darkseagreen4, label=int];
n178 -> n164  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Text.HelpText AddVerbs"];
n179 -> n180  [key=0, style=solid];
n179 -> n181  [key=0, style=solid];
n181 -> n182  [key=0, style=solid];
n181 -> n183  [key=0, style=solid];
n183 -> n184  [key=0, style=solid];
n183 -> n172  [key=2, style=dotted];
n183 -> n51  [key=2, style=dotted];
n183 -> n164  [key=2, style=dotted];
n180 -> n184  [key=0, style=solid];
n180 -> n23  [key=2, style=dotted];
n182 -> n184  [key=0, style=solid];
n182 -> n171  [key=2, style=dotted];
n184 -> n178  [key=0, style=bold, color=blue];
n185 -> n186  [key=0, style=solid];
n185 -> n187  [key=0, style=solid];
n187 -> n188  [key=0, style=solid];
n187 -> n45  [key=2, style=dotted];
n187 -> n191  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
n187 -> n192  [key=1, style=dashed, color=darkseagreen4, label=meaningfulErrors];
n191 -> n192  [key=0, style=solid];
n191 -> n195  [key=2, style=dotted];
n191 -> n196  [key=2, style=dotted];
n191 -> n199  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n191 -> n202  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n203 -> n204  [key=0, style=solid];
n203 -> n206  [key=2, style=dotted];
n203 -> n207  [key=2, style=dotted];
n203 -> n208  [key=2, style=dotted];
n203 -> n209  [key=2, style=dotted];
n192 -> n193  [key=0, style=solid];
n192 -> n81  [key=2, style=dotted];
n192 -> n47  [key=2, style=dotted];
n192 -> n197  [key=2, style=dotted];
n192 -> n198  [key=2, style=dotted];
n186 -> n193  [key=0, style=solid];
n186 -> n23  [key=2, style=dotted];
n188 -> n189  [key=0, style=solid];
n188 -> n190  [key=0, style=solid];
n188 -> n124  [key=2, style=dotted];
n189 -> n193  [key=0, style=solid];
n190 -> n191  [key=0, style=solid];
n190 -> n194  [key=2, style=dotted];
n190 -> n204  [key=1, style=dashed, color=darkseagreen4, label=text];
n190 -> n192  [key=1, style=dashed, color=darkseagreen4, label=text];
n204 -> n205  [key=0, style=solid];
n204 -> n198  [key=2, style=dotted];
n204 -> n210  [key=2, style=dotted];
n199 -> n200  [key=0, style=solid];
n202 -> n203  [key=0, style=solid];
n193 -> n125  [key=0, style=bold, color=blue];
n200 -> n201  [key=0, style=solid];
n201 -> n199  [key=0, style=bold, color=blue];
n205 -> n202  [key=0, style=bold, color=blue];
n211 -> n212  [key=0, style=solid];
n211 -> n50  [key=3, color=darkorchid, style=bold, label="method methodReturn string RenderUsageText"];
n212 -> n213  [key=0, style=solid];
n212 -> n50  [key=2, style=dotted];
n212 -> n214  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n213 -> n211  [key=0, style=bold, color=blue];
n214 -> n215  [key=0, style=solid];
n215 -> n216  [key=0, style=solid];
n216 -> n214  [key=0, style=bold, color=blue];
n217 -> n218  [key=0, style=solid];
n217 -> n219  [key=0, style=solid];
n219 -> n220  [key=0, style=solid];
n219 -> n236  [key=2, style=dotted];
n219 -> n222  [key=1, style=dashed, color=darkseagreen4, label=usage];
n227 -> n228  [key=0, style=solid];
n227 -> n47  [key=2, style=dotted];
n227 -> n229  [key=1, style=dashed, color=darkseagreen4, label=example];
n227 -> n231  [key=1, style=dashed, color=darkseagreen4, label=example];
n218 -> n235  [key=0, style=solid];
n218 -> n23  [key=2, style=dotted];
n220 -> n221  [key=0, style=solid];
n220 -> n222  [key=0, style=solid];
n220 -> n237  [key=2, style=dotted];
n236 -> n299  [key=0, style=solid];
n222 -> n223  [key=0, style=solid];
n222 -> n238  [key=2, style=dotted];
n222 -> n224  [key=1, style=dashed, color=darkseagreen4, label=usageTuple];
n221 -> n235  [key=0, style=solid];
n223 -> n224  [key=0, style=solid];
n223 -> n226  [key=1, style=dashed, color=darkseagreen4, label=examples];
n224 -> n225  [key=0, style=solid];
n224 -> n239  [key=2, style=dotted];
n224 -> n231  [key=1, style=dashed, color=darkseagreen4, label=appAlias];
n226 -> n227  [key=0, style=solid];
n226 -> n234  [key=0, style=solid];
n225 -> n226  [key=0, style=solid];
n225 -> n24  [key=2, style=dotted];
n225 -> n233  [key=1, style=dashed, color=darkseagreen4, label=text];
n225 -> n234  [key=1, style=dashed, color=darkseagreen4, label=text];
n231 -> n232  [key=0, style=solid];
n231 -> n206  [key=2, style=dotted];
n231 -> n207  [key=2, style=dotted];
n231 -> n209  [key=2, style=dotted];
n231 -> n240  [key=2, style=dotted];
n231 -> n242  [key=2, style=dotted];
n231 -> n244  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n233 -> n226  [key=0, style=solid];
n233 -> n243  [key=2, style=dotted];
n234 -> n235  [key=0, style=solid];
n234 -> n198  [key=2, style=dotted];
n228 -> n229  [key=0, style=solid];
n228 -> n206  [key=2, style=dotted];
n228 -> n240  [key=2, style=dotted];
n228 -> n209  [key=2, style=dotted];
n228 -> n232  [key=1, style=dashed, color=darkseagreen4, label=exampleText];
n228 -> n233  [key=1, style=dashed, color=darkseagreen4, label=exampleText];
n229 -> n230  [key=0, style=solid];
n229 -> n241  [key=2, style=dotted];
n232 -> n230  [key=0, style=solid];
n232 -> n243  [key=2, style=dotted];
n230 -> n231  [key=0, style=solid];
n230 -> n233  [key=0, style=solid];
n230 -> n245  [key=1, style=dashed, color=darkseagreen4, label=s];
n230 -> n246  [key=1, style=dashed, color=darkseagreen4, label=s];
n230 -> n247  [key=1, style=dashed, color=darkseagreen4, label=s];
n245 -> n246  [key=0, style=solid];
n246 -> n247  [key=0, style=solid];
n247 -> n248  [key=0, style=solid];
n244 -> n245  [key=0, style=solid];
n244 -> n246  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
n244 -> n247  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.UnParserSettings"];
n235 -> n50  [key=0, style=bold, color=blue];
n248 -> n244  [key=0, style=bold, color=blue];
n249 -> n250  [key=0, style=solid];
n249 -> n249  [key=3, color=darkorchid, style=bold, label="Local variable int ExtraLength"];
n250 -> n251  [key=0, style=solid];
n250 -> n24  [key=2, style=dotted];
n250 -> n252  [key=2, style=dotted];
n250 -> n253  [key=2, style=dotted];
n250 -> n209  [key=2, style=dotted];
n250 -> n126  [key=2, style=dotted];
n250 -> n254  [key=2, style=dotted];
n250 -> n198  [key=2, style=dotted];
n250 -> n255  [key=2, style=dotted];
n251 -> n136  [key=0, style=bold, color=blue];
n256 -> n257  [key=0, style=solid];
n256 -> n195  [key=2, style=dotted];
n256 -> n258  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n257 -> n45  [key=0, style=bold, color=blue];
n258 -> n259  [key=0, style=solid];
n259 -> n260  [key=0, style=solid];
n260 -> n258  [key=0, style=bold, color=blue];
n261 -> n262  [key=0, style=solid];
n261 -> n264  [key=1, style=dashed, color=darkseagreen4, label=string];
n261 -> n267  [key=1, style=dashed, color=darkseagreen4, label=int];
n261 -> n268  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n261 -> n270  [key=1, style=dashed, color=darkseagreen4, label=int];
n261 -> n271  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n261 -> n273  [key=1, style=dashed, color=darkseagreen4, label=int];
n261 -> n274  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n261 -> n275  [key=1, style=dashed, color=darkseagreen4, label=int];
n261 -> n277  [key=1, style=dashed, color=darkseagreen4, label=string];
n261 -> n278  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n261 -> n279  [key=1, style=dashed, color=darkseagreen4, label=int];
n261 -> n280  [key=1, style=dashed, color=darkseagreen4, label="System.Text.StringBuilder"];
n261 -> n143  [key=3, color=darkorchid, style=bold, label="Parameter variable string value"];
n261 -> n139  [key=3, color=darkorchid, style=bold, label="Parameter variable int maximumLength"];
n262 -> n263  [key=0, style=solid];
n262 -> n254  [key=2, style=dotted];
n264 -> n265  [key=0, style=solid];
n264 -> n282  [key=2, style=dotted];
n264 -> n266  [key=1, style=dashed, color=darkseagreen4, label=words];
n264 -> n267  [key=1, style=dashed, color=darkseagreen4, label=words];
n264 -> n268  [key=1, style=dashed, color=darkseagreen4, label=words];
n264 -> n269  [key=1, style=dashed, color=darkseagreen4, label=words];
n264 -> n270  [key=1, style=dashed, color=darkseagreen4, label=words];
n264 -> n273  [key=1, style=dashed, color=darkseagreen4, label=words];
n264 -> n274  [key=1, style=dashed, color=darkseagreen4, label=words];
n267 -> n268  [key=0, style=solid];
n267 -> n273  [key=0, style=solid];
n268 -> n269  [key=0, style=solid];
n268 -> n209  [key=2, style=dotted];
n270 -> n271  [key=0, style=solid];
n270 -> n276  [key=0, style=solid];
n271 -> n272  [key=0, style=solid];
n271 -> n209  [key=2, style=dotted];
n273 -> n274  [key=0, style=solid];
n273 -> n277  [key=0, style=solid];
n274 -> n275  [key=0, style=solid];
n274 -> n283  [key=2, style=dotted];
n274 -> n209  [key=2, style=dotted];
n275 -> n277  [key=0, style=solid];
n277 -> n278  [key=0, style=solid];
n277 -> n284  [key=2, style=dotted];
n277 -> n285  [key=2, style=dotted];
n277 -> n277  [key=1, style=dashed, color=darkseagreen4, label=string];
n277 -> n279  [key=1, style=dashed, color=darkseagreen4, label=string];
n277 -> n280  [key=1, style=dashed, color=darkseagreen4, label=string];
n278 -> n279  [key=0, style=solid];
n278 -> n254  [key=2, style=dotted];
n279 -> n262  [key=0, style=solid];
n279 -> n280  [key=0, style=solid];
n280 -> n281  [key=0, style=solid];
n280 -> n209  [key=2, style=dotted];
n263 -> n264  [key=0, style=solid];
n263 -> n267  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n263 -> n269  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n263 -> n273  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n263 -> n277  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n263 -> n263  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n263 -> n261  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n269 -> n270  [key=0, style=solid];
n269 -> n269  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n269 -> n272  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n269 -> n277  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n265 -> n266  [key=0, style=solid];
n265 -> n267  [key=1, style=dashed, color=darkseagreen4, label=i];
n265 -> n268  [key=1, style=dashed, color=darkseagreen4, label=i];
n265 -> n269  [key=1, style=dashed, color=darkseagreen4, label=i];
n265 -> n270  [key=1, style=dashed, color=darkseagreen4, label=i];
n265 -> n273  [key=1, style=dashed, color=darkseagreen4, label=i];
n265 -> n274  [key=1, style=dashed, color=darkseagreen4, label=i];
n265 -> n276  [key=1, style=dashed, color=darkseagreen4, label=i];
n265 -> n263  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n266 -> n267  [key=0, style=solid];
n266 -> n277  [key=0, style=solid];
n276 -> n266  [key=0, style=solid];
n276 -> n276  [key=1, style=dashed, color=darkseagreen4, label=i];
n272 -> n276  [key=0, style=solid];
n272 -> n272  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n272 -> n277  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n281 -> n261  [key=0, style=bold, color=blue];
n286 -> n287  [key=0, style=solid];
n286 -> n291  [key=2, style=dotted];
n286 -> n288  [key=1, style=dashed, color=darkseagreen4, label=specs];
n287 -> n288  [key=0, style=solid];
n287 -> n81  [key=2, style=dotted];
n287 -> n292  [key=2, style=dotted];
n287 -> n293  [key=2, style=dotted];
n287 -> n294  [key=2, style=dotted];
n287 -> n289  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
n288 -> n289  [key=0, style=solid];
n288 -> n81  [key=2, style=dotted];
n288 -> n295  [key=2, style=dotted];
n288 -> n296  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n292 -> n327  [key=0, style=solid];
n293 -> n329  [key=0, style=solid];
n289 -> n290  [key=0, style=solid];
n289 -> n44  [key=2, style=dotted];
n289 -> n294  [key=2, style=dotted];
n296 -> n297  [key=0, style=solid];
n290 -> n163  [key=0, style=bold, color=blue];
n297 -> n298  [key=0, style=solid];
n298 -> n296  [key=0, style=bold, color=blue];
n299 -> n300  [key=0, style=solid];
n299 -> n301  [key=2, style=dotted];
n299 -> n302  [key=2, style=dotted];
n299 -> n303  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n300 -> n236  [key=0, style=bold, color=blue];
n303 -> n304  [key=0, style=solid];
n303 -> n305  [key=1, style=dashed, color=darkseagreen4, label="System.Tuple<System.Reflection.PropertyInfo, CommandLine.Text.UsageAttribute>"];
n304 -> n305  [key=0, style=solid];
n304 -> n306  [key=1, style=dashed, color=darkseagreen4, label=prop];
n305 -> n306  [key=0, style=solid];
n305 -> n307  [key=1, style=dashed, color=darkseagreen4, label=attr];
n306 -> n307  [key=0, style=solid];
n306 -> n309  [key=2, style=dotted];
n307 -> n308  [key=0, style=solid];
n307 -> n310  [key=2, style=dotted];
n308 -> n303  [key=0, style=bold, color=blue];
n311 -> n312  [key=0, style=solid];
n311 -> n313  [key=2, style=dotted];
n311 -> n314  [key=2, style=dotted];
n311 -> n292  [key=2, style=dotted];
n311 -> n293  [key=2, style=dotted];
n311 -> n315  [key=2, style=dotted];
n311 -> n311  [key=1, style=dashed, color=darkseagreen4, label=verbTuple];
n312 -> n172  [key=0, style=bold, color=blue];
n316 -> n317  [key=0, style=solid];
n316 -> n322  [key=2, style=dotted];
n316 -> n318  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n316 -> n319  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n316 -> n324  [key=1, style=dashed, color=darkseagreen4, label=maxLength];
n318 -> n319  [key=0, style=solid];
n318 -> n324  [key=1, style=dashed, color=darkseagreen4, label=remainingSpace];
n319 -> n320  [key=0, style=solid];
n319 -> n129  [key=2, style=dotted];
n319 -> n323  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n324 -> n325  [key=0, style=solid];
n324 -> n326  [key=2, style=dotted];
n317 -> n318  [key=0, style=solid];
n317 -> n24  [key=2, style=dotted];
n322 -> n406  [key=0, style=solid];
n320 -> n321  [key=0, style=solid];
n323 -> n324  [key=0, style=solid];
n321 -> n164  [key=0, style=bold, color=blue];
n325 -> n323  [key=0, style=bold, color=blue];
n326 -> n334  [key=0, style=solid];
n326 -> n335  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n371  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n375  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n336  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n337  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n326 -> n338  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n326 -> n339  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n326 -> n340  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n326 -> n341  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Specification"];
n326 -> n342  [key=1, style=dashed, color=darkseagreen4, label=string];
n326 -> n348  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n351  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n354  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n355  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n356  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n359  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n360  [key=1, style=dashed, color=darkseagreen4, label=int];
n326 -> n316  [key=3, color=darkorchid, style=bold, label="Parameter variable int maxLength"];
n326 -> n319  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.Specification specification"];
n326 -> n318  [key=3, color=darkorchid, style=bold, label="Parameter variable int widthOfHelpText"];
n327 -> n328  [key=0, style=solid];
n327 -> n47  [key=2, style=dotted];
n327 -> n314  [key=2, style=dotted];
n328 -> n292  [key=0, style=bold, color=blue];
n329 -> n330  [key=0, style=solid];
n329 -> n47  [key=2, style=dotted];
n329 -> n314  [key=2, style=dotted];
n330 -> n293  [key=0, style=bold, color=blue];
n331 -> n332  [key=0, style=solid];
n331 -> n261  [key=2, style=dotted];
n332 -> n333  [key=0, style=solid];
n333 -> n139  [key=0, style=bold, color=blue];
n334 -> n335  [key=0, style=solid];
n334 -> n209  [key=2, style=dotted];
n335 -> n336  [key=0, style=solid];
n335 -> n24  [key=2, style=dotted];
n335 -> n364  [key=2, style=dotted];
n335 -> n370  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n335 -> n374  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n371 -> n372  [key=0, style=solid];
n371 -> n373  [key=2, style=dotted];
n371 -> n209  [key=2, style=dotted];
n375 -> n376  [key=0, style=solid];
n375 -> n377  [key=2, style=dotted];
n375 -> n209  [key=2, style=dotted];
n336 -> n337  [key=0, style=solid];
n336 -> n198  [key=2, style=dotted];
n336 -> n365  [key=2, style=dotted];
n336 -> n209  [key=2, style=dotted];
n337 -> n338  [key=0, style=solid];
n337 -> n339  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n337 -> n340  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n338 -> n339  [key=0, style=solid];
n338 -> n340  [key=0, style=solid];
n338 -> n46  [key=2, style=dotted];
n339 -> n340  [key=0, style=solid];
n339 -> n366  [key=2, style=dotted];
n339 -> n339  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n340 -> n341  [key=0, style=solid];
n340 -> n49  [key=2, style=dotted];
n340 -> n378  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n340 -> n379  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n340 -> n342  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n340 -> n343  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n340 -> n345  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n340 -> n358  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n340 -> n361  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n341 -> n342  [key=0, style=solid];
n341 -> n343  [key=0, style=solid];
n342 -> n343  [key=0, style=solid];
n342 -> n367  [key=2, style=dotted];
n342 -> n342  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n342 -> n345  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n342 -> n358  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n342 -> n361  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n348 -> n349  [key=0, style=solid];
n348 -> n354  [key=0, style=solid];
n351 -> n352  [key=0, style=solid];
n351 -> n357  [key=0, style=solid];
n354 -> n355  [key=0, style=solid];
n354 -> n358  [key=0, style=solid];
n355 -> n356  [key=0, style=solid];
n355 -> n283  [key=2, style=dotted];
n355 -> n209  [key=2, style=dotted];
n356 -> n358  [key=0, style=solid];
n359 -> n360  [key=0, style=solid];
n359 -> n369  [key=2, style=dotted];
n359 -> n254  [key=2, style=dotted];
n360 -> n343  [key=0, style=solid];
n360 -> n361  [key=0, style=solid];
n370 -> n371  [key=0, style=solid];
n374 -> n375  [key=0, style=solid];
n378 -> n379  [key=0, style=solid];
n379 -> n380  [key=0, style=solid];
n379 -> n381  [key=2, style=dotted];
n379 -> n379  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n343 -> n344  [key=0, style=solid];
n343 -> n361  [key=0, style=solid];
n343 -> n126  [key=2, style=dotted];
n345 -> n346  [key=0, style=solid];
n345 -> n282  [key=2, style=dotted];
n345 -> n347  [key=1, style=dashed, color=darkseagreen4, label=words];
n345 -> n348  [key=1, style=dashed, color=darkseagreen4, label=words];
n345 -> n349  [key=1, style=dashed, color=darkseagreen4, label=words];
n345 -> n350  [key=1, style=dashed, color=darkseagreen4, label=words];
n345 -> n351  [key=1, style=dashed, color=darkseagreen4, label=words];
n345 -> n354  [key=1, style=dashed, color=darkseagreen4, label=words];
n345 -> n355  [key=1, style=dashed, color=darkseagreen4, label=words];
n358 -> n359  [key=0, style=solid];
n358 -> n284  [key=2, style=dotted];
n358 -> n285  [key=2, style=dotted];
n358 -> n368  [key=2, style=dotted];
n358 -> n358  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n358 -> n360  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n358 -> n361  [key=1, style=dashed, color=darkseagreen4, label=optionHelpText];
n361 -> n362  [key=0, style=solid];
n361 -> n209  [key=2, style=dotted];
n361 -> n254  [key=2, style=dotted];
n367 -> n367  [key=3, color=darkorchid, style=bold, label="Field variable int BuilderCapacity"];
n344 -> n345  [key=0, style=solid];
n344 -> n348  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n344 -> n350  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n344 -> n354  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n344 -> n358  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n344 -> n263  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n344 -> n326  [key=3, color=darkorchid, style=bold, label="Local variable int wordBuffer"];
n350 -> n351  [key=0, style=solid];
n350 -> n350  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n350 -> n353  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n350 -> n358  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n346 -> n347  [key=0, style=solid];
n346 -> n348  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n349  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n350  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n351  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n354  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n355  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n357  [key=1, style=dashed, color=darkseagreen4, label=i];
n346 -> n263  [key=3, color=darkorchid, style=bold, label="Local variable int i"];
n347 -> n348  [key=0, style=solid];
n347 -> n358  [key=0, style=solid];
n349 -> n350  [key=0, style=solid];
n349 -> n209  [key=2, style=dotted];
n357 -> n347  [key=0, style=solid];
n357 -> n357  [key=1, style=dashed, color=darkseagreen4, label=i];
n353 -> n357  [key=0, style=solid];
n353 -> n353  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n353 -> n358  [key=1, style=dashed, color=darkseagreen4, label=wordBuffer];
n352 -> n353  [key=0, style=solid];
n352 -> n209  [key=2, style=dotted];
n362 -> n363  [key=0, style=solid];
n363 -> n326  [key=0, style=bold, color=blue];
n372 -> n370  [key=0, style=bold, color=blue];
n373 -> n382  [key=0, style=solid];
n373 -> n386  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n373 -> n392  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n373 -> n326  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification specification"];
n376 -> n374  [key=0, style=bold, color=blue];
n377 -> n394  [key=0, style=solid];
n377 -> n397  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n377 -> n401  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n377 -> n326  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification specification"];
n380 -> n378  [key=0, style=bold, color=blue];
n382 -> n383  [key=0, style=solid];
n382 -> n24  [key=2, style=dotted];
n382 -> n384  [key=2, style=dotted];
n382 -> n198  [key=2, style=dotted];
n382 -> n385  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n382 -> n391  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n386 -> n387  [key=0, style=solid];
n386 -> n388  [key=2, style=dotted];
n386 -> n389  [key=2, style=dotted];
n386 -> n390  [key=2, style=dotted];
n386 -> n254  [key=2, style=dotted];
n392 -> n393  [key=0, style=solid];
n392 -> n254  [key=2, style=dotted];
n392 -> n389  [key=2, style=dotted];
n392 -> n390  [key=2, style=dotted];
n383 -> n373  [key=0, style=bold, color=blue];
n385 -> n386  [key=0, style=solid];
n391 -> n392  [key=0, style=solid];
n387 -> n385  [key=0, style=bold, color=blue];
n390 -> n10  [key=3, color=darkorchid, style=bold, label="Field variable string copyright"];
n393 -> n391  [key=0, style=bold, color=blue];
n394 -> n395  [key=0, style=solid];
n394 -> n24  [key=2, style=dotted];
n394 -> n364  [key=2, style=dotted];
n394 -> n390  [key=2, style=dotted];
n394 -> n198  [key=2, style=dotted];
n394 -> n396  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n394 -> n400  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n397 -> n398  [key=0, style=solid];
n397 -> n399  [key=2, style=dotted];
n401 -> n402  [key=0, style=solid];
n401 -> n389  [key=2, style=dotted];
n395 -> n377  [key=0, style=bold, color=blue];
n396 -> n397  [key=0, style=solid];
n400 -> n401  [key=0, style=solid];
n398 -> n396  [key=0, style=bold, color=blue];
n402 -> n400  [key=0, style=bold, color=blue];
n403 -> n404  [key=0, style=solid];
n403 -> n261  [key=2, style=dotted];
n404 -> n405  [key=0, style=solid];
n405 -> n143  [key=0, style=bold, color=blue];
n406 -> n407  [key=0, style=solid];
n406 -> n408  [key=2, style=dotted];
n406 -> n409  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
n407 -> n322  [key=0, style=bold, color=blue];
n409 -> n410  [key=0, style=solid];
n409 -> n411  [key=1, style=dashed, color=darkseagreen4, label=int];
n410 -> n411  [key=0, style=solid];
n410 -> n413  [key=2, style=dotted];
n410 -> n414  [key=2, style=dotted];
n411 -> n412  [key=0, style=solid];
n411 -> n415  [key=2, style=dotted];
n413 -> n416  [key=0, style=solid];
n413 -> n417  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n413 -> n418  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n413 -> n420  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n413 -> n421  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n413 -> n428  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.OptionSpecification"];
n413 -> n406  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.OptionSpecification spec"];
n414 -> n436  [key=0, style=solid];
n414 -> n437  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n414 -> n439  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n414 -> n440  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n414 -> n442  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n414 -> n443  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.ValueSpecification"];
n414 -> n406  [key=3, color=darkorchid, style=bold, label="Parameter variable CommandLine.Core.ValueSpecification spec"];
n412 -> n409  [key=0, style=bold, color=blue];
n416 -> n417  [key=0, style=solid];
n416 -> n423  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n416 -> n428  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n416 -> n433  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n416 -> n434  [key=1, style=dashed, color=darkseagreen4, label=specLength];
n416 -> n263  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
n416 -> n419  [key=3, color=darkorchid, style=bold, label="Local variable int specLength"];
n417 -> n418  [key=0, style=solid];
n417 -> n422  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
n417 -> n432  [key=1, style=dashed, color=darkseagreen4, label=hasShort];
n418 -> n419  [key=0, style=solid];
n418 -> n427  [key=1, style=dashed, color=darkseagreen4, label=hasLong];
d19 -> d20  [key=0, style=solid, color=green];
d19 -> d21  [key=1, style=dashed, color=green, label=other];
d18 -> d19  [key=0, style=solid, color=green];
d18 -> d22  [key=1, style=dashed, color=green, label=object];
d18 -> d24  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d24 -> d19  [key=3, color=green, style=bold, label="Parameter variable CommandLine.Text.Example other"];
d24 -> d30  [key=0, style=solid];
d24 -> d32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d24 -> d31  [key=3, color=darkorchid, style=bold, label="method methodReturn bool Equals"];
d20 -> d22  [key=0, style=solid, color=green];
d20 -> d21  [key=0, style=solid];
d21 -> d24  [key=2, style=dotted];
d21 -> d23  [key=0, style=solid];
d22 -> d23  [key=0, style=solid, color=green];
d22 -> d25  [key=2, style=dotted, color=green];
d41 -> d22  [key=1, style=dashed, color=green, label="CommandLine.Text.Example"];
d41 -> d21  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d7  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d27  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d41 -> d32  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Text.Example"];
d23 -> d18  [key=0, style=bold, color=blue];
d33 -> d24  [key=0, style=bold, color=blue];
d30 -> d31  [key=0, style=solid];
d30 -> d32  [key=0, style=solid];
d32 -> d25  [key=2, style=dotted];
d32 -> d33  [key=0, style=solid];
d32 -> d34  [key=2, style=dotted];
d32 -> d35  [key=2, style=dotted];
d31 -> d33  [key=0, style=solid];
d7 -> d8  [key=0, style=solid];
d8 -> d9  [key=0, style=solid];
d9 -> d10  [key=0, style=solid];
d27 -> d28  [key=0, style=solid];
d27 -> d29  [key=2, style=dotted];
d0 -> d7  [key=1, style=dashed, color=darkseagreen4, label=string];
d0 -> d8  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>"];
d0 -> d9  [key=1, style=dashed, color=darkseagreen4, label=object];
d0 -> d1  [key=0, style=solid];
d0 -> d3  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.UnParserSettings>"];
d0 -> d5  [key=1, style=dashed, color=darkseagreen4, label=object];
d5 -> d7  [key=0, style=solid];
d5 -> d6  [key=0, style=solid];
d10 -> d0  [key=0, style=bold, color=blue];
d26 -> d27  [key=0, style=solid];
d28 -> d26  [key=0, style=bold, color=blue];
d1 -> d2  [key=0, style=solid];
d1 -> d3  [key=0, style=solid];
d1 -> d11  [key=2, style=dotted];
d3 -> d5  [key=0, style=solid];
d3 -> d4  [key=0, style=solid];
d6 -> d10  [key=0, style=solid];
d6 -> d13  [key=2, style=dotted];
d2 -> d10  [key=0, style=solid];
d2 -> d12  [key=2, style=dotted];
d4 -> d10  [key=0, style=solid];
d4 -> d13  [key=2, style=dotted];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_4  [key=2, style=dotted];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_6  [key=2, style=dotted];
m1_2 -> m1_7  [key=2, style=dotted];
m1_2 -> m1_8  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_2 -> m1_2  [key=3, color=green, style=bold, label="Field variable int DefaultMaximumLength"];
m1_3 -> m1_0  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid];
m1_8 -> m1_9  [key=0, style=solid];
m1_11 -> m1_12  [key=0, style=solid];
m1_14 -> m1_15  [key=0, style=solid];
m1_9 -> m1_10  [key=0, style=solid];
m1_10 -> m1_8  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_16 -> m1_14  [key=0, style=bold, color=blue];
m1_59 -> m1_60  [key=0, style=solid];
m1_59 -> m1_47  [key=2, style=dotted];
m1_59 -> m1_61  [key=2, style=dotted];
m1_59 -> m1_62  [key=2, style=dotted];
m1_59 -> m1_39  [key=2, style=dotted];
m1_51 -> m1_52  [key=0, style=solid];
m1_54 -> m1_55  [key=0, style=solid];
m1_52 -> m1_53  [key=0, style=solid];
m1_53 -> m1_51  [key=0, style=bold, color=blue];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_57  [key=2, style=dotted];
m1_56 -> m1_54  [key=0, style=bold, color=blue];
m1_60 -> m1_58  [key=0, style=bold, color=blue];
m1_38 -> m1_63  [key=0, style=solid];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_43  [key=2, style=dotted];
m1_63 -> m1_46  [key=2, style=dotted];
m1_63 -> m1_47  [key=2, style=dotted];
m1_63 -> m1_62  [key=2, style=dotted];
m1_64 -> m1_38  [key=0, style=bold, color=blue];
m1_4 -> m1_17  [key=0, style=solid];
m1_4 -> m1_18  [key=0, style=bold, color=crimson];
m1_4 -> m1_22  [key=0, style=bold, color=crimson];
m1_4 -> m1_23  [key=0, style=bold, color=crimson];
m1_4 -> m1_26  [key=0, style=bold, color=crimson];
m1_4 -> m1_27  [key=0, style=bold, color=crimson];
m1_4 -> m1_28  [key=0, style=bold, color=crimson];
m1_4 -> m1_30  [key=0, style=bold, color=crimson];
m1_4 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_4 -> m1_20  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_4 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_4 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_4 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>"];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_19  [key=0, style=solid];
m1_17 -> n124  [key=2, style=dotted];
m1_18 -> m1_19  [key=0, style=solid];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_38  [key=2, style=dotted];
m1_22 -> m1_39  [key=2, style=dotted];
m1_23 -> m1_24  [key=0, style=solid];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_46  [key=2, style=dotted];
m1_26 -> m1_47  [key=2, style=dotted];
m1_26 -> m1_39  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_48  [key=2, style=dotted];
m1_28 -> m1_49  [key=2, style=dotted];
m1_28 -> m1_50  [key=2, style=dotted];
m1_28 -> m1_47  [key=2, style=dotted];
m1_28 -> m1_39  [key=2, style=dotted];
m1_28 -> m1_36  [key=2, style=dotted];
m1_28 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_30 -> m1_29  [key=0, style=solid];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_33  [key=2, style=dotted];
m1_19 -> m1_22  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_19 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_19 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_19 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_19 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_19 -> m1_2  [key=3, color=darkorchid, style=bold, label="Property variable System.Collections.Generic.IEnumerable<System.Type> VerbTypes"];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_34  [key=2, style=dotted];
m1_20 -> m1_35  [key=2, style=dotted];
m1_20 -> m1_36  [key=2, style=dotted];
m1_20 -> m1_37  [key=2, style=dotted];
m1_20 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_20 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label=taken];
m1_20 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=taken];
m1_20 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=taken];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_40  [key=2, style=dotted];
m1_24 -> m1_41  [key=2, style=dotted];
m1_24 -> m1_42  [key=2, style=dotted];
m1_24 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_28  [key=0, style=solid];
m1_25 -> m1_43  [key=2, style=dotted];
m1_25 -> m1_44  [key=2, style=dotted];
m1_25 -> m1_35  [key=2, style=dotted];
m1_25 -> m1_40  [key=2, style=dotted];
m1_25 -> m1_45  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_31  [key=0, style=solid];
m1_29 -> m1_40  [key=2, style=dotted];
m1_29 -> m1_35  [key=2, style=dotted];
m1_29 -> m1_4  [key=2, style=dotted];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_24  [key=0, style=solid];
m1_21 -> n124  [key=2, style=dotted];
m1_31 -> m1_4  [key=0, style=bold, color=blue];
m1_65 -> m1_59  [key=1, style=dashed, color=darkseagreen4, label=pt];
m2_11 -> m2_12  [key=0, style=solid];
m2_11 -> m2_14  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_11 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_12 -> m2_13  [key=0, style=solid];
m2_12 -> m2_14  [key=0, style=solid];
m2_14 -> m2_15  [key=0, style=solid];
m2_14 -> m2_16  [key=2, style=dotted];
m2_14 -> m2_17  [key=2, style=dotted];
m2_14 -> m2_18  [key=2, style=dotted];
m2_14 -> m2_19  [key=2, style=dotted];
m2_14 -> m2_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_14 -> m2_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_13 -> m2_15  [key=0, style=solid];
m2_13 -> d13  [key=2, style=dotted];
m2_15 -> m2_11  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_0 -> m2_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_0 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=0, style=solid];
m2_3 -> m2_4  [key=0, style=solid];
m2_3 -> m2_6  [key=2, style=dotted];
m2_3 -> m2_7  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m2_2 -> m2_4  [key=0, style=solid];
m2_2 -> d13  [key=2, style=dotted];
m2_4 -> m2_0  [key=0, style=bold, color=blue];
m2_23 -> m2_24  [key=0, style=solid];
m2_8 -> m2_9  [key=0, style=solid];
m2_8 -> m2_10  [key=2, style=dotted];
m2_7 -> m2_8  [key=0, style=solid];
m2_9 -> m2_7  [key=0, style=bold, color=blue];
m2_21 -> m2_22  [key=0, style=solid];
m2_21 -> m2_10  [key=2, style=dotted];
m2_20 -> m2_21  [key=0, style=solid];
m2_22 -> m2_20  [key=0, style=bold, color=blue];
m2_24 -> m2_25  [key=0, style=solid];
m2_24 -> m2_26  [key=2, style=dotted];
m2_25 -> m2_23  [key=0, style=bold, color=blue];
m2_27 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_28 -> m2_8  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m2_29 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label=string];
m2_30 -> m2_21  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
}
