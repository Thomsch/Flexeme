digraph  {
m1_50 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_51 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="97-100", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_52 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_53 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="105-105", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_54 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="106-106", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_55 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="107-107", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_56 [label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="108-108", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_57 [label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="109-109", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_58 [label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_59 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="HelpTextTests.cs"];
m1_16 [label="Entry CommandLine.Text.HelpText.HelpText(string, string)", span="81-81", cluster="CommandLine.Text.HelpText.HelpText(string, string)", file="HelpTextTests.cs"];
m1_126 [label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="457-457", cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="HelpTextTests.cs"];
m1_22 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_23 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="50-53", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_24 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_25 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="58-58", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_26 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="59-59", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_27 [label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="60-60", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_28 [label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="61-61", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_29 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="62-62", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_30 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="63-63", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_31 [label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="64-64", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_32 [label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="65-65", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_33 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="HelpTextTests.cs"];
m1_66 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_67 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_68 [label="sut.MaximumDisplayWidth = 40", span="136-136", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_69 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_70 [label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_71 [label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_72 [label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_73 [label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_74 [label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_75 [label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_76 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="HelpTextTests.cs"];
m1_217 [label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="515-515", cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m1_78 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_79 [label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_80 [label="sut.MaximumDisplayWidth = 40", span="159-159", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_81 [label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_82 [label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_83 [label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_84 [label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_85 [label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_86 [label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_87 [label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_88 [label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_89 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="HelpTextTests.cs"];
m1_190 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="HelpTextTests.cs"];
m1_116 [label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196", cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="HelpTextTests.cs"];
m1_149 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_150 [label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="262-268", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_151 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="271-271", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_152 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="274-274", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_153 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="275-275", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_154 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="276-276", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_155 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="277-277", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_156 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="278-278", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_157 [label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="279-279", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_158 [label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="280-280", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_159 [label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="281-281", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_160 [label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="282-282", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_161 [label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="283-283", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_162 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="259-259", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_192 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_193 [label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="345-348", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_194 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="352-352", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_195 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="353-353", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_196 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="354-354", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_197 [label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="355-355", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_198 [label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="356-356", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_199 [label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="357-357", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_200 [label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="358-358", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_201 [label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="359-359", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_202 [label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="360-360", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_203 [label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="361-361", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_204 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="341-341", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="HelpTextTests.cs"];
m1_39 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_40 [label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="74-77", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_41 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="81-81", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_42 [label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="82-82", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_43 [label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="83-83", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_44 [label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="84-84", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_45 [label="lines[3].ShouldBeEquivalentTo(''Triangle'')", span="85-85", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_46 [label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="86-86", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_47 [label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="87-87", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_48 [label="lines[6].ShouldBeEquivalentTo(''post-options'')", span="88-88", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_49 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="HelpTextTests.cs"];
m1_120 [label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291", cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m1_90 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_91 [label="var sut = new HelpText(''Heading Info.'')", span="181-181", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_92 [label="sut.MaximumDisplayWidth = 40", span="182-182", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_93 [label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_94 [label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_95 [label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_96 [label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_97 [label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_98 [label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_99 [label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_100 [label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_101 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="HelpTextTests.cs"];
m1_177 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_178 [label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="317-318", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_179 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="319-322", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_180 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="325-325", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_181 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="328-328", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_182 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="330-330", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_183 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="331-331", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_184 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="332-332", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_185 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="333-333", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_186 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="334-334", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_187 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="335-335", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_188 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="336-336", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_189 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="314-314", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_0 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m1_1 [label="string.Empty.ShouldBeEquivalentTo(new HelpText().ToString())", span="18-18", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m1_2 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", span="16-16", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_empty_instance()", file="HelpTextTests.cs"];
m1_253 [label="Entry System.Type.ToTypeInfo()", span="174-174", cluster="System.Type.ToTypeInfo()", file="HelpTextTests.cs"];
m1_254 [label="Entry System.Globalization.CultureInfo.CultureInfo(string)", span="0-0", cluster="System.Globalization.CultureInfo.CultureInfo(string)", file="HelpTextTests.cs"];
m1_145 [label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException()", file="HelpTextTests.cs"];
m1_36 [label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0", cluster="System.Linq.Enumerable.Empty<TResult>()", file="HelpTextTests.cs"];
m1_38 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="HelpTextTests.cs"];
m1_34 [label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163", cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="HelpTextTests.cs"];
m1_123 [label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357", cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="HelpTextTests.cs"];
m1_3 [label="Entry CommandLine.Text.HelpText.HelpText()", span="35-35", cluster="CommandLine.Text.HelpText.HelpText()", file="HelpTextTests.cs"];
m1_60 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m1_61 [label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m1_62 [label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m1_63 [label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m1_64 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="HelpTextTests.cs"];
m1_19 [label="Entry CommandLine.Text.HelpText.AddPreOptionsLine(string)", span="321-321", cluster="CommandLine.Text.HelpText.AddPreOptionsLine(string)", file="HelpTextTests.cs"];
m1_125 [label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383", cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="HelpTextTests.cs"];
m1_205 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_206 [label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="369-371", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_207 [label="var text = HelpText.RenderUsageText(result)", span="374-374", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_208 [label="var lines = text.ToNotEmptyLines()", span="377-377", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_209 [label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="380-380", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_210 [label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="381-381", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_211 [label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="382-382", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_212 [label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="383-383", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_213 [label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="384-384", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_214 [label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -e --input file.bin'')", span="385-385", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_215 [label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --errs --input=file.bin'')", span="386-386", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_216 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="366-366", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="HelpTextTests.cs"];
m1_121 [label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335", cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m1_37 [label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="388-388", cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m1_146 [label="Entry lambda expression", span="240-240", cluster="lambda expression", file="HelpTextTests.cs"];
m1_128 [label="err.Tag", span="219-219", cluster="lambda expression", file="HelpTextTests.cs"];
m1_130 [label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="222-222", cluster="lambda expression", file="HelpTextTests.cs"];
m1_132 [label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="224-224", cluster="lambda expression", file="HelpTextTests.cs"];
m1_134 [label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="226-226", cluster="lambda expression", file="HelpTextTests.cs"];
m1_136 [label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="228-228", cluster="lambda expression", file="HelpTextTests.cs"];
m1_138 [label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="230-230", cluster="lambda expression", file="HelpTextTests.cs"];
m1_142 [label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="234-234", cluster="lambda expression", file="HelpTextTests.cs"];
m1_127 [label="Entry lambda expression", span="217-238", cluster="lambda expression", file="HelpTextTests.cs"];
m1_129 [label="ErrorType.BadFormatTokenError", span="221-221", cluster="lambda expression", file="HelpTextTests.cs"];
m1_131 [label="ErrorType.MissingValueOptionError", span="223-223", cluster="lambda expression", file="HelpTextTests.cs"];
m1_133 [label="ErrorType.UnknownOptionError", span="225-225", cluster="lambda expression", file="HelpTextTests.cs"];
m1_135 [label="ErrorType.MissingRequiredOptionError", span="227-227", cluster="lambda expression", file="HelpTextTests.cs"];
m1_137 [label="ErrorType.SequenceOutOfRangeError", span="229-229", cluster="lambda expression", file="HelpTextTests.cs"];
m1_139 [label="ErrorType.NoVerbSelectedError", span="231-231", cluster="lambda expression", file="HelpTextTests.cs"];
m1_141 [label="ErrorType.BadVerbSelectedError", span="233-233", cluster="lambda expression", file="HelpTextTests.cs"];
m1_143 [label="throw new InvalidOperationException();", span="236-236", cluster="lambda expression", file="HelpTextTests.cs"];
m1_140 [label="return ''ERR no-verb-selected'';", span="232-232", cluster="lambda expression", file="HelpTextTests.cs"];
m1_144 [label="Exit lambda expression", span="217-238", cluster="lambda expression", file="HelpTextTests.cs"];
m1_147 [label="string.Empty", span="240-240", cluster="lambda expression", file="HelpTextTests.cs"];
m1_148 [label="Exit lambda expression", span="240-240", cluster="lambda expression", file="HelpTextTests.cs"];
m1_191 [label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34", cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="HelpTextTests.cs"];
m1_243 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m1_244 [label="var fakeResult =\r\n                new NotParsed<FakeOptionsWithDefaultSetToSequence>(\r\n                    typeof(FakeOptionsWithDefaultSetToSequence).ToTypeInfo(),\r\n                    new Error[] { new BadFormatTokenError(''badtoken'') })", span="436-439", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=1, file="HelpTextTests.cs"];
m1_245 [label="Thread.CurrentThread.CurrentCulture = new CultureInfo(''en-US'')", span="442-442", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m1_246 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="443-443", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m1_247 [label="var text = helpText.ToString()", span="446-446", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m1_248 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="447-447", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m1_249 [label="lines[4].Should().Be(''-z, --strseq    (Default: a b c)'')", span="449-449", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m1_250 [label="lines[5].Should().Be(''-y, --intseq    (Default: 1 2 3)'')", span="450-450", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m1_251 [label="lines[6].Should().Be(''-q, --dblseq    (Default: 1.1 2.2 3.3)'')", span="451-451", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", color=green, community=0, file="HelpTextTests.cs"];
m1_252 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", span="433-433", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Default_set_to_sequence_should_be_properly_printed()", file="HelpTextTests.cs"];
m1_35 [label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29", cluster="CommandLine.TypeInfo.Create(System.Type)", file="HelpTextTests.cs"];
m1_65 [label="Entry CommandLine.Text.HelpText.HelpText(string)", span="58-58", cluster="CommandLine.Text.HelpText.HelpText(string)", file="HelpTextTests.cs"];
m1_117 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="HelpTextTests.cs"];
m1_164 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="HelpTextTests.cs"];
m1_255 [label="Entry Unk.Be", span="", cluster="Unk.Be", file="HelpTextTests.cs"];
m1_4 [label="Entry CommandLine.Text.HelpText.ToString()", span="579-579", cluster="CommandLine.Text.HelpText.ToString()", file="HelpTextTests.cs"];
m1_165 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="HelpTextTests.cs"];
m1_163 [label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="259-259", cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="HelpTextTests.cs"];
m1_122 [label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421", cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="HelpTextTests.cs"];
m1_17 [label="Entry CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", span="27-27", cluster="CommandLine.Text.HeadingInfo.HeadingInfo(string, string)", file="HelpTextTests.cs"];
m1_119 [label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280", cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="HelpTextTests.cs"];
m1_18 [label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60", cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="HelpTextTests.cs"];
m1_20 [label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="332-332", cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="HelpTextTests.cs"];
m1_21 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="HelpTextTests.cs"];
m1_218 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_219 [label="var fakeResult = new NotParsed<FakeOptionsWithUsageText>(\r\n                TypeInfo.Create(typeof(FakeOptionsWithUsageText)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken'')\r\n                    })", span="393-398", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_220 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="401-401", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_221 [label="var text = helpText.ToString()", span="404-404", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_222 [label="var lines = text.ToNotEmptyLines().TrimStringArray()", span="405-405", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_223 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="406-406", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_224 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="407-407", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_225 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="408-408", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_226 [label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="409-409", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_227 [label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="410-410", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_228 [label="lines[5].ShouldBeEquivalentTo(''Normal scenario:'')", span="411-411", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_229 [label="lines[6].ShouldBeEquivalentTo(''mono testapp.exe --input file.bin --output out.bin'')", span="412-412", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_230 [label="lines[7].ShouldBeEquivalentTo(''Logging warnings:'')", span="413-413", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_231 [label="lines[8].ShouldBeEquivalentTo(''mono testapp.exe -w --input file.bin'')", span="414-414", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_232 [label="lines[9].ShouldBeEquivalentTo(''Logging errors:'')", span="415-415", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_233 [label="lines[10].ShouldBeEquivalentTo(''mono testapp.exe -e --input file.bin'')", span="416-416", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_234 [label="lines[11].ShouldBeEquivalentTo(''mono testapp.exe --errs --input=file.bin'')", span="417-417", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_235 [label="lines[12].ShouldBeEquivalentTo(''-i, --input     Set input file.'')", span="418-418", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_236 [label="lines[13].ShouldBeEquivalentTo(''-i, --output    Set output file.'')", span="419-419", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_237 [label="lines[14].ShouldBeEquivalentTo(''--verbose       Set verbosity level.'')", span="420-420", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_238 [label="lines[15].ShouldBeEquivalentTo(''-w, --warns     Log warnings.'')", span="421-421", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_239 [label="lines[16].ShouldBeEquivalentTo(''-e, --errs      Log errors.'')", span="422-422", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_240 [label="lines[17].ShouldBeEquivalentTo(''--help          Display this help screen.'')", span="423-423", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_241 [label="lines[18].ShouldBeEquivalentTo(''--version       Display version information.'')", span="424-424", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_242 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", span="390-390", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_with_Usage_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_118 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="HelpTextTests.cs"];
m1_6 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_7 [label="var sut =\r\n                new HelpText(new HeadingInfo(''Unit-tests'', ''2.0''), new CopyrightInfo(true, ''Author'', 2005, 2013))\r\n                    .AddPreOptionsLine(''pre-options line 1'')\r\n                    .AddPreOptionsLine(''pre-options line 2'')\r\n                    .AddPostOptionsLine(''post-options line 1'')\r\n                    .AddPostOptionsLine(''post-options line 2'')", span="26-31", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_8 [label="var lines = sut.ToString().ToNotEmptyLines()", span="34-34", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_9 [label="lines[0].ShouldBeEquivalentTo(''Unit-tests 2.0'')", span="36-36", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_10 [label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_11 [label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_12 [label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_13 [label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_14 [label="lines[5].ShouldBeEquivalentTo(''post-options line 2'')", span="41-41", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_15 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="HelpTextTests.cs"];
m1_102 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_103 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-216", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_104 [label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="217-238", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_106 [label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="243-243", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_105 [label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="239-240", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_107 [label="var lines = errorsText.ToNotEmptyLines()", span="246-246", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_108 [label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="248-248", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_109 [label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="249-249", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_110 [label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="250-250", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_111 [label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="251-251", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_112 [label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="252-252", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_113 [label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="253-253", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_114 [label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="254-254", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_115 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_166 [label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_167 [label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="291-296", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_168 [label="var helpText = HelpText.AutoBuild(fakeResult)", span="299-299", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_169 [label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="302-302", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_170 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="304-304", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_171 [label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="305-305", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_172 [label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="306-306", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_173 [label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="307-307", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_174 [label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="308-308", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_175 [label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="309-309", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_176 [label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="288-288", cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="HelpTextTests.cs"];
m1_124 [label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368", cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="HelpTextTests.cs"];
m1_77 [label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0", cluster="string.Split(string[], System.StringSplitOptions)", file="HelpTextTests.cs"];
m1_5 [label="Entry Unk.ShouldBeEquivalentTo", span="", cluster="Unk.ShouldBeEquivalentTo", file="HelpTextTests.cs"];
m2_15 [label="Entry CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="30-30", cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="StringExtensions.cs"];
m2_16 [label="return new string(' ', value);", span="32-32", cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="StringExtensions.cs"];
m2_17 [label="Exit CommandLine.Infrastructure.StringExtensions.Spaces(int)", span="30-30", cluster="CommandLine.Infrastructure.StringExtensions.Spaces(int)", file="StringExtensions.cs"];
m2_12 [label="Entry CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="25-25", cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs"];
m2_13 [label="return string.Format(CultureInfo.CurrentCulture, value, arguments);", span="27-27", cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs"];
m2_14 [label="Exit CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", span="25-25", cluster="CommandLine.Infrastructure.StringExtensions.FormatLocal(string, params object[])", file="StringExtensions.cs"];
m2_3 [label="Entry string.String(char, int)", span="0-0", cluster="string.String(char, int)", file="StringExtensions.cs"];
m2_31 [label="Entry System.Text.StringBuilder.StringBuilder(string)", span="0-0", cluster="System.Text.StringBuilder.StringBuilder(string)", file="StringExtensions.cs"];
m2_32 [label="Entry System.Text.StringBuilder.Append(string)", span="0-0", cluster="System.Text.StringBuilder.Append(string)", file="StringExtensions.cs"];
m2_21 [label="Entry string.CompareOrdinal(string, string)", span="0-0", cluster="string.CompareOrdinal(string, string)", file="StringExtensions.cs"];
m2_34 [label="Entry CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="55-55", cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="StringExtensions.cs"];
m2_35 [label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase)\r\n                || value.Equals(''false'', StringComparison.OrdinalIgnoreCase);", span="57-58", cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="StringExtensions.cs"];
m2_36 [label="Exit CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", span="55-55", cluster="CommandLine.Infrastructure.StringExtensions.IsBooleanString(string)", file="StringExtensions.cs"];
m2_7 [label="Entry System.Convert.ToString(object, System.IFormatProvider)", span="0-0", cluster="System.Convert.ToString(object, System.IFormatProvider)", file="StringExtensions.cs"];
m2_38 [label="Entry CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="61-61", cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="StringExtensions.cs"];
m2_39 [label="return value.Equals(''true'', StringComparison.OrdinalIgnoreCase);", span="63-63", cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="StringExtensions.cs"];
m2_40 [label="Exit CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", span="61-61", cluster="CommandLine.Infrastructure.StringExtensions.ToBoolean(string)", file="StringExtensions.cs"];
m2_18 [label="Entry CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="35-35", cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="StringExtensions.cs"];
m2_19 [label="return string.CompareOrdinal(strA, strB) == 0;", span="37-37", cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="StringExtensions.cs"];
m2_20 [label="Exit CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", span="35-35", cluster="CommandLine.Infrastructure.StringExtensions.EqualsOrdinal(string, string)", file="StringExtensions.cs"];
m2_37 [label="Entry string.Equals(string, System.StringComparison)", span="0-0", cluster="string.Equals(string, System.StringComparison)", file="StringExtensions.cs"];
m2_33 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()", file="StringExtensions.cs"];
m2_25 [label="Entry CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="45-45", cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs"];
m2_26 [label="var builder = new StringBuilder(value)", span="47-47", cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs"];
m2_27 [label=others, span="48-48", cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs"];
m2_28 [label="builder.Append(v)", span="50-50", cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs"];
m2_29 [label="return builder.ToString();", span="52-52", cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs"];
m2_30 [label="Exit CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", span="45-45", cluster="CommandLine.Infrastructure.StringExtensions.JoinTo(string, params string[])", file="StringExtensions.cs"];
m2_22 [label="Entry CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="40-40", cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="StringExtensions.cs"];
m2_23 [label="return value == null ? 0 : value.Length;", span="42-42", cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="StringExtensions.cs"];
m2_24 [label="Exit CommandLine.Infrastructure.StringExtensions.SafeLength(string)", span="40-40", cluster="CommandLine.Infrastructure.StringExtensions.SafeLength(string)", file="StringExtensions.cs"];
m2_8 [label="Entry CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="20-20", cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs"];
m2_9 [label="return string.Format(CultureInfo.InvariantCulture, value, arguments);", span="22-22", cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs"];
m2_10 [label="Exit CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", span="20-20", cluster="CommandLine.Infrastructure.StringExtensions.FormatInvariant(string, params object[])", file="StringExtensions.cs"];
m2_0 [label="Entry CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10", cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="StringExtensions.cs"];
m2_1 [label="return new string(c, 1);", span="12-12", cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="StringExtensions.cs"];
m2_2 [label="Exit CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", span="10-10", cluster="CommandLine.Infrastructure.StringExtensions.ToOneCharString(char)", file="StringExtensions.cs"];
m2_4 [label="Entry CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15", cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="StringExtensions.cs"];
m2_5 [label="return Convert.ToString(value, CultureInfo.InvariantCulture);", span="17-17", cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="StringExtensions.cs"];
m2_6 [label="Exit CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", span="15-15", cluster="CommandLine.Infrastructure.StringExtensions.ToStringInvariant<T>(T)", file="StringExtensions.cs"];
m2_11 [label="Entry string.Format(System.IFormatProvider, string, params object[])", span="0-0", cluster="string.Format(System.IFormatProvider, string, params object[])", file="StringExtensions.cs"];
m1_50 -> m1_51  [key=0, style=solid];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_3  [key=2, style=dotted];
m1_51 -> m1_19  [key=2, style=dotted];
m1_51 -> m1_34  [key=2, style=dotted];
m1_51 -> m1_35  [key=2, style=dotted];
m1_51 -> m1_36  [key=2, style=dotted];
m1_51 -> m1_37  [key=2, style=dotted];
m1_51 -> m1_20  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_4  [key=2, style=dotted];
m1_52 -> m1_21  [key=2, style=dotted];
m1_52 -> m1_38  [key=2, style=dotted];
m1_52 -> m1_54  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_52 -> m1_55  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_52 -> m1_56  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_52 -> m1_57  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_52 -> m1_58  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_53 -> m1_54  [key=0, style=solid];
m1_53 -> m1_5  [key=2, style=dotted];
m1_54 -> m1_55  [key=0, style=solid];
m1_54 -> m1_5  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_55 -> m1_5  [key=2, style=dotted];
m1_56 -> m1_57  [key=0, style=solid];
m1_56 -> m1_5  [key=2, style=dotted];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_5  [key=2, style=dotted];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_5  [key=2, style=dotted];
m1_59 -> m1_50  [key=0, style=bold, color=blue];
m1_22 -> m1_23  [key=0, style=solid];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_3  [key=2, style=dotted];
m1_23 -> m1_19  [key=2, style=dotted];
m1_23 -> m1_34  [key=2, style=dotted];
m1_23 -> m1_35  [key=2, style=dotted];
m1_23 -> m1_36  [key=2, style=dotted];
m1_23 -> m1_37  [key=2, style=dotted];
m1_23 -> m1_20  [key=2, style=dotted];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_4  [key=2, style=dotted];
m1_24 -> m1_21  [key=2, style=dotted];
m1_24 -> m1_38  [key=2, style=dotted];
m1_24 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_29  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_24 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_5  [key=2, style=dotted];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_5  [key=2, style=dotted];
m1_27 -> m1_28  [key=0, style=solid];
m1_27 -> m1_5  [key=2, style=dotted];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_5  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_5  [key=2, style=dotted];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_5  [key=2, style=dotted];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_5  [key=2, style=dotted];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_5  [key=2, style=dotted];
m1_33 -> m1_22  [key=0, style=bold, color=blue];
m1_66 -> m1_67  [key=0, style=solid];
m1_67 -> m1_68  [key=0, style=solid];
m1_67 -> m1_65  [key=2, style=dotted];
m1_67 -> m1_17  [key=2, style=dotted];
m1_67 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_67 -> m1_70  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_68 -> m1_69  [key=0, style=solid];
m1_69 -> m1_70  [key=0, style=solid];
m1_69 -> m1_34  [key=2, style=dotted];
m1_69 -> m1_35  [key=2, style=dotted];
m1_69 -> m1_36  [key=2, style=dotted];
m1_69 -> m1_37  [key=2, style=dotted];
m1_70 -> m1_71  [key=0, style=solid];
m1_70 -> m1_4  [key=2, style=dotted];
m1_70 -> m1_77  [key=2, style=dotted];
m1_70 -> m1_72  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_70 -> m1_73  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_70 -> m1_74  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_70 -> m1_75  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_71 -> m1_72  [key=0, style=solid];
m1_71 -> m1_5  [key=2, style=dotted];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_5  [key=2, style=dotted];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_5  [key=2, style=dotted];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_5  [key=2, style=dotted];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_5  [key=2, style=dotted];
m1_76 -> m1_66  [key=0, style=bold, color=blue];
m1_78 -> m1_79  [key=0, style=solid];
m1_79 -> m1_80  [key=0, style=solid];
m1_79 -> m1_65  [key=2, style=dotted];
m1_79 -> m1_17  [key=2, style=dotted];
m1_79 -> m1_81  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_79 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_80 -> m1_81  [key=0, style=solid];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_34  [key=2, style=dotted];
m1_81 -> m1_35  [key=2, style=dotted];
m1_81 -> m1_36  [key=2, style=dotted];
m1_81 -> m1_37  [key=2, style=dotted];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_4  [key=2, style=dotted];
m1_82 -> m1_21  [key=2, style=dotted];
m1_82 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_82 -> m1_85  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_82 -> m1_86  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_82 -> m1_87  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_82 -> m1_88  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_5  [key=2, style=dotted];
m1_84 -> m1_85  [key=0, style=solid];
m1_84 -> m1_5  [key=2, style=dotted];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_5  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_5  [key=2, style=dotted];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_5  [key=2, style=dotted];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_5  [key=2, style=dotted];
m1_89 -> m1_78  [key=0, style=bold, color=blue];
m1_149 -> m1_150  [key=0, style=solid];
m1_150 -> m1_151  [key=0, style=solid];
m1_150 -> m1_34  [key=2, style=dotted];
m1_150 -> m1_35  [key=2, style=dotted];
m1_150 -> m1_116  [key=2, style=dotted];
m1_150 -> m1_121  [key=2, style=dotted];
m1_150 -> m1_118  [key=2, style=dotted];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_163  [key=2, style=dotted];
m1_152 -> m1_153  [key=0, style=solid];
m1_152 -> m1_4  [key=2, style=dotted];
m1_152 -> m1_21  [key=2, style=dotted];
m1_152 -> m1_38  [key=2, style=dotted];
m1_152 -> m1_154  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_152 -> m1_155  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_152 -> m1_156  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_152 -> m1_157  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_152 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_152 -> m1_159  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_152 -> m1_160  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_152 -> m1_161  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_153 -> m1_154  [key=0, style=solid];
m1_153 -> m1_164  [key=2, style=dotted];
m1_153 -> m1_165  [key=2, style=dotted];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_164  [key=2, style=dotted];
m1_154 -> m1_165  [key=2, style=dotted];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_5  [key=2, style=dotted];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_5  [key=2, style=dotted];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_5  [key=2, style=dotted];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_5  [key=2, style=dotted];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_5  [key=2, style=dotted];
m1_160 -> m1_161  [key=0, style=solid];
m1_160 -> m1_5  [key=2, style=dotted];
m1_161 -> m1_162  [key=0, style=solid];
m1_161 -> m1_5  [key=2, style=dotted];
m1_162 -> m1_149  [key=0, style=bold, color=blue];
m1_192 -> m1_193  [key=0, style=solid];
m1_193 -> m1_194  [key=0, style=solid];
m1_193 -> m1_3  [key=2, style=dotted];
m1_193 -> m1_19  [key=2, style=dotted];
m1_193 -> m1_34  [key=2, style=dotted];
m1_193 -> m1_35  [key=2, style=dotted];
m1_193 -> m1_36  [key=2, style=dotted];
m1_193 -> m1_37  [key=2, style=dotted];
m1_193 -> m1_20  [key=2, style=dotted];
m1_194 -> m1_195  [key=0, style=solid];
m1_194 -> m1_4  [key=2, style=dotted];
m1_194 -> m1_21  [key=2, style=dotted];
m1_194 -> m1_38  [key=2, style=dotted];
m1_194 -> m1_196  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_194 -> m1_197  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_194 -> m1_198  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_194 -> m1_199  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_194 -> m1_200  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_194 -> m1_201  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_194 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_194 -> m1_203  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_195 -> m1_196  [key=0, style=solid];
m1_195 -> m1_5  [key=2, style=dotted];
m1_196 -> m1_197  [key=0, style=solid];
m1_196 -> m1_5  [key=2, style=dotted];
m1_197 -> m1_198  [key=0, style=solid];
m1_197 -> m1_5  [key=2, style=dotted];
m1_198 -> m1_199  [key=0, style=solid];
m1_198 -> m1_5  [key=2, style=dotted];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_5  [key=2, style=dotted];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_5  [key=2, style=dotted];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_5  [key=2, style=dotted];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_5  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_5  [key=2, style=dotted];
m1_204 -> m1_192  [key=0, style=bold, color=blue];
m1_39 -> m1_40  [key=0, style=solid];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_3  [key=2, style=dotted];
m1_40 -> m1_19  [key=2, style=dotted];
m1_40 -> m1_34  [key=2, style=dotted];
m1_40 -> m1_35  [key=2, style=dotted];
m1_40 -> m1_36  [key=2, style=dotted];
m1_40 -> m1_37  [key=2, style=dotted];
m1_40 -> m1_20  [key=2, style=dotted];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_4  [key=2, style=dotted];
m1_41 -> m1_21  [key=2, style=dotted];
m1_41 -> m1_38  [key=2, style=dotted];
m1_41 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_41 -> m1_44  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_41 -> m1_45  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_41 -> m1_46  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_41 -> m1_47  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_41 -> m1_48  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_42 -> m1_43  [key=0, style=solid];
m1_42 -> m1_5  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid];
m1_43 -> m1_5  [key=2, style=dotted];
m1_44 -> m1_45  [key=0, style=solid];
m1_44 -> m1_5  [key=2, style=dotted];
m1_45 -> m1_46  [key=0, style=solid];
m1_45 -> m1_5  [key=2, style=dotted];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_5  [key=2, style=dotted];
m1_47 -> m1_48  [key=0, style=solid];
m1_47 -> m1_5  [key=2, style=dotted];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_5  [key=2, style=dotted];
m1_49 -> m1_39  [key=0, style=bold, color=blue];
m1_90 -> m1_91  [key=0, style=solid];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_65  [key=2, style=dotted];
m1_91 -> m1_93  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_91 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label=sut];
m1_92 -> m1_93  [key=0, style=solid];
m1_93 -> m1_94  [key=0, style=solid];
m1_93 -> m1_19  [key=2, style=dotted];
m1_93 -> m1_34  [key=2, style=dotted];
m1_93 -> m1_35  [key=2, style=dotted];
m1_93 -> m1_36  [key=2, style=dotted];
m1_93 -> m1_37  [key=2, style=dotted];
m1_93 -> m1_20  [key=2, style=dotted];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_4  [key=2, style=dotted];
m1_94 -> m1_21  [key=2, style=dotted];
m1_94 -> m1_96  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_94 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_94 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_94 -> m1_99  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_94 -> m1_100  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_5  [key=2, style=dotted];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_5  [key=2, style=dotted];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_5  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_5  [key=2, style=dotted];
m1_99 -> m1_100  [key=0, style=solid];
m1_99 -> m1_5  [key=2, style=dotted];
m1_100 -> m1_101  [key=0, style=solid];
m1_100 -> m1_5  [key=2, style=dotted];
m1_101 -> m1_90  [key=0, style=bold, color=blue];
m1_177 -> m1_178  [key=0, style=solid];
m1_178 -> m1_179  [key=0, style=solid];
m1_178 -> m1_36  [key=2, style=dotted];
m1_178 -> m1_190  [key=2, style=dotted];
m1_179 -> m1_180  [key=0, style=solid];
m1_179 -> m1_34  [key=2, style=dotted];
m1_179 -> m1_191  [key=2, style=dotted];
m1_179 -> m1_125  [key=2, style=dotted];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_163  [key=2, style=dotted];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_4  [key=2, style=dotted];
m1_181 -> m1_21  [key=2, style=dotted];
m1_181 -> m1_38  [key=2, style=dotted];
m1_181 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_181 -> m1_184  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_181 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_181 -> m1_186  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_181 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_181 -> m1_188  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_164  [key=2, style=dotted];
m1_182 -> m1_165  [key=2, style=dotted];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_164  [key=2, style=dotted];
m1_183 -> m1_165  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_5  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_5  [key=2, style=dotted];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_5  [key=2, style=dotted];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_5  [key=2, style=dotted];
m1_188 -> m1_189  [key=0, style=solid];
m1_188 -> m1_5  [key=2, style=dotted];
m1_189 -> m1_177  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_4  [key=2, style=dotted];
m1_1 -> m1_5  [key=2, style=dotted];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_60 -> m1_61  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_61 -> m1_65  [key=2, style=dotted];
m1_61 -> m1_34  [key=2, style=dotted];
m1_61 -> m1_35  [key=2, style=dotted];
m1_61 -> m1_36  [key=2, style=dotted];
m1_61 -> m1_37  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_4  [key=2, style=dotted];
m1_62 -> m1_21  [key=2, style=dotted];
m1_62 -> m1_38  [key=2, style=dotted];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_5  [key=2, style=dotted];
m1_64 -> m1_60  [key=0, style=bold, color=blue];
m1_205 -> m1_206  [key=0, style=solid];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_34  [key=2, style=dotted];
m1_206 -> m1_35  [key=2, style=dotted];
m1_206 -> m1_36  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_217  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_21  [key=2, style=dotted];
m1_208 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_208 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_208 -> m1_212  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_208 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_208 -> m1_214  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_208 -> m1_215  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_5  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_5  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_5  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_5  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_5  [key=2, style=dotted];
m1_214 -> m1_215  [key=0, style=solid];
m1_214 -> m1_5  [key=2, style=dotted];
m1_215 -> m1_216  [key=0, style=solid];
m1_215 -> m1_5  [key=2, style=dotted];
m1_216 -> m1_205  [key=0, style=bold, color=blue];
m1_146 -> m1_147  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_131  [key=0, style=solid];
m1_128 -> m1_133  [key=0, style=solid];
m1_128 -> m1_135  [key=0, style=solid];
m1_128 -> m1_137  [key=0, style=solid];
m1_128 -> m1_139  [key=0, style=solid];
m1_128 -> m1_141  [key=0, style=solid];
m1_128 -> m1_143  [key=0, style=solid];
m1_130 -> m1_144  [key=0, style=solid];
m1_132 -> m1_144  [key=0, style=solid];
m1_134 -> m1_144  [key=0, style=solid];
m1_136 -> m1_144  [key=0, style=solid];
m1_138 -> m1_144  [key=0, style=solid];
m1_142 -> m1_144  [key=0, style=solid];
m1_127 -> m1_128  [key=0, style=solid];
m1_127 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_127 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_127 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_127 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_127 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_127 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_129 -> m1_130  [key=0, style=solid];
m1_131 -> m1_132  [key=0, style=solid];
m1_133 -> m1_134  [key=0, style=solid];
m1_135 -> m1_136  [key=0, style=solid];
m1_137 -> m1_138  [key=0, style=solid];
m1_139 -> m1_140  [key=0, style=solid];
m1_141 -> m1_142  [key=0, style=solid];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_145  [key=2, style=dotted];
m1_140 -> m1_144  [key=0, style=solid];
m1_144 -> m1_127  [key=0, style=bold, color=blue];
m1_147 -> m1_148  [key=0, style=solid];
m1_148 -> m1_146  [key=0, style=bold, color=blue];
m1_243 -> m1_244  [key=0, style=solid, color=green];
m1_244 -> m1_245  [key=0, style=solid, color=green];
m1_244 -> m1_34  [key=2, style=dotted, color=green];
m1_244 -> m1_253  [key=2, style=dotted, color=green];
m1_244 -> m1_116  [key=2, style=dotted, color=green];
m1_244 -> m1_246  [key=1, style=dashed, color=green, label=fakeResult];
m1_245 -> m1_246  [key=0, style=solid, color=green];
m1_245 -> m1_254  [key=2, style=dotted, color=green];
m1_246 -> m1_247  [key=0, style=solid, color=green];
m1_246 -> m1_163  [key=2, style=dotted, color=green];
m1_247 -> m1_248  [key=0, style=solid, color=green];
m1_247 -> m1_4  [key=2, style=dotted, color=green];
m1_248 -> m1_249  [key=0, style=solid, color=green];
m1_248 -> m1_21  [key=2, style=dotted, color=green];
m1_248 -> m1_38  [key=2, style=dotted, color=green];
m1_248 -> m1_250  [key=1, style=dashed, color=green, label=lines];
m1_248 -> m1_251  [key=1, style=dashed, color=green, label=lines];
m1_249 -> m1_250  [key=0, style=solid, color=green];
m1_249 -> m1_164  [key=2, style=dotted, color=green];
m1_249 -> m1_255  [key=2, style=dotted, color=green];
m1_250 -> m1_251  [key=0, style=solid, color=green];
m1_250 -> m1_164  [key=2, style=dotted, color=green];
m1_250 -> m1_255  [key=2, style=dotted, color=green];
m1_251 -> m1_252  [key=0, style=solid, color=green];
m1_251 -> m1_164  [key=2, style=dotted, color=green];
m1_251 -> m1_255  [key=2, style=dotted, color=green];
m1_252 -> m1_243  [key=0, style=bold, color=blue];
m1_218 -> m1_219  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_34  [key=2, style=dotted];
m1_219 -> m1_35  [key=2, style=dotted];
m1_219 -> m1_116  [key=2, style=dotted];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_163  [key=2, style=dotted];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_4  [key=2, style=dotted];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_21  [key=2, style=dotted];
m1_222 -> m1_38  [key=2, style=dotted];
m1_222 -> m1_224  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_225  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_231  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_232  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_234  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_235  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_236  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_237  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_239  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_240  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_222 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_164  [key=2, style=dotted];
m1_223 -> m1_165  [key=2, style=dotted];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_164  [key=2, style=dotted];
m1_224 -> m1_165  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_5  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_5  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_5  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_5  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_5  [key=2, style=dotted];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_5  [key=2, style=dotted];
m1_231 -> m1_232  [key=0, style=solid];
m1_231 -> m1_5  [key=2, style=dotted];
m1_232 -> m1_233  [key=0, style=solid];
m1_232 -> m1_5  [key=2, style=dotted];
m1_233 -> m1_234  [key=0, style=solid];
m1_233 -> m1_5  [key=2, style=dotted];
m1_234 -> m1_235  [key=0, style=solid];
m1_234 -> m1_5  [key=2, style=dotted];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_5  [key=2, style=dotted];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_5  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_5  [key=2, style=dotted];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_5  [key=2, style=dotted];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_5  [key=2, style=dotted];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_5  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_5  [key=2, style=dotted];
m1_242 -> m1_218  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_7 -> m1_8  [key=0, style=solid];
m1_7 -> m1_16  [key=2, style=dotted];
m1_7 -> m1_17  [key=2, style=dotted];
m1_7 -> m1_18  [key=2, style=dotted];
m1_7 -> m1_19  [key=2, style=dotted];
m1_7 -> m1_20  [key=2, style=dotted];
m1_8 -> m1_9  [key=0, style=solid];
m1_8 -> m1_4  [key=2, style=dotted];
m1_8 -> m1_21  [key=2, style=dotted];
m1_8 -> m1_10  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_11  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_8 -> m1_14  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_9 -> m1_10  [key=0, style=solid];
m1_9 -> m1_5  [key=2, style=dotted];
m1_10 -> m1_11  [key=0, style=solid];
m1_10 -> m1_5  [key=2, style=dotted];
m1_11 -> m1_12  [key=0, style=solid];
m1_11 -> m1_5  [key=2, style=dotted];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_5  [key=2, style=dotted];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_5  [key=2, style=dotted];
m1_14 -> m1_15  [key=0, style=solid];
m1_14 -> m1_5  [key=2, style=dotted];
m1_15 -> m1_6  [key=0, style=bold, color=blue];
m1_102 -> m1_103  [key=0, style=solid];
m1_103 -> m1_104  [key=0, style=solid];
m1_103 -> m1_34  [key=2, style=dotted];
m1_103 -> m1_35  [key=2, style=dotted];
m1_103 -> m1_116  [key=2, style=dotted];
m1_103 -> m1_117  [key=2, style=dotted];
m1_103 -> m1_118  [key=2, style=dotted];
m1_103 -> m1_119  [key=2, style=dotted];
m1_103 -> m1_120  [key=2, style=dotted];
m1_103 -> m1_121  [key=2, style=dotted];
m1_103 -> m1_122  [key=2, style=dotted];
m1_103 -> m1_123  [key=2, style=dotted];
m1_103 -> m1_124  [key=2, style=dotted];
m1_103 -> m1_125  [key=2, style=dotted];
m1_103 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=fakeResult];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_128  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_104 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_104 -> m1_132  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_104 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_104 -> m1_136  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_104 -> m1_138  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_104 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Error"];
m1_104 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label=fakeRenderer];
m1_104 -> m1_104  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<CommandLine.Error, string> fakeRenderer"];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_126  [key=2, style=dotted];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_105  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string> fakeMutExclRenderer"];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_21  [key=2, style=dotted];
m1_107 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_107 -> m1_110  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_107 -> m1_111  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_107 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_107 -> m1_113  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_107 -> m1_114  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_5  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_5  [key=2, style=dotted];
m1_110 -> m1_111  [key=0, style=solid];
m1_110 -> m1_5  [key=2, style=dotted];
m1_111 -> m1_112  [key=0, style=solid];
m1_111 -> m1_5  [key=2, style=dotted];
m1_112 -> m1_113  [key=0, style=solid];
m1_112 -> m1_5  [key=2, style=dotted];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_5  [key=2, style=dotted];
m1_114 -> m1_115  [key=0, style=solid];
m1_114 -> m1_5  [key=2, style=dotted];
m1_115 -> m1_102  [key=0, style=bold, color=blue];
m1_166 -> m1_167  [key=0, style=solid];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_34  [key=2, style=dotted];
m1_167 -> m1_35  [key=2, style=dotted];
m1_167 -> m1_125  [key=2, style=dotted];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_163  [key=2, style=dotted];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_4  [key=2, style=dotted];
m1_169 -> m1_21  [key=2, style=dotted];
m1_169 -> m1_38  [key=2, style=dotted];
m1_169 -> m1_171  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_169 -> m1_172  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_169 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_169 -> m1_174  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_169 -> m1_175  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_164  [key=2, style=dotted];
m1_170 -> m1_165  [key=2, style=dotted];
m1_171 -> m1_172  [key=0, style=solid];
m1_171 -> m1_164  [key=2, style=dotted];
m1_171 -> m1_165  [key=2, style=dotted];
m1_172 -> m1_173  [key=0, style=solid];
m1_172 -> m1_5  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_173 -> m1_5  [key=2, style=dotted];
m1_174 -> m1_175  [key=0, style=solid];
m1_174 -> m1_5  [key=2, style=dotted];
m1_175 -> m1_176  [key=0, style=solid];
m1_175 -> m1_5  [key=2, style=dotted];
m1_176 -> m1_166  [key=0, style=bold, color=blue];
m2_15 -> m2_16  [key=0, style=solid];
m2_16 -> m2_17  [key=0, style=solid];
m2_16 -> m2_3  [key=2, style=dotted];
m2_17 -> m2_15  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_11  [key=2, style=dotted];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m2_34 -> m2_35  [key=0, style=solid];
m2_35 -> m2_36  [key=0, style=solid];
m2_35 -> m2_37  [key=2, style=dotted];
m2_36 -> m2_34  [key=0, style=bold, color=blue];
m2_38 -> m2_39  [key=0, style=solid];
m2_39 -> m2_40  [key=0, style=solid];
m2_39 -> m2_37  [key=2, style=dotted];
m2_40 -> m2_38  [key=0, style=bold, color=blue];
m2_18 -> m2_19  [key=0, style=solid];
m2_19 -> m2_20  [key=0, style=solid];
m2_19 -> m2_21  [key=2, style=dotted];
m2_20 -> m2_18  [key=0, style=bold, color=blue];
m2_25 -> m2_26  [key=0, style=solid];
m2_25 -> m2_27  [key=1, style=dashed, color=darkseagreen4, label="params string[]"];
m2_26 -> m2_27  [key=0, style=solid];
m2_26 -> m2_31  [key=2, style=dotted];
m2_26 -> m2_28  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_26 -> m2_29  [key=1, style=dashed, color=darkseagreen4, label=builder];
m2_27 -> m2_28  [key=0, style=solid];
m2_27 -> m2_29  [key=0, style=solid];
m2_28 -> m2_27  [key=0, style=solid];
m2_28 -> m2_32  [key=2, style=dotted];
m2_29 -> m2_30  [key=0, style=solid];
m2_29 -> m2_33  [key=2, style=dotted];
m2_30 -> m2_25  [key=0, style=bold, color=blue];
m2_22 -> m2_23  [key=0, style=solid];
m2_23 -> m2_24  [key=0, style=solid];
m2_24 -> m2_22  [key=0, style=bold, color=blue];
m2_8 -> m2_9  [key=0, style=solid];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
}
