digraph  {
m2_3 [label="Entry Humanizer.Localisation.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.EnglishNumberToWordsConverter.EnglishNumberToWordsConverter()", file="Tokenizer.cs"];
m2_11 [label="Entry Humanizer.Localisation.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", span="5-5", cluster="Humanizer.Localisation.FarsiNumberToWordsConverter.FarsiNumberToWordsConverter()", file="Tokenizer.cs"];
m2_15 [label="Entry Humanizer.Localisation.INumberToWordsConverter.Convert(int)", span="12-12", cluster="Humanizer.Localisation.INumberToWordsConverter.Convert(int)", file="Tokenizer.cs"];
m2_8 [label="Entry lambda expression", span="17-17", cluster="lambda expression", file="Tokenizer.cs"];
m2_0 [label="Entry lambda expression", span="15-15", cluster="lambda expression", file="Tokenizer.cs"];
m2_1 [label="new EnglishNumberToWordsConverter()", span="15-15", cluster="lambda expression", file="Tokenizer.cs"];
m2_2 [label="Exit lambda expression", span="15-15", cluster="lambda expression", file="Tokenizer.cs"];
m2_4 [label="Entry lambda expression", span="16-16", cluster="lambda expression", file="Tokenizer.cs"];
m2_5 [label="new ArabicNumberToWordsConverter()", span="16-16", cluster="lambda expression", file="Tokenizer.cs"];
m2_6 [label="Exit lambda expression", span="16-16", cluster="lambda expression", file="Tokenizer.cs"];
m2_9 [label="new FarsiNumberToWordsConverter()", span="17-17", cluster="lambda expression", file="Tokenizer.cs"];
m2_10 [label="Exit lambda expression", span="17-17", cluster="lambda expression", file="Tokenizer.cs"];
m2_7 [label="Entry Humanizer.Localisation.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", span="4-4", cluster="Humanizer.Localisation.ArabicNumberToWordsConverter.ArabicNumberToWordsConverter()", file="Tokenizer.cs"];
m2_12 [label="Entry Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="Tokenizer.cs"];
m2_13 [label="return Converter.Convert(number);", span="27-27", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="Tokenizer.cs"];
m2_14 [label="Exit Humanizer.NumberToWordsExtension.ToWords(int)", span="25-25", cluster="Humanizer.NumberToWordsExtension.ToWords(int)", file="Tokenizer.cs"];
m3_0 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string, string)", span="23-23", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_3 [label="longName == null", span="26-26", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", color=green, community=0, file="TokenPartitionerTests.cs"];
m3_2 [label="throw new ArgumentNullException(''shortName'');", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_4 [label="throw new ArgumentNullException(''longName'');", span="26-26", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_1 [label="shortName == null", span="25-25", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_5 [label="this.shortName = shortName", span="28-28", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_13 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string, string)", span="23-23", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_7 [label="setName = string.Empty", span="30-30", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs", color=red, community=0];
m3_15 [label="Entry CommandLine.OptionAttribute.OptionAttribute()", span="42-42", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="TokenPartitionerTests.cs"];
m3_11 [label="helpText = string.Empty", span="34-34", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_23 [label="CommandLine.OptionAttribute", span="", cluster="Unk.Any", file="TokenPartitionerTests.cs"];
m3_12 [label="metaValue = string.Empty", span="35-35", cluster="CommandLine.OptionAttribute.OptionAttribute(string, string)", file="TokenPartitionerTests.cs"];
m3_6 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TokenPartitionerTests.cs"];
m3_8 [label="Entry CSharpx.Maybe.Nothing<T>()", span="116-116", cluster="CSharpx.Maybe.Nothing<T>()", file="TokenPartitionerTests.cs"];
m3_9 [label="Entry System.Collections.Generic.List<T>.List()", span="0-0", cluster="System.Collections.Generic.List<T>.List()", file="TokenPartitionerTests.cs"];
m3_10 [label="Entry CSharpx.Maybe.Just<T>(T)", span="124-124", cluster="CSharpx.Maybe.Just<T>(T)", file="TokenPartitionerTests.cs"];
m3_14 [label="Entry System.ArgumentNullException.ArgumentNullException(string)", span="0-0", cluster="System.ArgumentNullException.ArgumentNullException(string)", file="TokenPartitionerTests.cs"];
m3_41 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_16 [label="Exit CommandLine.OptionAttribute.OptionAttribute()", span="42-42", cluster="CommandLine.OptionAttribute.OptionAttribute()", file="TokenPartitionerTests.cs"];
m3_21 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char)", span="70-70", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="TokenPartitionerTests.cs"];
m3_17 [label="Entry CommandLine.OptionAttribute.OptionAttribute(string)", span="51-51", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", color=green, community=0, file="TokenPartitionerTests.cs"];
m3_18 [label="Exit CommandLine.OptionAttribute.OptionAttribute(string)", span="51-51", cluster="CommandLine.OptionAttribute.OptionAttribute(string)", file="TokenPartitionerTests.cs"];
m3_35 [label="Entry lambda expression", span="56-56", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_39 [label="result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_36 [label="TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.InvariantCulture)", span="56-56", cluster="lambda expression", color=green, community=0, file="TokenPartitionerTests.cs"];
m3_37 [label="Exit lambda expression", span="56-56", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_20 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char, string)", span="61-61", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="TokenPartitionerTests.cs"];
m3_22 [label="Exit CommandLine.OptionAttribute.OptionAttribute(char)", span="70-70", cluster="CommandLine.OptionAttribute.OptionAttribute(char)", file="TokenPartitionerTests.cs"];
m3_24 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_25 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_38 [label="Entry lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_40 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_42 [label="a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value)", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_26 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_43 [label="Exit lambda expression", span="60-60", cluster="lambda expression", file="TokenPartitionerTests.cs"];
m3_28 [label="Entry Unk.SequenceEqual", span="", cluster="Unk.SequenceEqual", file="TokenPartitionerTests.cs"];
m3_27 [label="Entry string.Equals(string)", span="0-0", cluster="string.Equals(string)", file="TokenPartitionerTests.cs"];
m3_19 [label="Entry CommandLine.OptionAttribute.OptionAttribute(char, string)", span="61-61", cluster="CommandLine.OptionAttribute.OptionAttribute(char, string)", file="TokenPartitionerTests.cs"];
m3_29 [label="Entry CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m3_32 [label="var result = TokenPartitioner.Partition(\r\n                new[] { Token.Name(''i''), Token.Value(''10''), Token.Value(''10''), Token.Value(''30''), Token.Value(''40'') },\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, specs, StringComparer.InvariantCulture)\r\n                )", span="54-57", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", color=green, community=0, file="TokenPartitionerTests.cs"];
m3_31 [label="var specs =new[]\r\n                {\r\n                    new OptionSpecification(string.Empty, ''stringvalue'', false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(string), TargetType.Scalar),\r\n                    new OptionSpecification(''i'', string.Empty, false, string.Empty, Maybe.Just(3), Maybe.Just(4), '\0', null, string.Empty, string.Empty, new List<string>(), typeof(IEnumerable<int>), TargetType.Sequence)\r\n                }", span="47-51", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m3_33 [label="Assert.True(expectedSequence.All(a => result.Options.Any(r => a.Key.Equals(r.Key) && a.Value.SequenceEqual(r.Value))))", span="60-60", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m3_30 [label="var expectedSequence = new[]\r\n                {\r\n                    new KeyValuePair<string, IEnumerable<string>>(''i'', new[] {''10'', ''10'', ''30'', ''40''}) \r\n                }", span="43-46", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m3_34 [label="Exit CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", span="40-40", cluster="CommandLine.Tests.Unit.Core.TokenPartitionerTests.Partition_sequence_returns_sequence_with_duplicates()", file="TokenPartitionerTests.cs"];
m3_44 [label=specs, span="", file="TokenPartitionerTests.cs"];
m3_47 [label=specs, span="", file="TokenPartitionerTests.cs"];
m3_45 [label=result, span="", file="TokenPartitionerTests.cs"];
m3_48 [label=result, span="", file="TokenPartitionerTests.cs"];
m3_46 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="TokenPartitionerTests.cs"];
m3_49 [label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>", span="", file="TokenPartitionerTests.cs"];
m4_59 [label="Entry CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="47-47", cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_60 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { })\r\n                from t in tseq\r\n                select t;", span="51-58", cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_61 [label="Exit CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="47-47", cluster="CommandLine.Core.TokenPartitioner.PartitionScalars(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_19 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", span="24-24", cluster="System.Collections.Generic.IEnumerable<TSource>.Pairwise<TSource, TResult>(System.Func<TSource, TSource, TResult>)", file="TypeDescriptor.cs"];
m4_17 [label="Entry Unk.PartitionSequences", span="", cluster="Unk.PartitionSequences", file="TypeDescriptor.cs"];
m4_86 [label="Entry CommandLine.Core.Token.Equals(CommandLine.Core.Token)", span="59-59", cluster="CommandLine.Core.Token.Equals(CommandLine.Core.Token)", file="TypeDescriptor.cs"];
m4_37 [label="Entry Unk.IsValue", span="", cluster="Unk.IsValue", file="TypeDescriptor.cs"];
m4_58 [label="Entry CommandLine.Core.Token.IsName()", span="72-72", cluster="CommandLine.Core.Token.IsName()", file="TypeDescriptor.cs"];
m4_13 [label="Entry CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="38-38", cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_51 [label="return from t in tokens\r\n                   where typeLookup(t.Text).Return(info => t.IsName() && info.Item1 == DescriptorType.Boolean, false)\r\n                   select t;", span="42-44", cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_52 [label="Exit CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="38-38", cluster="CommandLine.Core.TokenPartitioner.PartitionSwitches(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_53 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="TypeDescriptor.cs"];
m4_14 [label="Entry Unk.Where", span="", cluster="Unk.Where", file="TypeDescriptor.cs"];
m4_22 [label="Entry Unk.Create", span="", cluster="Unk.Create", file="TypeDescriptor.cs"];
m4_16 [label="Entry Unk.PartitionScalars", span="", cluster="Unk.PartitionScalars", file="TypeDescriptor.cs"];
m4_44 [label="Entry CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="89-89", cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TypeDescriptor.cs"];
m4_111 [label="return new KeyValuePair<string, IEnumerable<string>>(value, values);", span="91-91", cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TypeDescriptor.cs"];
m4_112 [label="Exit CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", span="89-89", cluster="CommandLine.Core.TokenPartitioner.CreateValue(string, params string[])", file="TypeDescriptor.cs"];
m4_30 [label="Entry Unk.Contains", span="", cluster="Unk.Contains", file="TypeDescriptor.cs"];
m4_96 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="TypeDescriptor.cs"];
m4_108 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_24 [label="!switches.Contains(x)", span="22-22", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_23 [label="Entry lambda expression", span="22-22", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_28 [label="!scalars.Contains(x)", span="24-24", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_27 [label="Entry lambda expression", span="24-24", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_32 [label="!sequences.Contains(x)", span="26-26", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_31 [label="Entry lambda expression", span="26-26", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_34 [label="Entry lambda expression", span="27-27", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_39 [label="!values.Contains(x)", span="28-28", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_38 [label="Entry lambda expression", span="28-28", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_41 [label="Entry lambda expression", span="31-31", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_45 [label="Entry lambda expression", span="32-32", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_48 [label="Entry lambda expression", span="34-34", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_25 [label="Exit lambda expression", span="22-22", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_29 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_33 [label="Exit lambda expression", span="26-26", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_35 [label="v.IsValue()", span="27-27", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_36 [label="Exit lambda expression", span="27-27", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_40 [label="Exit lambda expression", span="28-28", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_42 [label="CreateValue(t.Text,''true'')", span="31-31", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_43 [label="Exit lambda expression", span="31-31", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_46 [label="CreateValue(f.Text, s.Text)", span="32-32", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_47 [label="Exit lambda expression", span="32-32", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_49 [label="t.Text", span="34-34", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_50 [label="Exit lambda expression", span="34-34", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_55 [label="Entry lambda expression", span="43-43", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_56 [label="t.IsName() && info.Item1 == DescriptorType.Boolean", span="43-43", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_57 [label="Exit lambda expression", span="43-43", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_63 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                    info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }, new Token[] { })\r\n                                    : new Token[] { }", span="53-56", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_62 [label="Entry lambda expression", span="52-56", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_67 [label="info.Item1 == DescriptorType.Scalar ? new[] { f, s } : new Token[] { }", span="55-55", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_64 [label="Exit lambda expression", span="52-56", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_66 [label="Entry lambda expression", span="54-55", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_68 [label="Exit lambda expression", span="54-55", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_73 [label="f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {}", span="67-72", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_76 [label="info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { }", span="69-71", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_72 [label="Entry lambda expression", span="66-72", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_84 [label="t.Equals(f)", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_74 [label="Exit lambda expression", span="66-72", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_75 [label="Entry lambda expression", span="68-71", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_77 [label="Exit lambda expression", span="68-71", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_83 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_87 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_90 [label="Entry lambda expression", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_85 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_88 [label="v.IsValue()", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_89 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_91 [label=items, span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_92 [label="Exit lambda expression", span="70-70", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_98 [label="f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty)", span="82-84", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_97 [label="Entry lambda expression", span="81-84", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_103 [label="t.Equals(f)", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_99 [label="Exit lambda expression", span="81-84", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_102 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_105 [label="Entry lambda expression", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_104 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_106 [label="v.IsValue()", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_107 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_109 [label="x.Text", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_110 [label="Exit lambda expression", span="83-83", cluster="lambda expression", file="TypeDescriptor.cs"];
m4_0 [label="Entry CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_1 [label="var tokenList = tokens.ToList()", span="20-20", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_2 [label="var switches = PartitionSwitches(tokenList, typeLookup).ToList()", span="21-21", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_4 [label="var scalars = PartitionScalars(tokensExceptSwitches, typeLookup).ToList()", span="23-23", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_6 [label="var sequences = PartitionSequences(tokensExceptSwitchesAndScalars, typeLookup).ToList()", span="25-25", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_3 [label="var tokensExceptSwitches = tokenList.Where(x => !switches.Contains(x)).ToList()", span="22-22", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_10 [label="return Tuple.Create(\r\n                    switches.Select(t => CreateValue(t.Text,''true''))\r\n                        .Concat(scalars.Pairwise((f, s) => CreateValue(f.Text, s.Text)))\r\n                        .Concat(SequenceTokensToKeyValuePairEnumerable(sequences)),\r\n                values.Select(t => t.Text),\r\n                errors);", span="30-35", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", color=red, community=0, file="TypeDescriptor.cs"];
m4_5 [label="var tokensExceptSwitchesAndScalars = (tokensExceptSwitches.Where(x => !scalars.Contains(x))).ToList()", span="24-24", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_7 [label="var tokensExceptSwitchesAndScalarsAndSeq = tokensExceptSwitchesAndScalars.Where(x => !sequences.Contains(x)).ToList()", span="26-26", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_8 [label="var values = tokensExceptSwitchesAndScalarsAndSeq.Where(v => v.IsValue()).ToList()", span="27-27", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_9 [label="var errors = tokensExceptSwitchesAndScalarsAndSeq.Where(x => !values.Contains(x))", span="28-28", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_11 [label="Exit CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="16-16", cluster="CommandLine.Core.TokenPartitioner.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_81 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", file="TypeDescriptor.cs"];
m4_78 [label="Entry System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.SkipWhile<TSource>(System.Func<TSource, bool>)", file="TypeDescriptor.cs"];
m4_20 [label="Entry Unk.Concat", span="", cluster="Unk.Concat", file="TypeDescriptor.cs"];
m4_69 [label="Entry CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="61-61", cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_70 [label="return from tseq in tokens.Pairwise(\r\n                (f, s) =>     \r\n                        f.IsName() && s.IsValue()\r\n                            ? typeLookup(f.Text).Return(info =>\r\n                                   info.Item1 == DescriptorType.Sequence\r\n                                        ? new[] { f }.Concat(tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Take(MaybeExtensions.Return(info.Item2, items => items, 0)))\r\n                                        : new Token[] { } , new Token[] { })\r\n                            : new Token[] {})\r\n                from t in tseq\r\n                select t;", span="65-74", cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_71 [label="Exit CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", span="61-61", cluster="CommandLine.Core.TokenPartitioner.PartitionSequences(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>)", file="TypeDescriptor.cs"];
m4_95 [label="Entry Unk.Pairwise", span="", cluster="Unk.Pairwise", file="TypeDescriptor.cs"];
m4_79 [label="Entry System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.TakeWhile<TSource>(System.Func<TSource, bool>)", file="TypeDescriptor.cs"];
m4_21 [label="Entry CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="77-77", cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TypeDescriptor.cs"];
m4_93 [label="return from t in tokens.Pairwise(\r\n                (f, s) =>\r\n                        f.IsName()\r\n                            ? CreateValue(f.Text, tokens.SkipWhile(t => t.Equals(f)).TakeWhile(v => v.IsValue()).Select(x => x.Text).ToArray())\r\n                            : CreateValue(string.Empty))\r\n                   where t.Key.Length > 0 && t.Value.Any()\r\n                   select t;", span="80-86", cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TypeDescriptor.cs"];
m4_94 [label="Exit CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="77-77", cluster="CommandLine.Core.TokenPartitioner.SequenceTokensToKeyValuePairEnumerable(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="TypeDescriptor.cs"];
m4_18 [label="Entry Unk.Select", span="", cluster="Unk.Select", file="TypeDescriptor.cs"];
m4_101 [label="Entry Unk.CreateValue", span="", cluster="Unk.CreateValue", file="TypeDescriptor.cs"];
m4_15 [label="Entry Unk.ToList", span="", cluster="Unk.ToList", file="TypeDescriptor.cs"];
m4_65 [label="Entry CommandLine.Core.Token.IsValue()", span="77-77", cluster="CommandLine.Core.Token.IsValue()", file="TypeDescriptor.cs"];
m4_113 [label="Entry System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", span="0-0", cluster="System.Collections.Generic.KeyValuePair<TKey, TValue>.KeyValuePair(TKey, TValue)", file="TypeDescriptor.cs"];
m4_80 [label="Entry CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.MaybeExtensions.Return<T1, T2>(CommandLine.Infrastructure.Maybe<T1>, System.Func<T1, T2>, T2)", file="TypeDescriptor.cs"];
m4_100 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="TypeDescriptor.cs"];
m4_12 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToList<TSource>()", file="TypeDescriptor.cs"];
m4_54 [label="Entry CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="103-103", cluster="CommandLine.Infrastructure.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="TypeDescriptor.cs"];
m4_82 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="TypeDescriptor.cs"];
m4_26 [label="Entry System.Collections.Generic.List<T>.Contains(T)", span="0-0", cluster="System.Collections.Generic.List<T>.Contains(T)", file="TypeDescriptor.cs"];
m4_114 [label=switches, span="", file="TypeDescriptor.cs"];
m4_115 [label=scalars, span="", file="TypeDescriptor.cs"];
m4_116 [label=sequences, span="", file="TypeDescriptor.cs"];
m4_117 [label=values, span="", file="TypeDescriptor.cs"];
m4_118 [label=t, span="", file="TypeDescriptor.cs"];
m4_119 [label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span="", file="TypeDescriptor.cs"];
m4_120 [label="CommandLine.Core.Token", span="", file="TypeDescriptor.cs"];
m4_121 [label="CommandLine.Core.Token", span="", file="TypeDescriptor.cs"];
m4_122 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="TypeDescriptor.cs"];
m4_123 [label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>", span="", file="TypeDescriptor.cs"];
m4_124 [label="CommandLine.Core.Token", span="", file="TypeDescriptor.cs"];
m4_125 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", span="", file="TypeDescriptor.cs"];
m4_126 [label="CommandLine.Core.Token", span="", file="TypeDescriptor.cs"];
m2_8 -> m2_9  [key=0, style=solid];
m2_0 -> m2_1  [key=0, style=solid];
m2_1 -> m2_2  [key=0, style=solid];
m2_1 -> m2_3  [key=2, style=dotted];
m2_2 -> m2_0  [key=0, style=bold, color=blue];
m2_4 -> m2_5  [key=0, style=solid];
m2_5 -> m2_6  [key=0, style=solid];
m2_5 -> m2_7  [key=2, style=dotted];
m2_6 -> m2_4  [key=0, style=bold, color=blue];
m2_9 -> m2_10  [key=0, style=solid];
m2_9 -> m2_11  [key=2, style=dotted];
m2_10 -> m2_8  [key=0, style=bold, color=blue];
m2_12 -> m2_13  [key=0, style=solid];
m2_13 -> m2_14  [key=0, style=solid];
m2_13 -> m2_15  [key=2, style=dotted];
m2_14 -> m2_12  [key=0, style=bold, color=blue];
m3_0 -> m3_1  [key=0, style=solid];
m3_0 -> m3_3  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_0 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_0 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label=string];
m3_3 -> m3_4  [key=0, style=solid, color=green];
m3_3 -> m3_11  [key=2, style=dotted, color=green];
m3_3 -> m3_12  [key=2, style=dotted, color=green];
m3_3 -> m3_13  [key=2, style=dotted, color=green];
m3_3 -> m3_16  [key=1, style=dashed, color=green, label="lambda expression"];
m3_3 -> m3_21  [key=1, style=dashed, color=green, label=result];
m3_3 -> m3_5  [key=0, style=solid];
m3_2 -> m3_3  [key=0, style=solid, color=green];
m3_2 -> m3_17  [key=1, style=dashed, color=green, label=specs];
m3_2 -> m3_7  [key=2, style=dotted];
m3_2 -> m3_8  [key=2, style=dotted];
m3_2 -> m3_9  [key=2, style=dotted];
m3_2 -> m3_10  [key=2, style=dotted];
m3_2 -> m3_13  [key=0, style=solid];
m3_2 -> m3_14  [key=2, style=dotted];
m3_4 -> m3_5  [key=0, style=solid];
m3_4 -> m3_14  [key=2, style=dotted];
m3_4 -> m3_15  [key=2, style=dotted];
m3_4 -> m3_20  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_4 -> m3_13  [key=0, style=solid];
m3_1 -> m3_2  [key=0, style=solid];
m3_1 -> m3_4  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m3_1 -> m3_6  [key=2, style=dotted];
m3_1 -> m3_3  [key=0, style=solid];
m3_5 -> m3_0  [key=0, style=bold, color=blue];
m3_5 -> m3_6  [key=0, style=solid];
m3_13 -> m3_0  [key=0, style=bold, color=blue];
m3_7 -> m3_8  [key=0, style=solid, color=red];
m3_15 -> m3_16  [key=0, style=solid];
m3_11 -> m3_12  [key=0, style=solid];
m3_23 -> m3_5  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_23 -> m3_6  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_23 -> m3_7  [key=1, style=dashed, color=red, label="CommandLine.OptionAttribute"];
m3_23 -> m3_8  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_23 -> m3_9  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_23 -> m3_10  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_23 -> m3_11  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_23 -> m3_12  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.OptionAttribute"];
m3_12 -> m3_13  [key=0, style=solid];
m3_6 -> m3_7  [key=0, style=solid, color=red];
m3_8 -> m3_9  [key=0, style=solid];
m3_9 -> m3_10  [key=0, style=solid];
m3_10 -> m3_11  [key=0, style=solid];
m3_41 -> m3_42  [key=0, style=solid];
m3_16 -> m3_17  [key=0, style=solid, color=green];
m3_16 -> m3_15  [key=0, style=bold, color=blue];
m3_21 -> m3_22  [key=0, style=solid];
m3_21 -> m3_23  [key=2, style=dotted];
m3_21 -> m3_24  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_21 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m3_17 -> m3_18  [key=0, style=solid, color=green];
m3_17 -> m3_19  [key=2, style=dotted, color=green];
m3_18 -> m3_16  [key=0, style=bold, color=blue];
m3_18 -> m3_17  [key=0, style=bold, color=blue];
m3_35 -> m3_36  [key=0, style=solid, color=green];
m3_39 -> m3_40  [key=0, style=solid];
m3_39 -> m3_23  [key=2, style=dotted];
m3_39 -> m3_41  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_39 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m3_36 -> m3_37  [key=0, style=solid, color=green];
m3_36 -> m3_19  [key=2, style=dotted, color=green];
m3_37 -> m3_35  [key=0, style=bold, color=blue];
m3_20 -> m3_21  [key=0, style=solid];
m3_20 -> m3_19  [key=0, style=bold, color=blue];
m3_22 -> m3_20  [key=0, style=bold, color=blue];
m3_22 -> m3_21  [key=0, style=bold, color=blue];
m3_24 -> m3_25  [key=0, style=solid];
m3_25 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m3_25 -> m3_26  [key=0, style=solid];
m3_25 -> m3_27  [key=2, style=dotted];
m3_25 -> m3_28  [key=2, style=dotted];
m3_38 -> m3_39  [key=0, style=solid];
m3_40 -> m3_38  [key=0, style=bold, color=blue];
m3_42 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m3_42 -> m3_43  [key=0, style=solid];
m3_42 -> m3_27  [key=2, style=dotted];
m3_42 -> m3_28  [key=2, style=dotted];
m3_26 -> m3_24  [key=0, style=bold, color=blue];
m3_43 -> m3_41  [key=0, style=bold, color=blue];
m3_19 -> m3_20  [key=0, style=solid];
m3_29 -> m3_30  [key=0, style=solid];
m3_32 -> m3_33  [key=0, style=solid, color=green];
m3_32 -> m3_11  [key=2, style=dotted, color=green];
m3_32 -> m3_12  [key=2, style=dotted, color=green];
m3_32 -> m3_13  [key=2, style=dotted, color=green];
m3_32 -> m3_35  [key=1, style=dashed, color=green, label="lambda expression"];
m3_32 -> m3_39  [key=1, style=dashed, color=green, label=result];
m3_31 -> m3_32  [key=0, style=solid, color=green];
m3_31 -> m3_36  [key=1, style=dashed, color=green, label=specs];
m3_31 -> m3_7  [key=2, style=dotted];
m3_31 -> m3_8  [key=2, style=dotted];
m3_31 -> m3_9  [key=2, style=dotted];
m3_31 -> m3_10  [key=2, style=dotted];
m3_33 -> m3_34  [key=0, style=solid];
m3_33 -> m3_14  [key=2, style=dotted];
m3_33 -> m3_15  [key=2, style=dotted];
m3_33 -> m3_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m3_30 -> m3_31  [key=0, style=solid];
m3_30 -> m3_33  [key=1, style=dashed, color=darkseagreen4, label=expectedSequence];
m3_30 -> m3_6  [key=2, style=dotted];
m3_34 -> m3_29  [key=0, style=bold, color=blue];
m3_44 -> m3_17  [key=1, style=dashed, color=green, label=specs];
m3_47 -> m3_36  [key=1, style=dashed, color=green, label=specs];
m3_45 -> m3_21  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_48 -> m3_39  [key=1, style=dashed, color=darkseagreen4, label=result];
m3_46 -> m3_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m3_49 -> m3_42  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.KeyValuePair<string, System.Collections.Generic.IEnumerable<string>>"];
m4_59 -> m4_60  [key=0, style=solid];
m4_59 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m4_60 -> m4_61  [key=0, style=solid];
m4_60 -> m4_19  [key=2, style=dotted];
m4_60 -> m4_62  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_60 -> m4_60  [key=1, style=dashed, color=darkseagreen4, label=tseq];
m4_61 -> m4_59  [key=0, style=bold, color=blue];
m4_13 -> m4_51  [key=0, style=solid];
m4_51 -> m4_52  [key=0, style=solid];
m4_51 -> m4_53  [key=2, style=dotted];
m4_51 -> m4_54  [key=2, style=dotted];
m4_51 -> m4_51  [key=1, style=dashed, color=darkseagreen4, label=t];
m4_51 -> m4_55  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_51 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=t];
m4_52 -> m4_13  [key=0, style=bold, color=blue];
m4_44 -> m4_111  [key=0, style=solid];
m4_111 -> m4_112  [key=0, style=solid];
m4_111 -> m4_113  [key=2, style=dotted];
m4_112 -> m4_44  [key=0, style=bold, color=blue];
m4_108 -> m4_109  [key=0, style=solid];
m4_24 -> m4_25  [key=0, style=solid];
m4_24 -> m4_26  [key=2, style=dotted];
m4_23 -> m4_24  [key=0, style=solid];
m4_28 -> m4_29  [key=0, style=solid];
m4_28 -> m4_30  [key=2, style=dotted];
m4_27 -> m4_28  [key=0, style=solid];
m4_32 -> m4_33  [key=0, style=solid];
m4_32 -> m4_30  [key=2, style=dotted];
m4_31 -> m4_32  [key=0, style=solid];
m4_34 -> m4_35  [key=0, style=solid];
m4_39 -> m4_40  [key=0, style=solid];
m4_39 -> m4_30  [key=2, style=dotted];
m4_38 -> m4_39  [key=0, style=solid];
m4_41 -> m4_42  [key=0, style=solid];
m4_45 -> m4_46  [key=0, style=solid];
m4_48 -> m4_49  [key=0, style=solid];
m4_25 -> m4_23  [key=0, style=bold, color=blue];
m4_29 -> m4_27  [key=0, style=bold, color=blue];
m4_33 -> m4_31  [key=0, style=bold, color=blue];
m4_35 -> m4_36  [key=0, style=solid];
m4_35 -> m4_37  [key=2, style=dotted];
m4_36 -> m4_34  [key=0, style=bold, color=blue];
m4_40 -> m4_38  [key=0, style=bold, color=blue];
m4_42 -> m4_43  [key=0, style=solid];
m4_42 -> m4_44  [key=2, style=dotted];
m4_43 -> m4_41  [key=0, style=bold, color=blue];
m4_46 -> m4_47  [key=0, style=solid];
m4_46 -> m4_44  [key=2, style=dotted];
m4_47 -> m4_45  [key=0, style=bold, color=blue];
m4_49 -> m4_50  [key=0, style=solid];
m4_50 -> m4_48  [key=0, style=bold, color=blue];
m4_55 -> m4_56  [key=0, style=solid];
m4_56 -> m4_57  [key=0, style=solid];
m4_56 -> m4_58  [key=2, style=dotted];
m4_57 -> m4_55  [key=0, style=bold, color=blue];
m4_63 -> m4_64  [key=0, style=solid];
m4_63 -> m4_58  [key=2, style=dotted];
m4_63 -> m4_65  [key=2, style=dotted];
m4_63 -> m4_53  [key=2, style=dotted];
m4_63 -> m4_54  [key=2, style=dotted];
m4_63 -> m4_66  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_62 -> m4_63  [key=0, style=solid];
m4_62 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_67 -> m4_68  [key=0, style=solid];
m4_64 -> m4_62  [key=0, style=bold, color=blue];
m4_66 -> m4_67  [key=0, style=solid];
m4_68 -> m4_66  [key=0, style=bold, color=blue];
m4_73 -> m4_74  [key=0, style=solid];
m4_73 -> m4_58  [key=2, style=dotted];
m4_73 -> m4_65  [key=2, style=dotted];
m4_73 -> m4_53  [key=2, style=dotted];
m4_73 -> m4_54  [key=2, style=dotted];
m4_73 -> m4_75  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_76 -> m4_77  [key=0, style=solid];
m4_76 -> m4_78  [key=2, style=dotted];
m4_76 -> m4_79  [key=2, style=dotted];
m4_76 -> m4_80  [key=2, style=dotted];
m4_76 -> m4_81  [key=2, style=dotted];
m4_76 -> m4_82  [key=2, style=dotted];
m4_76 -> m4_83  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_76 -> m4_87  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_76 -> m4_90  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_72 -> m4_73  [key=0, style=solid];
m4_72 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_72 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_84 -> m4_85  [key=0, style=solid];
m4_84 -> m4_86  [key=2, style=dotted];
m4_74 -> m4_72  [key=0, style=bold, color=blue];
m4_75 -> m4_76  [key=0, style=solid];
m4_77 -> m4_75  [key=0, style=bold, color=blue];
m4_83 -> m4_84  [key=0, style=solid];
m4_87 -> m4_88  [key=0, style=solid];
m4_90 -> m4_91  [key=0, style=solid];
m4_85 -> m4_83  [key=0, style=bold, color=blue];
m4_88 -> m4_89  [key=0, style=solid];
m4_88 -> m4_65  [key=2, style=dotted];
m4_89 -> m4_87  [key=0, style=bold, color=blue];
m4_91 -> m4_92  [key=0, style=solid];
m4_92 -> m4_90  [key=0, style=bold, color=blue];
m4_98 -> m4_99  [key=0, style=solid];
m4_98 -> m4_58  [key=2, style=dotted];
m4_98 -> m4_78  [key=2, style=dotted];
m4_98 -> m4_79  [key=2, style=dotted];
m4_98 -> m4_18  [key=2, style=dotted];
m4_98 -> m4_100  [key=2, style=dotted];
m4_98 -> m4_101  [key=2, style=dotted];
m4_98 -> m4_44  [key=2, style=dotted];
m4_98 -> m4_102  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_98 -> m4_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_98 -> m4_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_97 -> m4_98  [key=0, style=solid];
m4_97 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_103 -> m4_104  [key=0, style=solid];
m4_103 -> m4_86  [key=2, style=dotted];
m4_99 -> m4_97  [key=0, style=bold, color=blue];
m4_102 -> m4_103  [key=0, style=solid];
m4_105 -> m4_106  [key=0, style=solid];
m4_104 -> m4_102  [key=0, style=bold, color=blue];
m4_106 -> m4_107  [key=0, style=solid];
m4_106 -> m4_65  [key=2, style=dotted];
m4_107 -> m4_105  [key=0, style=bold, color=blue];
m4_109 -> m4_110  [key=0, style=solid];
m4_110 -> m4_108  [key=0, style=bold, color=blue];
m4_0 -> m4_1  [key=0, style=solid];
m4_0 -> m4_2  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m4_0 -> m4_4  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m4_0 -> m4_6  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m4_1 -> m4_2  [key=0, style=solid];
m4_1 -> m4_12  [key=2, style=dotted];
m4_1 -> m4_3  [key=1, style=dashed, color=darkseagreen4, label=tokenList];
m4_2 -> m4_3  [key=0, style=solid];
m4_2 -> m4_13  [key=2, style=dotted];
m4_2 -> m4_12  [key=2, style=dotted];
m4_2 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=switches];
m4_2 -> m4_10  [key=1, style=dashed, color=red, label=switches];
m4_4 -> m4_5  [key=0, style=solid];
m4_4 -> m4_16  [key=2, style=dotted];
m4_4 -> m4_12  [key=2, style=dotted];
m4_4 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m4_4 -> m4_10  [key=1, style=dashed, color=red, label=scalars];
m4_6 -> m4_7  [key=0, style=solid];
m4_6 -> m4_17  [key=2, style=dotted];
m4_6 -> m4_12  [key=2, style=dotted];
m4_6 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=sequences];
m4_6 -> m4_10  [key=1, style=dashed, color=red, label=sequences];
m4_3 -> m4_4  [key=0, style=solid];
m4_3 -> m4_14  [key=2, style=dotted];
m4_3 -> m4_15  [key=2, style=dotted];
m4_3 -> m4_23  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_3 -> m4_5  [key=1, style=dashed, color=darkseagreen4, label=tokensExceptSwitches];
m4_10 -> m4_11  [key=0, style=solid, color=red];
m4_10 -> m4_18  [key=2, style=dotted, color=red];
m4_10 -> m4_19  [key=2, style=dotted, color=red];
m4_10 -> m4_20  [key=2, style=dotted, color=red];
m4_10 -> m4_21  [key=2, style=dotted, color=red];
m4_10 -> m4_22  [key=2, style=dotted, color=red];
m4_10 -> m4_41  [key=1, style=dashed, color=red, label="lambda expression"];
m4_10 -> m4_45  [key=1, style=dashed, color=red, label="lambda expression"];
m4_10 -> m4_48  [key=1, style=dashed, color=red, label="lambda expression"];
m4_5 -> m4_6  [key=0, style=solid];
m4_5 -> m4_14  [key=2, style=dotted];
m4_5 -> m4_15  [key=2, style=dotted];
m4_5 -> m4_27  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_5 -> m4_7  [key=1, style=dashed, color=darkseagreen4, label=tokensExceptSwitchesAndScalars];
m4_7 -> m4_8  [key=0, style=solid];
m4_7 -> m4_14  [key=2, style=dotted];
m4_7 -> m4_15  [key=2, style=dotted];
m4_7 -> m4_31  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_7 -> m4_9  [key=1, style=dashed, color=darkseagreen4, label=tokensExceptSwitchesAndScalarsAndSeq];
m4_8 -> m4_9  [key=0, style=solid];
m4_8 -> m4_14  [key=2, style=dotted];
m4_8 -> m4_15  [key=2, style=dotted];
m4_8 -> m4_34  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_8 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_8 -> m4_10  [key=1, style=dashed, color=red, label=values];
m4_9 -> m4_10  [key=0, style=solid, color=red];
m4_9 -> m4_14  [key=2, style=dotted];
m4_9 -> m4_38  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_11 -> m4_0  [key=0, style=bold, color=blue];
m4_69 -> m4_70  [key=0, style=solid];
m4_69 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m4_69 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m4_70 -> m4_71  [key=0, style=solid];
m4_70 -> m4_19  [key=2, style=dotted];
m4_70 -> m4_72  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_70 -> m4_70  [key=1, style=dashed, color=darkseagreen4, label=tseq];
m4_71 -> m4_69  [key=0, style=bold, color=blue];
m4_21 -> m4_93  [key=0, style=solid];
m4_21 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m4_93 -> m4_94  [key=0, style=solid];
m4_93 -> m4_95  [key=2, style=dotted];
m4_93 -> m4_96  [key=2, style=dotted];
m4_93 -> m4_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m4_93 -> m4_93  [key=1, style=dashed, color=darkseagreen4, label=t];
m4_94 -> m4_21  [key=0, style=bold, color=blue];
m4_114 -> m4_24  [key=1, style=dashed, color=darkseagreen4, label=switches];
m4_115 -> m4_28  [key=1, style=dashed, color=darkseagreen4, label=scalars];
m4_116 -> m4_32  [key=1, style=dashed, color=darkseagreen4, label=sequences];
m4_117 -> m4_39  [key=1, style=dashed, color=darkseagreen4, label=values];
m4_118 -> m4_56  [key=1, style=dashed, color=darkseagreen4, label=t];
m4_119 -> m4_63  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m4_120 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_121 -> m4_67  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_122 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m4_122 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m4_123 -> m4_73  [key=1, style=dashed, color=darkseagreen4, label="System.Func<string, CommandLine.Infrastructure.Maybe<System.Tuple<CommandLine.Core.DescriptorType, CommandLine.Infrastructure.Maybe<int>>>>"];
m4_124 -> m4_76  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_124 -> m4_84  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
m4_125 -> m4_98  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>"];
m4_126 -> m4_103  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Core.Token"];
}
