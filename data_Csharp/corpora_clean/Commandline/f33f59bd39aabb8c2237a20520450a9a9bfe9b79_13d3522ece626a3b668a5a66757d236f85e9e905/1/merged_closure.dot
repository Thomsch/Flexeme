digraph  {
n103 [label="CommandLine.Internal.OptionInfo", span=""];
n0 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Entry CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
n1 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="attribute == null", span="47-47"];
n3 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="property == null", span="51-51"];
n5 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_required = attribute.Required", span="55-55"];
n6 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_helpText = attribute.HelpText", span="56-56"];
n7 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_shortName = attribute.ShortName", span="57-57"];
n8 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_longName = attribute.LongName", span="58-58"];
n9 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_mutuallyExclusiveSet = attribute.MutuallyExclusiveSet", span="59-59"];
n10 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_defaultValue = attribute.DefaultValue", span="60-60"];
n11 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_hasDefaultValue = attribute.HasDefaultValue", span="61-61"];
n12 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_attribute = attribute", span="62-62"];
n13 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="_property = property", span="63-63"];
n2 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="throw new ArgumentNullException(''attribute'', ''The attribute is mandatory'');", span="49-49"];
n4 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="throw new ArgumentNullException(''property'', ''The property is mandatory'');", span="53-53"];
n14 [cluster="CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", label="Exit CommandLine.Internal.OptionInfo.OptionInfo(CommandLine.OptionAttribute, System.Reflection.PropertyInfo)", span="45-45"];
n15 [cluster="System.ArgumentNullException.ArgumentNullException(string, string)", label="Entry System.ArgumentNullException.ArgumentNullException(string, string)", span="0-0"];
n16 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="74-74"];
n17 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="var list = ReflectionUtil.RetrievePropertyList<OptionAttribute>(target)", span="76-76"];
n20 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="var map = new OptionMap(list.Count, settings)", span="81-81"];
n24 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="map.RawOptions = target", span="89-89"];
n18 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="list == null", span="77-77"];
n27 [cluster="CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", label="Entry CommandLine.Internal.ReflectionUtil.RetrievePropertyList<TAttribute>(object)", span="43-43"];
n21 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label=list, span="82-82"];
n19 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="return null;", span="79-79"];
n28 [cluster="CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", label="Entry CommandLine.Internal.OptionMap.OptionMap(int, CommandLine.CommandLineParserSettings)", span="61-61"];
n23 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="map[pair.Right.UniqueName] = new OptionInfo(pair.Right, pair.Left)", span="86-86"];
n25 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="return map;", span="90-90"];
n22 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="pair.Left != null && pair.Right != null", span="84-84"];
n26 [cluster="CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", label="Exit CommandLine.Internal.OptionInfo.CreateMap(object, CommandLine.CommandLineParserSettings)", span="74-74"];
n29 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", label="Entry CommandLine.Internal.OptionInfo.SetValue(string, object)", span="93-93"];
n30 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", label="_attribute is OptionListAttribute", span="95-95"];
n31 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", label="return SetValueList(value, options);", span="97-97"];
n33 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", label="return SetNullableValue(value, options);", span="101-101"];
n34 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", label="return SetValueScalar(value, options);", span="103-103"];
n32 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", label="ReflectionUtil.IsNullableType(_property.PropertyType)", span="99-99"];
n37 [cluster="CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", label="Entry CommandLine.Internal.ReflectionUtil.IsNullableType(System.Type)", span="178-178"];
n35 [cluster="CommandLine.Internal.OptionInfo.SetValue(string, object)", label="Exit CommandLine.Internal.OptionInfo.SetValue(string, object)", span="93-93"];
n39 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="Entry CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="126-126"];
n38 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", label="Entry CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="146-146"];
n36 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="Entry CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="168-168"];
n40 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Entry CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="106-106"];
n41 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Type elementType = _property.PropertyType.GetElementType()", span="108-108"];
n42 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Array array = Array.CreateInstance(elementType, values.Count)", span="109-109"];
n45 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="array.SetValue(Convert.ChangeType(values[i], elementType, Thread.CurrentThread.CurrentCulture), i)", span="115-115"];
n46 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="_property.SetValue(options, array, null)", span="116-116"];
n52 [cluster="System.Type.GetElementType()", label="Entry System.Type.GetElementType()", span="0-0"];
n43 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="int i = 0", span="111-111"];
n53 [cluster="System.Array.CreateInstance(System.Type, int)", label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0"];
n44 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="i < array.Length", span="111-111"];
n49 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="i++", span="111-111"];
n50 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="return true;", span="123-123"];
n54 [cluster="System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", label="Entry System.Convert.ChangeType(object, System.Type, System.IFormatProvider)", span="0-0"];
n55 [cluster="System.Array.SetValue(object, int)", label="Entry System.Array.SetValue(object, int)", span="0-0"];
n47 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label=FormatException, span="118-118"];
n56 [cluster="System.Reflection.PropertyInfo.SetValue(object, object, object[])", label="Entry System.Reflection.PropertyInfo.SetValue(object, object, object[])", span="0-0"];
n48 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="return false;", span="120-120"];
n51 [cluster="CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", label="Exit CommandLine.Internal.OptionInfo.SetValue(System.Collections.Generic.IList<string>, object)", span="106-106"];
n57 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="_property.PropertyType.IsEnum", span="130-130"];
n58 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="_property.SetValue(options, Enum.Parse(_property.PropertyType, value, true), null)", span="132-132"];
n59 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="_property.SetValue(options, Convert.ChangeType(value, _property.PropertyType, Thread.CurrentThread.CurrentCulture), null)", span="136-136"];
n60 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label=InvalidCastException, span="139-139"];
n62 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label=FormatException, span="140-140"];
n64 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label=ArgumentException, span="141-141"];
n66 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label=OverflowException, span="142-142"];
n68 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="return true;", span="143-143"];
n70 [cluster="System.Enum.Parse(System.Type, string, bool)", label="Entry System.Enum.Parse(System.Type, string, bool)", span="0-0"];
n61 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="return false;", span="139-139"];
n63 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="return false;", span="140-140"];
n65 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="return false;", span="141-141"];
n67 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="return false;", span="142-142"];
n69 [cluster="CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", label="Exit CommandLine.Internal.OptionInfo.SetValueScalar(string, object)", span="126-126"];
n71 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", label="var nc = new NullableConverter(_property.PropertyType)", span="148-148"];
n72 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", label="_property.SetValue(options, nc.ConvertFromString(null, Thread.CurrentThread.CurrentCulture, value), null)", span="151-151"];
n77 [cluster="System.ComponentModel.NullableConverter.NullableConverter(System.Type)", label="Entry System.ComponentModel.NullableConverter.NullableConverter(System.Type)", span="0-0"];
n73 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", label=Exception, span="155-155"];
n75 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", label="return true;", span="159-159"];
n78 [cluster="System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", label="Entry System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext, System.Globalization.CultureInfo, string)", span="0-0"];
n74 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", label="return false;", span="157-157"];
n76 [cluster="CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", label="Exit CommandLine.Internal.OptionInfo.SetNullableValue(string, object)", span="146-146"];
n79 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", label="Entry CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="162-162"];
n80 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", label="_property.SetValue(options, value, null)", span="164-164"];
n81 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", label="return true;", span="165-165"];
n82 [cluster="CommandLine.Internal.OptionInfo.SetValue(bool, object)", label="Exit CommandLine.Internal.OptionInfo.SetValue(bool, object)", span="162-162"];
n83 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="_property.SetValue(options, new List<string>(), null)", span="170-170"];
n84 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="var fieldRef = (IList<string>)_property.GetValue(options, null)", span="171-171"];
n85 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="var values = value.Split(((OptionListAttribute)_attribute).Separator)", span="172-172"];
n92 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
n93 [cluster="System.Reflection.PropertyInfo.GetValue(object, object[])", label="Entry System.Reflection.PropertyInfo.GetValue(object, object[])", span="0-0"];
n88 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="fieldRef.Add(values[i])", span="175-175"];
n86 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="int i = 0", span="173-173"];
n94 [cluster="string.Split(params char[])", label="Entry string.Split(params char[])", span="0-0"];
n87 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="i < values.Length", span="173-173"];
n89 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="i++", span="173-173"];
n90 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="return true;", span="177-177"];
n95 [cluster="System.Collections.Generic.ICollection<T>.Add(T)", label="Entry System.Collections.Generic.ICollection<T>.Add(T)", span="0-0"];
n91 [cluster="CommandLine.Internal.OptionInfo.SetValueList(string, object)", label="Exit CommandLine.Internal.OptionInfo.SetValueList(string, object)", span="168-168"];
n96 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", label="Entry CommandLine.Internal.OptionInfo.SetDefault(object)", span="180-180"];
n97 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", label=_hasDefaultValue, span="182-182"];
n98 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", label="_property.SetValue(options, _defaultValue, null)", span="186-186"];
n101 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", label="Exit CommandLine.Internal.OptionInfo.SetDefault(object)", span="180-180"];
n99 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", label=Exception, span="188-188"];
n100 [cluster="CommandLine.Internal.OptionInfo.SetDefault(object)", label="throw new CommandLineParserException(''Bad default value.'', e);", span="190-190"];
n102 [cluster="CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", label="Entry CommandLine.CommandLineParserException.CommandLineParserException(string, System.Exception)", span="57-57"];
d11 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", color=green, community=0, label="token.IsValue()", prediction=0, span="33-33"];
d10 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="tokens.Skip(1)", span="31-31"];
d12 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="items++", span="35-35"];
d14 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="Partition(tokens.Skip(1 + items), typeLookup)", span="46-46"];
d23 [cluster="CommandLine.Core.Token.IsValue()", label="Entry CommandLine.Core.Token.IsValue()", span="77-77"];
d0 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="Entry CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
d9 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="yield return first;", span="29-29"];
d13 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="yield return token;", span="36-36"];
d22 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
d3 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="var items = 0", span="19-19"];
d15 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="yield return token;", span="48-48"];
d7 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="typeLookup(first.Text).MatchJust(out info)", span="24-24"];
d8 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="info.Tag == TypeDescriptorKind.Sequence\r\n                        && IsNextTokenAValue(tokens)", span="26-27"];
d5 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="first.Tag == TokenType.Name", span="21-21"];
d16 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="Exit CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", span="11-11"];
d25 [cluster="CommandLine.Core.Sequence.IsNextTokenAValue(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", label="return next.Any()\r\n                ? next.Single().IsValue()\r\n                : false;", span="56-58"];
d1 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="tokens.Empty()", span="15-15"];
d2 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="yield break;", span="17-17"];
d4 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="var first = tokens.First()", span="20-20"];
d24 [cluster="CommandLine.Core.Sequence.IsNextTokenAValue(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", label="var next = tokens.Skip(1).Take(1)", span="54-54"];
d6 [cluster="CommandLine.Core.Sequence.Partition(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>)", label="TypeDescriptor info", span="23-23"];
d19 [cluster="System.Func<T, TResult>.Invoke(T)", label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0"];
d20 [cluster="CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", label="Entry CommandLine.Infrastructure.Maybe<T>.MatchJust(out T)", span="31-31"];
d21 [cluster="CommandLine.Core.Sequence.IsNextTokenAValue(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", label="Entry CommandLine.Core.Sequence.IsNextTokenAValue(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="52-52"];
d26 [cluster="CommandLine.Core.Sequence.IsNextTokenAValue(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", label="Exit CommandLine.Core.Sequence.IsNextTokenAValue(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="52-52"];
d28 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
d29 [cluster="System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Single<TSource>()", span="0-0"];
d17 [cluster="System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.Empty<TSource>()", span="87-87"];
d18 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
d27 [cluster="System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", label="Entry System.Collections.Generic.IEnumerable<TSource>.Take<TSource>(int)", span="0-0"];
m0_51 [cluster="Unk.SingleOrDefault", file="InstanceChooser.cs", label="Entry Unk.SingleOrDefault", span=""];
m0_7 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="81-81"];
m0_62 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="return new NotParsed<object>(TypeInfo.Create(typeof(NullInstance), types), errors);", span="83-83"];
m0_63 [cluster="CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeNotParsed(System.Collections.Generic.IEnumerable<System.Type>, params CommandLine.Error[])", span="81-81"];
m0_31 [cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m0_30 [cluster="Unk.>", file="InstanceChooser.cs", label="Entry Unk.>", span=""];
m0_34 [cluster="Unk.MakeNotParsed", file="InstanceChooser.cs", label="Entry Unk.MakeNotParsed", span=""];
m0_29 [cluster="Unk.Any", file="InstanceChooser.cs", label="Entry Unk.Any", span=""];
m0_64 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceChooser.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m0_33 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="InstanceChooser.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="382-382"];
m0_53 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="InstanceChooser.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="408-408"];
m0_20 [cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceChooser.cs", label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="457-457"];
m0_25 [cluster="System.StringComparer.Equals(string, string)", file="InstanceChooser.cs", label="Entry System.StringComparer.Equals(string, string)", span="0-0"];
m0_52 [cluster="Unk.ToMaybe", file="InstanceChooser.cs", label="Entry Unk.ToMaybe", span=""];
m0_41 [cluster="Unk.Single", file="InstanceChooser.cs", label="Entry Unk.Single", span=""];
m0_4 [cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0"];
m0_5 [cluster="System.Func<TResult>.Invoke()", file="InstanceChooser.cs", label="Entry System.Func<TResult>.Invoke()", span="0-0"];
m0_26 [cluster="string.Concat(string, string)", file="InstanceChooser.cs", label="Entry string.Concat(string, string)", span="0-0"];
m0_43 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="58-58"];
m0_12 [cluster="lambda expression", color=green, community=0, file="InstanceChooser.cs", label="return preprocCompare(''help'')\r\n                    ? MakeNotParsed(types,\r\n                        MakeHelpVerbRequestedError(verbs,\r\n                            arguments.Skip(1).FirstOrDefault() ?? string.Empty, nameComparer))\r\n                    : preprocCompare(''version'')\r\n                        ? MakeNotParsed(types, new VersionRequestedError())\r\n                        : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);", prediction=1, span="32-38"];
m0_10 [cluster="lambda expression", file="InstanceChooser.cs", label="Func<string, bool> preprocCompare = command =>\r\n                        nameComparer.Equals(command, firstArg) ||\r\n                        nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="26-28"];
m0_11 [cluster="lambda expression", file="InstanceChooser.cs", label="var verbs = Verb.SelectFromTypes(types)", span="30-30"];
m0_13 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="22-39"];
m0_9 [cluster="lambda expression", file="InstanceChooser.cs", label="var firstArg = arguments.First()", span="24-24"];
m0_23 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(command, firstArg) ||\r\n                        nameComparer.Equals(string.Concat(''--'', command), firstArg)", span="27-28"];
m0_8 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="22-39"];
m0_56 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, verb)", span="73-73"];
m0_36 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(a.Item1.Name, arguments.First())", span="54-54"];
m0_39 [cluster="lambda expression", file="InstanceChooser.cs", label="verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()", span="58-58"];
m0_44 [cluster="lambda expression", file="InstanceChooser.cs", label="nameComparer.Equals(v.Item1.Name, arguments.First())", span="58-58"];
m0_22 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="26-28"];
m0_24 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="26-28"];
m0_35 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="54-54"];
m0_38 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="57-58"];
m0_46 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="64-64"];
m0_55 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="73-73"];
m0_58 [cluster="lambda expression", file="InstanceChooser.cs", label="Entry lambda expression", span="76-76"];
m0_57 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="73-73"];
m0_37 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="54-54"];
m0_40 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="57-58"];
m0_45 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="58-58"];
m0_48 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="64-64"];
m0_47 [cluster="lambda expression", file="InstanceChooser.cs", label="v.Item2", span="64-64"];
m0_59 [cluster="lambda expression", file="InstanceChooser.cs", label="new HelpVerbRequestedError(v.Item1.Name, v.Item2, true)", span="76-76"];
m0_60 [cluster="lambda expression", file="InstanceChooser.cs", label="Exit lambda expression", span="76-76"];
m0_14 [cluster="System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.First<TSource>()", span="0-0"];
m0_65 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceChooser.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m0_17 [cluster="System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Skip<TSource>(int)", span="0-0"];
m0_21 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="46-46"];
m0_27 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooser.cs", label="return verbs.Any(a => nameComparer.Equals(a.Item1.Name, arguments.First()))\r\n                ? InstanceBuilder.Build(\r\n                    Maybe.Just<Func<object>>(\r\n                        () =>\r\n                            verbs.Single(v => nameComparer.Equals(v.Item1.Name, arguments.First())).Item2.AutoDefault()),\r\n                    tokenizer,\r\n                    arguments.Skip(1),\r\n                    nameComparer,\r\n                    parsingCulture,\r\n                    nonFatalErrors)\r\n                : MakeNotParsed(verbs.Select(v => v.Item2), new BadVerbSelectedError(arguments.First()));", span="54-64"];
m0_28 [cluster="CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MatchVerb(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="46-46"];
m0_19 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="67-67"];
m0_49 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="return verb.Length > 0\r\n                ? verbs.SingleOrDefault(v => nameComparer.Equals(v.Item1.Name, verb))\r\n                        .ToMaybe()\r\n                        .Return(\r\n                            v => new HelpVerbRequestedError(v.Item1.Name, v.Item2, true),\r\n                            new HelpVerbRequestedError(null, null, false))\r\n                : new HelpVerbRequestedError(null, null, false);", span="72-78"];
m0_50 [cluster="CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.MakeHelpVerbRequestedError(System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>, string, System.StringComparer)", span="67-67"];
m0_32 [cluster="Unk.Select", file="InstanceChooser.cs", label="Entry Unk.Select", span=""];
m0_6 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="InstanceChooser.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="446-446"];
m0_54 [cluster="Unk.Return", file="InstanceChooser.cs", label="Entry Unk.Return", span=""];
m0_42 [cluster="Unk.AutoDefault", file="InstanceChooser.cs", label="Entry Unk.AutoDefault", span=""];
m0_18 [cluster="System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", file="InstanceChooser.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.FirstOrDefault<TSource>()", span="0-0"];
m0_0 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m0_1 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", color=green, community=0, file="InstanceChooser.cs", label="Func<ParserResult<object>> choose = () =>\r\n            {\r\n                var firstArg = arguments.First();\r\n\r\n                Func<string, bool> preprocCompare = command =>\r\n                        nameComparer.Equals(command, firstArg) ||\r\n                        nameComparer.Equals(string.Concat(''--'', command), firstArg);\r\n\r\n                var verbs = Verb.SelectFromTypes(types);\r\n\r\n                return preprocCompare(''help'')\r\n                    ? MakeNotParsed(types,\r\n                        MakeHelpVerbRequestedError(verbs,\r\n                            arguments.Skip(1).FirstOrDefault() ?? string.Empty, nameComparer))\r\n                    : preprocCompare(''version'')\r\n                        ? MakeNotParsed(types, new VersionRequestedError())\r\n                        : MatchVerb(tokenizer, verbs, arguments, nameComparer, parsingCulture, nonFatalErrors);\r\n            }", prediction=2, span="22-39"];
m0_2 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooser.cs", label="return arguments.Any()\r\n                ? choose()\r\n                : MakeNotParsed(types, new NoVerbSelectedError());", span="41-43"];
m0_3 [cluster="CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", file="InstanceChooser.cs", label="Exit CommandLine.Core.InstanceChooser.Choose(System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>, System.Collections.Generic.IEnumerable<System.Type>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo, System.Collections.Generic.IEnumerable<CommandLine.ErrorType>)", span="14-14"];
m0_15 [cluster="CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", file="InstanceChooser.cs", label="Entry CommandLine.Core.Verb.SelectFromTypes(System.Collections.Generic.IEnumerable<System.Type>)", span="40-40"];
m0_61 [cluster="HelpVerbRequestedError.cstr", file="InstanceChooser.cs", label="Entry HelpVerbRequestedError.cstr", span=""];
m0_66 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m0_67 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m0_68 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<System.Type>", span=""];
m0_69 [file="InstanceChooser.cs", label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", span=""];
m0_70 [file="InstanceChooser.cs", label="System.Globalization.CultureInfo", span=""];
m0_71 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", span=""];
m0_72 [file="InstanceChooser.cs", label=firstArg, span=""];
m0_76 [file="InstanceChooser.cs", label=string, span=""];
m0_77 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m0_73 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<string>", span=""];
m0_74 [file="InstanceChooser.cs", label="System.StringComparer", span=""];
m0_75 [file="InstanceChooser.cs", label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", span=""];
m1_0 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ParserTests.cs", label="Entry CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m1_1 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ParserTests.cs", label="result.Tag == ResultType.Ok", span="14-14"];
m1_2 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ParserTests.cs", label="var ok = (Ok<TSuccess, TMessage>)result", span="16-16"];
m1_4 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ParserTests.cs", label="return Enumerable.Empty<TMessage>();", span="19-19"];
m1_3 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ParserTests.cs", label="return ok.Value.Messages;", span="17-17"];
m1_5 [cluster="CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", file="ParserTests.cs", label="Exit CommandLine.Infrastructure.ResultExtensions.SuccessfulMessages<TSuccess, TMessage>(RailwaySharp.ErrorHandling.Result<TSuccess, TMessage>)", span="12-12"];
m1_6 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="ParserTests.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
n103 -> n30  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n31  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n32  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n33  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n34  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n46  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n57  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n58  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n59  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n72  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n80  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n83  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n97  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n103 -> n98  [color=darkseagreen4, key=1, label="CommandLine.Internal.OptionInfo", style=dashed];
n0 -> n3  [color=darkseagreen4, key=1, label="System.Reflection.PropertyInfo", style=dashed];
n17 -> n21  [color=darkseagreen4, key=1, label=list, style=dashed];
n20 -> n25  [color=darkseagreen4, key=1, label=map, style=dashed];
n29 -> n31  [color=darkseagreen4, key=1, label=string, style=dashed];
n29 -> n33  [color=darkseagreen4, key=1, label=string, style=dashed];
n29 -> n34  [color=darkseagreen4, key=1, label=string, style=dashed];
n39 -> n58  [color=darkseagreen4, key=1, label=string, style=dashed];
n39 -> n59  [color=darkseagreen4, key=1, label=string, style=dashed];
n38 -> n72  [color=darkseagreen4, key=1, label=string, style=dashed];
n40 -> n45  [color=darkseagreen4, key=1, label="System.Collections.Generic.IList<string>", style=dashed];
n40 -> n46  [color=darkseagreen4, key=1, label=object, style=dashed];
n41 -> n45  [color=darkseagreen4, key=1, label=elementType, style=dashed];
n42 -> n44  [color=darkseagreen4, key=1, label=array, style=dashed];
n42 -> n45  [color=darkseagreen4, key=1, label=array, style=dashed];
n42 -> n46  [color=darkseagreen4, key=1, label=array, style=dashed];
n43 -> n45  [color=darkseagreen4, key=1, label=i, style=dashed];
n43 -> n49  [color=darkseagreen4, key=1, label=i, style=dashed];
n49 -> n49  [color=darkseagreen4, key=1, label=i, style=dashed];
n84 -> n88  [color=darkseagreen4, key=1, label=fieldRef, style=dashed];
n85 -> n87  [color=darkseagreen4, key=1, label=values, style=dashed];
n85 -> n88  [color=darkseagreen4, key=1, label=values, style=dashed];
n86 -> n88  [color=darkseagreen4, key=1, label=i, style=dashed];
n86 -> n89  [color=darkseagreen4, key=1, label=i, style=dashed];
n89 -> n89  [color=darkseagreen4, key=1, label=i, style=dashed];
n96 -> n98  [color=darkseagreen4, key=1, label=object, style=dashed];
d10 -> d13  [color=darkseagreen4, key=1, label=token, style=dashed];
d12 -> d12  [color=darkseagreen4, key=1, label=items, style=dashed];
d12 -> d14  [color=darkseagreen4, key=1, label=items, style=dashed];
d0 -> d10  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
d0 -> d14  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
d0 -> d7  [color=darkseagreen4, key=1, label="System.Func<string, CommandLine.Infrastructure.Maybe<CommandLine.Core.TypeDescriptor>>", style=dashed];
d0 -> d8  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.Core.Token>", style=dashed];
d3 -> d12  [color=darkseagreen4, key=1, label=items, style=dashed];
d3 -> d14  [color=darkseagreen4, key=1, label=items, style=dashed];
d4 -> d9  [color=darkseagreen4, key=1, label=first, style=dashed];
d4 -> d7  [color=darkseagreen4, key=1, label=first, style=dashed];
m0_10 -> m0_12  [color=green, key=1, label=preprocCompare, style=dashed];
m0_10 -> m0_23  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_9 -> m0_23  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m0_39 -> m0_43  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_21 -> m0_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_21 -> m0_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
m0_21 -> m0_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_27 -> m0_35  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_38  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_27 -> m0_46  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_19 -> m0_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_49 -> m0_55  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_49 -> m0_58  [color=darkseagreen4, key=1, label="lambda expression", style=dashed];
m0_0 -> m0_12  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m0_0 -> m0_23  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_0 -> m0_2  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m0_66 -> m0_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_67 -> m0_12  [color=green, key=1, label="System.StringComparer", style=dashed];
m0_67 -> m0_23  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_68 -> m0_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<System.Type>", style=dashed];
m0_69 -> m0_12  [color=green, key=1, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, RailwaySharp.ErrorHandling.Result<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>, CommandLine.Error>>", style=dashed];
m0_70 -> m0_12  [color=green, key=1, label="System.Globalization.CultureInfo", style=dashed];
m0_71 -> m0_12  [color=green, key=1, label="System.Collections.Generic.IEnumerable<CommandLine.ErrorType>", style=dashed];
m0_72 -> m0_23  [color=darkseagreen4, key=1, label=firstArg, style=dashed];
m0_76 -> m0_56  [color=darkseagreen4, key=1, label=string, style=dashed];
m0_77 -> m0_56  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_73 -> m0_36  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_73 -> m0_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_73 -> m0_44  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<string>", style=dashed];
m0_74 -> m0_36  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_74 -> m0_39  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_74 -> m0_44  [color=darkseagreen4, key=1, label="System.StringComparer", style=dashed];
m0_75 -> m0_39  [color=darkseagreen4, key=1, label="System.Collections.Generic.IEnumerable<System.Tuple<CommandLine.Core.Verb, System.Type>>", style=dashed];
}
