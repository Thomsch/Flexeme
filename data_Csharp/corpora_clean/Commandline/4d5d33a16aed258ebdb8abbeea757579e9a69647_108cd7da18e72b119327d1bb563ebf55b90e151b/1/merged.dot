digraph  {
n0 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n1 [label="numeral != Numeral.One && number == 1", span="21-21", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n4 [label="var hundreds = number / 100", span="26-26", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n8 [label="number = number % 100", span="31-31", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n9 [label="var tens = number / 10", span="34-34", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n13 [label="number = number % 10", span="39-39", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n14 [label="number > 0", span="42-42", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n16 [label="result.AppendFormat(@''{0} '', map[number])", span="45-45", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n2 [label="return string.Empty;", span="22-22", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n3 [label="var result = new StringBuilder()", span="24-24", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n19 [label="Entry System.Text.StringBuilder.StringBuilder()", span="0-0", cluster="System.Text.StringBuilder.StringBuilder()"];
n7 [label="result.AppendFormat(@''{0} '', map[hundreds])", span="30-30", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n12 [label="result.AppendFormat(@''{0} '', map[tens])", span="38-38", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n17 [label="return result.ToString();", span="48-48", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n5 [label="hundreds > 0", span="27-27", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n6 [label="var map = new[] { '''', ''sto'', ''dwieście'', ''trzysta'', ''czterysta'', ''pięćset'', ''sześćset'', ''siedemset'', ''osiemset'', ''dziewięćset'' }", span="29-29", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n20 [label="Entry System.Text.StringBuilder.AppendFormat(string, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object)"];
n10 [label="tens > 1", span="35-35", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n11 [label="var map = new[] { '''', ''dziesięć'', ''dwadzieścia'', ''trzydzieści'', ''czterdzieści'', ''pięćdziesiąt'', ''sześćdziesiąt'', ''siedemdziesiąt'', ''osiemdziesiąt'', ''dziewięćdziesiąt'' }", span="37-37", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n15 [label="var map = new[] { ''zero'', ''jeden'', ''dwa'', ''trzy'', ''cztery'', ''pięć'', ''sześć'', ''siedem'', ''osiem'', ''dziewięć'', ''dziesięć'', ''jedenaście'', ''dwanaście'', ''trzynaście'', ''czternaście'', ''piętnaście'', ''szesnaście'', ''siedemnaście'', ''osiemnaście'', ''dziewiętnaście'' }", span="44-44", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", color=red, community=0];
n18 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="19-19", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.ConvertNumberUnderThousand(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n21 [label="Entry System.Text.StringBuilder.ToString()", span="0-0", cluster="System.Text.StringBuilder.ToString()"];
n22 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="51-51", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)"];
n23 [label="number == 1", span="53-53", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0];
n25 [label="number > 1 && number < 5", span="56-56", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0];
n27 [label="var tens = number / 10", span="59-59", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0];
n29 [label="var unity = number % 10", span="62-62", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0];
n24 [label="return 0;", span="54-54", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0];
n26 [label="return 1;", span="57-57", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0];
n28 [label="tens > 1", span="60-60", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", color=red, community=0];
n32 [label="return 2;", span="67-67", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)"];
n30 [label="unity > 1 && unity < 5", span="63-63", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)"];
n31 [label="return 1;", span="64-64", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)"];
n33 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)", span="51-51", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetMappingIndex(int)"];
n34 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="70-70", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n35 [label=numeral, span="72-72", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n38 [label="return miliard[GetMappingIndex(num)];", span="76-76", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n41 [label="return million[GetMappingIndex(num)];", span="79-79", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n44 [label="return thousand[GetMappingIndex(num)];", span="82-82", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n36 [label="Numeral.Miliard", span="74-74", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n39 [label="Numeral.Million", span="77-77", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n42 [label="Numeral.Thousand", span="80-80", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n45 [label="return string.Empty;", span="84-84", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n37 [label="var miliard = new[] { ''miliard'', ''miliardy'', ''miliardów'' }", span="75-75", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n40 [label="var million = new[] { ''milion'', ''miliony'', ''milionów'' }", span="78-78", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n43 [label="var thousand = new[] { ''tysiąc'', ''tysiące'', ''tysięcy'' }", span="81-81", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n46 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)", span="70-70", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.GetSuffix(Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Numeral, int)"];
n47 [label="Entry Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="88-88", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n48 [label="number == 0", span="90-90", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n51 [label="number < 0", span="95-95", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n53 [label="number = Math.Abs(number)", span="98-98", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n56 [label="var num = number / (int)numeral", span="104-104", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n59 [label="number %= (int)numeral", span="108-108", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n49 [label="return Zero;", span="91-91", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n50 [label="var result = new StringBuilder()", span="93-93", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n52 [label="result.AppendFormat(@''{0} '', Negative)", span="97-97", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n58 [label="result.AppendFormat(@''{0}{1} '', ConvertNumberUnderThousand(numeral, num), GetSuffix(numeral, num))", span="107-107", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n60 [label="return result.ToString().Trim();", span="112-112", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n54 [label="var numerals = ((Numeral[])Enum.GetValues(typeof(Numeral))).Reverse()", span="101-101", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n62 [label="Entry System.Math.Abs(int)", span="0-0", cluster="System.Math.Abs(int)"];
n55 [label=numerals, span="102-102", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n63 [label="Entry System.Enum.GetValues(System.Type)", span="0-0", cluster="System.Enum.GetValues(System.Type)"];
n64 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Reverse<TSource>()"];
n57 [label="num > 0", span="105-105", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n65 [label="Entry System.Text.StringBuilder.AppendFormat(string, object, object)", span="0-0", cluster="System.Text.StringBuilder.AppendFormat(string, object, object)"];
n61 [label="Exit Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)", span="88-88", cluster="Humanizer.Localisation.NumberToWords.PolishNumberToWordsConverter.Convert(int)"];
n66 [label="Entry string.Trim()", span="0-0", cluster="string.Trim()"];
m0_8 [label="Entry CSharpx.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="24-24", cluster="CSharpx.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensionsExtra.cs"];
m0_9 [label="var array = Array.CreateInstance(type, value.Count())", span="26-26", cluster="CSharpx.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_10 [label="value.ToArray().CopyTo(array, 0)", span="27-27", cluster="CSharpx.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_11 [label="return array;", span="28-28", cluster="CSharpx.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_12 [label="Exit CSharpx.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", span="24-24", cluster="CSharpx.EnumerableExtensions.ToUntypedArray(System.Collections.Generic.IEnumerable<object>, System.Type)", file="EnumerableExtensionsExtra.cs"];
m0_0 [label="Entry CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="10-10", cluster="CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensionsExtra.cs"];
m0_1 [label="var index = -1", span="12-12", cluster="CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_2 [label=source, span="13-13", cluster="CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_3 [label="index++", span="15-15", cluster="CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_5 [label="return index;", span="21-21", cluster="CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_4 [label="predicate(item)", span="16-16", cluster="CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_6 [label="Exit CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", span="10-10", cluster="CSharpx.EnumerableExtensions.IndexOf<TSource>(System.Collections.Generic.IEnumerable<TSource>, System.Func<TSource, bool>)", file="EnumerableExtensionsExtra.cs"];
m0_17 [label="Entry CSharpx.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="31-31", cluster="CSharpx.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensionsExtra.cs"];
m0_18 [label="return !source.Any();", span="33-33", cluster="CSharpx.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", color=green, community=0, file="EnumerableExtensionsExtra.cs"];
m0_19 [label="Exit CSharpx.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="31-31", cluster="CSharpx.EnumerableExtensions.Empty<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="EnumerableExtensionsExtra.cs"];
m0_13 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Count<TSource>()", file="EnumerableExtensionsExtra.cs"];
m0_20 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="EnumerableExtensionsExtra.cs"];
m0_14 [label="Entry System.Array.CreateInstance(System.Type, int)", span="0-0", cluster="System.Array.CreateInstance(System.Type, int)", file="EnumerableExtensionsExtra.cs"];
m0_15 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="EnumerableExtensionsExtra.cs"];
m0_16 [label="Entry System.Array.CopyTo(System.Array, int)", span="0-0", cluster="System.Array.CopyTo(System.Array, int)", file="EnumerableExtensionsExtra.cs"];
m0_7 [label="Entry System.Func<T, TResult>.Invoke(T)", span="0-0", cluster="System.Func<T, TResult>.Invoke(T)", file="EnumerableExtensionsExtra.cs"];
m1_0 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_1 [label="return Build(\r\n                factory,\r\n                (args, optionSpecs) =>\r\n                    {\r\n                        var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer));\r\n                        var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer));\r\n                        return explodedTokens;\r\n                    },\r\n                arguments,\r\n                nameComparer,\r\n                parsingCulture);", span="20-32", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_2 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="14-14", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_4 [label="Entry lambda expression", span="22-29", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_3 [label="Entry CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_5 [label="var tokens = Tokenizer.Tokenize(args, name => NameLookup.Contains(name, optionSpecs, nameComparer))", span="24-24", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_6 [label="var explodedTokens = Tokenizer.ExplodeOptionList(\r\n                            tokens,\r\n                            name => NameLookup.HavingSeparator(name, optionSpecs, nameComparer))", span="25-27", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_50 [label="var sut = new Parser()", span="87-87", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilder.cs"];
m1_8 [label="Exit lambda expression", span="22-29", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_154 [label="System.StringComparer", span="", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilder.cs"];
m1_155 [label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>", span="", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilder.cs"];
m1_156 [label="CSharpx.Maybe<System.Func<T>>", span="", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilder.cs"];
m1_158 [label="System.StringComparer", span="", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilder.cs"];
m1_157 [label=specProps, span="", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilder.cs"];
m1_159 [label=optionSpecs, span="", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilder.cs"];
m1_160 [label="System.Globalization.CultureInfo", span="", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_screen()", file="InstanceBuilder.cs"];
m1_93 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="171-171", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilder.cs"];
m1_60 [label="Entry Unk.MapValues", span="", cluster="Unk.MapValues", file="InstanceBuilder.cs"];
m1_115 [label="Entry lambda expression", span="99-99", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_116 [label="sp.Value.IsJust()", span="99-99", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_117 [label="Exit lambda expression", span="99-99", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_118 [label="Entry CSharpx.Maybe<T>.IsJust<T>()", span="175-175", cluster="CSharpx.Maybe<T>.IsJust<T>()", file="InstanceBuilder.cs"];
m1_119 [label="Entry lambda expression", span="100-100", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_393 [label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="659-659", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilder.cs"];
m1_394 [label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="664-664", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilder.cs"];
m1_395 [label="var result = sut.ParseArguments<Simple_Options>(arguments)", span="667-667", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilder.cs"];
m1_397 [label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="671-671", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilder.cs"];
m1_396 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="670-670", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilder.cs"];
m1_398 [label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", span="659-659", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing(string[], CommandLine.Tests.Fakes.Simple_Options)", file="InstanceBuilder.cs"];
m1_79 [label="Entry lambda expression", span="139-139", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_61 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilder.cs"];
m1_71 [label="Entry System.Reflection.MethodBase.GetParameters()", span="0-0", cluster="System.Reflection.MethodBase.GetParameters()", file="InstanceBuilder.cs"];
m1_72 [label="Entry string.ToLower()", span="0-0", cluster="string.ToLower()", file="InstanceBuilder.cs"];
m1_73 [label="Entry System.Type.CreateDefaultForImmutable()", span="125-125", cluster="System.Type.CreateDefaultForImmutable()", file="InstanceBuilder.cs"];
m1_76 [label="Entry CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", span="12-12", cluster="CommandLine.Core.SpecificationPropertyRules.Lookup(System.Collections.Generic.IEnumerable<CommandLine.Core.Token>)", file="InstanceBuilder.cs"];
m1_74 [label="Entry System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.ToArray<TSource>()", file="InstanceBuilder.cs"];
m1_75 [label="Entry System.Reflection.ConstructorInfo.Invoke(object[])", span="0-0", cluster="System.Reflection.ConstructorInfo.Invoke(object[])", file="InstanceBuilder.cs"];
m1_77 [label="Entry System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", span="40-40", cluster="System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>.Validate(System.Collections.Generic.IEnumerable<System.Func<System.Collections.Generic.IEnumerable<CommandLine.Core.SpecificationProperty>, System.Collections.Generic.IEnumerable<CommandLine.Error>>>)", file="InstanceBuilder.cs"];
m1_7 [label="return explodedTokens;", span="28-28", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_136 [label="Exit lambda expression", span="108-108", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_138 [label="var expectedError = new HelpRequestedError()", span="284-284", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilder.cs"];
m1_10 [label="Entry CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", span="45-45", cluster="CommandLine.Core.Tokenizer.ExplodeOptionList(CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>, System.Func<string, CSharpx.Maybe<char>>)", file="InstanceBuilder.cs"];
m1_9 [label="Entry CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", span="85-85", cluster="CommandLine.Parser.ParseArguments<T>(System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilder.cs"];
m1_308 [label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", span="529-529", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_309 [label="var help = new StringWriter()", span="532-532", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_310 [label="var sut = new Parser(config => config.HelpWriter = help)", span="533-533", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_312 [label="var result = help.ToString()", span="537-537", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_311 [label="sut.ParseArguments<Secert_Verb, Add_Verb_With_Usage_Attribute>(new string[] { })", span="536-536", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_313 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="540-540", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_314 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="542-542", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_315 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="543-543", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_316 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="549-549", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_317 [label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="550-550", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_318 [label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="551-551", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_319 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="552-552", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_320 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="553-553", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_321 [label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", span="529-529", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb()", file="InstanceBuilder.cs"];
m1_88 [label="var expectedOptions = new Options_With_Switches()", span="159-159", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_single_dash()", file="InstanceBuilder.cs"];
m1_89 [label="var sut = new Parser()", span="160-160", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_single_dash()", file="InstanceBuilder.cs"];
m1_326 [label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", span="559-559", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_327 [label="var help = new StringWriter()", span="562-562", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_328 [label="var sut = new Parser(config => config.HelpWriter = help)", span="563-563", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_330 [label="var result = help.ToString()", span="567-567", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_329 [label="sut.ParseArguments<Secert_Verb, Add_Verb_With_Usage_Attribute>(new string[] { ''secert'', ''--help'' })", span="566-566", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_331 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="570-570", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_332 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="572-572", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_333 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="573-573", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_334 [label="lines[2].ShouldBeEquivalentTo(''-f, --force    Allow adding otherwise ignored files.'')", span="579-579", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_335 [label="lines[3].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="580-580", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_336 [label="lines[4].ShouldBeEquivalentTo(''--version      Display version information.'')", span="581-581", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_337 [label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", span="559-559", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_there_is_a_hidden_verb_selected_usage_displays_with_hidden_option()", file="InstanceBuilder.cs"];
m1_359 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", span="607-607", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_360 [label="var expectedOptions = new Secert_Verb { Force = true, SecertOption = ''shhh'' }", span="610-610", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_361 [label="var help = new StringWriter()", span="611-611", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_367 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="621-621", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_362 [label="var sut = new Parser(config => config.HelpWriter = help)", span="612-612", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_363 [label="var result = sut.ParseArguments<Secert_Verb, Add_Verb_With_Usage_Attribute>(new string[] { ''secert'', ''--force'', ''--secert-option'', ''shhh'' })", span="615-615", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_364 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="618-618", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_365 [label="result.GetType().Should().Be<Parsed<object>>()", span="619-619", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_366 [label="result.TypeInfo.Current.Should().Be<Secert_Verb>()", span="620-620", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_368 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", span="607-607", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb_with_hidden_option()", file="InstanceBuilder.cs"];
m1_446 [label="Entry CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", span="751-751", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_447 [label="var sameValues = new[] { ''--stringvalue=test'', ''--shortandlong=test'' }", span="753-753", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_448 [label="var sut = new Parser(parserSettings => { parserSettings.IgnoreUnknownArguments = true; })", span="754-754", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_449 [label="var result = sut.ParseArguments<Simple_Options>(sameValues)", span="755-755", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_450 [label="result.MapResult(_ => true, _ => false).Should().BeTrue()", span="757-757", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_451 [label="Exit CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", span="751-751", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_same_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_53 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", span="83-83", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_short_name(string, string[])", file="InstanceBuilder.cs"];
m1_235 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="416-416", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_236 [label="var help = new StringWriter()", span="419-419", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_238 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { command })", span="423-423", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_237 [label="var sut = new Parser(config => config.HelpWriter = help)", span="420-420", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_239 [label="var result = help.ToString()", span="424-424", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_240 [label="result.Length.Should().BeGreaterThan(0)", span="427-427", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_241 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="428-428", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_242 [label="lines.Should().HaveCount(x => x == 1)", span="429-429", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_243 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="431-431", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_244 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", span="416-416", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen_in_verbs_scenario(string)", file="InstanceBuilder.cs"];
m1_144 [label=d, span="116-116", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_64 [label="var result =\r\n                sut.ParseArguments<Simple_Options_With_Values>(\r\n                    new[] { ''--stringvalue'', ''astring'', ''--'', ''20'', ''--aaa'', ''-b'', ''--ccc'', ''30'' })", span="125-127", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilder.cs"];
m1_47 [label="Exit CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", span="35-35", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_58 [label="Assert.IsType<NotParsed<Options_With_Switches>>(result)", span="107-107", cluster="CommandLine.Tests.Unit.ParserTests.Parse_repeated_options_with_default_parser()", file="InstanceBuilder.cs"];
m1_86 [label="Exit lambda expression", span="44-45", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_87 [label="Entry CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", span="105-105", cluster="CommandLine.Core.Specification.FromProperty(System.Reflection.PropertyInfo)", file="InstanceBuilder.cs"];
m1_90 [label="Entry lambda expression", span="53-57", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_91 [label="typeof(T).IsMutable()\r\n                    ? factory.Return(f => f(), Activator.CreateInstance<T>())\r\n                    : ReflectionHelper.CreateDefaultImmutableInstance<T>(\r\n                        (from p in specProps select p.Specification.ConversionType).ToArray())", span="54-57", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_92 [label="Exit lambda expression", span="53-57", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_104 [label="Entry CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", span="13-13", cluster="CommandLine.Core.TypeConverter.ChangeType(System.Collections.Generic.IEnumerable<string>, System.Type, bool, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_105 [label="Entry lambda expression", span="85-85", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_107 [label="Exit lambda expression", span="85-85", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_106 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="85-85", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_109 [label="token.Text.MatchName(o.ShortName, o.LongName, nameComparer)", span="89-89", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_108 [label="Entry lambda expression", span="89-89", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_110 [label="Exit lambda expression", span="89-89", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_68 [label="Entry lambda expression", span="122-122", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_111 [label="Entry CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", span="22-22", cluster="CommandLine.Tests.Fakes.Commit_Verb.Commit_Verb()", file="InstanceBuilder.cs"];
m1_341 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", span="587-587", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_342 [label="var expectedOptions = new Secert_Verb { Force = true, SecertOption = null}", span="590-590", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_343 [label="var help = new StringWriter()", span="591-591", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_349 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="602-602", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_344 [label="var sut = new Parser(config => config.HelpWriter = help)", span="592-592", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_345 [label="var result = sut.ParseArguments<Secert_Verb, Add_Verb_With_Usage_Attribute>(new string[] { ''secert'', ''--force'' })", span="595-595", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_346 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="599-599", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_347 [label="result.GetType().Should().Be<Parsed<object>>()", span="600-600", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_348 [label="result.TypeInfo.Current.Should().Be<Secert_Verb>()", span="601-601", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_350 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", span="587-587", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_when_given_hidden_verb()", file="InstanceBuilder.cs"];
m1_122 [label="var sut = new Parser()", span="252-252", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilder.cs"];
m1_35 [label="T instance", span="93-93", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_18 [label="sut.ParseArguments(new string[] { }, typeof(Add_Verb), typeof(Commit_Verb), typeof(Clone_Verb))", span="39-39", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_55 [label="Entry CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="142-142", cluster="CommandLine.NotParsed<T>.NotParsed(T, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="InstanceBuilder.cs"];
m1_56 [label="Entry System.Func<TResult>.Invoke()", span="0-0", cluster="System.Func<TResult>.Invoke()", file="InstanceBuilder.cs"];
m1_57 [label="Entry System.Func<T1, T2, TResult>.Invoke(T1, T2)", span="0-0", cluster="System.Func<T1, T2, TResult>.Invoke(T1, T2)", file="InstanceBuilder.cs"];
m1_59 [label="Entry CommandLine.Core.Specification.IsOption()", span="10-10", cluster="CommandLine.Core.Specification.IsOption()", file="InstanceBuilder.cs"];
m1_161 [label=token, span="", cluster="Unk.BeGreaterThan", file="InstanceBuilder.cs"];
m1_70 [label="Exit lambda expression", span="122-122", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_463 [label="Entry CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", span="761-761", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_464 [label="var sameValues = new[] { ''--stringvalue=test1'', ''--shortandlong=test2'' }", span="763-763", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_465 [label="var sut = new Parser(parserSettings => { parserSettings.IgnoreUnknownArguments = true; })", span="764-764", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_466 [label="var result = sut.ParseArguments<Simple_Options>(sameValues)", span="765-765", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_467 [label="result.MapResult(_ => true, _ => false).Should().BeTrue()", span="767-767", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_468 [label="Exit CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", span="761-761", cluster="CommandLine.Tests.Unit.ParserTests.Arguments_with_the_different_values_when_unknown_arguments_are_ignored()", file="InstanceBuilder.cs"];
m1_48 [label="Entry CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", span="126-126", cluster="CSharpx.Maybe<T1>.Return<T1, T2>(System.Func<T1, T2>, T2)", file="InstanceBuilder.cs"];
m1_49 [label="Entry System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", span="14-14", cluster="System.Type.GetSpecifications<T>(System.Func<System.Reflection.PropertyInfo, T>)", file="InstanceBuilder.cs"];
m1_51 [label="Entry System.Collections.IEnumerable.OfType<TResult>()", span="0-0", cluster="System.Collections.IEnumerable.OfType<TResult>()", file="InstanceBuilder.cs"];
m1_52 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Any<TSource>()", file="InstanceBuilder.cs"];
m1_512 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_shuffled_index_values()", span="837-837", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_shuffled_index_values()", file="InstanceBuilder.cs"];
m1_513 [label="var parser = Parser.Default", span="839-839", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_shuffled_index_values()", file="InstanceBuilder.cs"];
m1_514 [label="parser.ParseArguments<Options_With_Shuffled_Index_Values>(\r\n                new[] { ''zero'', ''one'', ''two'' })\r\n                .WithNotParsed(errors => { throw new InvalidOperationException(''Must be parsed.''); })\r\n                .WithParsed(args =>\r\n                {\r\n                    Assert.Equal(''zero'', args.Arg0);\r\n                    Assert.Equal(''one'', args.Arg1);\r\n                    Assert.Equal(''two'', args.Arg2);\r\n                })", span="840-848", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_shuffled_index_values()", file="InstanceBuilder.cs"];
m1_515 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_shuffled_index_values()", span="837-837", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_shuffled_index_values()", file="InstanceBuilder.cs"];
m1_63 [label="var sut = new Parser(with => with.EnableDashDash = true)", span="122-122", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilder.cs"];
m1_218 [label="Entry CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="385-385", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_219 [label="var help = new StringWriter()", span="388-388", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_220 [label="var sut = new Parser(config => config.HelpWriter = help)", span="389-389", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_222 [label="var result = help.ToString()", span="393-393", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_221 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''--help'' })", span="392-392", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_223 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="396-396", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_224 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="398-398", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_225 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="399-399", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_226 [label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="405-405", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_227 [label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="406-406", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_228 [label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="407-407", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_229 [label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="408-408", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_230 [label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="409-409", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_231 [label="Exit CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", span="385-385", cluster="CommandLine.Tests.Unit.ParserTests.Double_dash_help_dispalys_verbs_index_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_15 [label="Entry CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", span="32-32", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_13 [label="Exit lambda expression", span="24-24", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_12 [label="NameLookup.Contains(name, optionSpecs, nameComparer)", span="24-24", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_14 [label="Entry CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="11-11", cluster="CommandLine.Core.NameLookup.Contains(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs"];
m1_26 [label="preprocessorErrors.Any()", span="62-62", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_25 [label="var preprocessorErrors = arguments.Preprocess(PreprocessorGuards.Lookup(nameComparer))", span="61-61", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_27 [label="return new NotParsed<T>(makeDefault(), preprocessorErrors);", span="64-64", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_37 [label="instance = factory.Return(f => f(), Activator.CreateInstance<T>())", span="96-96", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_36 [label="typeInfo.IsMutable()", span="94-94", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_38 [label="instance = instance\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsJust(),\r\n                        sp => sp.Value.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing() && sp.Specification.DefaultValue.IsJust(),\r\n                        sp => sp.Specification.DefaultValue.FromJust())\r\n                    .SetProperties(specPropsWithValue,\r\n                        sp => sp.Value.IsNothing()\r\n                            && sp.Specification.TargetType == TargetType.Sequence\r\n                            && sp.Specification.DefaultValue.MatchNothing(),\r\n                        sp => sp.Property.PropertyType.GetGenericArguments().Single().CreateEmptyArray())", span="97-108", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_69 [label="Entry Unk.ToArray", span="", cluster="Unk.ToArray", file="InstanceBuilder.cs"];
m1_80 [label="Entry lambda expression", span="42-42", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_82 [label="Exit lambda expression", span="42-42", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_81 [label="f().GetType()", span="42-42", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_83 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="InstanceBuilder.cs"];
m1_84 [label="Entry lambda expression", span="44-45", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_101 [label="Entry lambda expression", span="79-79", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_102 [label="TypeConverter.ChangeType(vals, type, isScalar, parsingCulture)", span="79-79", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_103 [label="Exit lambda expression", span="79-79", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_112 [label="Entry lambda expression", span="96-96", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_113 [label="f()", span="96-96", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_114 [label="Exit lambda expression", span="96-96", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_127 [label="Entry lambda expression", span="103-103", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_128 [label="sp.Specification.DefaultValue.FromJust()", span="103-103", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_129 [label="Exit lambda expression", span="103-103", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_151 [label="new NotParsed<T>(instance, allErrors)", span="133-133", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_147 [label="new Parsed<T>(instance)", span="131-131", cluster="lambda expression", file="InstanceBuilder.cs", color=green, community=0];
m1_150 [label="Entry lambda expression", span="133-133", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_148 [label="Exit lambda expression", span="131-131", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_149 [label="Entry CommandLine.Parsed<T>.Parsed(T)", span="72-72", cluster="CommandLine.Parsed<T>.Parsed(T)", file="InstanceBuilder.cs"];
m1_152 [label="Exit lambda expression", span="133-133", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_163 [label=allErrors, span="", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_162 [label=instance, span="", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_164 [label="Exit lambda expression", span="301-301", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_177 [label="e.Equals(expectedError)", span="324-324", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_173 [label="Entry lambda expression", span="323-323", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_176 [label="Entry lambda expression", span="324-324", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_174 [label="x == 1", span="323-323", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_175 [label="Exit lambda expression", span="323-323", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_178 [label="Exit lambda expression", span="324-324", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_193 [label="config.HelpWriter = help", span="333-333", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_195 [label="Entry lambda expression", span="342-342", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_192 [label="Entry lambda expression", span="333-333", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_194 [label="Exit lambda expression", span="333-333", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_196 [label="x == 1", span="342-342", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_197 [label="Exit lambda expression", span="342-342", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_216 [label="config.HelpWriter = help", span="357-357", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_215 [label="Entry lambda expression", span="357-357", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_217 [label="Exit lambda expression", span="357-357", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_233 [label="config.HelpWriter = help", span="389-389", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_232 [label="Entry lambda expression", span="389-389", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_234 [label="Exit lambda expression", span="389-389", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_246 [label="config.HelpWriter = help", span="420-420", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_248 [label="Entry lambda expression", span="429-429", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_245 [label="Entry lambda expression", span="420-420", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_247 [label="Exit lambda expression", span="420-420", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_249 [label="x == 1", span="429-429", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_250 [label="Exit lambda expression", span="429-429", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_269 [label="config.HelpWriter = help", span="444-444", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_268 [label="Entry lambda expression", span="444-444", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_270 [label="Exit lambda expression", span="444-444", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_279 [label="config.HelpWriter = help", span="476-476", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_278 [label="Entry lambda expression", span="476-476", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_280 [label="Exit lambda expression", span="476-476", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_306 [label="config.HelpWriter = help", span="492-492", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_305 [label="Entry lambda expression", span="492-492", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_307 [label="Exit lambda expression", span="492-492", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_324 [label="config.HelpWriter = help", span="533-533", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_323 [label="Entry lambda expression", span="533-533", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_325 [label="Exit lambda expression", span="533-533", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_339 [label="config.HelpWriter = help", span="563-563", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_338 [label="Entry lambda expression", span="563-563", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_340 [label="Exit lambda expression", span="563-563", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_354 [label="config.HelpWriter = help", span="592-592", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_356 [label="Entry lambda expression", span="602-602", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_353 [label="Entry lambda expression", span="592-592", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_355 [label="Exit lambda expression", span="592-592", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_357 [label="o.RespectingRuntimeTypes()", span="602-602", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_358 [label="Exit lambda expression", span="602-602", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_370 [label="config.HelpWriter = help", span="612-612", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_372 [label="Entry lambda expression", span="621-621", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_369 [label="Entry lambda expression", span="612-612", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_371 [label="Exit lambda expression", span="612-612", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_373 [label="o.RespectingRuntimeTypes()", span="621-621", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_374 [label="Exit lambda expression", span="621-621", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_391 [label="config.HelpWriter = help", span="630-630", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_390 [label="Entry lambda expression", span="630-630", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_392 [label="Exit lambda expression", span="630-630", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_404 [label="opts.ShouldBeEquivalentTo(expected)", span="671-671", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_401 [label="config.IgnoreUnknownArguments = true", span="664-664", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_403 [label="Entry lambda expression", span="671-671", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_400 [label="Entry lambda expression", span="664-664", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_402 [label="Exit lambda expression", span="664-664", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_405 [label="Exit lambda expression", span="671-671", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_416 [label="opts.ShouldBeEquivalentTo(expected)", span="690-690", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_413 [label="config.IgnoreUnknownArguments = true", span="683-683", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_415 [label="Entry lambda expression", span="690-690", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_412 [label="Entry lambda expression", span="683-683", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_414 [label="Exit lambda expression", span="683-683", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_417 [label="Exit lambda expression", span="690-690", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_436 [label="config.HelpWriter = help", span="700-700", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_435 [label="Entry lambda expression", span="700-700", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_437 [label="Exit lambda expression", span="700-700", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_455 [label="parserSettings.IgnoreUnknownArguments = true", span="754-754", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_457 [label="Entry lambda expression", span="757-757", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_460 [label="Entry lambda expression", span="757-757", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_454 [label="Entry lambda expression", span="754-754", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_456 [label="Exit lambda expression", span="754-754", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_458 [label=true, span="757-757", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_459 [label="Exit lambda expression", span="757-757", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_461 [label=false, span="757-757", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_462 [label="Exit lambda expression", span="757-757", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_470 [label="parserSettings.IgnoreUnknownArguments = true", span="764-764", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_472 [label="Entry lambda expression", span="767-767", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_475 [label="Entry lambda expression", span="767-767", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_469 [label="Entry lambda expression", span="764-764", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_471 [label="Exit lambda expression", span="764-764", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_473 [label=true, span="767-767", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_474 [label="Exit lambda expression", span="767-767", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_476 [label=false, span="767-767", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_477 [label="Exit lambda expression", span="767-767", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_483 [label="Entry lambda expression", span="794-797", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_484 [label="Assert.Equal(null, r.User)", span="796-796", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_485 [label="Exit lambda expression", span="794-797", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_492 [label="Entry lambda expression", span="812-812", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_496 [label="Entry lambda expression", span="813-817", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_493 [label="throw new InvalidOperationException(''Must be parsed.'');", span="812-812", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_494 [label="Exit lambda expression", span="812-812", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_497 [label="Assert.Equal(''arg'', args.OptValue)", span="815-815", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_498 [label="Assert.Equal(''arg'', args.PosValue)", span="816-816", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_499 [label="Exit lambda expression", span="813-817", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_505 [label="Entry lambda expression", span="828-828", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_508 [label="Entry lambda expression", span="829-833", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_506 [label="throw new InvalidOperationException(''Must be parsed.'');", span="828-828", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_507 [label="Exit lambda expression", span="828-828", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_509 [label="Assert.Equal(''arg'', args.OptValue)", span="831-831", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_510 [label="Assert.Equal(''arg'', args.PosValue)", span="832-832", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_511 [label="Exit lambda expression", span="829-833", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_516 [label="Entry lambda expression", span="842-842", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_519 [label="Entry lambda expression", span="843-848", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_517 [label="throw new InvalidOperationException(''Must be parsed.'');", span="842-842", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_518 [label="Exit lambda expression", span="842-842", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_520 [label="Assert.Equal(''zero'', args.Arg0)", span="845-845", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_521 [label="Assert.Equal(''one'', args.Arg1)", span="846-846", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_522 [label="Assert.Equal(''two'', args.Arg2)", span="847-847", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_523 [label="Exit lambda expression", span="843-848", cluster="lambda expression", file="InstanceBuilder.cs"];
m1_146 [label="Entry Unk.ContainSingle", span="", cluster="Unk.ContainSingle", file="InstanceBuilder.cs"];
m1_123 [label="var result =\r\n                sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' })", span="255-257", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilder.cs"];
m1_130 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="266-266", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilder.cs"];
m1_134 [label="((Parsed<Immutable_Simple_Options>)result).Value.ShouldBeEquivalentTo(expectedOptions)", span="276-276", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilder.cs"];
m1_98 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="196-196", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilder.cs"];
m1_97 [label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="195-195", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilder.cs"];
m1_95 [label="var sut = new Parser()", span="184-184", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilder.cs"];
m1_121 [label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="242-251", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilder.cs"];
m1_120 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", span="239-239", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilder.cs"];
m1_125 [label="((Parsed<object>)result).Value.ShouldBeEquivalentTo(expectedOptions, o => o.RespectingRuntimeTypes())", span="261-261", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilder.cs"];
m1_124 [label="Assert.IsType<Clone_Verb>(((Parsed<object>)result).Value)", span="260-260", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs_using_generic_overload()", file="InstanceBuilder.cs"];
m1_132 [label="var sut = new Parser()", span="270-270", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilder.cs"];
m1_131 [label="var expectedOptions = new Immutable_Simple_Options(''strvalue'', new[] { 1, 2, 3 }, default(bool), default(long))", span="269-269", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilder.cs"];
m1_135 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", span="266-266", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilder.cs"];
m1_140 [label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--help'' })", span="288-288", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilder.cs"];
m1_143 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilder.cs"];
m1_16 [label="var writer = new StringWriter()", span="35-35", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_94 [label="var expectedOptions = new Clone_Verb\r\n                                  {\r\n                                      Quiet = true,\r\n                                      Urls =\r\n                                          new[]\r\n                                          {\r\n                                              ''http://gsscoder.github.com/'',\r\n                                              ''http://yes-to-nooo.github.com/''\r\n                                          }\r\n                                  }", span="174-183", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilder.cs"];
m1_99 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verbs()", span="171-171", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilder.cs"];
m1_85 [label="Entry Unk.RespectingRuntimeTypes", span="", cluster="Unk.RespectingRuntimeTypes", file="InstanceBuilder.cs"];
m1_96 [label="var result =\r\n                sut.ParseArguments(\r\n                    new[] { ''clone'', ''-q'', ''http://gsscoder.github.com/'', ''http://yes-to-nooo.github.com/'' },\r\n                    typeof(Add_Verb),\r\n                    typeof(Commit_Verb),\r\n                    typeof(Clone_Verb))", span="187-192", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verbs()", file="InstanceBuilder.cs"];
m1_142 [label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="292-292", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilder.cs"];
m1_141 [label="((NotParsed<Immutable_Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="291-291", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilder.cs"];
m1_145 [label="Entry Unk.HaveCount", span="", cluster="Unk.HaveCount", file="InstanceBuilder.cs"];
m1_11 [label="Entry Unk.True", span="", cluster="Unk.True", file="InstanceBuilder.cs"];
m1_17 [label="var sut = new Parser(with => with.HelpWriter = writer)", span="36-36", cluster="CommandLine.Tests.Unit.ParserTests.When_HelpWriter_is_set_help_screen_is_generated_in_verbs_scenario()", file="InstanceBuilder.cs"];
m1_54 [label="Entry CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", span="4-4", cluster="CommandLine.Tests.Fakes.Options_With_Switches.Options_With_Switches()", file="InstanceBuilder.cs"];
m1_28 [label="var tokenizerResult = tokenizer(arguments, optionSpecs)", span="68-68", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_29 [label="var tokens = tokenizerResult.Value", span="70-70", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_30 [label="var partitions = TokenPartitioner.Partition(\r\n                tokens,\r\n                name => TypeLookup.FindTypeDescriptorAndSibling(name, optionSpecs, nameComparer))", span="72-74", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_32 [label="var valueSpecProps = ValueMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsValue() select pt),\r\n                    partitions.Values,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture))", span="82-85", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_31 [label="var optionSpecProps = OptionMapper.MapValues(\r\n                (from pt in specProps where pt.Specification.IsOption() select pt),\r\n                partitions.Options,\r\n                (vals, type, isScalar) => TypeConverter.ChangeType(vals, type, isScalar, parsingCulture),\r\n                nameComparer)", span="76-80", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_33 [label="var missingValueErrors = from token in partitions.Errors\r\n                                     select new MissingValueOptionError(\r\n                                         optionSpecs.Single(o => token.Text.MatchName(o.ShortName, o.LongName, nameComparer)).FromOptionSpecification())", span="87-89", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_34 [label="var specPropsWithValue = optionSpecProps.Value.Concat(valueSpecProps.Value)", span="91-91", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_78 [label="Entry CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", span="7-7", cluster="CommandLine.Tests.Fakes.Add_Verb.Add_Verb()", file="InstanceBuilder.cs"];
m1_153 [label="Entry NotParsed<T>.cstr", span="", cluster="NotParsed<T>.cstr", file="InstanceBuilder.cs"];
m1_191 [label="Entry Unk.StartWithEquivalent", span="", cluster="Unk.StartWithEquivalent", file="InstanceBuilder.cs"];
m1_500 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_verb_with_same_option_and_value_args()", span="821-821", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verb_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_501 [label="var parser = Parser.Default", span="823-823", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verb_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_502 [label="var result = parser.ParseArguments(\r\n                new[] { ''test'', ''arg'', ''-o'', ''arg'' }, \r\n                typeof(Verb_With_Option_And_Value_Of_String_Type))", span="824-826", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verb_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_503 [label="result\r\n                .WithNotParsed(errors => { throw new InvalidOperationException(''Must be parsed.''); })\r\n                .WithParsed<Verb_With_Option_And_Value_Of_String_Type>(args =>\r\n                {\r\n                    Assert.Equal(''arg'', args.OptValue);\r\n                    Assert.Equal(''arg'', args.PosValue);\r\n                })", span="827-833", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verb_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_504 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_verb_with_same_option_and_value_args()", span="821-821", cluster="CommandLine.Tests.Unit.ParserTests.Parse_verb_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_137 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", span="281-281", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_immutable_instance_generates_help_requested_error()", file="InstanceBuilder.cs"];
m1_39 [label="var ctor = typeInfo.GetConstructor((from sp in specProps select sp.Property.PropertyType).ToArray())", span="112-112", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_40 [label="var values = (from prms in ctor.GetParameters()\r\n                              join sp in specPropsWithValue on prms.Name.ToLower() equals sp.Property.Name.ToLower()\r\n                              select sp.Value.Return(v => v,\r\n                                    sp.Specification.DefaultValue.Return(d => d,\r\n                                        sp.Specification.ConversionType.CreateDefaultForImmutable()))).ToArray()", span="113-117", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_41 [label="instance = (T)ctor.Invoke(values)", span="118-118", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_43 [label="var allErrors = tokenizerResult.Errors\r\n                .Concat(missingValueErrors)\r\n                .Concat(optionSpecProps.Errors)\r\n                .Concat(valueSpecProps.Errors)\r\n                .Concat(validationErrors)", span="124-128", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", color=green, community=0];
m1_42 [label="var validationErrors = specPropsWithValue.Validate(\r\n                SpecificationPropertyRules.Lookup(tokens))", span="121-122", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_44 [label="Func<ParserResult<T>> makeParsed =\r\n                () => new Parsed<T>(instance)", span="130-131", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs", color=green, community=0];
m1_179 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="329-329", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_180 [label="var help = new StringWriter()", span="332-332", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_181 [label="var sut = new Parser(config => config.HelpWriter = help)", span="333-333", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_183 [label="var result = help.ToString()", span="337-337", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_182 [label="sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="336-336", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_184 [label="result.Length.Should().BeGreaterThan(0)", span="340-340", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_185 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="341-341", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_186 [label="lines.Should().HaveCount(x => x == 1)", span="342-342", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_187 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="344-344", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_188 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", span="329-329", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_info_screen()", file="InstanceBuilder.cs"];
m1_133 [label="var result = sut.ParseArguments<Immutable_Simple_Options>(new[] { ''--stringvalue=strvalue'', ''-i1'', ''2'', ''3'' })", span="273-273", cluster="CommandLine.Tests.Unit.ParserTests.Parse_to_immutable_instance()", file="InstanceBuilder.cs"];
m1_491 [label="Entry CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", span="58-58", cluster="CommandLine.ParserResult<T>.WithNotParsed<T>(System.Action<System.Collections.Generic.IEnumerable<CommandLine.Error>>)", file="InstanceBuilder.cs"];
m1_19 [label="var typeInfo = factory.Return(f => f().GetType(), typeof(T))", span="42-42", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_20 [label="var specProps = typeInfo.GetSpecifications(pi => SpecificationProperty.Create(\r\n                    Specification.FromProperty(pi), pi, Maybe.Nothing<object>()))", span="44-45", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_21 [label="var specs = from pt in specProps select pt.Specification", span="47-47", cluster="CommandLine.Core.InstanceBuilder.Build<T>(CSharpx.Maybe<System.Func<T>>, System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>, System.Collections.Generic.IEnumerable<string>, System.StringComparer, System.Globalization.CultureInfo)", file="InstanceBuilder.cs"];
m1_189 [label="Entry string.ToNotEmptyLines()", span="10-10", cluster="string.ToNotEmptyLines()", file="InstanceBuilder.cs"];
m1_66 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", span="112-112", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_double_dash()", file="InstanceBuilder.cs"];
m1_139 [label="Entry System.Type.CreateEmptyArray()", span="101-101", cluster="System.Type.CreateEmptyArray()", file="InstanceBuilder.cs"];
m1_67 [label="Entry System.Activator.CreateInstance<T>()", span="0-0", cluster="System.Activator.CreateInstance<T>()", file="InstanceBuilder.cs"];
m1_482 [label="Entry string.Split(params char[])", span="0-0", cluster="string.Split(params char[])", file="InstanceBuilder.cs"];
m1_62 [label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269", cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="InstanceBuilder.cs"];
m1_65 [label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0", cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", color=red, community=0, file="InstanceBuilder.cs"];
m1_478 [label="Entry CommandLine.Tests.Unit.ParserTests.Null_default()", span="790-790", cluster="CommandLine.Tests.Unit.ParserTests.Null_default()", file="InstanceBuilder.cs"];
m1_479 [label="Parser parser = new Parser()", span="792-792", cluster="CommandLine.Tests.Unit.ParserTests.Null_default()", file="InstanceBuilder.cs"];
m1_480 [label="parser.ParseArguments<NullDefaultCommandLineArguments>(''''.Split())\r\n                .WithParsed(r =>\r\n                {\r\n                    Assert.Equal(null, r.User);\r\n                })", span="793-797", cluster="CommandLine.Tests.Unit.ParserTests.Null_default()", file="InstanceBuilder.cs"];
m1_481 [label="Exit CommandLine.Tests.Unit.ParserTests.Null_default()", span="790-790", cluster="CommandLine.Tests.Unit.ParserTests.Null_default()", file="InstanceBuilder.cs"];
m1_126 [label="Entry CSharpx.Maybe<T>.IsNothing<T>()", span="170-170", cluster="CSharpx.Maybe<T>.IsNothing<T>()", file="InstanceBuilder.cs"];
m1_190 [label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15", cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="InstanceBuilder.cs"];
m1_165 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilder.cs"];
m1_166 [label="var expectedError = new VersionRequestedError()", span="316-316", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilder.cs"];
m1_167 [label="var sut = new Parser()", span="317-317", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilder.cs"];
m1_170 [label="((NotParsed<Simple_Options>)result).Errors.Should().ContainSingle(e => e.Equals(expectedError))", span="324-324", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilder.cs"];
m1_168 [label="var result = sut.ParseArguments<Simple_Options>(new[] { ''--version'' })", span="320-320", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilder.cs"];
m1_169 [label="((NotParsed<Simple_Options>)result).Errors.Should().HaveCount(x => x == 1)", span="323-323", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilder.cs"];
m1_171 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", span="313-313", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_version_request_generates_version_requested_error()", file="InstanceBuilder.cs"];
m1_251 [label="Entry CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="440-440", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_252 [label="var help = new StringWriter()", span="443-443", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_253 [label="var sut = new Parser(config => config.HelpWriter = help)", span="444-444", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_255 [label="var result = help.ToString()", span="448-448", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_254 [label="sut.ParseArguments<Options_With_Two_Option_Required_Set_To_True_And_Two_Sets>(new[] { ''--weburl=value.com'', ''--ftpurl=value.org'' })", span="447-447", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_256 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="451-451", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_257 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="453-453", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_258 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="454-454", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_259 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="460-460", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_260 [label="lines[3].ShouldBeEquivalentTo(''Option: 'weburl' is not compatible with: 'ftpurl'.'')", span="461-461", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_261 [label="lines[4].ShouldBeEquivalentTo(''Option: 'ftpurl' is not compatible with: 'weburl'.'')", span="462-462", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_262 [label="lines[5].ShouldBeEquivalentTo(''--weburl     Required.'')", span="463-463", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_263 [label="lines[6].ShouldBeEquivalentTo(''--ftpurl     Required.'')", span="464-464", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_264 [label="lines[7].ShouldBeEquivalentTo(''-a'')", span="465-465", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_265 [label="lines[8].ShouldBeEquivalentTo(''--help       Display this help screen.'')", span="466-466", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_266 [label="lines[9].ShouldBeEquivalentTo(''--version    Display version information.'')", span="467-467", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_267 [label="Exit CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", span="440-440", cluster="CommandLine.Tests.Unit.ParserTests.Errors_of_type_MutuallyExclusiveSetError_are_properly_formatted()", file="InstanceBuilder.cs"];
m1_45 [label="Entry CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", span="6-6", cluster="CommandLine.Tests.Fakes.Simple_Options.Simple_Options()", color=green, community=0, file="InstanceBuilder.cs"];
m1_46 [label="Entry CommandLine.Parser.Parser()", span="26-26", cluster="CommandLine.Parser.Parser()", file="InstanceBuilder.cs"];
m1_24 [label="Entry Unk.NotBeEmpty", span="", cluster="Unk.NotBeEmpty", file="InstanceBuilder.cs"];
m1_22 [label="Entry CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", span="146-146", cluster="CommandLine.Parser.ParseArguments(System.Collections.Generic.IEnumerable<string>, params System.Type[])", file="InstanceBuilder.cs"];
m1_23 [label="Entry Unk.Should", span="", cluster="Unk.Should", file="InstanceBuilder.cs"];
m1_418 [label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", span="696-696", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_419 [label="var help = new StringWriter()", span="699-699", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_420 [label="var sut = new Parser(config => config.HelpWriter = help)", span="700-700", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_422 [label="var result = help.ToString()", span="705-705", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_421 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''clone'', ''--bad-arg'', ''--help'' })", span="703-704", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_423 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="708-708", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_424 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="710-710", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_425 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="711-711", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_426 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="717-717", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_427 [label="lines[3].ShouldBeEquivalentTo(''Option 'bad-arg' is unknown.'')", span="718-718", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_428 [label="lines[4].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="719-719", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_429 [label="lines[5].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="720-720", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_430 [label="lines[6].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="721-721", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_431 [label="lines[7].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="722-722", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_432 [label="lines[8].ShouldBeEquivalentTo(''--version         Display version information.'')", span="723-723", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_433 [label="lines[9].ShouldBeEquivalentTo(''value pos. 0'')", span="724-724", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_434 [label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", span="696-696", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_excludes_help_as_unknown_option()", file="InstanceBuilder.cs"];
m1_495 [label="Entry System.InvalidOperationException.InvalidOperationException(string)", span="0-0", cluster="System.InvalidOperationException.InvalidOperationException(string)", file="InstanceBuilder.cs"];
m1_375 [label="Entry CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", span="626-626", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_376 [label="var help = new StringWriter()", span="629-629", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_377 [label="var sut = new Parser(config => config.HelpWriter = help)", span="630-630", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_379 [label="var result = help.ToString()", span="635-635", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_378 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(\r\n                new[] { ''help'', ''clone'', ''extra-arg'' })", span="633-634", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_380 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="638-638", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_381 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="640-640", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_382 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="641-641", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_383 [label="lines[2].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="647-647", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_384 [label="lines[3].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="648-648", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_385 [label="lines[4].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="649-649", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_386 [label="lines[5].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="650-650", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_387 [label="lines[6].ShouldBeEquivalentTo(''--version         Display version information.'')", span="651-651", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_388 [label="lines[7].ShouldBeEquivalentTo(''value pos. 0'')", span="652-652", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_389 [label="Exit CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", span="626-626", cluster="CommandLine.Tests.Unit.ParserTests.Specific_verb_help_screen_should_be_displayed_regardless_other_argument()", file="InstanceBuilder.cs"];
m1_445 [label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20", cluster="CommandLine.NameInfo.NameInfo(string, string)", file="InstanceBuilder.cs"];
m1_322 [label="Entry CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", span="25-25", cluster="CommandLine.Parser.ParseArguments<T1, T2>(System.Collections.Generic.IEnumerable<string>)", file="InstanceBuilder.cs"];
m1_486 [label="Entry Unk.Equal", span="", cluster="Unk.Equal", file="InstanceBuilder.cs"];
m1_351 [label="Entry CommandLine.Tests.Fakes.Secert_Verb.Secert_Verb()", span="96-96", cluster="CommandLine.Tests.Fakes.Secert_Verb.Secert_Verb()", file="InstanceBuilder.cs"];
m1_198 [label="Entry CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="353-353", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_199 [label="var help = new StringWriter()", span="356-356", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_200 [label="var sut = new Parser(config => config.HelpWriter = help)", span="357-357", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_202 [label="var result = help.ToString()", span="361-361", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_201 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new string[] { })", span="360-360", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_203 [label="result.Length.Should().BeGreaterThan(0)", span="364-364", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_204 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="365-365", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_205 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="367-367", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_206 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="368-368", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_207 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="374-374", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_208 [label="lines[3].ShouldBeEquivalentTo(''No verb selected.'')", span="375-375", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_209 [label="lines[4].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="376-376", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_210 [label="lines[5].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="377-377", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_211 [label="lines[6].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="378-378", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_212 [label="lines[7].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="379-379", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_213 [label="lines[8].ShouldBeEquivalentTo(''version    Display version information.'')", span="380-380", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_214 [label="Exit CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", span="353-353", cluster="CommandLine.Tests.Unit.ParserTests.Implicit_help_screen_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_281 [label="Entry CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="488-488", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_282 [label="var help = new StringWriter()", span="491-491", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_283 [label="var sut = new Parser(config => config.HelpWriter = help)", span="492-492", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_285 [label="var result = help.ToString()", span="497-497", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_284 [label="sut.ParseArguments<Add_Verb_With_Usage_Attribute, Commit_Verb_With_Usage_Attribute, Clone_Verb_With_Usage_Attribute>(\r\n                new[] { ''clone'', ''--badoption=@bad?value'' })", span="495-496", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_286 [label="var lines = result.ToNotEmptyLines().TrimStringArray()", span="500-500", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_287 [label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="502-502", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_288 [label="lines[1].ShouldBeEquivalentTo(''Copyright (c) 2005 - 2015 Giacomo Stelluti Scala'')", span="503-503", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_289 [label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="509-509", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_290 [label="lines[3].ShouldBeEquivalentTo(''Option 'badoption' is unknown.'')", span="510-510", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_291 [label="lines[4].ShouldBeEquivalentTo(''USAGE:'')", span="511-511", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_292 [label="lines[5].ShouldBeEquivalentTo(''Basic cloning:'')", span="512-512", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_293 [label="lines[6].ShouldBeEquivalentTo(''git clone https://github.com/gsscoder/csharpx'')", span="513-513", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_294 [label="lines[7].ShouldBeEquivalentTo(''Cloning quietly:'')", span="514-514", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_295 [label="lines[8].ShouldBeEquivalentTo(''git clone --quiet https://github.com/gsscoder/railwaysharp'')", span="515-515", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_296 [label="lines[9].ShouldBeEquivalentTo(''Cloning without hard links:'')", span="516-516", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_297 [label="lines[10].ShouldBeEquivalentTo(''git clone --no-hardlinks https://github.com/gsscoder/csharpx'')", span="517-517", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_298 [label="lines[11].ShouldBeEquivalentTo(''--no-hardlinks    Optimize the cloning process from a repository on a local'')", span="518-518", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_299 [label="lines[12].ShouldBeEquivalentTo(''filesystem by copying files.'')", span="519-519", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_300 [label="lines[13].ShouldBeEquivalentTo(''-q, --quiet       Suppress summary message.'')", span="520-520", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_301 [label="lines[14].ShouldBeEquivalentTo(''--help            Display this help screen.'')", span="521-521", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_302 [label="lines[15].ShouldBeEquivalentTo(''--version         Display version information.'')", span="522-522", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_303 [label="lines[16].ShouldBeEquivalentTo(''URLS (pos. 0)     A list of url(s) to clone.'')", span="523-523", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_304 [label="Exit CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", span="488-488", cluster="CommandLine.Tests.Unit.ParserTests.Properly_formatted_help_screen_is_displayed_when_usage_is_defined_in_verb_scenario()", file="InstanceBuilder.cs"];
m1_444 [label="Entry CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", span="340-340", cluster="CommandLine.MutuallyExclusiveSetError.MutuallyExclusiveSetError(CommandLine.NameInfo, string)", file="InstanceBuilder.cs"];
m1_453 [label="Entry Unk.BeTrue", span="", cluster="Unk.BeTrue", file="InstanceBuilder.cs"];
m1_406 [label="Entry CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="678-678", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilder.cs"];
m1_407 [label="var sut = new Parser(config => config.IgnoreUnknownArguments = true)", span="683-683", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilder.cs"];
m1_408 [label="var result = sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(arguments)", span="686-686", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilder.cs"];
m1_410 [label="result.WithParsed(opts => opts.ShouldBeEquivalentTo(expected))", span="690-690", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilder.cs"];
m1_409 [label="result.Tag.ShouldBeEquivalentTo(ParserResultType.Parsed)", span="689-689", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilder.cs"];
m1_411 [label="Exit CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", span="678-678", cluster="CommandLine.Tests.Unit.ParserTests.When_IgnoreUnknownArguments_is_set_valid_unknown_arguments_avoid_a_failure_parsing_for_verbs(string[], CommandLine.Tests.Fakes.Commit_Verb)", file="InstanceBuilder.cs"];
m1_271 [label="Entry CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="472-472", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilder.cs"];
m1_272 [label="var help = new StringWriter()", span="475-475", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilder.cs"];
m1_273 [label="var sut = new Parser(config => config.HelpWriter = help)", span="476-476", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilder.cs"];
m1_275 [label="var result = help.ToString()", span="480-480", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilder.cs"];
m1_274 [label="sut.ParseArguments<Add_Verb, Commit_Verb, Clone_Verb>(new[] { ''commit'', ''--help'' })", span="479-479", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilder.cs"];
m1_276 [label="result.Length.Should().BeGreaterThan(0)", span="483-483", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilder.cs"];
m1_277 [label="Exit CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", span="472-472", cluster="CommandLine.Tests.Unit.ParserTests.Explicit_help_request_with_specific_verb_generates_help_screen()", file="InstanceBuilder.cs"];
m1_172 [label="Entry CommandLine.VersionRequestedError.VersionRequestedError()", span="468-468", cluster="CommandLine.VersionRequestedError.VersionRequestedError()", file="InstanceBuilder.cs"];
m1_438 [label="Entry CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", span="730-730", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilder.cs"];
m1_439 [label="var expectedResult = new[]\r\n                {\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''weburl''), string.Empty),\r\n                    new MutuallyExclusiveSetError(new NameInfo('''', ''somethingelese''), string.Empty)\r\n                }", span="733-737", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilder.cs"];
m1_440 [label="var sut = new Parser()", span="738-738", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilder.cs"];
m1_442 [label="((NotParsed<Options_With_SetName_That_Ends_With_Previous_SetName>)result).Errors.ShouldBeEquivalentTo(expectedResult)", span="745-745", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilder.cs"];
m1_441 [label="var result = sut.ParseArguments<Options_With_SetName_That_Ends_With_Previous_SetName>(\r\n                new[] { ''--weburl'', ''value'', ''--somethingelse'', ''othervalue'' })", span="741-742", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilder.cs"];
m1_443 [label="Exit CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", span="730-730", cluster="CommandLine.Tests.Unit.ParserTests.Breaking_mutually_exclusive_set_constraint_with_set_name_with_partial_string_right_side_equality_gererates_MissingValueOptionError()", file="InstanceBuilder.cs"];
m1_352 [label="Entry object.GetType()", span="0-0", cluster="object.GetType()", file="InstanceBuilder.cs"];
m1_100 [label="Entry CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="23-23", cluster="CommandLine.Core.TypeLookup.FindTypeDescriptorAndSibling(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", file="InstanceBuilder.cs"];
m1_487 [label="Entry CommandLine.Tests.Unit.ParserTests.Parse_options_with_same_option_and_value_args()", span="807-807", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_488 [label="var parser = Parser.Default", span="809-809", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_489 [label="parser.ParseArguments<Options_With_Option_And_Value_Of_String_Type>(\r\n                new[] { ''arg'', ''-o'', ''arg'' })\r\n                .WithNotParsed(errors => { throw new InvalidOperationException(''Must be parsed.''); })\r\n                .WithParsed(args =>\r\n                {\r\n                    Assert.Equal(''arg'', args.OptValue);\r\n                    Assert.Equal(''arg'', args.PosValue);\r\n                })", span="810-817", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_490 [label="Exit CommandLine.Tests.Unit.ParserTests.Parse_options_with_same_option_and_value_args()", span="807-807", cluster="CommandLine.Tests.Unit.ParserTests.Parse_options_with_same_option_and_value_args()", file="InstanceBuilder.cs"];
m1_452 [label="Entry CommandLine.ParserResult<TSource>.MapResult<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", span="77-77", cluster="CommandLine.ParserResult<TSource>.MapResult<TSource, TResult>(System.Func<TSource, TResult>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.Error>, TResult>)", file="InstanceBuilder.cs"];
m1_399 [label="Entry Unk.WithParsed", span="", cluster="Unk.WithParsed", file="InstanceBuilder.cs"];
m1_524 [label=writer, span="", file="InstanceBuilder.cs"];
m1_525 [label=writer, span="", file="InstanceBuilder.cs"];
m1_526 [label=writer, span="", file="InstanceBuilder.cs"];
m1_527 [label=expectedError, span="", file="InstanceBuilder.cs"];
m1_528 [label=help, span="", file="InstanceBuilder.cs"];
m1_529 [label=expectedError, span="", file="InstanceBuilder.cs"];
m1_530 [label=help, span="", file="InstanceBuilder.cs"];
m1_531 [label=help, span="", file="InstanceBuilder.cs"];
m1_532 [label=help, span="", file="InstanceBuilder.cs"];
m1_533 [label=help, span="", file="InstanceBuilder.cs"];
m1_534 [label=help, span="", file="InstanceBuilder.cs"];
m1_535 [label=help, span="", file="InstanceBuilder.cs"];
m1_536 [label=help, span="", file="InstanceBuilder.cs"];
m1_537 [label=help, span="", file="InstanceBuilder.cs"];
m1_538 [label=help, span="", file="InstanceBuilder.cs"];
m1_539 [label=help, span="", file="InstanceBuilder.cs"];
m1_540 [label=help, span="", file="InstanceBuilder.cs"];
m1_541 [label=help, span="", file="InstanceBuilder.cs"];
m1_542 [label="CommandLine.Tests.Fakes.Simple_Options", span="", file="InstanceBuilder.cs"];
m1_543 [label="CommandLine.Tests.Fakes.Commit_Verb", span="", file="InstanceBuilder.cs"];
m1_544 [label=help, span="", file="InstanceBuilder.cs"];
n0 -> n1  [key=0, style=solid, color=red];
n0 -> n4  [key=1, style=dashed, color=red, label=int];
n0 -> n8  [key=1, style=dashed, color=red, label=int];
n0 -> n9  [key=1, style=dashed, color=red, label=int];
n0 -> n13  [key=1, style=dashed, color=red, label=int];
n0 -> n14  [key=1, style=dashed, color=red, label=int];
n0 -> n16  [key=1, style=dashed, color=red, label=int];
n1 -> n2  [key=0, style=solid, color=red];
n1 -> n3  [key=0, style=solid, color=red];
n4 -> n5  [key=0, style=solid, color=red];
n4 -> n7  [key=1, style=dashed, color=red, label=hundreds];
n8 -> n9  [key=0, style=solid, color=red];
n8 -> n8  [key=1, style=dashed, color=red, label=int];
n8 -> n13  [key=1, style=dashed, color=red, label=int];
n8 -> n14  [key=1, style=dashed, color=red, label=int];
n8 -> n16  [key=1, style=dashed, color=red, label=int];
n9 -> n10  [key=0, style=solid, color=red];
n9 -> n12  [key=1, style=dashed, color=red, label=tens];
n13 -> n14  [key=0, style=solid, color=red];
n13 -> n13  [key=1, style=dashed, color=red, label=int];
n13 -> n16  [key=1, style=dashed, color=red, label=int];
n14 -> n15  [key=0, style=solid, color=red];
n14 -> n17  [key=0, style=solid, color=red];
n16 -> n17  [key=0, style=solid, color=red];
n16 -> n20  [key=2, style=dotted, color=red];
n2 -> n18  [key=0, style=solid, color=red];
n3 -> n4  [key=0, style=solid, color=red];
n3 -> n19  [key=2, style=dotted, color=red];
n3 -> n7  [key=1, style=dashed, color=red, label=result];
n3 -> n12  [key=1, style=dashed, color=red, label=result];
n3 -> n16  [key=1, style=dashed, color=red, label=result];
n3 -> n17  [key=1, style=dashed, color=red, label=result];
n7 -> n8  [key=0, style=solid, color=red];
n7 -> n20  [key=2, style=dotted, color=red];
n12 -> n13  [key=0, style=solid, color=red];
n12 -> n20  [key=2, style=dotted, color=red];
n17 -> n18  [key=0, style=solid, color=red];
n17 -> n21  [key=2, style=dotted, color=red];
n5 -> n6  [key=0, style=solid, color=red];
n5 -> n9  [key=0, style=solid, color=red];
n6 -> n7  [key=0, style=solid, color=red];
n10 -> n11  [key=0, style=solid, color=red];
n10 -> n14  [key=0, style=solid, color=red];
n11 -> n12  [key=0, style=solid, color=red];
n15 -> n16  [key=0, style=solid, color=red];
n18 -> n0  [key=0, style=bold, color=blue];
n22 -> n23  [key=0, style=solid, color=red];
n22 -> n25  [key=1, style=dashed, color=red, label=int];
n22 -> n27  [key=1, style=dashed, color=red, label=int];
n22 -> n29  [key=1, style=dashed, color=red, label=int];
n23 -> n24  [key=0, style=solid, color=red];
n23 -> n25  [key=0, style=solid, color=red];
n25 -> n26  [key=0, style=solid, color=red];
n25 -> n27  [key=0, style=solid, color=red];
n27 -> n28  [key=0, style=solid, color=red];
n29 -> n30  [key=0, style=solid, color=red];
n24 -> n33  [key=0, style=solid, color=red];
n26 -> n33  [key=0, style=solid, color=red];
n28 -> n29  [key=0, style=solid, color=red];
n28 -> n32  [key=0, style=solid, color=red];
n32 -> n33  [key=0, style=solid];
n30 -> n31  [key=0, style=solid];
n30 -> n32  [key=0, style=solid];
n31 -> n33  [key=0, style=solid];
n33 -> n22  [key=0, style=bold, color=blue];
n34 -> n35  [key=0, style=solid];
n34 -> n38  [key=1, style=dashed, color=darkseagreen4, label=int];
n34 -> n41  [key=1, style=dashed, color=darkseagreen4, label=int];
n34 -> n44  [key=1, style=dashed, color=darkseagreen4, label=int];
n35 -> n36  [key=0, style=solid];
n35 -> n39  [key=0, style=solid];
n35 -> n42  [key=0, style=solid];
n35 -> n45  [key=0, style=solid];
n38 -> n46  [key=0, style=solid];
n38 -> n22  [key=2, style=dotted];
n41 -> n46  [key=0, style=solid];
n41 -> n22  [key=2, style=dotted];
n44 -> n46  [key=0, style=solid];
n44 -> n22  [key=2, style=dotted];
n36 -> n37  [key=0, style=solid];
n39 -> n40  [key=0, style=solid];
n42 -> n43  [key=0, style=solid];
n45 -> n46  [key=0, style=solid];
n37 -> n38  [key=0, style=solid];
n40 -> n41  [key=0, style=solid];
n43 -> n44  [key=0, style=solid];
n46 -> n34  [key=0, style=bold, color=blue];
n47 -> n48  [key=0, style=solid];
n47 -> n51  [key=1, style=dashed, color=darkseagreen4, label=int];
n47 -> n53  [key=1, style=dashed, color=darkseagreen4, label=int];
n47 -> n56  [key=1, style=dashed, color=darkseagreen4, label=int];
n47 -> n59  [key=1, style=dashed, color=darkseagreen4, label=int];
n48 -> n49  [key=0, style=solid];
n48 -> n50  [key=0, style=solid];
n51 -> n52  [key=0, style=solid];
n51 -> n54  [key=0, style=solid];
n53 -> n54  [key=0, style=solid];
n53 -> n62  [key=2, style=dotted];
n53 -> n53  [key=1, style=dashed, color=darkseagreen4, label=int];
n53 -> n56  [key=1, style=dashed, color=darkseagreen4, label=int];
n53 -> n59  [key=1, style=dashed, color=darkseagreen4, label=int];
n56 -> n57  [key=0, style=solid];
n56 -> n58  [key=1, style=dashed, color=darkseagreen4, label=num];
n59 -> n55  [key=0, style=solid];
n59 -> n59  [key=1, style=dashed, color=darkseagreen4, label=int];
n49 -> n61  [key=0, style=solid];
n50 -> n51  [key=0, style=solid];
n50 -> n19  [key=2, style=dotted];
n50 -> n52  [key=1, style=dashed, color=darkseagreen4, label=result];
n50 -> n58  [key=1, style=dashed, color=darkseagreen4, label=result];
n50 -> n60  [key=1, style=dashed, color=darkseagreen4, label=result];
n52 -> n53  [key=0, style=solid];
n52 -> n20  [key=2, style=dotted];
n58 -> n59  [key=0, style=solid];
n58 -> n0  [key=2, style=dotted];
n58 -> n34  [key=2, style=dotted];
n58 -> n65  [key=2, style=dotted];
n60 -> n61  [key=0, style=solid];
n60 -> n21  [key=2, style=dotted];
n60 -> n66  [key=2, style=dotted];
n54 -> n55  [key=0, style=solid];
n54 -> n63  [key=2, style=dotted];
n54 -> n64  [key=2, style=dotted];
n55 -> n56  [key=0, style=solid];
n55 -> n60  [key=0, style=solid];
n55 -> n58  [key=1, style=dashed, color=darkseagreen4, label=numeral];
n55 -> n59  [key=1, style=dashed, color=darkseagreen4, label=numeral];
n57 -> n58  [key=0, style=solid];
n57 -> n55  [key=0, style=solid];
n61 -> n47  [key=0, style=bold, color=blue];
m0_8 -> m0_9  [key=0, style=solid, color=green];
m0_8 -> m0_10  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<object>"];
m0_9 -> m0_10  [key=0, style=solid, color=green];
m0_9 -> m0_13  [key=2, style=dotted, color=green];
m0_9 -> m0_14  [key=2, style=dotted, color=green];
m0_9 -> m0_11  [key=1, style=dashed, color=green, label=array];
m0_10 -> m0_11  [key=0, style=solid, color=green];
m0_10 -> m0_15  [key=2, style=dotted, color=green];
m0_10 -> m0_16  [key=2, style=dotted, color=green];
m0_11 -> m0_12  [key=0, style=solid, color=green];
m0_12 -> m0_8  [key=0, style=bold, color=blue];
m0_0 -> m0_1  [key=0, style=solid, color=green];
m0_0 -> m0_2  [key=1, style=dashed, color=green, label="System.Collections.Generic.IEnumerable<TSource>"];
m0_0 -> m0_4  [key=1, style=dashed, color=green, label="System.Func<TSource, bool>"];
m0_1 -> m0_1  [key=3, color=green, style=bold, label="Local variable int index"];
m0_1 -> m0_2  [key=0, style=solid, color=green];
m0_1 -> m0_3  [key=1, style=dashed, color=green, label=index];
m0_1 -> m0_5  [key=1, style=dashed, color=green, label=index];
m0_2 -> m0_3  [key=0, style=solid, color=green];
m0_2 -> m0_5  [key=0, style=solid, color=green];
m0_2 -> m0_4  [key=1, style=dashed, color=green, label=item];
m0_3 -> m0_4  [key=0, style=solid, color=green];
m0_3 -> m0_3  [key=1, style=dashed, color=green, label=index];
m0_3 -> m0_5  [key=1, style=dashed, color=green, label=index];
m0_5 -> m0_6  [key=0, style=solid, color=green];
m0_4 -> m0_2  [key=0, style=solid, color=green];
m0_4 -> m0_5  [key=0, style=solid, color=green];
m0_4 -> m0_7  [key=2, style=dotted, color=green];
m0_6 -> m0_0  [key=0, style=bold, color=blue];
m0_17 -> m0_18  [key=0, style=solid, color=green];
m0_18 -> m0_19  [key=0, style=solid, color=green];
m0_18 -> m0_20  [key=2, style=dotted, color=green];
m0_19 -> m0_17  [key=0, style=bold, color=blue];
m1_0 -> m1_1  [key=0, style=solid];
m1_0 -> m1_3  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.ParserResult<T> Build"];
m1_0 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_0 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_0 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_0 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_1 -> m1_2  [key=0, style=solid];
m1_1 -> m1_7  [key=2, style=dotted];
m1_1 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_1 -> m1_4  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_1 -> m1_3  [key=2, style=dotted];
m1_1 -> m1_1  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> "];
m1_2 -> m1_3  [key=0, style=solid];
m1_2 -> m1_8  [key=2, style=dotted];
m1_2 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_2 -> m1_0  [key=0, style=bold, color=blue];
m1_4 -> m1_5  [key=0, style=solid];
m1_4 -> m1_10  [key=2, style=dotted];
m1_4 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_4 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_4 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_3 -> m1_4  [key=0, style=solid];
m1_3 -> m1_9  [key=2, style=dotted];
m1_3 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label="System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>>"];
m1_3 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_3 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_3 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_3 -> m1_19  [key=0, style=solid];
m1_3 -> m1_23  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m1_3 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m1_3 -> m1_24  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_3 -> m1_25  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<string>"];
m1_3 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_3 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_3 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_3 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_3 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_3 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m1_5 -> m1_6  [key=0, style=solid];
m1_5 -> m1_11  [key=2, style=dotted];
m1_5 -> m1_9  [key=2, style=dotted];
m1_6 -> m1_0  [key=0, style=bold, color=blue];
m1_6 -> m1_7  [key=0, style=solid];
m1_6 -> m1_10  [key=2, style=dotted];
m1_6 -> m1_15  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_50 -> m1_51  [key=0, style=solid];
m1_50 -> m1_46  [key=2, style=dotted];
m1_8 -> m1_111  [key=3, color=darkorchid, style=bold, label="Parameter variable System.Func<System.Collections.Generic.IEnumerable<string>, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>>> tokenizer"];
m1_8 -> m1_4  [key=0, style=bold, color=blue];
m1_154 -> m1_155  [key=0, style=solid];
m1_154 -> m1_5  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_154 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_154 -> m1_6  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_154 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_155 -> m1_156  [key=0, style=solid];
m1_155 -> m1_7  [key=2, style=dotted];
m1_155 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_155 -> m1_158  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_155 -> m1_12  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_155 -> m1_16  [key=1, style=dashed, color=darkseagreen4, label="System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>"];
m1_156 -> m1_157  [key=0, style=solid];
m1_156 -> m1_8  [key=2, style=dotted];
m1_156 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_156 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label="CSharpx.Maybe<System.Func<T>>"];
m1_158 -> m1_159  [key=0, style=solid];
m1_158 -> m1_10  [key=2, style=dotted];
m1_158 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_158 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label="System.StringComparer"];
m1_157 -> m1_158  [key=0, style=solid];
m1_157 -> m1_9  [key=2, style=dotted];
m1_157 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m1_159 -> m1_160  [key=0, style=solid];
m1_159 -> m1_23  [key=2, style=dotted];
m1_159 -> m1_161  [key=2, style=dotted];
m1_159 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m1_160 -> m1_154  [key=0, style=bold, color=blue];
m1_160 -> m1_102  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_160 -> m1_106  [key=1, style=dashed, color=darkseagreen4, label="System.Globalization.CultureInfo"];
m1_93 -> m1_94  [key=0, style=solid];
m1_115 -> m1_116  [key=0, style=solid];
m1_116 -> m1_117  [key=0, style=solid];
m1_116 -> m1_118  [key=2, style=dotted];
m1_117 -> m1_118  [key=0, style=solid];
m1_117 -> m1_22  [key=2, style=dotted];
m1_117 -> m1_115  [key=0, style=bold, color=blue];
m1_118 -> m1_119  [key=0, style=solid];
m1_118 -> m1_60  [key=2, style=dotted];
m1_119 -> m1_115  [key=0, style=bold, color=blue];
m1_119 -> m1_120  [key=0, style=solid];
m1_393 -> m1_394  [key=0, style=solid];
m1_393 -> m1_395  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_393 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m1_393 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m1_394 -> m1_395  [key=0, style=solid];
m1_394 -> m1_8  [key=2, style=dotted];
m1_394 -> m1_401  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_395 -> m1_396  [key=0, style=solid];
m1_395 -> m1_9  [key=2, style=dotted];
m1_395 -> m1_397  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_397 -> m1_398  [key=0, style=solid];
m1_397 -> m1_399  [key=2, style=dotted];
m1_397 -> m1_403  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_396 -> m1_397  [key=0, style=solid];
m1_396 -> m1_47  [key=2, style=dotted];
m1_398 -> m1_393  [key=0, style=bold, color=blue];
m1_79 -> m1_80  [key=0, style=solid];
m1_61 -> m1_62  [key=0, style=solid];
m1_71 -> m1_72  [key=0, style=solid];
m1_72 -> m1_73  [key=0, style=solid];
m1_72 -> m1_78  [key=2, style=dotted];
m1_72 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_73 -> m1_74  [key=0, style=solid];
m1_73 -> m1_8  [key=2, style=dotted];
m1_73 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_76 -> m1_77  [key=0, style=solid];
m1_76 -> m1_47  [key=2, style=dotted];
m1_76 -> m1_82  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_74 -> m1_75  [key=0, style=solid];
m1_74 -> m1_22  [key=2, style=dotted];
m1_74 -> m1_76  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_75 -> m1_76  [key=0, style=solid];
m1_75 -> m1_60  [key=2, style=dotted];
m1_77 -> m1_71  [key=0, style=bold, color=blue];
m1_7 -> m1_8  [key=0, style=solid];
m1_136 -> m1_134  [key=0, style=bold, color=blue];
m1_138 -> m1_139  [key=0, style=solid];
m1_138 -> m1_144  [key=2, style=dotted];
m1_138 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_138 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_308 -> m1_309  [key=0, style=solid];
m1_309 -> m1_310  [key=0, style=solid];
m1_309 -> m1_7  [key=2, style=dotted];
m1_309 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_309 -> m1_312  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_310 -> m1_311  [key=0, style=solid];
m1_310 -> m1_8  [key=2, style=dotted];
m1_310 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_312 -> m1_313  [key=0, style=solid];
m1_312 -> m1_10  [key=2, style=dotted];
m1_311 -> m1_312  [key=0, style=solid];
m1_311 -> m1_322  [key=2, style=dotted];
m1_313 -> m1_314  [key=0, style=solid];
m1_313 -> m1_189  [key=2, style=dotted];
m1_313 -> m1_190  [key=2, style=dotted];
m1_313 -> m1_315  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_313 -> m1_316  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_313 -> m1_317  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_313 -> m1_318  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_313 -> m1_319  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_313 -> m1_320  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_314 -> m1_315  [key=0, style=solid];
m1_314 -> m1_23  [key=2, style=dotted];
m1_314 -> m1_191  [key=2, style=dotted];
m1_315 -> m1_316  [key=0, style=solid];
m1_315 -> m1_47  [key=2, style=dotted];
m1_316 -> m1_317  [key=0, style=solid];
m1_316 -> m1_47  [key=2, style=dotted];
m1_317 -> m1_318  [key=0, style=solid];
m1_317 -> m1_47  [key=2, style=dotted];
m1_318 -> m1_319  [key=0, style=solid];
m1_318 -> m1_47  [key=2, style=dotted];
m1_319 -> m1_320  [key=0, style=solid];
m1_319 -> m1_47  [key=2, style=dotted];
m1_320 -> m1_321  [key=0, style=solid];
m1_320 -> m1_47  [key=2, style=dotted];
m1_321 -> m1_308  [key=0, style=bold, color=blue];
m1_88 -> m1_89  [key=0, style=solid];
m1_88 -> m1_54  [key=2, style=dotted];
m1_88 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_89 -> m1_90  [key=0, style=solid];
m1_89 -> m1_46  [key=2, style=dotted];
m1_326 -> m1_327  [key=0, style=solid];
m1_327 -> m1_328  [key=0, style=solid];
m1_327 -> m1_7  [key=2, style=dotted];
m1_327 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_327 -> m1_330  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_328 -> m1_329  [key=0, style=solid];
m1_328 -> m1_8  [key=2, style=dotted];
m1_328 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_330 -> m1_331  [key=0, style=solid];
m1_330 -> m1_10  [key=2, style=dotted];
m1_329 -> m1_330  [key=0, style=solid];
m1_329 -> m1_322  [key=2, style=dotted];
m1_331 -> m1_332  [key=0, style=solid];
m1_331 -> m1_189  [key=2, style=dotted];
m1_331 -> m1_190  [key=2, style=dotted];
m1_331 -> m1_333  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_331 -> m1_334  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_331 -> m1_335  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_331 -> m1_336  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_332 -> m1_333  [key=0, style=solid];
m1_332 -> m1_23  [key=2, style=dotted];
m1_332 -> m1_191  [key=2, style=dotted];
m1_333 -> m1_334  [key=0, style=solid];
m1_333 -> m1_47  [key=2, style=dotted];
m1_334 -> m1_335  [key=0, style=solid];
m1_334 -> m1_47  [key=2, style=dotted];
m1_335 -> m1_336  [key=0, style=solid];
m1_335 -> m1_47  [key=2, style=dotted];
m1_336 -> m1_337  [key=0, style=solid];
m1_336 -> m1_47  [key=2, style=dotted];
m1_337 -> m1_326  [key=0, style=bold, color=blue];
m1_359 -> m1_360  [key=0, style=solid];
m1_360 -> m1_361  [key=0, style=solid];
m1_360 -> m1_351  [key=2, style=dotted];
m1_360 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_361 -> m1_362  [key=0, style=solid];
m1_361 -> m1_7  [key=2, style=dotted];
m1_361 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_367 -> m1_368  [key=0, style=solid];
m1_367 -> m1_47  [key=2, style=dotted];
m1_367 -> m1_372  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_362 -> m1_363  [key=0, style=solid];
m1_362 -> m1_8  [key=2, style=dotted];
m1_362 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_363 -> m1_364  [key=0, style=solid];
m1_363 -> m1_322  [key=2, style=dotted];
m1_363 -> m1_365  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_363 -> m1_366  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_363 -> m1_367  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_364 -> m1_365  [key=0, style=solid];
m1_364 -> m1_47  [key=2, style=dotted];
m1_365 -> m1_366  [key=0, style=solid];
m1_365 -> m1_352  [key=2, style=dotted];
m1_365 -> m1_23  [key=2, style=dotted];
m1_365 -> m1_60  [key=2, style=dotted];
m1_366 -> m1_367  [key=0, style=solid];
m1_366 -> m1_23  [key=2, style=dotted];
m1_366 -> m1_60  [key=2, style=dotted];
m1_368 -> m1_359  [key=0, style=bold, color=blue];
m1_446 -> m1_447  [key=0, style=solid];
m1_447 -> m1_448  [key=0, style=solid];
m1_447 -> m1_449  [key=1, style=dashed, color=darkseagreen4, label=sameValues];
m1_448 -> m1_449  [key=0, style=solid];
m1_448 -> m1_8  [key=2, style=dotted];
m1_448 -> m1_455  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_449 -> m1_450  [key=0, style=solid];
m1_449 -> m1_9  [key=2, style=dotted];
m1_450 -> m1_451  [key=0, style=solid];
m1_450 -> m1_452  [key=2, style=dotted];
m1_450 -> m1_23  [key=2, style=dotted];
m1_450 -> m1_453  [key=2, style=dotted];
m1_450 -> m1_457  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_450 -> m1_460  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_451 -> m1_446  [key=0, style=bold, color=blue];
m1_53 -> m1_48  [key=0, style=bold, color=blue];
m1_235 -> m1_236  [key=0, style=solid];
m1_235 -> m1_238  [key=1, style=dashed, color=darkseagreen4, label=string];
m1_236 -> m1_237  [key=0, style=solid];
m1_236 -> m1_7  [key=2, style=dotted];
m1_236 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_236 -> m1_239  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_238 -> m1_239  [key=0, style=solid];
m1_238 -> m1_35  [key=2, style=dotted];
m1_237 -> m1_238  [key=0, style=solid];
m1_237 -> m1_8  [key=2, style=dotted];
m1_237 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_239 -> m1_240  [key=0, style=solid];
m1_239 -> m1_10  [key=2, style=dotted];
m1_239 -> m1_241  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_240 -> m1_241  [key=0, style=solid];
m1_240 -> m1_23  [key=2, style=dotted];
m1_240 -> m1_161  [key=2, style=dotted];
m1_241 -> m1_242  [key=0, style=solid];
m1_241 -> m1_189  [key=2, style=dotted];
m1_241 -> m1_190  [key=2, style=dotted];
m1_241 -> m1_243  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_242 -> m1_243  [key=0, style=solid];
m1_242 -> m1_23  [key=2, style=dotted];
m1_242 -> m1_145  [key=2, style=dotted];
m1_242 -> m1_248  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_243 -> m1_244  [key=0, style=solid];
m1_243 -> m1_23  [key=2, style=dotted];
m1_243 -> m1_191  [key=2, style=dotted];
m1_244 -> m1_235  [key=0, style=bold, color=blue];
m1_144 -> m1_145  [key=0, style=solid];
m1_64 -> m1_65  [key=0, style=solid, color=red];
m1_64 -> m1_9  [key=2, style=dotted];
m1_47 -> m1_3  [key=0, style=bold, color=blue];
m1_58 -> m1_59  [key=0, style=solid];
m1_58 -> m1_60  [key=2, style=dotted];
m1_86 -> m1_87  [key=0, style=solid];
m1_86 -> m1_84  [key=0, style=bold, color=blue];
m1_87 -> m1_88  [key=0, style=solid];
m1_87 -> m1_90  [key=1, style=dashed, color=darkseagreen4, label=args];
m1_90 -> m1_91  [key=0, style=solid];
m1_90 -> m1_9  [key=2, style=dotted];
m1_91 -> m1_92  [key=0, style=solid];
m1_91 -> m1_47  [key=2, style=dotted];
m1_91 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=p];
m1_91 -> m1_66  [key=2, style=dotted];
m1_91 -> m1_67  [key=2, style=dotted];
m1_91 -> m1_48  [key=2, style=dotted];
m1_91 -> m1_69  [key=2, style=dotted];
m1_91 -> m1_93  [key=2, style=dotted];
m1_91 -> m1_94  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_92 -> m1_86  [key=0, style=bold, color=blue];
m1_92 -> m1_90  [key=0, style=bold, color=blue];
m1_104 -> m1_105  [key=0, style=solid];
m1_104 -> m1_107  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_105 -> m1_106  [key=0, style=solid];
m1_105 -> m1_111  [key=2, style=dotted];
m1_105 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_107 -> m1_108  [key=0, style=solid];
m1_107 -> m1_22  [key=2, style=dotted];
m1_107 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_107 -> m1_105  [key=0, style=bold, color=blue];
m1_106 -> m1_107  [key=0, style=solid];
m1_106 -> m1_46  [key=2, style=dotted];
m1_106 -> m1_104  [key=2, style=dotted];
m1_109 -> m1_110  [key=0, style=solid];
m1_109 -> m1_47  [key=2, style=dotted];
m1_109 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_109 -> m1_111  [key=2, style=dotted];
m1_108 -> m1_109  [key=0, style=solid];
m1_108 -> m1_60  [key=2, style=dotted];
m1_110 -> m1_104  [key=0, style=bold, color=blue];
m1_110 -> m1_108  [key=0, style=bold, color=blue];
m1_68 -> m1_69  [key=0, style=solid];
m1_111 -> m1_322  [key=3, color=darkorchid, style=bold, label="method methodReturn CommandLine.Core.StatePair<System.Collections.Generic.IEnumerable<CommandLine.Core.Token>> "];
m1_341 -> m1_342  [key=0, style=solid];
m1_342 -> m1_343  [key=0, style=solid];
m1_342 -> m1_351  [key=2, style=dotted];
m1_342 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_343 -> m1_344  [key=0, style=solid];
m1_343 -> m1_7  [key=2, style=dotted];
m1_343 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_349 -> m1_350  [key=0, style=solid];
m1_349 -> m1_47  [key=2, style=dotted];
m1_349 -> m1_356  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_344 -> m1_345  [key=0, style=solid];
m1_344 -> m1_8  [key=2, style=dotted];
m1_344 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_345 -> m1_346  [key=0, style=solid];
m1_345 -> m1_322  [key=2, style=dotted];
m1_345 -> m1_347  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_345 -> m1_348  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_345 -> m1_349  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_346 -> m1_347  [key=0, style=solid];
m1_346 -> m1_47  [key=2, style=dotted];
m1_347 -> m1_348  [key=0, style=solid];
m1_347 -> m1_352  [key=2, style=dotted];
m1_347 -> m1_23  [key=2, style=dotted];
m1_347 -> m1_60  [key=2, style=dotted];
m1_348 -> m1_349  [key=0, style=solid];
m1_348 -> m1_23  [key=2, style=dotted];
m1_348 -> m1_60  [key=2, style=dotted];
m1_350 -> m1_341  [key=0, style=bold, color=blue];
m1_122 -> m1_123  [key=0, style=solid];
m1_122 -> m1_46  [key=2, style=dotted];
m1_35 -> m1_36  [key=0, style=solid];
m1_18 -> m1_19  [key=0, style=solid];
m1_18 -> m1_22  [key=2, style=dotted];
m1_55 -> m1_56  [key=0, style=solid];
m1_56 -> m1_57  [key=0, style=solid];
m1_57 -> m1_58  [key=0, style=solid];
m1_57 -> m1_9  [key=2, style=dotted];
m1_59 -> m1_55  [key=0, style=bold, color=blue];
m1_161 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=token];
m1_70 -> m1_68  [key=0, style=bold, color=blue];
m1_463 -> m1_464  [key=0, style=solid];
m1_464 -> m1_465  [key=0, style=solid];
m1_464 -> m1_466  [key=1, style=dashed, color=darkseagreen4, label=sameValues];
m1_465 -> m1_466  [key=0, style=solid];
m1_465 -> m1_8  [key=2, style=dotted];
m1_465 -> m1_470  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_466 -> m1_467  [key=0, style=solid];
m1_466 -> m1_9  [key=2, style=dotted];
m1_467 -> m1_468  [key=0, style=solid];
m1_467 -> m1_452  [key=2, style=dotted];
m1_467 -> m1_23  [key=2, style=dotted];
m1_467 -> m1_453  [key=2, style=dotted];
m1_467 -> m1_472  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_467 -> m1_475  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_468 -> m1_463  [key=0, style=bold, color=blue];
m1_48 -> m1_49  [key=0, style=solid];
m1_48 -> m1_51  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_49 -> m1_50  [key=0, style=solid];
m1_49 -> m1_54  [key=2, style=dotted];
m1_49 -> m1_52  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_51 -> m1_52  [key=0, style=solid];
m1_51 -> m1_9  [key=2, style=dotted];
m1_52 -> m1_53  [key=0, style=solid];
m1_52 -> m1_47  [key=2, style=dotted];
m1_512 -> m1_513  [key=0, style=solid];
m1_513 -> m1_514  [key=0, style=solid];
m1_514 -> m1_515  [key=0, style=solid];
m1_514 -> m1_9  [key=2, style=dotted];
m1_514 -> m1_491  [key=2, style=dotted];
m1_514 -> m1_399  [key=2, style=dotted];
m1_514 -> m1_516  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_514 -> m1_519  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_515 -> m1_512  [key=0, style=bold, color=blue];
m1_63 -> m1_64  [key=0, style=solid];
m1_63 -> m1_8  [key=2, style=dotted];
m1_63 -> m1_69  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_218 -> m1_219  [key=0, style=solid];
m1_219 -> m1_220  [key=0, style=solid];
m1_219 -> m1_7  [key=2, style=dotted];
m1_219 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_219 -> m1_222  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_220 -> m1_221  [key=0, style=solid];
m1_220 -> m1_8  [key=2, style=dotted];
m1_220 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_222 -> m1_223  [key=0, style=solid];
m1_222 -> m1_10  [key=2, style=dotted];
m1_221 -> m1_222  [key=0, style=solid];
m1_221 -> m1_35  [key=2, style=dotted];
m1_223 -> m1_224  [key=0, style=solid];
m1_223 -> m1_189  [key=2, style=dotted];
m1_223 -> m1_190  [key=2, style=dotted];
m1_223 -> m1_225  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_223 -> m1_226  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_223 -> m1_227  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_223 -> m1_228  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_223 -> m1_229  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_223 -> m1_230  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_224 -> m1_225  [key=0, style=solid];
m1_224 -> m1_23  [key=2, style=dotted];
m1_224 -> m1_191  [key=2, style=dotted];
m1_225 -> m1_226  [key=0, style=solid];
m1_225 -> m1_47  [key=2, style=dotted];
m1_226 -> m1_227  [key=0, style=solid];
m1_226 -> m1_47  [key=2, style=dotted];
m1_227 -> m1_228  [key=0, style=solid];
m1_227 -> m1_47  [key=2, style=dotted];
m1_228 -> m1_229  [key=0, style=solid];
m1_228 -> m1_47  [key=2, style=dotted];
m1_229 -> m1_230  [key=0, style=solid];
m1_229 -> m1_47  [key=2, style=dotted];
m1_230 -> m1_231  [key=0, style=solid];
m1_230 -> m1_47  [key=2, style=dotted];
m1_231 -> m1_218  [key=0, style=bold, color=blue];
m1_15 -> m1_16  [key=0, style=solid];
m1_13 -> m1_14  [key=0, style=solid];
m1_13 -> m1_11  [key=0, style=bold, color=blue];
m1_12 -> m1_13  [key=0, style=solid];
m1_12 -> m1_14  [key=2, style=dotted];
m1_14 -> m1_12  [key=0, style=bold, color=blue];
m1_26 -> m1_27  [key=0, style=solid];
m1_26 -> m1_28  [key=0, style=solid];
m1_26 -> m1_52  [key=2, style=dotted];
m1_25 -> m1_26  [key=0, style=solid];
m1_25 -> m1_53  [key=2, style=dotted];
m1_25 -> m1_54  [key=2, style=dotted];
m1_25 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=preprocessorErrors];
m1_27 -> m1_25  [key=0, style=bold, color=blue];
m1_27 -> m1_47  [key=0, style=solid];
m1_27 -> m1_56  [key=2, style=dotted];
m1_27 -> m1_55  [key=2, style=dotted];
m1_37 -> m1_38  [key=0, style=solid];
m1_37 -> m1_67  [key=2, style=dotted];
m1_37 -> m1_48  [key=2, style=dotted];
m1_37 -> m1_112  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_36 -> m1_37  [key=0, style=solid];
m1_36 -> m1_39  [key=0, style=solid];
m1_36 -> m1_66  [key=2, style=dotted];
m1_38 -> m1_36  [key=0, style=bold, color=blue];
m1_38 -> m1_44  [key=1, style=dashed, color=green, label=instance];
m1_38 -> m1_147  [key=1, style=dashed, color=green, label=instance];
m1_38 -> m1_45  [key=1, style=dashed, color=green, label=instance];
m1_38 -> m1_42  [key=0, style=solid];
m1_38 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=instance];
m1_38 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=instance];
m1_38 -> m1_68  [key=2, style=dotted];
m1_38 -> m1_115  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_119  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_123  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_130  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_38 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_69 -> m1_70  [key=0, style=solid];
m1_80 -> m1_81  [key=0, style=solid];
m1_82 -> m1_83  [key=0, style=solid];
m1_82 -> m1_80  [key=0, style=bold, color=blue];
m1_81 -> m1_79  [key=0, style=bold, color=blue];
m1_81 -> m1_56  [key=2, style=dotted];
m1_81 -> m1_82  [key=0, style=solid];
m1_81 -> m1_83  [key=2, style=dotted];
m1_83 -> m1_84  [key=0, style=solid];
m1_83 -> m1_85  [key=2, style=dotted];
m1_84 -> m1_82  [key=0, style=bold, color=blue];
m1_84 -> m1_85  [key=0, style=solid];
m1_101 -> m1_102  [key=0, style=solid];
m1_102 -> m1_103  [key=0, style=solid];
m1_102 -> m1_85  [key=2, style=dotted];
m1_102 -> m1_104  [key=2, style=dotted];
m1_103 -> m1_101  [key=0, style=bold, color=blue];
m1_112 -> m1_113  [key=0, style=solid];
m1_113 -> m1_114  [key=0, style=solid];
m1_113 -> m1_85  [key=2, style=dotted];
m1_113 -> m1_56  [key=2, style=dotted];
m1_114 -> m1_112  [key=0, style=bold, color=blue];
m1_127 -> m1_128  [key=0, style=solid];
m1_128 -> m1_129  [key=0, style=solid];
m1_128 -> m1_85  [key=2, style=dotted];
m1_128 -> m1_122  [key=2, style=dotted];
m1_129 -> m1_127  [key=0, style=bold, color=blue];
m1_151 -> m1_152  [key=0, style=solid];
m1_151 -> m1_153  [key=2, style=dotted];
m1_147 -> m1_148  [key=0, style=solid, color=green];
m1_147 -> m1_149  [key=2, style=dotted, color=green];
m1_150 -> m1_151  [key=0, style=solid];
m1_148 -> m1_149  [key=0, style=solid];
m1_148 -> m1_146  [key=0, style=bold, color=blue];
m1_149 -> m1_147  [key=0, style=bold, color=blue];
m1_152 -> m1_150  [key=0, style=bold, color=blue];
m1_163 -> m1_164  [key=0, style=solid];
m1_163 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=allErrors];
m1_162 -> m1_163  [key=0, style=solid];
m1_162 -> m1_147  [key=1, style=dashed, color=green, label=instance];
m1_162 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=instance];
m1_164 -> m1_162  [key=0, style=bold, color=blue];
m1_177 -> m1_178  [key=0, style=solid];
m1_177 -> m1_153  [key=2, style=dotted];
m1_173 -> m1_174  [key=0, style=solid];
m1_176 -> m1_177  [key=0, style=solid];
m1_174 -> m1_175  [key=0, style=solid];
m1_175 -> m1_173  [key=0, style=bold, color=blue];
m1_178 -> m1_176  [key=0, style=bold, color=blue];
m1_193 -> m1_194  [key=0, style=solid];
m1_195 -> m1_196  [key=0, style=solid];
m1_192 -> m1_193  [key=0, style=solid];
m1_194 -> m1_192  [key=0, style=bold, color=blue];
m1_196 -> m1_197  [key=0, style=solid];
m1_197 -> m1_195  [key=0, style=bold, color=blue];
m1_216 -> m1_217  [key=0, style=solid];
m1_215 -> m1_216  [key=0, style=solid];
m1_217 -> m1_215  [key=0, style=bold, color=blue];
m1_233 -> m1_234  [key=0, style=solid];
m1_232 -> m1_233  [key=0, style=solid];
m1_234 -> m1_232  [key=0, style=bold, color=blue];
m1_246 -> m1_247  [key=0, style=solid];
m1_248 -> m1_249  [key=0, style=solid];
m1_245 -> m1_246  [key=0, style=solid];
m1_247 -> m1_245  [key=0, style=bold, color=blue];
m1_249 -> m1_250  [key=0, style=solid];
m1_250 -> m1_248  [key=0, style=bold, color=blue];
m1_269 -> m1_270  [key=0, style=solid];
m1_268 -> m1_269  [key=0, style=solid];
m1_270 -> m1_268  [key=0, style=bold, color=blue];
m1_279 -> m1_280  [key=0, style=solid];
m1_278 -> m1_279  [key=0, style=solid];
m1_280 -> m1_278  [key=0, style=bold, color=blue];
m1_306 -> m1_307  [key=0, style=solid];
m1_305 -> m1_306  [key=0, style=solid];
m1_307 -> m1_305  [key=0, style=bold, color=blue];
m1_324 -> m1_325  [key=0, style=solid];
m1_323 -> m1_324  [key=0, style=solid];
m1_325 -> m1_323  [key=0, style=bold, color=blue];
m1_339 -> m1_340  [key=0, style=solid];
m1_338 -> m1_339  [key=0, style=solid];
m1_340 -> m1_338  [key=0, style=bold, color=blue];
m1_354 -> m1_355  [key=0, style=solid];
m1_356 -> m1_357  [key=0, style=solid];
m1_353 -> m1_354  [key=0, style=solid];
m1_355 -> m1_353  [key=0, style=bold, color=blue];
m1_357 -> m1_358  [key=0, style=solid];
m1_357 -> m1_85  [key=2, style=dotted];
m1_358 -> m1_356  [key=0, style=bold, color=blue];
m1_370 -> m1_371  [key=0, style=solid];
m1_372 -> m1_373  [key=0, style=solid];
m1_369 -> m1_370  [key=0, style=solid];
m1_371 -> m1_369  [key=0, style=bold, color=blue];
m1_373 -> m1_374  [key=0, style=solid];
m1_373 -> m1_85  [key=2, style=dotted];
m1_374 -> m1_372  [key=0, style=bold, color=blue];
m1_391 -> m1_392  [key=0, style=solid];
m1_390 -> m1_391  [key=0, style=solid];
m1_392 -> m1_390  [key=0, style=bold, color=blue];
m1_404 -> m1_405  [key=0, style=solid];
m1_404 -> m1_47  [key=2, style=dotted];
m1_401 -> m1_402  [key=0, style=solid];
m1_403 -> m1_404  [key=0, style=solid];
m1_400 -> m1_401  [key=0, style=solid];
m1_402 -> m1_400  [key=0, style=bold, color=blue];
m1_405 -> m1_403  [key=0, style=bold, color=blue];
m1_416 -> m1_417  [key=0, style=solid];
m1_416 -> m1_47  [key=2, style=dotted];
m1_413 -> m1_414  [key=0, style=solid];
m1_415 -> m1_416  [key=0, style=solid];
m1_412 -> m1_413  [key=0, style=solid];
m1_414 -> m1_412  [key=0, style=bold, color=blue];
m1_417 -> m1_415  [key=0, style=bold, color=blue];
m1_436 -> m1_437  [key=0, style=solid];
m1_435 -> m1_436  [key=0, style=solid];
m1_437 -> m1_435  [key=0, style=bold, color=blue];
m1_455 -> m1_456  [key=0, style=solid];
m1_457 -> m1_458  [key=0, style=solid];
m1_460 -> m1_461  [key=0, style=solid];
m1_454 -> m1_455  [key=0, style=solid];
m1_456 -> m1_454  [key=0, style=bold, color=blue];
m1_458 -> m1_459  [key=0, style=solid];
m1_459 -> m1_457  [key=0, style=bold, color=blue];
m1_461 -> m1_462  [key=0, style=solid];
m1_462 -> m1_460  [key=0, style=bold, color=blue];
m1_470 -> m1_471  [key=0, style=solid];
m1_472 -> m1_473  [key=0, style=solid];
m1_475 -> m1_476  [key=0, style=solid];
m1_469 -> m1_470  [key=0, style=solid];
m1_471 -> m1_469  [key=0, style=bold, color=blue];
m1_473 -> m1_474  [key=0, style=solid];
m1_474 -> m1_472  [key=0, style=bold, color=blue];
m1_476 -> m1_477  [key=0, style=solid];
m1_477 -> m1_475  [key=0, style=bold, color=blue];
m1_483 -> m1_484  [key=0, style=solid];
m1_484 -> m1_485  [key=0, style=solid];
m1_484 -> m1_486  [key=2, style=dotted];
m1_485 -> m1_483  [key=0, style=bold, color=blue];
m1_492 -> m1_493  [key=0, style=solid];
m1_496 -> m1_497  [key=0, style=solid];
m1_496 -> m1_498  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Options_With_Option_And_Value_Of_String_Type"];
m1_493 -> m1_494  [key=0, style=solid];
m1_493 -> m1_495  [key=2, style=dotted];
m1_494 -> m1_492  [key=0, style=bold, color=blue];
m1_497 -> m1_498  [key=0, style=solid];
m1_497 -> m1_486  [key=2, style=dotted];
m1_498 -> m1_499  [key=0, style=solid];
m1_498 -> m1_486  [key=2, style=dotted];
m1_499 -> m1_496  [key=0, style=bold, color=blue];
m1_505 -> m1_506  [key=0, style=solid];
m1_508 -> m1_509  [key=0, style=solid];
m1_508 -> m1_510  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Verb_With_Option_And_Value_Of_String_Type"];
m1_506 -> m1_507  [key=0, style=solid];
m1_506 -> m1_495  [key=2, style=dotted];
m1_507 -> m1_505  [key=0, style=bold, color=blue];
m1_509 -> m1_510  [key=0, style=solid];
m1_509 -> m1_486  [key=2, style=dotted];
m1_510 -> m1_511  [key=0, style=solid];
m1_510 -> m1_486  [key=2, style=dotted];
m1_511 -> m1_508  [key=0, style=bold, color=blue];
m1_516 -> m1_517  [key=0, style=solid];
m1_519 -> m1_520  [key=0, style=solid];
m1_519 -> m1_521  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Options_With_Shuffled_Index_Values"];
m1_519 -> m1_522  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Options_With_Shuffled_Index_Values"];
m1_517 -> m1_518  [key=0, style=solid];
m1_517 -> m1_495  [key=2, style=dotted];
m1_518 -> m1_516  [key=0, style=bold, color=blue];
m1_520 -> m1_521  [key=0, style=solid];
m1_520 -> m1_486  [key=2, style=dotted];
m1_521 -> m1_522  [key=0, style=solid];
m1_521 -> m1_486  [key=2, style=dotted];
m1_522 -> m1_523  [key=0, style=solid];
m1_522 -> m1_486  [key=2, style=dotted];
m1_523 -> m1_519  [key=0, style=bold, color=blue];
m1_146 -> m1_147  [key=0, style=solid, color=green];
m1_123 -> m1_124  [key=0, style=solid];
m1_123 -> m1_35  [key=2, style=dotted];
m1_123 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_130 -> m1_131  [key=0, style=solid];
m1_134 -> m1_135  [key=0, style=solid];
m1_134 -> m1_47  [key=2, style=dotted];
m1_98 -> m1_99  [key=0, style=solid];
m1_98 -> m1_100  [key=2, style=dotted];
m1_98 -> m1_47  [key=2, style=dotted];
m1_98 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_97 -> m1_98  [key=0, style=solid];
m1_97 -> m1_60  [key=2, style=dotted];
m1_95 -> m1_56  [key=2, style=dotted];
m1_95 -> m1_96  [key=0, style=solid];
m1_95 -> m1_46  [key=2, style=dotted];
m1_121 -> m1_119  [key=0, style=bold, color=blue];
m1_121 -> m1_122  [key=0, style=solid];
m1_121 -> m1_100  [key=2, style=dotted];
m1_121 -> m1_125  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_120 -> m1_121  [key=0, style=solid];
m1_120 -> m1_122  [key=2, style=dotted];
m1_125 -> m1_123  [key=0, style=bold, color=blue];
m1_125 -> m1_126  [key=0, style=solid];
m1_125 -> m1_47  [key=2, style=dotted];
m1_125 -> m1_127  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_124 -> m1_125  [key=0, style=solid];
m1_124 -> m1_126  [key=2, style=dotted];
m1_124 -> m1_118  [key=2, style=dotted];
m1_124 -> m1_60  [key=2, style=dotted];
m1_132 -> m1_130  [key=0, style=bold, color=blue];
m1_132 -> m1_133  [key=0, style=solid];
m1_132 -> m1_46  [key=2, style=dotted];
m1_131 -> m1_132  [key=0, style=solid];
m1_131 -> m1_126  [key=2, style=dotted];
m1_131 -> m1_133  [key=2, style=dotted];
m1_131 -> m1_136  [key=2, style=dotted];
m1_131 -> m1_134  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_135 -> m1_136  [key=0, style=solid];
m1_135 -> m1_137  [key=2, style=dotted];
m1_135 -> m1_138  [key=2, style=dotted];
m1_135 -> m1_139  [key=2, style=dotted];
m1_135 -> m1_130  [key=0, style=bold, color=blue];
m1_140 -> m1_141  [key=0, style=solid];
m1_140 -> m1_9  [key=2, style=dotted];
m1_140 -> m1_142  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_143 -> m1_144  [key=0, style=solid];
m1_143 -> m1_137  [key=0, style=bold, color=blue];
m1_16 -> m1_17  [key=0, style=solid];
m1_16 -> m1_18  [key=2, style=dotted];
m1_16 -> m1_7  [key=2, style=dotted];
m1_16 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_16 -> m1_19  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_94 -> m1_95  [key=0, style=solid];
m1_94 -> m1_100  [key=2, style=dotted];
m1_94 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_99 -> m1_97  [key=0, style=bold, color=blue];
m1_99 -> m1_93  [key=0, style=bold, color=blue];
m1_85 -> m1_86  [key=0, style=solid];
m1_85 -> m1_87  [key=2, style=dotted];
m1_85 -> m1_88  [key=2, style=dotted];
m1_85 -> m1_89  [key=2, style=dotted];
m1_96 -> m1_94  [key=0, style=bold, color=blue];
m1_96 -> m1_97  [key=0, style=solid];
m1_96 -> m1_22  [key=2, style=dotted];
m1_96 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_142 -> m1_140  [key=0, style=bold, color=blue];
m1_142 -> m1_143  [key=0, style=solid];
m1_142 -> m1_23  [key=2, style=dotted];
m1_142 -> m1_146  [key=2, style=dotted];
m1_142 -> m1_150  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_141 -> m1_142  [key=0, style=solid];
m1_141 -> m1_23  [key=2, style=dotted];
m1_141 -> m1_145  [key=2, style=dotted];
m1_141 -> m1_147  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_145 -> m1_143  [key=0, style=bold, color=blue];
m1_11 -> m1_12  [key=0, style=solid];
m1_17 -> m1_15  [key=0, style=bold, color=blue];
m1_17 -> m1_18  [key=0, style=solid];
m1_17 -> m1_8  [key=2, style=dotted];
m1_17 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_17 -> m1_190  [key=3, color=darkorchid, style=bold, label="Parameter variable CSharpx.Maybe<System.Func<T>> factory"];
m1_28 -> m1_29  [key=0, style=solid];
m1_28 -> m1_43  [key=1, style=dashed, color=green, label=tokenizerResult];
m1_28 -> m1_57  [key=2, style=dotted];
m1_29 -> m1_30  [key=0, style=solid];
m1_29 -> m1_7  [key=2, style=dotted];
m1_29 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_29 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_29 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=tokens];
m1_30 -> m1_31  [key=0, style=solid];
m1_30 -> m1_8  [key=2, style=dotted];
m1_30 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_30 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m1_30 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=partitions];
m1_30 -> m1_58  [key=2, style=dotted];
m1_30 -> m1_97  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_32 -> m1_33  [key=0, style=solid];
m1_32 -> m1_10  [key=2, style=dotted];
m1_32 -> m1_43  [key=1, style=dashed, color=green, label=valueSpecProps];
m1_32 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_32 -> m1_61  [key=2, style=dotted];
m1_32 -> m1_60  [key=2, style=dotted];
m1_32 -> m1_105  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_32 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=valueSpecProps];
m1_31 -> m1_32  [key=0, style=solid];
m1_31 -> m1_35  [key=2, style=dotted];
m1_31 -> m1_43  [key=1, style=dashed, color=green, label=optionSpecProps];
m1_31 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_31 -> m1_59  [key=2, style=dotted];
m1_31 -> m1_60  [key=2, style=dotted];
m1_31 -> m1_101  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_31 -> m1_34  [key=1, style=dashed, color=darkseagreen4, label=optionSpecProps];
m1_33 -> m1_34  [key=0, style=solid];
m1_33 -> m1_23  [key=2, style=dotted];
m1_33 -> m1_24  [key=2, style=dotted];
m1_33 -> m1_43  [key=1, style=dashed, color=green, label=missingValueErrors];
m1_33 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=token];
m1_33 -> m1_62  [key=2, style=dotted];
m1_33 -> m1_63  [key=2, style=dotted];
m1_33 -> m1_64  [key=2, style=dotted];
m1_33 -> m1_108  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_33 -> m1_109  [key=1, style=dashed, color=darkseagreen4, label=token];
m1_34 -> m1_28  [key=0, style=bold, color=blue];
m1_34 -> m1_42  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m1_34 -> m1_38  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m1_34 -> m1_35  [key=0, style=solid];
m1_34 -> m1_65  [key=2, style=dotted];
m1_34 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=specPropsWithValue];
m1_500 -> m1_501  [key=0, style=solid];
m1_501 -> m1_502  [key=0, style=solid];
m1_502 -> m1_503  [key=0, style=solid];
m1_502 -> m1_22  [key=2, style=dotted];
m1_503 -> m1_504  [key=0, style=solid];
m1_503 -> m1_491  [key=2, style=dotted];
m1_503 -> m1_60  [key=2, style=dotted];
m1_503 -> m1_505  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_503 -> m1_508  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_504 -> m1_500  [key=0, style=bold, color=blue];
m1_137 -> m1_138  [key=0, style=solid];
m1_39 -> m1_40  [key=0, style=solid];
m1_39 -> m1_41  [key=1, style=dashed, color=darkseagreen4, label=ctor];
m1_39 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=sp];
m1_39 -> m1_69  [key=2, style=dotted];
m1_39 -> m1_70  [key=2, style=dotted];
m1_40 -> m1_41  [key=0, style=solid];
m1_40 -> m1_45  [key=2, style=dotted];
m1_40 -> m1_43  [key=1, style=dashed, color=darkseagreen4, label=expectedOptions];
m1_40 -> m1_40  [key=1, style=dashed, color=darkseagreen4, label=prms];
m1_40 -> m1_71  [key=2, style=dotted];
m1_40 -> m1_72  [key=2, style=dotted];
m1_40 -> m1_73  [key=2, style=dotted];
m1_40 -> m1_48  [key=2, style=dotted];
m1_40 -> m1_74  [key=2, style=dotted];
m1_40 -> m1_140  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_40 -> m1_143  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_41 -> m1_42  [key=0, style=solid];
m1_41 -> m1_46  [key=2, style=dotted];
m1_41 -> m1_44  [key=1, style=dashed, color=green, label=instance];
m1_41 -> m1_147  [key=1, style=dashed, color=green, label=instance];
m1_41 -> m1_45  [key=1, style=dashed, color=green, label=instance];
m1_41 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=instance];
m1_41 -> m1_75  [key=2, style=dotted];
m1_43 -> m1_44  [key=0, style=solid, color=green];
m1_43 -> m1_47  [key=2, style=dotted];
m1_43 -> m1_78  [key=2, style=dotted, color=green];
m1_43 -> m1_45  [key=1, style=dashed, color=green, label=allErrors];
m1_43 -> m1_151  [key=1, style=dashed, color=green, label=allErrors];
m1_43 -> m1_46  [key=1, style=dashed, color=green, label=allErrors];
m1_42 -> m1_43  [key=0, style=solid, color=green];
m1_42 -> m1_9  [key=2, style=dotted];
m1_42 -> m1_76  [key=2, style=dotted];
m1_42 -> m1_77  [key=2, style=dotted];
m1_44 -> m1_39  [key=0, style=bold, color=blue];
m1_44 -> m1_44  [key=3, color=green, style=bold, label="Local variable System.Func<CommandLine.ParserResult<T>> makeParsed"];
m1_44 -> m1_45  [key=0, style=solid, color=green];
m1_44 -> m1_46  [key=1, style=dashed, color=green, label=makeParsed];
m1_179 -> m1_180  [key=0, style=solid];
m1_180 -> m1_181  [key=0, style=solid];
m1_180 -> m1_7  [key=2, style=dotted];
m1_180 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_180 -> m1_183  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_181 -> m1_182  [key=0, style=solid];
m1_181 -> m1_8  [key=2, style=dotted];
m1_181 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_183 -> m1_184  [key=0, style=solid];
m1_183 -> m1_10  [key=2, style=dotted];
m1_183 -> m1_185  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_182 -> m1_183  [key=0, style=solid];
m1_182 -> m1_9  [key=2, style=dotted];
m1_184 -> m1_185  [key=0, style=solid];
m1_184 -> m1_23  [key=2, style=dotted];
m1_184 -> m1_161  [key=2, style=dotted];
m1_185 -> m1_186  [key=0, style=solid];
m1_185 -> m1_189  [key=2, style=dotted];
m1_185 -> m1_190  [key=2, style=dotted];
m1_185 -> m1_187  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_186 -> m1_187  [key=0, style=solid];
m1_186 -> m1_23  [key=2, style=dotted];
m1_186 -> m1_145  [key=2, style=dotted];
m1_186 -> m1_195  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_187 -> m1_188  [key=0, style=solid];
m1_187 -> m1_23  [key=2, style=dotted];
m1_187 -> m1_191  [key=2, style=dotted];
m1_188 -> m1_179  [key=0, style=bold, color=blue];
m1_133 -> m1_134  [key=0, style=solid];
m1_133 -> m1_9  [key=2, style=dotted];
m1_19 -> m1_20  [key=0, style=solid];
m1_19 -> m1_10  [key=2, style=dotted];
m1_19 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
m1_19 -> m1_48  [key=2, style=dotted];
m1_19 -> m1_80  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_19 -> m1_36  [key=1, style=dashed, color=darkseagreen4, label=typeInfo];
m1_20 -> m1_21  [key=0, style=solid];
m1_20 -> m1_23  [key=2, style=dotted];
m1_20 -> m1_24  [key=2, style=dotted];
m1_20 -> m1_31  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m1_20 -> m1_32  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m1_20 -> m1_49  [key=2, style=dotted];
m1_20 -> m1_84  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_20 -> m1_91  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m1_20 -> m1_39  [key=1, style=dashed, color=darkseagreen4, label=specProps];
m1_21 -> m1_15  [key=0, style=bold, color=blue];
m1_21 -> m1_22  [key=0, style=solid];
m1_21 -> m1_21  [key=1, style=dashed, color=darkseagreen4, label=pt];
m1_66 -> m1_61  [key=0, style=bold, color=blue];
m1_139 -> m1_140  [key=0, style=solid];
m1_139 -> m1_46  [key=2, style=dotted];
m1_62 -> m1_63  [key=0, style=solid];
m1_62 -> m1_67  [key=2, style=dotted];
m1_62 -> m1_65  [key=1, style=dashed, color=red, label=expectedOptions];
m1_65 -> m1_66  [key=0, style=solid, color=red];
m1_65 -> m1_47  [key=2, style=dotted, color=red];
m1_478 -> m1_479  [key=0, style=solid];
m1_479 -> m1_480  [key=0, style=solid];
m1_479 -> m1_46  [key=2, style=dotted];
m1_480 -> m1_481  [key=0, style=solid];
m1_480 -> m1_482  [key=2, style=dotted];
m1_480 -> m1_9  [key=2, style=dotted];
m1_480 -> m1_399  [key=2, style=dotted];
m1_480 -> m1_483  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_481 -> m1_478  [key=0, style=bold, color=blue];
m1_126 -> m1_120  [key=0, style=bold, color=blue];
m1_165 -> m1_166  [key=0, style=solid];
m1_166 -> m1_167  [key=0, style=solid];
m1_166 -> m1_172  [key=2, style=dotted];
m1_166 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_166 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_167 -> m1_168  [key=0, style=solid];
m1_167 -> m1_46  [key=2, style=dotted];
m1_170 -> m1_171  [key=0, style=solid];
m1_170 -> m1_23  [key=2, style=dotted];
m1_170 -> m1_146  [key=2, style=dotted];
m1_170 -> m1_176  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_168 -> m1_169  [key=0, style=solid];
m1_168 -> m1_9  [key=2, style=dotted];
m1_168 -> m1_170  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_169 -> m1_170  [key=0, style=solid];
m1_169 -> m1_23  [key=2, style=dotted];
m1_169 -> m1_145  [key=2, style=dotted];
m1_169 -> m1_173  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_171 -> m1_165  [key=0, style=bold, color=blue];
m1_251 -> m1_252  [key=0, style=solid];
m1_252 -> m1_253  [key=0, style=solid];
m1_252 -> m1_7  [key=2, style=dotted];
m1_252 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_252 -> m1_255  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_253 -> m1_254  [key=0, style=solid];
m1_253 -> m1_8  [key=2, style=dotted];
m1_253 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_255 -> m1_256  [key=0, style=solid];
m1_255 -> m1_10  [key=2, style=dotted];
m1_254 -> m1_255  [key=0, style=solid];
m1_254 -> m1_9  [key=2, style=dotted];
m1_256 -> m1_257  [key=0, style=solid];
m1_256 -> m1_189  [key=2, style=dotted];
m1_256 -> m1_190  [key=2, style=dotted];
m1_256 -> m1_258  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_259  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_260  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_261  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_262  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_263  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_264  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_265  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_256 -> m1_266  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_257 -> m1_258  [key=0, style=solid];
m1_257 -> m1_23  [key=2, style=dotted];
m1_257 -> m1_191  [key=2, style=dotted];
m1_258 -> m1_259  [key=0, style=solid];
m1_258 -> m1_47  [key=2, style=dotted];
m1_259 -> m1_260  [key=0, style=solid];
m1_259 -> m1_47  [key=2, style=dotted];
m1_260 -> m1_261  [key=0, style=solid];
m1_260 -> m1_47  [key=2, style=dotted];
m1_261 -> m1_262  [key=0, style=solid];
m1_261 -> m1_47  [key=2, style=dotted];
m1_262 -> m1_263  [key=0, style=solid];
m1_262 -> m1_47  [key=2, style=dotted];
m1_263 -> m1_264  [key=0, style=solid];
m1_263 -> m1_47  [key=2, style=dotted];
m1_264 -> m1_265  [key=0, style=solid];
m1_264 -> m1_47  [key=2, style=dotted];
m1_265 -> m1_266  [key=0, style=solid];
m1_265 -> m1_47  [key=2, style=dotted];
m1_266 -> m1_267  [key=0, style=solid];
m1_266 -> m1_47  [key=2, style=dotted];
m1_267 -> m1_251  [key=0, style=bold, color=blue];
m1_45 -> m1_45  [key=3, color=green, style=bold, label="Local variable System.Func<CommandLine.ParserResult<T>> makeNotParsed"];
m1_45 -> m1_46  [key=0, style=solid, color=green];
m1_46 -> m1_47  [key=0, style=solid];
m1_46 -> m1_79  [key=2, style=dotted];
m1_46 -> m1_56  [key=2, style=dotted];
m1_24 -> m1_28  [key=0, style=solid];
m1_24 -> m1_25  [key=0, style=solid];
m1_24 -> m1_52  [key=2, style=dotted];
m1_22 -> m1_28  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m1_22 -> m1_33  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m1_22 -> m1_23  [key=0, style=solid];
m1_22 -> m1_50  [key=2, style=dotted];
m1_22 -> m1_51  [key=2, style=dotted];
m1_22 -> m1_30  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m1_22 -> m1_98  [key=1, style=dashed, color=darkseagreen4, label=optionSpecs];
m1_23 -> m1_24  [key=0, style=solid];
m1_23 -> m1_23  [key=3, color=darkorchid, style=bold, label="Local variable System.Func<T> makeDefault"];
m1_23 -> m1_27  [key=1, style=dashed, color=darkseagreen4, label=makeDefault];
m1_418 -> m1_419  [key=0, style=solid];
m1_419 -> m1_420  [key=0, style=solid];
m1_419 -> m1_7  [key=2, style=dotted];
m1_419 -> m1_436  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_419 -> m1_422  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_420 -> m1_421  [key=0, style=solid];
m1_420 -> m1_8  [key=2, style=dotted];
m1_420 -> m1_436  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_422 -> m1_423  [key=0, style=solid];
m1_422 -> m1_10  [key=2, style=dotted];
m1_421 -> m1_422  [key=0, style=solid];
m1_421 -> m1_35  [key=2, style=dotted];
m1_423 -> m1_424  [key=0, style=solid];
m1_423 -> m1_189  [key=2, style=dotted];
m1_423 -> m1_190  [key=2, style=dotted];
m1_423 -> m1_425  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_426  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_427  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_428  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_429  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_430  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_431  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_432  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_423 -> m1_433  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_424 -> m1_425  [key=0, style=solid];
m1_424 -> m1_23  [key=2, style=dotted];
m1_424 -> m1_191  [key=2, style=dotted];
m1_425 -> m1_426  [key=0, style=solid];
m1_425 -> m1_47  [key=2, style=dotted];
m1_426 -> m1_427  [key=0, style=solid];
m1_426 -> m1_47  [key=2, style=dotted];
m1_427 -> m1_428  [key=0, style=solid];
m1_427 -> m1_47  [key=2, style=dotted];
m1_428 -> m1_429  [key=0, style=solid];
m1_428 -> m1_47  [key=2, style=dotted];
m1_429 -> m1_430  [key=0, style=solid];
m1_429 -> m1_47  [key=2, style=dotted];
m1_430 -> m1_431  [key=0, style=solid];
m1_430 -> m1_47  [key=2, style=dotted];
m1_431 -> m1_432  [key=0, style=solid];
m1_431 -> m1_47  [key=2, style=dotted];
m1_432 -> m1_433  [key=0, style=solid];
m1_432 -> m1_47  [key=2, style=dotted];
m1_433 -> m1_434  [key=0, style=solid];
m1_433 -> m1_47  [key=2, style=dotted];
m1_434 -> m1_418  [key=0, style=bold, color=blue];
m1_375 -> m1_376  [key=0, style=solid];
m1_376 -> m1_377  [key=0, style=solid];
m1_376 -> m1_7  [key=2, style=dotted];
m1_376 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_376 -> m1_379  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_377 -> m1_378  [key=0, style=solid];
m1_377 -> m1_8  [key=2, style=dotted];
m1_377 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_379 -> m1_380  [key=0, style=solid];
m1_379 -> m1_10  [key=2, style=dotted];
m1_378 -> m1_379  [key=0, style=solid];
m1_378 -> m1_35  [key=2, style=dotted];
m1_380 -> m1_381  [key=0, style=solid];
m1_380 -> m1_189  [key=2, style=dotted];
m1_380 -> m1_190  [key=2, style=dotted];
m1_380 -> m1_382  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_380 -> m1_383  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_380 -> m1_384  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_380 -> m1_385  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_380 -> m1_386  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_380 -> m1_387  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_380 -> m1_388  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_381 -> m1_382  [key=0, style=solid];
m1_381 -> m1_23  [key=2, style=dotted];
m1_381 -> m1_191  [key=2, style=dotted];
m1_382 -> m1_383  [key=0, style=solid];
m1_382 -> m1_47  [key=2, style=dotted];
m1_383 -> m1_384  [key=0, style=solid];
m1_383 -> m1_47  [key=2, style=dotted];
m1_384 -> m1_385  [key=0, style=solid];
m1_384 -> m1_47  [key=2, style=dotted];
m1_385 -> m1_386  [key=0, style=solid];
m1_385 -> m1_47  [key=2, style=dotted];
m1_386 -> m1_387  [key=0, style=solid];
m1_386 -> m1_47  [key=2, style=dotted];
m1_387 -> m1_388  [key=0, style=solid];
m1_387 -> m1_47  [key=2, style=dotted];
m1_388 -> m1_389  [key=0, style=solid];
m1_388 -> m1_47  [key=2, style=dotted];
m1_389 -> m1_375  [key=0, style=bold, color=blue];
m1_198 -> m1_199  [key=0, style=solid];
m1_199 -> m1_200  [key=0, style=solid];
m1_199 -> m1_7  [key=2, style=dotted];
m1_199 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_199 -> m1_202  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_200 -> m1_201  [key=0, style=solid];
m1_200 -> m1_8  [key=2, style=dotted];
m1_200 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_202 -> m1_203  [key=0, style=solid];
m1_202 -> m1_10  [key=2, style=dotted];
m1_202 -> m1_204  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_201 -> m1_202  [key=0, style=solid];
m1_201 -> m1_35  [key=2, style=dotted];
m1_203 -> m1_204  [key=0, style=solid];
m1_203 -> m1_23  [key=2, style=dotted];
m1_203 -> m1_161  [key=2, style=dotted];
m1_204 -> m1_205  [key=0, style=solid];
m1_204 -> m1_189  [key=2, style=dotted];
m1_204 -> m1_190  [key=2, style=dotted];
m1_204 -> m1_206  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_204 -> m1_207  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_204 -> m1_208  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_204 -> m1_209  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_204 -> m1_210  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_204 -> m1_211  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_204 -> m1_212  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_204 -> m1_213  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_205 -> m1_206  [key=0, style=solid];
m1_205 -> m1_23  [key=2, style=dotted];
m1_205 -> m1_191  [key=2, style=dotted];
m1_206 -> m1_207  [key=0, style=solid];
m1_206 -> m1_47  [key=2, style=dotted];
m1_207 -> m1_208  [key=0, style=solid];
m1_207 -> m1_47  [key=2, style=dotted];
m1_208 -> m1_209  [key=0, style=solid];
m1_208 -> m1_47  [key=2, style=dotted];
m1_209 -> m1_210  [key=0, style=solid];
m1_209 -> m1_47  [key=2, style=dotted];
m1_210 -> m1_211  [key=0, style=solid];
m1_210 -> m1_47  [key=2, style=dotted];
m1_211 -> m1_212  [key=0, style=solid];
m1_211 -> m1_47  [key=2, style=dotted];
m1_212 -> m1_213  [key=0, style=solid];
m1_212 -> m1_47  [key=2, style=dotted];
m1_213 -> m1_214  [key=0, style=solid];
m1_213 -> m1_47  [key=2, style=dotted];
m1_214 -> m1_198  [key=0, style=bold, color=blue];
m1_281 -> m1_282  [key=0, style=solid];
m1_282 -> m1_283  [key=0, style=solid];
m1_282 -> m1_7  [key=2, style=dotted];
m1_282 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_282 -> m1_285  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_283 -> m1_284  [key=0, style=solid];
m1_283 -> m1_8  [key=2, style=dotted];
m1_283 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_285 -> m1_286  [key=0, style=solid];
m1_285 -> m1_10  [key=2, style=dotted];
m1_284 -> m1_285  [key=0, style=solid];
m1_284 -> m1_35  [key=2, style=dotted];
m1_286 -> m1_287  [key=0, style=solid];
m1_286 -> m1_189  [key=2, style=dotted];
m1_286 -> m1_190  [key=2, style=dotted];
m1_286 -> m1_288  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_289  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_290  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_291  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_292  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_293  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_294  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_295  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_296  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_297  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_298  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_299  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_300  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_301  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_302  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_286 -> m1_303  [key=1, style=dashed, color=darkseagreen4, label=lines];
m1_287 -> m1_288  [key=0, style=solid];
m1_287 -> m1_23  [key=2, style=dotted];
m1_287 -> m1_191  [key=2, style=dotted];
m1_288 -> m1_289  [key=0, style=solid];
m1_288 -> m1_47  [key=2, style=dotted];
m1_289 -> m1_290  [key=0, style=solid];
m1_289 -> m1_47  [key=2, style=dotted];
m1_290 -> m1_291  [key=0, style=solid];
m1_290 -> m1_47  [key=2, style=dotted];
m1_291 -> m1_292  [key=0, style=solid];
m1_291 -> m1_47  [key=2, style=dotted];
m1_292 -> m1_293  [key=0, style=solid];
m1_292 -> m1_47  [key=2, style=dotted];
m1_293 -> m1_294  [key=0, style=solid];
m1_293 -> m1_47  [key=2, style=dotted];
m1_294 -> m1_295  [key=0, style=solid];
m1_294 -> m1_47  [key=2, style=dotted];
m1_295 -> m1_296  [key=0, style=solid];
m1_295 -> m1_47  [key=2, style=dotted];
m1_296 -> m1_297  [key=0, style=solid];
m1_296 -> m1_47  [key=2, style=dotted];
m1_297 -> m1_298  [key=0, style=solid];
m1_297 -> m1_47  [key=2, style=dotted];
m1_298 -> m1_299  [key=0, style=solid];
m1_298 -> m1_47  [key=2, style=dotted];
m1_299 -> m1_300  [key=0, style=solid];
m1_299 -> m1_47  [key=2, style=dotted];
m1_300 -> m1_301  [key=0, style=solid];
m1_300 -> m1_47  [key=2, style=dotted];
m1_301 -> m1_302  [key=0, style=solid];
m1_301 -> m1_47  [key=2, style=dotted];
m1_302 -> m1_303  [key=0, style=solid];
m1_302 -> m1_47  [key=2, style=dotted];
m1_303 -> m1_304  [key=0, style=solid];
m1_303 -> m1_47  [key=2, style=dotted];
m1_304 -> m1_281  [key=0, style=bold, color=blue];
m1_406 -> m1_407  [key=0, style=solid];
m1_406 -> m1_408  [key=1, style=dashed, color=darkseagreen4, label="string[]"];
m1_406 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m1_406 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m1_407 -> m1_408  [key=0, style=solid];
m1_407 -> m1_8  [key=2, style=dotted];
m1_407 -> m1_413  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_408 -> m1_409  [key=0, style=solid];
m1_408 -> m1_35  [key=2, style=dotted];
m1_408 -> m1_410  [key=1, style=dashed, color=darkseagreen4, label=result];
m1_410 -> m1_411  [key=0, style=solid];
m1_410 -> m1_399  [key=2, style=dotted];
m1_410 -> m1_415  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_409 -> m1_410  [key=0, style=solid];
m1_409 -> m1_47  [key=2, style=dotted];
m1_411 -> m1_406  [key=0, style=bold, color=blue];
m1_271 -> m1_272  [key=0, style=solid];
m1_272 -> m1_273  [key=0, style=solid];
m1_272 -> m1_7  [key=2, style=dotted];
m1_272 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_272 -> m1_275  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_273 -> m1_274  [key=0, style=solid];
m1_273 -> m1_8  [key=2, style=dotted];
m1_273 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.ParserSettings"];
m1_275 -> m1_276  [key=0, style=solid];
m1_275 -> m1_10  [key=2, style=dotted];
m1_274 -> m1_275  [key=0, style=solid];
m1_274 -> m1_35  [key=2, style=dotted];
m1_276 -> m1_277  [key=0, style=solid];
m1_276 -> m1_23  [key=2, style=dotted];
m1_276 -> m1_161  [key=2, style=dotted];
m1_277 -> m1_271  [key=0, style=bold, color=blue];
m1_438 -> m1_439  [key=0, style=solid];
m1_439 -> m1_440  [key=0, style=solid];
m1_439 -> m1_444  [key=2, style=dotted];
m1_439 -> m1_445  [key=2, style=dotted];
m1_439 -> m1_442  [key=1, style=dashed, color=darkseagreen4, label=expectedResult];
m1_440 -> m1_441  [key=0, style=solid];
m1_440 -> m1_46  [key=2, style=dotted];
m1_442 -> m1_443  [key=0, style=solid];
m1_442 -> m1_47  [key=2, style=dotted];
m1_441 -> m1_442  [key=0, style=solid];
m1_441 -> m1_9  [key=2, style=dotted];
m1_443 -> m1_438  [key=0, style=bold, color=blue];
m1_487 -> m1_488  [key=0, style=solid];
m1_488 -> m1_489  [key=0, style=solid];
m1_489 -> m1_490  [key=0, style=solid];
m1_489 -> m1_9  [key=2, style=dotted];
m1_489 -> m1_491  [key=2, style=dotted];
m1_489 -> m1_399  [key=2, style=dotted];
m1_489 -> m1_492  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_489 -> m1_496  [key=1, style=dashed, color=darkseagreen4, label="lambda expression"];
m1_490 -> m1_487  [key=0, style=bold, color=blue];
m1_524 -> m1_13  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_525 -> m1_26  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_526 -> m1_37  [key=1, style=dashed, color=darkseagreen4, label=writer];
m1_527 -> m1_151  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_528 -> m1_163  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_529 -> m1_177  [key=1, style=dashed, color=darkseagreen4, label=expectedError];
m1_530 -> m1_193  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_531 -> m1_216  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_532 -> m1_233  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_533 -> m1_246  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_534 -> m1_269  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_535 -> m1_279  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_536 -> m1_306  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_537 -> m1_324  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_538 -> m1_339  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_539 -> m1_354  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_540 -> m1_370  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_541 -> m1_391  [key=1, style=dashed, color=darkseagreen4, label=help];
m1_542 -> m1_404  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Simple_Options"];
m1_543 -> m1_416  [key=1, style=dashed, color=darkseagreen4, label="CommandLine.Tests.Fakes.Commit_Verb"];
m1_544 -> m1_436  [key=1, style=dashed, color=darkseagreen4, label=help];
}
