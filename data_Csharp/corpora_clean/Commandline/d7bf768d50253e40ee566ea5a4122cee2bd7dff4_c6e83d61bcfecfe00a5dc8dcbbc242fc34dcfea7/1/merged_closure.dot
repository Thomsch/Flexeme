digraph  {
d2 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", color=green, community=0, label="var specs = new[] { new OptionSpecification(string.Empty, ''string-seq'',\r\n                false, string.Empty, Maybe.Nothing<int>(), Maybe.Nothing<int>(), '.', null, typeof(IEnumerable<string>), string.Empty, string.Empty, new List<string>())}", prediction=0, span="18-19"];
d1 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", label="var expected = Maybe.Just(''.'')", span="17-17"];
d3 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", label="var result = NameLookup.WithSeparator(''string-seq'', specs, StringComparer.InvariantCulture)", span="22-22"];
d7 [cluster="CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", label="Entry CommandLine.Core.OptionSpecification.OptionSpecification(string, string, bool, string, CommandLine.Infrastructure.Maybe<int>, CommandLine.Infrastructure.Maybe<int>, char, CommandLine.Infrastructure.Maybe<object>, System.Type, string, string, System.Collections.Generic.IEnumerable<string>)", span="17-17"];
d8 [cluster="CommandLine.Infrastructure.Maybe.Nothing<T>()", label="Entry CommandLine.Infrastructure.Maybe.Nothing<T>()", span="63-63"];
d9 [cluster="System.Collections.Generic.List<T>.List()", label="Entry System.Collections.Generic.List<T>.List()", span="0-0"];
d0 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", label="Entry CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
d6 [cluster="CommandLine.Infrastructure.Maybe.Just<T>(T)", label="Entry CommandLine.Infrastructure.Maybe.Just<T>(T)", span="68-68"];
d4 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", label="expected.ShouldBeEquivalentTo(result)", span="25-25"];
d10 [cluster="CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", label="Entry CommandLine.Core.NameLookup.WithSeparator(string, System.Collections.Generic.IEnumerable<CommandLine.Core.OptionSpecification>, System.StringComparer)", span="16-16"];
d5 [cluster="CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", label="Exit CommandLine.Tests.Unit.Core.NameLookupTests.Lookup_name_of_sequence_option_with_separator()", span="14-14"];
d11 [cluster="Unk.ShouldBeEquivalentTo", label="Entry Unk.ShouldBeEquivalentTo", span=""];
m1_50 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_51 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", color=green, community=0, file="SpecificationExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", prediction=1, span="97-100"];
m1_52 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="104-104"];
m1_53 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="105-105"];
m1_54 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="106-106"];
m1_55 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here.'')", span="107-107"];
m1_56 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="108-108"];
m1_57 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--version        Display version information.'')", span="109-109"];
m1_58 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''post-options'')", span="110-110"];
m1_59 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_disabled()", span="93-93"];
m1_16 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="SpecificationExtensions.cs", label="return spec => spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1;", span="29-29"];
m1_126 [cluster="CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.HelpText.RenderParsingErrorsText<T>(CommandLine.ParserResult<T>, System.Func<CommandLine.Error, string>, System.Func<System.Collections.Generic.IEnumerable<CommandLine.MutuallyExclusiveSetError>, string>, int)", span="403-403"];
m1_22 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m1_23 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", color=green, community=0, file="SpecificationExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptions>(TypeInfo.Create(typeof(FakeOptions)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", prediction=2, span="50-53"];
m1_24 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="57-57"];
m1_25 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="58-58"];
m1_26 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="59-59"];
m1_27 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="60-60"];
m1_28 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="61-61"];
m1_29 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="62-62"];
m1_30 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", span="63-63"];
m1_31 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''value pos. 0     Define a long value here.'')", span="64-64"];
m1_32 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''post-options'')", span="65-65"];
m1_33 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options()", span="46-46"];
m1_66 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m1_69 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescription>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescription)),\r\n                    Enumerable.Empty<Error>()))", span="137-140"];
m1_70 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="var lines = sut.ToString().Split(new[] { Environment.NewLine }, StringSplitOptions.None)", span="143-143"];
m1_71 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''  v, verbose    This is the description'')", span="144-144"];
m1_72 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''                of the verbosity to '')", span="146-146"];
m1_73 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''                test out the wrapping '')", span="147-147"];
m1_74 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''                capabilities of the '')", span="148-148"];
m1_75 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''                Help Text.'')", span="149-149"];
m1_67 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="135-135"];
m1_68 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="sut.MaximumDisplayWidth = 40", span="136-136"];
m1_76 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_help_text_is_longer_than_width_it_will_wrap_around_as_if_in_a_column()", span="131-131"];
m1_217 [cluster="CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.HelpText.RenderUsageText<T>(CommandLine.ParserResult<T>)", span="439-439"];
m1_78 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m1_81 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="sut.AddOptions(\r\n                new NotParsed<FakeOptionsWithLongDescriptionAndNoSpaces>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithLongDescriptionAndNoSpaces)),\r\n                    Enumerable.Empty<Error>()))", span="160-163"];
m1_82 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="166-166"];
m1_83 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''  v, verbose    Before '')", span="167-167"];
m1_84 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="168-168"];
m1_85 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''                After'')", span="169-169"];
m1_86 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''  input-file    Before '')", span="170-170"];
m1_87 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''                012345678901234567890123'')", span="171-171"];
m1_88 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''                456789 After'')", span="172-172"];
m1_79 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="var sut = new HelpText(new HeadingInfo(''CommandLine.Tests.dll'', ''1.9.4.131''))", span="158-158"];
m1_80 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="sut.MaximumDisplayWidth = 40", span="159-159"];
m1_89 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_help_text_without_spaces()", span="154-154"];
m1_116 [cluster="CommandLine.BadFormatTokenError.BadFormatTokenError(string)", file="SpecificationExtensions.cs", label="Entry CommandLine.BadFormatTokenError.BadFormatTokenError(string)", span="196-196"];
m1_192 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342"];
m1_193 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextValue>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextValue)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", span="346-349"];
m1_194 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="353-353"];
m1_195 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", span="354-354"];
m1_196 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue=STR            Define a string value here.'')", span="355-355"];
m1_197 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''-i INTSEQ                    Define a int sequence here.'')", span="356-356"];
m1_198 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''-x                           Define a boolean or switch value here.'')", span="357-357"];
m1_199 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--help                       Display this help screen.'')", span="358-358"];
m1_200 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--version                    Display version information.'')", span="359-359"];
m1_201 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''number (pos. 0) NUM          Define a long value here.'')", span="360-360"];
m1_202 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''paintcolor (pos. 1) COLOR    Define a color value here.'')", span="361-361"];
m1_203 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="lines[8].ShouldBeEquivalentTo(''post-options'', lines[8])", span="362-362"];
m1_204 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_options_and_values()", span="342-342"];
m1_149 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m1_150 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var fakeResult = new NotParsed<FakeOptions>(\r\n                TypeInfo.Create(typeof(FakeOptions)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new SequenceOutOfRangeError(new NameInfo(''i'', ''''))\r\n                    })", span="263-269"];
m1_152 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="275-275"];
m1_155 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''ERROR(S):'')", span="278-278"];
m1_156 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''Token 'badtoken' is not recognized.'')", span="279-279"];
m1_157 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''A sequence option 'i' is defined with fewer or more items than required.'')", span="280-280"];
m1_158 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", span="281-281"];
m1_159 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''-i               Define a int sequence here.'')", span="282-282"];
m1_160 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[7].ShouldBeEquivalentTo(''-x               Define a boolean or switch value here.'')", span="283-283"];
m1_161 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[8].ShouldBeEquivalentTo(''--help           Display this help screen.'')", span="284-284"];
m1_151 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="272-272"];
m1_153 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="276-276"];
m1_154 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="277-277"];
m1_162 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Options_returns_appropriate_formatted_text()", span="260-260"];
m1_77 [cluster="string.Split(string[], System.StringSplitOptions)", file="SpecificationExtensions.cs", label="Entry string.Split(string[], System.StringSplitOptions)", span="0-0"];
m1_39 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m1_40 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="var sut = new HelpText { AddDashesToOption = true, AddEnumValuesToHelpText = true }\r\n                .AddPreOptionsLine(''pre-options'')\r\n                .AddOptions(new NotParsed<FakeOptionsWithHelpTextEnum>(TypeInfo.Create(typeof(FakeOptionsWithHelpTextEnum)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''post-options'')", prediction=3, span="74-77"];
m1_41 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", prediction=4, span="81-81"];
m1_42 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''pre-options'')", prediction=5, span="82-82"];
m1_43 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''--stringvalue    Define a string value here.'')", prediction=4, span="83-83"];
m1_44 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''--shape          Define a enum value here. Valid values: Circle, Square,'')", span="84-84"];
m1_45 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''Triangle'')", prediction=4, span="85-85"];
m1_46 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--help           Display this help screen.'')", prediction=4, span="86-86"];
m1_47 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--version        Display version information.'')", prediction=4, span="87-87"];
m1_48 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", color=green, community=0, file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''post-options'')", prediction=4, span="88-88"];
m1_49 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_with_enum_options_enabled()", span="70-70"];
m1_177 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315"];
m1_179 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance),\r\n                    verbTypes),\r\n                new Error[] { new HelpVerbRequestedError(null, null, false) })", span="320-323"];
m1_178 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var verbTypes = Enumerable.Empty<Type>().Concat(\r\n                new[] { typeof(AddOptions), typeof(CommitOptions), typeof(CloneOptions) })", span="318-319"];
m1_181 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="329-329"];
m1_184 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''add        Add file contents to the index.'')", span="333-333"];
m1_185 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''commit     Record changes to the repository.'')", span="334-334"];
m1_186 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''clone      Clone a repository into a new directory.'')", span="335-335"];
m1_187 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''help       Display more information on a specific command.'')", span="336-336"];
m1_188 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''version    Display version information.'')", span="337-337"];
m1_180 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="326-326"];
m1_182 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="331-331"];
m1_183 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="332-332"];
m1_189 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_unknown_verb_returns_appropriate_formatted_text()", span="315-315"];
m1_90 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m1_93 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="sut.AddPreOptionsLine(''Before 0123456789012345678901234567890123456789012 After'')\r\n                .AddOptions(new NotParsed<FakeOptionsForHelp>(TypeInfo.Create(typeof(FakeOptionsForHelp)), Enumerable.Empty<Error>()))\r\n                .AddPostOptionsLine(''Before 0123456789012345678901234567890123456789 After'')", span="183-185"];
m1_94 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines()", span="188-188"];
m1_95 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''Before '')", span="189-189"];
m1_96 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="190-190"];
m1_97 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''012 After'')", span="191-191"];
m1_98 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="lines[lines.Length - 3].ShouldBeEquivalentTo(''Before '')", span="192-192"];
m1_99 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="lines[lines.Length - 2].ShouldBeEquivalentTo(''0123456789012345678901234567890123456789'')", span="193-193"];
m1_100 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="lines[lines.Length - 1].ShouldBeEquivalentTo('' After'')", span="194-194"];
m1_91 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="var sut = new HelpText(''Heading Info.'')", span="181-181"];
m1_92 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="sut.MaximumDisplayWidth = 40", span="182-182"];
m1_101 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Long_pre_and_post_lines_without_spaces()", span="177-177"];
m1_120 [cluster="CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", file="SpecificationExtensions.cs", label="Entry CommandLine.MissingRequiredOptionError.MissingRequiredOptionError(CommandLine.NameInfo)", span="291-291"];
m1_0 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m1_1 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="SpecificationExtensions.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Scalar && (spec.Min > 0 || spec.Max > 0);", span="18-18"];
m1_2 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstScalarWithRange()", span="16-16"];
m1_145 [cluster="System.InvalidOperationException.InvalidOperationException()", file="SpecificationExtensions.cs", label="Entry System.InvalidOperationException.InvalidOperationException()", span="0-0"];
m1_36 [cluster="System.Linq.Enumerable.Empty<TResult>()", file="SpecificationExtensions.cs", label="Entry System.Linq.Enumerable.Empty<TResult>()", span="0-0"];
m1_38 [cluster="System.Collections.Generic.IEnumerable<string>.TrimStringArray()", file="SpecificationExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<string>.TrimStringArray()", span="15-15"];
m1_34 [cluster="CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", file="SpecificationExtensions.cs", label="Entry CommandLine.NotParsed<T>.NotParsed(CommandLine.TypeInfo, System.Collections.Generic.IEnumerable<CommandLine.Error>)", span="163-163"];
m1_123 [cluster="CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", file="SpecificationExtensions.cs", label="Entry CommandLine.BadVerbSelectedError.BadVerbSelectedError(string)", span="357-357"];
m1_3 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="18-18"];
m1_60 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_61 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationExtensions.cs", label="var sut =\r\n                new HelpText(''Meta Value.'').AddOptions(\r\n                    new NotParsed<FakeOptionsWithMetaValue>(TypeInfo.Create(typeof(FakeOptionsWithMetaValue)), Enumerable.Empty<Error>()))", span="119-121"];
m1_62 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationExtensions.cs", label="var lines = sut.ToString().ToNotEmptyLines().TrimStringArray()", span="124-124"];
m1_63 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''i FILE, input-file=FILE    Required. Specify input FILE to be processed.'')", span="126-126"];
m1_64 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.When_defined_MetaValue_should_be_rendered()", span="115-115"];
m1_19 [cluster="lambda expression", file="SpecificationExtensions.cs", label="spec.IsOption() && ((OptionSpecification)spec).LongName.Length == 1", span="29-29"];
m1_205 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="367-367"];
m1_206 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="ParserResult<FakeOptionsWithUsageText> result =\r\n                new NotParsed<FakeOptionsWithUsageText>(\r\n                    TypeInfo.Create(typeof(FakeOptionsWithUsageText)), Enumerable.Empty<Error>())", span="370-372"];
m1_208 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="var lines = text.ToNotEmptyLines()", span="378-378"];
m1_209 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''Normal scenario:'')", span="381-381"];
m1_210 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''  mono testapp.exe --input file.bin --output out.bin'')", span="382-382"];
m1_211 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''Logging warnings:'')", span="383-383"];
m1_212 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="384-384"];
m1_213 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''Logging errors:'')", span="385-385"];
m1_214 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''  mono testapp.exe -w --input file.bin'')", span="386-386"];
m1_215 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''  mono testapp.exe --input=file.bin --warns'')", span="387-387"];
m1_207 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="var text = HelpText.RenderUsageText(result)", span="375-375"];
m1_216 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.RenderUsageText_returns_properly_formatted_text()", span="367-367"];
m1_125 [cluster="CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", file="SpecificationExtensions.cs", label="Entry CommandLine.HelpVerbRequestedError.HelpVerbRequestedError(string, System.Type, bool)", span="383-383"];
m1_121 [cluster="CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", file="SpecificationExtensions.cs", label="Entry CommandLine.SequenceOutOfRangeError.SequenceOutOfRangeError(CommandLine.NameInfo)", span="335-335"];
m1_37 [cluster="CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.HelpText.AddOptions<T>(CommandLine.ParserResult<T>)", span="336-336"];
m1_127 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Entry lambda expression", span="218-239"];
m1_4 [cluster="CommandLine.Text.HelpText.ToString()", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.HelpText.ToString()", span="496-496"];
m1_5 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="18-18"];
m1_11 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''pre-options line 1'')", span="38-38"];
m1_10 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''Copyright (C) 2005 - 2013 Author'')", span="37-37"];
m1_12 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''pre-options line 2'')", span="39-39"];
m1_18 [cluster="CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.CopyrightInfo.CopyrightInfo(bool, string, params int[])", span="60-60"];
m1_20 [cluster="CommandLine.Text.HelpText.AddPostOptionsLine(string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.HelpText.AddPostOptionsLine(string)", span="326-326"];
m1_128 [cluster="lambda expression", file="SpecificationExtensions.cs", label="err.Tag", span="220-220"];
m1_130 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return ''ERR '' + ((BadFormatTokenError)err).Token;", span="223-223"];
m1_132 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;", span="225-225"];
m1_134 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return ''ERR '' + ((UnknownOptionError)err).Token;", span="227-227"];
m1_136 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;", span="229-229"];
m1_138 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;", span="231-231"];
m1_142 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return ''ERR '' + ((BadVerbSelectedError)err).Token;", span="235-235"];
m1_129 [cluster="lambda expression", file="SpecificationExtensions.cs", label="ErrorType.BadFormatTokenError", span="222-222"];
m1_131 [cluster="lambda expression", file="SpecificationExtensions.cs", label="ErrorType.MissingValueOptionError", span="224-224"];
m1_133 [cluster="lambda expression", file="SpecificationExtensions.cs", label="ErrorType.UnknownOptionError", span="226-226"];
m1_135 [cluster="lambda expression", file="SpecificationExtensions.cs", label="ErrorType.MissingRequiredOptionError", span="228-228"];
m1_137 [cluster="lambda expression", file="SpecificationExtensions.cs", label="ErrorType.SequenceOutOfRangeError", span="230-230"];
m1_139 [cluster="lambda expression", file="SpecificationExtensions.cs", label="ErrorType.NoVerbSelectedError", span="232-232"];
m1_141 [cluster="lambda expression", file="SpecificationExtensions.cs", label="ErrorType.BadVerbSelectedError", span="234-234"];
m1_143 [cluster="lambda expression", file="SpecificationExtensions.cs", label="throw new InvalidOperationException();", span="237-237"];
m1_140 [cluster="lambda expression", file="SpecificationExtensions.cs", label="return ''ERR no-verb-selected'';", span="233-233"];
m1_144 [cluster="lambda expression", file="SpecificationExtensions.cs", label="Exit lambda expression", span="218-239"];
m1_191 [cluster="CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", file="SpecificationExtensions.cs", label="Entry CommandLine.TypeInfo.Create(System.Type, System.Collections.Generic.IEnumerable<System.Type>)", span="34-34"];
m1_35 [cluster="CommandLine.TypeInfo.Create(System.Type)", file="SpecificationExtensions.cs", label="Entry CommandLine.TypeInfo.Create(System.Type)", span="29-29"];
m1_65 [cluster="CommandLine.Text.HelpText.HelpText(string)", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.HelpText.HelpText(string)", span="59-59"];
m1_117 [cluster="CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", file="SpecificationExtensions.cs", label="Entry CommandLine.MissingValueOptionError.MissingValueOptionError(CommandLine.NameInfo)", span="269-269"];
m1_164 [cluster="Unk.Should", file="SpecificationExtensions.cs", label="Entry Unk.Should", span=""];
m1_13 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''post-options line 1'')", span="40-40"];
m1_165 [cluster="Unk.StartWithEquivalent", file="SpecificationExtensions.cs", label="Entry Unk.StartWithEquivalent", span=""];
m1_163 [cluster="CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", file="SpecificationExtensions.cs", label="Entry CommandLine.Text.HelpText.AutoBuild<T>(CommandLine.ParserResult<T>)", span="251-251"];
m1_122 [cluster="CommandLine.NoVerbSelectedError.NoVerbSelectedError()", file="SpecificationExtensions.cs", label="Entry CommandLine.NoVerbSelectedError.NoVerbSelectedError()", span="421-421"];
m1_17 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m1_119 [cluster="CommandLine.UnknownOptionError.UnknownOptionError(string)", file="SpecificationExtensions.cs", label="Entry CommandLine.UnknownOptionError.UnknownOptionError(string)", span="280-280"];
m1_6 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Create_instance_without_options()", span="22-22"];
m1_21 [cluster="string.ToNotEmptyLines()", file="SpecificationExtensions.cs", label="Entry string.ToNotEmptyLines()", span="10-10"];
m1_118 [cluster="CommandLine.NameInfo.NameInfo(string, string)", file="SpecificationExtensions.cs", label="Entry CommandLine.NameInfo.NameInfo(string, string)", span="20-20"];
m1_7 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m1_8 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="SpecificationExtensions.cs", label="return spec => spec.ConversionType.ToDescriptor() == DescriptorType.Sequence\r\n                && !spec.IsMinNotSpecified() && !spec.IsMaxNotSpecified() && spec.Min > spec.Max;", span="23-24"];
m1_9 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", file="SpecificationExtensions.cs", label="Exit CommandLine.Core.SpecificationGuards.GuardAgainstSequenceWithWrongRange()", span="21-21"];
m1_14 [cluster="CommandLine.Core.Specification.IsMaxNotSpecified()", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.Specification.IsMaxNotSpecified()", span="81-81"];
m1_15 [cluster="CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", file="SpecificationExtensions.cs", label="Entry CommandLine.Core.SpecificationGuards.GuardAgainstOneCharLongName()", span="27-27"];
m1_102 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m1_103 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new BadFormatTokenError(''badtoken''),\r\n                        new MissingValueOptionError(new NameInfo(''x'', ''switch'')),\r\n                        new UnknownOptionError(''unknown''),\r\n                        new MissingRequiredOptionError(new NameInfo('''', ''missing'')),\r\n                        //new MutuallyExclusiveSetError(new NameInfo(''z'', ''''), string.Empty),\r\n                        new SequenceOutOfRangeError(new NameInfo(''s'', ''sequence'')),\r\n                        new NoVerbSelectedError(),\r\n                        new BadVerbSelectedError(''badverb''),\r\n                        new HelpRequestedError(), // should be ignored\r\n                        new HelpVerbRequestedError(null, null, false) // should be ignored \r\n                    })", span="203-217"];
m1_107 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var lines = errorsText.ToNotEmptyLines()", span="247-247"];
m1_108 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[0].ShouldBeEquivalentTo(''  ERR badtoken'')", span="249-249"];
m1_109 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[1].ShouldBeEquivalentTo(''  ERR x, switch'')", span="250-250"];
m1_110 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''  ERR unknown'')", span="251-251"];
m1_111 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''  ERR missing'')", span="252-252"];
m1_112 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''  ERR s, sequence'')", span="253-253"];
m1_113 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''  ERR no-verb-selected'')", span="254-254"];
m1_114 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[6].ShouldBeEquivalentTo(''  ERR badverb'')", span="255-255"];
m1_104 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Func<Error, string> fakeRenderer = err =>\r\n                {\r\n                    switch (err.Tag)\r\n                    {\r\n                        case ErrorType.BadFormatTokenError:\r\n                            return ''ERR '' + ((BadFormatTokenError)err).Token;\r\n                        case ErrorType.MissingValueOptionError:\r\n                            return ''ERR '' + ((MissingValueOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.UnknownOptionError:\r\n                            return ''ERR '' + ((UnknownOptionError)err).Token;\r\n                        case ErrorType.MissingRequiredOptionError:\r\n                            return ''ERR '' + ((MissingRequiredOptionError)err).NameInfo.NameText;\r\n                        case ErrorType.SequenceOutOfRangeError:\r\n                            return ''ERR '' + ((SequenceOutOfRangeError)err).NameInfo.NameText;\r\n                        case ErrorType.NoVerbSelectedError:\r\n                            return ''ERR no-verb-selected'';\r\n                        case ErrorType.BadVerbSelectedError:\r\n                            return ''ERR '' + ((BadVerbSelectedError)err).Token;\r\n                        default:\r\n                            throw new InvalidOperationException();\r\n                    }\r\n                }", span="218-239"];
m1_106 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var errorsText = HelpText.RenderParsingErrorsText(fakeResult, fakeRenderer, fakeMutExclRenderer, 2)", span="244-244"];
m1_105 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Func<IEnumerable<MutuallyExclusiveSetError>, string> fakeMutExclRenderer =\r\n                _ => string.Empty", span="240-241"];
m1_115 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoking_RenderParsingErrorsText_returns_appropriate_formatted_text()", span="200-200"];
m1_166 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Entry CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m1_167 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var fakeResult = new NotParsed<object>(\r\n                TypeInfo.Create(typeof(NullInstance)),\r\n                new Error[]\r\n                    {\r\n                        new HelpVerbRequestedError(''commit'', typeof(CommitOptions), true)\r\n                    })", span="292-297"];
m1_169 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var lines = helpText.ToString().ToNotEmptyLines().TrimStringArray()", span="303-303"];
m1_172 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[2].ShouldBeEquivalentTo(''-p, --patch    Use the interactive patch selection interface to chose which'')", span="307-307"];
m1_173 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[3].ShouldBeEquivalentTo(''changes to commit.'')", span="308-308"];
m1_174 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[4].ShouldBeEquivalentTo(''--amend        Used to amend the tip of the current branch.'')", span="309-309"];
m1_175 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[5].ShouldBeEquivalentTo(''--help         Display this help screen.'')", span="310-310"];
m1_168 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="var helpText = HelpText.AutoBuild(fakeResult)", span="300-300"];
m1_170 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[0].Should().StartWithEquivalent(''CommandLine'')", span="305-305"];
m1_171 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="lines[1].Should().StartWithEquivalent(''Copyright (c)'')", span="306-306"];
m1_176 [cluster="CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", file="SpecificationExtensions.cs", label="Exit CommandLine.Tests.Unit.Text.HelpTextTests.Invoke_AutoBuild_for_Verbs_with_specific_verb_returns_appropriate_formatted_text()", span="289-289"];
m1_124 [cluster="CommandLine.HelpRequestedError.HelpRequestedError()", file="SpecificationExtensions.cs", label="Entry CommandLine.HelpRequestedError.HelpRequestedError()", span="368-368"];
m1_190 [cluster="System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", file="SpecificationExtensions.cs", label="Entry System.Collections.Generic.IEnumerable<TSource>.Concat<TSource>(System.Collections.Generic.IEnumerable<TSource>)", span="0-0"];
m4_13 [cluster="System.Enum.ToString()", file="TokenPartitionerTests.cs", label="Entry System.Enum.ToString()", span="0-0"];
m4_15 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="Entry Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="32-32"];
m4_24 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", color=green, community=0, file="TokenPartitionerTests.cs", label="return null;", prediction=11, span="50-50"];
m4_18 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label=attrs, span="36-36"];
m4_17 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="var attrs = memberInfo.GetCustomAttributes(true)", span="34-34"];
m4_20 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="attrType.FullName == ''System.ComponentModel.DescriptionAttribute''", span="39-39"];
m4_22 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="descriptionProperty != null", span="42-42"];
m4_19 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="var attrType = attr.GetType()", span="38-38"];
m4_23 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="return descriptionProperty.GetValue(attr, null).ToString();", span="45-45"];
m4_21 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="var descriptionProperty = attrType.GetProperties().FirstOrDefault(DescriptionProperty)", span="41-41"];
m4_25 [cluster="Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", file="TokenPartitionerTests.cs", label="Exit Humanizer.EnumHumanizeExtensions.GetCustomDescription(System.Reflection.MemberInfo)", span="32-32"];
m4_2 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", file="TokenPartitionerTests.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(string)", span="53-53"];
m4_3 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="15-15"];
m4_31 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="TokenPartitionerTests.cs", label="Entry Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="59-59"];
m4_32 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="TokenPartitionerTests.cs", label="var humanizedEnum = Humanize(input)", span="61-61"];
m4_33 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="TokenPartitionerTests.cs", label="return humanizedEnum.ApplyCase(casing);", span="63-63"];
m4_34 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", file="TokenPartitionerTests.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum, Humanizer.LetterCasing)", span="59-59"];
m4_0 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="TokenPartitionerTests.cs", label="Entry CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="44-44"];
m4_1 [cluster="CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", file="TokenPartitionerTests.cs", label="Exit CommandLine.OptionArrayAttribute.OptionArrayAttribute(char)", span="44-44"];
m4_30 [cluster="Unk.ToString", file="TokenPartitionerTests.cs", label="Entry Unk.ToString", span=""];
m4_35 [cluster="string.ApplyCase(Humanizer.LetterCasing)", file="TokenPartitionerTests.cs", label="Entry string.ApplyCase(Humanizer.LetterCasing)", span="15-15"];
m4_28 [cluster="Unk.FirstOrDefault", file="TokenPartitionerTests.cs", label="Entry Unk.FirstOrDefault", span=""];
m4_12 [cluster="object.GetType()", file="TokenPartitionerTests.cs", label="Entry object.GetType()", span="0-0"];
m4_4 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="Type type = input.GetType()", span="17-17"];
m4_5 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="var memInfo = type.GetMember(input.ToString())", span="18-18"];
m4_29 [cluster="Unk.GetValue", file="TokenPartitionerTests.cs", label="Entry Unk.GetValue", span=""];
m4_8 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", color=green, community=0, file="TokenPartitionerTests.cs", label="customDescription != null", prediction=12, span="24-24"];
m4_7 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="var customDescription = GetCustomDescription(memInfo[0])", span="22-22"];
m4_9 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="return customDescription;", span="25-25"];
m4_10 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="return input.ToString().Humanize();", span="28-28"];
m4_6 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="memInfo.Length > 0", span="20-20"];
m4_11 [cluster="Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", file="TokenPartitionerTests.cs", label="Exit Humanizer.EnumHumanizeExtensions.Humanize(System.Enum)", span="15-15"];
m4_26 [cluster="System.Reflection.MemberInfo.GetCustomAttributes(bool)", file="TokenPartitionerTests.cs", label="Entry System.Reflection.MemberInfo.GetCustomAttributes(bool)", span="0-0"];
m4_14 [cluster="System.Type.GetMember(string)", file="TokenPartitionerTests.cs", label="Entry System.Type.GetMember(string)", span="0-0"];
m4_27 [cluster="System.Type.GetProperties()", file="TokenPartitionerTests.cs", label="Entry System.Type.GetProperties()", span="0-0"];
m4_16 [cluster="string.Humanize()", file="TokenPartitionerTests.cs", label="Entry string.Humanize()", span="44-44"];
m5_21 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", span="38-38"];
m5_22 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", file="ValueMapper.cs", label="Assert.Equal(''10 KB'', ByteSize.FromKilobytes(10).ToString(''##.#### KB''))", span="40-40"];
m5_23 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsKilobytes()", span="38-38"];
m5_13 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", span="26-26"];
m5_14 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", file="ValueMapper.cs", label="Assert.Equal(''10 b'', ByteSize.FromBits(10).ToString(''##.#### b''))", span="28-28"];
m5_15 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsBits()", span="26-26"];
m5_0 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", span="8-8"];
m5_1 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", file="ValueMapper.cs", label="Assert.Equal(''10.5 KB'', ByteSize.FromKilobytes(10.5).ToString())", span="10-10"];
m5_2 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricSuffix()", span="8-8"];
m5_5 [cluster="Unk.Equal", file="ValueMapper.cs", label="Entry Unk.Equal", span=""];
m5_42 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", span="74-74"];
m5_43 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", file="ValueMapper.cs", label="Assert.Equal(''-512 KB'', ByteSize.FromMegabytes(-.5).ToString(''#.#''))", span="76-76"];
m5_44 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZeroForNegativeValues()", span="74-74"];
m5_27 [cluster="Humanizer.Bytes.ByteSize.FromMegabytes(double)", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.FromMegabytes(double)", span="108-108"];
m5_24 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", span="44-44"];
m5_25 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", file="ValueMapper.cs", label="Assert.Equal(''10 MB'', ByteSize.FromMegabytes(10).ToString(''##.#### MB''))", span="46-46"];
m5_26 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsMegabytes()", span="44-44"];
m5_3 [cluster="Humanizer.Bytes.ByteSize.FromKilobytes(double)", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.FromKilobytes(double)", span="103-103"];
m5_28 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", span="50-50"];
m5_29 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", file="ValueMapper.cs", label="Assert.Equal(''10 GB'', ByteSize.FromGigabytes(10).ToString(''##.#### GB''))", span="52-52"];
m5_30 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsGigabytes()", span="50-50"];
m5_32 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", span="56-56"];
m5_33 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", file="ValueMapper.cs", label="Assert.Equal(''10 TB'', ByteSize.FromTerabytes(10).ToString(''##.#### TB''))", span="58-58"];
m5_34 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsTerabytes()", span="56-56"];
m5_10 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", span="20-20"];
m5_11 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="ValueMapper.cs", label="Assert.Equal(''10.1234 KB'', ByteSize.FromKilobytes(10.1234).ToString(''#.#### KB''))", span="22-22"];
m5_12 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsProvidedNumberFormat()", span="20-20"];
m5_39 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", span="68-68"];
m5_40 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", file="ValueMapper.cs", label="Assert.Equal(''512 KB'', ByteSize.FromMegabytes(.5).ToString(''#.#''))", span="70-70"];
m5_41 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsLargestMetricPrefixLargerThanZero()", span="68-68"];
m5_31 [cluster="Humanizer.Bytes.ByteSize.FromGigabytes(double)", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.FromGigabytes(double)", span="113-113"];
m5_17 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", span="32-32"];
m5_18 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", file="ValueMapper.cs", label="Assert.Equal(''10 B'', ByteSize.FromBytes(10).ToString(''##.#### B''))", span="34-34"];
m5_19 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsBytes()", span="32-32"];
m5_9 [cluster="Humanizer.Bytes.ByteSize.ToString(string)", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.ToString(string)", span="134-134"];
m5_6 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", span="14-14"];
m5_7 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="ValueMapper.cs", label="Assert.Equal(''10.5 KB'', ByteSize.FromKilobytes(10.5).ToString(''KB''))", span="16-16"];
m5_8 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsDefaultNumberFormat()", span="14-14"];
m5_16 [cluster="Humanizer.Bytes.ByteSize.FromBits(long)", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.FromBits(long)", span="93-93"];
m5_35 [cluster="Humanizer.Bytes.ByteSize.FromTerabytes(double)", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.FromTerabytes(double)", span="118-118"];
m5_20 [cluster="Humanizer.Bytes.ByteSize.FromBytes(double)", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.FromBytes(double)", span="98-98"];
m5_36 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", file="ValueMapper.cs", label="Entry Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", span="62-62"];
m5_37 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", file="ValueMapper.cs", label="Assert.Equal(''10.0 TB'', ByteSize.FromTerabytes(10).ToString(''0.0 TB''))", span="64-64"];
m5_38 [cluster="Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", file="ValueMapper.cs", label="Exit Humanizer.Tests.Bytes.ToStringTests.ReturnsSelectedFormat()", span="62-62"];
m5_4 [cluster="Humanizer.Bytes.ByteSize.ToString()", file="ValueMapper.cs", label="Entry Humanizer.Bytes.ByteSize.ToString()", span="129-129"];
d1 -> d4  [color=darkseagreen4, key=1, label=expected, style=dashed];
m1_52 -> m1_54  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_55  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_56  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_57  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_52 -> m1_58  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_16 -> m1_19  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_24 -> m1_26  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_27  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_28  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_29  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_30  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_31  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_24 -> m1_32  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_72  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_73  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_74  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_70 -> m1_75  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_67 -> m1_69  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_82 -> m1_84  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_85  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_86  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_87  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_82 -> m1_88  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_79 -> m1_81  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_194 -> m1_196  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_197  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_198  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_199  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_200  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_201  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_202  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_194 -> m1_203  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_154  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_155  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_156  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_157  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_158  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_159  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_160  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_152 -> m1_161  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_41 -> m1_43  [color=green, key=1, label=lines, style=dashed];
m1_41 -> m1_44  [color=green, key=1, label=lines, style=dashed];
m1_41 -> m1_45  [color=green, key=1, label=lines, style=dashed];
m1_41 -> m1_46  [color=green, key=1, label=lines, style=dashed];
m1_41 -> m1_47  [color=green, key=1, label=lines, style=dashed];
m1_41 -> m1_48  [color=green, key=1, label=lines, style=dashed];
m1_181 -> m1_183  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_184  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_185  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_186  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_187  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_181 -> m1_188  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_96  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_97  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_98  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_99  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_94 -> m1_100  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_91 -> m1_93  [color=darkseagreen4, key=1, label=sut, style=dashed];
m1_208 -> m1_210  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_211  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_212  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_213  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_214  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_208 -> m1_215  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_127 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_127 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_8 -> m1_10  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_11  [color=darkseagreen4, key=1, label="CommandLine.Core.Specification", style=dashed];
m1_8 -> m1_12  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_13  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_8 -> m1_14  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_109  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_110  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_111  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_112  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_113  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_107 -> m1_114  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_104 -> m1_128  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_130  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_132  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_134  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_136  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_138  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_104 -> m1_142  [color=darkseagreen4, key=1, label="CommandLine.Error", style=dashed];
m1_169 -> m1_171  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_172  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_173  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_174  [color=darkseagreen4, key=1, label=lines, style=dashed];
m1_169 -> m1_175  [color=darkseagreen4, key=1, label=lines, style=dashed];
m4_18 -> m4_23  [color=darkseagreen4, key=1, label=attr, style=dashed];
m4_21 -> m4_23  [color=darkseagreen4, key=1, label=descriptionProperty, style=dashed];
m4_3 -> m4_10  [color=darkseagreen4, key=1, label="System.Enum", style=dashed];
m4_31 -> m4_33  [color=darkseagreen4, key=1, label="Humanizer.LetterCasing", style=dashed];
m4_7 -> m4_9  [color=darkseagreen4, key=1, label=customDescription, style=dashed];
}
